

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Dec 05 14:29:47 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1939
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 20 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 20 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    51  8007  C9E1               	dw 0xFFF9 & 0xFFE7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xF9FF & 0xFFFF & 0xEFFF & 0xD
                                 FFF ;#
    52                           # 21 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 21 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    55  8008  DAFF               	dw 0xFFFF & 0xFFFF & 0xFEFF & 0xFFFF & 0xFBFF & 0xDFFF ;#
    56                           	FNCALL	_main,_catgenie_init
    57                           	FNCALL	_main,_serial_init
    58                           	FNCALL	_main,_printf
    59                           	FNCALL	_main,_timer_init
    60                           	FNCALL	_main,_rtc_init
    61                           	FNCALL	_main,_catsensor_init
    62                           	FNCALL	_main,_water_init
    63                           	FNCALL	_main,_userinterface_init
    64                           	FNCALL	_main,_cmdline_init
    65                           	FNCALL	_main,_litterlanguage_init
    66                           	FNCALL	_main,_interrupt_init
    67                           	FNCALL	_main,_rtc_work
    68                           	FNCALL	_main,_catsensor_work
    69                           	FNCALL	_main,_water_work
    70                           	FNCALL	_main,_catgenie_work
    71                           	FNCALL	_main,_userinterface_work
    72                           	FNCALL	_main,_cmdline_work
    73                           	FNCALL	_main,_litterlanguage_work
    74                           	FNCALL	_litterlanguage_work,_water_detected
    75                           	FNCALL	_litterlanguage_work,_water_filling
    76                           	FNCALL	_litterlanguage_work,_timeoutexpired
    77                           	FNCALL	_litterlanguage_work,_printtime
    78                           	FNCALL	_litterlanguage_work,_printf
    79                           	FNCALL	_litterlanguage_work,_litterlanguage_event
    80                           	FNCALL	_litterlanguage_work,_get_Pump
    81                           	FNCALL	_litterlanguage_work,_timeoutnever
    82                           	FNCALL	_litterlanguage_work,_set_Dosage
    83                           	FNCALL	_litterlanguage_work,_req_instruction
    84                           	FNCALL	_litterlanguage_work,_get_instruction
    85                           	FNCALL	_litterlanguage_work,_eeprom_read
    86                           	FNCALL	_litterlanguage_work,_eeprom_write
    87                           	FNCALL	_litterlanguage_work,_exe_instruction
    88                           	FNCALL	_litterlanguage_work,_wait_instruction
    89                           	FNCALL	_exe_instruction,_printtime
    90                           	FNCALL	_exe_instruction,_printf
    91                           	FNCALL	_exe_instruction,_set_Bowl
    92                           	FNCALL	_exe_instruction,_set_Arm
    93                           	FNCALL	_exe_instruction,_eeprom_read
    94                           	FNCALL	_exe_instruction,_eeprom_write
    95                           	FNCALL	_exe_instruction,_water_detected
    96                           	FNCALL	_exe_instruction,_water_fill
    97                           	FNCALL	_exe_instruction,_settimeout
    98                           	FNCALL	_exe_instruction,_timeoutnever
    99                           	FNCALL	_exe_instruction,_set_Pump
   100                           	FNCALL	_exe_instruction,_set_Dryer
   101                           	FNCALL	_exe_instruction,___lmul
   102                           	FNCALL	_exe_instruction,___wmul
   103                           	FNCALL	_exe_instruction,___lwdiv
   104                           	FNCALL	_exe_instruction,___lwmod
   105                           	FNCALL	_exe_instruction,_set_Dosage
   106                           	FNCALL	_exe_instruction,_memcpy
   107                           	FNCALL	_exe_instruction,_litterlanguage_stop
   108                           	FNCALL	_exe_instruction,_litterlanguage_event
   109                           	FNCALL	_litterlanguage_event,_litterlanguage_stop
   110                           	FNCALL	_litterlanguage_event,_litterlanguage_pause
   111                           	FNCALL	_litterlanguage_event,_set_Beeper
   112                           	FNCALL	_litterlanguage_stop,_printtime
   113                           	FNCALL	_litterlanguage_stop,_printf
   114                           	FNCALL	_litterlanguage_stop,_set_Bowl
   115                           	FNCALL	_litterlanguage_stop,_set_Arm
   116                           	FNCALL	_litterlanguage_stop,_water_fill
   117                           	FNCALL	_litterlanguage_stop,_set_Dosage
   118                           	FNCALL	_litterlanguage_stop,_set_Pump
   119                           	FNCALL	_litterlanguage_stop,_set_Dryer
   120                           	FNCALL	_litterlanguage_stop,_timeoutnever
   121                           	FNCALL	_litterlanguage_stop,_litterlanguage_event
   122                           	FNCALL	_userinterface_work,_timeoutexpired
   123                           	FNCALL	_userinterface_work,_update_autotimer
   124                           	FNCALL	_userinterface_work,_printtime
   125                           	FNCALL	_userinterface_work,_printf
   126                           	FNCALL	_userinterface_work,_litterlanguage_start
   127                           	FNCALL	_userinterface_work,_litterlanguage_running
   128                           	FNCALL	_userinterface_work,_timeoutnow
   129                           	FNCALL	_userinterface_work,_start_short
   130                           	FNCALL	_userinterface_work,_setup_short
   131                           	FNCALL	_userinterface_work,_both_short
   132                           	FNCALL	_userinterface_work,_set_Beeper
   133                           	FNCALL	_userinterface_work,_start_long
   134                           	FNCALL	_userinterface_work,_setup_long
   135                           	FNCALL	_userinterface_work,_both_long
   136                           	FNCALL	_userinterface_work,_timeoutnever
   137                           	FNCALL	_userinterface_work,_update_display
   138                           	FNCALL	_start_long,_litterlanguage_running
   139                           	FNCALL	_start_long,_litterlanguage_start
   140                           	FNCALL	_start_long,_litterlanguage_stop
   141                           	FNCALL	_start_short,_litterlanguage_running
   142                           	FNCALL	_start_short,_litterlanguage_start
   143                           	FNCALL	_start_short,_litterlanguage_paused
   144                           	FNCALL	_start_short,_litterlanguage_pause
   145                           	FNCALL	_catgenie_work,_settimeout
   146                           	FNCALL	_catgenie_work,___bmul
   147                           	FNCALL	_catgenie_work,_timeoutexpired
   148                           	FNCALL	_catgenie_work,_setupbutton_event
   149                           	FNCALL	_catgenie_work,_startbutton_event
   150                           	FNCALL	_catgenie_work,_heatsensor_event
   151                           	FNCALL	_catgenie_work,_timeoutnever
   152                           	FNCALL	_water_work,_timeoutexpired
   153                           	FNCALL	_water_work,_settimeout
   154                           	FNCALL	_water_work,_watersensor_event
   155                           	FNCALL	_setupbutton_event,_process_button
   156                           	FNCALL	_startbutton_event,_process_button
   157                           	FNCALL	_heatsensor_event,_litterlanguage_event
   158                           	FNCALL	_watersensor_event,_printtime
   159                           	FNCALL	_watersensor_event,_printf
   160                           	FNCALL	_watersensor_event,_water_fill
   161                           	FNCALL	_watersensor_event,_timeoutnever
   162                           	FNCALL	_watersensor_event,_litterlanguage_event
   163                           	FNCALL	_litterlanguage_pause,_printtime
   164                           	FNCALL	_litterlanguage_pause,_get_Bowl
   165                           	FNCALL	_litterlanguage_pause,_set_Bowl
   166                           	FNCALL	_litterlanguage_pause,_get_Arm
   167                           	FNCALL	_litterlanguage_pause,_set_Arm
   168                           	FNCALL	_litterlanguage_pause,_water_filling
   169                           	FNCALL	_litterlanguage_pause,_water_fill
   170                           	FNCALL	_litterlanguage_pause,_get_Dosage
   171                           	FNCALL	_litterlanguage_pause,_set_Dosage
   172                           	FNCALL	_litterlanguage_pause,_get_Pump
   173                           	FNCALL	_litterlanguage_pause,_set_Pump
   174                           	FNCALL	_litterlanguage_pause,_get_Dryer
   175                           	FNCALL	_litterlanguage_pause,_set_Dryer
   176                           	FNCALL	_litterlanguage_pause,_gettimestamp
   177                           	FNCALL	_litterlanguage_pause,_timestampdiff
   178                           	FNCALL	_litterlanguage_pause,_timeoutnever
   179                           	FNCALL	_litterlanguage_pause,_printf
   180                           	FNCALL	_litterlanguage_pause,_settimeout
   181                           	FNCALL	_litterlanguage_pause,_litterlanguage_event
   182                           	FNCALL	_cmdline_work,_putch
   183                           	FNCALL	_cmdline_work,_proc_char
   184                           	FNCALL	_cmdline_work,_readch
   185                           	FNCALL	_catsensor_work,_timeoutexpired
   186                           	FNCALL	_catsensor_work,_settimeout
   187                           	FNCALL	_catsensor_work,_timeoutnever
   188                           	FNCALL	_catsensor_work,_catsensor_event
   189                           	FNCALL	_proc_char,_putch
   190                           	FNCALL	_proc_char,_proc_line
   191                           	FNCALL	_proc_char,_printf
   192                           	FNCALL	_catsensor_event,_printtime
   193                           	FNCALL	_catsensor_event,_printf
   194                           	FNCALL	_catsensor_event,_timeoutnever
   195                           	FNCALL	_catsensor_event,_settimeout
   196                           	FNCALL	_catsensor_event,_update_display
   197                           	FNCALL	_process_button,_set_Beeper
   198                           	FNCALL	_process_button,_settimeout
   199                           	FNCALL	_process_button,_timeoutnever
   200                           	FNCALL	_process_button,_update_display
   201                           	FNCALL	_setup_short,_set_mode
   202                           	FNCALL	_setup_short,_settimeout
   203                           	FNCALL	_litterlanguage_init,_printf
   204                           	FNCALL	_litterlanguage_init,_litterlanguage_cleanup
   205                           	FNCALL	_litterlanguage_init,_eeprom_write
   206                           	FNCALL	_litterlanguage_init,_eeprom_read
   207                           	FNCALL	_userinterface_init,_eeprom_write
   208                           	FNCALL	_userinterface_init,_eeprom_read
   209                           	FNCALL	_userinterface_init,_set_mode
   210                           	FNCALL	_userinterface_init,_update_display
   211                           	FNCALL	_proc_line,_strlen
   212                           	FNCALL	_proc_line,_cmd2index
   213                           	FNCALL	_proc_line,_printf
   214                           	FNCALL	_proc_line,___bmul
   215                           	FNCALL	_proc_line,Fake
   216                           	FNCALL	_proc_line,_echo
   217                           	FNCALL	_proc_line,_help
   218                           	FNCALL	_update_display,_set_LED_Error
   219                           	FNCALL	_update_display,_set_LED_Cartridge
   220                           	FNCALL	_update_display,_set_LED
   221                           	FNCALL	_update_display,_set_LED_Cat
   222                           	FNCALL	_update_display,_set_LED_Locked
   223                           	FNCALL	_set_mode,_printf
   224                           	FNCALL	_set_mode,_update_autotimer
   225                           	FNCALL	_set_mode,_timeoutnow
   226                           	FNCALL	_set_mode,_eeprom_write
   227                           	FNCALL	_litterlanguage_start,_printtime
   228                           	FNCALL	_litterlanguage_start,_printf
   229                           	FNCALL	_litterlanguage_cleanup,_printtime
   230                           	FNCALL	_litterlanguage_cleanup,_printf
   231                           	FNCALL	_help,_printf
   232                           	FNCALL	_help,___bmul
   233                           	FNCALL	_echo,_strncmp
   234                           	FNCALL	_echo,_printf
   235                           	FNCALL	_set_LED_Locked,_set_pacer
   236                           	FNCALL	_set_LED_Cat,_set_pacer
   237                           	FNCALL	_set_LED_Cartridge,_set_pacer
   238                           	FNCALL	_set_LED_Error,_set_pacer
   239                           	FNCALL	_set_Beeper,_set_pacer
   240                           	FNCALL	_both_short,_settimeout
   241                           	FNCALL	_update_autotimer,_settimeout
   242                           	FNCALL	_update_autotimer,_postponetimeout
   243                           	FNCALL	_update_autotimer,_timeoutnever
   244                           	FNCALL	_wait_instruction,_timeoutexpired
   245                           	FNCALL	_wait_instruction,_water_detected
   246                           	FNCALL	_wait_instruction,_timeoutnever
   247                           	FNCALL	_wait_instruction,_get_Dosage
   248                           	FNCALL	_printtime,_printf
   249                           	FNCALL	_rtc_work,_timeoutexpired
   250                           	FNCALL	_rtc_work,_postponetimeout
   251                           	FNCALL	_cmdline_init,_printf
   252                           	FNCALL	_rtc_init,_settimeout
   253                           	FNCALL	_cmd2index,___bmul
   254                           	FNCALL	_cmd2index,_strncmp
   255                           	FNCALL	_set_pacer,___bmul
   256                           	FNCALL	_set_pacer,_timeoutnow
   257                           	FNCALL	_both_long,_eeprom_write
   258                           	FNCALL	_settimeout,_gettimestamp
   259                           	FNCALL	_get_instruction,_romwashprogram_getins
   260                           	FNCALL	_req_instruction,_romwashprogram_reqins
   261                           	FNCALL	_timeoutexpired,_gettimestamp
   262                           	FNCALL	_printf,_putch
   263                           	FNCALL	_printf,_isdigit
   264                           	FNCALL	_printf,___wmul
   265                           	FNCALL	_printf,___bmul
   266                           	FNCALL	_printf,___lwdiv
   267                           	FNCALL	_printf,___lwmod
   268                           	FNCALL	_serial_init,___lldiv
   269                           	FNCALL	_catgenie_init,___bmul
   270                           	FNROOT	_main
   271                           	FNCALL	_isr,_timer_isr
   272                           	FNCALL	_isr,_catsensor_isr_timer
   273                           	FNCALL	_isr,_catsensor_isr_input
   274                           	FNCALL	_isr,_serial_rx_isr
   275                           	FNCALL	_isr,_serial_tx_isr
   276                           	FNCALL	intlevel1,_isr
   277                           	global	intlevel1
   278                           	FNROOT	intlevel1
   279                           	global	_cart_level
   280                           	global	_localecho
   281                           	global	_debouncer
   282                           	global	_holdtimeout
   283                           	global	_timer_autodose
   284                           	global	_timer_waitins
   285                           	global	_debouncers
   286                           	global	_pacers
   287                           	global	_autotimer
   288                           	global	_timer_drain
   289                           	global	_timer_fill
   290                           psect	idataBANK0,class=CODE,space=0,delta=2
   291                           global __pidataBANK0
   292  0002                     __pidataBANK0:
   293                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   294                           	line	72
   295                           
   296                           ;initializer for _cart_level
   297  0002  3464               	retlw	064h
   298                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
   299                           	line	35
   300                           
   301                           ;initializer for _localecho
   302  0003  3401               	retlw	01h
   303                           psect	idataBANK2,class=CODE,space=0,delta=2
   304                           global __pidataBANK2
   305  2947                     __pidataBANK2:
   306                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
   307                           	line	36
   308                           
   309                           ;initializer for _debouncer
   310  2947  34FF               	retlw	0FFh
   311  2948  34FF               	retlw	0FFh
   312                           
   313  2949  34FF               	retlw	0FFh
   314  294A  34FF               	retlw	0FFh
   315  294B  34FF               	retlw	0FFh
   316  294C  34FF               	retlw	0FFh
   317                           
   318                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   319                           	line	53
   320                           
   321                           ;initializer for _holdtimeout
   322  294D  34FF               	retlw	0FFh
   323  294E  34FF               	retlw	0FFh
   324                           
   325  294F  34FF               	retlw	0FFh
   326  2950  34FF               	retlw	0FFh
   327  2951  34FF               	retlw	0FFh
   328  2952  34FF               	retlw	0FFh
   329                           
   330                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
   331                           	line	60
   332                           
   333                           ;initializer for _timer_autodose
   334  2953  34FF               	retlw	0FFh
   335  2954  34FF               	retlw	0FFh
   336                           
   337  2955  34FF               	retlw	0FFh
   338  2956  34FF               	retlw	0FFh
   339  2957  34FF               	retlw	0FFh
   340  2958  34FF               	retlw	0FFh
   341                           
   342                           	line	57
   343                           
   344                           ;initializer for _timer_waitins
   345  2959  34FF               	retlw	0FFh
   346  295A  34FF               	retlw	0FFh
   347                           
   348  295B  34FF               	retlw	0FFh
   349  295C  34FF               	retlw	0FFh
   350  295D  34FF               	retlw	0FFh
   351  295E  34FF               	retlw	0FFh
   352                           
   353                           psect	idataBANK3,class=CODE,space=0,delta=2
   354                           global __pidataBANK3
   355  2B3E                     __pidataBANK3:
   356                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
   357                           	line	58
   358                           
   359                           ;initializer for _debouncers
   360  2B3E  34FF               	retlw	0FFh
   361  2B3F  34FF               	retlw	0FFh
   362                           
   363  2B40  34FF               	retlw	0FFh
   364  2B41  34FF               	retlw	0FFh
   365  2B42  34FF               	retlw	0FFh
   366  2B43  34FF               	retlw	0FFh
   367                           
   368  2B44  346A               	retlw	06Ah
   369  2B45  3418               	retlw	018h
   370  2B46  3400               	retlw	0
   371  2B47  3400               	retlw	0
   372                           
   373  2B48  3400               	retlw	0
   374  2B49  340D               	retlw	13&0ffh
   375  2B4A  3401               	retlw	01h
   376  2B4B  3409               	retlw	(fp__startbutton_event-fpbase)&0ffh
   377  2B4C  34FF               	retlw	0FFh
   378  2B4D  34FF               	retlw	0FFh
   379                           
   380  2B4E  34FF               	retlw	0FFh
   381  2B4F  34FF               	retlw	0FFh
   382  2B50  34FF               	retlw	0FFh
   383  2B51  34FF               	retlw	0FFh
   384                           
   385  2B52  346A               	retlw	06Ah
   386  2B53  3418               	retlw	018h
   387  2B54  3400               	retlw	0
   388  2B55  3400               	retlw	0
   389                           
   390  2B56  3400               	retlw	0
   391  2B57  340D               	retlw	13&0ffh
   392  2B58  3420               	retlw	020h
   393  2B59  3405               	retlw	(fp__setupbutton_event-fpbase)&0ffh
   394  2B5A  34FF               	retlw	0FFh
   395  2B5B  34FF               	retlw	0FFh
   396                           
   397  2B5C  34FF               	retlw	0FFh
   398  2B5D  34FF               	retlw	0FFh
   399  2B5E  34FF               	retlw	0FFh
   400  2B5F  34FF               	retlw	0FFh
   401                           
   402  2B60  346A               	retlw	06Ah
   403  2B61  3418               	retlw	018h
   404  2B62  3400               	retlw	0
   405  2B63  3400               	retlw	0
   406                           
   407  2B64  3400               	retlw	0
   408  2B65  340D               	retlw	13&0ffh
   409  2B66  3402               	retlw	02h
   410  2B67  3407               	retlw	(fp__heatsensor_event-fpbase)&0ffh
   411                           psect	idataBANK4,class=CODE,space=0,delta=2
   412                           global __pidataBANK4
   413  2C84                     __pidataBANK4:
   414                           	line	73
   415                           
   416                           ;initializer for _pacers
   417  2C84  3400               	retlw	0
   418  2C85  3400               	retlw	0
   419                           
   420  2C86  3400               	retlw	0
   421  2C87  3400               	retlw	0
   422  2C88  3400               	retlw	0
   423  2C89  3400               	retlw	0
   424                           
   425  2C8A  3401               	retlw	01h
   426  2C8B  3400               	retlw	0
   427  2C8C  3400               	retlw	0
   428  2C8D  340E               	retlw	270&0ffh
   429  2C8E  3402               	retlw	02h
   430  2C8F  3400               	retlw	0
   431  2C90  3400               	retlw	0
   432                           
   433  2C91  3400               	retlw	0
   434  2C92  3400               	retlw	0
   435  2C93  3400               	retlw	0
   436  2C94  3400               	retlw	0
   437                           
   438  2C95  3401               	retlw	01h
   439  2C96  3400               	retlw	0
   440  2C97  3400               	retlw	0
   441  2C98  340E               	retlw	270&0ffh
   442  2C99  3401               	retlw	01h
   443  2C9A  3400               	retlw	0
   444  2C9B  3400               	retlw	0
   445                           
   446  2C9C  3400               	retlw	0
   447  2C9D  3400               	retlw	0
   448  2C9E  3400               	retlw	0
   449  2C9F  3400               	retlw	0
   450                           
   451  2CA0  3401               	retlw	01h
   452  2CA1  3400               	retlw	0
   453  2CA2  3400               	retlw	0
   454  2CA3  3410               	retlw	272&0ffh
   455  2CA4  3404               	retlw	04h
   456  2CA5  3400               	retlw	0
   457  2CA6  3400               	retlw	0
   458                           
   459  2CA7  3400               	retlw	0
   460  2CA8  3400               	retlw	0
   461  2CA9  3400               	retlw	0
   462  2CAA  3400               	retlw	0
   463                           
   464  2CAB  3401               	retlw	01h
   465  2CAC  3400               	retlw	0
   466  2CAD  3400               	retlw	0
   467  2CAE  3410               	retlw	272&0ffh
   468  2CAF  3401               	retlw	01h
   469  2CB0  3400               	retlw	0
   470  2CB1  3400               	retlw	0
   471                           
   472  2CB2  3400               	retlw	0
   473  2CB3  3400               	retlw	0
   474  2CB4  3400               	retlw	0
   475  2CB5  3400               	retlw	0
   476                           
   477  2CB6  3401               	retlw	01h
   478  2CB7  3400               	retlw	0
   479  2CB8  3400               	retlw	0
   480  2CB9  3410               	retlw	272&0ffh
   481  2CBA  3402               	retlw	02h
   482                           psect	idataBANK1,class=CODE,space=0,delta=2
   483                           global __pidataBANK1
   484  28CE                     __pidataBANK1:
   485                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   486                           	line	54
   487                           
   488                           ;initializer for _autotimer
   489  28CE  34FF               	retlw	0FFh
   490  28CF  34FF               	retlw	0FFh
   491                           
   492  28D0  34FF               	retlw	0FFh
   493  28D1  34FF               	retlw	0FFh
   494  28D2  34FF               	retlw	0FFh
   495  28D3  34FF               	retlw	0FFh
   496                           
   497                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
   498                           	line	59
   499                           
   500                           ;initializer for _timer_drain
   501  28D4  34FF               	retlw	0FFh
   502  28D5  34FF               	retlw	0FFh
   503                           
   504  28D6  34FF               	retlw	0FFh
   505  28D7  34FF               	retlw	0FFh
   506  28D8  34FF               	retlw	0FFh
   507  28D9  34FF               	retlw	0FFh
   508                           
   509                           	line	58
   510                           
   511                           ;initializer for _timer_fill
   512  28DA  34FF               	retlw	0FFh
   513  28DB  34FF               	retlw	0FFh
   514                           
   515  28DC  34FF               	retlw	0FFh
   516  28DD  34FF               	retlw	0FFh
   517  28DE  34FF               	retlw	0FFh
   518  28DF  34FF               	retlw	0FFh
   519                           
   520                           	global	_dpowers
   521                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   522                           global __pstringtext
   523  0200                     __pstringtext:
   524                           	global    __stringtab
   525  0200                     __stringtab:
   526  0200  3400               	retlw	0
   527                           psect	stringtext
   528                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   529                           	line	350
   530  0201                     _dpowers:
   531  0201  3401               	retlw	01h
   532  0202  3400               	retlw	0
   533                           
   534  0203  340A               	retlw	0Ah
   535  0204  3400               	retlw	0
   536                           
   537  0205  3464               	retlw	064h
   538  0206  3400               	retlw	0
   539                           
   540  0207  34E8               	retlw	0E8h
   541  0208  3403               	retlw	03h
   542                           
   543  0209  3410               	retlw	010h
   544  020A  3427               	retlw	027h
   545                           
   546                           	global	_hexpowers
   547                           psect	stringtext
   548                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   549                           	line	358
   550  020B                     _hexpowers:
   551  020B  3401               	retlw	01h
   552  020C  3400               	retlw	0
   553                           
   554  020D  3410               	retlw	010h
   555  020E  3400               	retlw	0
   556                           
   557  020F  3400               	retlw	0
   558  0210  3401               	retlw	01h
   559                           
   560  0211  3400               	retlw	0
   561  0212  3410               	retlw	010h
   562                           
   563                           	global	_washprogram
   564                           psect	stringtext
   565                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
   566                           	line	205
   567  0213                     _washprogram:
   568  0213  3400               	retlw	0
   569  0214  340E               	retlw	0Eh
   570  0215  3406               	retlw	06h
   571                           
   572  0216  3401               	retlw	01h
   573  0217  3402               	retlw	02h
   574  0218  3400               	retlw	0
   575                           
   576  0219  3402               	retlw	02h
   577  021A  3401               	retlw	01h
   578  021B  3400               	retlw	0
   579                           
   580  021C  3407               	retlw	07h
   581  021D  34A1               	retlw	0A1h
   582  021E  3433               	retlw	033h
   583                           
   584  021F  3402               	retlw	02h
   585  0220  3400               	retlw	0
   586  0221  3400               	retlw	0
   587                           
   588  0222  3407               	retlw	07h
   589  0223  34DD               	retlw	0DDh
   590  0224  3446               	retlw	046h
   591                           
   592  0225  3401               	retlw	01h
   593  0226  3401               	retlw	01h
   594  0227  3400               	retlw	0
   595                           
   596  0228  3407               	retlw	07h
   597  0229  3439               	retlw	039h
   598  022A  3418               	retlw	018h
   599                           
   600  022B  3401               	retlw	01h
   601  022C  3402               	retlw	02h
   602  022D  3400               	retlw	0
   603                           
   604  022E  3402               	retlw	02h
   605  022F  3401               	retlw	01h
   606  0230  3400               	retlw	0
   607                           
   608  0231  3407               	retlw	07h
   609  0232  3485               	retlw	085h
   610  0233  3416               	retlw	016h
   611                           
   612  0234  3402               	retlw	02h
   613  0235  3402               	retlw	02h
   614  0236  3400               	retlw	0
   615                           
   616  0237  3407               	retlw	07h
   617  0238  3414               	retlw	014h
   618  0239  3402               	retlw	02h
   619                           
   620  023A  3402               	retlw	02h
   621  023B  3400               	retlw	0
   622  023C  3400               	retlw	0
   623                           
   624  023D  3407               	retlw	07h
   625  023E  3476               	retlw	076h
   626  023F  3462               	retlw	062h
   627                           
   628  0240  3402               	retlw	02h
   629  0241  3402               	retlw	02h
   630  0242  3400               	retlw	0
   631                           
   632  0243  3407               	retlw	07h
   633  0244  34AF               	retlw	0AFh
   634  0245  3429               	retlw	029h
   635                           
   636  0246  3402               	retlw	02h
   637  0247  3401               	retlw	01h
   638  0248  3400               	retlw	0
   639                           
   640  0249  3407               	retlw	07h
   641  024A  34CA               	retlw	0CAh
   642  024B  3419               	retlw	019h
   643                           
   644  024C  3402               	retlw	02h
   645  024D  3402               	retlw	02h
   646  024E  3400               	retlw	0
   647                           
   648  024F  3407               	retlw	07h
   649  0250  3434               	retlw	034h
   650  0251  3443               	retlw	043h
   651                           
   652  0252  3402               	retlw	02h
   653  0253  3401               	retlw	01h
   654  0254  3400               	retlw	0
   655                           
   656  0255  3407               	retlw	07h
   657  0256  349F               	retlw	09Fh
   658  0257  3431               	retlw	031h
   659                           
   660  0258  3402               	retlw	02h
   661  0259  3400               	retlw	0
   662  025A  3400               	retlw	0
   663                           
   664  025B  3407               	retlw	07h
   665  025C  345D               	retlw	05Dh
   666  025D  3412               	retlw	012h
   667                           
   668  025E  3402               	retlw	02h
   669  025F  3401               	retlw	01h
   670  0260  3400               	retlw	0
   671                           
   672  0261  3407               	retlw	07h
   673  0262  34C3               	retlw	0C3h
   674  0263  342B               	retlw	02Bh
   675                           
   676  0264  3402               	retlw	02h
   677  0265  3402               	retlw	02h
   678  0266  3400               	retlw	0
   679                           
   680  0267  3407               	retlw	07h
   681  0268  3414               	retlw	014h
   682  0269  3402               	retlw	02h
   683                           
   684  026A  3402               	retlw	02h
   685  026B  3400               	retlw	0
   686  026C  3400               	retlw	0
   687                           
   688  026D  3407               	retlw	07h
   689  026E  3476               	retlw	076h
   690  026F  3462               	retlw	062h
   691                           
   692  0270  3402               	retlw	02h
   693  0271  3402               	retlw	02h
   694  0272  3400               	retlw	0
   695                           
   696  0273  3407               	retlw	07h
   697  0274  34AF               	retlw	0AFh
   698  0275  3429               	retlw	029h
   699                           
   700  0276  3402               	retlw	02h
   701  0277  3401               	retlw	01h
   702  0278  3400               	retlw	0
   703                           
   704  0279  3407               	retlw	07h
   705  027A  34C9               	retlw	0C9h
   706  027B  3419               	retlw	019h
   707                           
   708  027C  3402               	retlw	02h
   709  027D  3402               	retlw	02h
   710  027E  3400               	retlw	0
   711                           
   712  027F  3407               	retlw	07h
   713  0280  34AD               	retlw	0ADh
   714  0281  344E               	retlw	04Eh
   715                           
   716  0282  3401               	retlw	01h
   717  0283  3401               	retlw	01h
   718  0284  3400               	retlw	0
   719                           
   720  0285  3402               	retlw	02h
   721  0286  3401               	retlw	01h
   722  0287  3400               	retlw	0
   723                           
   724  0288  3407               	retlw	07h
   725  0289  3409               	retlw	09h
   726  028A  3455               	retlw	055h
   727                           
   728  028B  3402               	retlw	02h
   729  028C  3402               	retlw	02h
   730  028D  3400               	retlw	0
   731                           
   732  028E  3407               	retlw	07h
   733  028F  34A4               	retlw	0A4h
   734  0290  3403               	retlw	03h
   735                           
   736  0291  3402               	retlw	02h
   737  0292  3400               	retlw	0
   738  0293  3400               	retlw	0
   739                           
   740  0294  340A               	retlw	0Ah
   741  0295  3436               	retlw	036h
   742  0296  3400               	retlw	0
   743                           
   744  0297  3407               	retlw	07h
   745  0298  344C               	retlw	04Ch
   746  0299  342F               	retlw	02Fh
   747                           
   748  029A  3401               	retlw	01h
   749  029B  3402               	retlw	02h
   750  029C  3400               	retlw	0
   751                           
   752  029D  3402               	retlw	02h
   753  029E  3401               	retlw	01h
   754  029F  3400               	retlw	0
   755                           
   756  02A0  3407               	retlw	07h
   757  02A1  34C0               	retlw	0C0h
   758  02A2  340C               	retlw	0Ch
   759                           
   760  02A3  3402               	retlw	02h
   761  02A4  3402               	retlw	02h
   762  02A5  3400               	retlw	0
   763                           
   764  02A6  3407               	retlw	07h
   765  02A7  3414               	retlw	014h
   766  02A8  3402               	retlw	02h
   767                           
   768  02A9  3402               	retlw	02h
   769  02AA  3400               	retlw	0
   770  02AB  3400               	retlw	0
   771                           
   772  02AC  3407               	retlw	07h
   773  02AD  348E               	retlw	08Eh
   774  02AE  345E               	retlw	05Eh
   775                           
   776  02AF  3402               	retlw	02h
   777  02B0  3402               	retlw	02h
   778  02B1  3400               	retlw	0
   779                           
   780  02B2  3407               	retlw	07h
   781  02B3  344B               	retlw	04Bh
   782  02B4  3429               	retlw	029h
   783                           
   784  02B5  3402               	retlw	02h
   785  02B6  3401               	retlw	01h
   786  02B7  3400               	retlw	0
   787                           
   788  02B8  3407               	retlw	07h
   789  02B9  34CA               	retlw	0CAh
   790  02BA  3419               	retlw	019h
   791                           
   792  02BB  3402               	retlw	02h
   793  02BC  3402               	retlw	02h
   794  02BD  3400               	retlw	0
   795                           
   796  02BE  3407               	retlw	07h
   797  02BF  34F5               	retlw	0F5h
   798  02C0  3442               	retlw	042h
   799                           
   800  02C1  3402               	retlw	02h
   801  02C2  3400               	retlw	0
   802  02C3  3400               	retlw	0
   803                           
   804  02C4  3401               	retlw	01h
   805  02C5  3400               	retlw	0
   806  02C6  3400               	retlw	0
   807                           
   808  02C7  3408               	retlw	08h
   809  02C8  3400               	retlw	0
   810  02C9  3400               	retlw	0
   811                           
   812  02CA  3403               	retlw	03h
   813  02CB  3401               	retlw	01h
   814  02CC  3400               	retlw	0
   815                           
   816  02CD  3401               	retlw	01h
   817  02CE  3401               	retlw	01h
   818  02CF  3400               	retlw	0
   819                           
   820  02D0  3407               	retlw	07h
   821  02D1  3450               	retlw	050h
   822  02D2  3449               	retlw	049h
   823                           
   824  02D3  3402               	retlw	02h
   825  02D4  3401               	retlw	01h
   826  02D5  3400               	retlw	0
   827                           
   828  02D6  3407               	retlw	07h
   829  02D7  3476               	retlw	076h
   830  02D8  3462               	retlw	062h
   831                           
   832  02D9  3402               	retlw	02h
   833  02DA  3402               	retlw	02h
   834  02DB  3400               	retlw	0
   835                           
   836  02DC  3407               	retlw	07h
   837  02DD  346C               	retlw	06Ch
   838  02DE  3404               	retlw	04h
   839                           
   840  02DF  3402               	retlw	02h
   841  02E0  3400               	retlw	0
   842  02E1  3400               	retlw	0
   843                           
   844  02E2  3408               	retlw	08h
   845  02E3  3401               	retlw	01h
   846  02E4  3400               	retlw	0
   847                           
   848  02E5  3407               	retlw	07h
   849  02E6  345E               	retlw	05Eh
   850  02E7  34F8               	retlw	0F8h
   851                           
   852  02E8  340C               	retlw	0Ch
   853  02E9  34AD               	retlw	low(_drain)
   854  02EA  3404               	retlw	high(_drain)
   855                           
   856  02EB  3403               	retlw	03h
   857  02EC  3401               	retlw	01h
   858  02ED  3400               	retlw	0
   859                           
   860  02EE  3407               	retlw	07h
   861  02EF  347A               	retlw	07Ah
   862  02F0  34D8               	retlw	0D8h
   863                           
   864  02F1  3401               	retlw	01h
   865  02F2  3402               	retlw	02h
   866  02F3  3400               	retlw	0
   867                           
   868  02F4  3406               	retlw	06h
   869  02F5  3403               	retlw	03h
   870  02F6  3400               	retlw	0
   871                           
   872  02F7  3409               	retlw	09h
   873  02F8  3400               	retlw	0
   874  02F9  3400               	retlw	0
   875                           
   876  02FA  3401               	retlw	01h
   877  02FB  3401               	retlw	01h
   878  02FC  3400               	retlw	0
   879                           
   880  02FD  3408               	retlw	08h
   881  02FE  3401               	retlw	01h
   882  02FF  3400               	retlw	0
   883                           
   884  0300  3407               	retlw	07h
   885  0301  34E2               	retlw	0E2h
   886  0302  34AB               	retlw	0ABh
   887                           
   888  0303  340C               	retlw	0Ch
   889  0304  34AD               	retlw	low(_drain)
   890  0305  3404               	retlw	high(_drain)
   891                           
   892  0306  3403               	retlw	03h
   893  0307  3401               	retlw	01h
   894  0308  3400               	retlw	0
   895                           
   896  0309  3407               	retlw	07h
   897  030A  349E               	retlw	09Eh
   898  030B  3463               	retlw	063h
   899                           
   900  030C  3402               	retlw	02h
   901  030D  3401               	retlw	01h
   902  030E  3400               	retlw	0
   903                           
   904  030F  3407               	retlw	07h
   905  0310  34D5               	retlw	0D5h
   906  0311  3452               	retlw	052h
   907                           
   908  0312  3402               	retlw	02h
   909  0313  3402               	retlw	02h
   910  0314  3400               	retlw	0
   911                           
   912  0315  3401               	retlw	01h
   913  0316  3400               	retlw	0
   914  0317  3400               	retlw	0
   915                           
   916  0318  3406               	retlw	06h
   917  0319  340B               	retlw	0Bh
   918  031A  3400               	retlw	0
   919                           
   920  031B  3407               	retlw	07h
   921  031C  346C               	retlw	06Ch
   922  031D  3404               	retlw	04h
   923                           
   924  031E  3402               	retlw	02h
   925  031F  3400               	retlw	0
   926  0320  3400               	retlw	0
   927                           
   928  0321  3409               	retlw	09h
   929  0322  3400               	retlw	0
   930  0323  3400               	retlw	0
   931                           
   932  0324  3401               	retlw	01h
   933  0325  3402               	retlw	02h
   934  0326  3400               	retlw	0
   935                           
   936  0327  3407               	retlw	07h
   937  0328  34D1               	retlw	0D1h
   938  0329  3414               	retlw	014h
   939                           
   940  032A  3401               	retlw	01h
   941  032B  3401               	retlw	01h
   942  032C  3400               	retlw	0
   943                           
   944  032D  3407               	retlw	07h
   945  032E  34BA               	retlw	0BAh
   946  032F  34D8               	retlw	0D8h
   947                           
   948  0330  3408               	retlw	08h
   949  0331  3401               	retlw	01h
   950  0332  3400               	retlw	0
   951                           
   952  0333  3407               	retlw	07h
   953  0334  34C3               	retlw	0C3h
   954  0335  3498               	retlw	098h
   955                           
   956  0336  340C               	retlw	0Ch
   957  0337  3442               	retlw	low(_drain_dry)
   958  0338  3403               	retlw	high(_drain_dry)
   959                           
   960  0339  340C               	retlw	0Ch
   961  033A  3459               	retlw	low(_surface)
   962  033B  3404               	retlw	high(_surface)
   963                           
   964  033C  3401               	retlw	01h
   965  033D  3400               	retlw	0
   966  033E  3400               	retlw	0
   967                           
   968  033F  340E               	retlw	0Eh
   969  0340  3400               	retlw	0
   970  0341  3400               	retlw	0
   971                           
   972                           	global	_drain_dry
   973                           psect	stringtext
   974                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
   975                           	line	54
   976  0342                     _drain_dry:
   977  0342  3404               	retlw	04h
   978  0343  3401               	retlw	01h
   979  0344  3400               	retlw	0
   980                           
   981  0345  3401               	retlw	01h
   982  0346  3402               	retlw	02h
   983  0347  3400               	retlw	0
   984                           
   985  0348  3407               	retlw	07h
   986  0349  34FF               	retlw	0FFh
   987  034A  34FF               	retlw	0FFh
   988                           
   989  034B  3401               	retlw	01h
   990  034C  3401               	retlw	01h
   991  034D  3400               	retlw	0
   992                           
   993  034E  3407               	retlw	07h
   994  034F  345B               	retlw	05Bh
   995  0350  3427               	retlw	027h
   996                           
   997  0351  3401               	retlw	01h
   998  0352  3400               	retlw	0
   999  0353  3400               	retlw	0
  1000                           
  1001  0354  3406               	retlw	06h
  1002  0355  340A               	retlw	0Ah
  1003  0356  3400               	retlw	0
  1004                           
  1005  0357  3409               	retlw	09h
  1006  0358  3400               	retlw	0
  1007  0359  3400               	retlw	0
  1008                           
  1009  035A  3401               	retlw	01h
  1010  035B  3401               	retlw	01h
  1011  035C  3400               	retlw	0
  1012                           
  1013  035D  3407               	retlw	07h
  1014  035E  34B6               	retlw	0B6h
  1015  035F  3462               	retlw	062h
  1016                           
  1017  0360  3401               	retlw	01h
  1018  0361  3402               	retlw	02h
  1019  0362  3400               	retlw	0
  1020                           
  1021  0363  3405               	retlw	05h
  1022  0364  3401               	retlw	01h
  1023  0365  3400               	retlw	0
  1024                           
  1025  0366  3407               	retlw	07h
  1026  0367  342C               	retlw	02Ch
  1027  0368  348A               	retlw	08Ah
  1028                           
  1029  0369  3401               	retlw	01h
  1030  036A  3401               	retlw	01h
  1031  036B  3400               	retlw	0
  1032                           
  1033  036C  3407               	retlw	07h
  1034  036D  34D9               	retlw	0D9h
  1035  036E  34D8               	retlw	0D8h
  1036                           
  1037  036F  3401               	retlw	01h
  1038  0370  3402               	retlw	02h
  1039  0371  3400               	retlw	0
  1040                           
  1041  0372  3407               	retlw	07h
  1042  0373  34CD               	retlw	0CDh
  1043  0374  3489               	retlw	089h
  1044                           
  1045  0375  3404               	retlw	04h
  1046  0376  3400               	retlw	0
  1047  0377  3400               	retlw	0
  1048                           
  1049  0378  3407               	retlw	07h
  1050  0379  34C4               	retlw	0C4h
  1051  037A  3406               	retlw	06h
  1052                           
  1053  037B  3401               	retlw	01h
  1054  037C  3401               	retlw	01h
  1055  037D  3400               	retlw	0
  1056                           
  1057  037E  3407               	retlw	07h
  1058  037F  34DA               	retlw	0DAh
  1059  0380  34D8               	retlw	0D8h
  1060                           
  1061  0381  3401               	retlw	01h
  1062  0382  3402               	retlw	02h
  1063  0383  3400               	retlw	0
  1064                           
  1065  0384  3407               	retlw	07h
  1066  0385  34ED               	retlw	0EDh
  1067  0386  3489               	retlw	089h
  1068                           
  1069  0387  3401               	retlw	01h
  1070  0388  3401               	retlw	01h
  1071  0389  3400               	retlw	0
  1072                           
  1073  038A  3407               	retlw	07h
  1074  038B  34DA               	retlw	0DAh
  1075  038C  34D8               	retlw	0D8h
  1076                           
  1077  038D  3401               	retlw	01h
  1078  038E  3402               	retlw	02h
  1079  038F  3400               	retlw	0
  1080                           
  1081  0390  3407               	retlw	07h
  1082  0391  34ED               	retlw	0EDh
  1083  0392  3489               	retlw	089h
  1084                           
  1085  0393  3401               	retlw	01h
  1086  0394  3401               	retlw	01h
  1087  0395  3400               	retlw	0
  1088                           
  1089  0396  3407               	retlw	07h
  1090  0397  3463               	retlw	063h
  1091  0398  34B1               	retlw	0B1h
  1092                           
  1093  0399  3401               	retlw	01h
  1094  039A  3402               	retlw	02h
  1095  039B  3400               	retlw	0
  1096                           
  1097  039C  3407               	retlw	07h
  1098  039D  344C               	retlw	04Ch
  1099  039E  348A               	retlw	08Ah
  1100                           
  1101  039F  3402               	retlw	02h
  1102  03A0  3402               	retlw	02h
  1103  03A1  3400               	retlw	0
  1104                           
  1105  03A2  3407               	retlw	07h
  1106  03A3  34FC               	retlw	0FCh
  1107  03A4  3426               	retlw	026h
  1108                           
  1109  03A5  3402               	retlw	02h
  1110  03A6  3400               	retlw	0
  1111  03A7  3400               	retlw	0
  1112                           
  1113  03A8  3401               	retlw	01h
  1114  03A9  3400               	retlw	0
  1115  03AA  3400               	retlw	0
  1116                           
  1117  03AB  3406               	retlw	06h
  1118  03AC  3403               	retlw	03h
  1119  03AD  3400               	retlw	0
  1120                           
  1121  03AE  3409               	retlw	09h
  1122  03AF  3400               	retlw	0
  1123  03B0  3400               	retlw	0
  1124                           
  1125  03B1  3401               	retlw	01h
  1126  03B2  3402               	retlw	02h
  1127  03B3  3400               	retlw	0
  1128                           
  1129  03B4  3407               	retlw	07h
  1130  03B5  3410               	retlw	010h
  1131  03B6  3415               	retlw	015h
  1132                           
  1133  03B7  3402               	retlw	02h
  1134  03B8  3401               	retlw	01h
  1135  03B9  3400               	retlw	0
  1136                           
  1137  03BA  3407               	retlw	07h
  1138  03BB  343F               	retlw	03Fh
  1139  03BC  3428               	retlw	028h
  1140                           
  1141  03BD  3402               	retlw	02h
  1142  03BE  3400               	retlw	0
  1143  03BF  3400               	retlw	0
  1144                           
  1145  03C0  3407               	retlw	07h
  1146  03C1  34AD               	retlw	0ADh
  1147  03C2  3489               	retlw	089h
  1148                           
  1149  03C3  3401               	retlw	01h
  1150  03C4  3401               	retlw	01h
  1151  03C5  3400               	retlw	0
  1152                           
  1153  03C6  3407               	retlw	07h
  1154  03C7  3463               	retlw	063h
  1155  03C8  34B1               	retlw	0B1h
  1156                           
  1157  03C9  3401               	retlw	01h
  1158  03CA  3402               	retlw	02h
  1159  03CB  3400               	retlw	0
  1160                           
  1161  03CC  3407               	retlw	07h
  1162  03CD  34ED               	retlw	0EDh
  1163  03CE  3489               	retlw	089h
  1164                           
  1165  03CF  3401               	retlw	01h
  1166  03D0  3401               	retlw	01h
  1167  03D1  3400               	retlw	0
  1168                           
  1169  03D2  3407               	retlw	07h
  1170  03D3  3463               	retlw	063h
  1171  03D4  34B1               	retlw	0B1h
  1172                           
  1173  03D5  3401               	retlw	01h
  1174  03D6  3402               	retlw	02h
  1175  03D7  3400               	retlw	0
  1176                           
  1177  03D8  3407               	retlw	07h
  1178  03D9  344C               	retlw	04Ch
  1179  03DA  348A               	retlw	08Ah
  1180                           
  1181  03DB  3402               	retlw	02h
  1182  03DC  3402               	retlw	02h
  1183  03DD  3400               	retlw	0
  1184                           
  1185  03DE  3407               	retlw	07h
  1186  03DF  348C               	retlw	08Ch
  1187  03E0  3428               	retlw	028h
  1188                           
  1189  03E1  3402               	retlw	02h
  1190  03E2  3400               	retlw	0
  1191  03E3  3400               	retlw	0
  1192                           
  1193  03E4  3401               	retlw	01h
  1194  03E5  3400               	retlw	0
  1195  03E6  3400               	retlw	0
  1196                           
  1197  03E7  3406               	retlw	06h
  1198  03E8  3403               	retlw	03h
  1199  03E9  3400               	retlw	0
  1200                           
  1201  03EA  3409               	retlw	09h
  1202  03EB  3400               	retlw	0
  1203  03EC  3400               	retlw	0
  1204                           
  1205  03ED  3401               	retlw	01h
  1206  03EE  3402               	retlw	02h
  1207  03EF  3400               	retlw	0
  1208                           
  1209  03F0  3407               	retlw	07h
  1210  03F1  3428               	retlw	028h
  1211  03F2  3411               	retlw	011h
  1212                           
  1213  03F3  3402               	retlw	02h
  1214  03F4  3401               	retlw	01h
  1215  03F5  3400               	retlw	0
  1216                           
  1217  03F6  3407               	retlw	07h
  1218  03F7  3433               	retlw	033h
  1219  03F8  342A               	retlw	02Ah
  1220                           
  1221  03F9  3402               	retlw	02h
  1222  03FA  3400               	retlw	0
  1223  03FB  3400               	retlw	0
  1224                           
  1225  03FC  3407               	retlw	07h
  1226  03FD  34AD               	retlw	0ADh
  1227  03FE  3489               	retlw	089h
  1228                           
  1229  03FF  3401               	retlw	01h
  1230  0400  3401               	retlw	01h
  1231  0401  3400               	retlw	0
  1232                           
  1233  0402  3407               	retlw	07h
  1234  0403  34ED               	retlw	0EDh
  1235  0404  3489               	retlw	089h
  1236                           
  1237  0405  3401               	retlw	01h
  1238  0406  3402               	retlw	02h
  1239  0407  3400               	retlw	0
  1240                           
  1241  0408  3407               	retlw	07h
  1242  0409  34ED               	retlw	0EDh
  1243  040A  3489               	retlw	089h
  1244                           
  1245  040B  3401               	retlw	01h
  1246  040C  3401               	retlw	01h
  1247  040D  3400               	retlw	0
  1248                           
  1249  040E  3407               	retlw	07h
  1250  040F  34EC               	retlw	0ECh
  1251  0410  3489               	retlw	089h
  1252                           
  1253  0411  3401               	retlw	01h
  1254  0412  3402               	retlw	02h
  1255  0413  3400               	retlw	0
  1256                           
  1257  0414  3407               	retlw	07h
  1258  0415  344C               	retlw	04Ch
  1259  0416  348A               	retlw	08Ah
  1260                           
  1261  0417  3402               	retlw	02h
  1262  0418  3402               	retlw	02h
  1263  0419  3400               	retlw	0
  1264                           
  1265  041A  3407               	retlw	07h
  1266  041B  34EF               	retlw	0EFh
  1267  041C  342C               	retlw	02Ch
  1268                           
  1269  041D  3402               	retlw	02h
  1270  041E  3400               	retlw	0
  1271  041F  3400               	retlw	0
  1272                           
  1273  0420  3407               	retlw	07h
  1274  0421  3479               	retlw	079h
  1275  0422  3408               	retlw	08h
  1276                           
  1277  0423  3402               	retlw	02h
  1278  0424  3401               	retlw	01h
  1279  0425  3400               	retlw	0
  1280                           
  1281  0426  3407               	retlw	07h
  1282  0427  34B7               	retlw	0B7h
  1283  0428  342D               	retlw	02Dh
  1284                           
  1285  0429  3402               	retlw	02h
  1286  042A  3400               	retlw	0
  1287  042B  3400               	retlw	0
  1288                           
  1289  042C  3407               	retlw	07h
  1290  042D  3423               	retlw	023h
  1291  042E  34B1               	retlw	0B1h
  1292                           
  1293  042F  3401               	retlw	01h
  1294  0430  3401               	retlw	01h
  1295  0431  3400               	retlw	0
  1296                           
  1297  0432  3407               	retlw	07h
  1298  0433  34ED               	retlw	0EDh
  1299  0434  3489               	retlw	089h
  1300                           
  1301  0435  3401               	retlw	01h
  1302  0436  3402               	retlw	02h
  1303  0437  3400               	retlw	0
  1304                           
  1305  0438  3407               	retlw	07h
  1306  0439  3463               	retlw	063h
  1307  043A  34B1               	retlw	0B1h
  1308                           
  1309  043B  3401               	retlw	01h
  1310  043C  3401               	retlw	01h
  1311  043D  3400               	retlw	0
  1312                           
  1313  043E  3407               	retlw	07h
  1314  043F  34ED               	retlw	0EDh
  1315  0440  3489               	retlw	089h
  1316                           
  1317  0441  3401               	retlw	01h
  1318  0442  3402               	retlw	02h
  1319  0443  3400               	retlw	0
  1320                           
  1321  0444  3407               	retlw	07h
  1322  0445  3463               	retlw	063h
  1323  0446  34B1               	retlw	0B1h
  1324                           
  1325  0447  3401               	retlw	01h
  1326  0448  3401               	retlw	01h
  1327  0449  3400               	retlw	0
  1328                           
  1329  044A  3407               	retlw	07h
  1330  044B  34EC               	retlw	0ECh
  1331  044C  3489               	retlw	089h
  1332                           
  1333  044D  3401               	retlw	01h
  1334  044E  3402               	retlw	02h
  1335  044F  3400               	retlw	0
  1336                           
  1337  0450  3407               	retlw	07h
  1338  0451  3463               	retlw	063h
  1339  0452  34B1               	retlw	0B1h
  1340                           
  1341  0453  3401               	retlw	01h
  1342  0454  3401               	retlw	01h
  1343  0455  3400               	retlw	0
  1344                           
  1345  0456  340D               	retlw	0Dh
  1346  0457  3400               	retlw	0
  1347  0458  3400               	retlw	0
  1348                           
  1349                           	global	_surface
  1350                           psect	stringtext
  1351                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1352                           	line	150
  1353  0459                     _surface:
  1354  0459  3407               	retlw	07h
  1355  045A  344C               	retlw	04Ch
  1356  045B  348A               	retlw	08Ah
  1357                           
  1358  045C  3402               	retlw	02h
  1359  045D  3402               	retlw	02h
  1360  045E  3400               	retlw	0
  1361                           
  1362  045F  3407               	retlw	07h
  1363  0460  342C               	retlw	02Ch
  1364  0461  3401               	retlw	01h
  1365                           
  1366  0462  3402               	retlw	02h
  1367  0463  3400               	retlw	0
  1368  0464  3400               	retlw	0
  1369                           
  1370  0465  3407               	retlw	07h
  1371  0466  34AB               	retlw	0ABh
  1372  0467  342F               	retlw	02Fh
  1373                           
  1374  0468  3402               	retlw	02h
  1375  0469  3402               	retlw	02h
  1376  046A  3400               	retlw	0
  1377                           
  1378  046B  3407               	retlw	07h
  1379  046C  342C               	retlw	02Ch
  1380  046D  3401               	retlw	01h
  1381                           
  1382  046E  3402               	retlw	02h
  1383  046F  3400               	retlw	0
  1384  0470  3400               	retlw	0
  1385                           
  1386  0471  3407               	retlw	07h
  1387  0472  34AB               	retlw	0ABh
  1388  0473  342F               	retlw	02Fh
  1389                           
  1390  0474  3402               	retlw	02h
  1391  0475  3402               	retlw	02h
  1392  0476  3400               	retlw	0
  1393                           
  1394  0477  3407               	retlw	07h
  1395  0478  342C               	retlw	02Ch
  1396  0479  3401               	retlw	01h
  1397                           
  1398  047A  3402               	retlw	02h
  1399  047B  3400               	retlw	0
  1400  047C  3400               	retlw	0
  1401                           
  1402  047D  3407               	retlw	07h
  1403  047E  34DB               	retlw	0DBh
  1404  047F  3427               	retlw	027h
  1405                           
  1406  0480  3402               	retlw	02h
  1407  0481  3402               	retlw	02h
  1408  0482  3400               	retlw	0
  1409                           
  1410  0483  3407               	retlw	07h
  1411  0484  342C               	retlw	02Ch
  1412  0485  3401               	retlw	01h
  1413                           
  1414  0486  3402               	retlw	02h
  1415  0487  3400               	retlw	0
  1416  0488  3400               	retlw	0
  1417                           
  1418  0489  3407               	retlw	07h
  1419  048A  34DA               	retlw	0DAh
  1420  048B  3427               	retlw	027h
  1421                           
  1422  048C  3402               	retlw	02h
  1423  048D  3402               	retlw	02h
  1424  048E  3400               	retlw	0
  1425                           
  1426  048F  3407               	retlw	07h
  1427  0490  34D2               	retlw	0D2h
  1428  0491  3423               	retlw	023h
  1429                           
  1430  0492  3402               	retlw	02h
  1431  0493  3401               	retlw	01h
  1432  0494  3400               	retlw	0
  1433                           
  1434  0495  3407               	retlw	07h
  1435  0496  344A               	retlw	04Ah
  1436  0497  3419               	retlw	019h
  1437                           
  1438  0498  3405               	retlw	05h
  1439  0499  3400               	retlw	0
  1440  049A  3400               	retlw	0
  1441                           
  1442  049B  3402               	retlw	02h
  1443  049C  3402               	retlw	02h
  1444  049D  3400               	retlw	0
  1445                           
  1446  049E  3407               	retlw	07h
  1447  049F  345C               	retlw	05Ch
  1448  04A0  3447               	retlw	047h
  1449                           
  1450  04A1  3402               	retlw	02h
  1451  04A2  3401               	retlw	01h
  1452  04A3  3400               	retlw	0
  1453                           
  1454  04A4  3407               	retlw	07h
  1455  04A5  3410               	retlw	010h
  1456  04A6  340B               	retlw	0Bh
  1457                           
  1458  04A7  3402               	retlw	02h
  1459  04A8  3400               	retlw	0
  1460  04A9  3400               	retlw	0
  1461                           
  1462  04AA  340D               	retlw	0Dh
  1463  04AB  3400               	retlw	0
  1464  04AC  3400               	retlw	0
  1465                           
  1466                           	global	_drain
  1467                           psect	stringtext
  1468                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1469                           	line	30
  1470  04AD                     _drain:
  1471  04AD  3404               	retlw	04h
  1472  04AE  3401               	retlw	01h
  1473  04AF  3400               	retlw	0
  1474                           
  1475  04B0  3407               	retlw	07h
  1476  04B1  3476               	retlw	076h
  1477  04B2  3462               	retlw	062h
  1478                           
  1479  04B3  3404               	retlw	04h
  1480  04B4  3400               	retlw	0
  1481  04B5  3400               	retlw	0
  1482                           
  1483  04B6  3407               	retlw	07h
  1484  04B7  34FF               	retlw	0FFh
  1485  04B8  34FF               	retlw	0FFh
  1486                           
  1487  04B9  3407               	retlw	07h
  1488  04BA  34C7               	retlw	0C7h
  1489  04BB  3427               	retlw	027h
  1490                           
  1491  04BC  3404               	retlw	04h
  1492  04BD  3401               	retlw	01h
  1493  04BE  3400               	retlw	0
  1494                           
  1495  04BF  3407               	retlw	07h
  1496  04C0  348E               	retlw	08Eh
  1497  04C1  345E               	retlw	05Eh
  1498                           
  1499  04C2  3404               	retlw	04h
  1500  04C3  3400               	retlw	0
  1501  04C4  3400               	retlw	0
  1502                           
  1503  04C5  3407               	retlw	07h
  1504  04C6  340A               	retlw	0Ah
  1505  04C7  3420               	retlw	020h
  1506                           
  1507  04C8  3404               	retlw	04h
  1508  04C9  3401               	retlw	01h
  1509  04CA  3400               	retlw	0
  1510                           
  1511  04CB  3407               	retlw	07h
  1512  04CC  348E               	retlw	08Eh
  1513  04CD  345E               	retlw	05Eh
  1514                           
  1515  04CE  3404               	retlw	04h
  1516  04CF  3400               	retlw	0
  1517  04D0  3400               	retlw	0
  1518                           
  1519  04D1  3407               	retlw	07h
  1520  04D2  340A               	retlw	0Ah
  1521  04D3  3420               	retlw	020h
  1522                           
  1523  04D4  3404               	retlw	04h
  1524  04D5  3401               	retlw	01h
  1525  04D6  3400               	retlw	0
  1526                           
  1527  04D7  3407               	retlw	07h
  1528  04D8  34FF               	retlw	0FFh
  1529  04D9  34FF               	retlw	0FFh
  1530                           
  1531  04DA  3407               	retlw	07h
  1532  04DB  34C7               	retlw	0C7h
  1533  04DC  3427               	retlw	027h
  1534                           
  1535  04DD  3404               	retlw	04h
  1536  04DE  3400               	retlw	0
  1537  04DF  3400               	retlw	0
  1538                           
  1539  04E0  3401               	retlw	01h
  1540  04E1  3400               	retlw	0
  1541  04E2  3400               	retlw	0
  1542                           
  1543  04E3  3408               	retlw	08h
  1544  04E4  3400               	retlw	0
  1545  04E5  3400               	retlw	0
  1546                           
  1547  04E6  3401               	retlw	01h
  1548  04E7  3401               	retlw	01h
  1549  04E8  3400               	retlw	0
  1550                           
  1551  04E9  340D               	retlw	0Dh
  1552  04EA  3400               	retlw	0
  1553  04EB  3400               	retlw	0
  1554                           
  1555                           	global	_cleanupprogram
  1556                           psect	stringtext
  1557                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1558                           	line	181
  1559  04EC                     _cleanupprogram:
  1560  04EC  3400               	retlw	0
  1561  04ED  340E               	retlw	0Eh
  1562  04EE  3406               	retlw	06h
  1563                           
  1564  04EF  3401               	retlw	01h
  1565  04F0  3401               	retlw	01h
  1566  04F1  3400               	retlw	0
  1567                           
  1568  04F2  3402               	retlw	02h
  1569  04F3  3401               	retlw	01h
  1570  04F4  3400               	retlw	0
  1571                           
  1572  04F5  3407               	retlw	07h
  1573  04F6  3409               	retlw	09h
  1574  04F7  3455               	retlw	055h
  1575                           
  1576  04F8  3402               	retlw	02h
  1577  04F9  3402               	retlw	02h
  1578  04FA  3400               	retlw	0
  1579                           
  1580  04FB  3407               	retlw	07h
  1581  04FC  34A4               	retlw	0A4h
  1582  04FD  3403               	retlw	03h
  1583                           
  1584  04FE  3402               	retlw	02h
  1585  04FF  3400               	retlw	0
  1586  0500  3400               	retlw	0
  1587                           
  1588  0501  340A               	retlw	0Ah
  1589  0502  3401               	retlw	01h
  1590  0503  3400               	retlw	0
  1591                           
  1592  0504  340C               	retlw	0Ch
  1593  0505  3442               	retlw	low(_drain_dry)
  1594  0506  3403               	retlw	high(_drain_dry)
  1595                           
  1596  0507  340C               	retlw	0Ch
  1597  0508  3459               	retlw	low(_surface)
  1598  0509  3404               	retlw	high(_surface)
  1599                           
  1600  050A  3401               	retlw	01h
  1601  050B  3400               	retlw	0
  1602  050C  3400               	retlw	0
  1603                           
  1604  050D  340E               	retlw	0Eh
  1605  050E  3400               	retlw	0
  1606  050F  3400               	retlw	0
  1607                           
  1608                           	global	_commands
  1609                           psect	stringtext
  1610                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  1611                           	line	53
  1612  0510                     _commands:
  1613  0510  343F               	retlw	03Fh
  1614  0511  3400               	retlw	0
  1615  0512  3400               	retlw	0
  1616  0513  3400               	retlw	0
  1617  0514  3400               	retlw	0
  1618  0515  3400               	retlw	0
  1619  0516  3400               	retlw	0
  1620  0517  3400               	retlw	0
  1621  0518  3401               	retlw	(fp__help-fpbase)&0ffh
  1622  0519  3468               	retlw	068h
  1623  051A  3465               	retlw	065h
  1624  051B  346C               	retlw	06Ch
  1625  051C  3470               	retlw	070h
  1626  051D  3400               	retlw	0
  1627  051E  3400               	retlw	0
  1628  051F  3400               	retlw	0
  1629  0520  3400               	retlw	0
  1630  0521  3401               	retlw	(fp__help-fpbase)&0ffh
  1631  0522  3465               	retlw	065h
  1632  0523  3463               	retlw	063h
  1633  0524  3468               	retlw	068h
  1634  0525  346F               	retlw	06Fh
  1635  0526  3400               	retlw	0
  1636  0527  3400               	retlw	0
  1637  0528  3400               	retlw	0
  1638  0529  3400               	retlw	0
  1639  052A  3403               	retlw	(fp__echo-fpbase)&0ffh
  1640  052B  3400               	retlw	0
  1641  052C  3400               	retlw	0
  1642  052D  3400               	retlw	0
  1643  052E  3400               	retlw	0
  1644  052F  3400               	retlw	0
  1645  0530  3400               	retlw	0
  1646  0531  3400               	retlw	0
  1647  0532  3400               	retlw	0
  1648  0533  3400               	retlw	0
  1649                           	global	_dpowers
  1650                           	global	_hexpowers
  1651                           	global	_washprogram
  1652                           	global	_drain_dry
  1653                           	global	_surface
  1654                           	global	_drain
  1655                           	global	_cleanupprogram
  1656                           	global	_commands
  1657                           	global	_auto_mode
  1658                           	global	_error_nr
  1659                           	global	_hysteresis
  1660                           	global	_ins_state
  1661                           	global	_state
  1662                           	global	proc_char@curcolumn
  1663                           	global	_detected
  1664                           	global	_detected_dbc
  1665                           	global	_filling
  1666                           	global	_ledalwayson
  1667                           	global	_wet_program
  1668                           	global	litterlanguage_pause@context
  1669                           	global	_rx
  1670                           	global	_uptime
  1671                           	global	_cat_detected
  1672                           	global	_cat_present
  1673                           	global	_detected_cur
  1674                           	global	_detected_old
  1675                           	global	_echoed
  1676                           	global	_error_drain
  1677                           	global	_error_execution
  1678                           	global	_error_fill
  1679                           	global	_error_flood
  1680                           	global	_error_overheat
  1681                           	global	_full_wash
  1682                           	global	_locked
  1683                           	global	_longhandled
  1684                           	global	_paused
  1685                           	global	_pinging
  1686                           	global	_currenttime
  1687                           	global	_overflows
  1688                           	global	_ins_address
  1689                           	global	_reflectionquality
  1690                           	global	exe_instruction@ret_address
  1691                           	global	_PORTB_old
  1692                           	global	_buttonmask_cum
  1693                           	global	_buttonmask_cur
  1694                           	global	_buttonmask_evt
  1695                           	global	_interval
  1696                           	global	_panel_mode
  1697                           	global	_prg_source
  1698                           	global	catgenie120@PORTB_old
  1699                           	global	water@state
  1700                           	global	_cur_instruction
  1701                           	global	_ins_pointer
  1702                           	global	_cartridgetimeout
  1703                           	global	_cattimer
  1704                           	global	_pingtime
  1705                           	global	_second
  1706                           	global	_sensortimer
  1707                           	global	_linebuffer
  1708                           	global	___resetbits
  1709  0020                     ___resetbits	set	32
  1710                           	DABS	1,32,1	;___resetbits
  1711                           
  1712                           	global	___powerdown
  1713  0103                     ___powerdown	set	259
  1714                           	DABS	1,32,1	;___powerdown
  1715                           
  1716                           	global	___timeout
  1717  0104                     ___timeout	set	260
  1718                           	DABS	1,32,1	;___timeout
  1719                           
  1720                           	global	_PORTA
  1721  000C                     _PORTA	set	12
  1722                           	global	_PORTC
  1723  000E                     _PORTC	set	14
  1724                           	global	_PORTD
  1725  000F                     _PORTD	set	15
  1726                           	global	_PORTE
  1727  0010                     _PORTE	set	16
  1728                           	global	_PR2
  1729  001B                     _PR2	set	27
  1730                           	global	_T2CON
  1731  001C                     _T2CON	set	28
  1732                           	global	_TMR1H
  1733  0017                     _TMR1H	set	23
  1734                           	global	_TMR1L
  1735  0016                     _TMR1L	set	22
  1736                           	global	_CARRY
  1737  0018                     _CARRY	set	24
  1738                           	global	_GIE
  1739  005F                     _GIE	set	95
  1740                           	global	_IOCIE
  1741  005B                     _IOCIE	set	91
  1742                           	global	_IOCIF
  1743  0058                     _IOCIF	set	88
  1744                           	global	_PEIE
  1745  005E                     _PEIE	set	94
  1746                           	global	_RCIF
  1747  008D                     _RCIF	set	141
  1748                           	global	_T1CKPS0
  1749  00C4                     _T1CKPS0	set	196
  1750                           	global	_T1CKPS1
  1751  00C5                     _T1CKPS1	set	197
  1752                           	global	_T1OSCEN
  1753  00C3                     _T1OSCEN	set	195
  1754                           	global	_TMR1CS0
  1755  00C6                     _TMR1CS0	set	198
  1756                           	global	_TMR1CS1
  1757  00C7                     _TMR1CS1	set	199
  1758                           	global	_TMR1IF
  1759  0088                     _TMR1IF	set	136
  1760                           	global	_TMR1ON
  1761  00C0                     _TMR1ON	set	192
  1762                           	global	_TMR2IF
  1763  0089                     _TMR2IF	set	137
  1764                           	global	_TMR2ON
  1765  00E2                     _TMR2ON	set	226
  1766                           	global	_TXIF
  1767  008C                     _TXIF	set	140
  1768                           	global	_nT1SYNC
  1769  00C2                     _nT1SYNC	set	194
  1770                           	global	_ADRES
  1771  009B                     _ADRES	set	155
  1772                           	global	_ADCON0bits
  1773  009D                     _ADCON0bits	set	157
  1774                           	global	_ADCON1bits
  1775  009E                     _ADCON1bits	set	158
  1776                           	global	_TRISA
  1777  008C                     _TRISA	set	140
  1778                           	global	_TRISB
  1779  008D                     _TRISB	set	141
  1780                           	global	_TRISC
  1781  008E                     _TRISC	set	142
  1782                           	global	_TRISD
  1783  008F                     _TRISD	set	143
  1784                           	global	_TRISE
  1785  0090                     _TRISE	set	144
  1786                           	global	_RCIE
  1787  048D                     _RCIE	set	1165
  1788                           	global	_TMR1IE
  1789  0488                     _TMR1IE	set	1160
  1790                           	global	_TMR2IE
  1791  0489                     _TMR2IE	set	1161
  1792                           	global	_TXIE
  1793  048C                     _TXIE	set	1164
  1794                           	global	_nBOR
  1795  04B0                     _nBOR	set	1200
  1796                           	global	_nPOR
  1797  04B1                     _nPOR	set	1201
  1798                           	global	_nWPUEN
  1799  04AF                     _nWPUEN	set	1199
  1800                           	global	_LATB
  1801  010D                     _LATB	set	269
  1802                           	global	_LATD
  1803  010F                     _LATD	set	271
  1804                           	global	_EEADR
  1805  0191                     _EEADR	set	401
  1806                           	global	_ANSELA
  1807  018C                     _ANSELA	set	396
  1808                           	global	_ANSELB
  1809  018D                     _ANSELB	set	397
  1810                           	global	_ANSELD
  1811  018F                     _ANSELD	set	399
  1812                           	global	_ANSELE
  1813  0190                     _ANSELE	set	400
  1814                           	global	_EECON1
  1815  0195                     _EECON1	set	405
  1816                           	global	_EECON2
  1817  0196                     _EECON2	set	406
  1818                           	global	_EEDATA
  1819  0193                     _EEDATA	set	403
  1820                           	global	_RCREG
  1821  0199                     _RCREG	set	409
  1822                           	global	_SPBRG
  1823  019B                     _SPBRG	set	411
  1824                           	global	_SPBRGH
  1825  019C                     _SPBRGH	set	412
  1826                           	global	_TXREG
  1827  019A                     _TXREG	set	410
  1828                           	global	_BRG16
  1829  0CFB                     _BRG16	set	3323
  1830                           	global	_BRGH
  1831  0CF2                     _BRGH	set	3314
  1832                           	global	_CREN
  1833  0CEC                     _CREN	set	3308
  1834                           	global	_CSRC
  1835  0CF7                     _CSRC	set	3319
  1836                           	global	_FERR
  1837  0CEA                     _FERR	set	3306
  1838                           	global	_OERR
  1839  0CE9                     _OERR	set	3305
  1840                           	global	_RD
  1841  0CA8                     _RD	set	3240
  1842                           	global	_RX9
  1843  0CEE                     _RX9	set	3310
  1844                           	global	_SPEN
  1845  0CEF                     _SPEN	set	3311
  1846                           	global	_SYNC
  1847  0CF4                     _SYNC	set	3316
  1848                           	global	_TX9
  1849  0CF6                     _TX9	set	3318
  1850                           	global	_TXEN
  1851  0CF5                     _TXEN	set	3317
  1852                           	global	_WR
  1853  0CA9                     _WR	set	3241
  1854                           	global	_WREN
  1855  0CAA                     _WREN	set	3242
  1856                           	global	_WPUB
  1857  020D                     _WPUB	set	525
  1858                           	global	_WPUE
  1859  0210                     _WPUE	set	528
  1860                           	global	_CCP1CON
  1861  0293                     _CCP1CON	set	659
  1862                           	global	_CCPR1L
  1863  0291                     _CCPR1L	set	657
  1864                           	global	_IOCBF
  1865  0396                     _IOCBF	set	918
  1866                           	global	_IOCBN
  1867  0395                     _IOCBN	set	917
  1868                           	global	_IOCBP
  1869  0394                     _IOCBP	set	916
  1870                           	global	_PORTB
  1871  000D                     _PORTB	set	13
  1872                           	global	_LATA
  1873  010C                     _LATA	set	268
  1874                           	global	_LATC
  1875  010E                     _LATC	set	270
  1876                           	global	_LATE
  1877  0110                     _LATE	set	272
  1878                           	
  1879  0534                     STR_82:	
  1880  0534  3449               	retlw	73	;'I'
  1881  0535  344E               	retlw	78	;'N'
  1882  0536  3453               	retlw	83	;'S'
  1883  0537  345F               	retlw	95	;'_'
  1884  0538  3441               	retlw	65	;'A'
  1885  0539  3455               	retlw	85	;'U'
  1886  053A  3454               	retlw	84	;'T'
  1887  053B  344F               	retlw	79	;'O'
  1888  053C  3444               	retlw	68	;'D'
  1889  053D  344F               	retlw	79	;'O'
  1890  053E  3453               	retlw	83	;'S'
  1891  053F  3445               	retlw	69	;'E'
  1892  0540  342C               	retlw	44	;','
  1893  0541  3420               	retlw	32	;' '
  1894  0542  3425               	retlw	37	;'%'
  1895  0543  3475               	retlw	117	;'u'
  1896  0544  342E               	retlw	46	;'.'
  1897  0545  3425               	retlw	37	;'%'
  1898  0546  3475               	retlw	117	;'u'
  1899  0547  346D               	retlw	109	;'m'
  1900  0548  346C               	retlw	108	;'l'
  1901  0549  3425               	retlw	37	;'%'
  1902  054A  3473               	retlw	115	;'s'
  1903  054B  3400               	retlw	0
  1904                           psect	stringtext
  1905                           	
  1906  054C                     STR_105:	
  1907  054C  3455               	retlw	85	;'U'
  1908  054D  346E               	retlw	110	;'n'
  1909  054E  346B               	retlw	107	;'k'
  1910  054F  346E               	retlw	110	;'n'
  1911  0550  346F               	retlw	111	;'o'
  1912  0551  3477               	retlw	119	;'w'
  1913  0552  346E               	retlw	110	;'n'
  1914  0553  3420               	retlw	32	;' '
  1915  0554  3463               	retlw	99	;'c'
  1916  0555  346F               	retlw	111	;'o'
  1917  0556  346D               	retlw	109	;'m'
  1918  0557  346D               	retlw	109	;'m'
  1919  0558  3461               	retlw	97	;'a'
  1920  0559  346E               	retlw	110	;'n'
  1921  055A  3464               	retlw	100	;'d'
  1922  055B  3420               	retlw	32	;' '
  1923  055C  3427               	retlw	39	;'''
  1924  055D  3425               	retlw	37	;'%'
  1925  055E  3473               	retlw	115	;'s'
  1926  055F  3427               	retlw	39	;'''
  1927  0560  340A               	retlw	10
  1928  0561  3400               	retlw	0
  1929                           psect	stringtext
  1930                           	
  1931  0562                     STR_88:	
  1932  0562  3449               	retlw	73	;'I'
  1933  0563  344E               	retlw	78	;'N'
  1934  0564  3453               	retlw	83	;'S'
  1935  0565  345F               	retlw	95	;'_'
  1936  0566  3453               	retlw	83	;'S'
  1937  0567  3454               	retlw	84	;'T'
  1938  0568  3441               	retlw	65	;'A'
  1939  0569  3452               	retlw	82	;'R'
  1940  056A  3454               	retlw	84	;'T'
  1941  056B  342C               	retlw	44	;','
  1942  056C  3420               	retlw	32	;' '
  1943  056D  3475               	retlw	117	;'u'
  1944  056E  346E               	retlw	110	;'n'
  1945  056F  3465               	retlw	101	;'e'
  1946  0570  3478               	retlw	120	;'x'
  1947  0571  3470               	retlw	112	;'p'
  1948  0572  3465               	retlw	101	;'e'
  1949  0573  3463               	retlw	99	;'c'
  1950  0574  3474               	retlw	116	;'t'
  1951  0575  3465               	retlw	101	;'e'
  1952  0576  3464               	retlw	100	;'d'
  1953  0577  3400               	retlw	0
  1954                           psect	stringtext
  1955                           	
  1956  0578                     STR_24:	
  1957  0578  3453               	retlw	83	;'S'
  1958  0579  3474               	retlw	116	;'t'
  1959  057A  3461               	retlw	97	;'a'
  1960  057B  3472               	retlw	114	;'r'
  1961  057C  3474               	retlw	116	;'t'
  1962  057D  3469               	retlw	105	;'i'
  1963  057E  346E               	retlw	110	;'n'
  1964  057F  3467               	retlw	103	;'g'
  1965  0580  3420               	retlw	32	;' '
  1966  0581  3425               	retlw	37	;'%'
  1967  0582  3473               	retlw	115	;'s'
  1968  0583  3420               	retlw	32	;' '
  1969  0584  3470               	retlw	112	;'p'
  1970  0585  3472               	retlw	114	;'r'
  1971  0586  346F               	retlw	111	;'o'
  1972  0587  3467               	retlw	103	;'g'
  1973  0588  3472               	retlw	114	;'r'
  1974  0589  3461               	retlw	97	;'a'
  1975  058A  346D               	retlw	109	;'m'
  1976  058B  340A               	retlw	10
  1977  058C  3400               	retlw	0
  1978                           psect	stringtext
  1979                           	
  1980  058D                     STR_36:	
  1981  058D  3453               	retlw	83	;'S'
  1982  058E  3474               	retlw	116	;'t'
  1983  058F  3461               	retlw	97	;'a'
  1984  0590  3472               	retlw	114	;'r'
  1985  0591  3474               	retlw	116	;'t'
  1986  0592  3469               	retlw	105	;'i'
  1987  0593  346E               	retlw	110	;'n'
  1988  0594  3467               	retlw	103	;'g'
  1989  0595  3420               	retlw	32	;' '
  1990  0596  3425               	retlw	37	;'%'
  1991  0597  3473               	retlw	115	;'s'
  1992  0598  3420               	retlw	32	;' '
  1993  0599  3463               	retlw	99	;'c'
  1994  059A  346C               	retlw	108	;'l'
  1995  059B  3465               	retlw	101	;'e'
  1996  059C  3461               	retlw	97	;'a'
  1997  059D  346E               	retlw	110	;'n'
  1998  059E  3475               	retlw	117	;'u'
  1999  059F  3470               	retlw	112	;'p'
  2000  05A0  340A               	retlw	10
  2001  05A1  3400               	retlw	0
  2002                           psect	stringtext
  2003                           	
  2004  05A2                     STR_91:	
  2005  05A2  3441               	retlw	65	;'A'
  2006  05A3  3475               	retlw	117	;'u'
  2007  05A4  3474               	retlw	116	;'t'
  2008  05A5  346F               	retlw	111	;'o'
  2009  05A6  3474               	retlw	116	;'t'
  2010  05A7  3469               	retlw	105	;'i'
  2011  05A8  346D               	retlw	109	;'m'
  2012  05A9  3465               	retlw	101	;'e'
  2013  05AA  3472               	retlw	114	;'r'
  2014  05AB  3420               	retlw	32	;' '
  2015  05AC  3465               	retlw	101	;'e'
  2016  05AD  3478               	retlw	120	;'x'
  2017  05AE  3470               	retlw	112	;'p'
  2018  05AF  3469               	retlw	105	;'i'
  2019  05B0  3472               	retlw	114	;'r'
  2020  05B1  3465               	retlw	101	;'e'
  2021  05B2  3464               	retlw	100	;'d'
  2022  05B3  343A               	retlw	58	;':'
  2023  05B4  3420               	retlw	32	;' '
  2024  05B5  3400               	retlw	0
  2025                           psect	stringtext
  2026                           	
  2027  05B6                     STR_14:	
  2028  05B6  3457               	retlw	87	;'W'
  2029  05B7  3465               	retlw	101	;'e'
  2030  05B8  3474               	retlw	116	;'t'
  2031  05B9  3420               	retlw	32	;' '
  2032  05BA  3463               	retlw	99	;'c'
  2033  05BB  346C               	retlw	108	;'l'
  2034  05BC  3465               	retlw	101	;'e'
  2035  05BD  3461               	retlw	97	;'a'
  2036  05BE  346E               	retlw	110	;'n'
  2037  05BF  3475               	retlw	117	;'u'
  2038  05C0  3470               	retlw	112	;'p'
  2039  05C1  3420               	retlw	32	;' '
  2040  05C2  3466               	retlw	102	;'f'
  2041  05C3  346F               	retlw	111	;'o'
  2042  05C4  3472               	retlw	114	;'r'
  2043  05C5  3463               	retlw	99	;'c'
  2044  05C6  3465               	retlw	101	;'e'
  2045  05C7  3464               	retlw	100	;'d'
  2046  05C8  340A               	retlw	10
  2047  05C9  3400               	retlw	0
  2048                           psect	stringtext
  2049                           	
  2050  05CA                     STR_68:	
  2051  05CA  3449               	retlw	73	;'I'
  2052  05CB  344E               	retlw	78	;'N'
  2053  05CC  3453               	retlw	83	;'S'
  2054  05CD  345F               	retlw	95	;'_'
  2055  05CE  3457               	retlw	87	;'W'
  2056  05CF  3441               	retlw	65	;'A'
  2057  05D0  3449               	retlw	73	;'I'
  2058  05D1  3454               	retlw	84	;'T'
  2059  05D2  3457               	retlw	87	;'W'
  2060  05D3  3441               	retlw	65	;'A'
  2061  05D4  3454               	retlw	84	;'T'
  2062  05D5  3445               	retlw	69	;'E'
  2063  05D6  3452               	retlw	82	;'R'
  2064  05D7  342C               	retlw	44	;','
  2065  05D8  3420               	retlw	32	;' '
  2066  05D9  3425               	retlw	37	;'%'
  2067  05DA  3473               	retlw	115	;'s'
  2068  05DB  3425               	retlw	37	;'%'
  2069  05DC  3473               	retlw	115	;'s'
  2070  05DD  3400               	retlw	0
  2071                           psect	stringtext
  2072                           	
  2073  05DE                     STR_79:	
  2074  05DE  3449               	retlw	73	;'I'
  2075  05DF  344E               	retlw	78	;'N'
  2076  05E0  3453               	retlw	83	;'S'
  2077  05E1  345F               	retlw	95	;'_'
  2078  05E2  3453               	retlw	83	;'S'
  2079  05E3  344B               	retlw	75	;'K'
  2080  05E4  3449               	retlw	73	;'I'
  2081  05E5  3450               	retlw	80	;'P'
  2082  05E6  3449               	retlw	73	;'I'
  2083  05E7  3446               	retlw	70	;'F'
  2084  05E8  3457               	retlw	87	;'W'
  2085  05E9  3445               	retlw	69	;'E'
  2086  05EA  3454               	retlw	84	;'T'
  2087  05EB  342C               	retlw	44	;','
  2088  05EC  3420               	retlw	32	;' '
  2089  05ED  3425               	retlw	37	;'%'
  2090  05EE  3475               	retlw	117	;'u'
  2091  05EF  3425               	retlw	37	;'%'
  2092  05F0  3473               	retlw	115	;'s'
  2093  05F1  3400               	retlw	0
  2094                           psect	stringtext
  2095                           	
  2096  05F2                     STR_76:	
  2097  05F2  3449               	retlw	73	;'I'
  2098  05F3  344E               	retlw	78	;'N'
  2099  05F4  3453               	retlw	83	;'S'
  2100  05F5  345F               	retlw	95	;'_'
  2101  05F6  3453               	retlw	83	;'S'
  2102  05F7  344B               	retlw	75	;'K'
  2103  05F8  3449               	retlw	73	;'I'
  2104  05F9  3450               	retlw	80	;'P'
  2105  05FA  3449               	retlw	73	;'I'
  2106  05FB  3446               	retlw	70	;'F'
  2107  05FC  3444               	retlw	68	;'D'
  2108  05FD  3452               	retlw	82	;'R'
  2109  05FE  3459               	retlw	89	;'Y'
  2110  05FF  342C               	retlw	44	;','
  2111  0600  3420               	retlw	32	;' '
  2112  0601  3425               	retlw	37	;'%'
  2113  0602  3475               	retlw	117	;'u'
  2114  0603  3425               	retlw	37	;'%'
  2115  0604  3473               	retlw	115	;'s'
  2116  0605  3400               	retlw	0
  2117                           psect	stringtext
  2118                           	
  2119  0606                     STR_1:	
  2120  0606  340A               	retlw	10
  2121  0607  342A               	retlw	42	;'*'
  2122  0608  342A               	retlw	42	;'*'
  2123  0609  342A               	retlw	42	;'*'
  2124  060A  3420               	retlw	32	;' '
  2125  060B  3443               	retlw	67	;'C'
  2126  060C  3461               	retlw	97	;'a'
  2127  060D  3474               	retlw	116	;'t'
  2128  060E  3447               	retlw	71	;'G'
  2129  060F  3465               	retlw	101	;'e'
  2130  0610  346E               	retlw	110	;'n'
  2131  0611  3469               	retlw	105	;'i'
  2132  0612  3475               	retlw	117	;'u'
  2133  0613  3473               	retlw	115	;'s'
  2134  0614  3420               	retlw	32	;' '
  2135  0615  342A               	retlw	42	;'*'
  2136  0616  342A               	retlw	42	;'*'
  2137  0617  342A               	retlw	42	;'*'
  2138  0618  340A               	retlw	10
  2139  0619  3400               	retlw	0
  2140                           psect	stringtext
  2141                           	
  2142  061A                     STR_86:	
  2143  061A  3449               	retlw	73	;'I'
  2144  061B  344E               	retlw	78	;'N'
  2145  061C  3453               	retlw	83	;'S'
  2146  061D  345F               	retlw	95	;'_'
  2147  061E  3452               	retlw	82	;'R'
  2148  061F  3445               	retlw	69	;'E'
  2149  0620  3454               	retlw	84	;'T'
  2150  0621  3455               	retlw	85	;'U'
  2151  0622  3452               	retlw	82	;'R'
  2152  0623  344E               	retlw	78	;'N'
  2153  0624  342C               	retlw	44	;','
  2154  0625  3420               	retlw	32	;' '
  2155  0626  3430               	retlw	48	;'0'
  2156  0627  3478               	retlw	120	;'x'
  2157  0628  3425               	retlw	37	;'%'
  2158  0629  3430               	retlw	48	;'0'
  2159  062A  3434               	retlw	52	;'4'
  2160  062B  3458               	retlw	88	;'X'
  2161  062C  3400               	retlw	0
  2162                           psect	stringtext
  2163                           	
  2164  062D                     STR_67:	
  2165  062D  3449               	retlw	73	;'I'
  2166  062E  344E               	retlw	78	;'N'
  2167  062F  3453               	retlw	83	;'S'
  2168  0630  345F               	retlw	95	;'_'
  2169  0631  3457               	retlw	87	;'W'
  2170  0632  3441               	retlw	65	;'A'
  2171  0633  3449               	retlw	73	;'I'
  2172  0634  3454               	retlw	84	;'T'
  2173  0635  3454               	retlw	84	;'T'
  2174  0636  3449               	retlw	73	;'I'
  2175  0637  344D               	retlw	77	;'M'
  2176  0638  3445               	retlw	69	;'E'
  2177  0639  342C               	retlw	44	;','
  2178  063A  3420               	retlw	32	;' '
  2179  063B  3425               	retlw	37	;'%'
  2180  063C  3475               	retlw	117	;'u'
  2181  063D  346D               	retlw	109	;'m'
  2182  063E  3473               	retlw	115	;'s'
  2183  063F  3400               	retlw	0
  2184                           psect	stringtext
  2185                           	
  2186  0640                     STR_5:	
  2187  0640  3450               	retlw	80	;'P'
  2188  0641  3469               	retlw	105	;'i'
  2189  0642  346E               	retlw	110	;'n'
  2190  0643  3420               	retlw	32	;' '
  2191  0644  3472               	retlw	114	;'r'
  2192  0645  3465               	retlw	101	;'e'
  2193  0646  3473               	retlw	115	;'s'
  2194  0647  3465               	retlw	101	;'e'
  2195  0648  3474               	retlw	116	;'t'
  2196  0649  3420               	retlw	32	;' '
  2197  064A  3428               	retlw	40	;'('
  2198  064B  3473               	retlw	115	;'s'
  2199  064C  346C               	retlw	108	;'l'
  2200  064D  3465               	retlw	101	;'e'
  2201  064E  3465               	retlw	101	;'e'
  2202  064F  3470               	retlw	112	;'p'
  2203  0650  3429               	retlw	41	;')'
  2204  0651  340A               	retlw	10
  2205  0652  3400               	retlw	0
  2206                           psect	stringtext
  2207                           	
  2208  0653                     STR_8:	
  2209  0653  3453               	retlw	83	;'S'
  2210  0654  3465               	retlw	101	;'e'
  2211  0655  3474               	retlw	116	;'t'
  2212  0656  3475               	retlw	117	;'u'
  2213  0657  3470               	retlw	112	;'p'
  2214  0658  3420               	retlw	32	;' '
  2215  0659  3462               	retlw	98	;'b'
  2216  065A  3475               	retlw	117	;'u'
  2217  065B  3474               	retlw	116	;'t'
  2218  065C  3474               	retlw	116	;'t'
  2219  065D  346F               	retlw	111	;'o'
  2220  065E  346E               	retlw	110	;'n'
  2221  065F  3420               	retlw	32	;' '
  2222  0660  3468               	retlw	104	;'h'
  2223  0661  3465               	retlw	101	;'e'
  2224  0662  346C               	retlw	108	;'l'
  2225  0663  3464               	retlw	100	;'d'
  2226  0664  340A               	retlw	10
  2227  0665  3400               	retlw	0
  2228                           psect	stringtext
  2229                           	
  2230  0666                     STR_7:	
  2231  0666  3453               	retlw	83	;'S'
  2232  0667  3474               	retlw	116	;'t'
  2233  0668  3461               	retlw	97	;'a'
  2234  0669  3472               	retlw	114	;'r'
  2235  066A  3474               	retlw	116	;'t'
  2236  066B  3420               	retlw	32	;' '
  2237  066C  3462               	retlw	98	;'b'
  2238  066D  3475               	retlw	117	;'u'
  2239  066E  3474               	retlw	116	;'t'
  2240  066F  3474               	retlw	116	;'t'
  2241  0670  346F               	retlw	111	;'o'
  2242  0671  346E               	retlw	110	;'n'
  2243  0672  3420               	retlw	32	;' '
  2244  0673  3468               	retlw	104	;'h'
  2245  0674  3465               	retlw	101	;'e'
  2246  0675  346C               	retlw	108	;'l'
  2247  0676  3464               	retlw	100	;'d'
  2248  0677  340A               	retlw	10
  2249  0678  3400               	retlw	0
  2250                           psect	stringtext
  2251                           	
  2252  0679                     STR_94:	
  2253  0679  3443               	retlw	67	;'C'
  2254  067A  3461               	retlw	97	;'a'
  2255  067B  3474               	retlw	116	;'t'
  2256  067C  3474               	retlw	116	;'t'
  2257  067D  3469               	retlw	105	;'i'
  2258  067E  346D               	retlw	109	;'m'
  2259  067F  3465               	retlw	101	;'e'
  2260  0680  3472               	retlw	114	;'r'
  2261  0681  3420               	retlw	32	;' '
  2262  0682  3465               	retlw	101	;'e'
  2263  0683  3478               	retlw	120	;'x'
  2264  0684  3470               	retlw	112	;'p'
  2265  0685  3469               	retlw	105	;'i'
  2266  0686  3472               	retlw	114	;'r'
  2267  0687  3465               	retlw	101	;'e'
  2268  0688  3464               	retlw	100	;'d'
  2269  0689  340A               	retlw	10
  2270  068A  3400               	retlw	0
  2271                           psect	stringtext
  2272                           	
  2273  068B                     STR_28:	
  2274  068B  3452               	retlw	82	;'R'
  2275  068C  3465               	retlw	101	;'e'
  2276  068D  3473               	retlw	115	;'s'
  2277  068E  3475               	retlw	117	;'u'
  2278  068F  346D               	retlw	109	;'m'
  2279  0690  3469               	retlw	105	;'i'
  2280  0691  346E               	retlw	110	;'n'
  2281  0692  3467               	retlw	103	;'g'
  2282  0693  3420               	retlw	32	;' '
  2283  0694  3470               	retlw	112	;'p'
  2284  0695  3472               	retlw	114	;'r'
  2285  0696  346F               	retlw	111	;'o'
  2286  0697  3467               	retlw	103	;'g'
  2287  0698  3472               	retlw	114	;'r'
  2288  0699  3461               	retlw	97	;'a'
  2289  069A  346D               	retlw	109	;'m'
  2290  069B  340A               	retlw	10
  2291  069C  3400               	retlw	0
  2292                           psect	stringtext
  2293                           	
  2294  069D                     STR_29:	
  2295  069D  3453               	retlw	83	;'S'
  2296  069E  3474               	retlw	116	;'t'
  2297  069F  346F               	retlw	111	;'o'
  2298  06A0  3470               	retlw	112	;'p'
  2299  06A1  3470               	retlw	112	;'p'
  2300  06A2  3469               	retlw	105	;'i'
  2301  06A3  346E               	retlw	110	;'n'
  2302  06A4  3467               	retlw	103	;'g'
  2303  06A5  3420               	retlw	32	;' '
  2304  06A6  3470               	retlw	112	;'p'
  2305  06A7  3472               	retlw	114	;'r'
  2306  06A8  346F               	retlw	111	;'o'
  2307  06A9  3467               	retlw	103	;'g'
  2308  06AA  3472               	retlw	114	;'r'
  2309  06AB  3461               	retlw	97	;'a'
  2310  06AC  346D               	retlw	109	;'m'
  2311  06AD  340A               	retlw	10
  2312  06AE  3400               	retlw	0
  2313                           psect	stringtext
  2314                           	
  2315  06AF                     STR_89:	
  2316  06AF  3449               	retlw	73	;'I'
  2317  06B0  344E               	retlw	78	;'N'
  2318  06B1  3453               	retlw	83	;'S'
  2319  06B2  345F               	retlw	95	;'_'
  2320  06B3  3475               	retlw	117	;'u'
  2321  06B4  346E               	retlw	110	;'n'
  2322  06B5  346B               	retlw	107	;'k'
  2323  06B6  346E               	retlw	110	;'n'
  2324  06B7  346F               	retlw	111	;'o'
  2325  06B8  3477               	retlw	119	;'w'
  2326  06B9  346E               	retlw	110	;'n'
  2327  06BA  343A               	retlw	58	;':'
  2328  06BB  3420               	retlw	32	;' '
  2329  06BC  3430               	retlw	48	;'0'
  2330  06BD  3478               	retlw	120	;'x'
  2331  06BE  3425               	retlw	37	;'%'
  2332  06BF  3458               	retlw	88	;'X'
  2333  06C0  3400               	retlw	0
  2334                           psect	stringtext
  2335                           	
  2336  06C1                     STR_115:	
  2337  06C1  3430               	retlw	48	;'0'
  2338  06C2  3431               	retlw	49	;'1'
  2339  06C3  3432               	retlw	50	;'2'
  2340  06C4  3433               	retlw	51	;'3'
  2341  06C5  3434               	retlw	52	;'4'
  2342  06C6  3435               	retlw	53	;'5'
  2343  06C7  3436               	retlw	54	;'6'
  2344  06C8  3437               	retlw	55	;'7'
  2345  06C9  3438               	retlw	56	;'8'
  2346  06CA  3439               	retlw	57	;'9'
  2347  06CB  3441               	retlw	65	;'A'
  2348  06CC  3442               	retlw	66	;'B'
  2349  06CD  3443               	retlw	67	;'C'
  2350  06CE  3444               	retlw	68	;'D'
  2351  06CF  3445               	retlw	69	;'E'
  2352  06D0  3446               	retlw	70	;'F'
  2353  06D1  3400               	retlw	0
  2354                           psect	stringtext
  2355                           	
  2356  06D2                     STR_113:	
  2357  06D2  3425               	retlw	37	;'%'
  2358  06D3  3464               	retlw	100	;'d'
  2359  06D4  3420               	retlw	32	;' '
  2360  06D5  3425               	retlw	37	;'%'
  2361  06D6  3464               	retlw	100	;'d'
  2362  06D7  343A               	retlw	58	;':'
  2363  06D8  3425               	retlw	37	;'%'
  2364  06D9  342E               	retlw	46	;'.'
  2365  06DA  3432               	retlw	50	;'2'
  2366  06DB  3464               	retlw	100	;'d'
  2367  06DC  342E               	retlw	46	;'.'
  2368  06DD  3425               	retlw	37	;'%'
  2369  06DE  342E               	retlw	46	;'.'
  2370  06DF  3432               	retlw	50	;'2'
  2371  06E0  3464               	retlw	100	;'d'
  2372  06E1  3420               	retlw	32	;' '
  2373  06E2  3400               	retlw	0
  2374                           psect	stringtext
  2375                           	
  2376  06E3                     STR_111:	
  2377  06E3  344B               	retlw	75	;'K'
  2378  06E4  346E               	retlw	110	;'n'
  2379  06E5  346F               	retlw	111	;'o'
  2380  06E6  3477               	retlw	119	;'w'
  2381  06E7  346E               	retlw	110	;'n'
  2382  06E8  3420               	retlw	32	;' '
  2383  06E9  3463               	retlw	99	;'c'
  2384  06EA  346F               	retlw	111	;'o'
  2385  06EB  346D               	retlw	109	;'m'
  2386  06EC  346D               	retlw	109	;'m'
  2387  06ED  3461               	retlw	97	;'a'
  2388  06EE  346E               	retlw	110	;'n'
  2389  06EF  3464               	retlw	100	;'d'
  2390  06F0  3473               	retlw	115	;'s'
  2391  06F1  343A               	retlw	58	;':'
  2392  06F2  340A               	retlw	10
  2393  06F3  3400               	retlw	0
  2394                           psect	stringtext
  2395                           	
  2396  06F4                     STR_103:	
  2397  06F4  3450               	retlw	80	;'P'
  2398  06F5  3461               	retlw	97	;'a'
  2399  06F6  3472               	retlw	114	;'r'
  2400  06F7  3461               	retlw	97	;'a'
  2401  06F8  346D               	retlw	109	;'m'
  2402  06F9  3465               	retlw	101	;'e'
  2403  06FA  3474               	retlw	116	;'t'
  2404  06FB  3465               	retlw	101	;'e'
  2405  06FC  3472               	retlw	114	;'r'
  2406  06FD  3420               	retlw	32	;' '
  2407  06FE  3465               	retlw	101	;'e'
  2408  06FF  3472               	retlw	114	;'r'
  2409  0700  3472               	retlw	114	;'r'
  2410  0701  346F               	retlw	111	;'o'
  2411  0702  3472               	retlw	114	;'r'
  2412  0703  340A               	retlw	10
  2413  0704  3400               	retlw	0
  2414                           psect	stringtext
  2415                           	
  2416  0705                     STR_22:	
  2417  0705  342C               	retlw	44	;','
  2418  0706  3420               	retlw	32	;' '
  2419  0707  346E               	retlw	110	;'n'
  2420  0708  346F               	retlw	111	;'o'
  2421  0709  3420               	retlw	32	;' '
  2422  070A  3473               	retlw	115	;'s'
  2423  070B  3474               	retlw	116	;'t'
  2424  070C  3461               	retlw	97	;'a'
  2425  070D  3472               	retlw	114	;'r'
  2426  070E  3474               	retlw	116	;'t'
  2427  070F  343A               	retlw	58	;':'
  2428  0710  3420               	retlw	32	;' '
  2429  0711  3430               	retlw	48	;'0'
  2430  0712  3478               	retlw	120	;'x'
  2431  0713  3425               	retlw	37	;'%'
  2432  0714  3458               	retlw	88	;'X'
  2433  0715  3400               	retlw	0
  2434                           psect	stringtext
  2435                           	
  2436  0716                     STR_85:	
  2437  0716  3449               	retlw	73	;'I'
  2438  0717  344E               	retlw	78	;'N'
  2439  0718  3453               	retlw	83	;'S'
  2440  0719  345F               	retlw	95	;'_'
  2441  071A  3443               	retlw	67	;'C'
  2442  071B  3441               	retlw	65	;'A'
  2443  071C  344C               	retlw	76	;'L'
  2444  071D  344C               	retlw	76	;'L'
  2445  071E  342C               	retlw	44	;','
  2446  071F  3420               	retlw	32	;' '
  2447  0720  3430               	retlw	48	;'0'
  2448  0721  3478               	retlw	120	;'x'
  2449  0722  3425               	retlw	37	;'%'
  2450  0723  3430               	retlw	48	;'0'
  2451  0724  3434               	retlw	52	;'4'
  2452  0725  3458               	retlw	88	;'X'
  2453  0726  3400               	retlw	0
  2454                           psect	stringtext
  2455                           	
  2456  0727                     STR_73:	
  2457  0727  3449               	retlw	73	;'I'
  2458  0728  344E               	retlw	78	;'N'
  2459  0729  3453               	retlw	83	;'S'
  2460  072A  345F               	retlw	95	;'_'
  2461  072B  3457               	retlw	87	;'W'
  2462  072C  3441               	retlw	65	;'A'
  2463  072D  3449               	retlw	73	;'I'
  2464  072E  3454               	retlw	84	;'T'
  2465  072F  3444               	retlw	68	;'D'
  2466  0730  344F               	retlw	79	;'O'
  2467  0731  3453               	retlw	83	;'S'
  2468  0732  3441               	retlw	65	;'A'
  2469  0733  3447               	retlw	71	;'G'
  2470  0734  3445               	retlw	69	;'E'
  2471  0735  3425               	retlw	37	;'%'
  2472  0736  3473               	retlw	115	;'s'
  2473  0737  3400               	retlw	0
  2474                           psect	stringtext
  2475                           	
  2476  0738                     STR_3:	
  2477  0738  3442               	retlw	66	;'B'
  2478  0739  3472               	retlw	114	;'r'
  2479  073A  346F               	retlw	111	;'o'
  2480  073B  3477               	retlw	119	;'w'
  2481  073C  346E               	retlw	110	;'n'
  2482  073D  342D               	retlw	45	;'-'
  2483  073E  346F               	retlw	111	;'o'
  2484  073F  3475               	retlw	117	;'u'
  2485  0740  3474               	retlw	116	;'t'
  2486  0741  3420               	retlw	32	;' '
  2487  0742  3472               	retlw	114	;'r'
  2488  0743  3465               	retlw	101	;'e'
  2489  0744  3473               	retlw	115	;'s'
  2490  0745  3465               	retlw	101	;'e'
  2491  0746  3474               	retlw	116	;'t'
  2492  0747  340A               	retlw	10
  2493  0748  3400               	retlw	0
  2494                           psect	stringtext
  2495                           	
  2496  0749                     STR_27:	
  2497  0749  3450               	retlw	80	;'P'
  2498  074A  3461               	retlw	97	;'a'
  2499  074B  3475               	retlw	117	;'u'
  2500  074C  3473               	retlw	115	;'s'
  2501  074D  3465               	retlw	101	;'e'
  2502  074E  3464               	retlw	100	;'d'
  2503  074F  3420               	retlw	32	;' '
  2504  0750  3470               	retlw	112	;'p'
  2505  0751  3472               	retlw	114	;'r'
  2506  0752  346F               	retlw	111	;'o'
  2507  0753  3467               	retlw	103	;'g'
  2508  0754  3472               	retlw	114	;'r'
  2509  0755  3461               	retlw	97	;'a'
  2510  0756  346D               	retlw	109	;'m'
  2511  0757  340A               	retlw	10
  2512  0758  3400               	retlw	0
  2513                           psect	stringtext
  2514                           	
  2515  0759                     STR_48:	
  2516  0759  3449               	retlw	73	;'I'
  2517  075A  344E               	retlw	78	;'N'
  2518  075B  3453               	retlw	83	;'S'
  2519  075C  345F               	retlw	95	;'_'
  2520  075D  3457               	retlw	87	;'W'
  2521  075E  3441               	retlw	65	;'A'
  2522  075F  3454               	retlw	84	;'T'
  2523  0760  3445               	retlw	69	;'E'
  2524  0761  3452               	retlw	82	;'R'
  2525  0762  342C               	retlw	44	;','
  2526  0763  3420               	retlw	32	;' '
  2527  0764  3425               	retlw	37	;'%'
  2528  0765  3473               	retlw	115	;'s'
  2529  0766  3425               	retlw	37	;'%'
  2530  0767  3473               	retlw	115	;'s'
  2531  0768  3400               	retlw	0
  2532                           psect	stringtext
  2533                           	
  2534  0769                     STR_62:	
  2535  0769  3449               	retlw	73	;'I'
  2536  076A  344E               	retlw	78	;'N'
  2537  076B  3453               	retlw	83	;'S'
  2538  076C  345F               	retlw	95	;'_'
  2539  076D  3444               	retlw	68	;'D'
  2540  076E  3452               	retlw	82	;'R'
  2541  076F  3459               	retlw	89	;'Y'
  2542  0770  3445               	retlw	69	;'E'
  2543  0771  3452               	retlw	82	;'R'
  2544  0772  342C               	retlw	44	;','
  2545  0773  3420               	retlw	32	;' '
  2546  0774  3425               	retlw	37	;'%'
  2547  0775  3473               	retlw	115	;'s'
  2548  0776  3425               	retlw	37	;'%'
  2549  0777  3473               	retlw	115	;'s'
  2550  0778  3400               	retlw	0
  2551                           psect	stringtext
  2552                           	
  2553  0779                     STR_4:	
  2554  0779  3457               	retlw	87	;'W'
  2555  077A  3461               	retlw	97	;'a'
  2556  077B  3474               	retlw	116	;'t'
  2557  077C  3463               	retlw	99	;'c'
  2558  077D  3468               	retlw	104	;'h'
  2559  077E  3464               	retlw	100	;'d'
  2560  077F  346F               	retlw	111	;'o'
  2561  0780  3467               	retlw	103	;'g'
  2562  0781  3420               	retlw	32	;' '
  2563  0782  3472               	retlw	114	;'r'
  2564  0783  3465               	retlw	101	;'e'
  2565  0784  3473               	retlw	115	;'s'
  2566  0785  3465               	retlw	101	;'e'
  2567  0786  3474               	retlw	116	;'t'
  2568  0787  340A               	retlw	10
  2569  0788  3400               	retlw	0
  2570                           psect	stringtext
  2571                           	
  2572  0789                     STR_2:	
  2573  0789  3450               	retlw	80	;'P'
  2574  078A  346F               	retlw	111	;'o'
  2575  078B  3477               	retlw	119	;'w'
  2576  078C  3465               	retlw	101	;'e'
  2577  078D  3472               	retlw	114	;'r'
  2578  078E  342D               	retlw	45	;'-'
  2579  078F  346F               	retlw	111	;'o'
  2580  0790  346E               	retlw	110	;'n'
  2581  0791  3420               	retlw	32	;' '
  2582  0792  3472               	retlw	114	;'r'
  2583  0793  3465               	retlw	101	;'e'
  2584  0794  3473               	retlw	115	;'s'
  2585  0795  3465               	retlw	101	;'e'
  2586  0796  3474               	retlw	116	;'t'
  2587  0797  340A               	retlw	10
  2588  0798  3400               	retlw	0
  2589                           psect	stringtext
  2590                           	
  2591  0799                     STR_104:	
  2592  0799  3455               	retlw	85	;'U'
  2593  079A  346E               	retlw	110	;'n'
  2594  079B  346B               	retlw	107	;'k'
  2595  079C  346E               	retlw	110	;'n'
  2596  079D  346F               	retlw	111	;'o'
  2597  079E  3477               	retlw	119	;'w'
  2598  079F  346E               	retlw	110	;'n'
  2599  07A0  3420               	retlw	32	;' '
  2600  07A1  3465               	retlw	101	;'e'
  2601  07A2  3472               	retlw	114	;'r'
  2602  07A3  3472               	retlw	114	;'r'
  2603  07A4  346F               	retlw	111	;'o'
  2604  07A5  3472               	retlw	114	;'r'
  2605  07A6  340A               	retlw	10
  2606  07A7  3400               	retlw	0
  2607                           psect	stringtext
  2608                           	
  2609  07A8                     STR_16:	
  2610  07A8  3444               	retlw	68	;'D'
  2611  07A9  3472               	retlw	114	;'r'
  2612  07AA  3461               	retlw	97	;'a'
  2613  07AB  3469               	retlw	105	;'i'
  2614  07AC  346E               	retlw	110	;'n'
  2615  07AD  3420               	retlw	32	;' '
  2616  07AE  3474               	retlw	116	;'t'
  2617  07AF  3469               	retlw	105	;'i'
  2618  07B0  346D               	retlw	109	;'m'
  2619  07B1  3465               	retlw	101	;'e'
  2620  07B2  346F               	retlw	111	;'o'
  2621  07B3  3475               	retlw	117	;'u'
  2622  07B4  3474               	retlw	116	;'t'
  2623  07B5  340A               	retlw	10
  2624  07B6  3400               	retlw	0
  2625                           psect	stringtext
  2626                           	
  2627  07B7                     STR_21:	
  2628  07B7  342C               	retlw	44	;','
  2629  07B8  3420               	retlw	32	;' '
  2630  07B9  3469               	retlw	105	;'i'
  2631  07BA  346E               	retlw	110	;'n'
  2632  07BB  3463               	retlw	99	;'c'
  2633  07BC  346F               	retlw	111	;'o'
  2634  07BD  346D               	retlw	109	;'m'
  2635  07BE  3470               	retlw	112	;'p'
  2636  07BF  3461               	retlw	97	;'a'
  2637  07C0  3474               	retlw	116	;'t'
  2638  07C1  3469               	retlw	105	;'i'
  2639  07C2  3462               	retlw	98	;'b'
  2640  07C3  346C               	retlw	108	;'l'
  2641  07C4  3465               	retlw	101	;'e'
  2642  07C5  3400               	retlw	0
  2643                           psect	stringtext
  2644                           	
  2645  07C6                     STR_55:	
  2646  07C6  3449               	retlw	73	;'I'
  2647  07C7  344E               	retlw	78	;'N'
  2648  07C8  3453               	retlw	83	;'S'
  2649  07C9  345F               	retlw	95	;'_'
  2650  07CA  3450               	retlw	80	;'P'
  2651  07CB  3455               	retlw	85	;'U'
  2652  07CC  344D               	retlw	77	;'M'
  2653  07CD  3450               	retlw	80	;'P'
  2654  07CE  342C               	retlw	44	;','
  2655  07CF  3420               	retlw	32	;' '
  2656  07D0  3425               	retlw	37	;'%'
  2657  07D1  3473               	retlw	115	;'s'
  2658  07D2  3425               	retlw	37	;'%'
  2659  07D3  3473               	retlw	115	;'s'
  2660  07D4  3400               	retlw	0
  2661                           psect	stringtext
  2662                           	
  2663  07D5                     STR_101:	
  2664  07D5  3453               	retlw	83	;'S'
  2665  07D6  3479               	retlw	121	;'y'
  2666  07D7  346E               	retlw	110	;'n'
  2667  07D8  3474               	retlw	116	;'t'
  2668  07D9  3461               	retlw	97	;'a'
  2669  07DA  3478               	retlw	120	;'x'
  2670  07DB  3420               	retlw	32	;' '
  2671  07DC  3465               	retlw	101	;'e'
  2672  07DD  3472               	retlw	114	;'r'
  2673  07DE  3472               	retlw	114	;'r'
  2674  07DF  346F               	retlw	111	;'o'
  2675  07E0  3472               	retlw	114	;'r'
  2676  07E1  340A               	retlw	10
  2677  07E2  3400               	retlw	0
  2678                           psect	stringtext
  2679                           	
  2680  07E3                     STR_35:	
  2681  07E3  3442               	retlw	66	;'B'
  2682  07E4  346F               	retlw	111	;'o'
  2683  07E5  3478               	retlw	120	;'x'
  2684  07E6  3420               	retlw	32	;' '
  2685  07E7  3466               	retlw	102	;'f'
  2686  07E8  346C               	retlw	108	;'l'
  2687  07E9  346F               	retlw	111	;'o'
  2688  07EA  346F               	retlw	111	;'o'
  2689  07EB  3464               	retlw	100	;'d'
  2690  07EC  3465               	retlw	101	;'e'
  2691  07ED  3464               	retlw	100	;'d'
  2692  07EE  3421               	retlw	33	;'!'
  2693  07EF  340A               	retlw	10
  2694  07F0  3400               	retlw	0
  2695                           psect	stringtext
  2696                           	
  2697  07F1                     STR_15:	
  2698  07F1  3446               	retlw	70	;'F'
  2699  07F2  3469               	retlw	105	;'i'
  2700  07F3  346C               	retlw	108	;'l'
  2701  07F4  346C               	retlw	108	;'l'
  2702  07F5  3420               	retlw	32	;' '
  2703  07F6  3474               	retlw	116	;'t'
  2704  07F7  3469               	retlw	105	;'i'
  2705  07F8  346D               	retlw	109	;'m'
  2706  07F9  3465               	retlw	101	;'e'
  2707  07FA  346F               	retlw	111	;'o'
  2708  07FB  3475               	retlw	117	;'u'
  2709  07FC  3474               	retlw	116	;'t'
  2710  07FD  340A               	retlw	10
  2711  07FE  3400               	retlw	0
  2712                           psect	stringtext
  2713                           	
  2714  07FF                     STR_18:	
  2715  07FF  3449               	retlw	73	;'I'
  2716  0800  344E               	retlw	78	;'N'
  2717  0801  3453               	retlw	83	;'S'
  2718  0802  345F               	retlw	95	;'_'
  2719  0803  3453               	retlw	83	;'S'
  2720  0804  3454               	retlw	84	;'T'
  2721  0805  3441               	retlw	65	;'A'
  2722  0806  3452               	retlw	82	;'R'
  2723  0807  3454               	retlw	84	;'T'
  2724  0808  342C               	retlw	44	;','
  2725  0809  3420               	retlw	32	;' '
  2726  080A  3425               	retlw	37	;'%'
  2727  080B  3473               	retlw	115	;'s'
  2728  080C  3400               	retlw	0
  2729                           psect	stringtext
  2730                           	
  2731  080D                     STR_98:	
  2732  080D  3453               	retlw	83	;'S'
  2733  080E  3465               	retlw	101	;'e'
  2734  080F  3474               	retlw	116	;'t'
  2735  0810  3420               	retlw	32	;' '
  2736  0811  346D               	retlw	109	;'m'
  2737  0812  346F               	retlw	111	;'o'
  2738  0813  3464               	retlw	100	;'d'
  2739  0814  3465               	retlw	101	;'e'
  2740  0815  3420               	retlw	32	;' '
  2741  0816  3425               	retlw	37	;'%'
  2742  0817  3475               	retlw	117	;'u'
  2743  0818  340A               	retlw	10
  2744  0819  3400               	retlw	0
  2745                           psect	stringtext
  2746                           	
  2747  081A                     STR_40:	
  2748  081A  3449               	retlw	73	;'I'
  2749  081B  344E               	retlw	78	;'N'
  2750  081C  3453               	retlw	83	;'S'
  2751  081D  345F               	retlw	95	;'_'
  2752  081E  3442               	retlw	66	;'B'
  2753  081F  344F               	retlw	79	;'O'
  2754  0820  3457               	retlw	87	;'W'
  2755  0821  344C               	retlw	76	;'L'
  2756  0822  342C               	retlw	44	;','
  2757  0823  3420               	retlw	32	;' '
  2758  0824  3425               	retlw	37	;'%'
  2759  0825  3473               	retlw	115	;'s'
  2760  0826  3400               	retlw	0
  2761                           psect	stringtext
  2762                           	
  2763  0827                     STR_92:	
  2764  0827  3477               	retlw	119	;'w'
  2765  0828  3461               	retlw	97	;'a'
  2766  0829  3469               	retlw	105	;'i'
  2767  082A  3474               	retlw	116	;'t'
  2768  082B  3469               	retlw	105	;'i'
  2769  082C  346E               	retlw	110	;'n'
  2770  082D  3467               	retlw	103	;'g'
  2771  082E  342E               	retlw	46	;'.'
  2772  082F  342E               	retlw	46	;'.'
  2773  0830  342E               	retlw	46	;'.'
  2774  0831  340A               	retlw	10
  2775  0832  3400               	retlw	0
  2776                           psect	stringtext
  2777                           	
  2778  0833                     STR_17:	
  2779  0833  3449               	retlw	73	;'I'
  2780  0834  3450               	retlw	80	;'P'
  2781  0835  3420               	retlw	32	;' '
  2782  0836  3430               	retlw	48	;'0'
  2783  0837  3478               	retlw	120	;'x'
  2784  0838  3425               	retlw	37	;'%'
  2785  0839  3430               	retlw	48	;'0'
  2786  083A  3434               	retlw	52	;'4'
  2787  083B  3458               	retlw	88	;'X'
  2788  083C  343A               	retlw	58	;':'
  2789  083D  3420               	retlw	32	;' '
  2790  083E  3400               	retlw	0
  2791                           psect	stringtext
  2792                           	
  2793  083F                     STR_44:	
  2794  083F  3449               	retlw	73	;'I'
  2795  0840  344E               	retlw	78	;'N'
  2796  0841  3453               	retlw	83	;'S'
  2797  0842  345F               	retlw	95	;'_'
  2798  0843  3441               	retlw	65	;'A'
  2799  0844  3452               	retlw	82	;'R'
  2800  0845  344D               	retlw	77	;'M'
  2801  0846  342C               	retlw	44	;','
  2802  0847  3420               	retlw	32	;' '
  2803  0848  3425               	retlw	37	;'%'
  2804  0849  3473               	retlw	115	;'s'
  2805  084A  3400               	retlw	0
  2806                           psect	stringtext
  2807                           	
  2808  084B                     STR_102:	
  2809  084B  3449               	retlw	73	;'I'
  2810  084C  342F               	retlw	47	;'/'
  2811  084D  344F               	retlw	79	;'O'
  2812  084E  3420               	retlw	32	;' '
  2813  084F  3465               	retlw	101	;'e'
  2814  0850  3472               	retlw	114	;'r'
  2815  0851  3472               	retlw	114	;'r'
  2816  0852  346F               	retlw	111	;'o'
  2817  0853  3472               	retlw	114	;'r'
  2818  0854  340A               	retlw	10
  2819  0855  3400               	retlw	0
  2820                           psect	stringtext
  2821                           	
  2822  0856                     STR_54:	
  2823  0856  3420               	retlw	32	;' '
  2824  0857  3428               	retlw	40	;'('
  2825  0858  3473               	retlw	115	;'s'
  2826  0859  346B               	retlw	107	;'k'
  2827  085A  3469               	retlw	105	;'i'
  2828  085B  3470               	retlw	112	;'p'
  2829  085C  3470               	retlw	112	;'p'
  2830  085D  3465               	retlw	101	;'e'
  2831  085E  3464               	retlw	100	;'d'
  2832  085F  3429               	retlw	41	;')'
  2833  0860  3400               	retlw	0
  2834                           psect	stringtext
  2835                           	
  2836  0861                     STR_6:	
  2837  0861  3450               	retlw	80	;'P'
  2838  0862  3469               	retlw	105	;'i'
  2839  0863  346E               	retlw	110	;'n'
  2840  0864  3420               	retlw	32	;' '
  2841  0865  3472               	retlw	114	;'r'
  2842  0866  3465               	retlw	101	;'e'
  2843  0867  3473               	retlw	115	;'s'
  2844  0868  3465               	retlw	101	;'e'
  2845  0869  3474               	retlw	116	;'t'
  2846  086A  340A               	retlw	10
  2847  086B  3400               	retlw	0
  2848                           psect	stringtext
  2849                           	
  2850  086C                     STR_108:	
  2851  086C  3445               	retlw	69	;'E'
  2852  086D  3463               	retlw	99	;'c'
  2853  086E  3468               	retlw	104	;'h'
  2854  086F  346F               	retlw	111	;'o'
  2855  0870  343A               	retlw	58	;':'
  2856  0871  3420               	retlw	32	;' '
  2857  0872  3425               	retlw	37	;'%'
  2858  0873  3473               	retlw	115	;'s'
  2859  0874  340A               	retlw	10
  2860  0875  3400               	retlw	0
  2861                           psect	stringtext
  2862                           	
  2863  0876                     STR_93:	
  2864  0876  3473               	retlw	115	;'s'
  2865  0877  346B               	retlw	107	;'k'
  2866  0878  3469               	retlw	105	;'i'
  2867  0879  3470               	retlw	112	;'p'
  2868  087A  3470               	retlw	112	;'p'
  2869  087B  3469               	retlw	105	;'i'
  2870  087C  346E               	retlw	110	;'n'
  2871  087D  3467               	retlw	103	;'g'
  2872  087E  340A               	retlw	10
  2873  087F  3400               	retlw	0
  2874                           psect	stringtext
  2875                           	
  2876  0880                     STR_30:	
  2877  0880  3457               	retlw	87	;'W'
  2878  0881  3461               	retlw	97	;'a'
  2879  0882  3474               	retlw	116	;'t'
  2880  0883  3465               	retlw	101	;'e'
  2881  0884  3472               	retlw	114	;'r'
  2882  0885  3420               	retlw	32	;' '
  2883  0886  3425               	retlw	37	;'%'
  2884  0887  3473               	retlw	115	;'s'
  2885  0888  340A               	retlw	10
  2886  0889  3400               	retlw	0
  2887                           psect	stringtext
  2888                           	
  2889  088A                     STR_41:	
  2890  088A  3442               	retlw	66	;'B'
  2891  088B  344F               	retlw	79	;'O'
  2892  088C  3457               	retlw	87	;'W'
  2893  088D  344C               	retlw	76	;'L'
  2894  088E  345F               	retlw	95	;'_'
  2895  088F  3453               	retlw	83	;'S'
  2896  0890  3454               	retlw	84	;'T'
  2897  0891  344F               	retlw	79	;'O'
  2898  0892  3450               	retlw	80	;'P'
  2899  0893  3400               	retlw	0
  2900                           psect	stringtext
  2901                           	
  2902  0894                     STR_60:	
  2903  0894  3420               	retlw	32	;' '
  2904  0895  3444               	retlw	68	;'D'
  2905  0896  3472               	retlw	114	;'r'
  2906  0897  3461               	retlw	97	;'a'
  2907  0898  3469               	retlw	105	;'i'
  2908  0899  346E               	retlw	110	;'n'
  2909  089A  3469               	retlw	105	;'i'
  2910  089B  346E               	retlw	110	;'n'
  2911  089C  3467               	retlw	103	;'g'
  2912  089D  3400               	retlw	0
  2913                           psect	stringtext
  2914                           	
  2915  089E                     STR_34:	
  2916  089E  3444               	retlw	68	;'D'
  2917  089F  3472               	retlw	114	;'r'
  2918  08A0  3461               	retlw	97	;'a'
  2919  08A1  3469               	retlw	105	;'i'
  2920  08A2  346E               	retlw	110	;'n'
  2921  08A3  3465               	retlw	101	;'e'
  2922  08A4  3464               	retlw	100	;'d'
  2923  08A5  340A               	retlw	10
  2924  08A6  3400               	retlw	0
  2925                           psect	stringtext
  2926                           	
  2927  08A7                     STR_13:	
  2928  08A7  3475               	retlw	117	;'u'
  2929  08A8  346E               	retlw	110	;'n'
  2930  08A9  346B               	retlw	107	;'k'
  2931  08AA  346E               	retlw	110	;'n'
  2932  08AB  346F               	retlw	111	;'o'
  2933  08AC  3477               	retlw	119	;'w'
  2934  08AD  346E               	retlw	110	;'n'
  2935  08AE  340A               	retlw	10
  2936  08AF  3400               	retlw	0
  2937                           psect	stringtext
  2938                           	
  2939  08B0                     STR_46:	
  2940  08B0  3441               	retlw	65	;'A'
  2941  08B1  3452               	retlw	82	;'R'
  2942  08B2  344D               	retlw	77	;'M'
  2943  08B3  345F               	retlw	95	;'_'
  2944  08B4  3444               	retlw	68	;'D'
  2945  08B5  344F               	retlw	79	;'O'
  2946  08B6  3457               	retlw	87	;'W'
  2947  08B7  344E               	retlw	78	;'N'
  2948  08B8  3400               	retlw	0
  2949                           psect	stringtext
  2950                           	
  2951  08B9                     STR_45:	
  2952  08B9  3441               	retlw	65	;'A'
  2953  08BA  3452               	retlw	82	;'R'
  2954  08BB  344D               	retlw	77	;'M'
  2955  08BC  345F               	retlw	95	;'_'
  2956  08BD  3453               	retlw	83	;'S'
  2957  08BE  3454               	retlw	84	;'T'
  2958  08BF  344F               	retlw	79	;'O'
  2959  08C0  3450               	retlw	80	;'P'
  2960  08C1  3400               	retlw	0
  2961                           psect	stringtext
  2962                           	
  2963  08C2                     STR_43:	
  2964  08C2  3442               	retlw	66	;'B'
  2965  08C3  344F               	retlw	79	;'O'
  2966  08C4  3457               	retlw	87	;'W'
  2967  08C5  344C               	retlw	76	;'L'
  2968  08C6  345F               	retlw	95	;'_'
  2969  08C7  3443               	retlw	67	;'C'
  2970  08C8  3443               	retlw	67	;'C'
  2971  08C9  3457               	retlw	87	;'W'
  2972  08CA  3400               	retlw	0
  2973                           psect	stringtext
  2974                           	
  2975  08CB                     STR_53:	
  2976  08CB  3420               	retlw	32	;' '
  2977  08CC  3446               	retlw	70	;'F'
  2978  08CD  3469               	retlw	105	;'i'
  2979  08CE  346C               	retlw	108	;'l'
  2980  08CF  346C               	retlw	108	;'l'
  2981  08D0  3469               	retlw	105	;'i'
  2982  08D1  346E               	retlw	110	;'n'
  2983  08D2  3467               	retlw	103	;'g'
  2984  08D3  3400               	retlw	0
  2985                           psect	stringtext
  2986                           	
  2987  08D4                     STR_95:	
  2988  08D4  3443               	retlw	67	;'C'
  2989  08D5  3461               	retlw	97	;'a'
  2990  08D6  3474               	retlw	116	;'t'
  2991  08D7  3420               	retlw	32	;' '
  2992  08D8  3425               	retlw	37	;'%'
  2993  08D9  3473               	retlw	115	;'s'
  2994  08DA  340A               	retlw	10
  2995  08DB  3400               	retlw	0
  2996                           psect	stringtext
  2997                           	
  2998  08DC                     STR_33:	
  2999  08DC  3446               	retlw	70	;'F'
  3000  08DD  3469               	retlw	105	;'i'
  3001  08DE  346C               	retlw	108	;'l'
  3002  08DF  346C               	retlw	108	;'l'
  3003  08E0  3465               	retlw	101	;'e'
  3004  08E1  3464               	retlw	100	;'d'
  3005  08E2  340A               	retlw	10
  3006  08E3  3400               	retlw	0
  3007                           psect	stringtext
  3008                           	
  3009  08E4                     STR_9:	
  3010  08E4  3442               	retlw	66	;'B'
  3011  08E5  346F               	retlw	111	;'o'
  3012  08E6  3478               	retlw	120	;'x'
  3013  08E7  3420               	retlw	32	;' '
  3014  08E8  3469               	retlw	105	;'i'
  3015  08E9  3473               	retlw	115	;'s'
  3016  08EA  3420               	retlw	32	;' '
  3017  08EB  3400               	retlw	0
  3018                           psect	stringtext
  3019                           	
  3020  08EC                     STR_87:	
  3021  08EC  3449               	retlw	73	;'I'
  3022  08ED  344E               	retlw	78	;'N'
  3023  08EE  3453               	retlw	83	;'S'
  3024  08EF  345F               	retlw	95	;'_'
  3025  08F0  3445               	retlw	69	;'E'
  3026  08F1  344E               	retlw	78	;'N'
  3027  08F2  3444               	retlw	68	;'D'
  3028  08F3  3400               	retlw	0
  3029                           psect	stringtext
  3030                           	
  3031  08F4                     STR_42:	
  3032  08F4  3442               	retlw	66	;'B'
  3033  08F5  344F               	retlw	79	;'O'
  3034  08F6  3457               	retlw	87	;'W'
  3035  08F7  344C               	retlw	76	;'L'
  3036  08F8  345F               	retlw	95	;'_'
  3037  08F9  3443               	retlw	67	;'C'
  3038  08FA  3457               	retlw	87	;'W'
  3039  08FB  3400               	retlw	0
  3040                           psect	stringtext
  3041                           	
  3042  08FC                     STR_114:	
  3043  08FC  3428               	retlw	40	;'('
  3044  08FD  346E               	retlw	110	;'n'
  3045  08FE  3475               	retlw	117	;'u'
  3046  08FF  346C               	retlw	108	;'l'
  3047  0900  346C               	retlw	108	;'l'
  3048  0901  3429               	retlw	41	;')'
  3049  0902  3400               	retlw	0
  3050                           psect	stringtext
  3051                           	
  3052  0903                     STR_11:	
  3053  0903  346D               	retlw	109	;'m'
  3054  0904  3465               	retlw	101	;'e'
  3055  0905  3473               	retlw	115	;'s'
  3056  0906  3473               	retlw	115	;'s'
  3057  0907  3479               	retlw	121	;'y'
  3058  0908  340A               	retlw	10
  3059  0909  3400               	retlw	0
  3060                           psect	stringtext
  3061                           	
  3062  090A                     STR_52:	
  3063  090A  3420               	retlw	32	;' '
  3064  090B  3428               	retlw	40	;'('
  3065  090C  346E               	retlw	110	;'n'
  3066  090D  346F               	retlw	111	;'o'
  3067  090E  3470               	retlw	112	;'p'
  3068  090F  3429               	retlw	41	;')'
  3069  0910  3400               	retlw	0
  3070                           psect	stringtext
  3071                           	
  3072  0911                     STR_47:	
  3073  0911  3441               	retlw	65	;'A'
  3074  0912  3452               	retlw	82	;'R'
  3075  0913  344D               	retlw	77	;'M'
  3076  0914  345F               	retlw	95	;'_'
  3077  0915  3455               	retlw	85	;'U'
  3078  0916  3450               	retlw	80	;'P'
  3079  0917  3400               	retlw	0
  3080                           psect	stringtext
  3081                           	
  3082  0918                     STR_10:	
  3083  0918  3474               	retlw	116	;'t'
  3084  0919  3469               	retlw	105	;'i'
  3085  091A  3464               	retlw	100	;'d'
  3086  091B  3479               	retlw	121	;'y'
  3087  091C  340A               	retlw	10
  3088  091D  3400               	retlw	0
  3089                           psect	stringtext
  3090                           	
  3091  091E                     STR_12:	
  3092  091E  3477               	retlw	119	;'w'
  3093  091F  3465               	retlw	101	;'e'
  3094  0920  3474               	retlw	116	;'t'
  3095  0921  340A               	retlw	10
  3096  0922  3400               	retlw	0
  3097                           psect	stringtext
  3098                           	
  3099  0923                     STR_31:	
  3100  0923  3468               	retlw	104	;'h'
  3101  0924  3469               	retlw	105	;'i'
  3102  0925  3467               	retlw	103	;'g'
  3103  0926  3468               	retlw	104	;'h'
  3104  0927  3400               	retlw	0
  3105                           psect	stringtext
  3106                           	
  3107  0928                     STR_97:	
  3108  0928  346F               	retlw	111	;'o'
  3109  0929  3475               	retlw	117	;'u'
  3110  092A  3474               	retlw	116	;'t'
  3111  092B  3400               	retlw	0
  3112                           psect	stringtext
  3113                           	
  3114  092C                     STR_50:	
  3115  092C  346F               	retlw	111	;'o'
  3116  092D  3466               	retlw	102	;'f'
  3117  092E  3466               	retlw	102	;'f'
  3118  092F  3400               	retlw	0
  3119                           psect	stringtext
  3120                           	
  3121  0930                     STR_19:	
  3122  0930  3477               	retlw	119	;'w'
  3123  0931  3465               	retlw	101	;'e'
  3124  0932  3474               	retlw	116	;'t'
  3125  0933  3400               	retlw	0
  3126                           psect	stringtext
  3127                           	
  3128  0934                     STR_32:	
  3129  0934  346C               	retlw	108	;'l'
  3130  0935  346F               	retlw	111	;'o'
  3131  0936  3477               	retlw	119	;'w'
  3132  0937  3400               	retlw	0
  3133                           psect	stringtext
  3134                           	
  3135  0938                     STR_20:	
  3136  0938  3464               	retlw	100	;'d'
  3137  0939  3472               	retlw	114	;'r'
  3138  093A  3479               	retlw	121	;'y'
  3139  093B  3400               	retlw	0
  3140                           psect	stringtext
  3141                           	
  3142  093C                     STR_99:	
  3143  093C  3423               	retlw	35	;'#'
  3144  093D  3420               	retlw	32	;' '
  3145  093E  3400               	retlw	0
  3146                           psect	stringtext
  3147                           	
  3148  093F                     STR_96:	
  3149  093F  3469               	retlw	105	;'i'
  3150  0940  346E               	retlw	110	;'n'
  3151  0941  3400               	retlw	0
  3152                           psect	stringtext
  3153                           	
  3154  0942                     STR_49:	
  3155  0942  346F               	retlw	111	;'o'
  3156  0943  346E               	retlw	110	;'n'
  3157  0944  3400               	retlw	0
  3158                           psect	stringtext
  3159  0938                     STR_26	equ	STR_20+0
  3160  0938                     STR_38	equ	STR_20+0
  3161  0934                     STR_70	equ	STR_32+0
  3162  0930                     STR_25	equ	STR_19+0
  3163  0930                     STR_37	equ	STR_19+0
  3164  0942                     STR_56	equ	STR_49+0
  3165  0942                     STR_63	equ	STR_49+0
  3166  0942                     STR_106	equ	STR_49+0
  3167  0942                     STR_109	equ	STR_49+0
  3168  0923                     STR_69	equ	STR_31+0
  3169  092C                     STR_57	equ	STR_50+0
  3170  092C                     STR_64	equ	STR_50+0
  3171  092C                     STR_107	equ	STR_50+0
  3172  092C                     STR_110	equ	STR_50+0
  3173  090A                     STR_59	equ	STR_52+0
  3174  090A                     STR_66	equ	STR_52+0
  3175  090A                     STR_72	equ	STR_52+0
  3176  090A                     STR_75	equ	STR_52+0
  3177  090A                     STR_77	equ	STR_52+0
  3178  090A                     STR_81	equ	STR_52+0
  3179  090A                     STR_84	equ	STR_52+0
  3180  0856                     STR_61	equ	STR_54+0
  3181  0833                     STR_39	equ	STR_17+0
  3182  093C                     STR_100	equ	STR_99+0
  3183  0872                     STR_112	equ	STR_108+6
  3184  07EF                     STR_23	equ	STR_35+12
  3185  07EF                     STR_90	equ	STR_35+12
  3186  07F0                     STR_51	equ	STR_35+13
  3187  07F0                     STR_58	equ	STR_35+13
  3188  07F0                     STR_65	equ	STR_35+13
  3189  07F0                     STR_71	equ	STR_35+13
  3190  07F0                     STR_74	equ	STR_35+13
  3191  07F0                     STR_78	equ	STR_35+13
  3192  07F0                     STR_80	equ	STR_35+13
  3193  07F0                     STR_83	equ	STR_35+13
  3194                           	file	"C:\Users\chris\AppData\Local\Temp\s8uc."
  3195                           	line	#
  3196                           psect cinit,class=CODE,delta=2
  3197                           global start_initialization
  3198  2F43                     start_initialization:
  3199                           
  3200                           psect	bitbssCOMMON,class=COMMON,bit,space=1
  3201                           global __pbitbssCOMMON
  3202  0380                     __pbitbssCOMMON:
  3203  0380                     _cat_detected:
  3204  0380                            ds      1
  3205                           
  3206  0381                     _cat_present:
  3207  0381                            ds      1
  3208                           
  3209  0382                     _detected_cur:
  3210  0382                            ds      1
  3211                           
  3212  0383                     _detected_old:
  3213  0383                            ds      1
  3214                           
  3215  0384                     _echoed:
  3216  0384                            ds      1
  3217                           
  3218  0385                     _error_drain:
  3219  0385                            ds      1
  3220                           
  3221  0386                     _error_execution:
  3222  0386                            ds      1
  3223                           
  3224  0387                     _error_fill:
  3225  0387                            ds      1
  3226                           
  3227  0388                     _error_flood:
  3228  0388                            ds      1
  3229                           
  3230  0389                     _error_overheat:
  3231  0389                            ds      1
  3232                           
  3233  038A                     _full_wash:
  3234  038A                            ds      1
  3235                           
  3236  038B                     _locked:
  3237  038B                            ds      1
  3238                           
  3239  038C                     _longhandled:
  3240  038C                            ds      1
  3241                           
  3242  038D                     _paused:
  3243  038D                            ds      1
  3244                           
  3245  038E                     _pinging:
  3246  038E                            ds      1
  3247                           
  3248                           psect	bitbssBANK0,class=BANK0,bit,space=1
  3249                           global __pbitbssBANK0
  3250  0368                     __pbitbssBANK0:
  3251  0368                     _detected:
  3252  0368                            ds      1
  3253                           
  3254  0369                     _detected_dbc:
  3255  0369                            ds      1
  3256                           
  3257  036A                     _filling:
  3258  036A                            ds      1
  3259                           
  3260  036B                     _ledalwayson:
  3261  036B                            ds      1
  3262                           
  3263  036C                     _wet_program:
  3264  036C                            ds      1
  3265                           
  3266                           psect	bssBANK0,class=BANK0,space=1
  3267                           global __pbssBANK0
  3268  0062                     __pbssBANK0:
  3269  0062                     _auto_mode:
  3270  0062                            ds      1
  3271                           
  3272  0063                     _error_nr:
  3273  0063                            ds      1
  3274                           
  3275  0064                     _hysteresis:
  3276  0064                            ds      1
  3277                           
  3278  0065                     _ins_state:
  3279  0065                            ds      1
  3280                           
  3281  0066                     _state:
  3282  0066                            ds      1
  3283                           
  3284  0067                     proc_char@curcolumn:
  3285  0067                            ds      1
  3286                           
  3287  0068                     _cur_instruction:
  3288  0068                            ds      3
  3289                           
  3290  006B                     _ins_pointer:
  3291  006B                            ds      2
  3292                           
  3293                           psect	dataBANK0,class=BANK0,space=1
  3294                           global __pdataBANK0
  3295  006E                     __pdataBANK0:
  3296                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3297                           	line	72
  3298  006E                     _cart_level:
  3299  006E                            ds      1
  3300                           
  3301                           psect	dataBANK0
  3302                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  3303                           	line	35
  3304  006F                     _localecho:
  3305  006F                            ds      1
  3306                           
  3307                           psect	bssBANK1,class=BANK1,space=1
  3308                           global __pbssBANK1
  3309  00C6                     __pbssBANK1:
  3310  00C6                     _currenttime:
  3311  00C6                            ds      4
  3312                           
  3313  00CA                     _overflows:
  3314  00CA                            ds      4
  3315                           
  3316  00CE                     _ins_address:
  3317  00CE                            ds      2
  3318                           
  3319  00D0                     _reflectionquality:
  3320  00D0                            ds      2
  3321                           
  3322  00D2                     exe_instruction@ret_address:
  3323  00D2                            ds      2
  3324                           
  3325  00D4                     _PORTB_old:
  3326  00D4                            ds      1
  3327                           
  3328  00D5                     _buttonmask_cum:
  3329  00D5                            ds      1
  3330                           
  3331  00D6                     _buttonmask_cur:
  3332  00D6                            ds      1
  3333                           
  3334  00D7                     _buttonmask_evt:
  3335  00D7                            ds      1
  3336                           
  3337  00D8                     _interval:
  3338  00D8                            ds      1
  3339                           
  3340  00D9                     _panel_mode:
  3341  00D9                            ds      1
  3342                           
  3343  00DA                     _prg_source:
  3344  00DA                            ds      1
  3345                           
  3346  00DB                     catgenie120@PORTB_old:
  3347  00DB                            ds      1
  3348                           
  3349  00DC                     water@state:
  3350  00DC                            ds      1
  3351                           
  3352                           psect	dataBANK1,class=BANK1,space=1
  3353                           global __pdataBANK1
  3354  00DD                     __pdataBANK1:
  3355                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3356                           	line	54
  3357  00DD                     _autotimer:
  3358  00DD                            ds      6
  3359                           
  3360                           psect	dataBANK1
  3361                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3362                           	line	59
  3363  00E3                     _timer_drain:
  3364  00E3                            ds      6
  3365                           
  3366                           psect	dataBANK1
  3367                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3368                           	line	58
  3369  00E9                     _timer_fill:
  3370  00E9                            ds      6
  3371                           
  3372                           psect	bssBANK2,class=BANK2,space=1
  3373                           global __pbssBANK2
  3374  0120                     __pbssBANK2:
  3375  0120                     litterlanguage_pause@context:
  3376  0120                            ds      17
  3377                           
  3378  0131                     _rx:
  3379  0131                            ds      9
  3380                           
  3381  013A                     _cartridgetimeout:
  3382  013A                            ds      6
  3383                           
  3384  0140                     _cattimer:
  3385  0140                            ds      6
  3386                           
  3387  0146                     _pingtime:
  3388  0146                            ds      6
  3389                           
  3390  014C                     _second:
  3391  014C                            ds      6
  3392                           
  3393  0152                     _sensortimer:
  3394  0152                            ds      6
  3395                           
  3396                           psect	dataBANK2,class=BANK2,space=1
  3397                           global __pdataBANK2
  3398  0158                     __pdataBANK2:
  3399                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
  3400                           	line	36
  3401  0158                     _debouncer:
  3402  0158                            ds      6
  3403                           
  3404                           psect	dataBANK2
  3405                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3406                           	line	53
  3407  015E                     _holdtimeout:
  3408  015E                            ds      6
  3409                           
  3410                           psect	dataBANK2
  3411                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3412                           	line	60
  3413  0164                     _timer_autodose:
  3414  0164                            ds      6
  3415                           
  3416                           psect	dataBANK2
  3417                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3418                           	line	57
  3419  016A                     _timer_waitins:
  3420  016A                            ds      6
  3421                           
  3422                           psect	bssBANK3,class=BANK3,space=1
  3423                           global __pbssBANK3
  3424  01CA                     __pbssBANK3:
  3425  01CA                     _uptime:
  3426  01CA                            ds      4
  3427                           
  3428  01CE                     _linebuffer:
  3429  01CE                            ds      20
  3430                           
  3431                           psect	dataBANK3,class=BANK3,space=1
  3432                           global __pdataBANK3
  3433  01A0                     __pdataBANK3:
  3434                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3435                           	line	58
  3436  01A0                     _debouncers:
  3437  01A0                            ds      42
  3438                           
  3439                           psect	dataBANK4,class=BANK4,space=1
  3440                           global __pdataBANK4
  3441  0220                     __pdataBANK4:
  3442                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3443                           	line	73
  3444  0220                     _pacers:
  3445  0220                            ds      55
  3446                           
  3447                           psect clrtext,class=CODE,delta=2
  3448                           global clear_ram
  3449                           ;	Called with FSR0 containing the base address, and
  3450                           ;	WREG with the size to clear
  3451  378C                     clear_ram:
  3452  378C  0064               	clrwdt			;clear the watchdog before getting into this loop
  3453  378D                     clrloop:
  3454  378D  0180               	clrf	indf0		;clear RAM location pointed to by FSR
  3455  378E  3101               	addfsr	0,1
  3456  378F  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
  3457  3790  2F8D               	goto clrloop	;have we reached the end yet?
  3458  3791  3400               	retlw	0		;all done for this memory range, return
  3459                           ; Clear objects allocated to BITCOMMON
  3460                           psect cinit,class=CODE,delta=2
  3461                           	global __pbitbssCOMMON
  3462  2F43  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
  3463  2F44  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
  3464                           ; Clear objects allocated to BITBANK0
  3465                           psect cinit,class=CODE,delta=2
  3466                           	global __pbitbssBANK0
  3467  2F45  01ED               	clrf	((__pbitbssBANK0/8)+0)&07Fh
  3468                           ; Clear objects allocated to BANK0
  3469                           psect cinit,class=CODE,delta=2
  3470                           	global __pbssBANK0
  3471  2F46  3062               	movlw	low(__pbssBANK0)
  3472  2F47  0084               	movwf	fsr0l
  3473  2F48  3000               	movlw	high(__pbssBANK0)
  3474  2F49  0085               	movwf	fsr0h
  3475  2F4A  300B               	movlw	0Bh
  3476  2F4B  31B7  278C  31AF   	fcall	clear_ram
  3477                           ; Clear objects allocated to BANK1
  3478                           psect cinit,class=CODE,delta=2
  3479                           	global __pbssBANK1
  3480  2F4E  30C6               	movlw	low(__pbssBANK1)
  3481  2F4F  0084               	movwf	fsr0l
  3482  2F50  3000               	movlw	high(__pbssBANK1)
  3483  2F51  0085               	movwf	fsr0h
  3484  2F52  3017               	movlw	017h
  3485  2F53  31B7  278C  31AF   	fcall	clear_ram
  3486                           ; Clear objects allocated to BANK2
  3487                           psect cinit,class=CODE,delta=2
  3488                           	global __pbssBANK2
  3489  2F56  3020               	movlw	low(__pbssBANK2)
  3490  2F57  0084               	movwf	fsr0l
  3491  2F58  3001               	movlw	high(__pbssBANK2)
  3492  2F59  0085               	movwf	fsr0h
  3493  2F5A  3038               	movlw	038h
  3494  2F5B  31B7  278C  31AF   	fcall	clear_ram
  3495                           ; Clear objects allocated to BANK3
  3496                           psect cinit,class=CODE,delta=2
  3497                           	global __pbssBANK3
  3498  2F5E  30CA               	movlw	low(__pbssBANK3)
  3499  2F5F  0084               	movwf	fsr0l
  3500  2F60  3001               	movlw	high(__pbssBANK3)
  3501  2F61  0085               	movwf	fsr0h
  3502  2F62  3018               	movlw	018h
  3503  2F63  31B7  278C  31AF   	fcall	clear_ram
  3504                           psect inittext,class=CODE,delta=2
  3505                           global init_ram,btemp
  3506  3786                     init_ram:
  3507  3786  00FE               	movwf btemp,f
  3508  3787                     initloop:
  3509  3787  0012               	moviw fsr0++
  3510  3788  001E               	movwi fsr1++
  3511  3789  0BFE               	decfsz btemp
  3512  378A  2F87               	goto initloop
  3513  378B  3400               	retlw 0
  3514                           ; Initialize objects allocated to BANK0
  3515                           	global __pidataBANK0,__pdataBANK0
  3516                           psect cinit,class=CODE,delta=2
  3517  2F66  3180  2002  31AF   	fcall	__pidataBANK0+0		;fetch initializer
  3518  2F69  00EE               	movwf	__pdataBANK0+0&07fh		
  3519  2F6A  3180  2003  31AF   	fcall	__pidataBANK0+1		;fetch initializer
  3520  2F6D  00EF               	movwf	__pdataBANK0+1&07fh		
  3521                           ; Initialize objects allocated to BANK1
  3522                           	global __pidataBANK1,__pdataBANK1
  3523                           psect cinit,class=CODE,delta=2
  3524  2F6E  30CE               	movlw low(__pidataBANK1)
  3525  2F6F  0084               	movwf fsr0l
  3526  2F70  30A8               	movlw high(__pidataBANK1)|80h
  3527  2F71  0085               	movwf fsr0h
  3528  2F72  30DD               	movlw low(__pdataBANK1)
  3529  2F73  0086               	movwf fsr1l
  3530  2F74  3000               	movlw high(__pdataBANK1)
  3531  2F75  0087               	movwf fsr1h
  3532  2F76  3012               	movlw 012h
  3533  2F77  31B7  2786  31AF   	fcall init_ram
  3534                           ; Initialize objects allocated to BANK2
  3535                           	global __pidataBANK2,__pdataBANK2
  3536                           psect cinit,class=CODE,delta=2
  3537  2F7A  3047               	movlw low(__pidataBANK2)
  3538  2F7B  0084               	movwf fsr0l
  3539  2F7C  30A9               	movlw high(__pidataBANK2)|80h
  3540  2F7D  0085               	movwf fsr0h
  3541  2F7E  3058               	movlw low(__pdataBANK2)
  3542  2F7F  0086               	movwf fsr1l
  3543  2F80  3001               	movlw high(__pdataBANK2)
  3544  2F81  0087               	movwf fsr1h
  3545  2F82  3018               	movlw 018h
  3546  2F83  31B7  2786  31AF   	fcall init_ram
  3547                           ; Initialize objects allocated to BANK3
  3548                           	global __pidataBANK3,__pdataBANK3
  3549                           psect cinit,class=CODE,delta=2
  3550  2F86  303E               	movlw low(__pidataBANK3)
  3551  2F87  0084               	movwf fsr0l
  3552  2F88  30AB               	movlw high(__pidataBANK3)|80h
  3553  2F89  0085               	movwf fsr0h
  3554  2F8A  30A0               	movlw low(__pdataBANK3)
  3555  2F8B  0086               	movwf fsr1l
  3556  2F8C  3001               	movlw high(__pdataBANK3)
  3557  2F8D  0087               	movwf fsr1h
  3558  2F8E  302A               	movlw 02Ah
  3559  2F8F  31B7  2786  31AF   	fcall init_ram
  3560                           ; Initialize objects allocated to BANK4
  3561                           	global __pidataBANK4,__pdataBANK4
  3562                           psect cinit,class=CODE,delta=2
  3563  2F92  3084               	movlw low(__pidataBANK4)
  3564  2F93  0084               	movwf fsr0l
  3565  2F94  30AC               	movlw high(__pidataBANK4)|80h
  3566  2F95  0085               	movwf fsr0h
  3567  2F96  3020               	movlw low(__pdataBANK4)
  3568  2F97  0086               	movwf fsr1l
  3569  2F98  3002               	movlw high(__pdataBANK4)
  3570  2F99  0087               	movwf fsr1h
  3571  2F9A  3037               	movlw 037h
  3572  2F9B  31B7  2786  31AF   	fcall init_ram
  3573                           psect cinit,class=CODE,delta=2
  3574                           global end_of_initialization
  3575                           
  3576                           ;End of C runtime variable initialization code
  3577                           
  3578  2F9E                     end_of_initialization:
  3579  2F9E  0020               movlb 0
  3580  2F9F  31A7  2F4E         ljmp _main	;jump to C main() function
  3581                           psect	cstackBANK1,class=BANK1,space=1
  3582                           global __pcstackBANK1
  3583  00A0                     __pcstackBANK1:
  3584                           	global	_exe_instruction$30234
  3585  00A0                     _exe_instruction$30234:	; 2 bytes @ 0x0
  3586  00A0                     	ds	2
  3587                           	global	_exe_instruction$30235
  3588  00A2                     _exe_instruction$30235:	; 2 bytes @ 0x2
  3589  00A2                     	ds	2
  3590                           	global	exe_instruction@temp
  3591  00A4                     exe_instruction@temp:	; 2 bytes @ 0x4
  3592  00A4                     	ds	2
  3593                           	global	_exe_instruction$5954
  3594  00A6                     _exe_instruction$5954:	; 2 bytes @ 0x6
  3595  00A6                     	ds	2
  3596                           	global	_exe_instruction$5955
  3597  00A8                     _exe_instruction$5955:	; 2 bytes @ 0x8
  3598  00A8                     	ds	2
  3599                           	global	_exe_instruction$5960
  3600  00AA                     _exe_instruction$5960:	; 2 bytes @ 0xA
  3601  00AA                     	ds	2
  3602                           	global	_exe_instruction$5961
  3603  00AC                     _exe_instruction$5961:	; 2 bytes @ 0xC
  3604  00AC                     	ds	2
  3605                           	global	_exe_instruction$5967
  3606  00AE                     _exe_instruction$5967:	; 2 bytes @ 0xE
  3607  00AE                     	ds	2
  3608                           	global	_exe_instruction$5968
  3609  00B0                     _exe_instruction$5968:	; 2 bytes @ 0x10
  3610  00B0                     	ds	2
  3611                           	global	_exe_instruction$5976
  3612  00B2                     _exe_instruction$5976:	; 2 bytes @ 0x12
  3613  00B2                     	ds	2
  3614                           	global	_exe_instruction$5977
  3615  00B4                     _exe_instruction$5977:	; 2 bytes @ 0x14
  3616  00B4                     	ds	2
  3617                           	global	_exe_instruction$5985
  3618  00B6                     _exe_instruction$5985:	; 2 bytes @ 0x16
  3619  00B6                     	ds	2
  3620                           	global	_exe_instruction$5986
  3621  00B8                     _exe_instruction$5986:	; 2 bytes @ 0x18
  3622  00B8                     	ds	2
  3623                           	global	_exe_instruction$5993
  3624  00BA                     _exe_instruction$5993:	; 2 bytes @ 0x1A
  3625  00BA                     	ds	2
  3626                           	global	_exe_instruction$5994
  3627  00BC                     _exe_instruction$5994:	; 2 bytes @ 0x1C
  3628  00BC                     	ds	2
  3629                           	global	_exe_instruction$5998
  3630  00BE                     _exe_instruction$5998:	; 2 bytes @ 0x1E
  3631  00BE                     	ds	2
  3632                           	global	_exe_instruction$6002
  3633  00C0                     _exe_instruction$6002:	; 2 bytes @ 0x20
  3634  00C0                     	ds	2
  3635                           	global	_exe_instruction$6006
  3636  00C2                     _exe_instruction$6006:	; 2 bytes @ 0x22
  3637  00C2                     	ds	2
  3638                           	global	_exe_instruction$6010
  3639  00C4                     _exe_instruction$6010:	; 2 bytes @ 0x24
  3640  00C4                     	ds	2
  3641                           psect	cstackCOMMON,class=COMMON,space=1
  3642                           global __pcstackCOMMON
  3643  0072                     __pcstackCOMMON:
  3644                           	global	?_timer_init
  3645  0072                     ?_timer_init:	; 0 bytes @ 0x0
  3646                           	global	?_rtc_init
  3647  0072                     ?_rtc_init:	; 0 bytes @ 0x0
  3648                           	global	?_catsensor_init
  3649  0072                     ?_catsensor_init:	; 0 bytes @ 0x0
  3650                           	global	?_water_init
  3651  0072                     ?_water_init:	; 0 bytes @ 0x0
  3652                           	global	?_userinterface_init
  3653  0072                     ?_userinterface_init:	; 0 bytes @ 0x0
  3654                           	global	?_cmdline_init
  3655  0072                     ?_cmdline_init:	; 0 bytes @ 0x0
  3656                           	global	?_litterlanguage_init
  3657  0072                     ?_litterlanguage_init:	; 0 bytes @ 0x0
  3658                           	global	?_interrupt_init
  3659  0072                     ?_interrupt_init:	; 0 bytes @ 0x0
  3660                           	global	?_rtc_work
  3661  0072                     ?_rtc_work:	; 0 bytes @ 0x0
  3662                           	global	?_catsensor_work
  3663  0072                     ?_catsensor_work:	; 0 bytes @ 0x0
  3664                           	global	?_water_work
  3665  0072                     ?_water_work:	; 0 bytes @ 0x0
  3666                           	global	?_catgenie_work
  3667  0072                     ?_catgenie_work:	; 0 bytes @ 0x0
  3668                           	global	?_userinterface_work
  3669  0072                     ?_userinterface_work:	; 0 bytes @ 0x0
  3670                           	global	?_cmdline_work
  3671  0072                     ?_cmdline_work:	; 0 bytes @ 0x0
  3672                           	global	?_litterlanguage_work
  3673  0072                     ?_litterlanguage_work:	; 0 bytes @ 0x0
  3674                           	global	?_timer_isr
  3675  0072                     ?_timer_isr:	; 0 bytes @ 0x0
  3676                           	global	??_timer_isr
  3677  0072                     ??_timer_isr:	; 0 bytes @ 0x0
  3678                           	global	?_catsensor_isr_timer
  3679  0072                     ?_catsensor_isr_timer:	; 0 bytes @ 0x0
  3680                           	global	??_catsensor_isr_timer
  3681  0072                     ??_catsensor_isr_timer:	; 0 bytes @ 0x0
  3682                           	global	?_catsensor_isr_input
  3683  0072                     ?_catsensor_isr_input:	; 0 bytes @ 0x0
  3684                           	global	??_catsensor_isr_input
  3685  0072                     ??_catsensor_isr_input:	; 0 bytes @ 0x0
  3686                           	global	?_serial_rx_isr
  3687  0072                     ?_serial_rx_isr:	; 0 bytes @ 0x0
  3688                           	global	??_serial_rx_isr
  3689  0072                     ??_serial_rx_isr:	; 0 bytes @ 0x0
  3690                           	global	?_serial_tx_isr
  3691  0072                     ?_serial_tx_isr:	; 0 bytes @ 0x0
  3692                           	global	??_serial_tx_isr
  3693  0072                     ??_serial_tx_isr:	; 0 bytes @ 0x0
  3694                           	global	?_litterlanguage_cleanup
  3695  0072                     ?_litterlanguage_cleanup:	; 0 bytes @ 0x0
  3696                           	global	?_printtime
  3697  0072                     ?_printtime:	; 0 bytes @ 0x0
  3698                           	global	?_set_Dosage
  3699  0072                     ?_set_Dosage:	; 0 bytes @ 0x0
  3700                           	global	?_exe_instruction
  3701  0072                     ?_exe_instruction:	; 0 bytes @ 0x0
  3702                           	global	?_wait_instruction
  3703  0072                     ?_wait_instruction:	; 0 bytes @ 0x0
  3704                           	global	?_set_Bowl
  3705  0072                     ?_set_Bowl:	; 0 bytes @ 0x0
  3706                           	global	?_set_Arm
  3707  0072                     ?_set_Arm:	; 0 bytes @ 0x0
  3708                           	global	?_water_fill
  3709  0072                     ?_water_fill:	; 0 bytes @ 0x0
  3710                           	global	?_set_Pump
  3711  0072                     ?_set_Pump:	; 0 bytes @ 0x0
  3712                           	global	?_set_Dryer
  3713  0072                     ?_set_Dryer:	; 0 bytes @ 0x0
  3714                           	global	?_set_mode
  3715  0072                     ?_set_mode:	; 0 bytes @ 0x0
  3716                           	global	?_update_display
  3717  0072                     ?_update_display:	; 0 bytes @ 0x0
  3718                           	global	?_update_autotimer
  3719  0072                     ?_update_autotimer:	; 0 bytes @ 0x0
  3720                           	global	?_start_short
  3721  0072                     ?_start_short:	; 0 bytes @ 0x0
  3722                           	global	?_setup_short
  3723  0072                     ?_setup_short:	; 0 bytes @ 0x0
  3724                           	global	?_both_short
  3725  0072                     ?_both_short:	; 0 bytes @ 0x0
  3726                           	global	?_start_long
  3727  0072                     ?_start_long:	; 0 bytes @ 0x0
  3728                           	global	?_setup_long
  3729  0072                     ?_setup_long:	; 0 bytes @ 0x0
  3730                           	global	?_both_long
  3731  0072                     ?_both_long:	; 0 bytes @ 0x0
  3732                           	global	?_putch
  3733  0072                     ?_putch:	; 0 bytes @ 0x0
  3734                           	global	?_proc_char
  3735  0072                     ?_proc_char:	; 0 bytes @ 0x0
  3736                           	global	?_proc_line
  3737  0072                     ?_proc_line:	; 0 bytes @ 0x0
  3738                           	global	?_isdigit
  3739  0072                     ?_isdigit:	; 1 bit 
  3740                           	global	?_main
  3741  0072                     ?_main:	; 0 bytes @ 0x0
  3742                           	global	?_isr
  3743  0072                     ?_isr:	; 0 bytes @ 0x0
  3744                           	global	?_litterlanguage_start
  3745  0072                     ?_litterlanguage_start:	; 0 bytes @ 0x0
  3746                           	global	?_litterlanguage_pause
  3747  0072                     ?_litterlanguage_pause:	; 0 bytes @ 0x0
  3748                           	global	?_litterlanguage_stop
  3749  0072                     ?_litterlanguage_stop:	; 0 bytes @ 0x0
  3750                           	global	?_watersensor_event
  3751  0072                     ?_watersensor_event:	; 0 bytes @ 0x0
  3752                           	global	?_catsensor_event
  3753  0072                     ?_catsensor_event:	; 0 bytes @ 0x0
  3754                           	global	?_catgenie_init
  3755  0072                     ?_catgenie_init:	; 1 bytes @ 0x0
  3756                           	global	?_eeprom_read
  3757  0072                     ?_eeprom_read:	; 1 bytes @ 0x0
  3758                           	global	?_water_detected
  3759  0072                     ?_water_detected:	; 1 bytes @ 0x0
  3760                           	global	?_water_filling
  3761  0072                     ?_water_filling:	; 1 bytes @ 0x0
  3762                           	global	?_get_Pump
  3763  0072                     ?_get_Pump:	; 1 bytes @ 0x0
  3764                           	global	?_get_instruction
  3765  0072                     ?_get_instruction:	; 1 bytes @ 0x0
  3766                           	global	?_get_Bowl
  3767  0072                     ?_get_Bowl:	; 1 bytes @ 0x0
  3768                           	global	?_get_Arm
  3769  0072                     ?_get_Arm:	; 1 bytes @ 0x0
  3770                           	global	?_get_Dosage
  3771  0072                     ?_get_Dosage:	; 1 bytes @ 0x0
  3772                           	global	?_get_Dryer
  3773  0072                     ?_get_Dryer:	; 1 bytes @ 0x0
  3774                           	global	?_romwashprogram_getins
  3775  0072                     ?_romwashprogram_getins:	; 1 bytes @ 0x0
  3776                           	global	?_readch
  3777  0072                     ?_readch:	; 1 bytes @ 0x0
  3778                           	global	?_litterlanguage_running
  3779  0072                     ?_litterlanguage_running:	; 1 bytes @ 0x0
  3780                           	global	?_litterlanguage_paused
  3781  0072                     ?_litterlanguage_paused:	; 1 bytes @ 0x0
  3782  0072                     	ds	7
  3783                           	global	_serial_rx_isr$22342
  3784  0079                     _serial_rx_isr$22342:	; 2 bytes @ 0x7
  3785  0079                     	ds	2
  3786                           	global	??_isr
  3787  007B                     ??_isr:	; 0 bytes @ 0x9
  3788  007B                     	ds	2
  3789                           	global	isr@temp
  3790  007D                     isr@temp:	; 1 bytes @ 0xB
  3791  007D                     	ds	1
  3792                           psect	cstackBANK0,class=BANK0,space=1
  3793                           global __pcstackBANK0
  3794  0021                     __pcstackBANK0:
  3795                           	global	??_timer_init
  3796  0021                     ??_timer_init:	; 0 bytes @ 0x0
  3797                           	global	??_catsensor_init
  3798  0021                     ??_catsensor_init:	; 0 bytes @ 0x0
  3799                           	global	??_water_init
  3800  0021                     ??_water_init:	; 0 bytes @ 0x0
  3801                           	global	??_interrupt_init
  3802  0021                     ??_interrupt_init:	; 0 bytes @ 0x0
  3803                           	global	??_eeprom_read
  3804  0021                     ??_eeprom_read:	; 0 bytes @ 0x0
  3805                           	global	??_water_detected
  3806  0021                     ??_water_detected:	; 0 bytes @ 0x0
  3807                           	global	??_water_filling
  3808  0021                     ??_water_filling:	; 0 bytes @ 0x0
  3809                           	global	??_get_Pump
  3810  0021                     ??_get_Pump:	; 0 bytes @ 0x0
  3811                           	global	??_set_Dosage
  3812  0021                     ??_set_Dosage:	; 0 bytes @ 0x0
  3813                           	global	??_get_Bowl
  3814  0021                     ??_get_Bowl:	; 0 bytes @ 0x0
  3815                           	global	??_set_Bowl
  3816  0021                     ??_set_Bowl:	; 0 bytes @ 0x0
  3817                           	global	??_get_Arm
  3818  0021                     ??_get_Arm:	; 0 bytes @ 0x0
  3819                           	global	??_set_Arm
  3820  0021                     ??_set_Arm:	; 0 bytes @ 0x0
  3821                           	global	??_water_fill
  3822  0021                     ??_water_fill:	; 0 bytes @ 0x0
  3823                           	global	??_get_Dosage
  3824  0021                     ??_get_Dosage:	; 0 bytes @ 0x0
  3825                           	global	??_set_Pump
  3826  0021                     ??_set_Pump:	; 0 bytes @ 0x0
  3827                           	global	??_get_Dryer
  3828  0021                     ??_get_Dryer:	; 0 bytes @ 0x0
  3829                           	global	??_set_Dryer
  3830  0021                     ??_set_Dryer:	; 0 bytes @ 0x0
  3831                           	global	?_gettimestamp
  3832  0021                     ?_gettimestamp:	; 0 bytes @ 0x0
  3833                           	global	?_romwashprogram_reqins
  3834  0021                     ?_romwashprogram_reqins:	; 0 bytes @ 0x0
  3835                           	global	??_romwashprogram_getins
  3836  0021                     ??_romwashprogram_getins:	; 0 bytes @ 0x0
  3837                           	global	??_setup_long
  3838  0021                     ??_setup_long:	; 0 bytes @ 0x0
  3839                           	global	?_set_LED
  3840  0021                     ?_set_LED:	; 0 bytes @ 0x0
  3841                           	global	?_postponetimeout
  3842  0021                     ?_postponetimeout:	; 0 bytes @ 0x0
  3843                           	global	??_putch
  3844  0021                     ??_putch:	; 0 bytes @ 0x0
  3845                           	global	??_readch
  3846  0021                     ??_readch:	; 0 bytes @ 0x0
  3847                           	global	??_isdigit
  3848  0021                     ??_isdigit:	; 0 bytes @ 0x0
  3849                           	global	??_litterlanguage_running
  3850  0021                     ??_litterlanguage_running:	; 0 bytes @ 0x0
  3851                           	global	??_litterlanguage_paused
  3852  0021                     ??_litterlanguage_paused:	; 0 bytes @ 0x0
  3853                           	global	?_eeprom_write
  3854  0021                     ?_eeprom_write:	; 1 bytes @ 0x0
  3855                           	global	?_memcpy
  3856  0021                     ?_memcpy:	; 1 bytes @ 0x0
  3857                           	global	?___bmul
  3858  0021                     ?___bmul:	; 1 bytes @ 0x0
  3859                           	global	?_strlen
  3860  0021                     ?_strlen:	; 2 bytes @ 0x0
  3861                           	global	?___wmul
  3862  0021                     ?___wmul:	; 2 bytes @ 0x0
  3863                           	global	?___lwdiv
  3864  0021                     ?___lwdiv:	; 2 bytes @ 0x0
  3865                           	global	?_timestampdiff
  3866  0021                     ?_timestampdiff:	; 4 bytes @ 0x0
  3867                           	global	?___lmul
  3868  0021                     ?___lmul:	; 4 bytes @ 0x0
  3869                           	global	?___lldiv
  3870  0021                     ?___lldiv:	; 4 bytes @ 0x0
  3871                           	global	set_LED@on
  3872  0021                     set_LED@on:	; 1 bytes @ 0x0
  3873                           	global	eeprom_write@value
  3874  0021                     eeprom_write@value:	; 1 bytes @ 0x0
  3875                           	global	_isdigit$29792
  3876  0021                     _isdigit$29792:	; 1 bytes @ 0x0
  3877                           	global	memcpy@s1
  3878  0021                     memcpy@s1:	; 1 bytes @ 0x0
  3879                           	global	___bmul@multiplicand
  3880  0021                     ___bmul@multiplicand:	; 1 bytes @ 0x0
  3881                           	global	romwashprogram_reqins@address
  3882  0021                     romwashprogram_reqins@address:	; 2 bytes @ 0x0
  3883                           	global	postponetimeout@timer_p
  3884  0021                     postponetimeout@timer_p:	; 2 bytes @ 0x0
  3885                           	global	gettimestamp@ticks
  3886  0021                     gettimestamp@ticks:	; 2 bytes @ 0x0
  3887                           	global	timestampdiff@early_p
  3888  0021                     timestampdiff@early_p:	; 2 bytes @ 0x0
  3889                           	global	___wmul@multiplier
  3890  0021                     ___wmul@multiplier:	; 2 bytes @ 0x0
  3891                           	global	___lwdiv@divisor
  3892  0021                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  3893                           	global	___lmul@multiplier
  3894  0021                     ___lmul@multiplier:	; 4 bytes @ 0x0
  3895                           	global	___lldiv@divisor
  3896  0021                     ___lldiv@divisor:	; 4 bytes @ 0x0
  3897  0021                     	ds	1
  3898                           	global	??_eeprom_write
  3899  0022                     ??_eeprom_write:	; 0 bytes @ 0x1
  3900                           	global	??_set_LED
  3901  0022                     ??_set_LED:	; 0 bytes @ 0x1
  3902                           	global	??___bmul
  3903  0022                     ??___bmul:	; 0 bytes @ 0x1
  3904                           	global	set_Bowl@mode
  3905  0022                     set_Bowl@mode:	; 1 bytes @ 0x1
  3906                           	global	set_Arm@mode
  3907  0022                     set_Arm@mode:	; 1 bytes @ 0x1
  3908                           	global	set_Dosage@on
  3909  0022                     set_Dosage@on:	; 1 bytes @ 0x1
  3910                           	global	set_Pump@on
  3911  0022                     set_Pump@on:	; 1 bytes @ 0x1
  3912                           	global	set_Dryer@on
  3913  0022                     set_Dryer@on:	; 1 bytes @ 0x1
  3914                           	global	putch@ch
  3915  0022                     putch@ch:	; 1 bytes @ 0x1
  3916                           	global	water_init@mask
  3917  0022                     water_init@mask:	; 1 bytes @ 0x1
  3918                           	global	water_fill@fill
  3919  0022                     water_fill@fill:	; 1 bytes @ 0x1
  3920                           	global	isdigit@c
  3921  0022                     isdigit@c:	; 1 bytes @ 0x1
  3922                           	global	memcpy@n
  3923  0022                     memcpy@n:	; 2 bytes @ 0x1
  3924  0022                     	ds	1
  3925                           	global	?_req_instruction
  3926  0023                     ?_req_instruction:	; 0 bytes @ 0x2
  3927                           	global	??_gettimestamp
  3928  0023                     ??_gettimestamp:	; 0 bytes @ 0x2
  3929                           	global	??_romwashprogram_reqins
  3930  0023                     ??_romwashprogram_reqins:	; 0 bytes @ 0x2
  3931                           	global	??_strlen
  3932  0023                     ??_strlen:	; 0 bytes @ 0x2
  3933                           	global	set_LED@led
  3934  0023                     set_LED@led:	; 1 bytes @ 0x2
  3935                           	global	putch@dummy
  3936  0023                     putch@dummy:	; 1 bytes @ 0x2
  3937                           	global	readch@ch
  3938  0023                     readch@ch:	; 1 bytes @ 0x2
  3939                           	global	timestampdiff@late_p
  3940  0023                     timestampdiff@late_p:	; 1 bytes @ 0x2
  3941                           	global	water_init@channel
  3942  0023                     water_init@channel:	; 1 bytes @ 0x2
  3943                           	global	___bmul@product
  3944  0023                     ___bmul@product:	; 1 bytes @ 0x2
  3945                           	global	req_instruction@instruction
  3946  0023                     req_instruction@instruction:	; 2 bytes @ 0x2
  3947                           	global	___wmul@multiplicand
  3948  0023                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  3949                           	global	___lwdiv@dividend
  3950  0023                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  3951                           	global	postponetimeout@postpone
  3952  0023                     postponetimeout@postpone:	; 4 bytes @ 0x2
  3953  0023                     	ds	1
  3954                           	global	??_memcpy
  3955  0024                     ??_memcpy:	; 0 bytes @ 0x3
  3956                           	global	romwashprogram_getins@instruction
  3957  0024                     romwashprogram_getins@instruction:	; 1 bytes @ 0x3
  3958                           	global	set_LED@latch
  3959  0024                     set_LED@latch:	; 1 bytes @ 0x3
  3960                           	global	readch@result
  3961  0024                     readch@result:	; 1 bytes @ 0x3
  3962                           	global	eeprom_read@addr
  3963  0024                     eeprom_read@addr:	; 1 bytes @ 0x3
  3964                           	global	eeprom_write@addr
  3965  0024                     eeprom_write@addr:	; 1 bytes @ 0x3
  3966                           	global	___bmul@multiplier
  3967  0024                     ___bmul@multiplier:	; 1 bytes @ 0x3
  3968  0024                     	ds	1
  3969                           	global	??_catgenie_init
  3970  0025                     ??_catgenie_init:	; 0 bytes @ 0x4
  3971                           	global	?_timeoutnever
  3972  0025                     ?_timeoutnever:	; 0 bytes @ 0x4
  3973                           	global	??_req_instruction
  3974  0025                     ??_req_instruction:	; 0 bytes @ 0x4
  3975                           	global	??_get_instruction
  3976  0025                     ??_get_instruction:	; 0 bytes @ 0x4
  3977                           	global	??_timestampdiff
  3978  0025                     ??_timestampdiff:	; 0 bytes @ 0x4
  3979                           	global	?_timeoutnow
  3980  0025                     ?_timeoutnow:	; 0 bytes @ 0x4
  3981                           	global	??_both_long
  3982  0025                     ??_both_long:	; 0 bytes @ 0x4
  3983                           	global	??___wmul
  3984  0025                     ??___wmul:	; 0 bytes @ 0x4
  3985                           	global	??___lwdiv
  3986  0025                     ??___lwdiv:	; 0 bytes @ 0x4
  3987                           	global	?_strncmp
  3988  0025                     ?_strncmp:	; 2 bytes @ 0x4
  3989                           	global	get_instruction@instruction
  3990  0025                     get_instruction@instruction:	; 1 bytes @ 0x4
  3991                           	global	set_LED@mask
  3992  0025                     set_LED@mask:	; 1 bytes @ 0x4
  3993                           	global	memcpy@d1
  3994  0025                     memcpy@d1:	; 1 bytes @ 0x4
  3995                           	global	timeoutnow@timer_p
  3996  0025                     timeoutnow@timer_p:	; 2 bytes @ 0x4
  3997                           	global	timeoutnever@timer_p
  3998  0025                     timeoutnever@timer_p:	; 2 bytes @ 0x4
  3999                           	global	strncmp@s2
  4000  0025                     strncmp@s2:	; 2 bytes @ 0x4
  4001                           	global	___wmul@product
  4002  0025                     ___wmul@product:	; 2 bytes @ 0x4
  4003                           	global	___lmul@multiplicand
  4004  0025                     ___lmul@multiplicand:	; 4 bytes @ 0x4
  4005                           	global	___lldiv@dividend
  4006  0025                     ___lldiv@dividend:	; 4 bytes @ 0x4
  4007  0025                     	ds	1
  4008                           	global	memcpy@d
  4009  0026                     memcpy@d:	; 1 bytes @ 0x5
  4010                           	global	___lwdiv@counter
  4011  0026                     ___lwdiv@counter:	; 1 bytes @ 0x5
  4012                           	global	gettimestamp@bytes
  4013  0026                     gettimestamp@bytes:	; 2 bytes @ 0x5
  4014  0026                     	ds	1
  4015                           	global	??_timeoutnever
  4016  0027                     ??_timeoutnever:	; 0 bytes @ 0x6
  4017                           	global	??_timeoutnow
  4018  0027                     ??_timeoutnow:	; 0 bytes @ 0x6
  4019                           	global	??_postponetimeout
  4020  0027                     ??_postponetimeout:	; 0 bytes @ 0x6
  4021                           	global	memcpy@s
  4022  0027                     memcpy@s:	; 1 bytes @ 0x6
  4023                           	global	strncmp@len
  4024  0027                     strncmp@len:	; 2 bytes @ 0x6
  4025                           	global	___lwdiv@quotient
  4026  0027                     ___lwdiv@quotient:	; 2 bytes @ 0x6
  4027  0027                     	ds	1
  4028                           	global	catgenie_init@tempmask
  4029  0028                     catgenie_init@tempmask:	; 1 bytes @ 0x7
  4030                           	global	gettimestamp@temp
  4031  0028                     gettimestamp@temp:	; 1 bytes @ 0x7
  4032  0028                     	ds	1
  4033                           	global	?_set_pacer
  4034  0029                     ?_set_pacer:	; 0 bytes @ 0x8
  4035                           	global	??_strncmp
  4036  0029                     ??_strncmp:	; 0 bytes @ 0x8
  4037                           	global	??___lmul
  4038  0029                     ??___lmul:	; 0 bytes @ 0x8
  4039                           	global	??___lldiv
  4040  0029                     ??___lldiv:	; 0 bytes @ 0x8
  4041                           	global	?_timeoutexpired
  4042  0029                     ?_timeoutexpired:	; 1 bytes @ 0x8
  4043                           	global	?___lwmod
  4044  0029                     ?___lwmod:	; 2 bytes @ 0x8
  4045                           	global	catgenie_init@temp
  4046  0029                     catgenie_init@temp:	; 1 bytes @ 0x8
  4047                           	global	set_pacer@pattern
  4048  0029                     set_pacer@pattern:	; 1 bytes @ 0x8
  4049                           	global	strlen@s
  4050  0029                     strlen@s:	; 1 bytes @ 0x8
  4051                           	global	timeoutexpired@timer_p
  4052  0029                     timeoutexpired@timer_p:	; 2 bytes @ 0x8
  4053                           	global	___lwmod@divisor
  4054  0029                     ___lwmod@divisor:	; 2 bytes @ 0x8
  4055                           	global	___lmul@product
  4056  0029                     ___lmul@product:	; 4 bytes @ 0x8
  4057  0029                     	ds	1
  4058                           	global	set_pacer@repeat
  4059  002A                     set_pacer@repeat:	; 1 bytes @ 0x9
  4060                           	global	strlen@cp
  4061  002A                     strlen@cp:	; 1 bytes @ 0x9
  4062                           	global	___lldiv@quotient
  4063  002A                     ___lldiv@quotient:	; 4 bytes @ 0x9
  4064  002A                     	ds	1
  4065                           	global	??_timeoutexpired
  4066  002B                     ??_timeoutexpired:	; 0 bytes @ 0xA
  4067                           	global	??_set_pacer
  4068  002B                     ??_set_pacer:	; 0 bytes @ 0xA
  4069                           	global	strncmp@s1
  4070  002B                     strncmp@s1:	; 1 bytes @ 0xA
  4071                           	global	___lwmod@dividend
  4072  002B                     ___lwmod@dividend:	; 2 bytes @ 0xA
  4073                           	global	postponetimeout@tempLongTicks
  4074  002B                     postponetimeout@tempLongTicks:	; 4 bytes @ 0xA
  4075  002B                     	ds	1
  4076                           	global	?_cmd2index
  4077  002C                     ?_cmd2index:	; 2 bytes @ 0xB
  4078  002C                     	ds	1
  4079                           	global	?_settimeout
  4080  002D                     ?_settimeout:	; 0 bytes @ 0xC
  4081                           	global	??___lwmod
  4082  002D                     ??___lwmod:	; 0 bytes @ 0xC
  4083                           	global	set_pacer@pacer
  4084  002D                     set_pacer@pacer:	; 1 bytes @ 0xC
  4085                           	global	settimeout@timer_p
  4086  002D                     settimeout@timer_p:	; 2 bytes @ 0xC
  4087                           	global	timestampdiff@diff
  4088  002D                     timestampdiff@diff:	; 4 bytes @ 0xC
  4089  002D                     	ds	1
  4090                           	global	?_set_Beeper
  4091  002E                     ?_set_Beeper:	; 0 bytes @ 0xD
  4092                           	global	?_set_LED_Error
  4093  002E                     ?_set_LED_Error:	; 0 bytes @ 0xD
  4094                           	global	?_set_LED_Cartridge
  4095  002E                     ?_set_LED_Cartridge:	; 0 bytes @ 0xD
  4096                           	global	?_set_LED_Cat
  4097  002E                     ?_set_LED_Cat:	; 0 bytes @ 0xD
  4098                           	global	?_set_LED_Locked
  4099  002E                     ?_set_LED_Locked:	; 0 bytes @ 0xD
  4100                           	global	??_cmd2index
  4101  002E                     ??_cmd2index:	; 0 bytes @ 0xD
  4102                           	global	set_LED_Error@repeat
  4103  002E                     set_LED_Error@repeat:	; 1 bytes @ 0xD
  4104                           	global	set_LED_Locked@repeat
  4105  002E                     set_LED_Locked@repeat:	; 1 bytes @ 0xD
  4106                           	global	set_LED_Cartridge@repeat
  4107  002E                     set_LED_Cartridge@repeat:	; 1 bytes @ 0xD
  4108                           	global	set_LED_Cat@repeat
  4109  002E                     set_LED_Cat@repeat:	; 1 bytes @ 0xD
  4110                           	global	set_Beeper@repeat
  4111  002E                     set_Beeper@repeat:	; 1 bytes @ 0xD
  4112                           	global	___lwmod@counter
  4113  002E                     ___lwmod@counter:	; 1 bytes @ 0xD
  4114                           	global	___lldiv@counter
  4115  002E                     ___lldiv@counter:	; 1 bytes @ 0xD
  4116  002E                     	ds	1
  4117                           	global	?_serial_init
  4118  002F                     ?_serial_init:	; 0 bytes @ 0xE
  4119                           	global	??_set_Beeper
  4120  002F                     ??_set_Beeper:	; 0 bytes @ 0xE
  4121                           	global	??_set_LED_Error
  4122  002F                     ??_set_LED_Error:	; 0 bytes @ 0xE
  4123                           	global	??_set_LED_Cartridge
  4124  002F                     ??_set_LED_Cartridge:	; 0 bytes @ 0xE
  4125                           	global	??_set_LED_Cat
  4126  002F                     ??_set_LED_Cat:	; 0 bytes @ 0xE
  4127                           	global	??_set_LED_Locked
  4128  002F                     ??_set_LED_Locked:	; 0 bytes @ 0xE
  4129                           	global	?_printf
  4130  002F                     ?_printf:	; 2 bytes @ 0xE
  4131                           	global	cmd2index@cmd
  4132  002F                     cmd2index@cmd:	; 1 bytes @ 0xE
  4133                           	global	postponetimeout@longshort
  4134  002F                     postponetimeout@longshort:	; 2 bytes @ 0xE
  4135                           	global	printf@f
  4136  002F                     printf@f:	; 2 bytes @ 0xE
  4137                           	global	serial_init@bitrate
  4138  002F                     serial_init@bitrate:	; 4 bytes @ 0xE
  4139                           	global	settimeout@timout
  4140  002F                     settimeout@timout:	; 4 bytes @ 0xE
  4141  002F                     	ds	1
  4142                           	global	cmd2index@index
  4143  0030                     cmd2index@index:	; 2 bytes @ 0xF
  4144  0030                     	ds	1
  4145                           	global	set_LED_Error@pattern
  4146  0031                     set_LED_Error@pattern:	; 1 bytes @ 0x10
  4147                           	global	set_LED_Locked@pattern
  4148  0031                     set_LED_Locked@pattern:	; 1 bytes @ 0x10
  4149                           	global	set_LED_Cartridge@pattern
  4150  0031                     set_LED_Cartridge@pattern:	; 1 bytes @ 0x10
  4151                           	global	set_LED_Cat@pattern
  4152  0031                     set_LED_Cat@pattern:	; 1 bytes @ 0x10
  4153                           	global	set_Beeper@pattern
  4154  0031                     set_Beeper@pattern:	; 1 bytes @ 0x10
  4155                           	global	timestampdiff@early_longshort
  4156  0031                     timestampdiff@early_longshort:	; 2 bytes @ 0x10
  4157                           	global	timeoutexpired@currentTime
  4158  0031                     timeoutexpired@currentTime:	; 6 bytes @ 0x10
  4159  0031                     	ds	1
  4160                           	global	??_update_display
  4161  0032                     ??_update_display:	; 0 bytes @ 0x11
  4162  0032                     	ds	1
  4163                           	global	??_serial_init
  4164  0033                     ??_serial_init:	; 0 bytes @ 0x12
  4165                           	global	??_settimeout
  4166  0033                     ??_settimeout:	; 0 bytes @ 0x12
  4167                           	global	timestampdiff@late_longshort
  4168  0033                     timestampdiff@late_longshort:	; 1 bytes @ 0x12
  4169  0033                     	ds	4
  4170                           	global	??_rtc_work
  4171  0037                     ??_rtc_work:	; 0 bytes @ 0x16
  4172                           	global	??_wait_instruction
  4173  0037                     ??_wait_instruction:	; 0 bytes @ 0x16
  4174                           	global	settimeout@tempLongTicks
  4175  0037                     settimeout@tempLongTicks:	; 4 bytes @ 0x16
  4176  0037                     	ds	2
  4177                           	global	??_printf
  4178  0039                     ??_printf:	; 0 bytes @ 0x18
  4179  0039                     	ds	2
  4180                           	global	settimeout@longshort
  4181  003B                     settimeout@longshort:	; 2 bytes @ 0x1A
  4182  003B                     	ds	2
  4183                           	global	??_rtc_init
  4184  003D                     ??_rtc_init:	; 0 bytes @ 0x1C
  4185                           	global	??_update_autotimer
  4186  003D                     ??_update_autotimer:	; 0 bytes @ 0x1C
  4187                           	global	??_both_short
  4188  003D                     ??_both_short:	; 0 bytes @ 0x1C
  4189                           	global	?_process_button
  4190  003D                     ?_process_button:	; 0 bytes @ 0x1C
  4191                           	global	process_button@down
  4192  003D                     process_button@down:	; 1 bytes @ 0x1C
  4193                           	global	update_autotimer@mode
  4194  003D                     update_autotimer@mode:	; 1 bytes @ 0x1C
  4195                           	global	rtc_init@flags
  4196  003D                     rtc_init@flags:	; 1 bytes @ 0x1C
  4197                           	global	printf@ap
  4198  003D                     printf@ap:	; 1 bytes @ 0x1C
  4199  003D                     	ds	1
  4200                           	global	??_process_button
  4201  003E                     ??_process_button:	; 0 bytes @ 0x1D
  4202                           	global	printf@flag
  4203  003E                     printf@flag:	; 1 bytes @ 0x1D
  4204  003E                     	ds	1
  4205                           	global	process_button@button_mask
  4206  003F                     process_button@button_mask:	; 1 bytes @ 0x1E
  4207                           	global	printf@width
  4208  003F                     printf@width:	; 2 bytes @ 0x1E
  4209                           	global	serial_init@divider
  4210  003F                     serial_init@divider:	; 4 bytes @ 0x1E
  4211  003F                     	ds	1
  4212                           	global	?_setupbutton_event
  4213  0040                     ?_setupbutton_event:	; 0 bytes @ 0x1F
  4214                           	global	heatsensor_event@detected
  4215  0040                     heatsensor_event@detected:	; 1 bytes @ 0x1F
  4216                           	global	startbutton_event@up
  4217  0040                     startbutton_event@up:	; 1 bytes @ 0x1F
  4218                           	global	setupbutton_event@up
  4219  0040                     setupbutton_event@up:	; 1 bytes @ 0x1F
  4220  0040                     	ds	1
  4221                           	global	??_heatsensor_event
  4222  0041                     ??_heatsensor_event:	; 0 bytes @ 0x20
  4223                           	global	??_startbutton_event
  4224  0041                     ??_startbutton_event:	; 0 bytes @ 0x20
  4225                           	global	??_setupbutton_event
  4226  0041                     ??_setupbutton_event:	; 0 bytes @ 0x20
  4227                           	global	printf@prec
  4228  0041                     printf@prec:	; 1 bytes @ 0x20
  4229  0041                     	ds	1
  4230                           	global	??_catgenie_work
  4231  0042                     ??_catgenie_work:	; 0 bytes @ 0x21
  4232                           	global	printf@c
  4233  0042                     printf@c:	; 1 bytes @ 0x21
  4234  0042                     	ds	1
  4235                           	global	printf@_val
  4236  0043                     printf@_val:	; 4 bytes @ 0x22
  4237  0043                     	ds	2
  4238                           	global	_catgenie_work$30512
  4239  0045                     _catgenie_work$30512:	; 1 bytes @ 0x24
  4240  0045                     	ds	1
  4241                           	global	catgenie_work@tempmask
  4242  0046                     catgenie_work@tempmask:	; 1 bytes @ 0x25
  4243  0046                     	ds	1
  4244                           	global	??_cmdline_init
  4245  0047                     ??_cmdline_init:	; 0 bytes @ 0x26
  4246                           	global	??_printtime
  4247  0047                     ??_printtime:	; 0 bytes @ 0x26
  4248                           	global	??_set_mode
  4249  0047                     ??_set_mode:	; 0 bytes @ 0x26
  4250                           	global	?_echo
  4251  0047                     ?_echo:	; 2 bytes @ 0x26
  4252                           	global	catgenie_work@status
  4253  0047                     catgenie_work@status:	; 1 bytes @ 0x26
  4254                           	global	echo@argc
  4255  0047                     echo@argc:	; 2 bytes @ 0x26
  4256                           	global	help@argc
  4257  0047                     help@argc:	; 2 bytes @ 0x26
  4258  0047                     	ds	1
  4259                           	global	catgenie_work@tempstate
  4260  0048                     catgenie_work@tempstate:	; 1 bytes @ 0x27
  4261  0048                     	ds	1
  4262                           	global	set_mode@mode
  4263  0049                     set_mode@mode:	; 1 bytes @ 0x28
  4264                           	global	catgenie_work@temp
  4265  0049                     catgenie_work@temp:	; 1 bytes @ 0x28
  4266                           	global	echo@argv
  4267  0049                     echo@argv:	; 1 bytes @ 0x28
  4268                           	global	help@argv
  4269  0049                     help@argv:	; 1 bytes @ 0x28
  4270  0049                     	ds	1
  4271                           	global	??_help
  4272  004A                     ??_help:	; 0 bytes @ 0x29
  4273                           	global	??_echo
  4274  004A                     ??_echo:	; 0 bytes @ 0x29
  4275                           	global	??_userinterface_init
  4276  004A                     ??_userinterface_init:	; 0 bytes @ 0x29
  4277                           	global	??_setup_short
  4278  004A                     ??_setup_short:	; 0 bytes @ 0x29
  4279                           	global	_echo$17754
  4280  004A                     _echo$17754:	; 2 bytes @ 0x29
  4281  004A                     	ds	1
  4282                           	global	userinterface_init@flags
  4283  004B                     userinterface_init@flags:	; 1 bytes @ 0x2A
  4284                           	global	_setup_short$10735
  4285  004B                     _setup_short$10735:	; 2 bytes @ 0x2A
  4286                           	global	_help$30523
  4287  004B                     _help$30523:	; 2 bytes @ 0x2A
  4288  004B                     	ds	2
  4289                           	global	help@index
  4290  004D                     help@index:	; 2 bytes @ 0x2C
  4291  004D                     	ds	2
  4292                           	global	??_litterlanguage_cleanup
  4293  004F                     ??_litterlanguage_cleanup:	; 0 bytes @ 0x2E
  4294                           	global	??_proc_line
  4295  004F                     ??_proc_line:	; 0 bytes @ 0x2E
  4296                           	global	??_litterlanguage_start
  4297  004F                     ??_litterlanguage_start:	; 0 bytes @ 0x2E
  4298                           	global	??_litterlanguage_pause
  4299  004F                     ??_litterlanguage_pause:	; 0 bytes @ 0x2E
  4300                           	global	??_litterlanguage_stop
  4301  004F                     ??_litterlanguage_stop:	; 0 bytes @ 0x2E
  4302                           	global	??_watersensor_event
  4303  004F                     ??_watersensor_event:	; 0 bytes @ 0x2E
  4304                           	global	??_catsensor_event
  4305  004F                     ??_catsensor_event:	; 0 bytes @ 0x2E
  4306                           	global	_litterlanguage_start$5890
  4307  004F                     _litterlanguage_start$5890:	; 2 bytes @ 0x2E
  4308                           	global	_litterlanguage_cleanup$5941
  4309  004F                     _litterlanguage_cleanup$5941:	; 2 bytes @ 0x2E
  4310                           	global	_catsensor_event$10723
  4311  004F                     _catsensor_event$10723:	; 2 bytes @ 0x2E
  4312  004F                     	ds	1
  4313                           	global	litterlanguage_pause@pause
  4314  0050                     litterlanguage_pause@pause:	; 1 bytes @ 0x2F
  4315                           	global	_watersensor_event$5929
  4316  0050                     _watersensor_event$5929:	; 2 bytes @ 0x2F
  4317  0050                     	ds	1
  4318                           	global	litterlanguage_start@wet
  4319  0051                     litterlanguage_start@wet:	; 1 bytes @ 0x30
  4320                           	global	litterlanguage_cleanup@wet
  4321  0051                     litterlanguage_cleanup@wet:	; 1 bytes @ 0x30
  4322                           	global	catsensor_event@detected
  4323  0051                     catsensor_event@detected:	; 1 bytes @ 0x30
  4324                           	global	proc_line@argv
  4325  0051                     proc_line@argv:	; 4 bytes @ 0x30
  4326                           	global	litterlanguage_pause@timer_now
  4327  0051                     litterlanguage_pause@timer_now:	; 6 bytes @ 0x30
  4328  0051                     	ds	1
  4329                           	global	??_litterlanguage_init
  4330  0052                     ??_litterlanguage_init:	; 0 bytes @ 0x31
  4331                           	global	??_catsensor_work
  4332  0052                     ??_catsensor_work:	; 0 bytes @ 0x31
  4333                           	global	??_start_long
  4334  0052                     ??_start_long:	; 0 bytes @ 0x31
  4335                           	global	watersensor_event@detected
  4336  0052                     watersensor_event@detected:	; 1 bytes @ 0x31
  4337  0052                     	ds	1
  4338                           	global	??_water_work
  4339  0053                     ??_water_work:	; 0 bytes @ 0x32
  4340  0053                     	ds	1
  4341                           	global	litterlanguage_init@flags
  4342  0054                     litterlanguage_init@flags:	; 1 bytes @ 0x33
  4343  0054                     	ds	1
  4344                           	global	_proc_line$30517
  4345  0055                     _proc_line$30517:	; 1 bytes @ 0x34
  4346  0055                     	ds	1
  4347                           	global	proc_line@index
  4348  0056                     proc_line@index:	; 2 bytes @ 0x35
  4349  0056                     	ds	1
  4350                           	global	?_litterlanguage_event
  4351  0057                     ?_litterlanguage_event:	; 0 bytes @ 0x36
  4352                           	global	??_start_short
  4353  0057                     ??_start_short:	; 0 bytes @ 0x36
  4354                           	global	litterlanguage_event@argument
  4355  0057                     litterlanguage_event@argument:	; 1 bytes @ 0x36
  4356  0057                     	ds	1
  4357                           	global	??_userinterface_work
  4358  0058                     ??_userinterface_work:	; 0 bytes @ 0x37
  4359                           	global	??_litterlanguage_event
  4360  0058                     ??_litterlanguage_event:	; 0 bytes @ 0x37
  4361                           	global	litterlanguage_event@event
  4362  0058                     litterlanguage_event@event:	; 1 bytes @ 0x37
  4363                           	global	proc_line@argc
  4364  0058                     proc_line@argc:	; 2 bytes @ 0x37
  4365  0058                     	ds	1
  4366                           	global	??_exe_instruction
  4367  0059                     ??_exe_instruction:	; 0 bytes @ 0x38
  4368  0059                     	ds	1
  4369                           	global	??_litterlanguage_work
  4370  005A                     ??_litterlanguage_work:	; 0 bytes @ 0x39
  4371                           	global	userinterface_work@update
  4372  005A                     userinterface_work@update:	; 1 bytes @ 0x39
  4373                           	global	proc_line@len
  4374  005A                     proc_line@len:	; 2 bytes @ 0x39
  4375  005A                     	ds	2
  4376                           	global	proc_line@line
  4377  005C                     proc_line@line:	; 1 bytes @ 0x3B
  4378                           	global	_litterlanguage_work$5880
  4379  005C                     _litterlanguage_work$5880:	; 2 bytes @ 0x3B
  4380  005C                     	ds	1
  4381                           	global	??_proc_char
  4382  005D                     ??_proc_char:	; 0 bytes @ 0x3C
  4383  005D                     	ds	1
  4384                           	global	proc_char@rxd
  4385  005E                     proc_char@rxd:	; 1 bytes @ 0x3D
  4386  005E                     	ds	1
  4387                           	global	??_cmdline_work
  4388  005F                     ??_cmdline_work:	; 0 bytes @ 0x3E
  4389                           	global	cmdline_work@rxd
  4390  005F                     cmdline_work@rxd:	; 1 bytes @ 0x3E
  4391  005F                     	ds	1
  4392                           	global	??_main
  4393  0060                     ??_main:	; 0 bytes @ 0x3F
  4394  0060                     	ds	1
  4395                           	global	main@flags
  4396  0061                     main@flags:	; 1 bytes @ 0x40
  4397  0061                     	ds	1
  4398 ;;Data sizes: Strings 1041, constant 819, data 141, bss 114, persistent 0 stack 0
  4399 ;;Auto spaces:   Size  Autos    Used
  4400 ;; COMMON          14     12      14
  4401 ;; BANK0           79     65      79
  4402 ;; BANK1           80     38      79
  4403 ;; BANK2           80      0      80
  4404 ;; BANK3           80      0      66
  4405 ;; BANK4           80      0      55
  4406 ;; BANK5           80      0       0
  4407 ;; BANK6           80      0       0
  4408 ;; BANK7           80      0       0
  4409 ;; BANK8           80      0       0
  4410 ;; BANK9           80      0       0
  4411 ;; BANK10          80      0       0
  4412 ;; BANK11          80      0       0
  4413 ;; BANK12          48      0       0
  4414                           
  4415 ;;
  4416 ;; Pointer list with targets:
  4417                           
  4418 ;; help$30523	PTR const unsigned char [8] size(2) Largest target is 36
  4419 ;;		 -> commands(CODE[36]), 
  4420 ;;
  4421 ;; proc_line$30517	const PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4422 ;;		 -> Absolute function(), echo(), help(), 
  4423 ;;
  4424 ;; catgenie_work$30512	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4425 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4426 ;;
  4427 ;; proc_line$30334	const PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4428 ;;		 -> Absolute function(), echo(), help(), 
  4429 ;;
  4430 ;; catgenie_work$30329	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4431 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4432 ;;
  4433 ;; help@argv	PTR PTR unsigned char  size(1) Largest target is 4
  4434 ;;		 -> proc_line@argv(BANK0[4]), 
  4435 ;;
  4436 ;; Absolute function$1	PTR PTR unsigned char  size(1) Largest target is 4
  4437 ;;		 -> proc_line@argv(BANK0[4]), 
  4438 ;;
  4439 ;; help$30236	PTR const unsigned char [8] size(2) Largest target is 36
  4440 ;;		 -> commands(CODE[36]), 
  4441 ;;
  4442 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  4443 ;;
  4444 ;; ?_strncmp	int  size(1) Largest target is 0
  4445 ;;
  4446 ;; S3275$1$1	PTR PTR unsigned char  size(1) Largest target is 4
  4447 ;;		 -> proc_line@argv(BANK0[4]), 
  4448 ;;
  4449 ;; ?_cmd2index	int  size(1) Largest target is 0
  4450 ;;
  4451 ;; ?_strlen	unsigned int  size(1) Largest target is 20
  4452 ;;		 -> linebuffer(BANK3[20]), 
  4453 ;;
  4454 ;; ?_memcpy	PTR void  size(1) Largest target is 2
  4455 ;;		 -> ins_pointer(BANK0[2]), 
  4456 ;;
  4457 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  4458 ;;
  4459 ;; ?___lwmod	unsigned int  size(2) Largest target is 16384
  4460 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), STR_97(CODE[4]), 
  4461 ;;		 -> STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), STR_81(CODE[7]), 
  4462 ;;		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), STR_75(CODE[7]), 
  4463 ;;		 -> STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), STR_70(CODE[4]), 
  4464 ;;		 -> STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), STR_64(CODE[4]), 
  4465 ;;		 -> STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), STR_57(CODE[4]), 
  4466 ;;		 -> STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), STR_50(CODE[4]), 
  4467 ;;		 -> STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4468 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), cleanupprogram(CODE[36]), 
  4469 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), STR_31(CODE[5]), 
  4470 ;;		 -> washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), STR_20(CODE[4]), 
  4471 ;;		 -> STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), commands(CODE[36]), 
  4472 ;;
  4473 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  4474 ;;
  4475 ;; ?___lmul	unsigned long  size(1) Largest target is 0
  4476 ;;
  4477 ;; ?_timestampdiff	unsigned long  size(1) Largest target is 0
  4478 ;;
  4479 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 36
  4480 ;;		 -> STR_107(CODE[4]), STR_106(CODE[3]), commands(CODE[36]), 
  4481 ;;
  4482 ;; strncmp@s1	PTR const unsigned char  size(1) Largest target is 20
  4483 ;;		 -> linebuffer(BANK3[20]), 
  4484 ;;
  4485 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 20
  4486 ;;		 -> linebuffer(BANK3[20]), 
  4487 ;;
  4488 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 20
  4489 ;;		 -> linebuffer(BANK3[20]), 
  4490 ;;
  4491 ;; memcpy@d1	PTR void  size(1) Largest target is 2
  4492 ;;		 -> ins_pointer(BANK0[2]), 
  4493 ;;
  4494 ;; memcpy@d	PTR unsigned char  size(1) Largest target is 2
  4495 ;;		 -> ins_pointer(BANK0[2]), 
  4496 ;;
  4497 ;; memcpy@s1	PTR const void  size(1) Largest target is 2
  4498 ;;		 -> exe_instruction@temp(BANK1[2]), 
  4499 ;;
  4500 ;; memcpy@s	PTR const unsigned char  size(1) Largest target is 2
  4501 ;;		 -> exe_instruction@temp(BANK1[2]), 
  4502 ;;
  4503 ;; printf@_val._cp	PTR const unsigned char  size(2) Largest target is 16384
  4504 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4505 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4506 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4507 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4508 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4509 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4510 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4511 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4512 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4513 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4514 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4515 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4516 ;;		 -> commands(CODE[36]), 
  4517 ;;
  4518 ;; printf@f	PTR const unsigned char  size(2) Largest target is 24
  4519 ;;		 -> STR_113(CODE[17]), STR_112(CODE[4]), STR_111(CODE[17]), STR_108(CODE[10]), 
  4520 ;;		 -> STR_105(CODE[22]), STR_104(CODE[15]), STR_103(CODE[17]), STR_102(CODE[11]), 
  4521 ;;		 -> STR_101(CODE[14]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[13]), 
  4522 ;;		 -> STR_95(CODE[8]), STR_94(CODE[18]), STR_93(CODE[10]), STR_92(CODE[12]), 
  4523 ;;		 -> STR_91(CODE[20]), STR_90(CODE[2]), STR_89(CODE[18]), STR_88(CODE[22]), 
  4524 ;;		 -> STR_87(CODE[8]), STR_86(CODE[19]), STR_85(CODE[17]), STR_82(CODE[24]), 
  4525 ;;		 -> STR_79(CODE[20]), STR_76(CODE[20]), STR_73(CODE[17]), STR_68(CODE[20]), 
  4526 ;;		 -> STR_67(CODE[19]), STR_62(CODE[16]), STR_61(CODE[11]), STR_60(CODE[10]), 
  4527 ;;		 -> STR_55(CODE[15]), STR_54(CODE[11]), STR_53(CODE[9]), STR_48(CODE[16]), 
  4528 ;;		 -> STR_44(CODE[12]), STR_40(CODE[13]), STR_39(CODE[12]), STR_36(CODE[21]), 
  4529 ;;		 -> STR_35(CODE[14]), STR_34(CODE[9]), STR_33(CODE[8]), STR_30(CODE[10]), 
  4530 ;;		 -> STR_29(CODE[18]), STR_28(CODE[18]), STR_27(CODE[16]), STR_24(CODE[21]), 
  4531 ;;		 -> STR_23(CODE[2]), STR_22(CODE[17]), STR_21(CODE[15]), STR_18(CODE[14]), 
  4532 ;;		 -> STR_17(CODE[12]), STR_16(CODE[15]), STR_15(CODE[14]), STR_14(CODE[20]), 
  4533 ;;		 -> STR_13(CODE[9]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
  4534 ;;		 -> STR_9(CODE[8]), STR_8(CODE[19]), STR_7(CODE[19]), STR_6(CODE[11]), 
  4535 ;;		 -> STR_5(CODE[19]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[16]), 
  4536 ;;		 -> STR_1(CODE[20]), 
  4537 ;;
  4538 ;; ?_printf	int  size(2) Largest target is 16384
  4539 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), STR_97(CODE[4]), 
  4540 ;;		 -> STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), STR_81(CODE[7]), 
  4541 ;;		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), STR_75(CODE[7]), 
  4542 ;;		 -> STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), STR_70(CODE[4]), 
  4543 ;;		 -> STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), STR_64(CODE[4]), 
  4544 ;;		 -> STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), STR_57(CODE[4]), 
  4545 ;;		 -> STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), STR_50(CODE[4]), 
  4546 ;;		 -> STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4547 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), cleanupprogram(CODE[36]), 
  4548 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), STR_31(CODE[5]), 
  4549 ;;		 -> washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), STR_20(CODE[4]), 
  4550 ;;		 -> STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), commands(CODE[36]), 
  4551 ;;
  4552 ;; printf@ap	PTR void [1] size(1) Largest target is 2
  4553 ;;		 -> ?_printf(BANK0[2]), 
  4554 ;;
  4555 ;; S27033$_cp	PTR const unsigned char  size(2) Largest target is 16384
  4556 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4557 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4558 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4559 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4560 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4561 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4562 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4563 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4564 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4565 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4566 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4567 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4568 ;;		 -> commands(CODE[36]), 
  4569 ;;
  4570 ;; _val._str._cp	PTR const unsigned char  size(2) Largest target is 16384
  4571 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4572 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4573 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4574 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4575 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4576 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4577 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4578 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4579 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4580 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4581 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4582 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4583 ;;		 -> commands(CODE[36]), 
  4584 ;;
  4585 ;; timestampdiff@late_p	const PTR const struct timer size(1) Largest target is 6
  4586 ;;		 -> litterlanguage_pause@timer_now(BANK0[6]), 
  4587 ;;
  4588 ;; timestampdiff@late_longshort	PTR struct longshort size(1) Largest target is 6
  4589 ;;		 -> litterlanguage_pause@timer_now(BANK0[6]), 
  4590 ;;
  4591 ;; timestampdiff@early_p	const PTR const struct timer size(2) Largest target is 6
  4592 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4593 ;;
  4594 ;; timestampdiff@early_longshort	PTR struct longshort size(2) Largest target is 6
  4595 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4596 ;;
  4597 ;; gettimestamp@ticks	const PTR struct timer size(2) Largest target is 60
  4598 ;;		 -> sensortimer(BANK2[6]), timeoutexpired@currentTime(BANK0[6]), second(BANK2[6]), pingtime(BANK2[6]), 
  4599 ;;		 -> debouncer(BANK2[6]), pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), 
  4600 ;;		 -> autotimer(BANK1[6]), holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), litterlanguage_pause@timer_now(BANK0[6])
       , 
  4601 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4602 ;;
  4603 ;; gettimestamp@bytes	PTR unsigned char  size(2) Largest target is 60
  4604 ;;		 -> sensortimer(BANK2[6]), timeoutexpired@currentTime(BANK0[6]), second(BANK2[6]), pingtime(BANK2[6]), 
  4605 ;;		 -> debouncer(BANK2[6]), pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), 
  4606 ;;		 -> autotimer(BANK1[6]), holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), litterlanguage_pause@timer_now(BANK0[6])
       , 
  4607 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4608 ;;
  4609 ;; timeoutexpired@timer_p	const PTR const struct timer size(2) Largest target is 60
  4610 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK2[6]), debouncer(BANK2[6]), 
  4611 ;;		 -> pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4612 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4613 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4614 ;;
  4615 ;; timeoutnever@timer_p	const PTR struct timer size(2) Largest target is 45
  4616 ;;		 -> debouncer(BANK2[6]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4617 ;;		 -> holdtimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), 
  4618 ;;		 -> timer_waitins(BANK2[6]), 
  4619 ;;
  4620 ;; timeoutnow@timer_p	const PTR struct timer size(2) Largest target is 60
  4621 ;;		 -> pacers(BANK4[55]), cattimer(BANK2[6]), 
  4622 ;;
  4623 ;; postponetimeout@timer_p	const PTR struct timer size(2) Largest target is 6
  4624 ;;		 -> second(BANK2[6]), autotimer(BANK1[6]), 
  4625 ;;
  4626 ;; postponetimeout@longshort	PTR struct longshort size(2) Largest target is 6
  4627 ;;		 -> second(BANK2[6]), autotimer(BANK1[6]), 
  4628 ;;
  4629 ;; settimeout@timer_p	const PTR struct timer size(2) Largest target is 60
  4630 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK2[6]), debouncer(BANK2[6]), 
  4631 ;;		 -> pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4632 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4633 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4634 ;;
  4635 ;; settimeout@longshort	PTR struct longshort size(2) Largest target is 60
  4636 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK2[6]), debouncer(BANK2[6]), 
  4637 ;;		 -> pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4638 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4639 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4640 ;;
  4641 ;; readch@ch	PTR unsigned char  size(1) Largest target is 1
  4642 ;;		 -> cmdline_work@rxd(BANK0[1]), 
  4643 ;;
  4644 ;; echo$17754	PTR const unsigned char  size(2) Largest target is 4
  4645 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), 
  4646 ;;
  4647 ;; echo@argv	PTR PTR unsigned char  size(1) Largest target is 4
  4648 ;;		 -> proc_line@argv(BANK0[4]), 
  4649 ;;
  4650 ;; cmd2index@cmd	PTR unsigned char  size(1) Largest target is 20
  4651 ;;		 -> linebuffer(BANK3[20]), 
  4652 ;;
  4653 ;; proc_line@argv	PTR unsigned char [4] size(1) Largest target is 20
  4654 ;;		 -> linebuffer(BANK3[20]), 
  4655 ;;
  4656 ;; proc_line@line	PTR unsigned char  size(1) Largest target is 20
  4657 ;;		 -> linebuffer(BANK3[20]), 
  4658 ;;
  4659 ;; set_LED@latch	PTR volatile unsigned char  size(1) Largest target is 1
  4660 ;;		 -> LATA(BITSFR2[1]), LATC(BITSFR2[1]), 
  4661 ;;
  4662 ;; S13026pacer$port	PTR volatile unsigned char  size(1) Largest target is 1
  4663 ;;		 -> LATE(BITSFR2[1]), LATC(BITSFR2[1]), 
  4664 ;;
  4665 ;; pacers.port	PTR volatile unsigned char  size(1) Largest target is 1
  4666 ;;		 -> LATE(BITSFR2[1]), LATC(BITSFR2[1]), 
  4667 ;;
  4668 ;; S13011debouncer$handler	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4669 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4670 ;;
  4671 ;; debouncers.handler	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4672 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4673 ;;
  4674 ;; S13011debouncer$port	PTR volatile unsigned char  size(1) Largest target is 1
  4675 ;;		 -> PORTB(BITSFR0[1]), 
  4676 ;;
  4677 ;; debouncers.port	PTR volatile unsigned char  size(1) Largest target is 1
  4678 ;;		 -> PORTB(BITSFR0[1]), 
  4679 ;;
  4680 ;; catsensor_event$10723	PTR const unsigned char  size(2) Largest target is 4
  4681 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), 
  4682 ;;
  4683 ;; romwashprogram_getins@instruction	const PTR struct instruction size(1) Largest target is 3
  4684 ;;		 -> cur_instruction(BANK0[3]), 
  4685 ;;
  4686 ;; romwashprogram_reqins@address	PTR const struct instruction size(2) Largest target is 16384
  4687 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4688 ;;
  4689 ;; ins_address	PTR const struct instruction size(2) Largest target is 16384
  4690 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4691 ;;
  4692 ;; sp__memcpy	PTR void  size(1) Largest target is 2
  4693 ;;		 -> ins_pointer(BANK0[2]), 
  4694 ;;
  4695 ;; exe_instruction@ret_address	PTR const struct instruction size(2) Largest target is 16384
  4696 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4697 ;;
  4698 ;; exe_instruction$6010	PTR const unsigned char  size(2) Largest target is 7
  4699 ;;		 -> STR_84(CODE[7]), STR_83(CODE[1]), 
  4700 ;;
  4701 ;; exe_instruction$6006	PTR const unsigned char  size(2) Largest target is 7
  4702 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), 
  4703 ;;
  4704 ;; exe_instruction$6002	PTR const unsigned char  size(2) Largest target is 7
  4705 ;;		 -> STR_78(CODE[1]), STR_77(CODE[7]), 
  4706 ;;
  4707 ;; exe_instruction$5998	PTR const unsigned char  size(2) Largest target is 7
  4708 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), 
  4709 ;;
  4710 ;; exe_instruction$5994	PTR const unsigned char  size(2) Largest target is 5
  4711 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), 
  4712 ;;
  4713 ;; exe_instruction$5993	PTR const unsigned char  size(2) Largest target is 7
  4714 ;;		 -> STR_72(CODE[7]), STR_71(CODE[1]), 
  4715 ;;
  4716 ;; exe_instruction$5986	PTR const unsigned char  size(2) Largest target is 4
  4717 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), 
  4718 ;;
  4719 ;; exe_instruction$5985	PTR const unsigned char  size(2) Largest target is 7
  4720 ;;		 -> STR_66(CODE[7]), STR_65(CODE[1]), 
  4721 ;;
  4722 ;; exe_instruction$5977	PTR const unsigned char  size(2) Largest target is 4
  4723 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), 
  4724 ;;
  4725 ;; exe_instruction$5976	PTR const unsigned char  size(2) Largest target is 7
  4726 ;;		 -> STR_59(CODE[7]), STR_58(CODE[1]), 
  4727 ;;
  4728 ;; exe_instruction$5968	PTR const unsigned char  size(2) Largest target is 4
  4729 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), 
  4730 ;;
  4731 ;; exe_instruction$5967	PTR const unsigned char  size(2) Largest target is 7
  4732 ;;		 -> STR_52(CODE[7]), STR_51(CODE[1]), 
  4733 ;;
  4734 ;; exe_instruction$5961	PTR const unsigned char  size(2) Largest target is 9
  4735 ;;		 -> STR_47(CODE[7]), STR_46(CODE[9]), 
  4736 ;;
  4737 ;; exe_instruction$5960	PTR const unsigned char  size(2) Largest target is 9
  4738 ;;		 -> STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4739 ;;
  4740 ;; exe_instruction$5955	PTR const unsigned char  size(2) Largest target is 9
  4741 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), 
  4742 ;;
  4743 ;; exe_instruction$5954	PTR const unsigned char  size(2) Largest target is 10
  4744 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4745 ;;
  4746 ;; get_instruction@instruction	PTR struct instruction size(1) Largest target is 3
  4747 ;;		 -> cur_instruction(BANK0[3]), 
  4748 ;;
  4749 ;; req_instruction@instruction	PTR const struct instruction size(2) Largest target is 16384
  4750 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4751 ;;
  4752 ;; litterlanguage_cleanup$5941	PTR const unsigned char  size(2) Largest target is 4
  4753 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), 
  4754 ;;
  4755 ;; watersensor_event$5929	PTR const unsigned char  size(2) Largest target is 5
  4756 ;;		 -> STR_32(CODE[4]), STR_31(CODE[5]), 
  4757 ;;
  4758 ;; litterlanguage_start$5890	PTR const unsigned char  size(2) Largest target is 4
  4759 ;;		 -> STR_26(CODE[4]), STR_25(CODE[4]), 
  4760 ;;
  4761 ;; litterlanguage_work$5880	PTR const unsigned char  size(2) Largest target is 4
  4762 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), 
  4763 ;;
  4764 ;; ins_pointer	PTR const struct instruction size(2) Largest target is 16384
  4765 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4766 ;;
  4767 ;; S3275command$function	PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4768 ;;		 -> Absolute function(), echo(), help(), 
  4769 ;;
  4770 ;; commands.function	PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4771 ;;		 -> Absolute function(), echo(), help(), 
  4772 ;;
  4773                           
  4774                           
  4775 ;;
  4776 ;; Critical Paths under _main in COMMON
  4777 ;;
  4778 ;;   None.
  4779 ;;
  4780 ;; Critical Paths under _isr in COMMON
  4781 ;;
  4782 ;;   _isr->_serial_rx_isr
  4783 ;;
  4784 ;; Critical Paths under _main in BANK0
  4785 ;;
  4786 ;;   _main->_cmdline_work
  4787 ;;   _litterlanguage_work->_exe_instruction
  4788 ;;   _exe_instruction->_litterlanguage_event
  4789 ;;   _litterlanguage_event->_litterlanguage_pause
  4790 ;;   _litterlanguage_stop->_printtime
  4791 ;;   _userinterface_work->_start_short
  4792 ;;   _start_long->_litterlanguage_start
  4793 ;;   _start_short->_litterlanguage_pause
  4794 ;;   _catgenie_work->_setupbutton_event
  4795 ;;   _catgenie_work->_startbutton_event
  4796 ;;   _catgenie_work->_heatsensor_event
  4797 ;;   _water_work->_watersensor_event
  4798 ;;   _setupbutton_event->_process_button
  4799 ;;   _startbutton_event->_process_button
  4800 ;;   _watersensor_event->_printtime
  4801 ;;   _litterlanguage_pause->_printtime
  4802 ;;   _cmdline_work->_proc_char
  4803 ;;   _catsensor_work->_catsensor_event
  4804 ;;   _proc_char->_proc_line
  4805 ;;   _catsensor_event->_printtime
  4806 ;;   _process_button->_settimeout
  4807 ;;   _setup_short->_set_mode
  4808 ;;   _litterlanguage_init->_litterlanguage_cleanup
  4809 ;;   _userinterface_init->_set_mode
  4810 ;;   _proc_line->_help
  4811 ;;   _update_display->_set_LED_Error
  4812 ;;   _update_display->_set_LED_Cartridge
  4813 ;;   _update_display->_set_LED_Cat
  4814 ;;   _update_display->_set_LED_Locked
  4815 ;;   _set_mode->_printf
  4816 ;;   _litterlanguage_start->_printtime
  4817 ;;   _litterlanguage_cleanup->_printtime
  4818 ;;   _help->_printf
  4819 ;;   _echo->_printf
  4820 ;;   _set_LED_Locked->_set_pacer
  4821 ;;   _set_LED_Cat->_set_pacer
  4822 ;;   _set_LED_Cartridge->_set_pacer
  4823 ;;   _set_LED_Error->_set_pacer
  4824 ;;   _set_Beeper->_set_pacer
  4825 ;;   _both_short->_settimeout
  4826 ;;   _update_autotimer->_settimeout
  4827 ;;   _wait_instruction->_timeoutexpired
  4828 ;;   _printtime->_printf
  4829 ;;   _rtc_work->_timeoutexpired
  4830 ;;   _cmdline_init->_printf
  4831 ;;   _rtc_init->_settimeout
  4832 ;;   _cmd2index->_strncmp
  4833 ;;   _set_pacer->_timeoutnow
  4834 ;;   _both_long->_eeprom_write
  4835 ;;   _settimeout->___lmul
  4836 ;;   _get_instruction->_romwashprogram_getins
  4837 ;;   _req_instruction->_romwashprogram_reqins
  4838 ;;   _timeoutexpired->_gettimestamp
  4839 ;;   _printf->___lwmod
  4840 ;;   _serial_init->___lldiv
  4841 ;;   _catgenie_init->___bmul
  4842 ;;   ___lwmod->___lwdiv
  4843 ;;   _strncmp->___bmul
  4844 ;;   _timeoutnow->___bmul
  4845 ;;   _timeoutnever->___bmul
  4846 ;;
  4847 ;; Critical Paths under _isr in BANK0
  4848 ;;
  4849 ;;   None.
  4850 ;;
  4851 ;; Critical Paths under _main in BANK1
  4852 ;;
  4853 ;;   _litterlanguage_work->_exe_instruction
  4854 ;;
  4855 ;; Critical Paths under _isr in BANK1
  4856 ;;
  4857 ;;   None.
  4858 ;;
  4859 ;; Critical Paths under _main in BANK2
  4860 ;;
  4861 ;;   None.
  4862 ;;
  4863 ;; Critical Paths under _isr in BANK2
  4864 ;;
  4865 ;;   None.
  4866 ;;
  4867 ;; Critical Paths under _main in BANK3
  4868 ;;
  4869 ;;   None.
  4870 ;;
  4871 ;; Critical Paths under _isr in BANK3
  4872 ;;
  4873 ;;   None.
  4874 ;;
  4875 ;; Critical Paths under _main in BANK4
  4876 ;;
  4877 ;;   None.
  4878 ;;
  4879 ;; Critical Paths under _isr in BANK4
  4880 ;;
  4881 ;;   None.
  4882 ;;
  4883 ;; Critical Paths under _main in BANK5
  4884 ;;
  4885 ;;   None.
  4886 ;;
  4887 ;; Critical Paths under _isr in BANK5
  4888 ;;
  4889 ;;   None.
  4890 ;;
  4891 ;; Critical Paths under _main in BANK6
  4892 ;;
  4893 ;;   None.
  4894 ;;
  4895 ;; Critical Paths under _isr in BANK6
  4896 ;;
  4897 ;;   None.
  4898 ;;
  4899 ;; Critical Paths under _main in BANK7
  4900 ;;
  4901 ;;   None.
  4902 ;;
  4903 ;; Critical Paths under _isr in BANK7
  4904 ;;
  4905 ;;   None.
  4906 ;;
  4907 ;; Critical Paths under _main in BANK8
  4908 ;;
  4909 ;;   None.
  4910 ;;
  4911 ;; Critical Paths under _isr in BANK8
  4912 ;;
  4913 ;;   None.
  4914 ;;
  4915 ;; Critical Paths under _main in BANK9
  4916 ;;
  4917 ;;   None.
  4918 ;;
  4919 ;; Critical Paths under _isr in BANK9
  4920 ;;
  4921 ;;   None.
  4922 ;;
  4923 ;; Critical Paths under _main in BANK10
  4924 ;;
  4925 ;;   None.
  4926 ;;
  4927 ;; Critical Paths under _isr in BANK10
  4928 ;;
  4929 ;;   None.
  4930 ;;
  4931 ;; Critical Paths under _main in BANK11
  4932 ;;
  4933 ;;   None.
  4934 ;;
  4935 ;; Critical Paths under _isr in BANK11
  4936 ;;
  4937 ;;   None.
  4938 ;;
  4939 ;; Critical Paths under _main in BANK12
  4940 ;;
  4941 ;;   None.
  4942 ;;
  4943 ;; Critical Paths under _isr in BANK12
  4944 ;;
  4945 ;;   None.
  4946                           
  4947 ;;
  4948 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4949 ;;
  4950                           
  4951 ;;
  4952 ;;Call Graph Tables:
  4953 ;;
  4954 ;; ---------------------------------------------------------------------------------
  4955 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  4956 ;; ---------------------------------------------------------------------------------
  4957 ;; (0) _main                                                 2     2      0  174475
  4958 ;;                                             63 BANK0      2     2      0
  4959 ;;                      _catgenie_init
  4960 ;;                        _serial_init
  4961 ;;                             _printf
  4962 ;;                         _timer_init
  4963 ;;                           _rtc_init
  4964 ;;                     _catsensor_init
  4965 ;;                         _water_init
  4966 ;;                 _userinterface_init
  4967 ;;                       _cmdline_init
  4968 ;;                _litterlanguage_init
  4969 ;;                     _interrupt_init
  4970 ;;                           _rtc_work
  4971 ;;                     _catsensor_work
  4972 ;;                         _water_work
  4973 ;;                      _catgenie_work
  4974 ;;                 _userinterface_work
  4975 ;;                       _cmdline_work
  4976 ;;                _litterlanguage_work
  4977 ;; ---------------------------------------------------------------------------------
  4978 ;; (1) _litterlanguage_work                                  4     4      0   57943
  4979 ;;                                             57 BANK0      4     4      0
  4980 ;;                     _water_detected
  4981 ;;                      _water_filling
  4982 ;;                     _timeoutexpired
  4983 ;;                          _printtime
  4984 ;;                             _printf
  4985 ;;               _litterlanguage_event
  4986 ;;                           _get_Pump
  4987 ;;                       _timeoutnever
  4988 ;;                         _set_Dosage
  4989 ;;                    _req_instruction
  4990 ;;                    _get_instruction
  4991 ;;                        _eeprom_read
  4992 ;;                       _eeprom_write
  4993 ;;                    _exe_instruction
  4994 ;;                   _wait_instruction
  4995 ;; ---------------------------------------------------------------------------------
  4996 ;; (2) _exe_instruction                                     39    39      0   33164
  4997 ;;                                             56 BANK0      1     1      0
  4998 ;;                                              0 BANK1     38    38      0
  4999 ;;                          _printtime
  5000 ;;                             _printf
  5001 ;;                           _set_Bowl
  5002 ;;                            _set_Arm
  5003 ;;                        _eeprom_read
  5004 ;;                       _eeprom_write
  5005 ;;                     _water_detected
  5006 ;;                         _water_fill
  5007 ;;                         _settimeout
  5008 ;;                       _timeoutnever
  5009 ;;                           _set_Pump
  5010 ;;                          _set_Dryer
  5011 ;;                             ___lmul
  5012 ;;                             ___wmul
  5013 ;;                            ___lwdiv
  5014 ;;                            ___lwmod
  5015 ;;                         _set_Dosage
  5016 ;;                             _memcpy
  5017 ;;                _litterlanguage_stop
  5018 ;;               _litterlanguage_event
  5019 ;; ---------------------------------------------------------------------------------
  5020 ;; (3) _litterlanguage_event                                 2     1      1   16817
  5021 ;;                                             54 BANK0      2     1      1
  5022 ;;                _litterlanguage_stop
  5023 ;;               _litterlanguage_pause
  5024 ;;                         _set_Beeper
  5025 ;; ---------------------------------------------------------------------------------
  5026 ;; (4) _litterlanguage_stop                                  1     1      0    7232
  5027 ;;                                             46 BANK0      1     1      0
  5028 ;;                          _printtime
  5029 ;;                             _printf
  5030 ;;                           _set_Bowl
  5031 ;;                            _set_Arm
  5032 ;;                         _water_fill
  5033 ;;                         _set_Dosage
  5034 ;;                           _set_Pump
  5035 ;;                          _set_Dryer
  5036 ;;                       _timeoutnever
  5037 ;;               _litterlanguage_event
  5038 ;; ---------------------------------------------------------------------------------
  5039 ;; (1) _userinterface_work                                   3     3      0   45522
  5040 ;;                                             55 BANK0      3     3      0
  5041 ;;                     _timeoutexpired
  5042 ;;                   _update_autotimer
  5043 ;;                          _printtime
  5044 ;;                             _printf
  5045 ;;               _litterlanguage_start
  5046 ;;             _litterlanguage_running
  5047 ;;                         _timeoutnow
  5048 ;;                        _start_short
  5049 ;;                        _setup_short
  5050 ;;                         _both_short
  5051 ;;                         _set_Beeper
  5052 ;;                         _start_long
  5053 ;;                         _setup_long
  5054 ;;                          _both_long
  5055 ;;                       _timeoutnever
  5056 ;;                     _update_display
  5057 ;; ---------------------------------------------------------------------------------
  5058 ;; (2) _start_long                                           1     1      0    6773
  5059 ;;                                             49 BANK0      1     1      0
  5060 ;;             _litterlanguage_running
  5061 ;;               _litterlanguage_start
  5062 ;;                _litterlanguage_stop
  5063 ;; ---------------------------------------------------------------------------------
  5064 ;; (2) _start_short                                          1     1      0   15447
  5065 ;;                                             54 BANK0      1     1      0
  5066 ;;             _litterlanguage_running
  5067 ;;               _litterlanguage_start
  5068 ;;              _litterlanguage_paused
  5069 ;;               _litterlanguage_pause
  5070 ;; ---------------------------------------------------------------------------------
  5071 ;; (1) _catgenie_work                                        8     8      0   10303
  5072 ;;                                             33 BANK0      8     8      0
  5073 ;;                         _settimeout
  5074 ;;                             ___bmul
  5075 ;;                     _timeoutexpired
  5076 ;;                  _setupbutton_event
  5077 ;;                  _startbutton_event
  5078 ;;                   _heatsensor_event
  5079 ;;                       _timeoutnever
  5080 ;; ---------------------------------------------------------------------------------
  5081 ;; (1) _water_work                                           1     1      0    8120
  5082 ;;                                             50 BANK0      1     1      0
  5083 ;;                     _timeoutexpired
  5084 ;;                         _settimeout
  5085 ;;                  _watersensor_event
  5086 ;; ---------------------------------------------------------------------------------
  5087 ;; (2) _setupbutton_event                                    2     1      1    3901
  5088 ;;                                             31 BANK0      2     1      1
  5089 ;;                     _process_button
  5090 ;; ---------------------------------------------------------------------------------
  5091 ;; (2) _startbutton_event                                    2     1      1    3901
  5092 ;;                                             31 BANK0      2     1      1
  5093 ;;                     _process_button
  5094 ;; ---------------------------------------------------------------------------------
  5095 ;; (2) _heatsensor_event                                     2     1      1     341
  5096 ;;                                             31 BANK0      2     1      1
  5097 ;;               _litterlanguage_event
  5098 ;; ---------------------------------------------------------------------------------
  5099 ;; (2) _watersensor_event                                    4     4      0    7207
  5100 ;;                                             46 BANK0      4     4      0
  5101 ;;                          _printtime
  5102 ;;                             _printf
  5103 ;;                         _water_fill
  5104 ;;                       _timeoutnever
  5105 ;;               _litterlanguage_event
  5106 ;; ---------------------------------------------------------------------------------
  5107 ;; (4) _litterlanguage_pause                                 8     8      0    8674
  5108 ;;                                             46 BANK0      8     8      0
  5109 ;;                          _printtime
  5110 ;;                           _get_Bowl
  5111 ;;                           _set_Bowl
  5112 ;;                            _get_Arm
  5113 ;;                            _set_Arm
  5114 ;;                      _water_filling
  5115 ;;                         _water_fill
  5116 ;;                         _get_Dosage
  5117 ;;                         _set_Dosage
  5118 ;;                           _get_Pump
  5119 ;;                           _set_Pump
  5120 ;;                          _get_Dryer
  5121 ;;                          _set_Dryer
  5122 ;;                       _gettimestamp
  5123 ;;                      _timestampdiff
  5124 ;;                       _timeoutnever
  5125 ;;                             _printf
  5126 ;;                         _settimeout
  5127 ;;               _litterlanguage_event
  5128 ;; ---------------------------------------------------------------------------------
  5129 ;; (1) _cmdline_work                                         1     1      0   15795
  5130 ;;                                             62 BANK0      1     1      0
  5131 ;;                              _putch
  5132 ;;                          _proc_char
  5133 ;;                             _readch
  5134 ;; ---------------------------------------------------------------------------------
  5135 ;; (1) _catsensor_work                                       1     1      0   10893
  5136 ;;                                             49 BANK0      1     1      0
  5137 ;;                     _timeoutexpired
  5138 ;;                         _settimeout
  5139 ;;                       _timeoutnever
  5140 ;;                    _catsensor_event
  5141 ;; ---------------------------------------------------------------------------------
  5142 ;; (2) _proc_char                                            2     2      0   15616
  5143 ;;                                             60 BANK0      2     2      0
  5144 ;;                              _putch
  5145 ;;                          _proc_line
  5146 ;;                             _printf
  5147 ;; ---------------------------------------------------------------------------------
  5148 ;; (2) _catsensor_event                                      3     3      0    9918
  5149 ;;                                             46 BANK0      3     3      0
  5150 ;;                          _printtime
  5151 ;;                             _printf
  5152 ;;                       _timeoutnever
  5153 ;;                         _settimeout
  5154 ;;                     _update_display
  5155 ;; ---------------------------------------------------------------------------------
  5156 ;; (3) _process_button                                       3     2      1    3870
  5157 ;;                                             28 BANK0      3     2      1
  5158 ;;                         _set_Beeper
  5159 ;;                         _settimeout
  5160 ;;                       _timeoutnever
  5161 ;;                     _update_display
  5162 ;; ---------------------------------------------------------------------------------
  5163 ;; (2) _setup_short                                          3     3      0    4792
  5164 ;;                                             41 BANK0      3     3      0
  5165 ;;                           _set_mode
  5166 ;;                         _settimeout
  5167 ;; ---------------------------------------------------------------------------------
  5168 ;; (1) _litterlanguage_init                                  3     3      0   10241
  5169 ;;                                             49 BANK0      3     3      0
  5170 ;;                             _printf
  5171 ;;             _litterlanguage_cleanup
  5172 ;;                       _eeprom_write
  5173 ;;                        _eeprom_read
  5174 ;; ---------------------------------------------------------------------------------
  5175 ;; (1) _userinterface_init                                   2     2      0    6984
  5176 ;;                                             41 BANK0      2     2      0
  5177 ;;                       _eeprom_write
  5178 ;;                        _eeprom_read
  5179 ;;                           _set_mode
  5180 ;;                     _update_display
  5181 ;; ---------------------------------------------------------------------------------
  5182 ;; (3) _proc_line                                           14    14      0   12028
  5183 ;;                                             46 BANK0     14    14      0
  5184 ;;                             _strlen
  5185 ;;                          _cmd2index
  5186 ;;                             _printf
  5187 ;;                             ___bmul
  5188 ;;                   Absolute function
  5189 ;;                               _echo
  5190 ;;                               _help
  5191 ;; ---------------------------------------------------------------------------------
  5192 ;; (2) _update_display                                       1     1      0    2544
  5193 ;;                                             17 BANK0      1     1      0
  5194 ;;                      _set_LED_Error
  5195 ;;                  _set_LED_Cartridge
  5196 ;;                            _set_LED
  5197 ;;                        _set_LED_Cat
  5198 ;;                     _set_LED_Locked
  5199 ;; ---------------------------------------------------------------------------------
  5200 ;; (3) _set_mode                                             3     3      0    4278
  5201 ;;                                             38 BANK0      3     3      0
  5202 ;;                             _printf
  5203 ;;                   _update_autotimer
  5204 ;;                         _timeoutnow
  5205 ;;                       _eeprom_write
  5206 ;; ---------------------------------------------------------------------------------
  5207 ;; (3) _litterlanguage_start                                 3     3      0    6773
  5208 ;;                                             46 BANK0      3     3      0
  5209 ;;                          _printtime
  5210 ;;                             _printf
  5211 ;; ---------------------------------------------------------------------------------
  5212 ;; (2) _litterlanguage_cleanup                               3     3      0    6773
  5213 ;;                                             46 BANK0      3     3      0
  5214 ;;                          _printtime
  5215 ;;                             _printf
  5216 ;; ---------------------------------------------------------------------------------
  5217 ;; (4) _help                                                 8     5      3    3599
  5218 ;;                                             38 BANK0      8     5      3
  5219 ;;                             _printf
  5220 ;;                             ___bmul
  5221 ;; ---------------------------------------------------------------------------------
  5222 ;; (4) _echo                                                 5     2      3    3632
  5223 ;;                                             38 BANK0      5     2      3
  5224 ;;                            _strncmp
  5225 ;;                             _printf
  5226 ;; ---------------------------------------------------------------------------------
  5227 ;; (3) _set_LED_Locked                                       4     3      1     601
  5228 ;;                                             13 BANK0      4     3      1
  5229 ;;                          _set_pacer
  5230 ;; ---------------------------------------------------------------------------------
  5231 ;; (3) _set_LED_Cat                                          4     3      1     601
  5232 ;;                                             13 BANK0      4     3      1
  5233 ;;                          _set_pacer
  5234 ;; ---------------------------------------------------------------------------------
  5235 ;; (3) _set_LED_Cartridge                                    4     3      1     601
  5236 ;;                                             13 BANK0      4     3      1
  5237 ;;                          _set_pacer
  5238 ;; ---------------------------------------------------------------------------------
  5239 ;; (3) _set_LED_Error                                        4     3      1     601
  5240 ;;                                             13 BANK0      4     3      1
  5241 ;;                          _set_pacer
  5242 ;; ---------------------------------------------------------------------------------
  5243 ;; (4) _set_Beeper                                           4     3      1     601
  5244 ;;                                             13 BANK0      4     3      1
  5245 ;;                          _set_pacer
  5246 ;; ---------------------------------------------------------------------------------
  5247 ;; (2) _both_short                                           0     0      0     477
  5248 ;;                         _settimeout
  5249 ;; ---------------------------------------------------------------------------------
  5250 ;; (4) _update_autotimer                                     1     1      0     748
  5251 ;;                                             28 BANK0      1     1      0
  5252 ;;                         _settimeout
  5253 ;;                    _postponetimeout
  5254 ;;                       _timeoutnever
  5255 ;; ---------------------------------------------------------------------------------
  5256 ;; (2) _wait_instruction                                     1     1      0     498
  5257 ;;                                             22 BANK0      1     1      0
  5258 ;;                     _timeoutexpired
  5259 ;;                     _water_detected
  5260 ;;                       _timeoutnever
  5261 ;;                         _get_Dosage
  5262 ;; ---------------------------------------------------------------------------------
  5263 ;; (5) _printtime                                            8     8      0    3337
  5264 ;;                                             38 BANK0      8     8      0
  5265 ;;                             _printf
  5266 ;; ---------------------------------------------------------------------------------
  5267 ;; (1) _rtc_work                                             1     1      0     614
  5268 ;;                                             22 BANK0      1     1      0
  5269 ;;                     _timeoutexpired
  5270 ;;                    _postponetimeout
  5271 ;; ---------------------------------------------------------------------------------
  5272 ;; (1) _cmdline_init                                         0     0      0    3337
  5273 ;;                             _printf
  5274 ;; ---------------------------------------------------------------------------------
  5275 ;; (1) _rtc_init                                             1     1      0     508
  5276 ;;                                             28 BANK0      1     1      0
  5277 ;;                         _settimeout
  5278 ;; ---------------------------------------------------------------------------------
  5279 ;; (4) _cmd2index                                            6     4      2     400
  5280 ;;                                             11 BANK0      6     4      2
  5281 ;;                             ___bmul
  5282 ;;                            _strncmp
  5283 ;; ---------------------------------------------------------------------------------
  5284 ;; (5) _set_pacer                                            5     3      2     539
  5285 ;;                                              8 BANK0      5     3      2
  5286 ;;                             ___bmul
  5287 ;;                         _timeoutnow
  5288 ;; ---------------------------------------------------------------------------------
  5289 ;; (2) _both_long                                            1     1      0      69
  5290 ;;                                              4 BANK0      1     1      0
  5291 ;;                       _eeprom_write
  5292 ;; ---------------------------------------------------------------------------------
  5293 ;; (5) _settimeout                                          16    10      6     477
  5294 ;;                                             12 BANK0     16    10      6
  5295 ;;                       _gettimestamp
  5296 ;;                             ___lmul (ARG)
  5297 ;;                             ___bmul (ARG)
  5298 ;; ---------------------------------------------------------------------------------
  5299 ;; (2) _get_instruction                                      1     1      0      62
  5300 ;;                                              4 BANK0      1     1      0
  5301 ;;              _romwashprogram_getins
  5302 ;; ---------------------------------------------------------------------------------
  5303 ;; (2) _req_instruction                                      2     0      2      62
  5304 ;;                                              2 BANK0      2     0      2
  5305 ;;              _romwashprogram_reqins
  5306 ;; ---------------------------------------------------------------------------------
  5307 ;; (3) _timeoutexpired                                      14    12      2     436
  5308 ;;                                              8 BANK0     14    12      2
  5309 ;;                       _gettimestamp
  5310 ;;                             ___bmul (ARG)
  5311 ;; ---------------------------------------------------------------------------------
  5312 ;; (5) _printf                                              24    14     10    3337
  5313 ;;                                             14 BANK0     24    14     10
  5314 ;;                              _putch
  5315 ;;                            _isdigit
  5316 ;;                             ___wmul
  5317 ;;                             ___bmul
  5318 ;;                            ___lwdiv
  5319 ;;                            ___lwmod
  5320 ;; ---------------------------------------------------------------------------------
  5321 ;; (1) _serial_init                                         20    16      4     295
  5322 ;;                                             14 BANK0     20    16      4
  5323 ;;                            ___lldiv
  5324 ;; ---------------------------------------------------------------------------------
  5325 ;; (1) _catgenie_init                                        5     5      0     371
  5326 ;;                                              4 BANK0      5     5      0
  5327 ;;                             ___bmul
  5328 ;; ---------------------------------------------------------------------------------
  5329 ;; (2) ___lldiv                                             14     6      8     162
  5330 ;;                                              0 BANK0     14     6      8
  5331 ;; ---------------------------------------------------------------------------------
  5332 ;; (3) ___lmul                                              12     4      8     136
  5333 ;;                                              0 BANK0     12     4      8
  5334 ;; ---------------------------------------------------------------------------------
  5335 ;; (6) ___lwmod                                              6     2      4     232
  5336 ;;                                              8 BANK0      6     2      4
  5337 ;;                            ___lwdiv (ARG)
  5338 ;; ---------------------------------------------------------------------------------
  5339 ;; (6) ___lwdiv                                              8     4      4     241
  5340 ;;                                              0 BANK0      8     4      4
  5341 ;; ---------------------------------------------------------------------------------
  5342 ;; (6) ___wmul                                               6     2      4     136
  5343 ;;                                              0 BANK0      6     2      4
  5344 ;; ---------------------------------------------------------------------------------
  5345 ;; (6) ___bmul                                               4     3      1     136
  5346 ;;                                              0 BANK0      4     3      1
  5347 ;; ---------------------------------------------------------------------------------
  5348 ;; (6) _isdigit                                              2     2      0      99
  5349 ;;                                              0 BANK0      2     2      0
  5350 ;; ---------------------------------------------------------------------------------
  5351 ;; (5) _strncmp                                              7     3      4     134
  5352 ;;                                              4 BANK0      7     3      4
  5353 ;;                             ___bmul (ARG)
  5354 ;; ---------------------------------------------------------------------------------
  5355 ;; (4) _strlen                                              10     8      2      89
  5356 ;;                                              0 BANK0     10     8      2
  5357 ;; ---------------------------------------------------------------------------------
  5358 ;; (2) _readch                                               4     4      0      46
  5359 ;;                                              0 BANK0      4     4      0
  5360 ;; ---------------------------------------------------------------------------------
  5361 ;; (6) _putch                                                3     3      0      34
  5362 ;;                                              0 BANK0      3     3      0
  5363 ;; ---------------------------------------------------------------------------------
  5364 ;; (5) _postponetimeout                                     16    10      6     178
  5365 ;;                                              0 BANK0     16    10      6
  5366 ;; ---------------------------------------------------------------------------------
  5367 ;; (3) _set_LED                                              5     4      1     140
  5368 ;;                                              0 BANK0      5     4      1
  5369 ;; ---------------------------------------------------------------------------------
  5370 ;; (2) _setup_long                                           0     0      0       0
  5371 ;; ---------------------------------------------------------------------------------
  5372 ;; (6) _timeoutnow                                           4     2      2      62
  5373 ;;                                              4 BANK0      4     2      2
  5374 ;;                             ___bmul (ARG)
  5375 ;; ---------------------------------------------------------------------------------
  5376 ;; (3) _memcpy                                               7     4      3     174
  5377 ;;                                              0 BANK0      7     4      3
  5378 ;; ---------------------------------------------------------------------------------
  5379 ;; (3) _romwashprogram_getins                                4     4      0      31
  5380 ;;                                              0 BANK0      4     4      0
  5381 ;; ---------------------------------------------------------------------------------
  5382 ;; (3) _romwashprogram_reqins                                2     0      2      31
  5383 ;;                                              0 BANK0      2     0      2
  5384 ;; ---------------------------------------------------------------------------------
  5385 ;; (3) _litterlanguage_paused                                0     0      0       0
  5386 ;; ---------------------------------------------------------------------------------
  5387 ;; (5) _timestampdiff                                       19    15      4     486
  5388 ;;                                              0 BANK0     19    15      4
  5389 ;; ---------------------------------------------------------------------------------
  5390 ;; (4) _gettimestamp                                         8     6      2     192
  5391 ;;                                              0 BANK0      8     6      2
  5392 ;; ---------------------------------------------------------------------------------
  5393 ;; (5) _set_Dryer                                            2     2      0      31
  5394 ;;                                              0 BANK0      2     2      0
  5395 ;; ---------------------------------------------------------------------------------
  5396 ;; (5) _get_Dryer                                            0     0      0       0
  5397 ;; ---------------------------------------------------------------------------------
  5398 ;; (5) _set_Pump                                             2     2      0      31
  5399 ;;                                              0 BANK0      2     2      0
  5400 ;; ---------------------------------------------------------------------------------
  5401 ;; (3) _get_Dosage                                           0     0      0       0
  5402 ;; ---------------------------------------------------------------------------------
  5403 ;; (5) _water_fill                                           2     2      0      31
  5404 ;;                                              0 BANK0      2     2      0
  5405 ;; ---------------------------------------------------------------------------------
  5406 ;; (5) _set_Arm                                              2     2      0      31
  5407 ;;                                              0 BANK0      2     2      0
  5408 ;; ---------------------------------------------------------------------------------
  5409 ;; (5) _get_Arm                                              2     2      0       0
  5410 ;;                                              0 BANK0      2     2      0
  5411 ;; ---------------------------------------------------------------------------------
  5412 ;; (5) _set_Bowl                                             2     2      0      31
  5413 ;;                                              0 BANK0      2     2      0
  5414 ;; ---------------------------------------------------------------------------------
  5415 ;; (5) _get_Bowl                                             2     2      0       0
  5416 ;;                                              0 BANK0      2     2      0
  5417 ;; ---------------------------------------------------------------------------------
  5418 ;; (3) _litterlanguage_running                               0     0      0       0
  5419 ;; ---------------------------------------------------------------------------------
  5420 ;; (5) _set_Dosage                                           2     2      0      31
  5421 ;;                                              0 BANK0      2     2      0
  5422 ;; ---------------------------------------------------------------------------------
  5423 ;; (3) _timeoutnever                                         4     2      2      62
  5424 ;;                                              4 BANK0      4     2      2
  5425 ;;                             ___bmul (ARG)
  5426 ;; ---------------------------------------------------------------------------------
  5427 ;; (5) _get_Pump                                             0     0      0       0
  5428 ;; ---------------------------------------------------------------------------------
  5429 ;; (5) _water_filling                                        0     0      0       0
  5430 ;; ---------------------------------------------------------------------------------
  5431 ;; (3) _water_detected                                       0     0      0       0
  5432 ;; ---------------------------------------------------------------------------------
  5433 ;; (3) _eeprom_read                                          4     4      0      31
  5434 ;;                                              0 BANK0      4     4      0
  5435 ;; ---------------------------------------------------------------------------------
  5436 ;; (3) _eeprom_write                                         4     3      1      69
  5437 ;;                                              0 BANK0      4     3      1
  5438 ;; ---------------------------------------------------------------------------------
  5439 ;; (1) _interrupt_init                                       1     1      0       0
  5440 ;;                                              0 BANK0      1     1      0
  5441 ;; ---------------------------------------------------------------------------------
  5442 ;; (1) _water_init                                           3     3      0      48
  5443 ;;                                              0 BANK0      3     3      0
  5444 ;; ---------------------------------------------------------------------------------
  5445 ;; (1) _catsensor_init                                       0     0      0       0
  5446 ;; ---------------------------------------------------------------------------------
  5447 ;; (1) _timer_init                                           0     0      0       0
  5448 ;; ---------------------------------------------------------------------------------
  5449 ;; (4) Absolute function(Fake)                               3     0      3       0
  5450 ;;                                              0 BANK0      3     0      3
  5451 ;; ---------------------------------------------------------------------------------
  5452 ;; Estimated maximum stack depth 6
  5453 ;; ---------------------------------------------------------------------------------
  5454 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5455 ;; ---------------------------------------------------------------------------------
  5456 ;; (14) _isr                                                 3     3      0      47
  5457 ;;                                              9 COMMON     3     3      0
  5458 ;;                          _timer_isr
  5459 ;;                _catsensor_isr_timer
  5460 ;;                _catsensor_isr_input
  5461 ;;                      _serial_rx_isr
  5462 ;;                      _serial_tx_isr
  5463 ;; ---------------------------------------------------------------------------------
  5464 ;; (15) _serial_tx_isr                                       0     0      0       0
  5465 ;; ---------------------------------------------------------------------------------
  5466 ;; (15) _serial_rx_isr                                       9     9      0      24
  5467 ;;                                              0 COMMON     9     9      0
  5468 ;; ---------------------------------------------------------------------------------
  5469 ;; (15) _catsensor_isr_input                                 0     0      0       0
  5470 ;; ---------------------------------------------------------------------------------
  5471 ;; (15) _catsensor_isr_timer                                 1     1      0       0
  5472 ;;                                              0 COMMON     1     1      0
  5473 ;; ---------------------------------------------------------------------------------
  5474 ;; (15) _timer_isr                                           0     0      0       0
  5475 ;; ---------------------------------------------------------------------------------
  5476 ;; Estimated maximum stack depth 15
  5477 ;; ---------------------------------------------------------------------------------
  5478                           
  5479 ;; Call Graph Graphs:
  5480                           
  5481 ;; _main (ROOT)
  5482 ;;   _catgenie_init
  5483 ;;     ___bmul
  5484 ;;   _serial_init
  5485 ;;     ___lldiv
  5486 ;;   _printf
  5487 ;;     _putch
  5488 ;;     _isdigit
  5489 ;;     ___wmul
  5490 ;;     ___bmul
  5491 ;;     ___lwdiv
  5492 ;;     ___lwmod
  5493 ;;       ___lwdiv (ARG)
  5494 ;;   _timer_init
  5495 ;;   _rtc_init
  5496 ;;     _settimeout
  5497 ;;       _gettimestamp
  5498 ;;       ___lmul (ARG)
  5499 ;;       ___bmul (ARG)
  5500 ;;   _catsensor_init
  5501 ;;   _water_init
  5502 ;;   _userinterface_init
  5503 ;;     _eeprom_write
  5504 ;;     _eeprom_read
  5505 ;;     _set_mode
  5506 ;;       _printf
  5507 ;;         _putch
  5508 ;;         _isdigit
  5509 ;;         ___wmul
  5510 ;;         ___bmul
  5511 ;;         ___lwdiv
  5512 ;;         ___lwmod
  5513 ;;           ___lwdiv (ARG)
  5514 ;;       _update_autotimer
  5515 ;;         _settimeout
  5516 ;;           _gettimestamp
  5517 ;;           ___lmul (ARG)
  5518 ;;           ___bmul (ARG)
  5519 ;;         _postponetimeout
  5520 ;;         _timeoutnever
  5521 ;;           ___bmul (ARG)
  5522 ;;       _timeoutnow
  5523 ;;         ___bmul (ARG)
  5524 ;;       _eeprom_write
  5525 ;;     _update_display
  5526 ;;       _set_LED_Error
  5527 ;;         _set_pacer
  5528 ;;           ___bmul
  5529 ;;           _timeoutnow
  5530 ;;             ___bmul (ARG)
  5531 ;;       _set_LED_Cartridge
  5532 ;;         _set_pacer
  5533 ;;           ___bmul
  5534 ;;           _timeoutnow
  5535 ;;             ___bmul (ARG)
  5536 ;;       _set_LED
  5537 ;;       _set_LED_Cat
  5538 ;;         _set_pacer
  5539 ;;           ___bmul
  5540 ;;           _timeoutnow
  5541 ;;             ___bmul (ARG)
  5542 ;;       _set_LED_Locked
  5543 ;;         _set_pacer
  5544 ;;           ___bmul
  5545 ;;           _timeoutnow
  5546 ;;             ___bmul (ARG)
  5547 ;;   _cmdline_init
  5548 ;;     _printf
  5549 ;;       _putch
  5550 ;;       _isdigit
  5551 ;;       ___wmul
  5552 ;;       ___bmul
  5553 ;;       ___lwdiv
  5554 ;;       ___lwmod
  5555 ;;         ___lwdiv (ARG)
  5556 ;;   _litterlanguage_init
  5557 ;;     _printf
  5558 ;;       _putch
  5559 ;;       _isdigit
  5560 ;;       ___wmul
  5561 ;;       ___bmul
  5562 ;;       ___lwdiv
  5563 ;;       ___lwmod
  5564 ;;         ___lwdiv (ARG)
  5565 ;;     _litterlanguage_cleanup
  5566 ;;       _printtime
  5567 ;;         _printf
  5568 ;;           _putch
  5569 ;;           _isdigit
  5570 ;;           ___wmul
  5571 ;;           ___bmul
  5572 ;;           ___lwdiv
  5573 ;;           ___lwmod
  5574 ;;             ___lwdiv (ARG)
  5575 ;;       _printf
  5576 ;;         _putch
  5577 ;;         _isdigit
  5578 ;;         ___wmul
  5579 ;;         ___bmul
  5580 ;;         ___lwdiv
  5581 ;;         ___lwmod
  5582 ;;           ___lwdiv (ARG)
  5583 ;;     _eeprom_write
  5584 ;;     _eeprom_read
  5585 ;;   _interrupt_init
  5586 ;;   _rtc_work
  5587 ;;     _timeoutexpired
  5588 ;;       _gettimestamp
  5589 ;;       ___bmul (ARG)
  5590 ;;     _postponetimeout
  5591 ;;   _catsensor_work
  5592 ;;     _timeoutexpired
  5593 ;;       _gettimestamp
  5594 ;;       ___bmul (ARG)
  5595 ;;     _settimeout
  5596 ;;       _gettimestamp
  5597 ;;       ___lmul (ARG)
  5598 ;;       ___bmul (ARG)
  5599 ;;     _timeoutnever
  5600 ;;       ___bmul (ARG)
  5601 ;;     _catsensor_event
  5602 ;;       _printtime
  5603 ;;         _printf
  5604 ;;           _putch
  5605 ;;           _isdigit
  5606 ;;           ___wmul
  5607 ;;           ___bmul
  5608 ;;           ___lwdiv
  5609 ;;           ___lwmod
  5610 ;;             ___lwdiv (ARG)
  5611 ;;       _printf
  5612 ;;         _putch
  5613 ;;         _isdigit
  5614 ;;         ___wmul
  5615 ;;         ___bmul
  5616 ;;         ___lwdiv
  5617 ;;         ___lwmod
  5618 ;;           ___lwdiv (ARG)
  5619 ;;       _timeoutnever
  5620 ;;         ___bmul (ARG)
  5621 ;;       _settimeout
  5622 ;;         _gettimestamp
  5623 ;;         ___lmul (ARG)
  5624 ;;         ___bmul (ARG)
  5625 ;;       _update_display
  5626 ;;         _set_LED_Error
  5627 ;;           _set_pacer
  5628 ;;             ___bmul
  5629 ;;             _timeoutnow
  5630 ;;               ___bmul (ARG)
  5631 ;;         _set_LED_Cartridge
  5632 ;;           _set_pacer
  5633 ;;             ___bmul
  5634 ;;             _timeoutnow
  5635 ;;               ___bmul (ARG)
  5636 ;;         _set_LED
  5637 ;;         _set_LED_Cat
  5638 ;;           _set_pacer
  5639 ;;             ___bmul
  5640 ;;             _timeoutnow
  5641 ;;               ___bmul (ARG)
  5642 ;;         _set_LED_Locked
  5643 ;;           _set_pacer
  5644 ;;             ___bmul
  5645 ;;             _timeoutnow
  5646 ;;               ___bmul (ARG)
  5647 ;;   _water_work
  5648 ;;     _timeoutexpired
  5649 ;;       _gettimestamp
  5650 ;;       ___bmul (ARG)
  5651 ;;     _settimeout
  5652 ;;       _gettimestamp
  5653 ;;       ___lmul (ARG)
  5654 ;;       ___bmul (ARG)
  5655 ;;     _watersensor_event
  5656 ;;       _printtime
  5657 ;;         _printf
  5658 ;;           _putch
  5659 ;;           _isdigit
  5660 ;;           ___wmul
  5661 ;;           ___bmul
  5662 ;;           ___lwdiv
  5663 ;;           ___lwmod
  5664 ;;             ___lwdiv (ARG)
  5665 ;;       _printf
  5666 ;;         _putch
  5667 ;;         _isdigit
  5668 ;;         ___wmul
  5669 ;;         ___bmul
  5670 ;;         ___lwdiv
  5671 ;;         ___lwmod
  5672 ;;           ___lwdiv (ARG)
  5673 ;;       _water_fill
  5674 ;;       _timeoutnever
  5675 ;;         ___bmul (ARG)
  5676 ;;       _litterlanguage_event
  5677 ;;         _litterlanguage_stop
  5678 ;;           _printtime
  5679 ;;             _printf
  5680 ;;               _putch
  5681 ;;               _isdigit
  5682 ;;               ___wmul
  5683 ;;               ___bmul
  5684 ;;               ___lwdiv
  5685 ;;               ___lwmod
  5686 ;;                 ___lwdiv (ARG)
  5687 ;;           _printf
  5688 ;;             _putch
  5689 ;;             _isdigit
  5690 ;;             ___wmul
  5691 ;;             ___bmul
  5692 ;;             ___lwdiv
  5693 ;;             ___lwmod
  5694 ;;               ___lwdiv (ARG)
  5695 ;;           _set_Bowl
  5696 ;;           _set_Arm
  5697 ;;           _water_fill
  5698 ;;           _set_Dosage
  5699 ;;           _set_Pump
  5700 ;;           _set_Dryer
  5701 ;;           _timeoutnever
  5702 ;;             ___bmul (ARG)
  5703 ;;         _litterlanguage_pause
  5704 ;;           _printtime
  5705 ;;             _printf
  5706 ;;               _putch
  5707 ;;               _isdigit
  5708 ;;               ___wmul
  5709 ;;               ___bmul
  5710 ;;               ___lwdiv
  5711 ;;               ___lwmod
  5712 ;;                 ___lwdiv (ARG)
  5713 ;;           _get_Bowl
  5714 ;;           _set_Bowl
  5715 ;;           _get_Arm
  5716 ;;           _set_Arm
  5717 ;;           _water_filling
  5718 ;;           _water_fill
  5719 ;;           _get_Dosage
  5720 ;;           _set_Dosage
  5721 ;;           _get_Pump
  5722 ;;           _set_Pump
  5723 ;;           _get_Dryer
  5724 ;;           _set_Dryer
  5725 ;;           _gettimestamp
  5726 ;;           _timestampdiff
  5727 ;;           _timeoutnever
  5728 ;;             ___bmul (ARG)
  5729 ;;           _printf
  5730 ;;             _putch
  5731 ;;             _isdigit
  5732 ;;             ___wmul
  5733 ;;             ___bmul
  5734 ;;             ___lwdiv
  5735 ;;             ___lwmod
  5736 ;;               ___lwdiv (ARG)
  5737 ;;           _settimeout
  5738 ;;             _gettimestamp
  5739 ;;             ___lmul (ARG)
  5740 ;;             ___bmul (ARG)
  5741 ;;         _set_Beeper
  5742 ;;           _set_pacer
  5743 ;;             ___bmul
  5744 ;;             _timeoutnow
  5745 ;;               ___bmul (ARG)
  5746 ;;   _catgenie_work
  5747 ;;     _settimeout
  5748 ;;       _gettimestamp
  5749 ;;       ___lmul (ARG)
  5750 ;;       ___bmul (ARG)
  5751 ;;     ___bmul
  5752 ;;     _timeoutexpired
  5753 ;;       _gettimestamp
  5754 ;;       ___bmul (ARG)
  5755 ;;     _setupbutton_event
  5756 ;;       _process_button
  5757 ;;         _set_Beeper
  5758 ;;           _set_pacer
  5759 ;;             ___bmul
  5760 ;;             _timeoutnow
  5761 ;;               ___bmul (ARG)
  5762 ;;         _settimeout
  5763 ;;           _gettimestamp
  5764 ;;           ___lmul (ARG)
  5765 ;;           ___bmul (ARG)
  5766 ;;         _timeoutnever
  5767 ;;           ___bmul (ARG)
  5768 ;;         _update_display
  5769 ;;           _set_LED_Error
  5770 ;;             _set_pacer
  5771 ;;               ___bmul
  5772 ;;               _timeoutnow
  5773 ;;                 ___bmul (ARG)
  5774 ;;           _set_LED_Cartridge
  5775 ;;             _set_pacer
  5776 ;;               ___bmul
  5777 ;;               _timeoutnow
  5778 ;;                 ___bmul (ARG)
  5779 ;;           _set_LED
  5780 ;;           _set_LED_Cat
  5781 ;;             _set_pacer
  5782 ;;               ___bmul
  5783 ;;               _timeoutnow
  5784 ;;                 ___bmul (ARG)
  5785 ;;           _set_LED_Locked
  5786 ;;             _set_pacer
  5787 ;;               ___bmul
  5788 ;;               _timeoutnow
  5789 ;;                 ___bmul (ARG)
  5790 ;;     _startbutton_event
  5791 ;;       _process_button
  5792 ;;         _set_Beeper
  5793 ;;           _set_pacer
  5794 ;;             ___bmul
  5795 ;;             _timeoutnow
  5796 ;;               ___bmul (ARG)
  5797 ;;         _settimeout
  5798 ;;           _gettimestamp
  5799 ;;           ___lmul (ARG)
  5800 ;;           ___bmul (ARG)
  5801 ;;         _timeoutnever
  5802 ;;           ___bmul (ARG)
  5803 ;;         _update_display
  5804 ;;           _set_LED_Error
  5805 ;;             _set_pacer
  5806 ;;               ___bmul
  5807 ;;               _timeoutnow
  5808 ;;                 ___bmul (ARG)
  5809 ;;           _set_LED_Cartridge
  5810 ;;             _set_pacer
  5811 ;;               ___bmul
  5812 ;;               _timeoutnow
  5813 ;;                 ___bmul (ARG)
  5814 ;;           _set_LED
  5815 ;;           _set_LED_Cat
  5816 ;;             _set_pacer
  5817 ;;               ___bmul
  5818 ;;               _timeoutnow
  5819 ;;                 ___bmul (ARG)
  5820 ;;           _set_LED_Locked
  5821 ;;             _set_pacer
  5822 ;;               ___bmul
  5823 ;;               _timeoutnow
  5824 ;;                 ___bmul (ARG)
  5825 ;;     _heatsensor_event
  5826 ;;       _litterlanguage_event
  5827 ;;         _litterlanguage_stop
  5828 ;;           _printtime
  5829 ;;             _printf
  5830 ;;               _putch
  5831 ;;               _isdigit
  5832 ;;               ___wmul
  5833 ;;               ___bmul
  5834 ;;               ___lwdiv
  5835 ;;               ___lwmod
  5836 ;;                 ___lwdiv (ARG)
  5837 ;;           _printf
  5838 ;;             _putch
  5839 ;;             _isdigit
  5840 ;;             ___wmul
  5841 ;;             ___bmul
  5842 ;;             ___lwdiv
  5843 ;;             ___lwmod
  5844 ;;               ___lwdiv (ARG)
  5845 ;;           _set_Bowl
  5846 ;;           _set_Arm
  5847 ;;           _water_fill
  5848 ;;           _set_Dosage
  5849 ;;           _set_Pump
  5850 ;;           _set_Dryer
  5851 ;;           _timeoutnever
  5852 ;;             ___bmul (ARG)
  5853 ;;         _litterlanguage_pause
  5854 ;;           _printtime
  5855 ;;             _printf
  5856 ;;               _putch
  5857 ;;               _isdigit
  5858 ;;               ___wmul
  5859 ;;               ___bmul
  5860 ;;               ___lwdiv
  5861 ;;               ___lwmod
  5862 ;;                 ___lwdiv (ARG)
  5863 ;;           _get_Bowl
  5864 ;;           _set_Bowl
  5865 ;;           _get_Arm
  5866 ;;           _set_Arm
  5867 ;;           _water_filling
  5868 ;;           _water_fill
  5869 ;;           _get_Dosage
  5870 ;;           _set_Dosage
  5871 ;;           _get_Pump
  5872 ;;           _set_Pump
  5873 ;;           _get_Dryer
  5874 ;;           _set_Dryer
  5875 ;;           _gettimestamp
  5876 ;;           _timestampdiff
  5877 ;;           _timeoutnever
  5878 ;;             ___bmul (ARG)
  5879 ;;           _printf
  5880 ;;             _putch
  5881 ;;             _isdigit
  5882 ;;             ___wmul
  5883 ;;             ___bmul
  5884 ;;             ___lwdiv
  5885 ;;             ___lwmod
  5886 ;;               ___lwdiv (ARG)
  5887 ;;           _settimeout
  5888 ;;             _gettimestamp
  5889 ;;             ___lmul (ARG)
  5890 ;;             ___bmul (ARG)
  5891 ;;         _set_Beeper
  5892 ;;           _set_pacer
  5893 ;;             ___bmul
  5894 ;;             _timeoutnow
  5895 ;;               ___bmul (ARG)
  5896 ;;     _timeoutnever
  5897 ;;       ___bmul (ARG)
  5898 ;;   _userinterface_work
  5899 ;;     _timeoutexpired
  5900 ;;       _gettimestamp
  5901 ;;       ___bmul (ARG)
  5902 ;;     _update_autotimer
  5903 ;;       _settimeout
  5904 ;;         _gettimestamp
  5905 ;;         ___lmul (ARG)
  5906 ;;         ___bmul (ARG)
  5907 ;;       _postponetimeout
  5908 ;;       _timeoutnever
  5909 ;;         ___bmul (ARG)
  5910 ;;     _printtime
  5911 ;;       _printf
  5912 ;;         _putch
  5913 ;;         _isdigit
  5914 ;;         ___wmul
  5915 ;;         ___bmul
  5916 ;;         ___lwdiv
  5917 ;;         ___lwmod
  5918 ;;           ___lwdiv (ARG)
  5919 ;;     _printf
  5920 ;;       _putch
  5921 ;;       _isdigit
  5922 ;;       ___wmul
  5923 ;;       ___bmul
  5924 ;;       ___lwdiv
  5925 ;;       ___lwmod
  5926 ;;         ___lwdiv (ARG)
  5927 ;;     _litterlanguage_start
  5928 ;;       _printtime
  5929 ;;         _printf
  5930 ;;           _putch
  5931 ;;           _isdigit
  5932 ;;           ___wmul
  5933 ;;           ___bmul
  5934 ;;           ___lwdiv
  5935 ;;           ___lwmod
  5936 ;;             ___lwdiv (ARG)
  5937 ;;       _printf
  5938 ;;         _putch
  5939 ;;         _isdigit
  5940 ;;         ___wmul
  5941 ;;         ___bmul
  5942 ;;         ___lwdiv
  5943 ;;         ___lwmod
  5944 ;;           ___lwdiv (ARG)
  5945 ;;     _litterlanguage_running
  5946 ;;     _timeoutnow
  5947 ;;       ___bmul (ARG)
  5948 ;;     _start_short
  5949 ;;       _litterlanguage_running
  5950 ;;       _litterlanguage_start
  5951 ;;         _printtime
  5952 ;;           _printf
  5953 ;;             _putch
  5954 ;;             _isdigit
  5955 ;;             ___wmul
  5956 ;;             ___bmul
  5957 ;;             ___lwdiv
  5958 ;;             ___lwmod
  5959 ;;               ___lwdiv (ARG)
  5960 ;;         _printf
  5961 ;;           _putch
  5962 ;;           _isdigit
  5963 ;;           ___wmul
  5964 ;;           ___bmul
  5965 ;;           ___lwdiv
  5966 ;;           ___lwmod
  5967 ;;             ___lwdiv (ARG)
  5968 ;;       _litterlanguage_paused
  5969 ;;       _litterlanguage_pause
  5970 ;;         _printtime
  5971 ;;           _printf
  5972 ;;             _putch
  5973 ;;             _isdigit
  5974 ;;             ___wmul
  5975 ;;             ___bmul
  5976 ;;             ___lwdiv
  5977 ;;             ___lwmod
  5978 ;;               ___lwdiv (ARG)
  5979 ;;         _get_Bowl
  5980 ;;         _set_Bowl
  5981 ;;         _get_Arm
  5982 ;;         _set_Arm
  5983 ;;         _water_filling
  5984 ;;         _water_fill
  5985 ;;         _get_Dosage
  5986 ;;         _set_Dosage
  5987 ;;         _get_Pump
  5988 ;;         _set_Pump
  5989 ;;         _get_Dryer
  5990 ;;         _set_Dryer
  5991 ;;         _gettimestamp
  5992 ;;         _timestampdiff
  5993 ;;         _timeoutnever
  5994 ;;           ___bmul (ARG)
  5995 ;;         _printf
  5996 ;;           _putch
  5997 ;;           _isdigit
  5998 ;;           ___wmul
  5999 ;;           ___bmul
  6000 ;;           ___lwdiv
  6001 ;;           ___lwmod
  6002 ;;             ___lwdiv (ARG)
  6003 ;;         _settimeout
  6004 ;;           _gettimestamp
  6005 ;;           ___lmul (ARG)
  6006 ;;           ___bmul (ARG)
  6007 ;;         _litterlanguage_event
  6008 ;;           _litterlanguage_stop
  6009 ;;             _printtime
  6010 ;;               _printf
  6011 ;;                 _putch
  6012 ;;                 _isdigit
  6013 ;;                 ___wmul
  6014 ;;                 ___bmul
  6015 ;;                 ___lwdiv
  6016 ;;                 ___lwmod
  6017 ;;                   ___lwdiv (ARG)
  6018 ;;             _printf
  6019 ;;               _putch
  6020 ;;               _isdigit
  6021 ;;               ___wmul
  6022 ;;               ___bmul
  6023 ;;               ___lwdiv
  6024 ;;               ___lwmod
  6025 ;;                 ___lwdiv (ARG)
  6026 ;;             _set_Bowl
  6027 ;;             _set_Arm
  6028 ;;             _water_fill
  6029 ;;             _set_Dosage
  6030 ;;             _set_Pump
  6031 ;;             _set_Dryer
  6032 ;;             _timeoutnever
  6033 ;;               ___bmul (ARG)
  6034 ;;           _set_Beeper
  6035 ;;             _set_pacer
  6036 ;;               ___bmul
  6037 ;;               _timeoutnow
  6038 ;;                 ___bmul (ARG)
  6039 ;;     _setup_short
  6040 ;;       _set_mode
  6041 ;;         _printf
  6042 ;;           _putch
  6043 ;;           _isdigit
  6044 ;;           ___wmul
  6045 ;;           ___bmul
  6046 ;;           ___lwdiv
  6047 ;;           ___lwmod
  6048 ;;             ___lwdiv (ARG)
  6049 ;;         _update_autotimer
  6050 ;;           _settimeout
  6051 ;;             _gettimestamp
  6052 ;;             ___lmul (ARG)
  6053 ;;             ___bmul (ARG)
  6054 ;;           _postponetimeout
  6055 ;;           _timeoutnever
  6056 ;;             ___bmul (ARG)
  6057 ;;         _timeoutnow
  6058 ;;           ___bmul (ARG)
  6059 ;;         _eeprom_write
  6060 ;;       _settimeout
  6061 ;;         _gettimestamp
  6062 ;;         ___lmul (ARG)
  6063 ;;         ___bmul (ARG)
  6064 ;;     _both_short
  6065 ;;       _settimeout
  6066 ;;         _gettimestamp
  6067 ;;         ___lmul (ARG)
  6068 ;;         ___bmul (ARG)
  6069 ;;     _set_Beeper
  6070 ;;       _set_pacer
  6071 ;;         ___bmul
  6072 ;;         _timeoutnow
  6073 ;;           ___bmul (ARG)
  6074 ;;     _start_long
  6075 ;;       _litterlanguage_running
  6076 ;;       _litterlanguage_start
  6077 ;;         _printtime
  6078 ;;           _printf
  6079 ;;             _putch
  6080 ;;             _isdigit
  6081 ;;             ___wmul
  6082 ;;             ___bmul
  6083 ;;             ___lwdiv
  6084 ;;             ___lwmod
  6085 ;;               ___lwdiv (ARG)
  6086 ;;         _printf
  6087 ;;           _putch
  6088 ;;           _isdigit
  6089 ;;           ___wmul
  6090 ;;           ___bmul
  6091 ;;           ___lwdiv
  6092 ;;           ___lwmod
  6093 ;;             ___lwdiv (ARG)
  6094 ;;       _litterlanguage_stop
  6095 ;;         _printtime
  6096 ;;           _printf
  6097 ;;             _putch
  6098 ;;             _isdigit
  6099 ;;             ___wmul
  6100 ;;             ___bmul
  6101 ;;             ___lwdiv
  6102 ;;             ___lwmod
  6103 ;;               ___lwdiv (ARG)
  6104 ;;         _printf
  6105 ;;           _putch
  6106 ;;           _isdigit
  6107 ;;           ___wmul
  6108 ;;           ___bmul
  6109 ;;           ___lwdiv
  6110 ;;           ___lwmod
  6111 ;;             ___lwdiv (ARG)
  6112 ;;         _set_Bowl
  6113 ;;         _set_Arm
  6114 ;;         _water_fill
  6115 ;;         _set_Dosage
  6116 ;;         _set_Pump
  6117 ;;         _set_Dryer
  6118 ;;         _timeoutnever
  6119 ;;           ___bmul (ARG)
  6120 ;;         _litterlanguage_event
  6121 ;;           _litterlanguage_pause
  6122 ;;             _printtime
  6123 ;;               _printf
  6124 ;;                 _putch
  6125 ;;                 _isdigit
  6126 ;;                 ___wmul
  6127 ;;                 ___bmul
  6128 ;;                 ___lwdiv
  6129 ;;                 ___lwmod
  6130 ;;                   ___lwdiv (ARG)
  6131 ;;             _get_Bowl
  6132 ;;             _set_Bowl
  6133 ;;             _get_Arm
  6134 ;;             _set_Arm
  6135 ;;             _water_filling
  6136 ;;             _water_fill
  6137 ;;             _get_Dosage
  6138 ;;             _set_Dosage
  6139 ;;             _get_Pump
  6140 ;;             _set_Pump
  6141 ;;             _get_Dryer
  6142 ;;             _set_Dryer
  6143 ;;             _gettimestamp
  6144 ;;             _timestampdiff
  6145 ;;             _timeoutnever
  6146 ;;               ___bmul (ARG)
  6147 ;;             _printf
  6148 ;;               _putch
  6149 ;;               _isdigit
  6150 ;;               ___wmul
  6151 ;;               ___bmul
  6152 ;;               ___lwdiv
  6153 ;;               ___lwmod
  6154 ;;                 ___lwdiv (ARG)
  6155 ;;             _settimeout
  6156 ;;               _gettimestamp
  6157 ;;               ___lmul (ARG)
  6158 ;;               ___bmul (ARG)
  6159 ;;           _set_Beeper
  6160 ;;             _set_pacer
  6161 ;;               ___bmul
  6162 ;;               _timeoutnow
  6163 ;;                 ___bmul (ARG)
  6164 ;;     _setup_long
  6165 ;;     _both_long
  6166 ;;       _eeprom_write
  6167 ;;     _timeoutnever
  6168 ;;       ___bmul (ARG)
  6169 ;;     _update_display
  6170 ;;       _set_LED_Error
  6171 ;;         _set_pacer
  6172 ;;           ___bmul
  6173 ;;           _timeoutnow
  6174 ;;             ___bmul (ARG)
  6175 ;;       _set_LED_Cartridge
  6176 ;;         _set_pacer
  6177 ;;           ___bmul
  6178 ;;           _timeoutnow
  6179 ;;             ___bmul (ARG)
  6180 ;;       _set_LED
  6181 ;;       _set_LED_Cat
  6182 ;;         _set_pacer
  6183 ;;           ___bmul
  6184 ;;           _timeoutnow
  6185 ;;             ___bmul (ARG)
  6186 ;;       _set_LED_Locked
  6187 ;;         _set_pacer
  6188 ;;           ___bmul
  6189 ;;           _timeoutnow
  6190 ;;             ___bmul (ARG)
  6191 ;;   _cmdline_work
  6192 ;;     _putch
  6193 ;;     _proc_char
  6194 ;;       _putch
  6195 ;;       _proc_line
  6196 ;;         _strlen
  6197 ;;         _cmd2index
  6198 ;;           ___bmul
  6199 ;;           _strncmp
  6200 ;;             ___bmul (ARG)
  6201 ;;         _printf
  6202 ;;           _putch
  6203 ;;           _isdigit
  6204 ;;           ___wmul
  6205 ;;           ___bmul
  6206 ;;           ___lwdiv
  6207 ;;           ___lwmod
  6208 ;;             ___lwdiv (ARG)
  6209 ;;         ___bmul
  6210 ;;         Absolute function(Fake)
  6211 ;;         _echo
  6212 ;;           _strncmp
  6213 ;;             ___bmul (ARG)
  6214 ;;           _printf
  6215 ;;             _putch
  6216 ;;             _isdigit
  6217 ;;             ___wmul
  6218 ;;             ___bmul
  6219 ;;             ___lwdiv
  6220 ;;             ___lwmod
  6221 ;;               ___lwdiv (ARG)
  6222 ;;         _help
  6223 ;;           _printf
  6224 ;;             _putch
  6225 ;;             _isdigit
  6226 ;;             ___wmul
  6227 ;;             ___bmul
  6228 ;;             ___lwdiv
  6229 ;;             ___lwmod
  6230 ;;               ___lwdiv (ARG)
  6231 ;;           ___bmul
  6232 ;;       _printf
  6233 ;;         _putch
  6234 ;;         _isdigit
  6235 ;;         ___wmul
  6236 ;;         ___bmul
  6237 ;;         ___lwdiv
  6238 ;;         ___lwmod
  6239 ;;           ___lwdiv (ARG)
  6240 ;;     _readch
  6241 ;;   _litterlanguage_work
  6242 ;;     _water_detected
  6243 ;;     _water_filling
  6244 ;;     _timeoutexpired
  6245 ;;       _gettimestamp
  6246 ;;       ___bmul (ARG)
  6247 ;;     _printtime
  6248 ;;       _printf
  6249 ;;         _putch
  6250 ;;         _isdigit
  6251 ;;         ___wmul
  6252 ;;         ___bmul
  6253 ;;         ___lwdiv
  6254 ;;         ___lwmod
  6255 ;;           ___lwdiv (ARG)
  6256 ;;     _printf
  6257 ;;       _putch
  6258 ;;       _isdigit
  6259 ;;       ___wmul
  6260 ;;       ___bmul
  6261 ;;       ___lwdiv
  6262 ;;       ___lwmod
  6263 ;;         ___lwdiv (ARG)
  6264 ;;     _litterlanguage_event
  6265 ;;       _litterlanguage_stop
  6266 ;;         _printtime
  6267 ;;           _printf
  6268 ;;             _putch
  6269 ;;             _isdigit
  6270 ;;             ___wmul
  6271 ;;             ___bmul
  6272 ;;             ___lwdiv
  6273 ;;             ___lwmod
  6274 ;;               ___lwdiv (ARG)
  6275 ;;         _printf
  6276 ;;           _putch
  6277 ;;           _isdigit
  6278 ;;           ___wmul
  6279 ;;           ___bmul
  6280 ;;           ___lwdiv
  6281 ;;           ___lwmod
  6282 ;;             ___lwdiv (ARG)
  6283 ;;         _set_Bowl
  6284 ;;         _set_Arm
  6285 ;;         _water_fill
  6286 ;;         _set_Dosage
  6287 ;;         _set_Pump
  6288 ;;         _set_Dryer
  6289 ;;         _timeoutnever
  6290 ;;           ___bmul (ARG)
  6291 ;;       _litterlanguage_pause
  6292 ;;         _printtime
  6293 ;;           _printf
  6294 ;;             _putch
  6295 ;;             _isdigit
  6296 ;;             ___wmul
  6297 ;;             ___bmul
  6298 ;;             ___lwdiv
  6299 ;;             ___lwmod
  6300 ;;               ___lwdiv (ARG)
  6301 ;;         _get_Bowl
  6302 ;;         _set_Bowl
  6303 ;;         _get_Arm
  6304 ;;         _set_Arm
  6305 ;;         _water_filling
  6306 ;;         _water_fill
  6307 ;;         _get_Dosage
  6308 ;;         _set_Dosage
  6309 ;;         _get_Pump
  6310 ;;         _set_Pump
  6311 ;;         _get_Dryer
  6312 ;;         _set_Dryer
  6313 ;;         _gettimestamp
  6314 ;;         _timestampdiff
  6315 ;;         _timeoutnever
  6316 ;;           ___bmul (ARG)
  6317 ;;         _printf
  6318 ;;           _putch
  6319 ;;           _isdigit
  6320 ;;           ___wmul
  6321 ;;           ___bmul
  6322 ;;           ___lwdiv
  6323 ;;           ___lwmod
  6324 ;;             ___lwdiv (ARG)
  6325 ;;         _settimeout
  6326 ;;           _gettimestamp
  6327 ;;           ___lmul (ARG)
  6328 ;;           ___bmul (ARG)
  6329 ;;       _set_Beeper
  6330 ;;         _set_pacer
  6331 ;;           ___bmul
  6332 ;;           _timeoutnow
  6333 ;;             ___bmul (ARG)
  6334 ;;     _get_Pump
  6335 ;;     _timeoutnever
  6336 ;;       ___bmul (ARG)
  6337 ;;     _set_Dosage
  6338 ;;     _req_instruction
  6339 ;;       _romwashprogram_reqins
  6340 ;;     _get_instruction
  6341 ;;       _romwashprogram_getins
  6342 ;;     _eeprom_read
  6343 ;;     _eeprom_write
  6344 ;;     _exe_instruction
  6345 ;;       _printtime
  6346 ;;         _printf
  6347 ;;           _putch
  6348 ;;           _isdigit
  6349 ;;           ___wmul
  6350 ;;           ___bmul
  6351 ;;           ___lwdiv
  6352 ;;           ___lwmod
  6353 ;;             ___lwdiv (ARG)
  6354 ;;       _printf
  6355 ;;         _putch
  6356 ;;         _isdigit
  6357 ;;         ___wmul
  6358 ;;         ___bmul
  6359 ;;         ___lwdiv
  6360 ;;         ___lwmod
  6361 ;;           ___lwdiv (ARG)
  6362 ;;       _set_Bowl
  6363 ;;       _set_Arm
  6364 ;;       _eeprom_read
  6365 ;;       _eeprom_write
  6366 ;;       _water_detected
  6367 ;;       _water_fill
  6368 ;;       _settimeout
  6369 ;;         _gettimestamp
  6370 ;;         ___lmul (ARG)
  6371 ;;         ___bmul (ARG)
  6372 ;;       _timeoutnever
  6373 ;;         ___bmul (ARG)
  6374 ;;       _set_Pump
  6375 ;;       _set_Dryer
  6376 ;;       ___lmul
  6377 ;;       ___wmul
  6378 ;;       ___lwdiv
  6379 ;;       ___lwmod
  6380 ;;         ___lwdiv (ARG)
  6381 ;;       _set_Dosage
  6382 ;;       _memcpy
  6383 ;;       _litterlanguage_stop
  6384 ;;         _printtime
  6385 ;;           _printf
  6386 ;;             _putch
  6387 ;;             _isdigit
  6388 ;;             ___wmul
  6389 ;;             ___bmul
  6390 ;;             ___lwdiv
  6391 ;;             ___lwmod
  6392 ;;               ___lwdiv (ARG)
  6393 ;;         _printf
  6394 ;;           _putch
  6395 ;;           _isdigit
  6396 ;;           ___wmul
  6397 ;;           ___bmul
  6398 ;;           ___lwdiv
  6399 ;;           ___lwmod
  6400 ;;             ___lwdiv (ARG)
  6401 ;;         _set_Bowl
  6402 ;;         _set_Arm
  6403 ;;         _water_fill
  6404 ;;         _set_Dosage
  6405 ;;         _set_Pump
  6406 ;;         _set_Dryer
  6407 ;;         _timeoutnever
  6408 ;;           ___bmul (ARG)
  6409 ;;         _litterlanguage_event
  6410 ;;           _litterlanguage_pause
  6411 ;;             _printtime
  6412 ;;               _printf
  6413 ;;                 _putch
  6414 ;;                 _isdigit
  6415 ;;                 ___wmul
  6416 ;;                 ___bmul
  6417 ;;                 ___lwdiv
  6418 ;;                 ___lwmod
  6419 ;;                   ___lwdiv (ARG)
  6420 ;;             _get_Bowl
  6421 ;;             _set_Bowl
  6422 ;;             _get_Arm
  6423 ;;             _set_Arm
  6424 ;;             _water_filling
  6425 ;;             _water_fill
  6426 ;;             _get_Dosage
  6427 ;;             _set_Dosage
  6428 ;;             _get_Pump
  6429 ;;             _set_Pump
  6430 ;;             _get_Dryer
  6431 ;;             _set_Dryer
  6432 ;;             _gettimestamp
  6433 ;;             _timestampdiff
  6434 ;;             _timeoutnever
  6435 ;;               ___bmul (ARG)
  6436 ;;             _printf
  6437 ;;               _putch
  6438 ;;               _isdigit
  6439 ;;               ___wmul
  6440 ;;               ___bmul
  6441 ;;               ___lwdiv
  6442 ;;               ___lwmod
  6443 ;;                 ___lwdiv (ARG)
  6444 ;;             _settimeout
  6445 ;;               _gettimestamp
  6446 ;;               ___lmul (ARG)
  6447 ;;               ___bmul (ARG)
  6448 ;;           _set_Beeper
  6449 ;;             _set_pacer
  6450 ;;               ___bmul
  6451 ;;               _timeoutnow
  6452 ;;                 ___bmul (ARG)
  6453 ;;       _litterlanguage_event
  6454 ;;         _litterlanguage_stop
  6455 ;;           _printtime
  6456 ;;             _printf
  6457 ;;               _putch
  6458 ;;               _isdigit
  6459 ;;               ___wmul
  6460 ;;               ___bmul
  6461 ;;               ___lwdiv
  6462 ;;               ___lwmod
  6463 ;;                 ___lwdiv (ARG)
  6464 ;;           _printf
  6465 ;;             _putch
  6466 ;;             _isdigit
  6467 ;;             ___wmul
  6468 ;;             ___bmul
  6469 ;;             ___lwdiv
  6470 ;;             ___lwmod
  6471 ;;               ___lwdiv (ARG)
  6472 ;;           _set_Bowl
  6473 ;;           _set_Arm
  6474 ;;           _water_fill
  6475 ;;           _set_Dosage
  6476 ;;           _set_Pump
  6477 ;;           _set_Dryer
  6478 ;;           _timeoutnever
  6479 ;;             ___bmul (ARG)
  6480 ;;         _litterlanguage_pause
  6481 ;;           _printtime
  6482 ;;             _printf
  6483 ;;               _putch
  6484 ;;               _isdigit
  6485 ;;               ___wmul
  6486 ;;               ___bmul
  6487 ;;               ___lwdiv
  6488 ;;               ___lwmod
  6489 ;;                 ___lwdiv (ARG)
  6490 ;;           _get_Bowl
  6491 ;;           _set_Bowl
  6492 ;;           _get_Arm
  6493 ;;           _set_Arm
  6494 ;;           _water_filling
  6495 ;;           _water_fill
  6496 ;;           _get_Dosage
  6497 ;;           _set_Dosage
  6498 ;;           _get_Pump
  6499 ;;           _set_Pump
  6500 ;;           _get_Dryer
  6501 ;;           _set_Dryer
  6502 ;;           _gettimestamp
  6503 ;;           _timestampdiff
  6504 ;;           _timeoutnever
  6505 ;;             ___bmul (ARG)
  6506 ;;           _printf
  6507 ;;             _putch
  6508 ;;             _isdigit
  6509 ;;             ___wmul
  6510 ;;             ___bmul
  6511 ;;             ___lwdiv
  6512 ;;             ___lwmod
  6513 ;;               ___lwdiv (ARG)
  6514 ;;           _settimeout
  6515 ;;             _gettimestamp
  6516 ;;             ___lmul (ARG)
  6517 ;;             ___bmul (ARG)
  6518 ;;         _set_Beeper
  6519 ;;           _set_pacer
  6520 ;;             ___bmul
  6521 ;;             _timeoutnow
  6522 ;;               ___bmul (ARG)
  6523 ;;     _wait_instruction
  6524 ;;       _timeoutexpired
  6525 ;;         _gettimestamp
  6526 ;;         ___bmul (ARG)
  6527 ;;       _water_detected
  6528 ;;       _timeoutnever
  6529 ;;         ___bmul (ARG)
  6530 ;;       _get_Dosage
  6531 ;;
  6532 ;; _isr (ROOT)
  6533 ;;   _timer_isr
  6534 ;;   _catsensor_isr_timer
  6535 ;;   _catsensor_isr_input
  6536 ;;   _serial_rx_isr
  6537 ;;   _serial_tx_isr
  6538 ;;
  6539                           
  6540 ;; Address spaces:
  6541                           
  6542 ;;Name               Size   Autos  Total    Cost      Usage
  6543 ;;BIGRAM             3F0      0       0       0        0.0%
  6544 ;;EEDATA             100      0       0       0        0.0%
  6545 ;;NULL                 0      0       0       0        0.0%
  6546 ;;CODE                 0      0       0       0        0.0%
  6547 ;;BITCOMMON            E      0       2       1       14.3%
  6548 ;;BITSFR0              0      0       0       1        0.0%
  6549 ;;SFR0                 0      0       0       1        0.0%
  6550 ;;COMMON               E      C       E       2      100.0%
  6551 ;;BITSFR1              0      0       0       2        0.0%
  6552 ;;SFR1                 0      0       0       2        0.0%
  6553 ;;BITSFR2              0      0       0       3        0.0%
  6554 ;;SFR2                 0      0       0       3        0.0%
  6555 ;;STACK                0      0       B       3        0.0%
  6556 ;;BITBANK0            4F      0       1       4        1.3%
  6557 ;;BITSFR3              0      0       0       4        0.0%
  6558 ;;SFR3                 0      0       0       4        0.0%
  6559 ;;BANK0               4F     41      4F       5      100.0%
  6560 ;;BITSFR4              0      0       0       5        0.0%
  6561 ;;SFR4                 0      0       0       5        0.0%
  6562 ;;BITBANK1            50      0       0       6        0.0%
  6563 ;;BITSFR5              0      0       0       6        0.0%
  6564 ;;SFR5                 0      0       0       6        0.0%
  6565 ;;BANK1               50     26      4F       7       98.8%
  6566 ;;BITSFR6              0      0       0       7        0.0%
  6567 ;;SFR6                 0      0       0       7        0.0%
  6568 ;;BITBANK2            50      0       0       8        0.0%
  6569 ;;BITSFR7              0      0       0       8        0.0%
  6570 ;;SFR7                 0      0       0       8        0.0%
  6571 ;;BANK2               50      0      50       9      100.0%
  6572 ;;BITSFR8              0      0       0       9        0.0%
  6573 ;;SFR8                 0      0       0       9        0.0%
  6574 ;;BITBANK3            50      0       0      10        0.0%
  6575 ;;BITSFR9              0      0       0      10        0.0%
  6576 ;;SFR9                 0      0       0      10        0.0%
  6577 ;;BANK3               50      0      42      11       82.5%
  6578 ;;BITSFR10             0      0       0      11        0.0%
  6579 ;;SFR10                0      0       0      11        0.0%
  6580 ;;BITBANK4            50      0       0      12        0.0%
  6581 ;;BITSFR11             0      0       0      12        0.0%
  6582 ;;SFR11                0      0       0      12        0.0%
  6583 ;;BANK4               50      0      37      13       68.8%
  6584 ;;BITSFR12             0      0       0      13        0.0%
  6585 ;;SFR12                0      0       0      13        0.0%
  6586 ;;BITBANK5            50      0       0      14        0.0%
  6587 ;;BITSFR13             0      0       0      14        0.0%
  6588 ;;SFR13                0      0       0      14        0.0%
  6589 ;;BANK5               50      0       0      15        0.0%
  6590 ;;BITSFR14             0      0       0      15        0.0%
  6591 ;;SFR14                0      0       0      15        0.0%
  6592 ;;BITBANK6            50      0       0      16        0.0%
  6593 ;;BITSFR15             0      0       0      16        0.0%
  6594 ;;SFR15                0      0       0      16        0.0%
  6595 ;;BANK6               50      0       0      17        0.0%
  6596 ;;BITSFR16             0      0       0      17        0.0%
  6597 ;;SFR16                0      0       0      17        0.0%
  6598 ;;BITBANK7            50      0       0      18        0.0%
  6599 ;;BITSFR17             0      0       0      18        0.0%
  6600 ;;SFR17                0      0       0      18        0.0%
  6601 ;;BANK7               50      0       0      19        0.0%
  6602 ;;BITSFR18             0      0       0      19        0.0%
  6603 ;;SFR18                0      0       0      19        0.0%
  6604 ;;BITSFR19             0      0       0      20        0.0%
  6605 ;;SFR19                0      0       0      20        0.0%
  6606 ;;ABS                  0      0     175      20        0.0%
  6607 ;;BITBANK8            50      0       0      21        0.0%
  6608 ;;BITSFR20             0      0       0      21        0.0%
  6609 ;;SFR20                0      0       0      21        0.0%
  6610 ;;BANK8               50      0       0      22        0.0%
  6611 ;;BITSFR21             0      0       0      22        0.0%
  6612 ;;SFR21                0      0       0      22        0.0%
  6613 ;;BITBANK9            50      0       0      23        0.0%
  6614 ;;BITSFR22             0      0       0      23        0.0%
  6615 ;;SFR22                0      0       0      23        0.0%
  6616 ;;BANK9               50      0       0      24        0.0%
  6617 ;;BITSFR23             0      0       0      24        0.0%
  6618 ;;SFR23                0      0       0      24        0.0%
  6619 ;;BITBANK10           50      0       0      25        0.0%
  6620 ;;BITSFR24             0      0       0      25        0.0%
  6621 ;;SFR24                0      0       0      25        0.0%
  6622 ;;BANK10              50      0       0      26        0.0%
  6623 ;;BITSFR25             0      0       0      26        0.0%
  6624 ;;SFR25                0      0       0      26        0.0%
  6625 ;;BITBANK11           50      0       0      27        0.0%
  6626 ;;BITSFR26             0      0       0      27        0.0%
  6627 ;;SFR26                0      0       0      27        0.0%
  6628 ;;BANK11              50      0       0      28        0.0%
  6629 ;;BITSFR27             0      0       0      28        0.0%
  6630 ;;SFR27                0      0       0      28        0.0%
  6631 ;;BITBANK12           30      0       0      29        0.0%
  6632 ;;BITSFR28             0      0       0      29        0.0%
  6633 ;;SFR28                0      0       0      29        0.0%
  6634 ;;BANK12              30      0       0      30        0.0%
  6635 ;;BITSFR29             0      0       0      30        0.0%
  6636 ;;SFR29                0      0       0      30        0.0%
  6637 ;;BITSFR30             0      0       0      31        0.0%
  6638 ;;SFR30                0      0       0      31        0.0%
  6639 ;;DATA                 0      0     180      31        0.0%
  6640 ;;BITSFR31             0      0       0      32        0.0%
  6641 ;;SFR31                0      0       0      32        0.0%
  6642                           
  6643                           	global	_main
  6644                           psect	maintext,global,class=CODE,delta=2
  6645                           global __pmaintext
  6646  274E                     __pmaintext:
  6647                           
  6648 ;; *************** function _main *****************
  6649 ;; Defined at:
  6650 ;;		line 76 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  flags           1   64[BANK0 ] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 17F/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6668 ;;Total ram usage:        2 bytes
  6669 ;; Hardware stack levels required when called:   10
  6670 ;; This function calls:
  6671 ;;		_catgenie_init
  6672 ;;		_serial_init
  6673 ;;		_printf
  6674 ;;		_timer_init
  6675 ;;		_rtc_init
  6676 ;;		_catsensor_init
  6677 ;;		_water_init
  6678 ;;		_userinterface_init
  6679 ;;		_cmdline_init
  6680 ;;		_litterlanguage_init
  6681 ;;		_interrupt_init
  6682 ;;		_rtc_work
  6683 ;;		_catsensor_work
  6684 ;;		_water_work
  6685 ;;		_catgenie_work
  6686 ;;		_userinterface_work
  6687 ;;		_cmdline_work
  6688 ;;		_litterlanguage_work
  6689 ;; This function is called by:
  6690 ;;		Startup code after reset
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           psect	maintext
  6694                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  6695                           	line	76
  6696                           	global	__size_of_main
  6697  00B2                     	__size_of_main	equ	__end_of_main-_main
  6698                           	
  6699  274E                     _main:	
  6700                           	opt	stack 6
  6701                           ; Regs used in _main: [allreg]
  6702                           	line	80
  6703                           	
  6704  274E                     l38825:	
  6705                           ;catgenius.c: 77: unsigned char flags;
  6706                           ;catgenius.c: 80: flags = catgenie_init();
  6707  274E  3180  2053  31A7   	fcall	_catgenie_init
  6708  2751  0020               	movlb 0	; select bank0
  6709  2752  00E0               	movwf	(??_main+0)+0
  6710  2753  0860               	movf	(??_main+0)+0,w
  6711  2754  00E1               	movwf	(main@flags)
  6712                           	line	89
  6713                           	
  6714  2755                     l38827:	
  6715                           ;catgenius.c: 89: serial_init(19200UL);
  6716  2755  3000               	movlw	0
  6717  2756  00B2               	movwf	(?_serial_init+3)
  6718  2757  3000               	movlw	0
  6719  2758  00B1               	movwf	(?_serial_init+2)
  6720  2759  304B               	movlw	04Bh
  6721  275A  00B0               	movwf	(?_serial_init+1)
  6722  275B  3000               	movlw	0
  6723  275C  00AF               	movwf	(?_serial_init)
  6724                           
  6725  275D  3199  21FF  31A7   	fcall	_serial_init
  6726                           	line	91
  6727                           	
  6728  2760                     l38829:	
  6729                           ;catgenius.c: 91: printf("\n*** CatGenius ***\n");
  6730  2760  3006               	movlw	low(STR_1|8000h)
  6731  2761  0020               	movlb 0	; select bank0
  6732  2762  00AF               	movwf	(?_printf)
  6733  2763  3086               	movlw	high(STR_1|8000h)
  6734  2764  00B0               	movwf	((?_printf))+1
  6735  2765  3194  24A0  31A7   	fcall	_printf
  6736                           	line	92
  6737                           	
  6738  2768                     l38831:	
  6739                           ;catgenius.c: 92: if (!nPOR) {
  6740  2768  0021               	movlb 1	; select bank1
  6741  2769  1896               	btfsc	(1201/8)^080h,(1201)&7
  6742  276A  2F6C               	goto	u12611
  6743  276B  2F6D               	goto	u12610
  6744  276C                     u12611:
  6745  276C  2F78               	goto	l2081
  6746  276D                     u12610:
  6747                           	line	93
  6748                           	
  6749  276D                     l38833:	
  6750                           ;catgenius.c: 93: printf("Power-on reset\n");
  6751  276D  3089               	movlw	low(STR_2|8000h)
  6752  276E  0020               	movlb 0	; select bank0
  6753  276F  00AF               	movwf	(?_printf)
  6754  2770  3087               	movlw	high(STR_2|8000h)
  6755  2771  00B0               	movwf	((?_printf))+1
  6756  2772  3194  24A0  31A7   	fcall	_printf
  6757                           	line	94
  6758                           	
  6759  2775                     l38835:	
  6760                           ;catgenius.c: 94: flags |= (0x01 << 7);
  6761  2775  0020               	movlb 0	; select bank0
  6762  2776  17E1               	bsf	(main@flags)+(7/8),(7)&7
  6763                           	line	95
  6764                           ;catgenius.c: 95: } else if (!nBOR) {
  6765  2777  2FAC               	goto	l38847
  6766                           	
  6767  2778                     l2081:	
  6768  2778  1816               	btfsc	(1200/8)^080h,(1200)&7
  6769  2779  2F7B               	goto	u12621
  6770  277A  2F7C               	goto	u12620
  6771  277B                     u12621:
  6772  277B  2F87               	goto	l2083
  6773  277C                     u12620:
  6774                           	line	96
  6775                           	
  6776  277C                     l38837:	
  6777                           ;catgenius.c: 96: printf("Brown-out reset\n");
  6778  277C  3038               	movlw	low(STR_3|8000h)
  6779  277D  0020               	movlb 0	; select bank0
  6780  277E  00AF               	movwf	(?_printf)
  6781  277F  3087               	movlw	high(STR_3|8000h)
  6782  2780  00B0               	movwf	((?_printf))+1
  6783  2781  3194  24A0  31A7   	fcall	_printf
  6784                           	line	97
  6785                           	
  6786  2784                     l38839:	
  6787                           ;catgenius.c: 97: flags |= (0x01 << 7);
  6788  2784  0020               	movlb 0	; select bank0
  6789  2785  17E1               	bsf	(main@flags)+(7/8),(7)&7
  6790                           	line	98
  6791                           ;catgenius.c: 98: } else if (!__timeout)
  6792  2786  2FAC               	goto	l38847
  6793                           	
  6794  2787                     l2083:	
  6795  2787  0020               	movlb 0	; select bank0
  6796  2788  1A20               	btfsc	(260/8),(260)&7
  6797  2789  2F8B               	goto	u12631
  6798  278A  2F8C               	goto	u12630
  6799  278B                     u12631:
  6800  278B  2F94               	goto	l2085
  6801  278C                     u12630:
  6802                           	line	99
  6803                           	
  6804  278C                     l38841:	
  6805                           ;catgenius.c: 99: printf("Watchdog reset\n");
  6806  278C  3079               	movlw	low(STR_4|8000h)
  6807  278D  00AF               	movwf	(?_printf)
  6808  278E  3087               	movlw	high(STR_4|8000h)
  6809  278F  00B0               	movwf	((?_printf))+1
  6810  2790  3194  24A0  31A7   	fcall	_printf
  6811  2793  2FAC               	goto	l38847
  6812                           	line	100
  6813                           	
  6814  2794                     l2085:	
  6815                           ;catgenius.c: 100: else if (!__powerdown)
  6816  2794  19A0               	btfsc	(259/8),(259)&7
  6817  2795  2F97               	goto	u12641
  6818  2796  2F98               	goto	u12640
  6819  2797                     u12641:
  6820  2797  2FA0               	goto	l38845
  6821  2798                     u12640:
  6822                           	line	101
  6823                           	
  6824  2798                     l38843:	
  6825                           ;catgenius.c: 101: printf("Pin reset (sleep)\n");
  6826  2798  3040               	movlw	low(STR_5|8000h)
  6827  2799  00AF               	movwf	(?_printf)
  6828  279A  3086               	movlw	high(STR_5|8000h)
  6829  279B  00B0               	movwf	((?_printf))+1
  6830  279C  3194  24A0  31A7   	fcall	_printf
  6831  279F  2FAC               	goto	l38847
  6832                           	line	102
  6833                           	
  6834  27A0                     l2087:	
  6835                           	line	103
  6836                           	
  6837  27A0                     l38845:	
  6838                           ;catgenius.c: 102: else
  6839                           ;catgenius.c: 103: printf("Pin reset\n");
  6840  27A0  3061               	movlw	low(STR_6|8000h)
  6841  27A1  0020               	movlb 0	; select bank0
  6842  27A2  00AF               	movwf	(?_printf)
  6843  27A3  3088               	movlw	high(STR_6|8000h)
  6844  27A4  00B0               	movwf	((?_printf))+1
  6845  27A5  3194  24A0  31A7   	fcall	_printf
  6846  27A8  2FAC               	goto	l38847
  6847                           	
  6848  27A9                     l2088:	
  6849  27A9  2FAC               	goto	l38847
  6850                           	
  6851  27AA                     l2086:	
  6852  27AA  2FAC               	goto	l38847
  6853                           	
  6854  27AB                     l2084:	
  6855  27AB  2FAC               	goto	l38847
  6856                           	
  6857  27AC                     l2082:	
  6858                           	line	104
  6859                           	
  6860  27AC                     l38847:	
  6861                           ;catgenius.c: 104: nPOR = 1;
  6862  27AC  0021               	movlb 1	; select bank1
  6863  27AD  1496               	bsf	(1201/8)^080h,(1201)&7
  6864                           	line	105
  6865                           	
  6866  27AE                     l38849:	
  6867                           ;catgenius.c: 105: nBOR = 1;
  6868  27AE  1416               	bsf	(1200/8)^080h,(1200)&7
  6869                           	line	107
  6870                           	
  6871  27AF                     l38851:	
  6872                           ;catgenius.c: 107: if (flags & (0x01 << 0))
  6873  27AF  0020               	movlb 0	; select bank0
  6874  27B0  1C61               	btfss	(main@flags),(0)&7
  6875  27B1  2FB3               	goto	u12651
  6876  27B2  2FB4               	goto	u12650
  6877  27B3                     u12651:
  6878  27B3  2FBC               	goto	l38855
  6879  27B4                     u12650:
  6880                           	line	108
  6881                           	
  6882  27B4                     l38853:	
  6883                           ;catgenius.c: 108: printf("Start button held\n");
  6884  27B4  3066               	movlw	low(STR_7|8000h)
  6885  27B5  00AF               	movwf	(?_printf)
  6886  27B6  3086               	movlw	high(STR_7|8000h)
  6887  27B7  00B0               	movwf	((?_printf))+1
  6888  27B8  3194  24A0  31A7   	fcall	_printf
  6889  27BB  2FBC               	goto	l38855
  6890                           	
  6891  27BC                     l2089:	
  6892                           	line	109
  6893                           	
  6894  27BC                     l38855:	
  6895                           ;catgenius.c: 109: if (flags & (0x01 << 1))
  6896  27BC  0020               	movlb 0	; select bank0
  6897  27BD  1CE1               	btfss	(main@flags),(1)&7
  6898  27BE  2FC0               	goto	u12661
  6899  27BF  2FC1               	goto	u12660
  6900  27C0                     u12661:
  6901  27C0  2FC9               	goto	l38859
  6902  27C1                     u12660:
  6903                           	line	110
  6904                           	
  6905  27C1                     l38857:	
  6906                           ;catgenius.c: 110: printf("Setup button held\n");
  6907  27C1  3053               	movlw	low(STR_8|8000h)
  6908  27C2  00AF               	movwf	(?_printf)
  6909  27C3  3086               	movlw	high(STR_8|8000h)
  6910  27C4  00B0               	movwf	((?_printf))+1
  6911  27C5  3194  24A0  31A7   	fcall	_printf
  6912  27C8  2FC9               	goto	l38859
  6913                           	
  6914  27C9                     l2090:	
  6915                           	line	113
  6916                           	
  6917  27C9                     l38859:	
  6918                           ;catgenius.c: 113: timer_init();
  6919  27C9  31B7  27A2  31A7   	fcall	_timer_init
  6920                           	line	116
  6921                           	
  6922  27CC                     l38861:	
  6923                           ;catgenius.c: 116: rtc_init(flags);
  6924  27CC  0020               	movlb 0	; select bank0
  6925  27CD  0861               	movf	(main@flags),w
  6926  27CE  31A9  21E7  31A7   	fcall	_rtc_init
  6927                           	line	119
  6928                           	
  6929  27D1                     l38863:	
  6930                           ;catgenius.c: 119: catsensor_init();
  6931  27D1  31B7  27E2  31A7   	fcall	_catsensor_init
  6932                           	line	122
  6933                           	
  6934  27D4                     l38865:	
  6935                           ;catgenius.c: 122: water_init();
  6936  27D4  31AB  2316  31A7   	fcall	_water_init
  6937                           	line	125
  6938                           	
  6939  27D7                     l38867:	
  6940                           ;catgenius.c: 125: userinterface_init(flags);
  6941  27D7  0020               	movlb 0	; select bank0
  6942  27D8  0861               	movf	(main@flags),w
  6943  27D9  31AB  23F0  31A7   	fcall	_userinterface_init
  6944                           	line	129
  6945                           	
  6946  27DC                     l38869:	
  6947                           ;catgenius.c: 129: cmdline_init();
  6948  27DC  31B7  27B8  31A7   	fcall	_cmdline_init
  6949                           	line	133
  6950                           	
  6951  27DF                     l38871:	
  6952                           ;catgenius.c: 133: litterlanguage_init(flags);
  6953  27DF  0020               	movlb 0	; select bank0
  6954  27E0  0861               	movf	(main@flags),w
  6955  27E1  31A5  25B3  31A7   	fcall	_litterlanguage_init
  6956                           	line	136
  6957                           	
  6958  27E4                     l38873:	
  6959                           ;catgenius.c: 136: interrupt_init();
  6960  27E4  31B7  2799  31A7   	fcall	_interrupt_init
  6961  27E7  2FE8               	goto	l38875
  6962                           	line	139
  6963                           ;catgenius.c: 139: for(;;){
  6964                           	
  6965  27E8                     l2091:	
  6966                           	line	140
  6967                           	
  6968  27E8                     l38875:	
  6969                           ;catgenius.c: 140: rtc_work();
  6970  27E8  31A0  201B  31A7   	fcall	_rtc_work
  6971                           	line	141
  6972                           	
  6973  27EB                     l38877:	
  6974                           ;catgenius.c: 141: catsensor_work();
  6975  27EB  31A6  2630  31A7   	fcall	_catsensor_work
  6976                           	line	142
  6977                           	
  6978  27EE                     l38879:	
  6979                           ;catgenius.c: 142: water_work();
  6980  27EE  3199  2142  31A7   	fcall	_water_work
  6981                           	line	143
  6982                           	
  6983  27F1                     l38881:	
  6984                           ;catgenius.c: 143: catgenie_work();
  6985  27F1  3190  2053  31A7   	fcall	_catgenie_work
  6986                           	line	144
  6987                           	
  6988  27F4                     l38883:	
  6989                           ;catgenius.c: 144: userinterface_work();
  6990  27F4  319D  252E  31A7   	fcall	_userinterface_work
  6991                           	line	146
  6992                           	
  6993  27F7                     l38885:	
  6994                           ;catgenius.c: 146: cmdline_work();
  6995  27F7  31AA  2240  31A7   	fcall	_cmdline_work
  6996                           	line	148
  6997                           	
  6998  27FA                     l38887:	
  6999                           ;catgenius.c: 148: litterlanguage_work();
  7000  27FA  319E  268C  31A7   	fcall	_litterlanguage_work
  7001                           	line	152
  7002                           ;catgenius.c: 152: }
  7003  27FD  2FE8               	goto	l38875
  7004                           	
  7005  27FE                     l2092:	
  7006                           	line	153
  7007                           	
  7008  27FE                     l2093:	
  7009                           	global	start
  7010  27FE  3180  284E         	ljmp	start
  7011                           	opt stack 0
  7012                           GLOBAL	__end_of_main
  7013  2800                     	__end_of_main:
  7014 ;; =============== function _main ends ============
  7015                           
  7016                           	signat	_main,88
  7017                           	global	_litterlanguage_work
  7018                           psect	text3247,local,class=CODE,delta=2
  7019                           global __ptext3247
  7020  1E8C                     __ptext3247:
  7021                           
  7022 ;; *************** function _litterlanguage_work *****************
  7023 ;; Defined at:
  7024 ;;		line 132 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;		None               void
  7031 ;; Registers used:
  7032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7041 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7042 ;;Total ram usage:        4 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    9
  7045 ;; This function calls:
  7046 ;;		_water_detected
  7047 ;;		_water_filling
  7048 ;;		_timeoutexpired
  7049 ;;		_printtime
  7050 ;;		_printf
  7051 ;;		_litterlanguage_event
  7052 ;;		_get_Pump
  7053 ;;		_timeoutnever
  7054 ;;		_set_Dosage
  7055 ;;		_req_instruction
  7056 ;;		_get_instruction
  7057 ;;		_eeprom_read
  7058 ;;		_eeprom_write
  7059 ;;		_exe_instruction
  7060 ;;		_wait_instruction
  7061 ;; This function is called by:
  7062 ;;		_main
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           psect	text3247
  7066                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7067                           	line	132
  7068                           	global	__size_of_litterlanguage_work
  7069  0174                     	__size_of_litterlanguage_work	equ	__end_of_litterlanguage_work-_litterlanguage_work
  7070                           	
  7071  1E8C                     _litterlanguage_work:	
  7072                           	opt	stack 6
  7073                           ; Regs used in _litterlanguage_work: [allreg]
  7074                           	line	134
  7075                           	
  7076  1E8C                     l38729:	
  7077                           ;litterlanguage.c: 134: if (paused)
  7078  1E8C  1EF1               	btfss	(_paused/8),(_paused)&7
  7079  1E8D  2E8F               	goto	u12421
  7080  1E8E  2E90               	goto	u12420
  7081  1E8F                     u12421:
  7082  1E8F  2E92               	goto	l38733
  7083  1E90                     u12420:
  7084  1E90  2FFF               	goto	l4241
  7085                           	line	135
  7086                           	
  7087  1E91                     l38731:	
  7088                           ;litterlanguage.c: 135: return;
  7089  1E91  2FFF               	goto	l4241
  7090                           	
  7091  1E92                     l4240:	
  7092                           	line	138
  7093                           	
  7094  1E92                     l38733:	
  7095                           ;litterlanguage.c: 138: if (ins_state != 0) {
  7096  1E92  0020               	movlb 0	; select bank0
  7097  1E93  0865               	movf	(_ins_state),w
  7098  1E94  1D03               	skipz
  7099  1E95  2E97               	goto	u12430
  7100  1E96  2FF4               	goto	l38817
  7101  1E97                     u12430:
  7102                           	line	142
  7103                           	
  7104  1E97                     l38735:	
  7105                           ;litterlanguage.c: 140: if( !water_detected() &&
  7106                           ;litterlanguage.c: 141: water_filling() &&
  7107                           ;litterlanguage.c: 142: timeoutexpired(&timer_fill) ){
  7108  1E97  31B7  277A  319E   	fcall	_water_detected
  7109  1E9A  3800               	iorlw	0
  7110  1E9B  1D03               	skipz
  7111  1E9C  2E9E               	goto	u12441
  7112  1E9D  2E9F               	goto	u12440
  7113  1E9E                     u12441:
  7114  1E9E  2ECC               	goto	l38747
  7115  1E9F                     u12440:
  7116                           	
  7117  1E9F                     l38737:	
  7118  1E9F  31B7  2780  319E   	fcall	_water_filling
  7119  1EA2  3A00               	xorlw	0&0ffh
  7120  1EA3  1903               	skipnz
  7121  1EA4  2EA6               	goto	u12451
  7122  1EA5  2EA7               	goto	u12450
  7123  1EA6                     u12451:
  7124  1EA6  2ECC               	goto	l38747
  7125  1EA7                     u12450:
  7126                           	
  7127  1EA7                     l38739:	
  7128  1EA7  30E9               	movlw	(_timer_fill&0ffh)
  7129  1EA8  0020               	movlb 0	; select bank0
  7130  1EA9  00A9               	movwf	(?_timeoutexpired)
  7131  1EAA  3000               	movlw	0x1/2
  7132  1EAB  00AA               	movwf	(?_timeoutexpired+1)
  7133  1EAC  31A3  235B  319E   	fcall	_timeoutexpired
  7134  1EAF  3A00               	xorlw	0&0ffh
  7135  1EB0  1903               	skipnz
  7136  1EB1  2EB3               	goto	u12461
  7137  1EB2  2EB4               	goto	u12460
  7138  1EB3                     u12461:
  7139  1EB3  2ECC               	goto	l38747
  7140  1EB4                     u12460:
  7141                           	line	143
  7142                           	
  7143  1EB4                     l38741:	
  7144                           ;litterlanguage.c: 143: printtime();
  7145  1EB4  31AB  2395  319E   	fcall	_printtime
  7146                           	line	144
  7147                           ;litterlanguage.c: 144: printf("Fill timeout\n");
  7148  1EB7  30F1               	movlw	low(STR_15|8000h)
  7149  1EB8  0020               	movlb 0	; select bank0
  7150  1EB9  00AF               	movwf	(?_printf)
  7151  1EBA  3087               	movlw	high(STR_15|8000h)
  7152  1EBB  00B0               	movwf	((?_printf))+1
  7153  1EBC  3194  24A0  319E   	fcall	_printf
  7154                           	line	146
  7155                           	
  7156  1EBF                     l38743:	
  7157                           ;litterlanguage.c: 146: error_fill = 1;
  7158  1EBF  17F0               	bsf	(_error_fill/8),(_error_fill)&7
  7159                           	line	147
  7160                           	
  7161  1EC0                     l38745:	
  7162                           ;litterlanguage.c: 147: litterlanguage_event(1, error_fill);
  7163  1EC0  3000               	movlw	0
  7164  1EC1  1BF0               	btfsc	(_error_fill/8),(_error_fill)&7
  7165  1EC2  3001               	movlw	1
  7166  1EC3  0020               	movlb 0	; select bank0
  7167  1EC4  00DA               	movwf	(??_litterlanguage_work+0)+0
  7168  1EC5  085A               	movf	(??_litterlanguage_work+0)+0,w
  7169  1EC6  00D7               	movwf	(?_litterlanguage_event)
  7170  1EC7  3001               	movlw	(01h)
  7171  1EC8  31A2  2215  319E   	fcall	_litterlanguage_event
  7172  1ECB  2ECC               	goto	l38747
  7173                           	line	148
  7174                           	
  7175  1ECC                     l4243:	
  7176                           	line	153
  7177                           	
  7178  1ECC                     l38747:	
  7179                           ;litterlanguage.c: 148: }
  7180                           ;litterlanguage.c: 151: if( water_detected() &&
  7181                           ;litterlanguage.c: 152: get_Pump() &&
  7182                           ;litterlanguage.c: 153: timeoutexpired(&timer_drain) ){
  7183  1ECC  31B7  277A  319E   	fcall	_water_detected
  7184  1ECF  3A00               	xorlw	0&0ffh
  7185  1ED0  1903               	skipnz
  7186  1ED1  2ED3               	goto	u12471
  7187  1ED2  2ED4               	goto	u12470
  7188  1ED3                     u12471:
  7189  1ED3  2F01               	goto	l38759
  7190  1ED4                     u12470:
  7191                           	
  7192  1ED4                     l38749:	
  7193  1ED4  31B7  2766  319E   	fcall	_get_Pump
  7194  1ED7  3A00               	xorlw	0&0ffh
  7195  1ED8  1903               	skipnz
  7196  1ED9  2EDB               	goto	u12481
  7197  1EDA  2EDC               	goto	u12480
  7198  1EDB                     u12481:
  7199  1EDB  2F01               	goto	l38759
  7200  1EDC                     u12480:
  7201                           	
  7202  1EDC                     l38751:	
  7203  1EDC  30E3               	movlw	(_timer_drain&0ffh)
  7204  1EDD  0020               	movlb 0	; select bank0
  7205  1EDE  00A9               	movwf	(?_timeoutexpired)
  7206  1EDF  3000               	movlw	0x1/2
  7207  1EE0  00AA               	movwf	(?_timeoutexpired+1)
  7208  1EE1  31A3  235B  319E   	fcall	_timeoutexpired
  7209  1EE4  3A00               	xorlw	0&0ffh
  7210  1EE5  1903               	skipnz
  7211  1EE6  2EE8               	goto	u12491
  7212  1EE7  2EE9               	goto	u12490
  7213  1EE8                     u12491:
  7214  1EE8  2F01               	goto	l38759
  7215  1EE9                     u12490:
  7216                           	line	154
  7217                           	
  7218  1EE9                     l38753:	
  7219                           ;litterlanguage.c: 154: printtime();
  7220  1EE9  31AB  2395  319E   	fcall	_printtime
  7221                           	line	155
  7222                           ;litterlanguage.c: 155: printf("Drain timeout\n");
  7223  1EEC  30A8               	movlw	low(STR_16|8000h)
  7224  1EED  0020               	movlb 0	; select bank0
  7225  1EEE  00AF               	movwf	(?_printf)
  7226  1EEF  3087               	movlw	high(STR_16|8000h)
  7227  1EF0  00B0               	movwf	((?_printf))+1
  7228  1EF1  3194  24A0  319E   	fcall	_printf
  7229                           	line	157
  7230                           	
  7231  1EF4                     l38755:	
  7232                           ;litterlanguage.c: 157: error_drain = 1;
  7233  1EF4  16F0               	bsf	(_error_drain/8),(_error_drain)&7
  7234                           	line	158
  7235                           	
  7236  1EF5                     l38757:	
  7237                           ;litterlanguage.c: 158: litterlanguage_event(2, error_drain);
  7238  1EF5  3000               	movlw	0
  7239  1EF6  1AF0               	btfsc	(_error_drain/8),(_error_drain)&7
  7240  1EF7  3001               	movlw	1
  7241  1EF8  0020               	movlb 0	; select bank0
  7242  1EF9  00DA               	movwf	(??_litterlanguage_work+0)+0
  7243  1EFA  085A               	movf	(??_litterlanguage_work+0)+0,w
  7244  1EFB  00D7               	movwf	(?_litterlanguage_event)
  7245  1EFC  3002               	movlw	(02h)
  7246  1EFD  31A2  2215  319E   	fcall	_litterlanguage_event
  7247  1F00  2F01               	goto	l38759
  7248                           	line	159
  7249                           	
  7250  1F01                     l4244:	
  7251                           	line	161
  7252                           	
  7253  1F01                     l38759:	
  7254                           ;litterlanguage.c: 159: }
  7255                           ;litterlanguage.c: 161: if (timeoutexpired(&timer_autodose)) {
  7256  1F01  3064               	movlw	(_timer_autodose&0ffh)
  7257  1F02  0020               	movlb 0	; select bank0
  7258  1F03  00A9               	movwf	(?_timeoutexpired)
  7259  1F04  3001               	movlw	0x2/2
  7260  1F05  00AA               	movwf	(?_timeoutexpired+1)
  7261  1F06  31A3  235B  319E   	fcall	_timeoutexpired
  7262  1F09  3A00               	xorlw	0&0ffh
  7263  1F0A  1903               	skipnz
  7264  1F0B  2F0D               	goto	u12501
  7265  1F0C  2F0E               	goto	u12500
  7266  1F0D                     u12501:
  7267  1F0D  2FF4               	goto	l38817
  7268  1F0E                     u12500:
  7269                           	line	162
  7270                           	
  7271  1F0E                     l38761:	
  7272                           ;litterlanguage.c: 162: timeoutnever(&timer_autodose);
  7273  1F0E  3064               	movlw	(_timer_autodose&0ffh)
  7274  1F0F  0020               	movlb 0	; select bank0
  7275  1F10  00A5               	movwf	(?_timeoutnever)
  7276  1F11  3001               	movlw	0x2/2
  7277  1F12  00A6               	movwf	(?_timeoutnever+1)
  7278  1F13  31A9  21AF  319E   	fcall	_timeoutnever
  7279                           	line	163
  7280                           	
  7281  1F16                     l38763:	
  7282                           ;litterlanguage.c: 163: set_Dosage(0);
  7283  1F16  3000               	movlw	(0)
  7284  1F17  31A8  208A  319E   	fcall	_set_Dosage
  7285  1F1A  2FF4               	goto	l38817
  7286                           	line	164
  7287                           	
  7288  1F1B                     l4245:	
  7289  1F1B  2FF4               	goto	l38817
  7290                           	line	165
  7291                           	
  7292  1F1C                     l4242:	
  7293                           	line	168
  7294                           ;litterlanguage.c: 164: }
  7295                           ;litterlanguage.c: 165: }
  7296                           ;litterlanguage.c: 168: switch (ins_state) {
  7297  1F1C  2FF4               	goto	l38817
  7298                           	line	169
  7299                           ;litterlanguage.c: 169: case 0:
  7300                           	
  7301  1F1D                     l4247:	
  7302                           	line	170
  7303                           ;litterlanguage.c: 170: break;
  7304  1F1D  2FFF               	goto	l4241
  7305                           	line	172
  7306                           ;litterlanguage.c: 172: case 1:
  7307                           	
  7308  1F1E                     l4249:	
  7309                           	line	173
  7310                           ;litterlanguage.c: 173: error_execution = 0;
  7311  1F1E  1370               	bcf	(_error_execution/8),(_error_execution)&7
  7312                           	line	174
  7313                           	
  7314  1F1F                     l38765:	
  7315                           ;litterlanguage.c: 174: litterlanguage_event(4, error_execution);
  7316  1F1F  3000               	movlw	0
  7317  1F20  1B70               	btfsc	(_error_execution/8),(_error_execution)&7
  7318  1F21  3001               	movlw	1
  7319  1F22  00DA               	movwf	(??_litterlanguage_work+0)+0
  7320  1F23  085A               	movf	(??_litterlanguage_work+0)+0,w
  7321  1F24  00D7               	movwf	(?_litterlanguage_event)
  7322  1F25  3004               	movlw	(04h)
  7323  1F26  31A2  2215  319E   	fcall	_litterlanguage_event
  7324                           	line	175
  7325                           	
  7326  1F29                     l38767:	
  7327                           ;litterlanguage.c: 175: req_instruction(ins_pointer);
  7328  1F29  0020               	movlb 0	; select bank0
  7329  1F2A  086C               	movf	(_ins_pointer+1),w
  7330  1F2B  01A4               	clrf	(?_req_instruction+1)
  7331  1F2C  07A4               	addwf	(?_req_instruction+1)
  7332  1F2D  086B               	movf	(_ins_pointer),w
  7333  1F2E  01A3               	clrf	(?_req_instruction)
  7334  1F2F  07A3               	addwf	(?_req_instruction)
  7335                           
  7336  1F30  31A8  20E0  319E   	fcall	_req_instruction
  7337                           	line	176
  7338                           	
  7339  1F33                     l38769:	
  7340                           ;litterlanguage.c: 176: ins_state = 2;
  7341  1F33  3002               	movlw	(02h)
  7342  1F34  0020               	movlb 0	; select bank0
  7343  1F35  00DA               	movwf	(??_litterlanguage_work+0)+0
  7344  1F36  085A               	movf	(??_litterlanguage_work+0)+0,w
  7345  1F37  00E5               	movwf	(_ins_state)
  7346  1F38  2F39               	goto	l38771
  7347                           	line	179
  7348                           ;litterlanguage.c: 179: case 2:
  7349                           	
  7350  1F39                     l4250:	
  7351                           	line	180
  7352                           	
  7353  1F39                     l38771:	
  7354                           ;litterlanguage.c: 180: if (get_instruction(&cur_instruction)) {
  7355  1F39  3068               	movlw	(_cur_instruction)&0ffh
  7356  1F3A  31A8  20F3  319E   	fcall	_get_instruction
  7357  1F3D  3A00               	xorlw	0&0ffh
  7358  1F3E  1903               	skipnz
  7359  1F3F  2F41               	goto	u12511
  7360  1F40  2F42               	goto	u12510
  7361  1F41                     u12511:
  7362  1F41  2FFF               	goto	l4241
  7363  1F42                     u12510:
  7364                           	line	182
  7365                           	
  7366  1F42                     l38773:	
  7367                           ;litterlanguage.c: 182: printf("IP 0x%04X: ", ins_pointer);
  7368  1F42  3033               	movlw	low(STR_17|8000h)
  7369  1F43  0020               	movlb 0	; select bank0
  7370  1F44  00AF               	movwf	(?_printf)
  7371  1F45  3088               	movlw	high(STR_17|8000h)
  7372  1F46  00B0               	movwf	((?_printf))+1
  7373  1F47  086C               	movf	(_ins_pointer+1),w
  7374  1F48  01B2               	clrf	(1+?_printf+02h)
  7375  1F49  07B2               	addwf	(1+?_printf+02h)
  7376  1F4A  086B               	movf	(_ins_pointer),w
  7377  1F4B  01B1               	clrf	(0+?_printf+02h)
  7378  1F4C  07B1               	addwf	(0+?_printf+02h)
  7379                           
  7380  1F4D  3194  24A0  319E   	fcall	_printf
  7381                           	line	184
  7382                           	
  7383  1F50                     l38775:	
  7384                           ;litterlanguage.c: 184: if (cur_instruction.opcode == 0x00) {
  7385  1F50  0020               	movlb 0	; select bank0
  7386  1F51  08E8               	movf	(_cur_instruction),f
  7387  1F52  1D03               	skipz
  7388  1F53  2F55               	goto	u12521
  7389  1F54  2F56               	goto	u12520
  7390  1F55                     u12521:
  7391  1F55  2FB8               	goto	l4252
  7392  1F56                     u12520:
  7393                           	line	186
  7394                           	
  7395  1F56                     l38777:	
  7396                           ;litterlanguage.c: 186: printf("INS_START, %s", wet_program?"wet":"dry");
  7397  1F56  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  7398  1F57  2F59               	goto	u12531
  7399  1F58  2F5A               	goto	u12530
  7400  1F59                     u12531:
  7401  1F59  2F5F               	goto	l38781
  7402  1F5A                     u12530:
  7403                           	
  7404  1F5A                     l38779:	
  7405  1F5A  3038               	movlw	low(STR_20|8000h)
  7406  1F5B  00DC               	movwf	(_litterlanguage_work$5880)
  7407  1F5C  3089               	movlw	high(STR_20|8000h)
  7408  1F5D  00DD               	movwf	((_litterlanguage_work$5880))+1
  7409  1F5E  2F64               	goto	l38783
  7410                           	
  7411  1F5F                     l4254:	
  7412                           	
  7413  1F5F                     l38781:	
  7414  1F5F  3030               	movlw	low(STR_19|8000h)
  7415  1F60  00DC               	movwf	(_litterlanguage_work$5880)
  7416  1F61  3089               	movlw	high(STR_19|8000h)
  7417  1F62  00DD               	movwf	((_litterlanguage_work$5880))+1
  7418  1F63  2F64               	goto	l38783
  7419                           	
  7420  1F64                     l4256:	
  7421                           	
  7422  1F64                     l38783:	
  7423  1F64  30FF               	movlw	low(STR_18|8000h)
  7424  1F65  00AF               	movwf	(?_printf)
  7425  1F66  3087               	movlw	high(STR_18|8000h)
  7426  1F67  00B0               	movwf	((?_printf))+1
  7427  1F68  085D               	movf	(_litterlanguage_work$5880+1),w
  7428  1F69  01B2               	clrf	(1+?_printf+02h)
  7429  1F6A  07B2               	addwf	(1+?_printf+02h)
  7430  1F6B  085C               	movf	(_litterlanguage_work$5880),w
  7431  1F6C  01B1               	clrf	(0+?_printf+02h)
  7432  1F6D  07B1               	addwf	(0+?_printf+02h)
  7433                           
  7434  1F6E  3194  24A0  319E   	fcall	_printf
  7435                           	line	191
  7436                           	
  7437  1F71                     l38785:	
  7438                           ;litterlanguage.c: 189: if( ((cur_instruction.operant & 0x00FF) <= 0x0E) &&
  7439                           ;litterlanguage.c: 190: ( (!wet_program && (cur_instruction.operant & 0x0200)) ||
  7440                           ;litterlanguage.c: 191: (wet_program && (cur_instruction.operant & 0x0400)) ) ) {
  7441  1F71  30FF               	movlw	low(0FFh)
  7442  1F72  0020               	movlb 0	; select bank0
  7443  1F73  0569               	andwf	0+(_cur_instruction)+01h,w
  7444  1F74  00DA               	movwf	(??_litterlanguage_work+0)+0
  7445  1F75  3000               	movlw	high(0FFh)
  7446  1F76  056A               	andwf	1+(_cur_instruction)+01h,w
  7447  1F77  00DB               	movwf	1+(??_litterlanguage_work+0)+0
  7448  1F78  3000               	movlw	high(0Fh)
  7449  1F79  025B               	subwf	1+(??_litterlanguage_work+0)+0,w
  7450  1F7A  300F               	movlw	low(0Fh)
  7451  1F7B  1903               	skipnz
  7452  1F7C  025A               	subwf	0+(??_litterlanguage_work+0)+0,w
  7453  1F7D  1803               	skipnc
  7454  1F7E  2F80               	goto	u12541
  7455  1F7F  2F81               	goto	u12540
  7456  1F80                     u12541:
  7457  1F80  2FAE               	goto	l4257
  7458  1F81                     u12540:
  7459                           	
  7460  1F81                     l38787:	
  7461  1F81  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  7462  1F82  2F84               	goto	u12551
  7463  1F83  2F85               	goto	u12550
  7464  1F84                     u12551:
  7465  1F84  2F89               	goto	l4261
  7466  1F85                     u12550:
  7467                           	
  7468  1F85                     l38789:	
  7469  1F85  18EA               	btfsc	1+(_cur_instruction)+01h,(9)&7
  7470  1F86  2F88               	goto	u12561
  7471  1F87  2F89               	goto	u12560
  7472  1F88                     u12561:
  7473  1F88  2F92               	goto	l38793
  7474  1F89                     u12560:
  7475                           	
  7476  1F89                     l4261:	
  7477  1F89  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  7478  1F8A  2F8C               	goto	u12571
  7479  1F8B  2F8D               	goto	u12570
  7480  1F8C                     u12571:
  7481  1F8C  2FAE               	goto	l4257
  7482  1F8D                     u12570:
  7483                           	
  7484  1F8D                     l38791:	
  7485  1F8D  1D6A               	btfss	1+(_cur_instruction)+01h,(10)&7
  7486  1F8E  2F90               	goto	u12581
  7487  1F8F  2F91               	goto	u12580
  7488  1F90                     u12581:
  7489  1F90  2FAE               	goto	l4257
  7490  1F91                     u12580:
  7491  1F91  2F92               	goto	l38793
  7492                           	
  7493  1F92                     l4259:	
  7494                           	line	192
  7495                           	
  7496  1F92                     l38793:	
  7497                           ;litterlanguage.c: 192: if (eeprom_read((3)) < 1)
  7498  1F92  3003               	movlw	(03h)
  7499  1F93  31AA  225F  319E   	fcall	_eeprom_read
  7500  1F96  3800               	iorlw	0
  7501  1F97  1D03               	skipz
  7502  1F98  2F9A               	goto	u12591
  7503  1F99  2F9B               	goto	u12590
  7504  1F9A                     u12591:
  7505  1F9A  2FA4               	goto	l38797
  7506  1F9B                     u12590:
  7507                           	line	193
  7508                           	
  7509  1F9B                     l38795:	
  7510                           ;litterlanguage.c: 193: eeprom_write((3), 1);
  7511  1F9B  0020               	movlb 0	; select bank0
  7512  1F9C  01A1               	clrf	(?_eeprom_write)
  7513  1F9D  1403               	bsf	status,0
  7514  1F9E  0DA1               	rlf	(?_eeprom_write),f
  7515  1F9F  3003               	movlw	(03h)
  7516  1FA0  31AC  244D  319E   	fcall	_eeprom_write
  7517  1FA3  2FA4               	goto	l38797
  7518                           	
  7519  1FA4                     l4262:	
  7520                           	line	194
  7521                           	
  7522  1FA4                     l38797:	
  7523                           ;litterlanguage.c: 194: ins_pointer++;
  7524  1FA4  3003               	movlw	low(03h)
  7525  1FA5  0020               	movlb 0	; select bank0
  7526  1FA6  07EB               	addwf	(_ins_pointer),f
  7527  1FA7  3000               	movlw	high(03h)
  7528  1FA8  3DEC               	addwfc	(_ins_pointer+1),f
  7529                           	line	195
  7530                           	
  7531  1FA9                     l38799:	
  7532                           ;litterlanguage.c: 195: ins_state = 3;
  7533  1FA9  3003               	movlw	(03h)
  7534  1FAA  00DA               	movwf	(??_litterlanguage_work+0)+0
  7535  1FAB  085A               	movf	(??_litterlanguage_work+0)+0,w
  7536  1FAC  00E5               	movwf	(_ins_state)
  7537                           	line	196
  7538                           ;litterlanguage.c: 196: } else {
  7539  1FAD  2FC7               	goto	l4264
  7540                           	
  7541  1FAE                     l4257:	
  7542                           	line	197
  7543                           ;litterlanguage.c: 197: ins_state = 0;
  7544  1FAE  01E5               	clrf	(_ins_state)
  7545                           	line	199
  7546                           	
  7547  1FAF                     l38801:	
  7548                           ;litterlanguage.c: 199: printf(", incompatible");
  7549  1FAF  30B7               	movlw	low(STR_21|8000h)
  7550  1FB0  00AF               	movwf	(?_printf)
  7551  1FB1  3087               	movlw	high(STR_21|8000h)
  7552  1FB2  00B0               	movwf	((?_printf))+1
  7553  1FB3  3194  24A0  319E   	fcall	_printf
  7554  1FB6  2FC7               	goto	l4264
  7555                           	line	201
  7556                           	
  7557  1FB7                     l4263:	
  7558                           	line	202
  7559                           ;litterlanguage.c: 201: }
  7560                           ;litterlanguage.c: 202: } else {
  7561  1FB7  2FC7               	goto	l4264
  7562                           	
  7563  1FB8                     l4252:	
  7564                           	line	203
  7565                           ;litterlanguage.c: 203: ins_state = 0;
  7566  1FB8  01E5               	clrf	(_ins_state)
  7567                           	line	205
  7568                           	
  7569  1FB9                     l38803:	
  7570                           ;litterlanguage.c: 205: printf(", no start: 0x%X", cur_instruction.opcode);
  7571  1FB9  3005               	movlw	low(STR_22|8000h)
  7572  1FBA  00AF               	movwf	(?_printf)
  7573  1FBB  3087               	movlw	high(STR_22|8000h)
  7574  1FBC  00B0               	movwf	((?_printf))+1
  7575  1FBD  0868               	movf	(_cur_instruction),w
  7576  1FBE  00DA               	movwf	(??_litterlanguage_work+0)+0
  7577  1FBF  01DB               	clrf	(??_litterlanguage_work+0)+0+1
  7578  1FC0  085A               	movf	0+(??_litterlanguage_work+0)+0,w
  7579  1FC1  00B1               	movwf	0+(?_printf)+02h
  7580  1FC2  085B               	movf	1+(??_litterlanguage_work+0)+0,w
  7581  1FC3  00B2               	movwf	1+(?_printf)+02h
  7582  1FC4  3194  24A0  319E   	fcall	_printf
  7583                           	line	207
  7584                           	
  7585  1FC7                     l4264:	
  7586                           	line	209
  7587                           ;litterlanguage.c: 207: }
  7588                           ;litterlanguage.c: 209: printf("\n");
  7589  1FC7  30EF               	movlw	low(STR_23|8000h)
  7590  1FC8  0020               	movlb 0	; select bank0
  7591  1FC9  00AF               	movwf	(?_printf)
  7592  1FCA  3087               	movlw	high(STR_23|8000h)
  7593  1FCB  00B0               	movwf	((?_printf))+1
  7594  1FCC  3194  24A0  319E   	fcall	_printf
  7595  1FCF  2FFF               	goto	l4241
  7596                           	line	211
  7597                           	
  7598  1FD0                     l4251:	
  7599                           	line	212
  7600                           ;litterlanguage.c: 211: }
  7601                           ;litterlanguage.c: 212: break;
  7602  1FD0  2FFF               	goto	l4241
  7603                           	line	214
  7604                           ;litterlanguage.c: 214: case 3:
  7605                           	
  7606  1FD1                     l4265:	
  7607                           	line	215
  7608                           	
  7609  1FD1                     l38805:	
  7610                           ;litterlanguage.c: 215: req_instruction(ins_pointer);
  7611  1FD1  0020               	movlb 0	; select bank0
  7612  1FD2  086C               	movf	(_ins_pointer+1),w
  7613  1FD3  01A4               	clrf	(?_req_instruction+1)
  7614  1FD4  07A4               	addwf	(?_req_instruction+1)
  7615  1FD5  086B               	movf	(_ins_pointer),w
  7616  1FD6  01A3               	clrf	(?_req_instruction)
  7617  1FD7  07A3               	addwf	(?_req_instruction)
  7618                           
  7619  1FD8  31A8  20E0  319E   	fcall	_req_instruction
  7620                           	line	216
  7621                           	
  7622  1FDB                     l38807:	
  7623                           ;litterlanguage.c: 216: ins_state = 4;
  7624  1FDB  3004               	movlw	(04h)
  7625  1FDC  0020               	movlb 0	; select bank0
  7626  1FDD  00DA               	movwf	(??_litterlanguage_work+0)+0
  7627  1FDE  085A               	movf	(??_litterlanguage_work+0)+0,w
  7628  1FDF  00E5               	movwf	(_ins_state)
  7629  1FE0  2FE1               	goto	l38809
  7630                           	line	219
  7631                           ;litterlanguage.c: 219: case 4:
  7632                           	
  7633  1FE1                     l4266:	
  7634                           	line	220
  7635                           	
  7636  1FE1                     l38809:	
  7637                           ;litterlanguage.c: 220: if (get_instruction(&cur_instruction)) {
  7638  1FE1  3068               	movlw	(_cur_instruction)&0ffh
  7639  1FE2  31A8  20F3  319E   	fcall	_get_instruction
  7640  1FE5  3A00               	xorlw	0&0ffh
  7641  1FE6  1903               	skipnz
  7642  1FE7  2FE9               	goto	u12601
  7643  1FE8  2FEA               	goto	u12600
  7644  1FE9                     u12601:
  7645  1FE9  2FFF               	goto	l4241
  7646  1FEA                     u12600:
  7647                           	line	222
  7648                           	
  7649  1FEA                     l38811:	
  7650                           ;litterlanguage.c: 222: exe_instruction();
  7651  1FEA  318B  233D  319E   	fcall	_exe_instruction
  7652  1FED  2FFF               	goto	l4241
  7653                           	line	223
  7654                           	
  7655  1FEE                     l4267:	
  7656                           	line	224
  7657                           ;litterlanguage.c: 223: }
  7658                           ;litterlanguage.c: 224: break;
  7659  1FEE  2FFF               	goto	l4241
  7660                           	line	226
  7661                           ;litterlanguage.c: 226: case 5:
  7662                           	
  7663  1FEF                     l4268:	
  7664                           	line	227
  7665                           	
  7666  1FEF                     l38813:	
  7667                           ;litterlanguage.c: 227: wait_instruction();
  7668  1FEF  31A5  2537  319E   	fcall	_wait_instruction
  7669                           	line	228
  7670                           ;litterlanguage.c: 228: break;
  7671  1FF2  2FFF               	goto	l4241
  7672                           	line	229
  7673                           	
  7674  1FF3                     l38815:	
  7675                           ;litterlanguage.c: 229: }
  7676  1FF3  2FFF               	goto	l4241
  7677                           	line	168
  7678                           	
  7679  1FF4                     l4246:	
  7680                           	
  7681  1FF4                     l38817:	
  7682  1FF4  0020               	movlb 0	; select bank0
  7683  1FF5  0865               	movf	(_ins_state),w
  7684                           	; Switch size 1, requested type "space"
  7685                           ; Number of cases is 6, Range of values is 0 to 5
  7686                           ; switch strategies available:
  7687                           ; Name         Instructions Cycles
  7688                           ; direct_byte           18     6 (fixed)
  7689                           ; simple_byte           19    10 (average)
  7690                           ; jumptable            260     6 (fixed)
  7691                           ; rangetable            10     4 (fixed)
  7692                           ; spacedrange           17     6 (fixed)
  7693                           ; locatedrange           6     3 (fixed)
  7694                           ;	Chosen strategy is direct_byte
  7695                           
  7696  1FF6  0084               	movwf fsr0l
  7697  1FF7  3006               	movlw	6
  7698  1FF8  0204               	subwf	fsr0l,w
  7699  1FF9  1803               skipnc
  7700  1FFA  2FFF               goto l4241
  7701  1FFB  3180               movlp high(S39169)
  7702  1FFC  3504               	lslf fsr0l,w
  7703  1FFD  3EF3               	addlw low(S39169)
  7704  1FFE  0082               	movwf pc
  7705                           psect	swtext1,local,class=CONST,delta=2
  7706                           global __pswtext1
  7707  00F3                     __pswtext1:
  7708  00F3                     S39169:
  7709  00F3  319F  2FFF         	ljmp	l4241
  7710  00F5  319F  2F1E         	ljmp	l4249
  7711  00F7  319F  2F39         	ljmp	l38771
  7712  00F9  319F  2FD1         	ljmp	l38805
  7713  00FB  319F  2FE1         	ljmp	l38809
  7714  00FD  319F  2FEF         	ljmp	l38813
  7715                           psect	text3247
  7716                           
  7717                           	line	229
  7718                           	
  7719  1FFF                     l4248:	
  7720                           	line	230
  7721                           	
  7722  1FFF                     l4241:	
  7723  1FFF  0008               	return
  7724                           	opt stack 0
  7725                           GLOBAL	__end_of_litterlanguage_work
  7726  2000                     	__end_of_litterlanguage_work:
  7727 ;; =============== function _litterlanguage_work ends ============
  7728                           
  7729                           	signat	_litterlanguage_work,88
  7730                           	global	_exe_instruction
  7731                           psect	text3248,local,class=CODE,delta=2
  7732                           global __ptext3248
  7733  0B3D                     __ptext3248:
  7734                           
  7735 ;; *************** function _exe_instruction *****************
  7736 ;; Defined at:
  7737 ;;		line 466 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  temp            2    4[BANK1 ] unsigned int 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;		None               void
  7744 ;; Registers used:
  7745 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7752 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
       0       0
  7753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7754 ;;      Totals:         0       1      38       0       0       0       0       0       0       0       0       0       
       0       0
  7755 ;;Total ram usage:       39 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    8
  7758 ;; This function calls:
  7759 ;;		_printtime
  7760 ;;		_printf
  7761 ;;		_set_Bowl
  7762 ;;		_set_Arm
  7763 ;;		_eeprom_read
  7764 ;;		_eeprom_write
  7765 ;;		_water_detected
  7766 ;;		_water_fill
  7767 ;;		_settimeout
  7768 ;;		_timeoutnever
  7769 ;;		_set_Pump
  7770 ;;		_set_Dryer
  7771 ;;		___lmul
  7772 ;;		___wmul
  7773 ;;		___lwdiv
  7774 ;;		___lwmod
  7775 ;;		_set_Dosage
  7776 ;;		_memcpy
  7777 ;;		_litterlanguage_stop
  7778 ;;		_litterlanguage_event
  7779 ;; This function is called by:
  7780 ;;		_litterlanguage_work
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           psect	text3248
  7784                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7785                           	line	466
  7786                           	global	__size_of_exe_instruction
  7787  04C3                     	__size_of_exe_instruction	equ	__end_of_exe_instruction-_exe_instruction
  7788                           	
  7789  0B3D                     _exe_instruction:	
  7790                           	opt	stack 6
  7791                           ; Regs used in _exe_instruction: [allreg]
  7792                           	line	471
  7793                           	
  7794  0B3D                     l38475:	
  7795                           ;litterlanguage.c: 467: static struct instruction const * ret_address;
  7796                           ;litterlanguage.c: 468: unsigned int temp;
  7797                           ;litterlanguage.c: 471: printtime();
  7798  0B3D  31AB  2395  318B   	fcall	_printtime
  7799                           	line	472
  7800                           ;litterlanguage.c: 472: printf("IP 0x%04X: ", ins_pointer);
  7801  0B40  3033               	movlw	low(STR_39|8000h)
  7802  0B41  0020               	movlb 0	; select bank0
  7803  0B42  00AF               	movwf	(?_printf)
  7804  0B43  3088               	movlw	high(STR_39|8000h)
  7805  0B44  00B0               	movwf	((?_printf))+1
  7806  0B45  086C               	movf	(_ins_pointer+1),w
  7807  0B46  01B2               	clrf	(1+?_printf+02h)
  7808  0B47  07B2               	addwf	(1+?_printf+02h)
  7809  0B48  086B               	movf	(_ins_pointer),w
  7810  0B49  01B1               	clrf	(0+?_printf+02h)
  7811  0B4A  07B1               	addwf	(0+?_printf+02h)
  7812                           
  7813  0B4B  3194  24A0  318B   	fcall	_printf
  7814                           	line	474
  7815                           ;litterlanguage.c: 474: switch (cur_instruction.opcode) {
  7816  0B4E  2FEC               	goto	l38719
  7817                           	line	475
  7818                           ;litterlanguage.c: 475: case 0x01:
  7819                           	
  7820  0B4F                     l4354:	
  7821                           	line	477
  7822                           	
  7823  0B4F                     l38477:	
  7824                           ;litterlanguage.c: 477: printf("INS_BOWL, %s", (cur_instruction.operant == 0)?"BOWL_STOP
                                 ":((cur_instruction.operant == 1)?"BOWL_CW":"BOWL_CCW"));
  7825  0B4F  3001               	movlw	(01h)
  7826  0B50  3E68               	addlw	_cur_instruction&0ffh
  7827  0B51  0086               	movwf	fsr1l
  7828  0B52  0187               	clrf fsr1h	
  7829                           	
  7830  0B53  0016               	moviw	fsr1++
  7831  0B54  0401               	iorwf	indf1,w
  7832  0B55  1903               	skipnz
  7833  0B56  2B58               	goto	u12141
  7834  0B57  2B59               	goto	u12140
  7835  0B58                     u12141:
  7836  0B58  2B7A               	goto	l38487
  7837  0B59                     u12140:
  7838                           	
  7839  0B59                     l38479:	
  7840  0B59  3001               	movlw	(01h)
  7841  0B5A  3E68               	addlw	_cur_instruction&0ffh
  7842  0B5B  0086               	movwf	fsr1l
  7843  0B5C  0187               	clrf fsr1h	
  7844                           	
  7845  0B5D  3F40               	moviw	[0]fsr1
  7846  0B5E  3A01               	xorlw	low(01h)
  7847  0B5F  1D03               	skipz
  7848  0B60  2B63               	goto	u12155
  7849  0B61  3F41               	moviw	[1]fsr1
  7850  0B62  3A00               	xorlw	high(01h)
  7851  0B63                     u12155:
  7852  0B63  1903               	skipnz
  7853  0B64  2B66               	goto	u12151
  7854  0B65  2B67               	goto	u12150
  7855  0B66                     u12151:
  7856  0B66  2B6D               	goto	l38483
  7857  0B67                     u12150:
  7858                           	
  7859  0B67                     l38481:	
  7860  0B67  30C2               	movlw	low(STR_43|8000h)
  7861  0B68  0021               	movlb 1	; select bank1
  7862  0B69  00A8               	movwf	(_exe_instruction$5955)^080h
  7863  0B6A  3088               	movlw	high(STR_43|8000h)
  7864  0B6B  00A9               	movwf	((_exe_instruction$5955)^080h)+1
  7865  0B6C  2B73               	goto	l38485
  7866                           	
  7867  0B6D                     l4360:	
  7868                           	
  7869  0B6D                     l38483:	
  7870  0B6D  30F4               	movlw	low(STR_42|8000h)
  7871  0B6E  0021               	movlb 1	; select bank1
  7872  0B6F  00A8               	movwf	(_exe_instruction$5955)^080h
  7873  0B70  3088               	movlw	high(STR_42|8000h)
  7874  0B71  00A9               	movwf	((_exe_instruction$5955)^080h)+1
  7875  0B72  2B73               	goto	l38485
  7876                           	
  7877  0B73                     l4362:	
  7878                           	
  7879  0B73                     l38485:	
  7880  0B73  0829               	movf	(_exe_instruction$5955+1)^080h,w
  7881  0B74  01A7               	clrf	(_exe_instruction$5954+1)^080h
  7882  0B75  07A7               	addwf	(_exe_instruction$5954+1)^080h
  7883  0B76  0828               	movf	(_exe_instruction$5955)^080h,w
  7884  0B77  01A6               	clrf	(_exe_instruction$5954)^080h
  7885  0B78  07A6               	addwf	(_exe_instruction$5954)^080h
  7886                           
  7887  0B79  2B80               	goto	l38489
  7888                           	
  7889  0B7A                     l4356:	
  7890                           	
  7891  0B7A                     l38487:	
  7892  0B7A  308A               	movlw	low(STR_41|8000h)
  7893  0B7B  0021               	movlb 1	; select bank1
  7894  0B7C  00A6               	movwf	(_exe_instruction$5954)^080h
  7895  0B7D  3088               	movlw	high(STR_41|8000h)
  7896  0B7E  00A7               	movwf	((_exe_instruction$5954)^080h)+1
  7897  0B7F  2B80               	goto	l38489
  7898                           	
  7899  0B80                     l4358:	
  7900                           	
  7901  0B80                     l38489:	
  7902  0B80  301A               	movlw	low(STR_40|8000h)
  7903  0B81  0020               	movlb 0	; select bank0
  7904  0B82  00AF               	movwf	(?_printf)
  7905  0B83  3088               	movlw	high(STR_40|8000h)
  7906  0B84  00B0               	movwf	((?_printf))+1
  7907  0B85  0021               	movlb 1	; select bank1
  7908  0B86  0827               	movf	(_exe_instruction$5954+1)^080h,w
  7909  0B87  0020               	movlb 0	; select bank0
  7910  0B88  01B2               	clrf	(1+?_printf+02h)
  7911  0B89  07B2               	addwf	(1+?_printf+02h)
  7912  0B8A  0021               	movlb 1	; select bank1
  7913  0B8B  0826               	movf	(_exe_instruction$5954)^080h,w
  7914  0B8C  0020               	movlb 0	; select bank0
  7915  0B8D  01B1               	clrf	(0+?_printf+02h)
  7916  0B8E  07B1               	addwf	(0+?_printf+02h)
  7917                           
  7918  0B8F  3194  24A0  318B   	fcall	_printf
  7919                           	line	479
  7920                           	
  7921  0B92                     l38491:	
  7922                           ;litterlanguage.c: 479: set_Bowl((unsigned char)cur_instruction.operant);
  7923  0B92  0020               	movlb 0	; select bank0
  7924  0B93  0869               	movf	0+(_cur_instruction)+01h,w
  7925  0B94  31AA  2282  318B   	fcall	_set_Bowl
  7926                           	line	480
  7927                           	
  7928  0B97                     l38493:	
  7929                           ;litterlanguage.c: 480: ins_pointer++;
  7930  0B97  3003               	movlw	low(03h)
  7931  0B98  0020               	movlb 0	; select bank0
  7932  0B99  07EB               	addwf	(_ins_pointer),f
  7933  0B9A  3000               	movlw	high(03h)
  7934  0B9B  3DEC               	addwfc	(_ins_pointer+1),f
  7935                           	line	481
  7936                           	
  7937  0B9C                     l38495:	
  7938                           ;litterlanguage.c: 481: ins_state = 3;
  7939  0B9C  3003               	movlw	(03h)
  7940  0B9D  00D9               	movwf	(??_exe_instruction+0)+0
  7941  0B9E  0859               	movf	(??_exe_instruction+0)+0,w
  7942  0B9F  00E5               	movwf	(_ins_state)
  7943                           	line	482
  7944                           ;litterlanguage.c: 482: break;
  7945  0BA0  2FF7               	goto	l38721
  7946                           	line	483
  7947                           ;litterlanguage.c: 483: case 0x02:
  7948                           	
  7949  0BA1                     l4364:	
  7950                           	line	485
  7951                           	
  7952  0BA1                     l38497:	
  7953                           ;litterlanguage.c: 485: printf("INS_ARM, %s", (cur_instruction.operant == 0)?"ARM_STOP":
                                 ((cur_instruction.operant == 1)?"ARM_DOWN":"ARM_UP"));
  7954  0BA1  3001               	movlw	(01h)
  7955  0BA2  3E68               	addlw	_cur_instruction&0ffh
  7956  0BA3  0086               	movwf	fsr1l
  7957  0BA4  0187               	clrf fsr1h	
  7958                           	
  7959  0BA5  0016               	moviw	fsr1++
  7960  0BA6  0401               	iorwf	indf1,w
  7961  0BA7  1903               	skipnz
  7962  0BA8  2BAA               	goto	u12161
  7963  0BA9  2BAB               	goto	u12160
  7964  0BAA                     u12161:
  7965  0BAA  2BCC               	goto	l38507
  7966  0BAB                     u12160:
  7967                           	
  7968  0BAB                     l38499:	
  7969  0BAB  3001               	movlw	(01h)
  7970  0BAC  3E68               	addlw	_cur_instruction&0ffh
  7971  0BAD  0086               	movwf	fsr1l
  7972  0BAE  0187               	clrf fsr1h	
  7973                           	
  7974  0BAF  3F40               	moviw	[0]fsr1
  7975  0BB0  3A01               	xorlw	low(01h)
  7976  0BB1  1D03               	skipz
  7977  0BB2  2BB5               	goto	u12175
  7978  0BB3  3F41               	moviw	[1]fsr1
  7979  0BB4  3A00               	xorlw	high(01h)
  7980  0BB5                     u12175:
  7981  0BB5  1903               	skipnz
  7982  0BB6  2BB8               	goto	u12171
  7983  0BB7  2BB9               	goto	u12170
  7984  0BB8                     u12171:
  7985  0BB8  2BBF               	goto	l38503
  7986  0BB9                     u12170:
  7987                           	
  7988  0BB9                     l38501:	
  7989  0BB9  3011               	movlw	low(STR_47|8000h)
  7990  0BBA  0021               	movlb 1	; select bank1
  7991  0BBB  00AC               	movwf	(_exe_instruction$5961)^080h
  7992  0BBC  3089               	movlw	high(STR_47|8000h)
  7993  0BBD  00AD               	movwf	((_exe_instruction$5961)^080h)+1
  7994  0BBE  2BC5               	goto	l38505
  7995                           	
  7996  0BBF                     l4370:	
  7997                           	
  7998  0BBF                     l38503:	
  7999  0BBF  30B0               	movlw	low(STR_46|8000h)
  8000  0BC0  0021               	movlb 1	; select bank1
  8001  0BC1  00AC               	movwf	(_exe_instruction$5961)^080h
  8002  0BC2  3088               	movlw	high(STR_46|8000h)
  8003  0BC3  00AD               	movwf	((_exe_instruction$5961)^080h)+1
  8004  0BC4  2BC5               	goto	l38505
  8005                           	
  8006  0BC5                     l4372:	
  8007                           	
  8008  0BC5                     l38505:	
  8009  0BC5  082D               	movf	(_exe_instruction$5961+1)^080h,w
  8010  0BC6  01AB               	clrf	(_exe_instruction$5960+1)^080h
  8011  0BC7  07AB               	addwf	(_exe_instruction$5960+1)^080h
  8012  0BC8  082C               	movf	(_exe_instruction$5961)^080h,w
  8013  0BC9  01AA               	clrf	(_exe_instruction$5960)^080h
  8014  0BCA  07AA               	addwf	(_exe_instruction$5960)^080h
  8015                           
  8016  0BCB  2BD2               	goto	l38509
  8017                           	
  8018  0BCC                     l4366:	
  8019                           	
  8020  0BCC                     l38507:	
  8021  0BCC  30B9               	movlw	low(STR_45|8000h)
  8022  0BCD  0021               	movlb 1	; select bank1
  8023  0BCE  00AA               	movwf	(_exe_instruction$5960)^080h
  8024  0BCF  3088               	movlw	high(STR_45|8000h)
  8025  0BD0  00AB               	movwf	((_exe_instruction$5960)^080h)+1
  8026  0BD1  2BD2               	goto	l38509
  8027                           	
  8028  0BD2                     l4368:	
  8029                           	
  8030  0BD2                     l38509:	
  8031  0BD2  303F               	movlw	low(STR_44|8000h)
  8032  0BD3  0020               	movlb 0	; select bank0
  8033  0BD4  00AF               	movwf	(?_printf)
  8034  0BD5  3088               	movlw	high(STR_44|8000h)
  8035  0BD6  00B0               	movwf	((?_printf))+1
  8036  0BD7  0021               	movlb 1	; select bank1
  8037  0BD8  082B               	movf	(_exe_instruction$5960+1)^080h,w
  8038  0BD9  0020               	movlb 0	; select bank0
  8039  0BDA  01B2               	clrf	(1+?_printf+02h)
  8040  0BDB  07B2               	addwf	(1+?_printf+02h)
  8041  0BDC  0021               	movlb 1	; select bank1
  8042  0BDD  082A               	movf	(_exe_instruction$5960)^080h,w
  8043  0BDE  0020               	movlb 0	; select bank0
  8044  0BDF  01B1               	clrf	(0+?_printf+02h)
  8045  0BE0  07B1               	addwf	(0+?_printf+02h)
  8046                           
  8047  0BE1  3194  24A0  318B   	fcall	_printf
  8048                           	line	487
  8049                           	
  8050  0BE4                     l38511:	
  8051                           ;litterlanguage.c: 487: set_Arm((unsigned char)cur_instruction.operant);
  8052  0BE4  0020               	movlb 0	; select bank0
  8053  0BE5  0869               	movf	0+(_cur_instruction)+01h,w
  8054  0BE6  31AA  22A6  318B   	fcall	_set_Arm
  8055                           	line	488
  8056                           	
  8057  0BE9                     l38513:	
  8058                           ;litterlanguage.c: 488: ins_pointer++;
  8059  0BE9  3003               	movlw	low(03h)
  8060  0BEA  0020               	movlb 0	; select bank0
  8061  0BEB  07EB               	addwf	(_ins_pointer),f
  8062  0BEC  3000               	movlw	high(03h)
  8063  0BED  3DEC               	addwfc	(_ins_pointer+1),f
  8064                           	line	489
  8065                           	
  8066  0BEE                     l38515:	
  8067                           ;litterlanguage.c: 489: ins_state = 3;
  8068  0BEE  3003               	movlw	(03h)
  8069  0BEF  00D9               	movwf	(??_exe_instruction+0)+0
  8070  0BF0  0859               	movf	(??_exe_instruction+0)+0,w
  8071  0BF1  00E5               	movwf	(_ins_state)
  8072                           	line	490
  8073                           ;litterlanguage.c: 490: break;
  8074  0BF2  2FF7               	goto	l38721
  8075                           	line	491
  8076                           ;litterlanguage.c: 491: case 0x03:
  8077                           	
  8078  0BF3                     l4373:	
  8079                           	line	493
  8080                           ;litterlanguage.c: 493: printf("INS_WATER, %s%s", cur_instruction.operant?"on":"off", we
                                 t_program?"":" (nop)");
  8081  0BF3  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8082  0BF4  2BF6               	goto	u12181
  8083  0BF5  2BF7               	goto	u12180
  8084  0BF6                     u12181:
  8085  0BF6  2BFD               	goto	l38519
  8086  0BF7                     u12180:
  8087                           	
  8088  0BF7                     l38517:	
  8089  0BF7  300A               	movlw	low(STR_52|8000h)
  8090  0BF8  0021               	movlb 1	; select bank1
  8091  0BF9  00AE               	movwf	(_exe_instruction$5967)^080h
  8092  0BFA  3089               	movlw	high(STR_52|8000h)
  8093  0BFB  00AF               	movwf	((_exe_instruction$5967)^080h)+1
  8094  0BFC  2C03               	goto	l38521
  8095                           	
  8096  0BFD                     l4375:	
  8097                           	
  8098  0BFD                     l38519:	
  8099  0BFD  30F0               	movlw	low(STR_51|8000h)
  8100  0BFE  0021               	movlb 1	; select bank1
  8101  0BFF  00AE               	movwf	(_exe_instruction$5967)^080h
  8102  0C00  3087               	movlw	high(STR_51|8000h)
  8103  0C01  00AF               	movwf	((_exe_instruction$5967)^080h)+1
  8104  0C02  2C03               	goto	l38521
  8105                           	
  8106  0C03                     l4377:	
  8107                           	
  8108  0C03                     l38521:	
  8109  0C03  0020               	movlb 0	; select bank0
  8110  0C04  086A               	movf	(1+(_cur_instruction)+01h),w
  8111  0C05  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8112  0C06  1D03               	skipz
  8113  0C07  2C09               	goto	u12191
  8114  0C08  2C0A               	goto	u12190
  8115  0C09                     u12191:
  8116  0C09  2C10               	goto	l38525
  8117  0C0A                     u12190:
  8118                           	
  8119  0C0A                     l38523:	
  8120  0C0A  302C               	movlw	low(STR_50|8000h)
  8121  0C0B  0021               	movlb 1	; select bank1
  8122  0C0C  00B0               	movwf	(_exe_instruction$5968)^080h
  8123  0C0D  3089               	movlw	high(STR_50|8000h)
  8124  0C0E  00B1               	movwf	((_exe_instruction$5968)^080h)+1
  8125  0C0F  2C16               	goto	l38527
  8126                           	
  8127  0C10                     l4379:	
  8128                           	
  8129  0C10                     l38525:	
  8130  0C10  3042               	movlw	low(STR_49|8000h)
  8131  0C11  0021               	movlb 1	; select bank1
  8132  0C12  00B0               	movwf	(_exe_instruction$5968)^080h
  8133  0C13  3089               	movlw	high(STR_49|8000h)
  8134  0C14  00B1               	movwf	((_exe_instruction$5968)^080h)+1
  8135  0C15  2C16               	goto	l38527
  8136                           	
  8137  0C16                     l4381:	
  8138                           	
  8139  0C16                     l38527:	
  8140  0C16  3059               	movlw	low(STR_48|8000h)
  8141  0C17  0020               	movlb 0	; select bank0
  8142  0C18  00AF               	movwf	(?_printf)
  8143  0C19  3087               	movlw	high(STR_48|8000h)
  8144  0C1A  00B0               	movwf	((?_printf))+1
  8145  0C1B  0021               	movlb 1	; select bank1
  8146  0C1C  0831               	movf	(_exe_instruction$5968+1)^080h,w
  8147  0C1D  0020               	movlb 0	; select bank0
  8148  0C1E  01B2               	clrf	(1+?_printf+02h)
  8149  0C1F  07B2               	addwf	(1+?_printf+02h)
  8150  0C20  0021               	movlb 1	; select bank1
  8151  0C21  0830               	movf	(_exe_instruction$5968)^080h,w
  8152  0C22  0020               	movlb 0	; select bank0
  8153  0C23  01B1               	clrf	(0+?_printf+02h)
  8154  0C24  07B1               	addwf	(0+?_printf+02h)
  8155                           
  8156  0C25  0021               	movlb 1	; select bank1
  8157  0C26  082F               	movf	(_exe_instruction$5967+1)^080h,w
  8158  0C27  0020               	movlb 0	; select bank0
  8159  0C28  01B4               	clrf	(1+?_printf+04h)
  8160  0C29  07B4               	addwf	(1+?_printf+04h)
  8161  0C2A  0021               	movlb 1	; select bank1
  8162  0C2B  082E               	movf	(_exe_instruction$5967)^080h,w
  8163  0C2C  0020               	movlb 0	; select bank0
  8164  0C2D  01B3               	clrf	(0+?_printf+04h)
  8165  0C2E  07B3               	addwf	(0+?_printf+04h)
  8166                           
  8167  0C2F  3194  24A0  318B   	fcall	_printf
  8168                           	line	495
  8169                           	
  8170  0C32                     l38529:	
  8171                           ;litterlanguage.c: 495: if (wet_program)
  8172  0C32  0020               	movlb 0	; select bank0
  8173  0C33  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  8174  0C34  2C36               	goto	u12201
  8175  0C35  2C37               	goto	u12200
  8176  0C36                     u12201:
  8177  0C36  2C93               	goto	l38551
  8178  0C37                     u12200:
  8179                           	line	496
  8180                           	
  8181  0C37                     l38531:	
  8182                           ;litterlanguage.c: 496: if (cur_instruction.operant) {
  8183  0C37  3001               	movlw	(01h)
  8184  0C38  3E68               	addlw	_cur_instruction&0ffh
  8185  0C39  0086               	movwf	fsr1l
  8186  0C3A  0187               	clrf fsr1h	
  8187                           	
  8188  0C3B  0016               	moviw	fsr1++
  8189  0C3C  0401               	iorwf	indf1,w
  8190  0C3D  1903               	skipnz
  8191  0C3E  2C40               	goto	u12211
  8192  0C3F  2C41               	goto	u12210
  8193  0C40                     u12211:
  8194  0C40  2C85               	goto	l38547
  8195  0C41                     u12210:
  8196                           	line	497
  8197                           	
  8198  0C41                     l38533:	
  8199                           ;litterlanguage.c: 497: if (eeprom_read((3)) < 2)
  8200  0C41  3003               	movlw	(03h)
  8201  0C42  31AA  225F  318B   	fcall	_eeprom_read
  8202  0C45  0020               	movlb 0	; select bank0
  8203  0C46  00D9               	movwf	(??_exe_instruction+0)+0
  8204  0C47  3002               	movlw	(02h)
  8205  0C48  0259               	subwf	0+(??_exe_instruction+0)+0,w
  8206  0C49  1803               	skipnc
  8207  0C4A  2C4C               	goto	u12221
  8208  0C4B  2C4D               	goto	u12220
  8209  0C4C                     u12221:
  8210  0C4C  2C56               	goto	l38537
  8211  0C4D                     u12220:
  8212                           	line	498
  8213                           	
  8214  0C4D                     l38535:	
  8215                           ;litterlanguage.c: 498: eeprom_write((3), 2);
  8216  0C4D  3002               	movlw	(02h)
  8217  0C4E  00D9               	movwf	(??_exe_instruction+0)+0
  8218  0C4F  0859               	movf	(??_exe_instruction+0)+0,w
  8219  0C50  00A1               	movwf	(?_eeprom_write)
  8220  0C51  3003               	movlw	(03h)
  8221  0C52  31AC  244D  318B   	fcall	_eeprom_write
  8222  0C55  2C56               	goto	l38537
  8223                           	
  8224  0C56                     l4384:	
  8225                           	line	500
  8226                           	
  8227  0C56                     l38537:	
  8228                           ;litterlanguage.c: 500: if (!water_detected()) {
  8229  0C56  31B7  277A  318B   	fcall	_water_detected
  8230  0C59  3800               	iorlw	0
  8231  0C5A  1D03               	skipz
  8232  0C5B  2C5D               	goto	u12231
  8233  0C5C  2C5E               	goto	u12230
  8234  0C5D                     u12231:
  8235  0C5D  2C7B               	goto	l38545
  8236  0C5E                     u12230:
  8237                           	line	502
  8238                           	
  8239  0C5E                     l38539:	
  8240                           ;litterlanguage.c: 502: printf(" Filling");
  8241  0C5E  30CB               	movlw	low(STR_53|8000h)
  8242  0C5F  0020               	movlb 0	; select bank0
  8243  0C60  00AF               	movwf	(?_printf)
  8244  0C61  3088               	movlw	high(STR_53|8000h)
  8245  0C62  00B0               	movwf	((?_printf))+1
  8246  0C63  3194  24A0  318B   	fcall	_printf
  8247                           	line	504
  8248                           	
  8249  0C66                     l38541:	
  8250                           ;litterlanguage.c: 504: water_fill(1);
  8251  0C66  3001               	movlw	(01h)
  8252  0C67  31A9  211B  318B   	fcall	_water_fill
  8253                           	line	505
  8254                           	
  8255  0C6A                     l38543:	
  8256                           ;litterlanguage.c: 505: settimeout(&timer_fill, ((3*60+15)*((((4UL * (1000UL * ((1000UL)
                                 ))))/4)/8)));
  8257  0C6A  30E9               	movlw	(_timer_fill&0ffh)
  8258  0C6B  0020               	movlb 0	; select bank0
  8259  0C6C  00AD               	movwf	(?_settimeout)
  8260  0C6D  3000               	movlw	0x1/2
  8261  0C6E  00AE               	movwf	(?_settimeout+1)
  8262  0C6F  3001               	movlw	01h
  8263  0C70  00B2               	movwf	3+(?_settimeout)+02h
  8264  0C71  3073               	movlw	073h
  8265  0C72  00B1               	movwf	2+(?_settimeout)+02h
  8266  0C73  30EE               	movlw	0EEh
  8267  0C74  00B0               	movwf	1+(?_settimeout)+02h
  8268  0C75  30D8               	movlw	0D8h
  8269  0C76  00AF               	movwf	0+(?_settimeout)+02h
  8270                           
  8271  0C77  31A0  20DE  318B   	fcall	_settimeout
  8272                           	line	507
  8273                           ;litterlanguage.c: 507: }
  8274  0C7A  2C93               	goto	l38551
  8275                           	line	509
  8276                           	
  8277  0C7B                     l4385:	
  8278                           	line	510
  8279                           	
  8280  0C7B                     l38545:	
  8281                           ;litterlanguage.c: 509: else
  8282                           ;litterlanguage.c: 510: printf(" (skipped)");
  8283  0C7B  3056               	movlw	low(STR_54|8000h)
  8284  0C7C  0020               	movlb 0	; select bank0
  8285  0C7D  00AF               	movwf	(?_printf)
  8286  0C7E  3088               	movlw	high(STR_54|8000h)
  8287  0C7F  00B0               	movwf	((?_printf))+1
  8288  0C80  3194  24A0  318B   	fcall	_printf
  8289  0C83  2C93               	goto	l38551
  8290                           	
  8291  0C84                     l4386:	
  8292                           	line	512
  8293                           ;litterlanguage.c: 512: } else {
  8294  0C84  2C93               	goto	l38551
  8295                           	
  8296  0C85                     l4383:	
  8297                           	line	514
  8298                           	
  8299  0C85                     l38547:	
  8300                           ;litterlanguage.c: 514: water_fill(0);
  8301  0C85  3000               	movlw	(0)
  8302  0C86  31A9  211B  318B   	fcall	_water_fill
  8303                           	line	515
  8304                           	
  8305  0C89                     l38549:	
  8306                           ;litterlanguage.c: 515: timeoutnever(&timer_fill);
  8307  0C89  30E9               	movlw	(_timer_fill&0ffh)
  8308  0C8A  0020               	movlb 0	; select bank0
  8309  0C8B  00A5               	movwf	(?_timeoutnever)
  8310  0C8C  3000               	movlw	0x1/2
  8311  0C8D  00A6               	movwf	(?_timeoutnever+1)
  8312  0C8E  31A9  21AF  318B   	fcall	_timeoutnever
  8313  0C91  2C93               	goto	l38551
  8314                           	line	516
  8315                           	
  8316  0C92                     l4387:	
  8317  0C92  2C93               	goto	l38551
  8318                           	
  8319  0C93                     l4382:	
  8320                           	line	517
  8321                           	
  8322  0C93                     l38551:	
  8323                           ;litterlanguage.c: 516: }
  8324                           ;litterlanguage.c: 517: ins_pointer++;
  8325  0C93  3003               	movlw	low(03h)
  8326  0C94  0020               	movlb 0	; select bank0
  8327  0C95  07EB               	addwf	(_ins_pointer),f
  8328  0C96  3000               	movlw	high(03h)
  8329  0C97  3DEC               	addwfc	(_ins_pointer+1),f
  8330                           	line	518
  8331                           	
  8332  0C98                     l38553:	
  8333                           ;litterlanguage.c: 518: ins_state = 3;
  8334  0C98  3003               	movlw	(03h)
  8335  0C99  00D9               	movwf	(??_exe_instruction+0)+0
  8336  0C9A  0859               	movf	(??_exe_instruction+0)+0,w
  8337  0C9B  00E5               	movwf	(_ins_state)
  8338                           	line	519
  8339                           ;litterlanguage.c: 519: break;
  8340  0C9C  2FF7               	goto	l38721
  8341                           	line	520
  8342                           ;litterlanguage.c: 520: case 0x04:
  8343                           	
  8344  0C9D                     l4388:	
  8345                           	line	522
  8346                           ;litterlanguage.c: 522: printf("INS_PUMP, %s%s", cur_instruction.operant?"on":"off", wet
                                 _program?"":" (nop)");
  8347  0C9D  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8348  0C9E  2CA0               	goto	u12241
  8349  0C9F  2CA1               	goto	u12240
  8350  0CA0                     u12241:
  8351  0CA0  2CA7               	goto	l38557
  8352  0CA1                     u12240:
  8353                           	
  8354  0CA1                     l38555:	
  8355  0CA1  300A               	movlw	low(STR_59|8000h)
  8356  0CA2  0021               	movlb 1	; select bank1
  8357  0CA3  00B2               	movwf	(_exe_instruction$5976)^080h
  8358  0CA4  3089               	movlw	high(STR_59|8000h)
  8359  0CA5  00B3               	movwf	((_exe_instruction$5976)^080h)+1
  8360  0CA6  2CAD               	goto	l38559
  8361                           	
  8362  0CA7                     l4390:	
  8363                           	
  8364  0CA7                     l38557:	
  8365  0CA7  30F0               	movlw	low(STR_58|8000h)
  8366  0CA8  0021               	movlb 1	; select bank1
  8367  0CA9  00B2               	movwf	(_exe_instruction$5976)^080h
  8368  0CAA  3087               	movlw	high(STR_58|8000h)
  8369  0CAB  00B3               	movwf	((_exe_instruction$5976)^080h)+1
  8370  0CAC  2CAD               	goto	l38559
  8371                           	
  8372  0CAD                     l4392:	
  8373                           	
  8374  0CAD                     l38559:	
  8375  0CAD  0020               	movlb 0	; select bank0
  8376  0CAE  086A               	movf	(1+(_cur_instruction)+01h),w
  8377  0CAF  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8378  0CB0  1D03               	skipz
  8379  0CB1  2CB3               	goto	u12251
  8380  0CB2  2CB4               	goto	u12250
  8381  0CB3                     u12251:
  8382  0CB3  2CBA               	goto	l38563
  8383  0CB4                     u12250:
  8384                           	
  8385  0CB4                     l38561:	
  8386  0CB4  302C               	movlw	low(STR_57|8000h)
  8387  0CB5  0021               	movlb 1	; select bank1
  8388  0CB6  00B4               	movwf	(_exe_instruction$5977)^080h
  8389  0CB7  3089               	movlw	high(STR_57|8000h)
  8390  0CB8  00B5               	movwf	((_exe_instruction$5977)^080h)+1
  8391  0CB9  2CC0               	goto	l38565
  8392                           	
  8393  0CBA                     l4394:	
  8394                           	
  8395  0CBA                     l38563:	
  8396  0CBA  3042               	movlw	low(STR_56|8000h)
  8397  0CBB  0021               	movlb 1	; select bank1
  8398  0CBC  00B4               	movwf	(_exe_instruction$5977)^080h
  8399  0CBD  3089               	movlw	high(STR_56|8000h)
  8400  0CBE  00B5               	movwf	((_exe_instruction$5977)^080h)+1
  8401  0CBF  2CC0               	goto	l38565
  8402                           	
  8403  0CC0                     l4396:	
  8404                           	
  8405  0CC0                     l38565:	
  8406  0CC0  30C6               	movlw	low(STR_55|8000h)
  8407  0CC1  0020               	movlb 0	; select bank0
  8408  0CC2  00AF               	movwf	(?_printf)
  8409  0CC3  3087               	movlw	high(STR_55|8000h)
  8410  0CC4  00B0               	movwf	((?_printf))+1
  8411  0CC5  0021               	movlb 1	; select bank1
  8412  0CC6  0835               	movf	(_exe_instruction$5977+1)^080h,w
  8413  0CC7  0020               	movlb 0	; select bank0
  8414  0CC8  01B2               	clrf	(1+?_printf+02h)
  8415  0CC9  07B2               	addwf	(1+?_printf+02h)
  8416  0CCA  0021               	movlb 1	; select bank1
  8417  0CCB  0834               	movf	(_exe_instruction$5977)^080h,w
  8418  0CCC  0020               	movlb 0	; select bank0
  8419  0CCD  01B1               	clrf	(0+?_printf+02h)
  8420  0CCE  07B1               	addwf	(0+?_printf+02h)
  8421                           
  8422  0CCF  0021               	movlb 1	; select bank1
  8423  0CD0  0833               	movf	(_exe_instruction$5976+1)^080h,w
  8424  0CD1  0020               	movlb 0	; select bank0
  8425  0CD2  01B4               	clrf	(1+?_printf+04h)
  8426  0CD3  07B4               	addwf	(1+?_printf+04h)
  8427  0CD4  0021               	movlb 1	; select bank1
  8428  0CD5  0832               	movf	(_exe_instruction$5976)^080h,w
  8429  0CD6  0020               	movlb 0	; select bank0
  8430  0CD7  01B3               	clrf	(0+?_printf+04h)
  8431  0CD8  07B3               	addwf	(0+?_printf+04h)
  8432                           
  8433  0CD9  3194  24A0  318B   	fcall	_printf
  8434                           	line	524
  8435                           	
  8436  0CDC                     l38567:	
  8437                           ;litterlanguage.c: 524: if (wet_program) {
  8438  0CDC  0020               	movlb 0	; select bank0
  8439  0CDD  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  8440  0CDE  2CE0               	goto	u12261
  8441  0CDF  2CE1               	goto	u12260
  8442  0CE0                     u12261:
  8443  0CE0  2CEE               	goto	l38573
  8444  0CE1                     u12260:
  8445                           	line	526
  8446                           	
  8447  0CE1                     l38569:	
  8448                           ;litterlanguage.c: 526: printf(" Draining");
  8449  0CE1  3094               	movlw	low(STR_60|8000h)
  8450  0CE2  00AF               	movwf	(?_printf)
  8451  0CE3  3088               	movlw	high(STR_60|8000h)
  8452  0CE4  00B0               	movwf	((?_printf))+1
  8453  0CE5  3194  24A0  318B   	fcall	_printf
  8454                           	line	528
  8455                           	
  8456  0CE8                     l38571:	
  8457                           ;litterlanguage.c: 528: set_Pump((unsigned char)cur_instruction.operant);
  8458  0CE8  0020               	movlb 0	; select bank0
  8459  0CE9  0869               	movf	0+(_cur_instruction)+01h,w
  8460  0CEA  31A8  209B  318B   	fcall	_set_Pump
  8461                           	line	529
  8462                           ;litterlanguage.c: 529: }
  8463  0CED  2CF7               	goto	l38575
  8464                           	line	531
  8465                           	
  8466  0CEE                     l4397:	
  8467                           	line	532
  8468                           	
  8469  0CEE                     l38573:	
  8470                           ;litterlanguage.c: 531: else
  8471                           ;litterlanguage.c: 532: printf(" (skipped)");
  8472  0CEE  3056               	movlw	low(STR_61|8000h)
  8473  0CEF  0020               	movlb 0	; select bank0
  8474  0CF0  00AF               	movwf	(?_printf)
  8475  0CF1  3088               	movlw	high(STR_61|8000h)
  8476  0CF2  00B0               	movwf	((?_printf))+1
  8477  0CF3  3194  24A0  318B   	fcall	_printf
  8478  0CF6  2CF7               	goto	l38575
  8479                           	
  8480  0CF7                     l4398:	
  8481                           	line	534
  8482                           	
  8483  0CF7                     l38575:	
  8484                           ;litterlanguage.c: 534: ins_pointer++;
  8485  0CF7  3003               	movlw	low(03h)
  8486  0CF8  0020               	movlb 0	; select bank0
  8487  0CF9  07EB               	addwf	(_ins_pointer),f
  8488  0CFA  3000               	movlw	high(03h)
  8489  0CFB  3DEC               	addwfc	(_ins_pointer+1),f
  8490                           	line	535
  8491                           	
  8492  0CFC                     l38577:	
  8493                           ;litterlanguage.c: 535: ins_state = 3;
  8494  0CFC  3003               	movlw	(03h)
  8495  0CFD  00D9               	movwf	(??_exe_instruction+0)+0
  8496  0CFE  0859               	movf	(??_exe_instruction+0)+0,w
  8497  0CFF  00E5               	movwf	(_ins_state)
  8498                           	line	536
  8499                           ;litterlanguage.c: 536: break;
  8500  0D00  2FF7               	goto	l38721
  8501                           	line	537
  8502                           ;litterlanguage.c: 537: case 0x05:
  8503                           	
  8504  0D01                     l4399:	
  8505                           	line	539
  8506                           ;litterlanguage.c: 539: printf("INS_DRYER, %s%s", cur_instruction.operant?"on":"off", we
                                 t_program?"":" (nop)");
  8507  0D01  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8508  0D02  2D04               	goto	u12271
  8509  0D03  2D05               	goto	u12270
  8510  0D04                     u12271:
  8511  0D04  2D0B               	goto	l38581
  8512  0D05                     u12270:
  8513                           	
  8514  0D05                     l38579:	
  8515  0D05  300A               	movlw	low(STR_66|8000h)
  8516  0D06  0021               	movlb 1	; select bank1
  8517  0D07  00B6               	movwf	(_exe_instruction$5985)^080h
  8518  0D08  3089               	movlw	high(STR_66|8000h)
  8519  0D09  00B7               	movwf	((_exe_instruction$5985)^080h)+1
  8520  0D0A  2D11               	goto	l38583
  8521                           	
  8522  0D0B                     l4401:	
  8523                           	
  8524  0D0B                     l38581:	
  8525  0D0B  30F0               	movlw	low(STR_65|8000h)
  8526  0D0C  0021               	movlb 1	; select bank1
  8527  0D0D  00B6               	movwf	(_exe_instruction$5985)^080h
  8528  0D0E  3087               	movlw	high(STR_65|8000h)
  8529  0D0F  00B7               	movwf	((_exe_instruction$5985)^080h)+1
  8530  0D10  2D11               	goto	l38583
  8531                           	
  8532  0D11                     l4403:	
  8533                           	
  8534  0D11                     l38583:	
  8535  0D11  0020               	movlb 0	; select bank0
  8536  0D12  086A               	movf	(1+(_cur_instruction)+01h),w
  8537  0D13  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8538  0D14  1D03               	skipz
  8539  0D15  2D17               	goto	u12281
  8540  0D16  2D18               	goto	u12280
  8541  0D17                     u12281:
  8542  0D17  2D1E               	goto	l38587
  8543  0D18                     u12280:
  8544                           	
  8545  0D18                     l38585:	
  8546  0D18  302C               	movlw	low(STR_64|8000h)
  8547  0D19  0021               	movlb 1	; select bank1
  8548  0D1A  00B8               	movwf	(_exe_instruction$5986)^080h
  8549  0D1B  3089               	movlw	high(STR_64|8000h)
  8550  0D1C  00B9               	movwf	((_exe_instruction$5986)^080h)+1
  8551  0D1D  2D24               	goto	l38589
  8552                           	
  8553  0D1E                     l4405:	
  8554                           	
  8555  0D1E                     l38587:	
  8556  0D1E  3042               	movlw	low(STR_63|8000h)
  8557  0D1F  0021               	movlb 1	; select bank1
  8558  0D20  00B8               	movwf	(_exe_instruction$5986)^080h
  8559  0D21  3089               	movlw	high(STR_63|8000h)
  8560  0D22  00B9               	movwf	((_exe_instruction$5986)^080h)+1
  8561  0D23  2D24               	goto	l38589
  8562                           	
  8563  0D24                     l4407:	
  8564                           	
  8565  0D24                     l38589:	
  8566  0D24  3069               	movlw	low(STR_62|8000h)
  8567  0D25  0020               	movlb 0	; select bank0
  8568  0D26  00AF               	movwf	(?_printf)
  8569  0D27  3087               	movlw	high(STR_62|8000h)
  8570  0D28  00B0               	movwf	((?_printf))+1
  8571  0D29  0021               	movlb 1	; select bank1
  8572  0D2A  0839               	movf	(_exe_instruction$5986+1)^080h,w
  8573  0D2B  0020               	movlb 0	; select bank0
  8574  0D2C  01B2               	clrf	(1+?_printf+02h)
  8575  0D2D  07B2               	addwf	(1+?_printf+02h)
  8576  0D2E  0021               	movlb 1	; select bank1
  8577  0D2F  0838               	movf	(_exe_instruction$5986)^080h,w
  8578  0D30  0020               	movlb 0	; select bank0
  8579  0D31  01B1               	clrf	(0+?_printf+02h)
  8580  0D32  07B1               	addwf	(0+?_printf+02h)
  8581                           
  8582  0D33  0021               	movlb 1	; select bank1
  8583  0D34  0837               	movf	(_exe_instruction$5985+1)^080h,w
  8584  0D35  0020               	movlb 0	; select bank0
  8585  0D36  01B4               	clrf	(1+?_printf+04h)
  8586  0D37  07B4               	addwf	(1+?_printf+04h)
  8587  0D38  0021               	movlb 1	; select bank1
  8588  0D39  0836               	movf	(_exe_instruction$5985)^080h,w
  8589  0D3A  0020               	movlb 0	; select bank0
  8590  0D3B  01B3               	clrf	(0+?_printf+04h)
  8591  0D3C  07B3               	addwf	(0+?_printf+04h)
  8592                           
  8593  0D3D  3194  24A0  318B   	fcall	_printf
  8594                           	line	541
  8595                           	
  8596  0D40                     l38591:	
  8597                           ;litterlanguage.c: 541: if (wet_program)
  8598  0D40  0020               	movlb 0	; select bank0
  8599  0D41  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  8600  0D42  2D44               	goto	u12291
  8601  0D43  2D45               	goto	u12290
  8602  0D44                     u12291:
  8603  0D44  2D4A               	goto	l38595
  8604  0D45                     u12290:
  8605                           	line	542
  8606                           	
  8607  0D45                     l38593:	
  8608                           ;litterlanguage.c: 542: set_Dryer((unsigned char)cur_instruction.operant);
  8609  0D45  0869               	movf	0+(_cur_instruction)+01h,w
  8610  0D46  31A8  20AC  318B   	fcall	_set_Dryer
  8611  0D49  2D4A               	goto	l38595
  8612                           	
  8613  0D4A                     l4408:	
  8614                           	line	543
  8615                           	
  8616  0D4A                     l38595:	
  8617                           ;litterlanguage.c: 543: ins_pointer++;
  8618  0D4A  3003               	movlw	low(03h)
  8619  0D4B  0020               	movlb 0	; select bank0
  8620  0D4C  07EB               	addwf	(_ins_pointer),f
  8621  0D4D  3000               	movlw	high(03h)
  8622  0D4E  3DEC               	addwfc	(_ins_pointer+1),f
  8623                           	line	544
  8624                           	
  8625  0D4F                     l38597:	
  8626                           ;litterlanguage.c: 544: ins_state = 3;
  8627  0D4F  3003               	movlw	(03h)
  8628  0D50  00D9               	movwf	(??_exe_instruction+0)+0
  8629  0D51  0859               	movf	(??_exe_instruction+0)+0,w
  8630  0D52  00E5               	movwf	(_ins_state)
  8631                           	line	545
  8632                           ;litterlanguage.c: 545: break;
  8633  0D53  2FF7               	goto	l38721
  8634                           	line	546
  8635                           ;litterlanguage.c: 546: case 0x07:
  8636                           	
  8637  0D54                     l4409:	
  8638                           	line	548
  8639                           	
  8640  0D54                     l38599:	
  8641                           ;litterlanguage.c: 548: printf("INS_WAITTIME, %ums", cur_instruction.operant);
  8642  0D54  302D               	movlw	low(STR_67|8000h)
  8643  0D55  00AF               	movwf	(?_printf)
  8644  0D56  3086               	movlw	high(STR_67|8000h)
  8645  0D57  00B0               	movwf	((?_printf))+1
  8646  0D58  086A               	movf	1+(_cur_instruction)+01h,w
  8647  0D59  01B2               	clrf	1+(?_printf)+02h
  8648  0D5A  07B2               	addwf	1+(?_printf)+02h
  8649  0D5B  0869               	movf	0+(_cur_instruction)+01h,w
  8650  0D5C  01B1               	clrf	0+(?_printf)+02h
  8651  0D5D  07B1               	addwf	0+(?_printf)+02h
  8652                           
  8653  0D5E  3194  24A0  318B   	fcall	_printf
  8654                           	line	551
  8655                           	
  8656  0D61                     l38601:	
  8657                           ;litterlanguage.c: 550: settimeout( &timer_waitins,
  8658                           ;litterlanguage.c: 551: (unsigned long)cur_instruction.operant * (((((4UL * (1000UL * ((
                                 1000UL)))))/4)/8)/1000) );
  8659  0D61  306A               	movlw	(_timer_waitins&0ffh)
  8660  0D62  0020               	movlb 0	; select bank0
  8661  0D63  00AD               	movwf	(?_settimeout)
  8662  0D64  3001               	movlw	0x2/2
  8663  0D65  00AE               	movwf	(?_settimeout+1)
  8664  0D66  0869               	movf	0+(_cur_instruction)+01h,w
  8665  0D67  00A1               	movwf	(?___lmul)
  8666  0D68  086A               	movf	1+(_cur_instruction)+01h,w
  8667  0D69  00A2               	movwf	((?___lmul))+1
  8668  0D6A  01A3               	clrf	2+((?___lmul))
  8669  0D6B  01A4               	clrf	3+((?___lmul))
  8670  0D6C  3000               	movlw	0
  8671  0D6D  00A8               	movwf	3+(?___lmul)+04h
  8672  0D6E  3000               	movlw	0
  8673  0D6F  00A7               	movwf	2+(?___lmul)+04h
  8674  0D70  3000               	movlw	0
  8675  0D71  00A6               	movwf	1+(?___lmul)+04h
  8676  0D72  307D               	movlw	07Dh
  8677  0D73  00A5               	movwf	0+(?___lmul)+04h
  8678                           
  8679  0D74  31AC  24BB  318B   	fcall	___lmul
  8680  0D77  0020               	movlb 0	; select bank0
  8681  0D78  0824               	movf	(3+(?___lmul)),w
  8682  0D79  00B2               	movwf	3+(?_settimeout)+02h
  8683  0D7A  0823               	movf	(2+(?___lmul)),w
  8684  0D7B  00B1               	movwf	2+(?_settimeout)+02h
  8685  0D7C  0822               	movf	(1+(?___lmul)),w
  8686  0D7D  00B0               	movwf	1+(?_settimeout)+02h
  8687  0D7E  0821               	movf	(0+(?___lmul)),w
  8688  0D7F  00AF               	movwf	0+(?_settimeout)+02h
  8689                           
  8690  0D80  31A0  20DE  318B   	fcall	_settimeout
  8691                           	line	552
  8692                           	
  8693  0D83                     l38603:	
  8694                           ;litterlanguage.c: 552: ins_state = 5;
  8695  0D83  3005               	movlw	(05h)
  8696  0D84  0020               	movlb 0	; select bank0
  8697  0D85  00D9               	movwf	(??_exe_instruction+0)+0
  8698  0D86  0859               	movf	(??_exe_instruction+0)+0,w
  8699  0D87  00E5               	movwf	(_ins_state)
  8700                           	line	553
  8701                           ;litterlanguage.c: 553: break;
  8702  0D88  2FF7               	goto	l38721
  8703                           	line	554
  8704                           ;litterlanguage.c: 554: case 0x08:
  8705                           	
  8706  0D89                     l4410:	
  8707                           	line	556
  8708                           ;litterlanguage.c: 556: printf("INS_WAITWATER, %s%s", cur_instruction.operant?"high":"lo
                                 w", wet_program?"":" (nop)");
  8709  0D89  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8710  0D8A  2D8C               	goto	u12301
  8711  0D8B  2D8D               	goto	u12300
  8712  0D8C                     u12301:
  8713  0D8C  2D93               	goto	l38607
  8714  0D8D                     u12300:
  8715                           	
  8716  0D8D                     l38605:	
  8717  0D8D  300A               	movlw	low(STR_72|8000h)
  8718  0D8E  0021               	movlb 1	; select bank1
  8719  0D8F  00BA               	movwf	(_exe_instruction$5993)^080h
  8720  0D90  3089               	movlw	high(STR_72|8000h)
  8721  0D91  00BB               	movwf	((_exe_instruction$5993)^080h)+1
  8722  0D92  2D99               	goto	l38609
  8723                           	
  8724  0D93                     l4412:	
  8725                           	
  8726  0D93                     l38607:	
  8727  0D93  30F0               	movlw	low(STR_71|8000h)
  8728  0D94  0021               	movlb 1	; select bank1
  8729  0D95  00BA               	movwf	(_exe_instruction$5993)^080h
  8730  0D96  3087               	movlw	high(STR_71|8000h)
  8731  0D97  00BB               	movwf	((_exe_instruction$5993)^080h)+1
  8732  0D98  2D99               	goto	l38609
  8733                           	
  8734  0D99                     l4414:	
  8735                           	
  8736  0D99                     l38609:	
  8737  0D99  0020               	movlb 0	; select bank0
  8738  0D9A  086A               	movf	(1+(_cur_instruction)+01h),w
  8739  0D9B  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8740  0D9C  1D03               	skipz
  8741  0D9D  2D9F               	goto	u12311
  8742  0D9E  2DA0               	goto	u12310
  8743  0D9F                     u12311:
  8744  0D9F  2DA6               	goto	l38613
  8745  0DA0                     u12310:
  8746                           	
  8747  0DA0                     l38611:	
  8748  0DA0  3034               	movlw	low(STR_70|8000h)
  8749  0DA1  0021               	movlb 1	; select bank1
  8750  0DA2  00BC               	movwf	(_exe_instruction$5994)^080h
  8751  0DA3  3089               	movlw	high(STR_70|8000h)
  8752  0DA4  00BD               	movwf	((_exe_instruction$5994)^080h)+1
  8753  0DA5  2DAC               	goto	l38615
  8754                           	
  8755  0DA6                     l4416:	
  8756                           	
  8757  0DA6                     l38613:	
  8758  0DA6  3023               	movlw	low(STR_69|8000h)
  8759  0DA7  0021               	movlb 1	; select bank1
  8760  0DA8  00BC               	movwf	(_exe_instruction$5994)^080h
  8761  0DA9  3089               	movlw	high(STR_69|8000h)
  8762  0DAA  00BD               	movwf	((_exe_instruction$5994)^080h)+1
  8763  0DAB  2DAC               	goto	l38615
  8764                           	
  8765  0DAC                     l4418:	
  8766                           	
  8767  0DAC                     l38615:	
  8768  0DAC  30CA               	movlw	low(STR_68|8000h)
  8769  0DAD  0020               	movlb 0	; select bank0
  8770  0DAE  00AF               	movwf	(?_printf)
  8771  0DAF  3085               	movlw	high(STR_68|8000h)
  8772  0DB0  00B0               	movwf	((?_printf))+1
  8773  0DB1  0021               	movlb 1	; select bank1
  8774  0DB2  083D               	movf	(_exe_instruction$5994+1)^080h,w
  8775  0DB3  0020               	movlb 0	; select bank0
  8776  0DB4  01B2               	clrf	(1+?_printf+02h)
  8777  0DB5  07B2               	addwf	(1+?_printf+02h)
  8778  0DB6  0021               	movlb 1	; select bank1
  8779  0DB7  083C               	movf	(_exe_instruction$5994)^080h,w
  8780  0DB8  0020               	movlb 0	; select bank0
  8781  0DB9  01B1               	clrf	(0+?_printf+02h)
  8782  0DBA  07B1               	addwf	(0+?_printf+02h)
  8783                           
  8784  0DBB  0021               	movlb 1	; select bank1
  8785  0DBC  083B               	movf	(_exe_instruction$5993+1)^080h,w
  8786  0DBD  0020               	movlb 0	; select bank0
  8787  0DBE  01B4               	clrf	(1+?_printf+04h)
  8788  0DBF  07B4               	addwf	(1+?_printf+04h)
  8789  0DC0  0021               	movlb 1	; select bank1
  8790  0DC1  083A               	movf	(_exe_instruction$5993)^080h,w
  8791  0DC2  0020               	movlb 0	; select bank0
  8792  0DC3  01B3               	clrf	(0+?_printf+04h)
  8793  0DC4  07B3               	addwf	(0+?_printf+04h)
  8794                           
  8795  0DC5  3194  24A0  318B   	fcall	_printf
  8796                           	line	558
  8797                           	
  8798  0DC8                     l38617:	
  8799                           ;litterlanguage.c: 558: if (wet_program) {
  8800  0DC8  0020               	movlb 0	; select bank0
  8801  0DC9  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  8802  0DCA  2DCC               	goto	u12321
  8803  0DCB  2DCD               	goto	u12320
  8804  0DCC                     u12321:
  8805  0DCC  2DE9               	goto	l38625
  8806  0DCD                     u12320:
  8807                           	line	559
  8808                           	
  8809  0DCD                     l38619:	
  8810                           ;litterlanguage.c: 559: if (!cur_instruction.operant)
  8811  0DCD  086A               	movf	(1+(_cur_instruction)+01h),w
  8812  0DCE  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8813  0DCF  1D03               	skipz
  8814  0DD0  2DD2               	goto	u12331
  8815  0DD1  2DD3               	goto	u12330
  8816  0DD2                     u12331:
  8817  0DD2  2DE3               	goto	l38623
  8818  0DD3                     u12330:
  8819                           	line	561
  8820                           	
  8821  0DD3                     l38621:	
  8822                           ;litterlanguage.c: 561: settimeout(&timer_drain, ((0*60+10)*((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8)));
  8823  0DD3  30E3               	movlw	(_timer_drain&0ffh)
  8824  0DD4  00AD               	movwf	(?_settimeout)
  8825  0DD5  3000               	movlw	0x1/2
  8826  0DD6  00AE               	movwf	(?_settimeout+1)
  8827  0DD7  3000               	movlw	0
  8828  0DD8  00B2               	movwf	3+(?_settimeout)+02h
  8829  0DD9  3013               	movlw	013h
  8830  0DDA  00B1               	movwf	2+(?_settimeout)+02h
  8831  0DDB  3012               	movlw	012h
  8832  0DDC  00B0               	movwf	1+(?_settimeout)+02h
  8833  0DDD  30D0               	movlw	0D0h
  8834  0DDE  00AF               	movwf	0+(?_settimeout)+02h
  8835                           
  8836  0DDF  31A0  20DE  318B   	fcall	_settimeout
  8837  0DE2  2DE3               	goto	l38623
  8838                           	
  8839  0DE3                     l4420:	
  8840                           	line	562
  8841                           	
  8842  0DE3                     l38623:	
  8843                           ;litterlanguage.c: 562: ins_state = 5;
  8844  0DE3  3005               	movlw	(05h)
  8845  0DE4  0020               	movlb 0	; select bank0
  8846  0DE5  00D9               	movwf	(??_exe_instruction+0)+0
  8847  0DE6  0859               	movf	(??_exe_instruction+0)+0,w
  8848  0DE7  00E5               	movwf	(_ins_state)
  8849                           	line	563
  8850                           ;litterlanguage.c: 563: } else {
  8851  0DE8  2FF7               	goto	l38721
  8852                           	
  8853  0DE9                     l4419:	
  8854                           	line	564
  8855                           	
  8856  0DE9                     l38625:	
  8857                           ;litterlanguage.c: 564: ins_pointer++;
  8858  0DE9  3003               	movlw	low(03h)
  8859  0DEA  07EB               	addwf	(_ins_pointer),f
  8860  0DEB  3000               	movlw	high(03h)
  8861  0DEC  3DEC               	addwfc	(_ins_pointer+1),f
  8862                           	line	565
  8863                           ;litterlanguage.c: 565: ins_state = 3;
  8864  0DED  3003               	movlw	(03h)
  8865  0DEE  00D9               	movwf	(??_exe_instruction+0)+0
  8866  0DEF  0859               	movf	(??_exe_instruction+0)+0,w
  8867  0DF0  00E5               	movwf	(_ins_state)
  8868  0DF1  2FF7               	goto	l38721
  8869                           	line	566
  8870                           	
  8871  0DF2                     l4421:	
  8872                           	line	567
  8873                           ;litterlanguage.c: 566: }
  8874                           ;litterlanguage.c: 567: break;
  8875  0DF2  2FF7               	goto	l38721
  8876                           	line	568
  8877                           ;litterlanguage.c: 568: case 0x09:
  8878                           	
  8879  0DF3                     l4422:	
  8880                           	line	570
  8881                           ;litterlanguage.c: 570: printf("INS_WAITDOSAGE%s", wet_program?"":" (nop)");
  8882  0DF3  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8883  0DF4  2DF6               	goto	u12341
  8884  0DF5  2DF7               	goto	u12340
  8885  0DF6                     u12341:
  8886  0DF6  2DFD               	goto	l38629
  8887  0DF7                     u12340:
  8888                           	
  8889  0DF7                     l38627:	
  8890  0DF7  300A               	movlw	low(STR_75|8000h)
  8891  0DF8  0021               	movlb 1	; select bank1
  8892  0DF9  00BE               	movwf	(_exe_instruction$5998)^080h
  8893  0DFA  3089               	movlw	high(STR_75|8000h)
  8894  0DFB  00BF               	movwf	((_exe_instruction$5998)^080h)+1
  8895  0DFC  2E03               	goto	l38631
  8896                           	
  8897  0DFD                     l4424:	
  8898                           	
  8899  0DFD                     l38629:	
  8900  0DFD  30F0               	movlw	low(STR_74|8000h)
  8901  0DFE  0021               	movlb 1	; select bank1
  8902  0DFF  00BE               	movwf	(_exe_instruction$5998)^080h
  8903  0E00  3087               	movlw	high(STR_74|8000h)
  8904  0E01  00BF               	movwf	((_exe_instruction$5998)^080h)+1
  8905  0E02  2E03               	goto	l38631
  8906                           	
  8907  0E03                     l4426:	
  8908                           	
  8909  0E03                     l38631:	
  8910  0E03  3027               	movlw	low(STR_73|8000h)
  8911  0E04  0020               	movlb 0	; select bank0
  8912  0E05  00AF               	movwf	(?_printf)
  8913  0E06  3087               	movlw	high(STR_73|8000h)
  8914  0E07  00B0               	movwf	((?_printf))+1
  8915  0E08  0021               	movlb 1	; select bank1
  8916  0E09  083F               	movf	(_exe_instruction$5998+1)^080h,w
  8917  0E0A  0020               	movlb 0	; select bank0
  8918  0E0B  01B2               	clrf	(1+?_printf+02h)
  8919  0E0C  07B2               	addwf	(1+?_printf+02h)
  8920  0E0D  0021               	movlb 1	; select bank1
  8921  0E0E  083E               	movf	(_exe_instruction$5998)^080h,w
  8922  0E0F  0020               	movlb 0	; select bank0
  8923  0E10  01B1               	clrf	(0+?_printf+02h)
  8924  0E11  07B1               	addwf	(0+?_printf+02h)
  8925                           
  8926  0E12  3194  24A0  318B   	fcall	_printf
  8927                           	line	572
  8928                           	
  8929  0E15                     l38633:	
  8930                           ;litterlanguage.c: 572: if (wet_program)
  8931  0E15  0020               	movlb 0	; select bank0
  8932  0E16  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  8933  0E17  2E19               	goto	u12351
  8934  0E18  2E1A               	goto	u12350
  8935  0E19                     u12351:
  8936  0E19  2E1F               	goto	l38637
  8937  0E1A                     u12350:
  8938                           	line	573
  8939                           	
  8940  0E1A                     l38635:	
  8941                           ;litterlanguage.c: 573: ins_state = 5;
  8942  0E1A  3005               	movlw	(05h)
  8943  0E1B  00D9               	movwf	(??_exe_instruction+0)+0
  8944  0E1C  0859               	movf	(??_exe_instruction+0)+0,w
  8945  0E1D  00E5               	movwf	(_ins_state)
  8946  0E1E  2FF7               	goto	l38721
  8947                           	line	574
  8948                           	
  8949  0E1F                     l4427:	
  8950                           	line	575
  8951                           	
  8952  0E1F                     l38637:	
  8953                           ;litterlanguage.c: 574: else {
  8954                           ;litterlanguage.c: 575: ins_pointer++;
  8955  0E1F  3003               	movlw	low(03h)
  8956  0E20  07EB               	addwf	(_ins_pointer),f
  8957  0E21  3000               	movlw	high(03h)
  8958  0E22  3DEC               	addwfc	(_ins_pointer+1),f
  8959                           	line	576
  8960                           ;litterlanguage.c: 576: ins_state = 3;
  8961  0E23  3003               	movlw	(03h)
  8962  0E24  00D9               	movwf	(??_exe_instruction+0)+0
  8963  0E25  0859               	movf	(??_exe_instruction+0)+0,w
  8964  0E26  00E5               	movwf	(_ins_state)
  8965  0E27  2FF7               	goto	l38721
  8966                           	line	577
  8967                           	
  8968  0E28                     l4428:	
  8969                           	line	578
  8970                           ;litterlanguage.c: 577: }
  8971                           ;litterlanguage.c: 578: break;
  8972  0E28  2FF7               	goto	l38721
  8973                           	line	579
  8974                           ;litterlanguage.c: 579: case 0x0A:
  8975                           	
  8976  0E29                     l4429:	
  8977                           	line	581
  8978                           ;litterlanguage.c: 581: printf("INS_SKIPIFDRY, %u%s", cur_instruction.operant, wet_progr
                                 am?" (nop)":"");
  8979  0E29  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8980  0E2A  2E2C               	goto	u12361
  8981  0E2B  2E2D               	goto	u12360
  8982  0E2C                     u12361:
  8983  0E2C  2E33               	goto	l38641
  8984  0E2D                     u12360:
  8985                           	
  8986  0E2D                     l38639:	
  8987  0E2D  30F0               	movlw	low(STR_78|8000h)
  8988  0E2E  0021               	movlb 1	; select bank1
  8989  0E2F  00C0               	movwf	(_exe_instruction$6002)^080h
  8990  0E30  3087               	movlw	high(STR_78|8000h)
  8991  0E31  00C1               	movwf	((_exe_instruction$6002)^080h)+1
  8992  0E32  2E39               	goto	l38643
  8993                           	
  8994  0E33                     l4431:	
  8995                           	
  8996  0E33                     l38641:	
  8997  0E33  300A               	movlw	low(STR_77|8000h)
  8998  0E34  0021               	movlb 1	; select bank1
  8999  0E35  00C0               	movwf	(_exe_instruction$6002)^080h
  9000  0E36  3089               	movlw	high(STR_77|8000h)
  9001  0E37  00C1               	movwf	((_exe_instruction$6002)^080h)+1
  9002  0E38  2E39               	goto	l38643
  9003                           	
  9004  0E39                     l4433:	
  9005                           	
  9006  0E39                     l38643:	
  9007  0E39  30F2               	movlw	low(STR_76|8000h)
  9008  0E3A  0020               	movlb 0	; select bank0
  9009  0E3B  00AF               	movwf	(?_printf)
  9010  0E3C  3085               	movlw	high(STR_76|8000h)
  9011  0E3D  00B0               	movwf	((?_printf))+1
  9012  0E3E  086A               	movf	1+(_cur_instruction)+01h,w
  9013  0E3F  01B2               	clrf	1+(?_printf)+02h
  9014  0E40  07B2               	addwf	1+(?_printf)+02h
  9015  0E41  0869               	movf	0+(_cur_instruction)+01h,w
  9016  0E42  01B1               	clrf	0+(?_printf)+02h
  9017  0E43  07B1               	addwf	0+(?_printf)+02h
  9018                           
  9019  0E44  0021               	movlb 1	; select bank1
  9020  0E45  0841               	movf	(_exe_instruction$6002+1)^080h,w
  9021  0E46  0020               	movlb 0	; select bank0
  9022  0E47  01B4               	clrf	(1+?_printf+04h)
  9023  0E48  07B4               	addwf	(1+?_printf+04h)
  9024  0E49  0021               	movlb 1	; select bank1
  9025  0E4A  0840               	movf	(_exe_instruction$6002)^080h,w
  9026  0E4B  0020               	movlb 0	; select bank0
  9027  0E4C  01B3               	clrf	(0+?_printf+04h)
  9028  0E4D  07B3               	addwf	(0+?_printf+04h)
  9029                           
  9030  0E4E  3194  24A0  318B   	fcall	_printf
  9031                           	line	583
  9032                           	
  9033  0E51                     l38645:	
  9034                           ;litterlanguage.c: 583: if (!wet_program)
  9035  0E51  0020               	movlb 0	; select bank0
  9036  0E52  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  9037  0E53  2E55               	goto	u12371
  9038  0E54  2E56               	goto	u12370
  9039  0E55                     u12371:
  9040  0E55  2E69               	goto	l38649
  9041  0E56                     u12370:
  9042                           	line	584
  9043                           	
  9044  0E56                     l38647:	
  9045                           ;litterlanguage.c: 584: ins_pointer += cur_instruction.operant + 1;
  9046  0E56  0869               	movf	0+(_cur_instruction)+01h,w
  9047  0E57  3E01               	addlw	low(01h)
  9048  0E58  00A1               	movwf	(?___wmul)
  9049  0E59  3000               	movlw	high(01h)
  9050  0E5A  3D6A               	addwfc	1+(_cur_instruction)+01h,w
  9051  0E5B  00A2               	movwf	1+(?___wmul)
  9052  0E5C  3003               	movlw	low(03h)
  9053  0E5D  00A3               	movwf	0+(?___wmul)+02h
  9054  0E5E  3000               	movlw	high(03h)
  9055  0E5F  00A4               	movwf	(0+(?___wmul)+02h)+1
  9056  0E60  31AA  22CA  318B   	fcall	___wmul
  9057  0E63  0020               	movlb 0	; select bank0
  9058  0E64  0821               	movf	(0+(?___wmul)),w
  9059  0E65  07EB               	addwf	(_ins_pointer),f
  9060  0E66  0822               	movf	(1+(?___wmul)),w
  9061  0E67  3DEC               	addwfc	(_ins_pointer+1),f
  9062  0E68  2E6D               	goto	l4435
  9063                           	line	585
  9064                           	
  9065  0E69                     l4434:	
  9066                           	line	586
  9067                           	
  9068  0E69                     l38649:	
  9069                           ;litterlanguage.c: 585: else
  9070                           ;litterlanguage.c: 586: ins_pointer++;
  9071  0E69  3003               	movlw	low(03h)
  9072  0E6A  07EB               	addwf	(_ins_pointer),f
  9073  0E6B  3000               	movlw	high(03h)
  9074  0E6C  3DEC               	addwfc	(_ins_pointer+1),f
  9075                           	
  9076  0E6D                     l4435:	
  9077                           	line	587
  9078                           ;litterlanguage.c: 587: ins_state = 3;
  9079  0E6D  3003               	movlw	(03h)
  9080  0E6E  00D9               	movwf	(??_exe_instruction+0)+0
  9081  0E6F  0859               	movf	(??_exe_instruction+0)+0,w
  9082  0E70  00E5               	movwf	(_ins_state)
  9083                           	line	588
  9084                           ;litterlanguage.c: 588: break;
  9085  0E71  2FF7               	goto	l38721
  9086                           	line	589
  9087                           ;litterlanguage.c: 589: case 0x0B:
  9088                           	
  9089  0E72                     l4436:	
  9090                           	line	591
  9091                           ;litterlanguage.c: 591: printf("INS_SKIPIFWET, %u%s", cur_instruction.operant, wet_progr
                                 am?"":" (nop)");
  9092  0E72  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  9093  0E73  2E75               	goto	u12381
  9094  0E74  2E76               	goto	u12380
  9095  0E75                     u12381:
  9096  0E75  2E7C               	goto	l38653
  9097  0E76                     u12380:
  9098                           	
  9099  0E76                     l38651:	
  9100  0E76  300A               	movlw	low(STR_81|8000h)
  9101  0E77  0021               	movlb 1	; select bank1
  9102  0E78  00C2               	movwf	(_exe_instruction$6006)^080h
  9103  0E79  3089               	movlw	high(STR_81|8000h)
  9104  0E7A  00C3               	movwf	((_exe_instruction$6006)^080h)+1
  9105  0E7B  2E82               	goto	l38655
  9106                           	
  9107  0E7C                     l4438:	
  9108                           	
  9109  0E7C                     l38653:	
  9110  0E7C  30F0               	movlw	low(STR_80|8000h)
  9111  0E7D  0021               	movlb 1	; select bank1
  9112  0E7E  00C2               	movwf	(_exe_instruction$6006)^080h
  9113  0E7F  3087               	movlw	high(STR_80|8000h)
  9114  0E80  00C3               	movwf	((_exe_instruction$6006)^080h)+1
  9115  0E81  2E82               	goto	l38655
  9116                           	
  9117  0E82                     l4440:	
  9118                           	
  9119  0E82                     l38655:	
  9120  0E82  30DE               	movlw	low(STR_79|8000h)
  9121  0E83  0020               	movlb 0	; select bank0
  9122  0E84  00AF               	movwf	(?_printf)
  9123  0E85  3085               	movlw	high(STR_79|8000h)
  9124  0E86  00B0               	movwf	((?_printf))+1
  9125  0E87  086A               	movf	1+(_cur_instruction)+01h,w
  9126  0E88  01B2               	clrf	1+(?_printf)+02h
  9127  0E89  07B2               	addwf	1+(?_printf)+02h
  9128  0E8A  0869               	movf	0+(_cur_instruction)+01h,w
  9129  0E8B  01B1               	clrf	0+(?_printf)+02h
  9130  0E8C  07B1               	addwf	0+(?_printf)+02h
  9131                           
  9132  0E8D  0021               	movlb 1	; select bank1
  9133  0E8E  0843               	movf	(_exe_instruction$6006+1)^080h,w
  9134  0E8F  0020               	movlb 0	; select bank0
  9135  0E90  01B4               	clrf	(1+?_printf+04h)
  9136  0E91  07B4               	addwf	(1+?_printf+04h)
  9137  0E92  0021               	movlb 1	; select bank1
  9138  0E93  0842               	movf	(_exe_instruction$6006)^080h,w
  9139  0E94  0020               	movlb 0	; select bank0
  9140  0E95  01B3               	clrf	(0+?_printf+04h)
  9141  0E96  07B3               	addwf	(0+?_printf+04h)
  9142                           
  9143  0E97  3194  24A0  318B   	fcall	_printf
  9144                           	line	593
  9145                           	
  9146  0E9A                     l38657:	
  9147                           ;litterlanguage.c: 593: if (wet_program)
  9148  0E9A  0020               	movlb 0	; select bank0
  9149  0E9B  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  9150  0E9C  2E9E               	goto	u12391
  9151  0E9D  2E9F               	goto	u12390
  9152  0E9E                     u12391:
  9153  0E9E  2EB2               	goto	l38661
  9154  0E9F                     u12390:
  9155                           	line	594
  9156                           	
  9157  0E9F                     l38659:	
  9158                           ;litterlanguage.c: 594: ins_pointer += cur_instruction.operant + 1;
  9159  0E9F  0869               	movf	0+(_cur_instruction)+01h,w
  9160  0EA0  3E01               	addlw	low(01h)
  9161  0EA1  00A1               	movwf	(?___wmul)
  9162  0EA2  3000               	movlw	high(01h)
  9163  0EA3  3D6A               	addwfc	1+(_cur_instruction)+01h,w
  9164  0EA4  00A2               	movwf	1+(?___wmul)
  9165  0EA5  3003               	movlw	low(03h)
  9166  0EA6  00A3               	movwf	0+(?___wmul)+02h
  9167  0EA7  3000               	movlw	high(03h)
  9168  0EA8  00A4               	movwf	(0+(?___wmul)+02h)+1
  9169  0EA9  31AA  22CA  318B   	fcall	___wmul
  9170  0EAC  0020               	movlb 0	; select bank0
  9171  0EAD  0821               	movf	(0+(?___wmul)),w
  9172  0EAE  07EB               	addwf	(_ins_pointer),f
  9173  0EAF  0822               	movf	(1+(?___wmul)),w
  9174  0EB0  3DEC               	addwfc	(_ins_pointer+1),f
  9175  0EB1  2EB6               	goto	l4442
  9176                           	line	595
  9177                           	
  9178  0EB2                     l4441:	
  9179                           	line	596
  9180                           	
  9181  0EB2                     l38661:	
  9182                           ;litterlanguage.c: 595: else
  9183                           ;litterlanguage.c: 596: ins_pointer++;
  9184  0EB2  3003               	movlw	low(03h)
  9185  0EB3  07EB               	addwf	(_ins_pointer),f
  9186  0EB4  3000               	movlw	high(03h)
  9187  0EB5  3DEC               	addwfc	(_ins_pointer+1),f
  9188                           	
  9189  0EB6                     l4442:	
  9190                           	line	597
  9191                           ;litterlanguage.c: 597: ins_state = 3;
  9192  0EB6  3003               	movlw	(03h)
  9193  0EB7  00D9               	movwf	(??_exe_instruction+0)+0
  9194  0EB8  0859               	movf	(??_exe_instruction+0)+0,w
  9195  0EB9  00E5               	movwf	(_ins_state)
  9196                           	line	598
  9197                           ;litterlanguage.c: 598: break;
  9198  0EBA  2FF7               	goto	l38721
  9199                           	line	599
  9200                           ;litterlanguage.c: 599: case 0x06:
  9201                           	
  9202  0EBB                     l4443:	
  9203                           	line	601
  9204                           ;litterlanguage.c: 601: printf("INS_AUTODOSE, %u.%uml%s", cur_instruction.operant/10, cu
                                 r_instruction.operant%10, wet_program?"":" (nop)");
  9205  0EBB  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  9206  0EBC  2EBE               	goto	u12401
  9207  0EBD  2EBF               	goto	u12400
  9208  0EBE                     u12401:
  9209  0EBE  2EC5               	goto	l38665
  9210  0EBF                     u12400:
  9211                           	
  9212  0EBF                     l38663:	
  9213  0EBF  300A               	movlw	low(STR_84|8000h)
  9214  0EC0  0021               	movlb 1	; select bank1
  9215  0EC1  00C4               	movwf	(_exe_instruction$6010)^080h
  9216  0EC2  3089               	movlw	high(STR_84|8000h)
  9217  0EC3  00C5               	movwf	((_exe_instruction$6010)^080h)+1
  9218  0EC4  2ECB               	goto	l38667
  9219                           	
  9220  0EC5                     l4445:	
  9221                           	
  9222  0EC5                     l38665:	
  9223  0EC5  30F0               	movlw	low(STR_83|8000h)
  9224  0EC6  0021               	movlb 1	; select bank1
  9225  0EC7  00C4               	movwf	(_exe_instruction$6010)^080h
  9226  0EC8  3087               	movlw	high(STR_83|8000h)
  9227  0EC9  00C5               	movwf	((_exe_instruction$6010)^080h)+1
  9228  0ECA  2ECB               	goto	l38667
  9229                           	
  9230  0ECB                     l4447:	
  9231                           	
  9232  0ECB                     l38667:	
  9233  0ECB  300A               	movlw	low(0Ah)
  9234  0ECC  0020               	movlb 0	; select bank0
  9235  0ECD  00A1               	movwf	(?___lwdiv)
  9236  0ECE  3000               	movlw	high(0Ah)
  9237  0ECF  00A2               	movwf	((?___lwdiv))+1
  9238  0ED0  086A               	movf	1+(_cur_instruction)+01h,w
  9239  0ED1  01A4               	clrf	1+(?___lwdiv)+02h
  9240  0ED2  07A4               	addwf	1+(?___lwdiv)+02h
  9241  0ED3  0869               	movf	0+(_cur_instruction)+01h,w
  9242  0ED4  01A3               	clrf	0+(?___lwdiv)+02h
  9243  0ED5  07A3               	addwf	0+(?___lwdiv)+02h
  9244                           
  9245  0ED6  3189  2145  318B   	fcall	___lwdiv
  9246  0ED9  0020               	movlb 0	; select bank0
  9247  0EDA  0822               	movf	(1+(?___lwdiv)),w
  9248  0EDB  0021               	movlb 1	; select bank1
  9249  0EDC  01A1               	clrf	(_exe_instruction$30234+1)^080h
  9250  0EDD  07A1               	addwf	(_exe_instruction$30234+1)^080h
  9251  0EDE  0020               	movlb 0	; select bank0
  9252  0EDF  0821               	movf	(0+(?___lwdiv)),w
  9253  0EE0  0021               	movlb 1	; select bank1
  9254  0EE1  01A0               	clrf	(_exe_instruction$30234)^080h
  9255  0EE2  07A0               	addwf	(_exe_instruction$30234)^080h
  9256                           
  9257                           	
  9258  0EE3                     l38669:	
  9259  0EE3  300A               	movlw	low(0Ah)
  9260  0EE4  0020               	movlb 0	; select bank0
  9261  0EE5  00A9               	movwf	(?___lwmod)
  9262  0EE6  3000               	movlw	high(0Ah)
  9263  0EE7  00AA               	movwf	((?___lwmod))+1
  9264  0EE8  086A               	movf	1+(_cur_instruction)+01h,w
  9265  0EE9  01AC               	clrf	1+(?___lwmod)+02h
  9266  0EEA  07AC               	addwf	1+(?___lwmod)+02h
  9267  0EEB  0869               	movf	0+(_cur_instruction)+01h,w
  9268  0EEC  01AB               	clrf	0+(?___lwmod)+02h
  9269  0EED  07AB               	addwf	0+(?___lwmod)+02h
  9270                           
  9271  0EEE  31AD  252B  318B   	fcall	___lwmod
  9272  0EF1  0020               	movlb 0	; select bank0
  9273  0EF2  082A               	movf	(1+(?___lwmod)),w
  9274  0EF3  0021               	movlb 1	; select bank1
  9275  0EF4  01A3               	clrf	(_exe_instruction$30235+1)^080h
  9276  0EF5  07A3               	addwf	(_exe_instruction$30235+1)^080h
  9277  0EF6  0020               	movlb 0	; select bank0
  9278  0EF7  0829               	movf	(0+(?___lwmod)),w
  9279  0EF8  0021               	movlb 1	; select bank1
  9280  0EF9  01A2               	clrf	(_exe_instruction$30235)^080h
  9281  0EFA  07A2               	addwf	(_exe_instruction$30235)^080h
  9282                           
  9283                           	
  9284  0EFB                     l38671:	
  9285  0EFB  3034               	movlw	low(STR_82|8000h)
  9286  0EFC  0020               	movlb 0	; select bank0
  9287  0EFD  00AF               	movwf	(?_printf)
  9288  0EFE  3085               	movlw	high(STR_82|8000h)
  9289  0EFF  00B0               	movwf	((?_printf))+1
  9290  0F00  0021               	movlb 1	; select bank1
  9291  0F01  0821               	movf	(_exe_instruction$30234+1)^080h,w
  9292  0F02  0020               	movlb 0	; select bank0
  9293  0F03  01B2               	clrf	1+(?_printf)+02h
  9294  0F04  07B2               	addwf	1+(?_printf)+02h
  9295  0F05  0021               	movlb 1	; select bank1
  9296  0F06  0820               	movf	(_exe_instruction$30234)^080h,w
  9297  0F07  0020               	movlb 0	; select bank0
  9298  0F08  01B1               	clrf	0+(?_printf)+02h
  9299  0F09  07B1               	addwf	0+(?_printf)+02h
  9300                           
  9301  0F0A  0021               	movlb 1	; select bank1
  9302  0F0B  0823               	movf	(_exe_instruction$30235+1)^080h,w
  9303  0F0C  0020               	movlb 0	; select bank0
  9304  0F0D  01B4               	clrf	1+(?_printf)+04h
  9305  0F0E  07B4               	addwf	1+(?_printf)+04h
  9306  0F0F  0021               	movlb 1	; select bank1
  9307  0F10  0822               	movf	(_exe_instruction$30235)^080h,w
  9308  0F11  0020               	movlb 0	; select bank0
  9309  0F12  01B3               	clrf	0+(?_printf)+04h
  9310  0F13  07B3               	addwf	0+(?_printf)+04h
  9311                           
  9312  0F14  0021               	movlb 1	; select bank1
  9313  0F15  0845               	movf	(_exe_instruction$6010+1)^080h,w
  9314  0F16  0020               	movlb 0	; select bank0
  9315  0F17  01B6               	clrf	(1+?_printf+06h)
  9316  0F18  07B6               	addwf	(1+?_printf+06h)
  9317  0F19  0021               	movlb 1	; select bank1
  9318  0F1A  0844               	movf	(_exe_instruction$6010)^080h,w
  9319  0F1B  0020               	movlb 0	; select bank0
  9320  0F1C  01B5               	clrf	(0+?_printf+06h)
  9321  0F1D  07B5               	addwf	(0+?_printf+06h)
  9322                           
  9323  0F1E  3194  24A0  318B   	fcall	_printf
  9324                           	line	603
  9325                           	
  9326  0F21                     l38673:	
  9327                           ;litterlanguage.c: 603: if (wet_program) {
  9328  0F21  0020               	movlb 0	; select bank0
  9329  0F22  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  9330  0F23  2F25               	goto	u12411
  9331  0F24  2F26               	goto	u12410
  9332  0F25                     u12411:
  9333  0F25  2F4C               	goto	l38679
  9334  0F26                     u12410:
  9335                           	line	605
  9336                           	
  9337  0F26                     l38675:	
  9338                           ;litterlanguage.c: 604: settimeout(&timer_autodose,
  9339                           ;litterlanguage.c: 605: (unsigned long)cur_instruction.operant * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8) * (10 / 10));
  9340  0F26  3064               	movlw	(_timer_autodose&0ffh)
  9341  0F27  00AD               	movwf	(?_settimeout)
  9342  0F28  3001               	movlw	0x2/2
  9343  0F29  00AE               	movwf	(?_settimeout+1)
  9344  0F2A  0869               	movf	0+(_cur_instruction)+01h,w
  9345  0F2B  00A1               	movwf	(?___lmul)
  9346  0F2C  086A               	movf	1+(_cur_instruction)+01h,w
  9347  0F2D  00A2               	movwf	((?___lmul))+1
  9348  0F2E  01A3               	clrf	2+((?___lmul))
  9349  0F2F  01A4               	clrf	3+((?___lmul))
  9350  0F30  3000               	movlw	0
  9351  0F31  00A8               	movwf	3+(?___lmul)+04h
  9352  0F32  3001               	movlw	01h
  9353  0F33  00A7               	movwf	2+(?___lmul)+04h
  9354  0F34  30E8               	movlw	0E8h
  9355  0F35  00A6               	movwf	1+(?___lmul)+04h
  9356  0F36  3048               	movlw	048h
  9357  0F37  00A5               	movwf	0+(?___lmul)+04h
  9358                           
  9359  0F38  31AC  24BB  318B   	fcall	___lmul
  9360  0F3B  0020               	movlb 0	; select bank0
  9361  0F3C  0824               	movf	(3+(?___lmul)),w
  9362  0F3D  00B2               	movwf	3+(?_settimeout)+02h
  9363  0F3E  0823               	movf	(2+(?___lmul)),w
  9364  0F3F  00B1               	movwf	2+(?_settimeout)+02h
  9365  0F40  0822               	movf	(1+(?___lmul)),w
  9366  0F41  00B0               	movwf	1+(?_settimeout)+02h
  9367  0F42  0821               	movf	(0+(?___lmul)),w
  9368  0F43  00AF               	movwf	0+(?_settimeout)+02h
  9369                           
  9370  0F44  31A0  20DE  318B   	fcall	_settimeout
  9371                           	line	606
  9372                           	
  9373  0F47                     l38677:	
  9374                           ;litterlanguage.c: 606: set_Dosage(1);
  9375  0F47  3001               	movlw	(01h)
  9376  0F48  31A8  208A  318B   	fcall	_set_Dosage
  9377  0F4B  2F4C               	goto	l38679
  9378                           	line	607
  9379                           	
  9380  0F4C                     l4448:	
  9381                           	line	608
  9382                           	
  9383  0F4C                     l38679:	
  9384                           ;litterlanguage.c: 607: }
  9385                           ;litterlanguage.c: 608: ins_pointer++;
  9386  0F4C  3003               	movlw	low(03h)
  9387  0F4D  0020               	movlb 0	; select bank0
  9388  0F4E  07EB               	addwf	(_ins_pointer),f
  9389  0F4F  3000               	movlw	high(03h)
  9390  0F50  3DEC               	addwfc	(_ins_pointer+1),f
  9391                           	line	609
  9392                           	
  9393  0F51                     l38681:	
  9394                           ;litterlanguage.c: 609: ins_state = 3;
  9395  0F51  3003               	movlw	(03h)
  9396  0F52  00D9               	movwf	(??_exe_instruction+0)+0
  9397  0F53  0859               	movf	(??_exe_instruction+0)+0,w
  9398  0F54  00E5               	movwf	(_ins_state)
  9399                           	line	610
  9400                           ;litterlanguage.c: 610: break;
  9401  0F55  2FF7               	goto	l38721
  9402                           	line	611
  9403                           ;litterlanguage.c: 611: case 0x0C:
  9404                           	
  9405  0F56                     l4449:	
  9406                           	line	613
  9407                           	
  9408  0F56                     l38683:	
  9409                           ;litterlanguage.c: 613: printf("INS_CALL, 0x%04X", cur_instruction.operant);
  9410  0F56  3016               	movlw	low(STR_85|8000h)
  9411  0F57  00AF               	movwf	(?_printf)
  9412  0F58  3087               	movlw	high(STR_85|8000h)
  9413  0F59  00B0               	movwf	((?_printf))+1
  9414  0F5A  086A               	movf	1+(_cur_instruction)+01h,w
  9415  0F5B  01B2               	clrf	1+(?_printf)+02h
  9416  0F5C  07B2               	addwf	1+(?_printf)+02h
  9417  0F5D  0869               	movf	0+(_cur_instruction)+01h,w
  9418  0F5E  01B1               	clrf	0+(?_printf)+02h
  9419  0F5F  07B1               	addwf	0+(?_printf)+02h
  9420                           
  9421  0F60  3194  24A0  318B   	fcall	_printf
  9422                           	line	615
  9423                           	
  9424  0F63                     l38685:	
  9425                           ;litterlanguage.c: 615: ret_address = ins_pointer + 1;
  9426  0F63  0020               	movlb 0	; select bank0
  9427  0F64  086B               	movf	(_ins_pointer),w
  9428  0F65  3E03               	addlw	low(03h)
  9429  0F66  0021               	movlb 1	; select bank1
  9430  0F67  00D2               	movwf	(exe_instruction@ret_address)^080h
  9431  0F68  3000               	movlw	high(03h)
  9432  0F69  0020               	movlb 0	; select bank0
  9433  0F6A  3D6C               	addwfc	(_ins_pointer+1),w
  9434  0F6B  0021               	movlb 1	; select bank1
  9435  0F6C  00D3               	movwf	1+(exe_instruction@ret_address)^080h
  9436                           	line	617
  9437                           	
  9438  0F6D                     l38687:	
  9439                           ;litterlanguage.c: 617: temp = 0x8000 | cur_instruction.operant;
  9440  0F6D  3000               	movlw	low(08000h)
  9441  0F6E  0020               	movlb 0	; select bank0
  9442  0F6F  0469               	iorwf	0+(_cur_instruction)+01h,w
  9443  0F70  0021               	movlb 1	; select bank1
  9444  0F71  00A4               	movwf	(exe_instruction@temp)^080h
  9445  0F72  3080               	movlw	high(08000h)
  9446  0F73  0020               	movlb 0	; select bank0
  9447  0F74  046A               	iorwf	1+(_cur_instruction)+01h,w
  9448  0F75  0021               	movlb 1	; select bank1
  9449  0F76  00A5               	movwf	1+(exe_instruction@temp)^080h
  9450                           	line	619
  9451                           	
  9452  0F77                     l38689:	
  9453                           ;litterlanguage.c: 619: memcpy(&ins_pointer, &temp, sizeof(ins_pointer));
  9454  0F77  30A4               	movlw	(exe_instruction@temp)&0ffh
  9455  0F78  0020               	movlb 0	; select bank0
  9456  0F79  00D9               	movwf	(??_exe_instruction+0)+0
  9457  0F7A  0859               	movf	(??_exe_instruction+0)+0,w
  9458  0F7B  00A1               	movwf	(?_memcpy)
  9459  0F7C  3002               	movlw	low(02h)
  9460  0F7D  00A2               	movwf	0+(?_memcpy)+01h
  9461  0F7E  3000               	movlw	high(02h)
  9462  0F7F  00A3               	movwf	(0+(?_memcpy)+01h)+1
  9463  0F80  306B               	movlw	(_ins_pointer)&0ffh
  9464  0F81  31AB  23C2  318B   	fcall	_memcpy
  9465                           	line	620
  9466                           	
  9467  0F84                     l38691:	
  9468                           ;litterlanguage.c: 620: ins_state = 3;
  9469  0F84  3003               	movlw	(03h)
  9470  0F85  0020               	movlb 0	; select bank0
  9471  0F86  00D9               	movwf	(??_exe_instruction+0)+0
  9472  0F87  0859               	movf	(??_exe_instruction+0)+0,w
  9473  0F88  00E5               	movwf	(_ins_state)
  9474                           	line	621
  9475                           ;litterlanguage.c: 621: break;
  9476  0F89  2FF7               	goto	l38721
  9477                           	line	622
  9478                           ;litterlanguage.c: 622: case 0x0D:
  9479                           	
  9480  0F8A                     l4450:	
  9481                           	line	624
  9482                           	
  9483  0F8A                     l38693:	
  9484                           ;litterlanguage.c: 624: printf("INS_RETURN, 0x%04X", ret_address);
  9485  0F8A  301A               	movlw	low(STR_86|8000h)
  9486  0F8B  00AF               	movwf	(?_printf)
  9487  0F8C  3086               	movlw	high(STR_86|8000h)
  9488  0F8D  00B0               	movwf	((?_printf))+1
  9489  0F8E  0021               	movlb 1	; select bank1
  9490  0F8F  0853               	movf	(exe_instruction@ret_address+1)^080h,w
  9491  0F90  0020               	movlb 0	; select bank0
  9492  0F91  01B2               	clrf	(1+?_printf+02h)
  9493  0F92  07B2               	addwf	(1+?_printf+02h)
  9494  0F93  0021               	movlb 1	; select bank1
  9495  0F94  0852               	movf	(exe_instruction@ret_address)^080h,w
  9496  0F95  0020               	movlb 0	; select bank0
  9497  0F96  01B1               	clrf	(0+?_printf+02h)
  9498  0F97  07B1               	addwf	(0+?_printf+02h)
  9499                           
  9500  0F98  3194  24A0  318B   	fcall	_printf
  9501                           	line	626
  9502                           	
  9503  0F9B                     l38695:	
  9504                           ;litterlanguage.c: 626: ins_pointer = ret_address;
  9505  0F9B  0021               	movlb 1	; select bank1
  9506  0F9C  0853               	movf	(exe_instruction@ret_address+1)^080h,w
  9507  0F9D  0020               	movlb 0	; select bank0
  9508  0F9E  01EC               	clrf	(_ins_pointer+1)
  9509  0F9F  07EC               	addwf	(_ins_pointer+1)
  9510  0FA0  0021               	movlb 1	; select bank1
  9511  0FA1  0852               	movf	(exe_instruction@ret_address)^080h,w
  9512  0FA2  0020               	movlb 0	; select bank0
  9513  0FA3  01EB               	clrf	(_ins_pointer)
  9514  0FA4  07EB               	addwf	(_ins_pointer)
  9515                           
  9516                           	line	627
  9517                           	
  9518  0FA5                     l38697:	
  9519                           ;litterlanguage.c: 627: ins_state = 3;
  9520  0FA5  3003               	movlw	(03h)
  9521  0FA6  00D9               	movwf	(??_exe_instruction+0)+0
  9522  0FA7  0859               	movf	(??_exe_instruction+0)+0,w
  9523  0FA8  00E5               	movwf	(_ins_state)
  9524                           	line	628
  9525                           ;litterlanguage.c: 628: break;
  9526  0FA9  2FF7               	goto	l38721
  9527                           	line	629
  9528                           ;litterlanguage.c: 629: case 0x0E:
  9529                           	
  9530  0FAA                     l4451:	
  9531                           	line	631
  9532                           	
  9533  0FAA                     l38699:	
  9534                           ;litterlanguage.c: 631: printf("INS_END");
  9535  0FAA  30EC               	movlw	low(STR_87|8000h)
  9536  0FAB  00AF               	movwf	(?_printf)
  9537  0FAC  3088               	movlw	high(STR_87|8000h)
  9538  0FAD  00B0               	movwf	((?_printf))+1
  9539  0FAE  3194  24A0  318B   	fcall	_printf
  9540                           	line	633
  9541                           	
  9542  0FB1                     l38701:	
  9543                           ;litterlanguage.c: 633: eeprom_write((3), 0);
  9544  0FB1  0020               	movlb 0	; select bank0
  9545  0FB2  01A1               	clrf	(?_eeprom_write)
  9546  0FB3  3003               	movlw	(03h)
  9547  0FB4  31AC  244D  318B   	fcall	_eeprom_write
  9548                           	line	634
  9549                           	
  9550  0FB7                     l38703:	
  9551                           ;litterlanguage.c: 634: litterlanguage_stop();
  9552  0FB7  31A1  21AC  318B   	fcall	_litterlanguage_stop
  9553                           	line	635
  9554                           ;litterlanguage.c: 635: break;
  9555  0FBA  2FF7               	goto	l38721
  9556                           	line	636
  9557                           ;litterlanguage.c: 636: case 0x00:
  9558                           	
  9559  0FBB                     l4452:	
  9560                           	line	638
  9561                           	
  9562  0FBB                     l38705:	
  9563                           ;litterlanguage.c: 638: printf("INS_START, unexpected");
  9564  0FBB  3062               	movlw	low(STR_88|8000h)
  9565  0FBC  0020               	movlb 0	; select bank0
  9566  0FBD  00AF               	movwf	(?_printf)
  9567  0FBE  3085               	movlw	high(STR_88|8000h)
  9568  0FBF  00B0               	movwf	((?_printf))+1
  9569  0FC0  3194  24A0  318B   	fcall	_printf
  9570                           	line	640
  9571                           	
  9572  0FC3                     l38707:	
  9573                           ;litterlanguage.c: 640: error_execution = 1;
  9574  0FC3  1770               	bsf	(_error_execution/8),(_error_execution)&7
  9575                           	line	641
  9576                           	
  9577  0FC4                     l38709:	
  9578                           ;litterlanguage.c: 641: litterlanguage_event(4, error_execution);
  9579  0FC4  3000               	movlw	0
  9580  0FC5  1B70               	btfsc	(_error_execution/8),(_error_execution)&7
  9581  0FC6  3001               	movlw	1
  9582  0FC7  0020               	movlb 0	; select bank0
  9583  0FC8  00D9               	movwf	(??_exe_instruction+0)+0
  9584  0FC9  0859               	movf	(??_exe_instruction+0)+0,w
  9585  0FCA  00D7               	movwf	(?_litterlanguage_event)
  9586  0FCB  3004               	movlw	(04h)
  9587  0FCC  31A2  2215  318B   	fcall	_litterlanguage_event
  9588                           	line	642
  9589                           ;litterlanguage.c: 642: break;
  9590  0FCF  2FF7               	goto	l38721
  9591                           	line	643
  9592                           ;litterlanguage.c: 643: default:
  9593                           	
  9594  0FD0                     l4453:	
  9595                           	line	646
  9596                           	
  9597  0FD0                     l38711:	
  9598                           ;litterlanguage.c: 646: printf("INS_unknown: 0x%X", cur_instruction.operant);
  9599  0FD0  30AF               	movlw	low(STR_89|8000h)
  9600  0FD1  0020               	movlb 0	; select bank0
  9601  0FD2  00AF               	movwf	(?_printf)
  9602  0FD3  3086               	movlw	high(STR_89|8000h)
  9603  0FD4  00B0               	movwf	((?_printf))+1
  9604  0FD5  086A               	movf	1+(_cur_instruction)+01h,w
  9605  0FD6  01B2               	clrf	1+(?_printf)+02h
  9606  0FD7  07B2               	addwf	1+(?_printf)+02h
  9607  0FD8  0869               	movf	0+(_cur_instruction)+01h,w
  9608  0FD9  01B1               	clrf	0+(?_printf)+02h
  9609  0FDA  07B1               	addwf	0+(?_printf)+02h
  9610                           
  9611  0FDB  3194  24A0  318B   	fcall	_printf
  9612                           	line	648
  9613                           	
  9614  0FDE                     l38713:	
  9615                           ;litterlanguage.c: 648: error_execution = 1;
  9616  0FDE  1770               	bsf	(_error_execution/8),(_error_execution)&7
  9617                           	line	649
  9618                           	
  9619  0FDF                     l38715:	
  9620                           ;litterlanguage.c: 649: litterlanguage_event(4, error_execution);
  9621  0FDF  3000               	movlw	0
  9622  0FE0  1B70               	btfsc	(_error_execution/8),(_error_execution)&7
  9623  0FE1  3001               	movlw	1
  9624  0FE2  0020               	movlb 0	; select bank0
  9625  0FE3  00D9               	movwf	(??_exe_instruction+0)+0
  9626  0FE4  0859               	movf	(??_exe_instruction+0)+0,w
  9627  0FE5  00D7               	movwf	(?_litterlanguage_event)
  9628  0FE6  3004               	movlw	(04h)
  9629  0FE7  31A2  2215  318B   	fcall	_litterlanguage_event
  9630                           	line	650
  9631                           ;litterlanguage.c: 650: break;
  9632  0FEA  2FF7               	goto	l38721
  9633                           	line	651
  9634                           	
  9635  0FEB                     l38717:	
  9636                           ;litterlanguage.c: 651: }
  9637  0FEB  2FF7               	goto	l38721
  9638                           	line	474
  9639                           	
  9640  0FEC                     l4353:	
  9641                           	
  9642  0FEC                     l38719:	
  9643  0FEC  0020               	movlb 0	; select bank0
  9644  0FED  0868               	movf	(_cur_instruction),w
  9645                           	; Switch size 1, requested type "space"
  9646                           ; Number of cases is 15, Range of values is 0 to 14
  9647                           ; switch strategies available:
  9648                           ; Name         Instructions Cycles
  9649                           ; direct_byte           36     6 (fixed)
  9650                           ; simple_byte           46    24 (average)
  9651                           ; jumptable            260     6 (fixed)
  9652                           ; rangetable            19     4 (fixed)
  9653                           ; spacedrange           35     6 (fixed)
  9654                           ; locatedrange          15     3 (fixed)
  9655                           ;	Chosen strategy is direct_byte
  9656                           
  9657  0FEE  0084               	movwf fsr0l
  9658  0FEF  300F               	movlw	15
  9659  0FF0  0204               	subwf	fsr0l,w
  9660  0FF1  1803               skipnc
  9661  0FF2  2FD0               goto l38711
  9662  0FF3  31A8               movlp high(S39171)
  9663  0FF4  3504               	lslf fsr0l,w
  9664  0FF5  3E00               	addlw low(S39171)
  9665  0FF6  0082               	movwf pc
  9666                           psect	swtext2,local,class=CONST,delta=2
  9667                           global __pswtext2
  9668  2800                     __pswtext2:
  9669  2800                     S39171:
  9670  2800  318F  2FBB         	ljmp	l38705
  9671  2802  318B  2B4F         	ljmp	l38477
  9672  2804  318B  2BA1         	ljmp	l38497
  9673  2806  318B  2BF3         	ljmp	l4373
  9674  2808  318C  2C9D         	ljmp	l4388
  9675  280A  318D  2D01         	ljmp	l4399
  9676  280C  318E  2EBB         	ljmp	l4443
  9677  280E  318D  2D54         	ljmp	l38599
  9678  2810  318D  2D89         	ljmp	l4410
  9679  2812  318D  2DF3         	ljmp	l4422
  9680  2814  318E  2E29         	ljmp	l4429
  9681  2816  318E  2E72         	ljmp	l4436
  9682  2818  318F  2F56         	ljmp	l38683
  9683  281A  318F  2F8A         	ljmp	l38693
  9684  281C  318F  2FAA         	ljmp	l38699
  9685                           psect	text3248
  9686                           
  9687                           	line	651
  9688                           	
  9689  0FF7                     l4363:	
  9690                           	line	653
  9691                           	
  9692  0FF7                     l38721:	
  9693                           ;litterlanguage.c: 653: printf("\n");
  9694  0FF7  30EF               	movlw	low(STR_90|8000h)
  9695  0FF8  0020               	movlb 0	; select bank0
  9696  0FF9  00AF               	movwf	(?_printf)
  9697  0FFA  3087               	movlw	high(STR_90|8000h)
  9698  0FFB  00B0               	movwf	((?_printf))+1
  9699  0FFC  3194  24A0  318B   	fcall	_printf
  9700                           	line	655
  9701                           	
  9702  0FFF                     l4454:	
  9703  0FFF  0008               	return
  9704                           	opt stack 0
  9705                           GLOBAL	__end_of_exe_instruction
  9706  1000                     	__end_of_exe_instruction:
  9707 ;; =============== function _exe_instruction ends ============
  9708                           
  9709                           	signat	_exe_instruction,88
  9710                           	global	_litterlanguage_event
  9711                           psect	text3249,local,class=CODE,delta=2
  9712                           global __ptext3249
  9713  2215                     __ptext3249:
  9714                           
  9715 ;; *************** function _litterlanguage_event *****************
  9716 ;; Defined at:
  9717 ;;		line 341 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  event           1    wreg     unsigned char 
  9720 ;;  argument        1   54[BANK0 ] unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  event           1   55[BANK0 ] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9732 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9736 ;;Total ram usage:        2 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    6
  9739 ;; This function calls:
  9740 ;;		_litterlanguage_stop
  9741 ;;		_litterlanguage_pause
  9742 ;;		_set_Beeper
  9743 ;; This function is called by:
  9744 ;;		_litterlanguage_work
  9745 ;;		_litterlanguage_pause
  9746 ;;		_litterlanguage_stop
  9747 ;;		_watersensor_event
  9748 ;;		_heatsensor_event
  9749 ;;		_exe_instruction
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           psect	text3249
  9753                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  9754                           	line	341
  9755                           	global	__size_of_litterlanguage_event
  9756  0069                     	__size_of_litterlanguage_event	equ	__end_of_litterlanguage_event-_litterlanguage_event
  9757                           	
  9758  2215                     _litterlanguage_event:	
  9759                           	opt	stack 7
  9760                           ; Regs used in _litterlanguage_event: [allreg]
  9761                           ;litterlanguage_event@event stored from wreg
  9762                           	line	344
  9763  2215  0020               	movlb 0	; select bank0
  9764  2216  00D8               	movwf	(litterlanguage_event@event)
  9765                           	
  9766  2217                     l38439:	
  9767                           ;userinterface.c: 343: if ((event == 4) &&
  9768                           ;userinterface.c: 344: (argument)) {
  9769  2217  0858               	movf	(litterlanguage_event@event),w
  9770  2218  3A04               	xorlw	04h&0ffh
  9771  2219  1D03               	skipz
  9772  221A  2A1C               	goto	u12051
  9773  221B  2A1D               	goto	u12050
  9774  221C                     u12051:
  9775  221C  2A25               	goto	l38445
  9776  221D                     u12050:
  9777                           	
  9778  221D                     l38441:	
  9779  221D  0857               	movf	(litterlanguage_event@argument),w
  9780  221E  1D03               	skipz
  9781  221F  2A21               	goto	u12060
  9782  2220  2A25               	goto	l38445
  9783  2221                     u12060:
  9784                           	line	345
  9785                           	
  9786  2221                     l38443:	
  9787                           ;userinterface.c: 345: litterlanguage_stop();
  9788  2221  31A1  21AC  31A2   	fcall	_litterlanguage_stop
  9789  2224  2A25               	goto	l38445
  9790                           	line	346
  9791                           	
  9792  2225                     l8700:	
  9793                           	line	351
  9794                           	
  9795  2225                     l38445:	
  9796                           ;userinterface.c: 346: }
  9797                           ;userinterface.c: 348: if (((event == 1) ||
  9798                           ;userinterface.c: 349: (event == 2) ||
  9799                           ;userinterface.c: 350: (event == 3)) &&
  9800                           ;userinterface.c: 351: (argument)) {
  9801  2225  0020               	movlb 0	; select bank0
  9802  2226  0858               	movf	(litterlanguage_event@event),w
  9803  2227  3A01               	xorlw	01h&0ffh
  9804  2228  1903               	skipnz
  9805  2229  2A2B               	goto	u12071
  9806  222A  2A2C               	goto	u12070
  9807  222B                     u12071:
  9808  222B  2A39               	goto	l38451
  9809  222C                     u12070:
  9810                           	
  9811  222C                     l38447:	
  9812  222C  0858               	movf	(litterlanguage_event@event),w
  9813  222D  3A02               	xorlw	02h&0ffh
  9814  222E  1903               	skipnz
  9815  222F  2A31               	goto	u12081
  9816  2230  2A32               	goto	u12080
  9817  2231                     u12081:
  9818  2231  2A39               	goto	l38451
  9819  2232                     u12080:
  9820                           	
  9821  2232                     l38449:	
  9822  2232  0858               	movf	(litterlanguage_event@event),w
  9823  2233  3A03               	xorlw	03h&0ffh
  9824  2234  1D03               	skipz
  9825  2235  2A37               	goto	u12091
  9826  2236  2A38               	goto	u12090
  9827  2237                     u12091:
  9828  2237  2A72               	goto	l38469
  9829  2238                     u12090:
  9830  2238  2A39               	goto	l38451
  9831                           	
  9832  2239                     l8703:	
  9833                           	
  9834  2239                     l38451:	
  9835  2239  0857               	movf	(litterlanguage_event@argument),w
  9836  223A  1D03               	skipz
  9837  223B  2A3D               	goto	u12100
  9838  223C  2A72               	goto	l38469
  9839  223D                     u12100:
  9840                           	line	352
  9841                           	
  9842  223D                     l38453:	
  9843                           ;userinterface.c: 352: litterlanguage_pause(1);
  9844  223D  3001               	movlw	(01h)
  9845  223E  3192  2256  31A2   	fcall	_litterlanguage_pause
  9846  2241  2A72               	goto	l38469
  9847                           	line	353
  9848                           	
  9849  2242                     l8701:	
  9850                           	line	356
  9851                           ;userinterface.c: 353: }
  9852                           ;userinterface.c: 356: switch (event) {
  9853  2242  2A72               	goto	l38469
  9854                           	line	357
  9855                           ;userinterface.c: 357: case 0:
  9856                           	
  9857  2243                     l8705:	
  9858                           	line	358
  9859                           ;userinterface.c: 358: break;
  9860  2243  2A7D               	goto	l8716
  9861                           	line	359
  9862                           ;userinterface.c: 359: case 1:
  9863                           	
  9864  2244                     l8707:	
  9865                           	line	360
  9866                           	
  9867  2244                     l38455:	
  9868                           ;userinterface.c: 360: if (argument)
  9869  2244  0020               	movlb 0	; select bank0
  9870  2245  0857               	movf	(litterlanguage_event@argument),w
  9871  2246  1D03               	skipz
  9872  2247  2A49               	goto	u12110
  9873  2248  2A7D               	goto	l8716
  9874  2249                     u12110:
  9875                           	line	361
  9876                           	
  9877  2249                     l38457:	
  9878                           ;userinterface.c: 361: set_Beeper(0x01, 1);
  9879  2249  01AE               	clrf	(?_set_Beeper)
  9880  224A  1403               	bsf	status,0
  9881  224B  0DAE               	rlf	(?_set_Beeper),f
  9882  224C  3001               	movlw	(01h)
  9883  224D  31B7  27F1  31A2   	fcall	_set_Beeper
  9884  2250  2A7D               	goto	l8716
  9885                           	
  9886  2251                     l8708:	
  9887                           	line	362
  9888                           ;userinterface.c: 362: break;
  9889  2251  2A7D               	goto	l8716
  9890                           	line	363
  9891                           ;userinterface.c: 363: case 2:
  9892                           	
  9893  2252                     l8709:	
  9894                           	line	364
  9895                           	
  9896  2252                     l38459:	
  9897                           ;userinterface.c: 364: if (argument)
  9898  2252  0020               	movlb 0	; select bank0
  9899  2253  0857               	movf	(litterlanguage_event@argument),w
  9900  2254  1D03               	skipz
  9901  2255  2A57               	goto	u12120
  9902  2256  2A7D               	goto	l8716
  9903  2257                     u12120:
  9904                           	line	365
  9905                           	
  9906  2257                     l38461:	
  9907                           ;userinterface.c: 365: set_Beeper(0x05, 1);
  9908  2257  01AE               	clrf	(?_set_Beeper)
  9909  2258  1403               	bsf	status,0
  9910  2259  0DAE               	rlf	(?_set_Beeper),f
  9911  225A  3005               	movlw	(05h)
  9912  225B  31B7  27F1  31A2   	fcall	_set_Beeper
  9913  225E  2A7D               	goto	l8716
  9914                           	
  9915  225F                     l8710:	
  9916                           	line	366
  9917                           ;userinterface.c: 366: break;
  9918  225F  2A7D               	goto	l8716
  9919                           	line	367
  9920                           ;userinterface.c: 367: case 3:
  9921                           	
  9922  2260                     l8711:	
  9923                           	line	368
  9924                           	
  9925  2260                     l38463:	
  9926                           ;userinterface.c: 368: if (argument)
  9927  2260  0020               	movlb 0	; select bank0
  9928  2261  0857               	movf	(litterlanguage_event@argument),w
  9929  2262  1D03               	skipz
  9930  2263  2A65               	goto	u12130
  9931  2264  2A7D               	goto	l8716
  9932  2265                     u12130:
  9933                           	line	369
  9934                           	
  9935  2265                     l38465:	
  9936                           ;userinterface.c: 369: set_Beeper(0x15, 1);
  9937  2265  01AE               	clrf	(?_set_Beeper)
  9938  2266  1403               	bsf	status,0
  9939  2267  0DAE               	rlf	(?_set_Beeper),f
  9940  2268  3015               	movlw	(015h)
  9941  2269  31B7  27F1  31A2   	fcall	_set_Beeper
  9942  226C  2A7D               	goto	l8716
  9943                           	
  9944  226D                     l8712:	
  9945                           	line	370
  9946                           ;userinterface.c: 370: break;
  9947  226D  2A7D               	goto	l8716
  9948                           	line	371
  9949                           ;userinterface.c: 371: case 4:
  9950                           	
  9951  226E                     l8713:	
  9952                           	line	372
  9953                           ;userinterface.c: 372: break;
  9954  226E  2A7D               	goto	l8716
  9955                           	line	373
  9956                           ;userinterface.c: 373: case 5:
  9957                           	
  9958  226F                     l8714:	
  9959                           	line	374
  9960                           ;userinterface.c: 374: break;
  9961  226F  2A7D               	goto	l8716
  9962                           	line	375
  9963                           ;userinterface.c: 375: default:
  9964                           	
  9965  2270                     l8715:	
  9966                           	line	376
  9967                           ;userinterface.c: 376: break;
  9968  2270  2A7D               	goto	l8716
  9969                           	line	377
  9970                           	
  9971  2271                     l38467:	
  9972                           ;userinterface.c: 377: }
  9973  2271  2A7D               	goto	l8716
  9974                           	line	356
  9975                           	
  9976  2272                     l8704:	
  9977                           	
  9978  2272                     l38469:	
  9979  2272  0020               	movlb 0	; select bank0
  9980  2273  0858               	movf	(litterlanguage_event@event),w
  9981                           	; Switch size 1, requested type "space"
  9982                           ; Number of cases is 6, Range of values is 0 to 5
  9983                           ; switch strategies available:
  9984                           ; Name         Instructions Cycles
  9985                           ; direct_byte           18     6 (fixed)
  9986                           ; simple_byte           19    10 (average)
  9987                           ; jumptable            260     6 (fixed)
  9988                           ; rangetable            10     4 (fixed)
  9989                           ; spacedrange           17     6 (fixed)
  9990                           ; locatedrange           6     3 (fixed)
  9991                           ;	Chosen strategy is direct_byte
  9992                           
  9993  2274  0084               	movwf fsr0l
  9994  2275  3006               	movlw	6
  9995  2276  0204               	subwf	fsr0l,w
  9996  2277  1803               skipnc
  9997  2278  2A7D               goto l8716
  9998  2279  3198               movlp high(S39173)
  9999  227A  3504               	lslf fsr0l,w
 10000  227B  3E00               	addlw low(S39173)
 10001  227C  0082               	movwf pc
 10002                           psect	swtext3,local,class=CONST,delta=2
 10003                           global __pswtext3
 10004  1800                     __pswtext3:
 10005  1800                     S39173:
 10006  1800  31A2  2A7D         	ljmp	l8716
 10007  1802  31A2  2A44         	ljmp	l38455
 10008  1804  31A2  2A52         	ljmp	l38459
 10009  1806  31A2  2A60         	ljmp	l38463
 10010  1808  31A2  2A7D         	ljmp	l8716
 10011  180A  31A2  2A7D         	ljmp	l8716
 10012                           psect	text3249
 10013                           
 10014                           	line	377
 10015                           	
 10016  227D                     l8706:	
 10017                           	line	378
 10018                           	
 10019  227D                     l8716:	
 10020  227D  0008               	return
 10021                           	opt stack 0
 10022                           GLOBAL	__end_of_litterlanguage_event
 10023  227E                     	__end_of_litterlanguage_event:
 10024 ;; =============== function _litterlanguage_event ends ============
 10025                           
 10026                           	signat	_litterlanguage_event,8312
 10027                           	global	_litterlanguage_stop
 10028                           psect	text3250,local,class=CODE,delta=2
 10029                           global __ptext3250
 10030  21AC                     __ptext3250:
 10031                           
 10032 ;; *************** function _litterlanguage_stop *****************
 10033 ;; Defined at:
 10034 ;;		line 347 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;		None               void
 10041 ;; Registers used:
 10042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10051 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10052 ;;Total ram usage:        1 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    5
 10055 ;; This function calls:
 10056 ;;		_printtime
 10057 ;;		_printf
 10058 ;;		_set_Bowl
 10059 ;;		_set_Arm
 10060 ;;		_water_fill
 10061 ;;		_set_Dosage
 10062 ;;		_set_Pump
 10063 ;;		_set_Dryer
 10064 ;;		_timeoutnever
 10065 ;;		_litterlanguage_event
 10066 ;; This function is called by:
 10067 ;;		_exe_instruction
 10068 ;;		_litterlanguage_event
 10069 ;;		_start_long
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           psect	text3250
 10073                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 10074                           	line	347
 10075                           	global	__size_of_litterlanguage_stop
 10076  0069                     	__size_of_litterlanguage_stop	equ	__end_of_litterlanguage_stop-_litterlanguage_stop
 10077                           	
 10078  21AC                     _litterlanguage_stop:	
 10079                           	opt	stack 7
 10080                           ; Regs used in _litterlanguage_stop: [allreg]
 10081                           	line	348
 10082                           	
 10083  21AC                     l38397:	
 10084                           ;litterlanguage.c: 348: if (ins_state == 0)
 10085  21AC  0020               	movlb 0	; select bank0
 10086  21AD  08E5               	movf	(_ins_state),f
 10087  21AE  1D03               	skipz
 10088  21AF  29B1               	goto	u12021
 10089  21B0  29B2               	goto	u12020
 10090  21B1                     u12021:
 10091  21B1  29B4               	goto	l38401
 10092  21B2                     u12020:
 10093  21B2  2A14               	goto	l4308
 10094                           	line	349
 10095                           	
 10096  21B3                     l38399:	
 10097                           ;litterlanguage.c: 349: return;
 10098  21B3  2A14               	goto	l4308
 10099                           	
 10100  21B4                     l4307:	
 10101                           	line	351
 10102                           	
 10103  21B4                     l38401:	
 10104                           ;litterlanguage.c: 351: printtime();
 10105  21B4  31AB  2395  31A1   	fcall	_printtime
 10106                           	line	352
 10107                           ;litterlanguage.c: 352: printf("Stopping program\n");
 10108  21B7  309D               	movlw	low(STR_29|8000h)
 10109  21B8  0020               	movlb 0	; select bank0
 10110  21B9  00AF               	movwf	(?_printf)
 10111  21BA  3086               	movlw	high(STR_29|8000h)
 10112  21BB  00B0               	movwf	((?_printf))+1
 10113  21BC  3194  24A0  31A1   	fcall	_printf
 10114                           	line	354
 10115                           	
 10116  21BF                     l38403:	
 10117                           ;litterlanguage.c: 354: set_Bowl(0);
 10118  21BF  3000               	movlw	(0)
 10119  21C0  31AA  2282  31A1   	fcall	_set_Bowl
 10120                           	line	355
 10121                           	
 10122  21C3                     l38405:	
 10123                           ;litterlanguage.c: 355: set_Arm(0);
 10124  21C3  3000               	movlw	(0)
 10125  21C4  31AA  22A6  31A1   	fcall	_set_Arm
 10126                           	line	356
 10127                           	
 10128  21C7                     l38407:	
 10129                           ;litterlanguage.c: 356: water_fill(0);
 10130  21C7  3000               	movlw	(0)
 10131  21C8  31A9  211B  31A1   	fcall	_water_fill
 10132                           	line	357
 10133                           	
 10134  21CB                     l38409:	
 10135                           ;litterlanguage.c: 357: set_Dosage(0);
 10136  21CB  3000               	movlw	(0)
 10137  21CC  31A8  208A  31A1   	fcall	_set_Dosage
 10138                           	line	358
 10139                           	
 10140  21CF                     l38411:	
 10141                           ;litterlanguage.c: 358: set_Pump(0);
 10142  21CF  3000               	movlw	(0)
 10143  21D0  31A8  209B  31A1   	fcall	_set_Pump
 10144                           	line	359
 10145                           	
 10146  21D3                     l38413:	
 10147                           ;litterlanguage.c: 359: set_Dryer(0);
 10148  21D3  3000               	movlw	(0)
 10149  21D4  31A8  20AC  31A1   	fcall	_set_Dryer
 10150                           	line	361
 10151                           	
 10152  21D7                     l38415:	
 10153                           ;litterlanguage.c: 361: timeoutnever(&timer_fill);
 10154  21D7  30E9               	movlw	(_timer_fill&0ffh)
 10155  21D8  0020               	movlb 0	; select bank0
 10156  21D9  00A5               	movwf	(?_timeoutnever)
 10157  21DA  3000               	movlw	0x1/2
 10158  21DB  00A6               	movwf	(?_timeoutnever+1)
 10159  21DC  31A9  21AF  31A1   	fcall	_timeoutnever
 10160                           	line	362
 10161                           	
 10162  21DF                     l38417:	
 10163                           ;litterlanguage.c: 362: timeoutnever(&timer_drain);
 10164  21DF  30E3               	movlw	(_timer_drain&0ffh)
 10165  21E0  0020               	movlb 0	; select bank0
 10166  21E1  00A5               	movwf	(?_timeoutnever)
 10167  21E2  3000               	movlw	0x1/2
 10168  21E3  00A6               	movwf	(?_timeoutnever+1)
 10169  21E4  31A9  21AF  31A1   	fcall	_timeoutnever
 10170                           	line	363
 10171                           	
 10172  21E7                     l38419:	
 10173                           ;litterlanguage.c: 363: timeoutnever(&timer_autodose);
 10174  21E7  3064               	movlw	(_timer_autodose&0ffh)
 10175  21E8  0020               	movlb 0	; select bank0
 10176  21E9  00A5               	movwf	(?_timeoutnever)
 10177  21EA  3001               	movlw	0x2/2
 10178  21EB  00A6               	movwf	(?_timeoutnever+1)
 10179  21EC  31A9  21AF  31A1   	fcall	_timeoutnever
 10180                           	line	365
 10181                           	
 10182  21EF                     l38421:	
 10183                           ;litterlanguage.c: 365: ins_state = 0;
 10184  21EF  0020               	movlb 0	; select bank0
 10185  21F0  01E5               	clrf	(_ins_state)
 10186                           	line	367
 10187                           	
 10188  21F1                     l38423:	
 10189                           ;litterlanguage.c: 367: paused = 0;
 10190  21F1  12F1               	bcf	(_paused/8),(_paused)&7
 10191                           	line	369
 10192                           	
 10193  21F2                     l38425:	
 10194                           ;litterlanguage.c: 369: if (error_fill) {
 10195  21F2  1FF0               	btfss	(_error_fill/8),(_error_fill)&7
 10196  21F3  29F5               	goto	u12031
 10197  21F4  29F6               	goto	u12030
 10198  21F5                     u12031:
 10199  21F5  2A02               	goto	l38431
 10200  21F6                     u12030:
 10201                           	line	370
 10202                           	
 10203  21F6                     l38427:	
 10204                           ;litterlanguage.c: 370: error_fill = 0;
 10205  21F6  13F0               	bcf	(_error_fill/8),(_error_fill)&7
 10206                           	line	371
 10207                           	
 10208  21F7                     l38429:	
 10209                           ;litterlanguage.c: 371: litterlanguage_event(1, error_fill);
 10210  21F7  3000               	movlw	0
 10211  21F8  1BF0               	btfsc	(_error_fill/8),(_error_fill)&7
 10212  21F9  3001               	movlw	1
 10213  21FA  00CF               	movwf	(??_litterlanguage_stop+0)+0
 10214  21FB  084F               	movf	(??_litterlanguage_stop+0)+0,w
 10215  21FC  00D7               	movwf	(?_litterlanguage_event)
 10216  21FD  3001               	movlw	(01h)
 10217  21FE  31A2  2215  31A1   	fcall	_litterlanguage_event
 10218  2201  2A02               	goto	l38431
 10219                           	line	372
 10220                           	
 10221  2202                     l4309:	
 10222                           	line	373
 10223                           	
 10224  2202                     l38431:	
 10225                           ;litterlanguage.c: 372: }
 10226                           ;litterlanguage.c: 373: if (error_drain) {
 10227  2202  1EF0               	btfss	(_error_drain/8),(_error_drain)&7
 10228  2203  2A05               	goto	u12041
 10229  2204  2A06               	goto	u12040
 10230  2205                     u12041:
 10231  2205  2A13               	goto	l38437
 10232  2206                     u12040:
 10233                           	line	374
 10234                           	
 10235  2206                     l38433:	
 10236                           ;litterlanguage.c: 374: error_drain = 0;
 10237  2206  12F0               	bcf	(_error_drain/8),(_error_drain)&7
 10238                           	line	375
 10239                           	
 10240  2207                     l38435:	
 10241                           ;litterlanguage.c: 375: litterlanguage_event(2, error_drain);
 10242  2207  3000               	movlw	0
 10243  2208  1AF0               	btfsc	(_error_drain/8),(_error_drain)&7
 10244  2209  3001               	movlw	1
 10245  220A  0020               	movlb 0	; select bank0
 10246  220B  00CF               	movwf	(??_litterlanguage_stop+0)+0
 10247  220C  084F               	movf	(??_litterlanguage_stop+0)+0,w
 10248  220D  00D7               	movwf	(?_litterlanguage_event)
 10249  220E  3002               	movlw	(02h)
 10250  220F  31A2  2215  31A1   	fcall	_litterlanguage_event
 10251  2212  2A13               	goto	l38437
 10252                           	line	376
 10253                           	
 10254  2213                     l4310:	
 10255                           	line	377
 10256                           	
 10257  2213                     l38437:	
 10258                           ;litterlanguage.c: 376: }
 10259                           ;litterlanguage.c: 377: error_flood = 0;
 10260  2213  1071               	bcf	(_error_flood/8),(_error_flood)&7
 10261                           	line	378
 10262                           	
 10263  2214                     l4308:	
 10264  2214  0008               	return
 10265                           	opt stack 0
 10266                           GLOBAL	__end_of_litterlanguage_stop
 10267  2215                     	__end_of_litterlanguage_stop:
 10268 ;; =============== function _litterlanguage_stop ends ============
 10269                           
 10270                           	signat	_litterlanguage_stop,88
 10271                           	global	_userinterface_work
 10272                           psect	text3251,local,class=CODE,delta=2
 10273                           global __ptext3251
 10274  1D2E                     __ptext3251:
 10275                           
 10276 ;; *************** function _userinterface_work *****************
 10277 ;; Defined at:
 10278 ;;		line 129 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;		None
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  update          1   57[BANK0 ] unsigned char 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;		None               void
 10285 ;; Registers used:
 10286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10295 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10296 ;;Total ram usage:        3 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    9
 10299 ;; This function calls:
 10300 ;;		_timeoutexpired
 10301 ;;		_update_autotimer
 10302 ;;		_printtime
 10303 ;;		_printf
 10304 ;;		_litterlanguage_start
 10305 ;;		_litterlanguage_running
 10306 ;;		_timeoutnow
 10307 ;;		_start_short
 10308 ;;		_setup_short
 10309 ;;		_both_short
 10310 ;;		_set_Beeper
 10311 ;;		_start_long
 10312 ;;		_setup_long
 10313 ;;		_both_long
 10314 ;;		_timeoutnever
 10315 ;;		_update_display
 10316 ;; This function is called by:
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           psect	text3251
 10321                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10322                           	line	129
 10323                           	global	__size_of_userinterface_work
 10324  015E                     	__size_of_userinterface_work	equ	__end_of_userinterface_work-_userinterface_work
 10325                           	
 10326  1D2E                     _userinterface_work:	
 10327                           	opt	stack 6
 10328                           ; Regs used in _userinterface_work: [allreg]
 10329                           	line	130
 10330                           	
 10331  1D2E                     l38283:	
 10332                           ;userinterface.c: 130: unsigned char update = 0;
 10333  1D2E  0020               	movlb 0	; select bank0
 10334  1D2F  01DA               	clrf	(userinterface_work@update)
 10335                           	line	133
 10336                           	
 10337  1D30                     l38285:	
 10338                           ;userinterface.c: 132: if( (panel_mode == 1) &&
 10339                           ;userinterface.c: 133: (timeoutexpired(&cartridgetimeout)) ) {
 10340  1D30  0021               	movlb 1	; select bank1
 10341  1D31  0859               	movf	(_panel_mode)^080h,w
 10342  1D32  3A01               	xorlw	01h&0ffh
 10343  1D33  1D03               	skipz
 10344  1D34  2D36               	goto	u11911
 10345  1D35  2D37               	goto	u11910
 10346  1D36                     u11911:
 10347  1D36  2DE7               	goto	l38335
 10348  1D37                     u11910:
 10349                           	
 10350  1D37                     l38287:	
 10351  1D37  303A               	movlw	(_cartridgetimeout&0ffh)
 10352  1D38  0020               	movlb 0	; select bank0
 10353  1D39  00A9               	movwf	(?_timeoutexpired)
 10354  1D3A  3001               	movlw	0x2/2
 10355  1D3B  00AA               	movwf	(?_timeoutexpired+1)
 10356  1D3C  31A3  235B  319D   	fcall	_timeoutexpired
 10357  1D3F  3A00               	xorlw	0&0ffh
 10358  1D40  1903               	skipnz
 10359  1D41  2D43               	goto	u11921
 10360  1D42  2D44               	goto	u11920
 10361  1D43                     u11921:
 10362  1D43  2DE7               	goto	l38335
 10363  1D44                     u11920:
 10364                           	line	134
 10365                           	
 10366  1D44                     l38289:	
 10367                           ;userinterface.c: 134: if (error_nr)
 10368  1D44  0020               	movlb 0	; select bank0
 10369  1D45  0863               	movf	(_error_nr),w
 10370  1D46  1D03               	skipz
 10371  1D47  2D49               	goto	u11930
 10372  1D48  2D4F               	goto	l8639
 10373  1D49                     u11930:
 10374                           	line	135
 10375                           	
 10376  1D49                     l38291:	
 10377                           ;userinterface.c: 135: panel_mode = 2;
 10378  1D49  3002               	movlw	(02h)
 10379  1D4A  00D8               	movwf	(??_userinterface_work+0)+0
 10380  1D4B  0858               	movf	(??_userinterface_work+0)+0,w
 10381  1D4C  0021               	movlb 1	; select bank1
 10382  1D4D  00D9               	movwf	(_panel_mode)^080h
 10383  1D4E  2D52               	goto	l38293
 10384                           	line	136
 10385                           	
 10386  1D4F                     l8639:	
 10387                           	line	137
 10388                           ;userinterface.c: 136: else
 10389                           ;userinterface.c: 137: panel_mode = 0;
 10390  1D4F  0021               	movlb 1	; select bank1
 10391  1D50  01D9               	clrf	(_panel_mode)^080h
 10392  1D51  2D52               	goto	l38293
 10393                           	
 10394  1D52                     l8640:	
 10395                           	line	138
 10396                           	
 10397  1D52                     l38293:	
 10398                           ;userinterface.c: 138: update = 1;
 10399  1D52  0020               	movlb 0	; select bank0
 10400  1D53  01DA               	clrf	(userinterface_work@update)
 10401  1D54  1403               	bsf	status,0
 10402  1D55  0DDA               	rlf	(userinterface_work@update),f
 10403  1D56  2DE7               	goto	l38335
 10404                           	line	139
 10405                           	
 10406  1D57                     l8638:	
 10407                           	line	141
 10408                           ;userinterface.c: 139: }
 10409                           ;userinterface.c: 141: switch(state) {
 10410  1D57  2DE7               	goto	l38335
 10411                           	line	142
 10412                           ;userinterface.c: 142: default:
 10413                           	
 10414  1D58                     l8642:	
 10415                           	line	143
 10416                           ;userinterface.c: 143: state = 0;
 10417  1D58  01E6               	clrf	(_state)
 10418  1D59  2D5A               	goto	l38295
 10419                           	line	144
 10420                           ;userinterface.c: 144: case 0:
 10421                           	
 10422  1D5A                     l8643:	
 10423                           	line	146
 10424                           	
 10425  1D5A                     l38295:	
 10426                           ;userinterface.c: 146: if (timeoutexpired(&autotimer)) {
 10427  1D5A  30DD               	movlw	(_autotimer&0ffh)
 10428  1D5B  00A9               	movwf	(?_timeoutexpired)
 10429  1D5C  3000               	movlw	0x1/2
 10430  1D5D  00AA               	movwf	(?_timeoutexpired+1)
 10431  1D5E  31A3  235B  319D   	fcall	_timeoutexpired
 10432  1D61  3A00               	xorlw	0&0ffh
 10433  1D62  1903               	skipnz
 10434  1D63  2D65               	goto	u11941
 10435  1D64  2D66               	goto	u11940
 10436  1D65                     u11941:
 10437  1D65  2E0F               	goto	l38351
 10438  1D66                     u11940:
 10439                           	line	148
 10440                           	
 10441  1D66                     l38297:	
 10442                           ;userinterface.c: 148: update_autotimer(auto_mode);
 10443  1D66  0020               	movlb 0	; select bank0
 10444  1D67  0862               	movf	(_auto_mode),w
 10445  1D68  31A6  26BE  319D   	fcall	_update_autotimer
 10446                           	line	150
 10447                           ;userinterface.c: 150: printtime();
 10448  1D6B  31AB  2395  319D   	fcall	_printtime
 10449                           	line	151
 10450                           ;userinterface.c: 151: printf("Autotimer expired: ");
 10451  1D6E  30A2               	movlw	low(STR_91|8000h)
 10452  1D6F  0020               	movlb 0	; select bank0
 10453  1D70  00AF               	movwf	(?_printf)
 10454  1D71  3085               	movlw	high(STR_91|8000h)
 10455  1D72  00B0               	movwf	((?_printf))+1
 10456  1D73  3194  24A0  319D   	fcall	_printf
 10457                           	line	154
 10458                           	
 10459  1D76                     l38299:	
 10460                           ;userinterface.c: 154: if (cat_detected) {
 10461  1D76  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 10462  1D77  2D79               	goto	u11951
 10463  1D78  2D7A               	goto	u11950
 10464  1D79                     u11951:
 10465  1D79  2D8A               	goto	l38307
 10466  1D7A                     u11950:
 10467                           	line	156
 10468                           	
 10469  1D7A                     l38301:	
 10470                           ;userinterface.c: 156: printf("waiting...\n");
 10471  1D7A  3027               	movlw	low(STR_92|8000h)
 10472  1D7B  0020               	movlb 0	; select bank0
 10473  1D7C  00AF               	movwf	(?_printf)
 10474  1D7D  3088               	movlw	high(STR_92|8000h)
 10475  1D7E  00B0               	movwf	((?_printf))+1
 10476  1D7F  3194  24A0  319D   	fcall	_printf
 10477                           	line	158
 10478                           	
 10479  1D82                     l38303:	
 10480                           ;userinterface.c: 158: state = 1;
 10481  1D82  0020               	movlb 0	; select bank0
 10482  1D83  01E6               	clrf	(_state)
 10483  1D84  1403               	bsf	status,0
 10484  1D85  0DE6               	rlf	(_state),f
 10485                           	line	159
 10486                           	
 10487  1D86                     l38305:	
 10488                           ;userinterface.c: 159: update = 1;
 10489  1D86  01DA               	clrf	(userinterface_work@update)
 10490  1D87  1403               	bsf	status,0
 10491  1D88  0DDA               	rlf	(userinterface_work@update),f
 10492                           	line	160
 10493                           ;userinterface.c: 160: }
 10494  1D89  2E0F               	goto	l38351
 10495                           	line	162
 10496                           	
 10497  1D8A                     l8645:	
 10498                           	line	163
 10499                           	
 10500  1D8A                     l38307:	
 10501                           ;userinterface.c: 162: else
 10502                           ;userinterface.c: 163: printf("skipping\n");
 10503  1D8A  3076               	movlw	low(STR_93|8000h)
 10504  1D8B  0020               	movlb 0	; select bank0
 10505  1D8C  00AF               	movwf	(?_printf)
 10506  1D8D  3088               	movlw	high(STR_93|8000h)
 10507  1D8E  00B0               	movwf	((?_printf))+1
 10508  1D8F  3194  24A0  319D   	fcall	_printf
 10509  1D92  2E0F               	goto	l38351
 10510                           	
 10511  1D93                     l8646:	
 10512  1D93  2E0F               	goto	l38351
 10513                           	line	165
 10514                           	
 10515  1D94                     l8644:	
 10516                           	line	166
 10517                           ;userinterface.c: 165: }
 10518                           ;userinterface.c: 166: break;
 10519  1D94  2E0F               	goto	l38351
 10520                           	line	167
 10521                           ;userinterface.c: 167: case 1:
 10522                           	
 10523  1D95                     l8648:	
 10524                           	line	169
 10525                           ;userinterface.c: 169: if (!cat_present && timeoutexpired(&cattimer)) {
 10526  1D95  18F0               	btfsc	(_cat_present/8),(_cat_present)&7
 10527  1D96  2D98               	goto	u11961
 10528  1D97  2D99               	goto	u11960
 10529  1D98                     u11961:
 10530  1D98  2E0F               	goto	l38351
 10531  1D99                     u11960:
 10532                           	
 10533  1D99                     l38309:	
 10534  1D99  3040               	movlw	(_cattimer&0ffh)
 10535  1D9A  00A9               	movwf	(?_timeoutexpired)
 10536  1D9B  3001               	movlw	0x2/2
 10537  1D9C  00AA               	movwf	(?_timeoutexpired+1)
 10538  1D9D  31A3  235B  319D   	fcall	_timeoutexpired
 10539  1DA0  3A00               	xorlw	0&0ffh
 10540  1DA1  1903               	skipnz
 10541  1DA2  2DA4               	goto	u11971
 10542  1DA3  2DA5               	goto	u11970
 10543  1DA4                     u11971:
 10544  1DA4  2E0F               	goto	l38351
 10545  1DA5                     u11970:
 10546                           	line	171
 10547                           	
 10548  1DA5                     l38311:	
 10549                           ;userinterface.c: 171: printtime();
 10550  1DA5  31AB  2395  319D   	fcall	_printtime
 10551                           	line	172
 10552                           ;userinterface.c: 172: printf("Cattimer expired\n");
 10553  1DA8  3079               	movlw	low(STR_94|8000h)
 10554  1DA9  0020               	movlb 0	; select bank0
 10555  1DAA  00AF               	movwf	(?_printf)
 10556  1DAB  3086               	movlw	high(STR_94|8000h)
 10557  1DAC  00B0               	movwf	((?_printf))+1
 10558  1DAD  3194  24A0  319D   	fcall	_printf
 10559                           	line	174
 10560                           ;userinterface.c: 174: litterlanguage_start(full_wash);
 10561  1DB0  3000               	movlw	0
 10562  1DB1  1971               	btfsc	(_full_wash/8),(_full_wash)&7
 10563  1DB2  3001               	movlw	1
 10564  1DB3  31AD  256A  319D   	fcall	_litterlanguage_start
 10565                           	line	175
 10566                           	
 10567  1DB6                     l38313:	
 10568                           ;userinterface.c: 175: state = 2;
 10569  1DB6  3002               	movlw	(02h)
 10570  1DB7  0020               	movlb 0	; select bank0
 10571  1DB8  00D8               	movwf	(??_userinterface_work+0)+0
 10572  1DB9  0858               	movf	(??_userinterface_work+0)+0,w
 10573  1DBA  00E6               	movwf	(_state)
 10574                           	line	178
 10575                           	
 10576  1DBB                     l38315:	
 10577                           ;userinterface.c: 178: update = 1;
 10578  1DBB  01DA               	clrf	(userinterface_work@update)
 10579  1DBC  1403               	bsf	status,0
 10580  1DBD  0DDA               	rlf	(userinterface_work@update),f
 10581  1DBE  2E0F               	goto	l38351
 10582                           	line	179
 10583                           	
 10584  1DBF                     l8649:	
 10585                           	line	180
 10586                           ;userinterface.c: 179: }
 10587                           ;userinterface.c: 180: break;
 10588  1DBF  2E0F               	goto	l38351
 10589                           	line	181
 10590                           ;userinterface.c: 181: case 2:
 10591                           	
 10592  1DC0                     l8650:	
 10593                           	line	183
 10594                           	
 10595  1DC0                     l38317:	
 10596                           ;userinterface.c: 183: if (!litterlanguage_running()) {
 10597  1DC0  31B7  2792  319D   	fcall	_litterlanguage_running
 10598  1DC3  3800               	iorlw	0
 10599  1DC4  1D03               	skipz
 10600  1DC5  2DC7               	goto	u11981
 10601  1DC6  2DC8               	goto	u11980
 10602  1DC7                     u11981:
 10603  1DC7  2E0F               	goto	l38351
 10604  1DC8                     u11980:
 10605                           	line	184
 10606                           	
 10607  1DC8                     l38319:	
 10608                           ;userinterface.c: 184: timeoutnow(&cattimer);
 10609  1DC8  3040               	movlw	(_cattimer&0ffh)
 10610  1DC9  0020               	movlb 0	; select bank0
 10611  1DCA  00A5               	movwf	(?_timeoutnow)
 10612  1DCB  3001               	movlw	0x2/2
 10613  1DCC  00A6               	movwf	(?_timeoutnow+1)
 10614  1DCD  31A9  21CB  319D   	fcall	_timeoutnow
 10615                           	line	185
 10616                           	
 10617  1DD0                     l38321:	
 10618                           ;userinterface.c: 185: cat_detected = 0;
 10619  1DD0  1070               	bcf	(_cat_detected/8),(_cat_detected)&7
 10620                           	line	186
 10621                           	
 10622  1DD1                     l38323:	
 10623                           ;userinterface.c: 186: if (full_wash)
 10624  1DD1  1D71               	btfss	(_full_wash/8),(_full_wash)&7
 10625  1DD2  2DD4               	goto	u11991
 10626  1DD3  2DD5               	goto	u11990
 10627  1DD4                     u11991:
 10628  1DD4  2DD8               	goto	l38327
 10629  1DD5                     u11990:
 10630                           	line	187
 10631                           	
 10632  1DD5                     l38325:	
 10633                           ;userinterface.c: 187: interval = 0;
 10634  1DD5  0021               	movlb 1	; select bank1
 10635  1DD6  01D8               	clrf	(_interval)^080h
 10636  1DD7  2DDF               	goto	l38329
 10637                           	line	188
 10638                           	
 10639  1DD8                     l8652:	
 10640                           	line	189
 10641                           	
 10642  1DD8                     l38327:	
 10643                           ;userinterface.c: 188: else
 10644                           ;userinterface.c: 189: interval ++;
 10645  1DD8  3001               	movlw	(01h)
 10646  1DD9  0020               	movlb 0	; select bank0
 10647  1DDA  00D8               	movwf	(??_userinterface_work+0)+0
 10648  1DDB  0858               	movf	(??_userinterface_work+0)+0,w
 10649  1DDC  0021               	movlb 1	; select bank1
 10650  1DDD  07D8               	addwf	(_interval)^080h,f
 10651  1DDE  2DDF               	goto	l38329
 10652                           	
 10653  1DDF                     l8653:	
 10654                           	line	190
 10655                           	
 10656  1DDF                     l38329:	
 10657                           ;userinterface.c: 190: state = 0;
 10658  1DDF  0020               	movlb 0	; select bank0
 10659  1DE0  01E6               	clrf	(_state)
 10660                           	line	191
 10661                           	
 10662  1DE1                     l38331:	
 10663                           ;userinterface.c: 191: update = 1;
 10664  1DE1  01DA               	clrf	(userinterface_work@update)
 10665  1DE2  1403               	bsf	status,0
 10666  1DE3  0DDA               	rlf	(userinterface_work@update),f
 10667  1DE4  2E0F               	goto	l38351
 10668                           	line	192
 10669                           	
 10670  1DE5                     l8651:	
 10671                           	line	193
 10672                           ;userinterface.c: 192: }
 10673                           ;userinterface.c: 193: break;
 10674  1DE5  2E0F               	goto	l38351
 10675                           	line	194
 10676                           	
 10677  1DE6                     l38333:	
 10678                           ;userinterface.c: 194: }
 10679  1DE6  2E0F               	goto	l38351
 10680                           	line	141
 10681                           	
 10682  1DE7                     l8641:	
 10683                           	
 10684  1DE7                     l38335:	
 10685  1DE7  0020               	movlb 0	; select bank0
 10686  1DE8  0866               	movf	(_state),w
 10687                           	; Switch size 1, requested type "space"
 10688                           ; Number of cases is 3, Range of values is 0 to 2
 10689                           ; switch strategies available:
 10690                           ; Name         Instructions Cycles
 10691                           ; simple_byte           10     6 (average)
 10692                           ; direct_byte           12     6 (fixed)
 10693                           ; jumptable            260     6 (fixed)
 10694                           ; rangetable             7     4 (fixed)
 10695                           ; spacedrange           11     6 (fixed)
 10696                           ; locatedrange           3     3 (fixed)
 10697                           ;	Chosen strategy is simple_byte
 10698                           
 10699                           	opt asmopt_off
 10700  1DE9  3A00               	xorlw	0^0	; case 0
 10701  1DEA  1903               	skipnz
 10702  1DEB  2D5A               	goto	l38295
 10703  1DEC  3A01               	xorlw	1^0	; case 1
 10704  1DED  1903               	skipnz
 10705  1DEE  2D95               	goto	l8648
 10706  1DEF  3A03               	xorlw	2^1	; case 2
 10707  1DF0  1903               	skipnz
 10708  1DF1  2DC0               	goto	l38317
 10709  1DF2  2D58               	goto	l8642
 10710                           	opt asmopt_on
 10711                           
 10712                           	line	194
 10713                           	
 10714  1DF3                     l8647:	
 10715                           	line	197
 10716                           ;userinterface.c: 197: switch (buttonmask_evt & ((0x01 << 0) | (0x01 << 1))) {
 10717  1DF3  2E0F               	goto	l38351
 10718                           	line	198
 10719                           ;userinterface.c: 198: case 0:
 10720                           	
 10721  1DF4                     l8655:	
 10722                           	line	200
 10723                           ;userinterface.c: 200: break;
 10724  1DF4  2E28               	goto	l8656
 10725                           	line	202
 10726                           ;userinterface.c: 202: case (0x01 << 0):
 10727                           	
 10728  1DF5                     l8657:	
 10729                           	line	203
 10730                           	
 10731  1DF5                     l38337:	
 10732                           ;userinterface.c: 203: start_short();
 10733  1DF5  3181  21DE  319D   	fcall	_start_short
 10734                           	line	204
 10735                           	
 10736  1DF8                     l38339:	
 10737                           ;userinterface.c: 204: update = 1;
 10738  1DF8  0020               	movlb 0	; select bank0
 10739  1DF9  01DA               	clrf	(userinterface_work@update)
 10740  1DFA  1403               	bsf	status,0
 10741  1DFB  0DDA               	rlf	(userinterface_work@update),f
 10742                           	line	205
 10743                           ;userinterface.c: 205: break;
 10744  1DFC  2E28               	goto	l8656
 10745                           	line	207
 10746                           ;userinterface.c: 207: case (0x01 << 1):
 10747                           	
 10748  1DFD                     l8658:	
 10749                           	line	208
 10750                           	
 10751  1DFD                     l38341:	
 10752                           ;userinterface.c: 208: setup_short();
 10753  1DFD  31A4  2446  319D   	fcall	_setup_short
 10754                           	line	209
 10755                           	
 10756  1E00                     l38343:	
 10757                           ;userinterface.c: 209: update = 1;
 10758  1E00  0020               	movlb 0	; select bank0
 10759  1E01  01DA               	clrf	(userinterface_work@update)
 10760  1E02  1403               	bsf	status,0
 10761  1E03  0DDA               	rlf	(userinterface_work@update),f
 10762                           	line	210
 10763                           ;userinterface.c: 210: break;
 10764  1E04  2E28               	goto	l8656
 10765                           	line	212
 10766                           ;userinterface.c: 212: case ((0x01 << 0) | (0x01 << 1)):
 10767                           	
 10768  1E05                     l8659:	
 10769                           	line	213
 10770                           	
 10771  1E05                     l38345:	
 10772                           ;userinterface.c: 213: both_short();
 10773  1E05  31A9  2106  319D   	fcall	_both_short
 10774                           	line	214
 10775                           	
 10776  1E08                     l38347:	
 10777                           ;userinterface.c: 214: update = 1;
 10778  1E08  0020               	movlb 0	; select bank0
 10779  1E09  01DA               	clrf	(userinterface_work@update)
 10780  1E0A  1403               	bsf	status,0
 10781  1E0B  0DDA               	rlf	(userinterface_work@update),f
 10782                           	line	215
 10783                           ;userinterface.c: 215: break;
 10784  1E0C  2E28               	goto	l8656
 10785                           	line	217
 10786                           ;userinterface.c: 217: default:
 10787                           	
 10788  1E0D                     l8660:	
 10789                           	line	218
 10790                           ;userinterface.c: 218: break;
 10791  1E0D  2E28               	goto	l8656
 10792                           	line	219
 10793                           	
 10794  1E0E                     l38349:	
 10795                           ;userinterface.c: 219: }
 10796  1E0E  2E28               	goto	l8656
 10797                           	line	197
 10798                           	
 10799  1E0F                     l8654:	
 10800                           	
 10801  1E0F                     l38351:	
 10802  1E0F  0021               	movlb 1	; select bank1
 10803  1E10  0857               	movf	(_buttonmask_evt)^080h,w
 10804  1E11  3903               	andlw	03h
 10805  1E12  0020               	movlb 0	; select bank0
 10806  1E13  00D8               	movwf	(??_userinterface_work+0)+0
 10807  1E14  01D9               	clrf	(??_userinterface_work+0)+0+1
 10808                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10809                           ; Switch size 1, requested type "space"
 10810                           ; Number of cases is 1, Range of values is 0 to 0
 10811                           ; switch strategies available:
 10812                           ; Name         Instructions Cycles
 10813                           ; simple_byte            4     3 (average)
 10814                           ; direct_byte            8     6 (fixed)
 10815                           ; jumptable            260     6 (fixed)
 10816                           ; rangetable             5     4 (fixed)
 10817                           ; spacedrange            7     6 (fixed)
 10818                           ; locatedrange           1     3 (fixed)
 10819                           ;	Chosen strategy is simple_byte
 10820                           
 10821  1E15  0859               	movf 1+(??_userinterface_work+0)+0,w
 10822                           	opt asmopt_off
 10823  1E16  3A00               	xorlw	0^0	; case 0
 10824  1E17  1903               	skipnz
 10825  1E18  2E1A               	goto	l39175
 10826  1E19  2E28               	goto	l8656
 10827                           	opt asmopt_on
 10828                           	
 10829  1E1A                     l39175:	
 10830                           ; Switch size 1, requested type "space"
 10831                           ; Number of cases is 4, Range of values is 0 to 3
 10832                           ; switch strategies available:
 10833                           ; Name         Instructions Cycles
 10834                           ; simple_byte           13     7 (average)
 10835                           ; direct_byte           14     6 (fixed)
 10836                           ; jumptable            260     6 (fixed)
 10837                           ; rangetable             8     4 (fixed)
 10838                           ; spacedrange           13     6 (fixed)
 10839                           ; locatedrange           4     3 (fixed)
 10840                           ;	Chosen strategy is simple_byte
 10841                           
 10842  1E1A  0858               	movf 0+(??_userinterface_work+0)+0,w
 10843                           	opt asmopt_off
 10844  1E1B  3A00               	xorlw	0^0	; case 0
 10845  1E1C  1903               	skipnz
 10846  1E1D  2E28               	goto	l8656
 10847  1E1E  3A01               	xorlw	1^0	; case 1
 10848  1E1F  1903               	skipnz
 10849  1E20  2DF5               	goto	l38337
 10850  1E21  3A03               	xorlw	2^1	; case 2
 10851  1E22  1903               	skipnz
 10852  1E23  2DFD               	goto	l38341
 10853  1E24  3A01               	xorlw	3^2	; case 3
 10854  1E25  1903               	skipnz
 10855  1E26  2E05               	goto	l38345
 10856  1E27  2E28               	goto	l8656
 10857                           	opt asmopt_on
 10858                           
 10859                           	line	219
 10860                           	
 10861  1E28                     l8656:	
 10862                           	line	220
 10863                           ;userinterface.c: 220: buttonmask_evt = 0;
 10864  1E28  0021               	movlb 1	; select bank1
 10865  1E29  01D7               	clrf	(_buttonmask_evt)^080h
 10866                           	line	223
 10867                           	
 10868  1E2A                     l38353:	
 10869                           ;userinterface.c: 223: if (timeoutexpired(&holdtimeout)) {
 10870  1E2A  305E               	movlw	(_holdtimeout&0ffh)
 10871  1E2B  0020               	movlb 0	; select bank0
 10872  1E2C  00A9               	movwf	(?_timeoutexpired)
 10873  1E2D  3001               	movlw	0x2/2
 10874  1E2E  00AA               	movwf	(?_timeoutexpired+1)
 10875  1E2F  31A3  235B  319D   	fcall	_timeoutexpired
 10876  1E32  3A00               	xorlw	0&0ffh
 10877  1E33  1903               	skipnz
 10878  1E34  2E36               	goto	u12001
 10879  1E35  2E37               	goto	u12000
 10880  1E36                     u12001:
 10881  1E36  2E82               	goto	l38381
 10882  1E37                     u12000:
 10883  1E37  2E63               	goto	l38377
 10884                           	line	224
 10885                           	
 10886  1E38                     l38355:	
 10887                           ;userinterface.c: 224: switch (buttonmask_cum & ((0x01 << 0) | (0x01 << 1))) {
 10888  1E38  2E63               	goto	l38377
 10889                           	line	225
 10890                           ;userinterface.c: 225: case (0x01 << 0):
 10891                           	
 10892  1E39                     l8663:	
 10893                           	line	226
 10894                           	
 10895  1E39                     l38357:	
 10896                           ;userinterface.c: 226: set_Beeper(0x05, 0);
 10897  1E39  0020               	movlb 0	; select bank0
 10898  1E3A  01AE               	clrf	(?_set_Beeper)
 10899  1E3B  3005               	movlw	(05h)
 10900  1E3C  31B7  27F1  319D   	fcall	_set_Beeper
 10901                           	line	227
 10902                           	
 10903  1E3F                     l38359:	
 10904                           ;userinterface.c: 227: start_long();
 10905  1E3F  31A0  2001  319D   	fcall	_start_long
 10906                           	line	228
 10907                           	
 10908  1E42                     l38361:	
 10909                           ;userinterface.c: 228: update = 1;
 10910  1E42  0020               	movlb 0	; select bank0
 10911  1E43  01DA               	clrf	(userinterface_work@update)
 10912  1E44  1403               	bsf	status,0
 10913  1E45  0DDA               	rlf	(userinterface_work@update),f
 10914                           	line	229
 10915                           ;userinterface.c: 229: break;
 10916  1E46  2E79               	goto	l8664
 10917                           	line	231
 10918                           ;userinterface.c: 231: case (0x01 << 1):
 10919                           	
 10920  1E47                     l8665:	
 10921                           	line	232
 10922                           	
 10923  1E47                     l38363:	
 10924                           ;userinterface.c: 232: set_Beeper(0x05, 0);
 10925  1E47  01AE               	clrf	(?_set_Beeper)
 10926  1E48  3005               	movlw	(05h)
 10927  1E49  31B7  27F1  319D   	fcall	_set_Beeper
 10928                           	line	233
 10929                           	
 10930  1E4C                     l38365:	
 10931                           ;userinterface.c: 233: setup_long();
 10932  1E4C  3181  21FF  319D   	fcall	_setup_long
 10933                           	line	234
 10934                           	
 10935  1E4F                     l38367:	
 10936                           ;userinterface.c: 234: update = 1;
 10937  1E4F  0020               	movlb 0	; select bank0
 10938  1E50  01DA               	clrf	(userinterface_work@update)
 10939  1E51  1403               	bsf	status,0
 10940  1E52  0DDA               	rlf	(userinterface_work@update),f
 10941                           	line	235
 10942                           ;userinterface.c: 235: break;
 10943  1E53  2E79               	goto	l8664
 10944                           	line	237
 10945                           ;userinterface.c: 237: case ((0x01 << 0) | (0x01 << 1)):
 10946                           	
 10947  1E54                     l8666:	
 10948                           	line	238
 10949                           	
 10950  1E54                     l38369:	
 10951                           ;userinterface.c: 238: set_Beeper(0x05, 0);
 10952  1E54  01AE               	clrf	(?_set_Beeper)
 10953  1E55  3005               	movlw	(05h)
 10954  1E56  31B7  27F1  319D   	fcall	_set_Beeper
 10955                           	line	239
 10956                           	
 10957  1E59                     l38371:	
 10958                           ;userinterface.c: 239: both_long();
 10959  1E59  31A8  207A  319D   	fcall	_both_long
 10960                           	line	240
 10961                           	
 10962  1E5C                     l38373:	
 10963                           ;userinterface.c: 240: update = 1;
 10964  1E5C  0020               	movlb 0	; select bank0
 10965  1E5D  01DA               	clrf	(userinterface_work@update)
 10966  1E5E  1403               	bsf	status,0
 10967  1E5F  0DDA               	rlf	(userinterface_work@update),f
 10968                           	line	241
 10969                           ;userinterface.c: 241: break;
 10970  1E60  2E79               	goto	l8664
 10971                           	line	243
 10972                           ;userinterface.c: 243: default:
 10973                           	
 10974  1E61                     l8667:	
 10975                           	line	244
 10976                           ;userinterface.c: 244: break;
 10977  1E61  2E79               	goto	l8664
 10978                           	line	245
 10979                           	
 10980  1E62                     l38375:	
 10981                           ;userinterface.c: 245: }
 10982  1E62  2E79               	goto	l8664
 10983                           	line	224
 10984                           	
 10985  1E63                     l8662:	
 10986                           	
 10987  1E63                     l38377:	
 10988  1E63  0021               	movlb 1	; select bank1
 10989  1E64  0855               	movf	(_buttonmask_cum)^080h,w
 10990  1E65  3903               	andlw	03h
 10991  1E66  0020               	movlb 0	; select bank0
 10992  1E67  00D8               	movwf	(??_userinterface_work+0)+0
 10993  1E68  01D9               	clrf	(??_userinterface_work+0)+0+1
 10994                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10995                           ; Switch size 1, requested type "space"
 10996                           ; Number of cases is 1, Range of values is 0 to 0
 10997                           ; switch strategies available:
 10998                           ; Name         Instructions Cycles
 10999                           ; simple_byte            4     3 (average)
 11000                           ; direct_byte            8     6 (fixed)
 11001                           ; jumptable            260     6 (fixed)
 11002                           ; rangetable             5     4 (fixed)
 11003                           ; spacedrange            7     6 (fixed)
 11004                           ; locatedrange           1     3 (fixed)
 11005                           ;	Chosen strategy is simple_byte
 11006                           
 11007  1E69  0859               	movf 1+(??_userinterface_work+0)+0,w
 11008                           	opt asmopt_off
 11009  1E6A  3A00               	xorlw	0^0	; case 0
 11010  1E6B  1903               	skipnz
 11011  1E6C  2E6E               	goto	l39177
 11012  1E6D  2E79               	goto	l8664
 11013                           	opt asmopt_on
 11014                           	
 11015  1E6E                     l39177:	
 11016                           ; Switch size 1, requested type "space"
 11017                           ; Number of cases is 3, Range of values is 1 to 3
 11018                           ; switch strategies available:
 11019                           ; Name         Instructions Cycles
 11020                           ; simple_byte           10     6 (average)
 11021                           ; direct_byte           15     9 (fixed)
 11022                           ; jumptable            263     9 (fixed)
 11023                           ;	Chosen strategy is simple_byte
 11024                           
 11025  1E6E  0858               	movf 0+(??_userinterface_work+0)+0,w
 11026                           	opt asmopt_off
 11027  1E6F  3A01               	xorlw	1^0	; case 1
 11028  1E70  1903               	skipnz
 11029  1E71  2E39               	goto	l38357
 11030  1E72  3A03               	xorlw	2^1	; case 2
 11031  1E73  1903               	skipnz
 11032  1E74  2E47               	goto	l38363
 11033  1E75  3A01               	xorlw	3^2	; case 3
 11034  1E76  1903               	skipnz
 11035  1E77  2E54               	goto	l38369
 11036  1E78  2E79               	goto	l8664
 11037                           	opt asmopt_on
 11038                           
 11039                           	line	245
 11040                           	
 11041  1E79                     l8664:	
 11042                           	line	246
 11043                           ;userinterface.c: 246: longhandled = 1;
 11044  1E79  1671               	bsf	(_longhandled/8),(_longhandled)&7
 11045                           	line	247
 11046                           	
 11047  1E7A                     l38379:	
 11048                           ;userinterface.c: 247: timeoutnever(&holdtimeout);
 11049  1E7A  305E               	movlw	(_holdtimeout&0ffh)
 11050  1E7B  00A5               	movwf	(?_timeoutnever)
 11051  1E7C  3001               	movlw	0x2/2
 11052  1E7D  00A6               	movwf	(?_timeoutnever+1)
 11053  1E7E  31A9  21AF  319D   	fcall	_timeoutnever
 11054  1E81  2E82               	goto	l38381
 11055                           	line	248
 11056                           	
 11057  1E82                     l8661:	
 11058                           	line	250
 11059                           	
 11060  1E82                     l38381:	
 11061                           ;userinterface.c: 248: }
 11062                           ;userinterface.c: 250: if (update)
 11063  1E82  0020               	movlb 0	; select bank0
 11064  1E83  085A               	movf	(userinterface_work@update),w
 11065  1E84  1D03               	skipz
 11066  1E85  2E87               	goto	u12010
 11067  1E86  2E8B               	goto	l8669
 11068  1E87                     u12010:
 11069                           	line	251
 11070                           	
 11071  1E87                     l38383:	
 11072                           ;userinterface.c: 251: update_display();
 11073  1E87  3189  218C  319D   	fcall	_update_display
 11074  1E8A  2E8B               	goto	l8669
 11075                           	
 11076  1E8B                     l8668:	
 11077                           	line	253
 11078                           	
 11079  1E8B                     l8669:	
 11080  1E8B  0008               	return
 11081                           	opt stack 0
 11082                           GLOBAL	__end_of_userinterface_work
 11083  1E8C                     	__end_of_userinterface_work:
 11084 ;; =============== function _userinterface_work ends ============
 11085                           
 11086                           	signat	_userinterface_work,88
 11087                           	global	_start_long
 11088                           psect	text3252,local,class=CODE,delta=2
 11089                           global __ptext3252
 11090  2001                     __ptext3252:
 11091                           
 11092 ;; *************** function _start_long *****************
 11093 ;; Defined at:
 11094 ;;		line 577 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;		None               void
 11101 ;; Registers used:
 11102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11110 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11111 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11112 ;;Total ram usage:        1 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    8
 11115 ;; This function calls:
 11116 ;;		_litterlanguage_running
 11117 ;;		_litterlanguage_start
 11118 ;;		_litterlanguage_stop
 11119 ;; This function is called by:
 11120 ;;		_userinterface_work
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           psect	text3252
 11124                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11125                           	line	577
 11126                           	global	__size_of_start_long
 11127  001A                     	__size_of_start_long	equ	__end_of_start_long-_start_long
 11128                           	
 11129  2001                     _start_long:	
 11130                           	opt	stack 6
 11131                           ; Regs used in _start_long: [allreg]
 11132                           	line	578
 11133                           	
 11134  2001                     l38273:	
 11135                           ;userinterface.c: 578: if (!litterlanguage_running()) {
 11136  2001  31B7  2792  31A0   	fcall	_litterlanguage_running
 11137  2004  3800               	iorlw	0
 11138  2005  1D03               	skipz
 11139  2006  2808               	goto	u11901
 11140  2007  2809               	goto	u11900
 11141  2008                     u11901:
 11142  2008  2816               	goto	l38281
 11143  2009                     u11900:
 11144                           	line	580
 11145                           	
 11146  2009                     l38275:	
 11147                           ;userinterface.c: 580: full_wash = 0;
 11148  2009  1171               	bcf	(_full_wash/8),(_full_wash)&7
 11149                           	line	582
 11150                           	
 11151  200A                     l38277:	
 11152                           ;userinterface.c: 582: litterlanguage_start(full_wash);
 11153  200A  3000               	movlw	0
 11154  200B  1971               	btfsc	(_full_wash/8),(_full_wash)&7
 11155  200C  3001               	movlw	1
 11156  200D  31AD  256A  31A0   	fcall	_litterlanguage_start
 11157                           	line	584
 11158                           	
 11159  2010                     l38279:	
 11160                           ;userinterface.c: 584: state = 2;
 11161  2010  3002               	movlw	(02h)
 11162  2011  0020               	movlb 0	; select bank0
 11163  2012  00D2               	movwf	(??_start_long+0)+0
 11164  2013  0852               	movf	(??_start_long+0)+0,w
 11165  2014  00E6               	movwf	(_state)
 11166                           	line	585
 11167                           ;userinterface.c: 585: } else
 11168  2015  281A               	goto	l8807
 11169                           	
 11170  2016                     l8805:	
 11171                           	line	587
 11172                           	
 11173  2016                     l38281:	
 11174                           ;userinterface.c: 587: litterlanguage_stop();
 11175  2016  31A1  21AC  31A0   	fcall	_litterlanguage_stop
 11176  2019  281A               	goto	l8807
 11177                           	
 11178  201A                     l8806:	
 11179                           	line	588
 11180                           	
 11181  201A                     l8807:	
 11182  201A  0008               	return
 11183                           	opt stack 0
 11184                           GLOBAL	__end_of_start_long
 11185  201B                     	__end_of_start_long:
 11186 ;; =============== function _start_long ends ============
 11187                           
 11188                           	signat	_start_long,88
 11189                           	global	_start_short
 11190                           psect	text3253,local,class=CODE,delta=2
 11191                           global __ptext3253
 11192  01DE                     __ptext3253:
 11193                           
 11194 ;; *************** function _start_short *****************
 11195 ;; Defined at:
 11196 ;;		line 563 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;		None
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;		None
 11201 ;; Return value:  Size  Location     Type
 11202 ;;		None               void
 11203 ;; Registers used:
 11204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11214 ;;Total ram usage:        1 bytes
 11215 ;; Hardware stack levels used:    1
 11216 ;; Hardware stack levels required when called:    8
 11217 ;; This function calls:
 11218 ;;		_litterlanguage_running
 11219 ;;		_litterlanguage_start
 11220 ;;		_litterlanguage_paused
 11221 ;;		_litterlanguage_pause
 11222 ;; This function is called by:
 11223 ;;		_userinterface_work
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           psect	text3253
 11227                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11228                           	line	563
 11229                           	global	__size_of_start_short
 11230  0021                     	__size_of_start_short	equ	__end_of_start_short-_start_short
 11231                           	
 11232  01DE                     _start_short:	
 11233                           	opt	stack 6
 11234                           ; Regs used in _start_short: [allreg]
 11235                           	line	564
 11236                           	
 11237  01DE                     l38263:	
 11238                           ;userinterface.c: 564: if (!litterlanguage_running()) {
 11239  01DE  31B7  2792  3181   	fcall	_litterlanguage_running
 11240  01E1  3800               	iorlw	0
 11241  01E2  1D03               	skipz
 11242  01E3  29E5               	goto	u11891
 11243  01E4  29E6               	goto	u11890
 11244  01E5                     u11891:
 11245  01E5  29F3               	goto	l38271
 11246  01E6                     u11890:
 11247                           	line	566
 11248                           	
 11249  01E6                     l38265:	
 11250                           ;userinterface.c: 566: full_wash = 1;
 11251  01E6  1571               	bsf	(_full_wash/8),(_full_wash)&7
 11252                           	line	568
 11253                           	
 11254  01E7                     l38267:	
 11255                           ;userinterface.c: 568: litterlanguage_start(full_wash);
 11256  01E7  3000               	movlw	0
 11257  01E8  1971               	btfsc	(_full_wash/8),(_full_wash)&7
 11258  01E9  3001               	movlw	1
 11259  01EA  31AD  256A  3181   	fcall	_litterlanguage_start
 11260                           	line	570
 11261                           	
 11262  01ED                     l38269:	
 11263                           ;userinterface.c: 570: state = 2;
 11264  01ED  3002               	movlw	(02h)
 11265  01EE  0020               	movlb 0	; select bank0
 11266  01EF  00D7               	movwf	(??_start_short+0)+0
 11267  01F0  0857               	movf	(??_start_short+0)+0,w
 11268  01F1  00E6               	movwf	(_state)
 11269                           	line	571
 11270                           ;userinterface.c: 571: } else
 11271  01F2  29FE               	goto	l8802
 11272                           	
 11273  01F3                     l8800:	
 11274                           	line	573
 11275                           	
 11276  01F3                     l38271:	
 11277                           ;userinterface.c: 573: litterlanguage_pause(!litterlanguage_paused());
 11278  01F3  31B7  2775  3181   	fcall	_litterlanguage_paused
 11279  01F6  3A00               	xorlw	0&0ffh
 11280  01F7  3000               	movlw	0
 11281  01F8  1903               	skipnz
 11282  01F9  3001               	movlw	1
 11283  01FA  3192  2256  3181   	fcall	_litterlanguage_pause
 11284  01FD  29FE               	goto	l8802
 11285                           	
 11286  01FE                     l8801:	
 11287                           	line	574
 11288                           	
 11289  01FE                     l8802:	
 11290  01FE  0008               	return
 11291                           	opt stack 0
 11292                           GLOBAL	__end_of_start_short
 11293  01FF                     	__end_of_start_short:
 11294 ;; =============== function _start_short ends ============
 11295                           
 11296                           	signat	_start_short,88
 11297                           	global	_catgenie_work
 11298                           psect	text3254,local,class=CODE,delta=2
 11299                           global __ptext3254
 11300  1053                     __ptext3254:
 11301                           
 11302 ;; *************** function _catgenie_work *****************
 11303 ;; Defined at:
 11304 ;;		line 230 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;		None
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;  tempmask        1   37[BANK0 ] unsigned char 
 11309 ;;  tempstate       1   39[BANK0 ] unsigned char 
 11310 ;;  temp            1   40[BANK0 ] unsigned char 
 11311 ;;  status          1   38[BANK0 ] unsigned char 
 11312 ;; Return value:  Size  Location     Type
 11313 ;;		None               void
 11314 ;; Registers used:
 11315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11322 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 11323 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 11324 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 11325 ;;Total ram usage:        8 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:    8
 11328 ;; This function calls:
 11329 ;;		_settimeout
 11330 ;;		___bmul
 11331 ;;		_timeoutexpired
 11332 ;;		_setupbutton_event
 11333 ;;		_startbutton_event
 11334 ;;		_heatsensor_event
 11335 ;;		_timeoutnever
 11336 ;; This function is called by:
 11337 ;;		_main
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           psect	text3254
 11341                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 11342                           	line	230
 11343                           	global	__size_of_catgenie_work
 11344  0203                     	__size_of_catgenie_work	equ	__end_of_catgenie_work-_catgenie_work
 11345                           	
 11346  1053                     _catgenie_work:	
 11347                           	opt	stack 7
 11348                           ; Regs used in _catgenie_work: [allreg]
 11349                           	line	231
 11350                           	
 11351  1053                     l38201:	
 11352                           ;catgenie120.c: 231: unsigned char temp = 0;
 11353  1053  0020               	movlb 0	; select bank0
 11354  1054  01C9               	clrf	(catgenie_work@temp)
 11355                           	line	235
 11356                           	
 11357  1055                     l38203:	
 11358                           ;catgenie120.c: 232: unsigned char status;
 11359                           ;catgenie120.c: 235: status = PORTB;
 11360  1055  080D               	movf	(13),w	;volatile
 11361  1056  00C2               	movwf	(??_catgenie_work+0)+0
 11362  1057  0842               	movf	(??_catgenie_work+0)+0,w
 11363  1058  00C7               	movwf	(catgenie_work@status)
 11364                           	line	236
 11365                           	
 11366  1059                     l38205:	
 11367                           ;catgenie120.c: 236: temp = status ^ PORTB_old;
 11368  1059  0847               	movf	(catgenie_work@status),w
 11369  105A  0021               	movlb 1	; select bank1
 11370  105B  065B               	xorwf	(catgenie120@PORTB_old)^080h,w
 11371  105C  0020               	movlb 0	; select bank0
 11372  105D  00C2               	movwf	(??_catgenie_work+0)+0
 11373  105E  0842               	movf	(??_catgenie_work+0)+0,w
 11374  105F  00C9               	movwf	(catgenie_work@temp)
 11375                           	line	237
 11376                           	
 11377  1060                     l38207:	
 11378                           ;catgenie120.c: 237: PORTB_old = status;
 11379  1060  0847               	movf	(catgenie_work@status),w
 11380  1061  00C2               	movwf	(??_catgenie_work+0)+0
 11381  1062  0842               	movf	(??_catgenie_work+0)+0,w
 11382  1063  0021               	movlb 1	; select bank1
 11383  1064  00DB               	movwf	(catgenie120@PORTB_old)^080h
 11384                           	line	238
 11385                           	
 11386  1065                     l38209:	
 11387                           ;catgenie120.c: 238: if (temp & (1U << (0)))
 11388  1065  0020               	movlb 0	; select bank0
 11389  1066  1C49               	btfss	(catgenie_work@temp),(0)&7
 11390  1067  2869               	goto	u11761
 11391  1068  286A               	goto	u11760
 11392  1069                     u11761:
 11393  1069  287F               	goto	l38213
 11394  106A                     u11760:
 11395                           	line	240
 11396                           	
 11397  106A                     l38211:	
 11398                           ;catgenie120.c: 239: settimeout(&debouncers[0].timer,
 11399                           ;catgenie120.c: 240: debouncers[0].timeout);
 11400  106A  30A0               	movlw	(_debouncers&0ffh)
 11401  106B  00AD               	movwf	(?_settimeout)
 11402  106C  3001               	movlw	0x3/2
 11403  106D  00AE               	movwf	(?_settimeout+1)
 11404  106E  3006               	movlw	(06h)
 11405  106F  3EA0               	addlw	_debouncers&0ffh
 11406  1070  0086               	movwf	fsr1l
 11407  1071  3001               	movlw 1	; select bank3/4
 11408  1072  0087               	movwf fsr1h	
 11409                           	
 11410  1073  3F40               	moviw	[0]fsr1
 11411  1074  00AF               	movwf	0+(?_settimeout)+02h
 11412  1075  3F41               	moviw	[1]fsr1
 11413  1076  00B0               	movwf	1+(?_settimeout)+02h
 11414  1077  3F42               	moviw	[2]fsr1
 11415  1078  00B1               	movwf	2+(?_settimeout)+02h
 11416  1079  3F43               	moviw	[3]fsr1
 11417  107A  00B2               	movwf	3+(?_settimeout)+02h
 11418  107B  31A0  20DE  3190   	fcall	_settimeout
 11419  107E  287F               	goto	l38213
 11420                           	
 11421  107F                     l10881:	
 11422                           	line	241
 11423                           	
 11424  107F                     l38213:	
 11425                           ;catgenie120.c: 241: if (temp & (1U << (5)))
 11426  107F  0020               	movlb 0	; select bank0
 11427  1080  1EC9               	btfss	(catgenie_work@temp),(5)&7
 11428  1081  2883               	goto	u11771
 11429  1082  2884               	goto	u11770
 11430  1083                     u11771:
 11431  1083  2899               	goto	l38217
 11432  1084                     u11770:
 11433                           	line	243
 11434                           	
 11435  1084                     l38215:	
 11436                           ;catgenie120.c: 242: settimeout(&debouncers[1].timer,
 11437                           ;catgenie120.c: 243: debouncers[1].timeout);
 11438  1084  30AE               	movlw	(_debouncers+0Eh&0ffh)
 11439  1085  00AD               	movwf	(?_settimeout)
 11440  1086  3001               	movlw	0x3/2
 11441  1087  00AE               	movwf	(?_settimeout+1)
 11442  1088  3014               	movlw	(014h)
 11443  1089  3EA0               	addlw	_debouncers&0ffh
 11444  108A  0086               	movwf	fsr1l
 11445  108B  3001               	movlw 1	; select bank3/4
 11446  108C  0087               	movwf fsr1h	
 11447                           	
 11448  108D  3F40               	moviw	[0]fsr1
 11449  108E  00AF               	movwf	0+(?_settimeout)+02h
 11450  108F  3F41               	moviw	[1]fsr1
 11451  1090  00B0               	movwf	1+(?_settimeout)+02h
 11452  1091  3F42               	moviw	[2]fsr1
 11453  1092  00B1               	movwf	2+(?_settimeout)+02h
 11454  1093  3F43               	moviw	[3]fsr1
 11455  1094  00B2               	movwf	3+(?_settimeout)+02h
 11456  1095  31A0  20DE  3190   	fcall	_settimeout
 11457  1098  2899               	goto	l38217
 11458                           	
 11459  1099                     l10882:	
 11460                           	line	244
 11461                           	
 11462  1099                     l38217:	
 11463                           ;catgenie120.c: 244: if (temp & (1U << (1)))
 11464  1099  0020               	movlb 0	; select bank0
 11465  109A  1CC9               	btfss	(catgenie_work@temp),(1)&7
 11466  109B  289D               	goto	u11781
 11467  109C  289E               	goto	u11780
 11468  109D                     u11781:
 11469  109D  28B3               	goto	l38221
 11470  109E                     u11780:
 11471                           	line	247
 11472                           	
 11473  109E                     l38219:	
 11474                           ;catgenie120.c: 246: settimeout(&debouncers[2].timer,
 11475                           ;catgenie120.c: 247: debouncers[2].timeout);
 11476  109E  30BC               	movlw	(_debouncers+01Ch&0ffh)
 11477  109F  00AD               	movwf	(?_settimeout)
 11478  10A0  3001               	movlw	0x3/2
 11479  10A1  00AE               	movwf	(?_settimeout+1)
 11480  10A2  3022               	movlw	(022h)
 11481  10A3  3EA0               	addlw	_debouncers&0ffh
 11482  10A4  0086               	movwf	fsr1l
 11483  10A5  3001               	movlw 1	; select bank3/4
 11484  10A6  0087               	movwf fsr1h	
 11485                           	
 11486  10A7  3F40               	moviw	[0]fsr1
 11487  10A8  00AF               	movwf	0+(?_settimeout)+02h
 11488  10A9  3F41               	moviw	[1]fsr1
 11489  10AA  00B0               	movwf	1+(?_settimeout)+02h
 11490  10AB  3F42               	moviw	[2]fsr1
 11491  10AC  00B1               	movwf	2+(?_settimeout)+02h
 11492  10AD  3F43               	moviw	[3]fsr1
 11493  10AE  00B2               	movwf	3+(?_settimeout)+02h
 11494  10AF  31A0  20DE  3190   	fcall	_settimeout
 11495  10B2  28B3               	goto	l38221
 11496                           	
 11497  10B3                     l10883:	
 11498                           	line	250
 11499                           	
 11500  10B3                     l38221:	
 11501                           ;catgenie120.c: 250: for (temp = 0; temp < 3; temp++)
 11502  10B3  0020               	movlb 0	; select bank0
 11503  10B4  01C9               	clrf	(catgenie_work@temp)
 11504                           	
 11505  10B5                     l38223:	
 11506  10B5  3003               	movlw	(03h)
 11507  10B6  0249               	subwf	(catgenie_work@temp),w
 11508  10B7  1C03               	skipc
 11509  10B8  28BA               	goto	u11791
 11510  10B9  28BB               	goto	u11790
 11511  10BA                     u11791:
 11512  10BA  28BD               	goto	l38227
 11513  10BB                     u11790:
 11514  10BB  2958               	goto	l10885
 11515                           	
 11516  10BC                     l38225:	
 11517  10BC  2958               	goto	l10885
 11518                           	line	251
 11519                           	
 11520  10BD                     l10884:	
 11521                           	
 11522  10BD                     l38227:	
 11523                           ;catgenie120.c: 251: if (timeoutexpired(&debouncers[temp].timer)) {
 11524  10BD  300E               	movlw	(0Eh)
 11525  10BE  00C2               	movwf	(??_catgenie_work+0)+0
 11526  10BF  0842               	movf	(??_catgenie_work+0)+0,w
 11527  10C0  00A1               	movwf	(?___bmul)
 11528  10C1  0849               	movf	(catgenie_work@temp),w
 11529  10C2  31A9  2179  3190   	fcall	___bmul
 11530  10C5  3EA0               	addlw	_debouncers&0ffh
 11531  10C6  0020               	movlb 0	; select bank0
 11532  10C7  00A9               	movwf	(?_timeoutexpired)
 11533  10C8  3001               	movlw	(0x2/2)
 11534  10C9  00AA               	movwf	(?_timeoutexpired+1)
 11535  10CA  31A3  235B  3190   	fcall	_timeoutexpired
 11536  10CD  3A00               	xorlw	0&0ffh
 11537  10CE  1903               	skipnz
 11538  10CF  28D1               	goto	u11801
 11539  10D0  28D2               	goto	u11800
 11540  10D1                     u11801:
 11541  10D1  294D               	goto	l38239
 11542  10D2                     u11800:
 11543                           	line	252
 11544                           	
 11545  10D2                     l38229:	
 11546                           ;catgenie120.c: 252: unsigned char tempstate = *debouncers[temp].port;
 11547  10D2  300E               	movlw	(0Eh)
 11548  10D3  0020               	movlb 0	; select bank0
 11549  10D4  00C2               	movwf	(??_catgenie_work+0)+0
 11550  10D5  0842               	movf	(??_catgenie_work+0)+0,w
 11551  10D6  00A1               	movwf	(?___bmul)
 11552  10D7  0849               	movf	(catgenie_work@temp),w
 11553  10D8  31A9  2179  3190   	fcall	___bmul
 11554  10DB  3E0B               	addlw	0Bh
 11555  10DC  3EA0               	addlw	_debouncers&0ffh
 11556  10DD  0086               	movwf	fsr1l
 11557  10DE  3001               	movlw 1	; select bank3/4
 11558  10DF  0087               	movwf fsr1h	
 11559                           	
 11560  10E0  0801               	movf	indf1,w
 11561  10E1  0086               	movwf	fsr1l
 11562  10E2  0187               	clrf fsr1h	
 11563                           	
 11564  10E3  0801               	movf	indf1,w
 11565  10E4  0020               	movlb 0	; select bank0
 11566  10E5  00C3               	movwf	(??_catgenie_work+1)+0
 11567  10E6  0843               	movf	(??_catgenie_work+1)+0,w
 11568  10E7  00C8               	movwf	(catgenie_work@tempstate)
 11569                           	line	253
 11570                           ;catgenie120.c: 253: tempstate &= debouncers[temp].port_mask;
 11571  10E8  300E               	movlw	(0Eh)
 11572  10E9  00C2               	movwf	(??_catgenie_work+0)+0
 11573  10EA  0842               	movf	(??_catgenie_work+0)+0,w
 11574  10EB  00A1               	movwf	(?___bmul)
 11575  10EC  0849               	movf	(catgenie_work@temp),w
 11576  10ED  31A9  2179  3190   	fcall	___bmul
 11577  10F0  3E0C               	addlw	0Ch
 11578  10F1  3EA0               	addlw	_debouncers&0ffh
 11579  10F2  0086               	movwf	fsr1l
 11580  10F3  3001               	movlw 1	; select bank3/4
 11581  10F4  0087               	movwf fsr1h	
 11582                           	
 11583  10F5  0801               	movf	indf1,w
 11584  10F6  0020               	movlb 0	; select bank0
 11585  10F7  00C3               	movwf	(??_catgenie_work+1)+0
 11586  10F8  0843               	movf	(??_catgenie_work+1)+0,w
 11587  10F9  05C8               	andwf	(catgenie_work@tempstate),f
 11588                           	line	255
 11589                           ;catgenie120.c: 255: if (tempstate != debouncers[temp].state) {
 11590  10FA  300E               	movlw	(0Eh)
 11591  10FB  00C2               	movwf	(??_catgenie_work+0)+0
 11592  10FC  0842               	movf	(??_catgenie_work+0)+0,w
 11593  10FD  00A1               	movwf	(?___bmul)
 11594  10FE  0849               	movf	(catgenie_work@temp),w
 11595  10FF  31A9  2179  3190   	fcall	___bmul
 11596  1102  3E0A               	addlw	0Ah
 11597  1103  3EA0               	addlw	_debouncers&0ffh
 11598  1104  0086               	movwf	fsr1l
 11599  1105  3001               	movlw 1	; select bank3/4
 11600  1106  0087               	movwf fsr1h	
 11601                           	
 11602  1107  0801               	movf	indf1,w
 11603  1108  0020               	movlb 0	; select bank0
 11604  1109  0648               	xorwf	(catgenie_work@tempstate),w
 11605  110A  1903               	skipnz
 11606  110B  290D               	goto	u11811
 11607  110C  290E               	goto	u11810
 11608  110D                     u11811:
 11609  110D  293C               	goto	l38237
 11610  110E                     u11810:
 11611                           	line	257
 11612                           	
 11613  110E                     l38231:	
 11614                           ;catgenie120.c: 257: debouncers[temp].handler(tempstate);
 11615  110E  300E               	movlw	(0Eh)
 11616  110F  00C2               	movwf	(??_catgenie_work+0)+0
 11617  1110  0842               	movf	(??_catgenie_work+0)+0,w
 11618  1111  00A1               	movwf	(?___bmul)
 11619  1112  0849               	movf	(catgenie_work@temp),w
 11620  1113  31A9  2179  3190   	fcall	___bmul
 11621  1116  3E0D               	addlw	0Dh
 11622  1117  3EA0               	addlw	_debouncers&0ffh
 11623  1118  0086               	movwf	fsr1l
 11624  1119  3001               	movlw 1	; select bank3/4
 11625  111A  0087               	movwf fsr1h	
 11626                           	
 11627  111B  0801               	movf	indf1,w
 11628  111C  0020               	movlb 0	; select bank0
 11629  111D  00C3               	movwf	(??_catgenie_work+1)+0
 11630  111E  0843               	movf	(??_catgenie_work+1)+0,w
 11631  111F  00C5               	movwf	(_catgenie_work$30512)
 11632                           	
 11633  1120                     l38233:	
 11634                           ;catgenie120.c: 257: debouncers[temp].handler(tempstate);
 11635  1120  0848               	movf	(catgenie_work@tempstate),w
 11636  1121  00C2               	movwf	(??_catgenie_work+0)+0
 11637  1122  0842               	movf	(??_catgenie_work+0)+0,w
 11638  1123  00C0               	movwf	(?_setupbutton_event)
 11639  1124  0845               	movf	(_catgenie_work$30512),w
 11640  1125  3181  2100  3190   	fcall	fptable
 11641                           	line	258
 11642                           	
 11643  1128                     l38235:	
 11644                           ;catgenie120.c: 258: debouncers[temp].state = tempstate;
 11645  1128  0020               	movlb 0	; select bank0
 11646  1129  0848               	movf	(catgenie_work@tempstate),w
 11647  112A  00C2               	movwf	(??_catgenie_work+0)+0
 11648  112B  300E               	movlw	(0Eh)
 11649  112C  00C3               	movwf	(??_catgenie_work+1)+0
 11650  112D  0843               	movf	(??_catgenie_work+1)+0,w
 11651  112E  00A1               	movwf	(?___bmul)
 11652  112F  0849               	movf	(catgenie_work@temp),w
 11653  1130  31A9  2179  3190   	fcall	___bmul
 11654  1133  3E0A               	addlw	0Ah
 11655  1134  3EA0               	addlw	_debouncers&0ffh
 11656  1135  0086               	movwf	fsr1l
 11657  1136  3001               	movlw 1	; select bank3/4
 11658  1137  0087               	movwf fsr1h	
 11659                           	
 11660  1138  0020               	movlb 0	; select bank0
 11661  1139  0842               	movf	(??_catgenie_work+0)+0,w
 11662  113A  0081               	movwf	indf1
 11663  113B  293C               	goto	l38237
 11664                           	line	259
 11665                           	
 11666  113C                     l10887:	
 11667                           	line	260
 11668                           	
 11669  113C                     l38237:	
 11670                           ;catgenie120.c: 259: }
 11671                           ;catgenie120.c: 260: timeoutnever(&debouncers[temp].timer);
 11672  113C  300E               	movlw	(0Eh)
 11673  113D  00C2               	movwf	(??_catgenie_work+0)+0
 11674  113E  0842               	movf	(??_catgenie_work+0)+0,w
 11675  113F  00A1               	movwf	(?___bmul)
 11676  1140  0849               	movf	(catgenie_work@temp),w
 11677  1141  31A9  2179  3190   	fcall	___bmul
 11678  1144  3EA0               	addlw	_debouncers&0ffh
 11679  1145  0020               	movlb 0	; select bank0
 11680  1146  00A5               	movwf	(?_timeoutnever)
 11681  1147  3001               	movlw	(0x3/2)
 11682  1148  00A6               	movwf	(?_timeoutnever+1)
 11683  1149  31A9  21AF  3190   	fcall	_timeoutnever
 11684  114C  294D               	goto	l38239
 11685                           	line	261
 11686                           	
 11687  114D                     l10886:	
 11688                           	line	250
 11689                           	
 11690  114D                     l38239:	
 11691  114D  3001               	movlw	(01h)
 11692  114E  0020               	movlb 0	; select bank0
 11693  114F  00C2               	movwf	(??_catgenie_work+0)+0
 11694  1150  0842               	movf	(??_catgenie_work+0)+0,w
 11695  1151  07C9               	addwf	(catgenie_work@temp),f
 11696                           	
 11697  1152                     l38241:	
 11698  1152  3003               	movlw	(03h)
 11699  1153  0249               	subwf	(catgenie_work@temp),w
 11700  1154  1C03               	skipc
 11701  1155  2957               	goto	u11821
 11702  1156  2958               	goto	u11820
 11703  1157                     u11821:
 11704  1157  28BD               	goto	l38227
 11705  1158                     u11820:
 11706                           	
 11707  1158                     l10885:	
 11708                           	line	264
 11709                           ;catgenie120.c: 261: }
 11710                           ;catgenie120.c: 264: for (temp = 0; temp < 5; temp++)
 11711  1158  01C9               	clrf	(catgenie_work@temp)
 11712                           	
 11713  1159                     l38243:	
 11714  1159  3005               	movlw	(05h)
 11715  115A  0249               	subwf	(catgenie_work@temp),w
 11716  115B  1C03               	skipc
 11717  115C  295E               	goto	u11831
 11718  115D  295F               	goto	u11830
 11719  115E                     u11831:
 11720  115E  2961               	goto	l38247
 11721  115F                     u11830:
 11722  115F  2A55               	goto	l10895
 11723                           	
 11724  1160                     l38245:	
 11725  1160  2A55               	goto	l10895
 11726                           	line	265
 11727                           	
 11728  1161                     l10888:	
 11729                           	
 11730  1161                     l38247:	
 11731                           ;catgenie120.c: 265: if (timeoutexpired(&pacers[temp].timer)) {
 11732  1161  300B               	movlw	(0Bh)
 11733  1162  00C2               	movwf	(??_catgenie_work+0)+0
 11734  1163  0842               	movf	(??_catgenie_work+0)+0,w
 11735  1164  00A1               	movwf	(?___bmul)
 11736  1165  0849               	movf	(catgenie_work@temp),w
 11737  1166  31A9  2179  3190   	fcall	___bmul
 11738  1169  3E20               	addlw	_pacers&0ffh
 11739  116A  0020               	movlb 0	; select bank0
 11740  116B  00A9               	movwf	(?_timeoutexpired)
 11741  116C  3002               	movlw	(0x4/2)
 11742  116D  00AA               	movwf	(?_timeoutexpired+1)
 11743  116E  31A3  235B  3190   	fcall	_timeoutexpired
 11744  1171  3A00               	xorlw	0&0ffh
 11745  1172  1903               	skipnz
 11746  1173  2975               	goto	u11841
 11747  1174  2976               	goto	u11840
 11748  1175                     u11841:
 11749  1175  2A49               	goto	l38259
 11750  1176                     u11840:
 11751                           	line	266
 11752                           	
 11753  1176                     l38249:	
 11754                           ;catgenie120.c: 266: unsigned char tempmask = pacers[temp].mask;
 11755  1176  300B               	movlw	(0Bh)
 11756  1177  0020               	movlb 0	; select bank0
 11757  1178  00C2               	movwf	(??_catgenie_work+0)+0
 11758  1179  0842               	movf	(??_catgenie_work+0)+0,w
 11759  117A  00A1               	movwf	(?___bmul)
 11760  117B  0849               	movf	(catgenie_work@temp),w
 11761  117C  31A9  2179  3190   	fcall	___bmul
 11762  117F  3E06               	addlw	06h
 11763  1180  3E20               	addlw	_pacers&0ffh
 11764  1181  0086               	movwf	fsr1l
 11765  1182  3002               	movlw 2	; select bank4/5
 11766  1183  0087               	movwf fsr1h	
 11767                           	
 11768  1184  0801               	movf	indf1,w
 11769  1185  0020               	movlb 0	; select bank0
 11770  1186  00C3               	movwf	(??_catgenie_work+1)+0
 11771  1187  0843               	movf	(??_catgenie_work+1)+0,w
 11772  1188  00C6               	movwf	(catgenie_work@tempmask)
 11773                           	line	269
 11774                           ;catgenie120.c: 269: settimeout(&pacers[temp].timer, (((((4UL * (1000UL * ((1000UL)))))/
                                 4)/8)/8));
 11775  1189  300B               	movlw	(0Bh)
 11776  118A  00C2               	movwf	(??_catgenie_work+0)+0
 11777  118B  0842               	movf	(??_catgenie_work+0)+0,w
 11778  118C  00A1               	movwf	(?___bmul)
 11779  118D  0849               	movf	(catgenie_work@temp),w
 11780  118E  31A9  2179  3190   	fcall	___bmul
 11781  1191  3E20               	addlw	_pacers&0ffh
 11782  1192  0020               	movlb 0	; select bank0
 11783  1193  00AD               	movwf	(?_settimeout)
 11784  1194  3002               	movlw	(0x4/2)
 11785  1195  00AE               	movwf	(?_settimeout+1)
 11786  1196  3000               	movlw	0
 11787  1197  00B2               	movwf	3+(?_settimeout)+02h
 11788  1198  3000               	movlw	0
 11789  1199  00B1               	movwf	2+(?_settimeout)+02h
 11790  119A  303D               	movlw	03Dh
 11791  119B  00B0               	movwf	1+(?_settimeout)+02h
 11792  119C  3009               	movlw	09h
 11793  119D  00AF               	movwf	0+(?_settimeout)+02h
 11794                           
 11795  119E  31A0  20DE  3190   	fcall	_settimeout
 11796                           	line	271
 11797                           ;catgenie120.c: 271: if (pacers[temp].pattern & tempmask)
 11798  11A1  300B               	movlw	(0Bh)
 11799  11A2  0020               	movlb 0	; select bank0
 11800  11A3  00C2               	movwf	(??_catgenie_work+0)+0
 11801  11A4  0842               	movf	(??_catgenie_work+0)+0,w
 11802  11A5  00A1               	movwf	(?___bmul)
 11803  11A6  0849               	movf	(catgenie_work@temp),w
 11804  11A7  31A9  2179  3190   	fcall	___bmul
 11805  11AA  3E07               	addlw	07h
 11806  11AB  3E20               	addlw	_pacers&0ffh
 11807  11AC  0086               	movwf	fsr1l
 11808  11AD  3002               	movlw 2	; select bank4/5
 11809  11AE  0087               	movwf fsr1h	
 11810                           	
 11811  11AF  0801               	movf	indf1,w
 11812  11B0  0020               	movlb 0	; select bank0
 11813  11B1  0546               	andwf	(catgenie_work@tempmask),w
 11814  11B2  1903               	btfsc	status,2
 11815  11B3  29B5               	goto	u11851
 11816  11B4  29B6               	goto	u11850
 11817  11B5                     u11851:
 11818  11B5  29DB               	goto	l38253
 11819  11B6                     u11850:
 11820                           	line	272
 11821                           	
 11822  11B6                     l38251:	
 11823                           ;catgenie120.c: 272: *pacers[temp].port |= pacers[temp].port_mask;
 11824  11B6  300B               	movlw	(0Bh)
 11825  11B7  00C2               	movwf	(??_catgenie_work+0)+0
 11826  11B8  0842               	movf	(??_catgenie_work+0)+0,w
 11827  11B9  00A1               	movwf	(?___bmul)
 11828  11BA  0849               	movf	(catgenie_work@temp),w
 11829  11BB  31A9  2179  3190   	fcall	___bmul
 11830  11BE  3E0A               	addlw	0Ah
 11831  11BF  3E20               	addlw	_pacers&0ffh
 11832  11C0  0086               	movwf	fsr1l
 11833  11C1  3002               	movlw 2	; select bank4/5
 11834  11C2  0087               	movwf fsr1h	
 11835                           	
 11836  11C3  0801               	movf	indf1,w
 11837  11C4  0020               	movlb 0	; select bank0
 11838  11C5  00C3               	movwf	(??_catgenie_work+1)+0
 11839  11C6  300B               	movlw	(0Bh)
 11840  11C7  00C4               	movwf	(??_catgenie_work+2)+0
 11841  11C8  0844               	movf	(??_catgenie_work+2)+0,w
 11842  11C9  00A1               	movwf	(?___bmul)
 11843  11CA  0849               	movf	(catgenie_work@temp),w
 11844  11CB  31A9  2179  3190   	fcall	___bmul
 11845  11CE  3E09               	addlw	09h
 11846  11CF  3E20               	addlw	_pacers&0ffh
 11847  11D0  0086               	movwf	fsr1l
 11848  11D1  3002               	movlw 2	; select bank4/5
 11849  11D2  0087               	movwf fsr1h	
 11850                           	
 11851  11D3  0801               	movf	indf1,w
 11852  11D4  0086               	movwf	fsr1l
 11853  11D5  3001               	movlw 1	; select bank2/3
 11854  11D6  0087               	movwf fsr1h	
 11855                           	
 11856  11D7  0020               	movlb 0	; select bank0
 11857  11D8  0843               	movf	(??_catgenie_work+1)+0,w
 11858  11D9  0481               	iorwf	indf1,f
 11859  11DA  29FF               	goto	l10892
 11860                           	line	273
 11861                           	
 11862  11DB                     l10891:	
 11863                           	line	274
 11864                           	
 11865  11DB                     l38253:	
 11866                           ;catgenie120.c: 273: else
 11867                           ;catgenie120.c: 274: *pacers[temp].port &= ~pacers[temp].port_mask;
 11868  11DB  300B               	movlw	(0Bh)
 11869  11DC  00C2               	movwf	(??_catgenie_work+0)+0
 11870  11DD  0842               	movf	(??_catgenie_work+0)+0,w
 11871  11DE  00A1               	movwf	(?___bmul)
 11872  11DF  0849               	movf	(catgenie_work@temp),w
 11873  11E0  31A9  2179  3190   	fcall	___bmul
 11874  11E3  3E0A               	addlw	0Ah
 11875  11E4  3E20               	addlw	_pacers&0ffh
 11876  11E5  0086               	movwf	fsr1l
 11877  11E6  3002               	movlw 2	; select bank4/5
 11878  11E7  0087               	movwf fsr1h	
 11879                           	
 11880  11E8  0901               	comf	indf1,w
 11881  11E9  0020               	movlb 0	; select bank0
 11882  11EA  00C3               	movwf	(??_catgenie_work+1)+0
 11883  11EB  300B               	movlw	(0Bh)
 11884  11EC  00C4               	movwf	(??_catgenie_work+2)+0
 11885  11ED  0844               	movf	(??_catgenie_work+2)+0,w
 11886  11EE  00A1               	movwf	(?___bmul)
 11887  11EF  0849               	movf	(catgenie_work@temp),w
 11888  11F0  31A9  2179  3190   	fcall	___bmul
 11889  11F3  3E09               	addlw	09h
 11890  11F4  3E20               	addlw	_pacers&0ffh
 11891  11F5  0086               	movwf	fsr1l
 11892  11F6  3002               	movlw 2	; select bank4/5
 11893  11F7  0087               	movwf fsr1h	
 11894                           	
 11895  11F8  0801               	movf	indf1,w
 11896  11F9  0086               	movwf	fsr1l
 11897  11FA  3001               	movlw 1	; select bank2/3
 11898  11FB  0087               	movwf fsr1h	
 11899                           	
 11900  11FC  0020               	movlb 0	; select bank0
 11901  11FD  0843               	movf	(??_catgenie_work+1)+0,w
 11902  11FE  0581               	andwf	indf1,f
 11903                           	
 11904  11FF                     l10892:	
 11905                           	line	276
 11906                           ;catgenie120.c: 276: if (!(pacers[temp].mask <<= 1)) {
 11907  11FF  300B               	movlw	(0Bh)
 11908  1200  00C2               	movwf	(??_catgenie_work+0)+0
 11909  1201  0842               	movf	(??_catgenie_work+0)+0,w
 11910  1202  00A1               	movwf	(?___bmul)
 11911  1203  0849               	movf	(catgenie_work@temp),w
 11912  1204  31A9  2179  3190   	fcall	___bmul
 11913  1207  3E06               	addlw	06h
 11914  1208  3E20               	addlw	_pacers&0ffh
 11915  1209  0086               	movwf	fsr1l
 11916  120A  3002               	movlw 2	; select bank4/5
 11917  120B  0087               	movwf fsr1h	
 11918                           	
 11919  120C  1003               	clrc
 11920  120D  0D81               	rlf	indf1,f
 11921                           
 11922  120E  0881               	movf	(indf1),f
 11923  120F  1D03               	skipz
 11924  1210  2A12               	goto	u11861
 11925  1211  2A13               	goto	u11860
 11926  1212                     u11861:
 11927  1212  2A49               	goto	l38259
 11928  1213                     u11860:
 11929                           	line	277
 11930                           	
 11931  1213                     l38255:	
 11932                           ;catgenie120.c: 277: pacers[temp].mask = 1;
 11933  1213  300B               	movlw	(0Bh)
 11934  1214  0020               	movlb 0	; select bank0
 11935  1215  00C2               	movwf	(??_catgenie_work+0)+0
 11936  1216  0842               	movf	(??_catgenie_work+0)+0,w
 11937  1217  00A1               	movwf	(?___bmul)
 11938  1218  0849               	movf	(catgenie_work@temp),w
 11939  1219  31A9  2179  3190   	fcall	___bmul
 11940  121C  3E06               	addlw	06h
 11941  121D  3E20               	addlw	_pacers&0ffh
 11942  121E  0086               	movwf	fsr1l
 11943  121F  3002               	movlw 2	; select bank4/5
 11944  1220  0087               	movwf fsr1h	
 11945                           	
 11946  1221  0181               	clrf	indf1
 11947  1222  1403               	bsf	status,0
 11948  1223  0D81               	rlf	indf1,f
 11949                           	line	279
 11950                           ;catgenie120.c: 279: if (!pacers[temp].repeat)
 11951  1224  300B               	movlw	(0Bh)
 11952  1225  0020               	movlb 0	; select bank0
 11953  1226  00C2               	movwf	(??_catgenie_work+0)+0
 11954  1227  0842               	movf	(??_catgenie_work+0)+0,w
 11955  1228  00A1               	movwf	(?___bmul)
 11956  1229  0849               	movf	(catgenie_work@temp),w
 11957  122A  31A9  2179  3190   	fcall	___bmul
 11958  122D  3E08               	addlw	08h
 11959  122E  3E20               	addlw	_pacers&0ffh
 11960  122F  0086               	movwf	fsr1l
 11961  1230  3002               	movlw 2	; select bank4/5
 11962  1231  0087               	movwf fsr1h	
 11963                           	
 11964  1232  0881               	movf	indf1,f
 11965  1233  1D03               	skipz
 11966  1234  2A36               	goto	u11871
 11967  1235  2A37               	goto	u11870
 11968  1236                     u11871:
 11969  1236  2A49               	goto	l38259
 11970  1237                     u11870:
 11971                           	line	280
 11972                           	
 11973  1237                     l38257:	
 11974                           ;catgenie120.c: 280: pacers[temp].pattern = 0;
 11975  1237  300B               	movlw	(0Bh)
 11976  1238  0020               	movlb 0	; select bank0
 11977  1239  00C2               	movwf	(??_catgenie_work+0)+0
 11978  123A  0842               	movf	(??_catgenie_work+0)+0,w
 11979  123B  00A1               	movwf	(?___bmul)
 11980  123C  0849               	movf	(catgenie_work@temp),w
 11981  123D  31A9  2179  3190   	fcall	___bmul
 11982  1240  3E07               	addlw	07h
 11983  1241  3E20               	addlw	_pacers&0ffh
 11984  1242  0086               	movwf	fsr1l
 11985  1243  3002               	movlw 2	; select bank4/5
 11986  1244  0087               	movwf fsr1h	
 11987                           	
 11988  1245  0181               	clrf	indf1
 11989  1246  2A49               	goto	l38259
 11990                           	
 11991  1247                     l10894:	
 11992  1247  2A49               	goto	l38259
 11993                           	line	281
 11994                           	
 11995  1248                     l10893:	
 11996  1248  2A49               	goto	l38259
 11997                           	line	282
 11998                           	
 11999  1249                     l10890:	
 12000                           	line	264
 12001                           	
 12002  1249                     l38259:	
 12003  1249  3001               	movlw	(01h)
 12004  124A  0020               	movlb 0	; select bank0
 12005  124B  00C2               	movwf	(??_catgenie_work+0)+0
 12006  124C  0842               	movf	(??_catgenie_work+0)+0,w
 12007  124D  07C9               	addwf	(catgenie_work@temp),f
 12008                           	
 12009  124E                     l38261:	
 12010  124E  3005               	movlw	(05h)
 12011  124F  0249               	subwf	(catgenie_work@temp),w
 12012  1250  1C03               	skipc
 12013  1251  2A53               	goto	u11881
 12014  1252  2A54               	goto	u11880
 12015  1253                     u11881:
 12016  1253  2961               	goto	l38247
 12017  1254                     u11880:
 12018  1254  2A55               	goto	l10895
 12019                           	
 12020  1255                     l10889:	
 12021                           	line	283
 12022                           	
 12023  1255                     l10895:	
 12024  1255  0008               	return
 12025                           	opt stack 0
 12026                           GLOBAL	__end_of_catgenie_work
 12027  1256                     	__end_of_catgenie_work:
 12028 ;; =============== function _catgenie_work ends ============
 12029                           
 12030                           	signat	_catgenie_work,88
 12031                           	global	_water_work
 12032                           psect	text3255,local,class=CODE,delta=2
 12033                           global __ptext3255
 12034  1942                     __ptext3255:
 12035                           
 12036 ;; *************** function _water_work *****************
 12037 ;; Defined at:
 12038 ;;		line 140 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;		None
 12041 ;; Auto vars:     Size  Location     Type
 12042 ;;		None
 12043 ;; Return value:  Size  Location     Type
 12044 ;;		None               void
 12045 ;; Registers used:
 12046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12047 ;; Tracked objects:
 12048 ;;		On entry : 0/0
 12049 ;;		On exit  : 0/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12056 ;;Total ram usage:        1 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:    8
 12059 ;; This function calls:
 12060 ;;		_timeoutexpired
 12061 ;;		_settimeout
 12062 ;;		_watersensor_event
 12063 ;; This function is called by:
 12064 ;;		_main
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           psect	text3255
 12068                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 12069                           	line	140
 12070                           	global	__size_of_water_work
 12071  00BD                     	__size_of_water_work	equ	__end_of_water_work-_water_work
 12072                           	
 12073  1942                     _water_work:	
 12074                           	opt	stack 7
 12075                           ; Regs used in _water_work: [allreg]
 12076                           	line	141
 12077                           	
 12078  1942                     l38145:	
 12079                           ;water.c: 141: switch (state) {
 12080  1942  29F2               	goto	l38199
 12081                           	line	142
 12082                           ;water.c: 142: default:
 12083                           	
 12084  1943                     l23461:	
 12085                           	line	143
 12086                           ;water.c: 143: state = 0;
 12087  1943  01DC               	clrf	(water@state)^080h
 12088  1944  2945               	goto	l38147
 12089                           	line	144
 12090                           ;water.c: 144: case 0:
 12091                           	
 12092  1945                     l23462:	
 12093                           	line	145
 12094                           	
 12095  1945                     l38147:	
 12096                           ;water.c: 145: if (!timeoutexpired(&sensortimer))
 12097  1945  3052               	movlw	(_sensortimer&0ffh)
 12098  1946  0020               	movlb 0	; select bank0
 12099  1947  00A9               	movwf	(?_timeoutexpired)
 12100  1948  3001               	movlw	0x2/2
 12101  1949  00AA               	movwf	(?_timeoutexpired+1)
 12102  194A  31A3  235B  3199   	fcall	_timeoutexpired
 12103  194D  3800               	iorlw	0
 12104  194E  1D03               	skipz
 12105  194F  2951               	goto	u11641
 12106  1950  2952               	goto	u11640
 12107  1951                     u11641:
 12108  1951  2954               	goto	l23463
 12109  1952                     u11640:
 12110  1952  29FE               	goto	l23474
 12111                           	line	146
 12112                           	
 12113  1953                     l38149:	
 12114                           ;water.c: 146: break;
 12115  1953  29FE               	goto	l23474
 12116                           	
 12117  1954                     l23463:	
 12118                           	line	148
 12119                           ;water.c: 148: LATB |= (1U << (2));
 12120  1954  0022               	movlb 2	; select bank2
 12121  1955  150D               	bsf	(269)^0100h+(2/8),(2)&7	;volatile
 12122                           	line	150
 12123                           	
 12124  1956                     l38151:	
 12125                           ;water.c: 150: settimeout(&sensortimer, (((((4UL * (1000UL * ((1000UL)))))/4)/8)/1000));
 12126  1956  3052               	movlw	(_sensortimer&0ffh)
 12127  1957  0020               	movlb 0	; select bank0
 12128  1958  00AD               	movwf	(?_settimeout)
 12129  1959  3001               	movlw	0x2/2
 12130  195A  00AE               	movwf	(?_settimeout+1)
 12131  195B  3000               	movlw	0
 12132  195C  00B2               	movwf	3+(?_settimeout)+02h
 12133  195D  3000               	movlw	0
 12134  195E  00B1               	movwf	2+(?_settimeout)+02h
 12135  195F  3000               	movlw	0
 12136  1960  00B0               	movwf	1+(?_settimeout)+02h
 12137  1961  307D               	movlw	07Dh
 12138  1962  00AF               	movwf	0+(?_settimeout)+02h
 12139                           
 12140  1963  31A0  20DE  3199   	fcall	_settimeout
 12141                           	line	152
 12142                           	
 12143  1966                     l38153:	
 12144                           ;water.c: 152: state = 1;
 12145  1966  0021               	movlb 1	; select bank1
 12146  1967  01DC               	clrf	(water@state)^080h
 12147  1968  1403               	bsf	status,0
 12148  1969  0DDC               	rlf	(water@state)^080h,f
 12149                           	line	156
 12150                           ;water.c: 156: break;
 12151  196A  29FE               	goto	l23474
 12152                           	line	157
 12153                           ;water.c: 157: case 1:
 12154                           	
 12155  196B                     l23465:	
 12156                           	line	158
 12157                           	
 12158  196B                     l38155:	
 12159                           ;water.c: 158: if (!timeoutexpired(&sensortimer))
 12160  196B  3052               	movlw	(_sensortimer&0ffh)
 12161  196C  0020               	movlb 0	; select bank0
 12162  196D  00A9               	movwf	(?_timeoutexpired)
 12163  196E  3001               	movlw	0x2/2
 12164  196F  00AA               	movwf	(?_timeoutexpired+1)
 12165  1970  31A3  235B  3199   	fcall	_timeoutexpired
 12166  1973  3800               	iorlw	0
 12167  1974  1D03               	skipz
 12168  1975  2977               	goto	u11651
 12169  1976  2978               	goto	u11650
 12170  1977                     u11651:
 12171  1977  297A               	goto	l23466
 12172  1978                     u11650:
 12173  1978  29FE               	goto	l23474
 12174                           	line	159
 12175                           	
 12176  1979                     l38157:	
 12177                           ;water.c: 159: break;
 12178  1979  29FE               	goto	l23474
 12179                           	
 12180  197A                     l23466:	
 12181                           	line	161
 12182                           ;water.c: 161: ADCON0bits.GO = 1;
 12183  197A  0021               	movlb 1	; select bank1
 12184  197B  149D               	bsf	(157)^080h,1	;volatile
 12185                           	line	162
 12186                           	
 12187  197C                     l38159:	
 12188                           ;water.c: 162: state = 2;
 12189  197C  3002               	movlw	(02h)
 12190  197D  0020               	movlb 0	; select bank0
 12191  197E  00D3               	movwf	(??_water_work+0)+0
 12192  197F  0853               	movf	(??_water_work+0)+0,w
 12193  1980  0021               	movlb 1	; select bank1
 12194  1981  00DC               	movwf	(water@state)^080h
 12195                           	line	163
 12196                           ;water.c: 163: break;
 12197  1982  29FE               	goto	l23474
 12198                           	line	164
 12199                           ;water.c: 164: case 2:
 12200                           	
 12201  1983                     l23467:	
 12202                           	line	166
 12203                           ;water.c: 166: if (ADCON0bits.nDONE)
 12204  1983  1C9D               	btfss	(157)^080h,1	;volatile
 12205  1984  2986               	goto	u11661
 12206  1985  2987               	goto	u11660
 12207  1986                     u11661:
 12208  1986  2989               	goto	l38163
 12209  1987                     u11660:
 12210  1987  29FE               	goto	l23474
 12211                           	line	167
 12212                           	
 12213  1988                     l38161:	
 12214                           ;water.c: 167: break;
 12215  1988  29FE               	goto	l23474
 12216                           	
 12217  1989                     l23468:	
 12218                           	line	169
 12219                           	
 12220  1989                     l38163:	
 12221                           ;water.c: 169: reflectionquality = ADRES;
 12222  1989  081C               	movf	(155+1)^080h,w	;volatile
 12223  198A  01D1               	clrf	(_reflectionquality+1)^080h
 12224  198B  07D1               	addwf	(_reflectionquality+1)^080h
 12225  198C  081B               	movf	(155)^080h,w	;volatile
 12226  198D  01D0               	clrf	(_reflectionquality)^080h
 12227  198E  07D0               	addwf	(_reflectionquality)^080h
 12228                           
 12229                           	line	177
 12230                           	
 12231  198F                     l38165:	
 12232                           ;water.c: 177: if (!filling && !ledalwayson)
 12233  198F  0020               	movlb 0	; select bank0
 12234  1990  196D               	btfsc	(_filling/8),(_filling)&7
 12235  1991  2993               	goto	u11671
 12236  1992  2994               	goto	u11670
 12237  1993                     u11671:
 12238  1993  299E               	goto	l38171
 12239  1994                     u11670:
 12240                           	
 12241  1994                     l38167:	
 12242  1994  19ED               	btfsc	(_ledalwayson/8),(_ledalwayson)&7
 12243  1995  2997               	goto	u11681
 12244  1996  2998               	goto	u11680
 12245  1997                     u11681:
 12246  1997  299E               	goto	l38171
 12247  1998                     u11680:
 12248                           	line	178
 12249                           	
 12250  1998                     l38169:	
 12251                           ;water.c: 178: LATB &= ~(1U << (2));
 12252  1998  30FB               	movlw	(0FBh)
 12253  1999  00D3               	movwf	(??_water_work+0)+0
 12254  199A  0853               	movf	(??_water_work+0)+0,w
 12255  199B  0022               	movlb 2	; select bank2
 12256  199C  058D               	andwf	(269)^0100h,f	;volatile
 12257  199D  299E               	goto	l38171
 12258                           	
 12259  199E                     l23469:	
 12260                           	line	180
 12261                           	
 12262  199E                     l38171:	
 12263                           ;water.c: 180: if (reflectionquality <= (503 - ((520)-(503)))) {
 12264  199E  3001               	movlw	high(01E7h)
 12265  199F  0021               	movlb 1	; select bank1
 12266  19A0  0251               	subwf	(_reflectionquality+1)^080h,w
 12267  19A1  30E7               	movlw	low(01E7h)
 12268  19A2  1903               	skipnz
 12269  19A3  0250               	subwf	(_reflectionquality)^080h,w
 12270  19A4  1803               	skipnc
 12271  19A5  29A7               	goto	u11691
 12272  19A6  29A8               	goto	u11690
 12273  19A7                     u11691:
 12274  19A7  29C0               	goto	l38183
 12275  19A8                     u11690:
 12276                           	line	182
 12277                           	
 12278  19A8                     l38173:	
 12279                           ;water.c: 181: if ((hysteresis > 0) &&
 12280                           ;water.c: 182: (!--hysteresis && detected)) {
 12281  19A8  0020               	movlb 0	; select bank0
 12282  19A9  0864               	movf	(_hysteresis),w
 12283  19AA  1D03               	skipz
 12284  19AB  29AD               	goto	u11700
 12285  19AC  29DE               	goto	l38193
 12286  19AD                     u11700:
 12287                           	
 12288  19AD                     l38175:	
 12289  19AD  3001               	movlw	low(01h)
 12290  19AE  02E4               	subwf	(_hysteresis),f
 12291  19AF  1D03               	btfss	status,2
 12292  19B0  29B2               	goto	u11711
 12293  19B1  29B3               	goto	u11710
 12294  19B2                     u11711:
 12295  19B2  29DE               	goto	l38193
 12296  19B3                     u11710:
 12297                           	
 12298  19B3                     l38177:	
 12299  19B3  1C6D               	btfss	(_detected/8),(_detected)&7
 12300  19B4  29B6               	goto	u11721
 12301  19B5  29B7               	goto	u11720
 12302  19B6                     u11721:
 12303  19B6  29DE               	goto	l38193
 12304  19B7                     u11720:
 12305                           	line	183
 12306                           	
 12307  19B7                     l38179:	
 12308                           ;water.c: 183: detected = 0;
 12309  19B7  106D               	bcf	(_detected/8),(_detected)&7
 12310                           	line	184
 12311                           	
 12312  19B8                     l38181:	
 12313                           ;water.c: 184: watersensor_event(detected);
 12314  19B8  3000               	movlw	0
 12315  19B9  186D               	btfsc	(_detected/8),(_detected)&7
 12316  19BA  3001               	movlw	1
 12317  19BB  31A2  22EA  3199   	fcall	_watersensor_event
 12318  19BE  29DE               	goto	l38193
 12319                           	line	185
 12320                           	
 12321  19BF                     l23471:	
 12322                           	line	186
 12323                           ;water.c: 185: }
 12324                           ;water.c: 186: } else {
 12325  19BF  29DE               	goto	l38193
 12326                           	
 12327  19C0                     l23470:	
 12328                           	line	188
 12329                           	
 12330  19C0                     l38183:	
 12331                           ;water.c: 187: if ((hysteresis < 8) &&
 12332                           ;water.c: 188: (++hysteresis >= 8) && !detected) {
 12333  19C0  3008               	movlw	(08h)
 12334  19C1  0020               	movlb 0	; select bank0
 12335  19C2  0264               	subwf	(_hysteresis),w
 12336  19C3  1803               	skipnc
 12337  19C4  29C6               	goto	u11731
 12338  19C5  29C7               	goto	u11730
 12339  19C6                     u11731:
 12340  19C6  29DE               	goto	l38193
 12341  19C7                     u11730:
 12342                           	
 12343  19C7                     l38185:	
 12344  19C7  3001               	movlw	(01h)
 12345  19C8  00D3               	movwf	(??_water_work+0)+0
 12346  19C9  0853               	movf	(??_water_work+0)+0,w
 12347  19CA  07E4               	addwf	(_hysteresis),f
 12348  19CB  3008               	movlw	(08h)
 12349  19CC  0264               	subwf	((_hysteresis)),w
 12350  19CD  1C03               	skipc
 12351  19CE  29D0               	goto	u11741
 12352  19CF  29D1               	goto	u11740
 12353  19D0                     u11741:
 12354  19D0  29DE               	goto	l38193
 12355  19D1                     u11740:
 12356                           	
 12357  19D1                     l38187:	
 12358  19D1  186D               	btfsc	(_detected/8),(_detected)&7
 12359  19D2  29D4               	goto	u11751
 12360  19D3  29D5               	goto	u11750
 12361  19D4                     u11751:
 12362  19D4  29DE               	goto	l38193
 12363  19D5                     u11750:
 12364                           	line	189
 12365                           	
 12366  19D5                     l38189:	
 12367                           ;water.c: 189: detected = 1;
 12368  19D5  146D               	bsf	(_detected/8),(_detected)&7
 12369                           	line	190
 12370                           	
 12371  19D6                     l38191:	
 12372                           ;water.c: 190: watersensor_event(detected);
 12373  19D6  3000               	movlw	0
 12374  19D7  186D               	btfsc	(_detected/8),(_detected)&7
 12375  19D8  3001               	movlw	1
 12376  19D9  31A2  22EA  3199   	fcall	_watersensor_event
 12377  19DC  29DE               	goto	l38193
 12378                           	line	191
 12379                           	
 12380  19DD                     l23473:	
 12381  19DD  29DE               	goto	l38193
 12382                           	line	192
 12383                           	
 12384  19DE                     l23472:	
 12385                           	line	194
 12386                           	
 12387  19DE                     l38193:	
 12388                           ;water.c: 191: }
 12389                           ;water.c: 192: }
 12390                           ;water.c: 194: settimeout(&sensortimer, (((((4UL * (1000UL * ((1000UL)))))/4)/8)/4));
 12391  19DE  3052               	movlw	(_sensortimer&0ffh)
 12392  19DF  0020               	movlb 0	; select bank0
 12393  19E0  00AD               	movwf	(?_settimeout)
 12394  19E1  3001               	movlw	0x2/2
 12395  19E2  00AE               	movwf	(?_settimeout+1)
 12396  19E3  3000               	movlw	0
 12397  19E4  00B2               	movwf	3+(?_settimeout)+02h
 12398  19E5  3000               	movlw	0
 12399  19E6  00B1               	movwf	2+(?_settimeout)+02h
 12400  19E7  307A               	movlw	07Ah
 12401  19E8  00B0               	movwf	1+(?_settimeout)+02h
 12402  19E9  3012               	movlw	012h
 12403  19EA  00AF               	movwf	0+(?_settimeout)+02h
 12404                           
 12405  19EB  31A0  20DE  3199   	fcall	_settimeout
 12406                           	line	195
 12407                           	
 12408  19EE                     l38195:	
 12409                           ;water.c: 195: state = 0;
 12410  19EE  0021               	movlb 1	; select bank1
 12411  19EF  01DC               	clrf	(water@state)^080h
 12412                           	line	196
 12413                           ;water.c: 196: break;
 12414  19F0  29FE               	goto	l23474
 12415                           	line	197
 12416                           	
 12417  19F1                     l38197:	
 12418                           ;water.c: 197: }
 12419  19F1  29FE               	goto	l23474
 12420                           	line	141
 12421                           	
 12422  19F2                     l23460:	
 12423                           	
 12424  19F2                     l38199:	
 12425  19F2  0021               	movlb 1	; select bank1
 12426  19F3  085C               	movf	(water@state)^080h,w
 12427                           	; Switch size 1, requested type "space"
 12428                           ; Number of cases is 3, Range of values is 0 to 2
 12429                           ; switch strategies available:
 12430                           ; Name         Instructions Cycles
 12431                           ; simple_byte           10     6 (average)
 12432                           ; direct_byte           12     6 (fixed)
 12433                           ; jumptable            260     6 (fixed)
 12434                           ; rangetable             7     4 (fixed)
 12435                           ; spacedrange           11     6 (fixed)
 12436                           ; locatedrange           3     3 (fixed)
 12437                           ;	Chosen strategy is simple_byte
 12438                           
 12439                           	opt asmopt_off
 12440  19F4  3A00               	xorlw	0^0	; case 0
 12441  19F5  1903               	skipnz
 12442  19F6  2945               	goto	l38147
 12443  19F7  3A01               	xorlw	1^0	; case 1
 12444  19F8  1903               	skipnz
 12445  19F9  296B               	goto	l38155
 12446  19FA  3A03               	xorlw	2^1	; case 2
 12447  19FB  1903               	skipnz
 12448  19FC  2983               	goto	l23467
 12449  19FD  2943               	goto	l23461
 12450                           	opt asmopt_on
 12451                           
 12452                           	line	197
 12453                           	
 12454  19FE                     l23464:	
 12455                           	line	198
 12456                           	
 12457  19FE                     l23474:	
 12458  19FE  0008               	return
 12459                           	opt stack 0
 12460                           GLOBAL	__end_of_water_work
 12461  19FF                     	__end_of_water_work:
 12462 ;; =============== function _water_work ends ============
 12463                           
 12464                           	signat	_water_work,88
 12465                           	global	_setupbutton_event
 12466                           	global	_heatsensor_event
 12467                           	global	_startbutton_event
 12468                           psect	text3256,local,class=CODE,delta=2
 12469                           global __ptext3256
 12470  37D4                     __ptext3256:
 12471                           
 12472 ;; *************** function _startbutton_event *****************
 12473 ;; Defined at:
 12474 ;;		line 264 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;  up              1   31[BANK0 ] unsigned char 
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;		None
 12479 ;; Return value:  Size  Location     Type
 12480 ;;		None               void
 12481 ;; Registers used:
 12482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12488 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12492 ;;Total ram usage:        2 bytes
 12493 ;; Hardware stack levels used:    1
 12494 ;; Hardware stack levels required when called:    7
 12495 ;; This function calls:
 12496 ;;		_process_button
 12497 ;; This function is called by:
 12498 ;;		_catgenie_work
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           psect	text3256
 12502                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12503                           	line	264
 12504                           	global	__size_of_startbutton_event
 12505  000E                     	__size_of_startbutton_event	equ	__end_of_startbutton_event-_startbutton_event
 12506                           	
 12507  37D4                     _startbutton_event:	
 12508                           	opt	stack 7
 12509                           ; Regs used in _startbutton_event: [wreg-status,0+pclath+cstack]
 12510                           	line	265
 12511                           	
 12512  37D4                     l38141:	
 12513                           ;userinterface.c: 265: process_button ((0x01 << 0), !up);
 12514  37D4  0020               	movlb 0	; select bank0
 12515  37D5  0840               	movf	(startbutton_event@up),w
 12516  37D6  3A00               	xorlw	0&0ffh
 12517  37D7  3000               	movlw	0
 12518  37D8  1903               	skipnz
 12519  37D9  3001               	movlw	1
 12520  37DA  00C1               	movwf	(??_startbutton_event+0)+0
 12521  37DB  0841               	movf	(??_startbutton_event+0)+0,w
 12522  37DC  00BD               	movwf	(?_process_button)
 12523  37DD  3001               	movlw	(01h)
 12524  37DE  31A1  2143  31B7   	fcall	_process_button
 12525                           	line	266
 12526                           	
 12527  37E1                     l8672:	
 12528  37E1  0008               	return
 12529                           	opt stack 0
 12530                           GLOBAL	__end_of_startbutton_event
 12531  37E2                     	__end_of_startbutton_event:
 12532 ;; =============== function _startbutton_event ends ============
 12533                           
 12534                           	signat	_startbutton_event,4216
 12535                           psect	text3257,local,class=CODE,delta=2
 12536                           global __ptext3257
 12537  28BD                     __ptext3257:
 12538                           
 12539 ;; *************** function _heatsensor_event *****************
 12540 ;; Defined at:
 12541 ;;		line 423 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;  detected        1   31[BANK0 ] unsigned char 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;		None               void
 12548 ;; Registers used:
 12549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12555 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12559 ;;Total ram usage:        2 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    7
 12562 ;; This function calls:
 12563 ;;		_litterlanguage_event
 12564 ;; This function is called by:
 12565 ;;		_catgenie_work
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           psect	text3257
 12569                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12570                           	line	423
 12571                           	global	__size_of_heatsensor_event
 12572  0011                     	__size_of_heatsensor_event	equ	__end_of_heatsensor_event-_heatsensor_event
 12573                           	
 12574  28BD                     _heatsensor_event:	
 12575                           	opt	stack 7
 12576                           ; Regs used in _heatsensor_event: [allreg]
 12577                           	line	424
 12578                           	
 12579  28BD                     l38137:	
 12580                           ;litterlanguage.c: 424: error_overheat = detected;
 12581  28BD  10F1               	bcf	(_error_overheat/8),(_error_overheat)&7
 12582  28BE  0020               	movlb 0	; select bank0
 12583  28BF  1C40               	btfss	(heatsensor_event@detected),0
 12584  28C0  28C2               	goto	u11635
 12585  28C1  14F1               	bsf	(_error_overheat/8),(_error_overheat)&7
 12586  28C2                     u11635:
 12587                           
 12588                           	line	425
 12589                           	
 12590  28C2                     l38139:	
 12591                           ;litterlanguage.c: 425: litterlanguage_event(3, error_overheat);
 12592  28C2  3000               	movlw	0
 12593  28C3  18F1               	btfsc	(_error_overheat/8),(_error_overheat)&7
 12594  28C4  3001               	movlw	1
 12595  28C5  0020               	movlb 0	; select bank0
 12596  28C6  00C1               	movwf	(??_heatsensor_event+0)+0
 12597  28C7  0841               	movf	(??_heatsensor_event+0)+0,w
 12598  28C8  00D7               	movwf	(?_litterlanguage_event)
 12599  28C9  3003               	movlw	(03h)
 12600  28CA  31A2  2215  31A8   	fcall	_litterlanguage_event
 12601                           	line	426
 12602                           	
 12603  28CD                     l4325:	
 12604  28CD  0008               	return
 12605                           	opt stack 0
 12606                           GLOBAL	__end_of_heatsensor_event
 12607  28CE                     	__end_of_heatsensor_event:
 12608 ;; =============== function _heatsensor_event ends ============
 12609                           
 12610                           	signat	_heatsensor_event,4216
 12611                           psect	text3258,local,class=CODE,delta=2
 12612                           global __ptext3258
 12613  37C6                     __ptext3258:
 12614                           
 12615 ;; *************** function _setupbutton_event *****************
 12616 ;; Defined at:
 12617 ;;		line 277 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  up              1   31[BANK0 ] unsigned char 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;		None
 12622 ;; Return value:  Size  Location     Type
 12623 ;;		None               void
 12624 ;; Registers used:
 12625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12631 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12635 ;;Total ram usage:        2 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:    7
 12638 ;; This function calls:
 12639 ;;		_process_button
 12640 ;; This function is called by:
 12641 ;;		_catgenie_work
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           psect	text3258
 12645                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12646                           	line	277
 12647                           	global	__size_of_setupbutton_event
 12648  000E                     	__size_of_setupbutton_event	equ	__end_of_setupbutton_event-_setupbutton_event
 12649                           	
 12650  37C6                     _setupbutton_event:	
 12651                           	opt	stack 7
 12652                           ; Regs used in _setupbutton_event: [wreg-status,0+pclath+cstack]
 12653                           	line	278
 12654                           	
 12655  37C6                     l38143:	
 12656                           ;userinterface.c: 278: process_button ((0x01 << 1), !up);
 12657  37C6  0020               	movlb 0	; select bank0
 12658  37C7  0840               	movf	(setupbutton_event@up),w
 12659  37C8  3A00               	xorlw	0&0ffh
 12660  37C9  3000               	movlw	0
 12661  37CA  1903               	skipnz
 12662  37CB  3001               	movlw	1
 12663  37CC  00C1               	movwf	(??_setupbutton_event+0)+0
 12664  37CD  0841               	movf	(??_setupbutton_event+0)+0,w
 12665  37CE  00BD               	movwf	(?_process_button)
 12666  37CF  3002               	movlw	(02h)
 12667  37D0  31A1  2143  31B7   	fcall	_process_button
 12668                           	line	279
 12669                           	
 12670  37D3                     l8675:	
 12671  37D3  0008               	return
 12672                           	opt stack 0
 12673                           GLOBAL	__end_of_setupbutton_event
 12674  37D4                     	__end_of_setupbutton_event:
 12675 ;; =============== function _setupbutton_event ends ============
 12676                           
 12677                           	signat	_setupbutton_event,4216
 12678                           	global	_watersensor_event
 12679                           psect	text3259,local,class=CODE,delta=2
 12680                           global __ptext3259
 12681  22EA                     __ptext3259:
 12682                           
 12683 ;; *************** function _watersensor_event *****************
 12684 ;; Defined at:
 12685 ;;		line 388 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  detected        1    wreg     unsigned char 
 12688 ;; Auto vars:     Size  Location     Type
 12689 ;;  detected        1   49[BANK0 ] unsigned char 
 12690 ;; Return value:  Size  Location     Type
 12691 ;;		None               void
 12692 ;; Registers used:
 12693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12694 ;; Tracked objects:
 12695 ;;		On entry : 0/0
 12696 ;;		On exit  : 0/0
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12700 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12701 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12702 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12703 ;;Total ram usage:        4 bytes
 12704 ;; Hardware stack levels used:    1
 12705 ;; Hardware stack levels required when called:    7
 12706 ;; This function calls:
 12707 ;;		_printtime
 12708 ;;		_printf
 12709 ;;		_water_fill
 12710 ;;		_timeoutnever
 12711 ;;		_litterlanguage_event
 12712 ;; This function is called by:
 12713 ;;		_water_work
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           psect	text3259
 12717                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12718                           	line	388
 12719                           	global	__size_of_watersensor_event
 12720  0071                     	__size_of_watersensor_event	equ	__end_of_watersensor_event-_watersensor_event
 12721                           	
 12722  22EA                     _watersensor_event:	
 12723                           	opt	stack 7
 12724                           ; Regs used in _watersensor_event: [allreg]
 12725                           ;watersensor_event@detected stored from wreg
 12726  22EA  0020               	movlb 0	; select bank0
 12727  22EB  00D2               	movwf	(watersensor_event@detected)
 12728                           	line	389
 12729                           	
 12730  22EC                     l38109:	
 12731                           ;litterlanguage.c: 389: printtime();
 12732  22EC  31AB  2395  31A2   	fcall	_printtime
 12733                           	line	390
 12734                           	
 12735  22EF                     l38111:	
 12736                           ;litterlanguage.c: 390: printf("Water %s\n", detected?"high":"low");
 12737  22EF  0020               	movlb 0	; select bank0
 12738  22F0  08D2               	movf	(watersensor_event@detected),f
 12739  22F1  1D03               	skipz
 12740  22F2  2AF4               	goto	u11581
 12741  22F3  2AF5               	goto	u11580
 12742  22F4                     u11581:
 12743  22F4  2AFA               	goto	l38115
 12744  22F5                     u11580:
 12745                           	
 12746  22F5                     l38113:	
 12747  22F5  3034               	movlw	low(STR_32|8000h)
 12748  22F6  00D0               	movwf	(_watersensor_event$5929)
 12749  22F7  3089               	movlw	high(STR_32|8000h)
 12750  22F8  00D1               	movwf	((_watersensor_event$5929))+1
 12751  22F9  2AFF               	goto	l38117
 12752                           	
 12753  22FA                     l4314:	
 12754                           	
 12755  22FA                     l38115:	
 12756  22FA  3023               	movlw	low(STR_31|8000h)
 12757  22FB  00D0               	movwf	(_watersensor_event$5929)
 12758  22FC  3089               	movlw	high(STR_31|8000h)
 12759  22FD  00D1               	movwf	((_watersensor_event$5929))+1
 12760  22FE  2AFF               	goto	l38117
 12761                           	
 12762  22FF                     l4316:	
 12763                           	
 12764  22FF                     l38117:	
 12765  22FF  3080               	movlw	low(STR_30|8000h)
 12766  2300  00AF               	movwf	(?_printf)
 12767  2301  3088               	movlw	high(STR_30|8000h)
 12768  2302  00B0               	movwf	((?_printf))+1
 12769  2303  0851               	movf	(_watersensor_event$5929+1),w
 12770  2304  01B2               	clrf	(1+?_printf+02h)
 12771  2305  07B2               	addwf	(1+?_printf+02h)
 12772  2306  0850               	movf	(_watersensor_event$5929),w
 12773  2307  01B1               	clrf	(0+?_printf+02h)
 12774  2308  07B1               	addwf	(0+?_printf+02h)
 12775                           
 12776  2309  3194  24A0  31A2   	fcall	_printf
 12777                           	line	391
 12778                           	
 12779  230C                     l38119:	
 12780                           ;litterlanguage.c: 391: if (ins_state != 0) {
 12781  230C  0020               	movlb 0	; select bank0
 12782  230D  0865               	movf	(_ins_state),w
 12783  230E  1D03               	skipz
 12784  230F  2B11               	goto	u11590
 12785  2310  2B3A               	goto	l4317
 12786  2311                     u11590:
 12787                           	line	393
 12788                           	
 12789  2311                     l38121:	
 12790                           ;litterlanguage.c: 393: if (detected) {
 12791  2311  0852               	movf	(watersensor_event@detected),w
 12792  2312  1D03               	skipz
 12793  2313  2B15               	goto	u11600
 12794  2314  2B2D               	goto	l38131
 12795  2315                     u11600:
 12796                           	line	395
 12797                           	
 12798  2315                     l38123:	
 12799                           ;litterlanguage.c: 395: water_fill(0);
 12800  2315  3000               	movlw	(0)
 12801  2316  31A9  211B  31A2   	fcall	_water_fill
 12802                           	line	396
 12803                           	
 12804  2319                     l38125:	
 12805                           ;litterlanguage.c: 396: timeoutnever(&timer_fill);
 12806  2319  30E9               	movlw	(_timer_fill&0ffh)
 12807  231A  0020               	movlb 0	; select bank0
 12808  231B  00A5               	movwf	(?_timeoutnever)
 12809  231C  3000               	movlw	0x1/2
 12810  231D  00A6               	movwf	(?_timeoutnever+1)
 12811  231E  31A9  21AF  31A2   	fcall	_timeoutnever
 12812                           	line	397
 12813                           	
 12814  2321                     l38127:	
 12815                           ;litterlanguage.c: 397: printtime();
 12816  2321  31AB  2395  31A2   	fcall	_printtime
 12817                           	line	398
 12818                           	
 12819  2324                     l38129:	
 12820                           ;litterlanguage.c: 398: printf("Filled\n");
 12821  2324  30DC               	movlw	low(STR_33|8000h)
 12822  2325  0020               	movlb 0	; select bank0
 12823  2326  00AF               	movwf	(?_printf)
 12824  2327  3088               	movlw	high(STR_33|8000h)
 12825  2328  00B0               	movwf	((?_printf))+1
 12826  2329  3194  24A0  31A2   	fcall	_printf
 12827                           	line	399
 12828                           ;litterlanguage.c: 399: } else {
 12829  232C  2B5A               	goto	l4322
 12830                           	
 12831  232D                     l4318:	
 12832                           	line	400
 12833                           	
 12834  232D                     l38131:	
 12835                           ;litterlanguage.c: 400: printtime();
 12836  232D  31AB  2395  31A2   	fcall	_printtime
 12837                           	line	401
 12838                           ;litterlanguage.c: 401: printf("Drained\n");
 12839  2330  309E               	movlw	low(STR_34|8000h)
 12840  2331  0020               	movlb 0	; select bank0
 12841  2332  00AF               	movwf	(?_printf)
 12842  2333  3088               	movlw	high(STR_34|8000h)
 12843  2334  00B0               	movwf	((?_printf))+1
 12844  2335  3194  24A0  31A2   	fcall	_printf
 12845  2338  2B5A               	goto	l4322
 12846                           	line	402
 12847                           	
 12848  2339                     l4319:	
 12849                           	line	403
 12850                           ;litterlanguage.c: 402: }
 12851                           ;litterlanguage.c: 403: } else {
 12852  2339  2B5A               	goto	l4322
 12853                           	
 12854  233A                     l4317:	
 12855                           	line	404
 12856                           ;litterlanguage.c: 404: error_flood = detected;
 12857  233A  1071               	bcf	(_error_flood/8),(_error_flood)&7
 12858  233B  1C52               	btfss	(watersensor_event@detected),0
 12859  233C  2B3E               	goto	u11615
 12860  233D  1471               	bsf	(_error_flood/8),(_error_flood)&7
 12861  233E                     u11615:
 12862                           
 12863                           	line	405
 12864                           ;litterlanguage.c: 405: if (error_flood) {
 12865  233E  1C71               	btfss	(_error_flood/8),(_error_flood)&7
 12866  233F  2B41               	goto	u11621
 12867  2340  2B42               	goto	u11620
 12868  2341                     u11621:
 12869  2341  2B4E               	goto	l38135
 12870  2342                     u11620:
 12871                           	line	406
 12872                           	
 12873  2342                     l38133:	
 12874                           ;litterlanguage.c: 406: printtime();
 12875  2342  31AB  2395  31A2   	fcall	_printtime
 12876                           	line	407
 12877                           ;litterlanguage.c: 407: printf("Box flooded!\n");
 12878  2345  30E3               	movlw	low(STR_35|8000h)
 12879  2346  0020               	movlb 0	; select bank0
 12880  2347  00AF               	movwf	(?_printf)
 12881  2348  3087               	movlw	high(STR_35|8000h)
 12882  2349  00B0               	movwf	((?_printf))+1
 12883  234A  3194  24A0  31A2   	fcall	_printf
 12884  234D  2B4E               	goto	l38135
 12885                           	line	408
 12886                           	
 12887  234E                     l4321:	
 12888                           	line	409
 12889                           	
 12890  234E                     l38135:	
 12891                           ;litterlanguage.c: 408: }
 12892                           ;litterlanguage.c: 409: litterlanguage_event(5, error_flood);
 12893  234E  3000               	movlw	0
 12894  234F  1871               	btfsc	(_error_flood/8),(_error_flood)&7
 12895  2350  3001               	movlw	1
 12896  2351  0020               	movlb 0	; select bank0
 12897  2352  00CF               	movwf	(??_watersensor_event+0)+0
 12898  2353  084F               	movf	(??_watersensor_event+0)+0,w
 12899  2354  00D7               	movwf	(?_litterlanguage_event)
 12900  2355  3005               	movlw	(05h)
 12901  2356  31A2  2215  31A2   	fcall	_litterlanguage_event
 12902  2359  2B5A               	goto	l4322
 12903                           	line	410
 12904                           	
 12905  235A                     l4320:	
 12906                           	line	412
 12907                           	
 12908  235A                     l4322:	
 12909  235A  0008               	return
 12910                           	opt stack 0
 12911                           GLOBAL	__end_of_watersensor_event
 12912  235B                     	__end_of_watersensor_event:
 12913 ;; =============== function _watersensor_event ends ============
 12914                           
 12915                           	signat	_watersensor_event,4216
 12916                           	global	_litterlanguage_pause
 12917                           psect	text3260,local,class=CODE,delta=2
 12918                           global __ptext3260
 12919  1256                     __ptext3260:
 12920                           
 12921 ;; *************** function _litterlanguage_pause *****************
 12922 ;; Defined at:
 12923 ;;		line 258 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12924 ;; Parameters:    Size  Location     Type
 12925 ;;  pause           1    wreg     unsigned char 
 12926 ;; Auto vars:     Size  Location     Type
 12927 ;;  pause           1   47[BANK0 ] unsigned char 
 12928 ;;  timer_now       6   48[BANK0 ] struct timer
 12929 ;; Return value:  Size  Location     Type
 12930 ;;		None               void
 12931 ;; Registers used:
 12932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12933 ;; Tracked objects:
 12934 ;;		On entry : 0/0
 12935 ;;		On exit  : 0/0
 12936 ;;		Unchanged: 0/0
 12937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12939 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 12940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12941 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 12942 ;;Total ram usage:        8 bytes
 12943 ;; Hardware stack levels used:    1
 12944 ;; Hardware stack levels required when called:    5
 12945 ;; This function calls:
 12946 ;;		_printtime
 12947 ;;		_get_Bowl
 12948 ;;		_set_Bowl
 12949 ;;		_get_Arm
 12950 ;;		_set_Arm
 12951 ;;		_water_filling
 12952 ;;		_water_fill
 12953 ;;		_get_Dosage
 12954 ;;		_set_Dosage
 12955 ;;		_get_Pump
 12956 ;;		_set_Pump
 12957 ;;		_get_Dryer
 12958 ;;		_set_Dryer
 12959 ;;		_gettimestamp
 12960 ;;		_timestampdiff
 12961 ;;		_timeoutnever
 12962 ;;		_printf
 12963 ;;		_settimeout
 12964 ;;		_litterlanguage_event
 12965 ;; This function is called by:
 12966 ;;		_litterlanguage_event
 12967 ;;		_start_short
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           psect	text3260
 12971                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12972                           	line	258
 12973                           	global	__size_of_litterlanguage_pause
 12974  024A                     	__size_of_litterlanguage_pause	equ	__end_of_litterlanguage_pause-_litterlanguage_pause
 12975                           	
 12976  1256                     _litterlanguage_pause:	
 12977                           	opt	stack 7
 12978                           ; Regs used in _litterlanguage_pause: [allreg]
 12979                           ;litterlanguage_pause@pause stored from wreg
 12980                           	line	272
 12981  1256  0020               	movlb 0	; select bank0
 12982  1257  00D0               	movwf	(litterlanguage_pause@pause)
 12983                           	
 12984  1258                     l38013:	
 12985                           ;litterlanguage.c: 259: static struct {
 12986                           ;litterlanguage.c: 260: unsigned bowl : 2;
 12987                           ;litterlanguage.c: 261: unsigned arm : 2;
 12988                           ;litterlanguage.c: 262: unsigned water : 1;
 12989                           ;litterlanguage.c: 263: unsigned pump : 1;
 12990                           ;litterlanguage.c: 264: unsigned dosage : 1;
 12991                           ;litterlanguage.c: 265: unsigned dryer : 1;
 12992                           ;litterlanguage.c: 266: unsigned long wait;
 12993                           ;litterlanguage.c: 267: unsigned long fill;
 12994                           ;litterlanguage.c: 268: unsigned long drain;
 12995                           ;litterlanguage.c: 269: unsigned long autodose;
 12996                           ;litterlanguage.c: 270: } context;
 12997  1258  3000               	movlw	0
 12998  1259  1AF1               	btfsc	(_paused/8),(_paused)&7
 12999  125A  3001               	movlw	1
 13000  125B  0650               	xorwf	(litterlanguage_pause@pause),w
 13001  125C  1D03               	skipz
 13002  125D  2A5F               	goto	u11481
 13003  125E  2A60               	goto	u11480
 13004  125F                     u11481:
 13005  125F  2A62               	goto	l38017
 13006  1260                     u11480:
 13007  1260  2C9F               	goto	l4290
 13008                           	line	273
 13009                           	
 13010  1261                     l38015:	
 13011                           ;litterlanguage.c: 273: return;
 13012  1261  2C9F               	goto	l4290
 13013                           	
 13014  1262                     l4289:	
 13015                           	line	275
 13016                           	
 13017  1262                     l38017:	
 13018                           ;litterlanguage.c: 275: printtime();
 13019  1262  31AB  2395  3192   	fcall	_printtime
 13020                           	line	276
 13021                           	
 13022  1265                     l38019:	
 13023                           ;litterlanguage.c: 276: if (pause) {
 13024  1265  0020               	movlb 0	; select bank0
 13025  1266  0850               	movf	(litterlanguage_pause@pause),w
 13026  1267  1D03               	skipz
 13027  1268  2A6A               	goto	u11490
 13028  1269  2B7B               	goto	l4291
 13029  126A                     u11490:
 13030                           	line	280
 13031                           	
 13032  126A                     l38021:	
 13033                           ;litterlanguage.c: 277: struct timer timer_now;
 13034                           ;litterlanguage.c: 280: context.bowl = get_Bowl();
 13035  126A  31AA  2204  3192   	fcall	_get_Bowl
 13036  126D  0020               	movlb 0	; select bank0
 13037  126E  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13038  126F  0022               	movlb 2	; select bank2
 13039  1270  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13040  1271  0020               	movlb 0	; select bank0
 13041  1272  064F               	xorwf	0+(??_litterlanguage_pause+0)+0,w
 13042  1273  39FC               	andlw	not ((1<<2)-1)
 13043  1274  064F               	xorwf	0+(??_litterlanguage_pause+0)+0,w
 13044  1275  0022               	movlb 2	; select bank2
 13045  1276  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13046                           	line	281
 13047                           ;litterlanguage.c: 281: set_Bowl(0);
 13048  1277  3000               	movlw	(0)
 13049  1278  31AA  2282  3192   	fcall	_set_Bowl
 13050                           	line	282
 13051                           ;litterlanguage.c: 282: context.arm = get_Arm();
 13052  127B  31AA  2222  3192   	fcall	_get_Arm
 13053  127E  0020               	movlb 0	; select bank0
 13054  127F  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13055  1280  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13056  1281  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13057  1282  0022               	movlb 2	; select bank2
 13058  1283  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13059  1284  0020               	movlb 0	; select bank0
 13060  1285  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13061  1286  39F3               	andlw	not (((1<<2)-1)<<2)
 13062  1287  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13063  1288  0022               	movlb 2	; select bank2
 13064  1289  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13065                           	line	283
 13066                           ;litterlanguage.c: 283: set_Arm(0);
 13067  128A  3000               	movlw	(0)
 13068  128B  31AA  22A6  3192   	fcall	_set_Arm
 13069                           	line	284
 13070                           	
 13071  128E                     l38023:	
 13072                           ;litterlanguage.c: 284: context.water = water_filling();
 13073  128E  31B7  2780  3192   	fcall	_water_filling
 13074  1291  0020               	movlb 0	; select bank0
 13075  1292  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13076  1293  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 13077  1294  0022               	movlb 2	; select bank2
 13078  1295  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13079  1296  0020               	movlb 0	; select bank0
 13080  1297  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13081  1298  39EF               	andlw	not (((1<<1)-1)<<4)
 13082  1299  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13083  129A  0022               	movlb 2	; select bank2
 13084  129B  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13085                           	line	285
 13086                           	
 13087  129C                     l38025:	
 13088                           ;litterlanguage.c: 285: water_fill(0);
 13089  129C  3000               	movlw	(0)
 13090  129D  31A9  211B  3192   	fcall	_water_fill
 13091                           	line	286
 13092                           	
 13093  12A0                     l38027:	
 13094                           ;litterlanguage.c: 286: context.dosage = get_Dosage();
 13095  12A0  31B7  276B  3192   	fcall	_get_Dosage
 13096  12A3  0020               	movlb 0	; select bank0
 13097  12A4  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13098  12A5  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 13099  12A6  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13100  12A7  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13101  12A8  0022               	movlb 2	; select bank2
 13102  12A9  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13103  12AA  0020               	movlb 0	; select bank0
 13104  12AB  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13105  12AC  39BF               	andlw	not (((1<<1)-1)<<6)
 13106  12AD  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13107  12AE  0022               	movlb 2	; select bank2
 13108  12AF  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13109                           	line	287
 13110                           	
 13111  12B0                     l38029:	
 13112                           ;litterlanguage.c: 287: set_Dosage(0);
 13113  12B0  3000               	movlw	(0)
 13114  12B1  31A8  208A  3192   	fcall	_set_Dosage
 13115                           	line	288
 13116                           	
 13117  12B4                     l38031:	
 13118                           ;litterlanguage.c: 288: context.pump = get_Pump();
 13119  12B4  31B7  2766  3192   	fcall	_get_Pump
 13120  12B7  0020               	movlb 0	; select bank0
 13121  12B8  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13122  12B9  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 13123  12BA  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13124  12BB  0022               	movlb 2	; select bank2
 13125  12BC  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13126  12BD  0020               	movlb 0	; select bank0
 13127  12BE  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13128  12BF  39DF               	andlw	not (((1<<1)-1)<<5)
 13129  12C0  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13130  12C1  0022               	movlb 2	; select bank2
 13131  12C2  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13132                           	line	289
 13133                           	
 13134  12C3                     l38033:	
 13135                           ;litterlanguage.c: 289: set_Pump(0);
 13136  12C3  3000               	movlw	(0)
 13137  12C4  31A8  209B  3192   	fcall	_set_Pump
 13138                           	line	290
 13139                           	
 13140  12C7                     l38035:	
 13141                           ;litterlanguage.c: 290: context.dryer = get_Dryer();
 13142  12C7  31B7  2770  3192   	fcall	_get_Dryer
 13143  12CA  0020               	movlb 0	; select bank0
 13144  12CB  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13145  12CC  0CCF               	rrf	(??_litterlanguage_pause+0)+0,f
 13146  12CD  0CCF               	rrf	(??_litterlanguage_pause+0)+0,f
 13147  12CE  0022               	movlb 2	; select bank2
 13148  12CF  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13149  12D0  0020               	movlb 0	; select bank0
 13150  12D1  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13151  12D2  397F               	andlw	not (((1<<1)-1)<<7)
 13152  12D3  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13153  12D4  0022               	movlb 2	; select bank2
 13154  12D5  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13155                           	line	291
 13156                           	
 13157  12D6                     l38037:	
 13158                           ;litterlanguage.c: 291: set_Dryer(0);
 13159  12D6  3000               	movlw	(0)
 13160  12D7  31A8  20AC  3192   	fcall	_set_Dryer
 13161                           	line	293
 13162                           	
 13163  12DA                     l38039:	
 13164                           ;litterlanguage.c: 293: gettimestamp(&timer_now);
 13165  12DA  3051               	movlw	(litterlanguage_pause@timer_now&0ffh)
 13166  12DB  0020               	movlb 0	; select bank0
 13167  12DC  00A1               	movwf	(?_gettimestamp)
 13168  12DD  3000               	movlw	0x0/2
 13169  12DE  00A2               	movwf	(?_gettimestamp+1)
 13170  12DF  31AD  25AA  3192   	fcall	_gettimestamp
 13171                           	line	297
 13172                           	
 13173  12E2                     l38041:	
 13174                           ;litterlanguage.c: 297: context.wait = timestampdiff(&timer_waitins, &timer_now);
 13175  12E2  306A               	movlw	(_timer_waitins&0ffh)
 13176  12E3  0020               	movlb 0	; select bank0
 13177  12E4  00A1               	movwf	(?_timestampdiff)
 13178  12E5  3001               	movlw	0x2/2
 13179  12E6  00A2               	movwf	(?_timestampdiff+1)
 13180  12E7  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13181  12E8  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13182  12E9  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13183  12EA  00A3               	movwf	(0+?_timestampdiff+02h)
 13184  12EB  319B  23F0  3192   	fcall	_timestampdiff
 13185  12EE  0020               	movlb 0	; select bank0
 13186  12EF  0824               	movf	(3+(?_timestampdiff)),w
 13187  12F0  0022               	movlb 2	; select bank2
 13188  12F1  00A4               	movwf	3+(litterlanguage_pause@context)^0100h+01h
 13189  12F2  0020               	movlb 0	; select bank0
 13190  12F3  0823               	movf	(2+(?_timestampdiff)),w
 13191  12F4  0022               	movlb 2	; select bank2
 13192  12F5  00A3               	movwf	2+(litterlanguage_pause@context)^0100h+01h
 13193  12F6  0020               	movlb 0	; select bank0
 13194  12F7  0822               	movf	(1+(?_timestampdiff)),w
 13195  12F8  0022               	movlb 2	; select bank2
 13196  12F9  00A2               	movwf	1+(litterlanguage_pause@context)^0100h+01h
 13197  12FA  0020               	movlb 0	; select bank0
 13198  12FB  0821               	movf	(0+(?_timestampdiff)),w
 13199  12FC  0022               	movlb 2	; select bank2
 13200  12FD  00A1               	movwf	0+(litterlanguage_pause@context)^0100h+01h
 13201                           
 13202                           	line	298
 13203                           	
 13204  12FE                     l38043:	
 13205                           ;litterlanguage.c: 298: timeoutnever(&timer_waitins);
 13206  12FE  306A               	movlw	(_timer_waitins&0ffh)
 13207  12FF  0020               	movlb 0	; select bank0
 13208  1300  00A5               	movwf	(?_timeoutnever)
 13209  1301  3001               	movlw	0x2/2
 13210  1302  00A6               	movwf	(?_timeoutnever+1)
 13211  1303  31A9  21AF  3192   	fcall	_timeoutnever
 13212                           	line	299
 13213                           	
 13214  1306                     l38045:	
 13215                           ;litterlanguage.c: 299: context.fill = timestampdiff(&timer_fill, &timer_now);
 13216  1306  30E9               	movlw	(_timer_fill&0ffh)
 13217  1307  0020               	movlb 0	; select bank0
 13218  1308  00A1               	movwf	(?_timestampdiff)
 13219  1309  3000               	movlw	0x1/2
 13220  130A  00A2               	movwf	(?_timestampdiff+1)
 13221  130B  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13222  130C  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13223  130D  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13224  130E  00A3               	movwf	(0+?_timestampdiff+02h)
 13225  130F  319B  23F0  3192   	fcall	_timestampdiff
 13226  1312  0020               	movlb 0	; select bank0
 13227  1313  0824               	movf	(3+(?_timestampdiff)),w
 13228  1314  0022               	movlb 2	; select bank2
 13229  1315  00A8               	movwf	3+(litterlanguage_pause@context)^0100h+05h
 13230  1316  0020               	movlb 0	; select bank0
 13231  1317  0823               	movf	(2+(?_timestampdiff)),w
 13232  1318  0022               	movlb 2	; select bank2
 13233  1319  00A7               	movwf	2+(litterlanguage_pause@context)^0100h+05h
 13234  131A  0020               	movlb 0	; select bank0
 13235  131B  0822               	movf	(1+(?_timestampdiff)),w
 13236  131C  0022               	movlb 2	; select bank2
 13237  131D  00A6               	movwf	1+(litterlanguage_pause@context)^0100h+05h
 13238  131E  0020               	movlb 0	; select bank0
 13239  131F  0821               	movf	(0+(?_timestampdiff)),w
 13240  1320  0022               	movlb 2	; select bank2
 13241  1321  00A5               	movwf	0+(litterlanguage_pause@context)^0100h+05h
 13242                           
 13243                           	line	300
 13244                           	
 13245  1322                     l38047:	
 13246                           ;litterlanguage.c: 300: timeoutnever(&timer_fill);
 13247  1322  30E9               	movlw	(_timer_fill&0ffh)
 13248  1323  0020               	movlb 0	; select bank0
 13249  1324  00A5               	movwf	(?_timeoutnever)
 13250  1325  3000               	movlw	0x1/2
 13251  1326  00A6               	movwf	(?_timeoutnever+1)
 13252  1327  31A9  21AF  3192   	fcall	_timeoutnever
 13253                           	line	301
 13254                           	
 13255  132A                     l38049:	
 13256                           ;litterlanguage.c: 301: context.drain = timestampdiff(&timer_drain, &timer_now);
 13257  132A  30E3               	movlw	(_timer_drain&0ffh)
 13258  132B  0020               	movlb 0	; select bank0
 13259  132C  00A1               	movwf	(?_timestampdiff)
 13260  132D  3000               	movlw	0x1/2
 13261  132E  00A2               	movwf	(?_timestampdiff+1)
 13262  132F  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13263  1330  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13264  1331  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13265  1332  00A3               	movwf	(0+?_timestampdiff+02h)
 13266  1333  319B  23F0  3192   	fcall	_timestampdiff
 13267  1336  0020               	movlb 0	; select bank0
 13268  1337  0824               	movf	(3+(?_timestampdiff)),w
 13269  1338  0022               	movlb 2	; select bank2
 13270  1339  00AC               	movwf	3+(litterlanguage_pause@context)^0100h+09h
 13271  133A  0020               	movlb 0	; select bank0
 13272  133B  0823               	movf	(2+(?_timestampdiff)),w
 13273  133C  0022               	movlb 2	; select bank2
 13274  133D  00AB               	movwf	2+(litterlanguage_pause@context)^0100h+09h
 13275  133E  0020               	movlb 0	; select bank0
 13276  133F  0822               	movf	(1+(?_timestampdiff)),w
 13277  1340  0022               	movlb 2	; select bank2
 13278  1341  00AA               	movwf	1+(litterlanguage_pause@context)^0100h+09h
 13279  1342  0020               	movlb 0	; select bank0
 13280  1343  0821               	movf	(0+(?_timestampdiff)),w
 13281  1344  0022               	movlb 2	; select bank2
 13282  1345  00A9               	movwf	0+(litterlanguage_pause@context)^0100h+09h
 13283                           
 13284                           	line	302
 13285                           	
 13286  1346                     l38051:	
 13287                           ;litterlanguage.c: 302: timeoutnever(&timer_drain);
 13288  1346  30E3               	movlw	(_timer_drain&0ffh)
 13289  1347  0020               	movlb 0	; select bank0
 13290  1348  00A5               	movwf	(?_timeoutnever)
 13291  1349  3000               	movlw	0x1/2
 13292  134A  00A6               	movwf	(?_timeoutnever+1)
 13293  134B  31A9  21AF  3192   	fcall	_timeoutnever
 13294                           	line	303
 13295                           	
 13296  134E                     l38053:	
 13297                           ;litterlanguage.c: 303: context.autodose = timestampdiff(&timer_autodose, &timer_now);
 13298  134E  3064               	movlw	(_timer_autodose&0ffh)
 13299  134F  0020               	movlb 0	; select bank0
 13300  1350  00A1               	movwf	(?_timestampdiff)
 13301  1351  3001               	movlw	0x2/2
 13302  1352  00A2               	movwf	(?_timestampdiff+1)
 13303  1353  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13304  1354  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13305  1355  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13306  1356  00A3               	movwf	(0+?_timestampdiff+02h)
 13307  1357  319B  23F0  3192   	fcall	_timestampdiff
 13308  135A  0020               	movlb 0	; select bank0
 13309  135B  0824               	movf	(3+(?_timestampdiff)),w
 13310  135C  0022               	movlb 2	; select bank2
 13311  135D  00B0               	movwf	3+(litterlanguage_pause@context)^0100h+0Dh
 13312  135E  0020               	movlb 0	; select bank0
 13313  135F  0823               	movf	(2+(?_timestampdiff)),w
 13314  1360  0022               	movlb 2	; select bank2
 13315  1361  00AF               	movwf	2+(litterlanguage_pause@context)^0100h+0Dh
 13316  1362  0020               	movlb 0	; select bank0
 13317  1363  0822               	movf	(1+(?_timestampdiff)),w
 13318  1364  0022               	movlb 2	; select bank2
 13319  1365  00AE               	movwf	1+(litterlanguage_pause@context)^0100h+0Dh
 13320  1366  0020               	movlb 0	; select bank0
 13321  1367  0821               	movf	(0+(?_timestampdiff)),w
 13322  1368  0022               	movlb 2	; select bank2
 13323  1369  00AD               	movwf	0+(litterlanguage_pause@context)^0100h+0Dh
 13324                           
 13325                           	line	304
 13326                           	
 13327  136A                     l38055:	
 13328                           ;litterlanguage.c: 304: timeoutnever(&timer_autodose);
 13329  136A  3064               	movlw	(_timer_autodose&0ffh)
 13330  136B  0020               	movlb 0	; select bank0
 13331  136C  00A5               	movwf	(?_timeoutnever)
 13332  136D  3001               	movlw	0x2/2
 13333  136E  00A6               	movwf	(?_timeoutnever+1)
 13334  136F  31A9  21AF  3192   	fcall	_timeoutnever
 13335                           	line	305
 13336                           	
 13337  1372                     l38057:	
 13338                           ;litterlanguage.c: 305: printf("Paused program\n");
 13339  1372  3049               	movlw	low(STR_27|8000h)
 13340  1373  0020               	movlb 0	; select bank0
 13341  1374  00AF               	movwf	(?_printf)
 13342  1375  3087               	movlw	high(STR_27|8000h)
 13343  1376  00B0               	movwf	((?_printf))+1
 13344  1377  3194  24A0  3192   	fcall	_printf
 13345                           	line	306
 13346                           ;litterlanguage.c: 306: } else {
 13347  137A  2C9A               	goto	l38107
 13348                           	
 13349  137B                     l4291:	
 13350                           	line	308
 13351                           ;litterlanguage.c: 308: if (error_overheat)
 13352  137B  1CF1               	btfss	(_error_overheat/8),(_error_overheat)&7
 13353  137C  2B7E               	goto	u11501
 13354  137D  2B7F               	goto	u11500
 13355  137E                     u11501:
 13356  137E  2B81               	goto	l38061
 13357  137F                     u11500:
 13358  137F  2C9F               	goto	l4290
 13359                           	line	309
 13360                           	
 13361  1380                     l38059:	
 13362                           ;litterlanguage.c: 309: return;
 13363  1380  2C9F               	goto	l4290
 13364                           	
 13365  1381                     l4293:	
 13366                           	line	310
 13367                           	
 13368  1381                     l38061:	
 13369                           ;litterlanguage.c: 310: printf("Resuming program\n");
 13370  1381  308B               	movlw	low(STR_28|8000h)
 13371  1382  00AF               	movwf	(?_printf)
 13372  1383  3086               	movlw	high(STR_28|8000h)
 13373  1384  00B0               	movwf	((?_printf))+1
 13374  1385  3194  24A0  3192   	fcall	_printf
 13375                           	line	312
 13376                           	
 13377  1388                     l38063:	
 13378                           ;litterlanguage.c: 312: if (context.wait != 0xFFFFFFFF)
 13379  1388  30FF               	movlw	0FFh
 13380  1389  0022               	movlb 2	; select bank2
 13381  138A  0624               	xorwf	3+(litterlanguage_pause@context)^0100h+01h,w
 13382  138B  1D03               	skipz
 13383  138C  2B97               	goto	u11515
 13384  138D  30FF               	movlw	0FFh
 13385  138E  0623               	xorwf	2+(litterlanguage_pause@context)^0100h+01h,w
 13386  138F  1D03               	skipz
 13387  1390  2B97               	goto	u11515
 13388  1391  30FF               	movlw	0FFh
 13389  1392  0622               	xorwf	1+(litterlanguage_pause@context)^0100h+01h,w
 13390  1393  1D03               	skipz
 13391  1394  2B97               	goto	u11515
 13392  1395  30FF               	movlw	0FFh
 13393  1396  0621               	xorwf	0+(litterlanguage_pause@context)^0100h+01h,w
 13394  1397                     u11515:
 13395  1397  1903               	skipnz
 13396  1398  2B9A               	goto	u11511
 13397  1399  2B9B               	goto	u11510
 13398  139A                     u11511:
 13399  139A  2BB1               	goto	l38067
 13400  139B                     u11510:
 13401                           	line	313
 13402                           	
 13403  139B                     l38065:	
 13404                           ;litterlanguage.c: 313: settimeout(&timer_waitins, context.wait);
 13405  139B  306A               	movlw	(_timer_waitins&0ffh)
 13406  139C  0020               	movlb 0	; select bank0
 13407  139D  00AD               	movwf	(?_settimeout)
 13408  139E  3001               	movlw	0x2/2
 13409  139F  00AE               	movwf	(?_settimeout+1)
 13410  13A0  3001               	movlw	(01h)
 13411  13A1  3E20               	addlw	litterlanguage_pause@context&0ffh
 13412  13A2  0086               	movwf	fsr1l
 13413  13A3  3001               	movlw 1	; select bank2/3
 13414  13A4  0087               	movwf fsr1h	
 13415                           	
 13416  13A5  3F40               	moviw	[0]fsr1
 13417  13A6  00AF               	movwf	0+(?_settimeout)+02h
 13418  13A7  3F41               	moviw	[1]fsr1
 13419  13A8  00B0               	movwf	1+(?_settimeout)+02h
 13420  13A9  3F42               	moviw	[2]fsr1
 13421  13AA  00B1               	movwf	2+(?_settimeout)+02h
 13422  13AB  3F43               	moviw	[3]fsr1
 13423  13AC  00B2               	movwf	3+(?_settimeout)+02h
 13424  13AD  31A0  20DE  3192   	fcall	_settimeout
 13425  13B0  2BB1               	goto	l38067
 13426                           	
 13427  13B1                     l4294:	
 13428                           	line	314
 13429                           	
 13430  13B1                     l38067:	
 13431                           ;litterlanguage.c: 314: if (error_fill) {
 13432  13B1  1FF0               	btfss	(_error_fill/8),(_error_fill)&7
 13433  13B2  2BB4               	goto	u11521
 13434  13B3  2BB5               	goto	u11520
 13435  13B4                     u11521:
 13436  13B4  2BD2               	goto	l38075
 13437  13B5                     u11520:
 13438                           	line	315
 13439                           	
 13440  13B5                     l38069:	
 13441                           ;litterlanguage.c: 315: error_fill = 0;
 13442  13B5  13F0               	bcf	(_error_fill/8),(_error_fill)&7
 13443                           	line	316
 13444                           	
 13445  13B6                     l38071:	
 13446                           ;litterlanguage.c: 316: litterlanguage_event(1, error_fill);
 13447  13B6  3000               	movlw	0
 13448  13B7  1BF0               	btfsc	(_error_fill/8),(_error_fill)&7
 13449  13B8  3001               	movlw	1
 13450  13B9  0020               	movlb 0	; select bank0
 13451  13BA  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13452  13BB  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13453  13BC  00D7               	movwf	(?_litterlanguage_event)
 13454  13BD  3001               	movlw	(01h)
 13455  13BE  31A2  2215  3192   	fcall	_litterlanguage_event
 13456                           	line	317
 13457                           	
 13458  13C1                     l38073:	
 13459                           ;litterlanguage.c: 317: settimeout(&timer_fill, ((3*60+15)*((((4UL * (1000UL * ((1000UL)
                                 ))))/4)/8)));
 13460  13C1  30E9               	movlw	(_timer_fill&0ffh)
 13461  13C2  0020               	movlb 0	; select bank0
 13462  13C3  00AD               	movwf	(?_settimeout)
 13463  13C4  3000               	movlw	0x1/2
 13464  13C5  00AE               	movwf	(?_settimeout+1)
 13465  13C6  3001               	movlw	01h
 13466  13C7  00B2               	movwf	3+(?_settimeout)+02h
 13467  13C8  3073               	movlw	073h
 13468  13C9  00B1               	movwf	2+(?_settimeout)+02h
 13469  13CA  30EE               	movlw	0EEh
 13470  13CB  00B0               	movwf	1+(?_settimeout)+02h
 13471  13CC  30D8               	movlw	0D8h
 13472  13CD  00AF               	movwf	0+(?_settimeout)+02h
 13473                           
 13474  13CE  31A0  20DE  3192   	fcall	_settimeout
 13475                           	line	318
 13476                           ;litterlanguage.c: 318: } else if (context.fill != 0xFFFFFFFF)
 13477  13D1  2BFC               	goto	l38079
 13478                           	
 13479  13D2                     l4295:	
 13480                           	
 13481  13D2                     l38075:	
 13482  13D2  30FF               	movlw	0FFh
 13483  13D3  0022               	movlb 2	; select bank2
 13484  13D4  0628               	xorwf	3+(litterlanguage_pause@context)^0100h+05h,w
 13485  13D5  1D03               	skipz
 13486  13D6  2BE1               	goto	u11535
 13487  13D7  30FF               	movlw	0FFh
 13488  13D8  0627               	xorwf	2+(litterlanguage_pause@context)^0100h+05h,w
 13489  13D9  1D03               	skipz
 13490  13DA  2BE1               	goto	u11535
 13491  13DB  30FF               	movlw	0FFh
 13492  13DC  0626               	xorwf	1+(litterlanguage_pause@context)^0100h+05h,w
 13493  13DD  1D03               	skipz
 13494  13DE  2BE1               	goto	u11535
 13495  13DF  30FF               	movlw	0FFh
 13496  13E0  0625               	xorwf	0+(litterlanguage_pause@context)^0100h+05h,w
 13497  13E1                     u11535:
 13498  13E1  1903               	skipnz
 13499  13E2  2BE4               	goto	u11531
 13500  13E3  2BE5               	goto	u11530
 13501  13E4                     u11531:
 13502  13E4  2BFC               	goto	l38079
 13503  13E5                     u11530:
 13504                           	line	319
 13505                           	
 13506  13E5                     l38077:	
 13507                           ;litterlanguage.c: 319: settimeout(&timer_fill, context.fill);
 13508  13E5  30E9               	movlw	(_timer_fill&0ffh)
 13509  13E6  0020               	movlb 0	; select bank0
 13510  13E7  00AD               	movwf	(?_settimeout)
 13511  13E8  3000               	movlw	0x1/2
 13512  13E9  00AE               	movwf	(?_settimeout+1)
 13513  13EA  3005               	movlw	(05h)
 13514  13EB  3E20               	addlw	litterlanguage_pause@context&0ffh
 13515  13EC  0086               	movwf	fsr1l
 13516  13ED  3001               	movlw 1	; select bank2/3
 13517  13EE  0087               	movwf fsr1h	
 13518                           	
 13519  13EF  3F40               	moviw	[0]fsr1
 13520  13F0  00AF               	movwf	0+(?_settimeout)+02h
 13521  13F1  3F41               	moviw	[1]fsr1
 13522  13F2  00B0               	movwf	1+(?_settimeout)+02h
 13523  13F3  3F42               	moviw	[2]fsr1
 13524  13F4  00B1               	movwf	2+(?_settimeout)+02h
 13525  13F5  3F43               	moviw	[3]fsr1
 13526  13F6  00B2               	movwf	3+(?_settimeout)+02h
 13527  13F7  31A0  20DE  3192   	fcall	_settimeout
 13528  13FA  2BFC               	goto	l38079
 13529                           	
 13530  13FB                     l4297:	
 13531  13FB  2BFC               	goto	l38079
 13532                           	line	320
 13533                           	
 13534  13FC                     l4296:	
 13535                           	
 13536  13FC                     l38079:	
 13537                           ;litterlanguage.c: 320: if (error_drain) {
 13538  13FC  1EF0               	btfss	(_error_drain/8),(_error_drain)&7
 13539  13FD  2BFF               	goto	u11541
 13540  13FE  2C00               	goto	u11540
 13541  13FF                     u11541:
 13542  13FF  2C1D               	goto	l38087
 13543  1400                     u11540:
 13544                           	line	321
 13545                           	
 13546  1400                     l38081:	
 13547                           ;litterlanguage.c: 321: error_drain = 0;
 13548  1400  12F0               	bcf	(_error_drain/8),(_error_drain)&7
 13549                           	line	322
 13550                           	
 13551  1401                     l38083:	
 13552                           ;litterlanguage.c: 322: litterlanguage_event(2, error_drain);
 13553  1401  3000               	movlw	0
 13554  1402  1AF0               	btfsc	(_error_drain/8),(_error_drain)&7
 13555  1403  3001               	movlw	1
 13556  1404  0020               	movlb 0	; select bank0
 13557  1405  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13558  1406  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13559  1407  00D7               	movwf	(?_litterlanguage_event)
 13560  1408  3002               	movlw	(02h)
 13561  1409  31A2  2215  3192   	fcall	_litterlanguage_event
 13562                           	line	323
 13563                           	
 13564  140C                     l38085:	
 13565                           ;litterlanguage.c: 323: settimeout(&timer_drain, ((0*60+10)*((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8)));
 13566  140C  30E3               	movlw	(_timer_drain&0ffh)
 13567  140D  0020               	movlb 0	; select bank0
 13568  140E  00AD               	movwf	(?_settimeout)
 13569  140F  3000               	movlw	0x1/2
 13570  1410  00AE               	movwf	(?_settimeout+1)
 13571  1411  3000               	movlw	0
 13572  1412  00B2               	movwf	3+(?_settimeout)+02h
 13573  1413  3013               	movlw	013h
 13574  1414  00B1               	movwf	2+(?_settimeout)+02h
 13575  1415  3012               	movlw	012h
 13576  1416  00B0               	movwf	1+(?_settimeout)+02h
 13577  1417  30D0               	movlw	0D0h
 13578  1418  00AF               	movwf	0+(?_settimeout)+02h
 13579                           
 13580  1419  31A0  20DE  3192   	fcall	_settimeout
 13581                           	line	324
 13582                           ;litterlanguage.c: 324: } else if (context.drain != 0xFFFFFFFF)
 13583  141C  2C47               	goto	l38091
 13584                           	
 13585  141D                     l4298:	
 13586                           	
 13587  141D                     l38087:	
 13588  141D  30FF               	movlw	0FFh
 13589  141E  0022               	movlb 2	; select bank2
 13590  141F  062C               	xorwf	3+(litterlanguage_pause@context)^0100h+09h,w
 13591  1420  1D03               	skipz
 13592  1421  2C2C               	goto	u11555
 13593  1422  30FF               	movlw	0FFh
 13594  1423  062B               	xorwf	2+(litterlanguage_pause@context)^0100h+09h,w
 13595  1424  1D03               	skipz
 13596  1425  2C2C               	goto	u11555
 13597  1426  30FF               	movlw	0FFh
 13598  1427  062A               	xorwf	1+(litterlanguage_pause@context)^0100h+09h,w
 13599  1428  1D03               	skipz
 13600  1429  2C2C               	goto	u11555
 13601  142A  30FF               	movlw	0FFh
 13602  142B  0629               	xorwf	0+(litterlanguage_pause@context)^0100h+09h,w
 13603  142C                     u11555:
 13604  142C  1903               	skipnz
 13605  142D  2C2F               	goto	u11551
 13606  142E  2C30               	goto	u11550
 13607  142F                     u11551:
 13608  142F  2C47               	goto	l38091
 13609  1430                     u11550:
 13610                           	line	325
 13611                           	
 13612  1430                     l38089:	
 13613                           ;litterlanguage.c: 325: settimeout(&timer_drain, context.drain);
 13614  1430  30E3               	movlw	(_timer_drain&0ffh)
 13615  1431  0020               	movlb 0	; select bank0
 13616  1432  00AD               	movwf	(?_settimeout)
 13617  1433  3000               	movlw	0x1/2
 13618  1434  00AE               	movwf	(?_settimeout+1)
 13619  1435  3009               	movlw	(09h)
 13620  1436  3E20               	addlw	litterlanguage_pause@context&0ffh
 13621  1437  0086               	movwf	fsr1l
 13622  1438  3001               	movlw 1	; select bank2/3
 13623  1439  0087               	movwf fsr1h	
 13624                           	
 13625  143A  3F40               	moviw	[0]fsr1
 13626  143B  00AF               	movwf	0+(?_settimeout)+02h
 13627  143C  3F41               	moviw	[1]fsr1
 13628  143D  00B0               	movwf	1+(?_settimeout)+02h
 13629  143E  3F42               	moviw	[2]fsr1
 13630  143F  00B1               	movwf	2+(?_settimeout)+02h
 13631  1440  3F43               	moviw	[3]fsr1
 13632  1441  00B2               	movwf	3+(?_settimeout)+02h
 13633  1442  31A0  20DE  3192   	fcall	_settimeout
 13634  1445  2C47               	goto	l38091
 13635                           	
 13636  1446                     l4300:	
 13637  1446  2C47               	goto	l38091
 13638                           	line	326
 13639                           	
 13640  1447                     l4299:	
 13641                           	
 13642  1447                     l38091:	
 13643                           ;litterlanguage.c: 326: if (context.autodose != 0xFFFFFFFF)
 13644  1447  30FF               	movlw	0FFh
 13645  1448  0022               	movlb 2	; select bank2
 13646  1449  0630               	xorwf	3+(litterlanguage_pause@context)^0100h+0Dh,w
 13647  144A  1D03               	skipz
 13648  144B  2C56               	goto	u11565
 13649  144C  30FF               	movlw	0FFh
 13650  144D  062F               	xorwf	2+(litterlanguage_pause@context)^0100h+0Dh,w
 13651  144E  1D03               	skipz
 13652  144F  2C56               	goto	u11565
 13653  1450  30FF               	movlw	0FFh
 13654  1451  062E               	xorwf	1+(litterlanguage_pause@context)^0100h+0Dh,w
 13655  1452  1D03               	skipz
 13656  1453  2C56               	goto	u11565
 13657  1454  30FF               	movlw	0FFh
 13658  1455  062D               	xorwf	0+(litterlanguage_pause@context)^0100h+0Dh,w
 13659  1456                     u11565:
 13660  1456  1903               	skipnz
 13661  1457  2C59               	goto	u11561
 13662  1458  2C5A               	goto	u11560
 13663  1459                     u11561:
 13664  1459  2C70               	goto	l38095
 13665  145A                     u11560:
 13666                           	line	327
 13667                           	
 13668  145A                     l38093:	
 13669                           ;litterlanguage.c: 327: settimeout(&timer_autodose, context.autodose);
 13670  145A  3064               	movlw	(_timer_autodose&0ffh)
 13671  145B  0020               	movlb 0	; select bank0
 13672  145C  00AD               	movwf	(?_settimeout)
 13673  145D  3001               	movlw	0x2/2
 13674  145E  00AE               	movwf	(?_settimeout+1)
 13675  145F  300D               	movlw	(0Dh)
 13676  1460  3E20               	addlw	litterlanguage_pause@context&0ffh
 13677  1461  0086               	movwf	fsr1l
 13678  1462  3001               	movlw 1	; select bank2/3
 13679  1463  0087               	movwf fsr1h	
 13680                           	
 13681  1464  3F40               	moviw	[0]fsr1
 13682  1465  00AF               	movwf	0+(?_settimeout)+02h
 13683  1466  3F41               	moviw	[1]fsr1
 13684  1467  00B0               	movwf	1+(?_settimeout)+02h
 13685  1468  3F42               	moviw	[2]fsr1
 13686  1469  00B1               	movwf	2+(?_settimeout)+02h
 13687  146A  3F43               	moviw	[3]fsr1
 13688  146B  00B2               	movwf	3+(?_settimeout)+02h
 13689  146C  31A0  20DE  3192   	fcall	_settimeout
 13690  146F  2C70               	goto	l38095
 13691                           	
 13692  1470                     l4301:	
 13693                           	line	329
 13694                           	
 13695  1470                     l38095:	
 13696                           ;litterlanguage.c: 329: set_Bowl(context.bowl);
 13697  1470  0022               	movlb 2	; select bank2
 13698  1471  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13699  1472  3903               	andlw	(1<<2)-1
 13700  1473  31AA  2282  3192   	fcall	_set_Bowl
 13701                           	line	330
 13702                           	
 13703  1476                     l38097:	
 13704                           ;litterlanguage.c: 330: set_Arm(context.arm);
 13705  1476  0022               	movlb 2	; select bank2
 13706  1477  0C20               	rrf	(litterlanguage_pause@context)^0100h,w
 13707  1478  0C89               	rrf	wreg,f
 13708  1479  3903               	andlw	(1<<2)-1
 13709  147A  31AA  22A6  3192   	fcall	_set_Arm
 13710                           	line	331
 13711                           	
 13712  147D                     l38099:	
 13713                           ;litterlanguage.c: 331: water_fill(context.water);
 13714  147D  0022               	movlb 2	; select bank2
 13715  147E  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 13716  147F  3901               	andlw	(1<<1)-1
 13717  1480  31A9  211B  3192   	fcall	_water_fill
 13718                           	line	332
 13719                           	
 13720  1483                     l38101:	
 13721                           ;litterlanguage.c: 332: set_Dosage(context.dosage);
 13722  1483  0022               	movlb 2	; select bank2
 13723  1484  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 13724  1485  0C89               	rrf	wreg,f
 13725  1486  0C89               	rrf	wreg,f
 13726  1487  3901               	andlw	(1<<1)-1
 13727  1488  31A8  208A  3192   	fcall	_set_Dosage
 13728                           	line	333
 13729                           	
 13730  148B                     l38103:	
 13731                           ;litterlanguage.c: 333: set_Pump(context.pump);
 13732  148B  0022               	movlb 2	; select bank2
 13733  148C  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 13734  148D  0C89               	rrf	wreg,f
 13735  148E  3901               	andlw	(1<<1)-1
 13736  148F  31A8  209B  3192   	fcall	_set_Pump
 13737                           	line	334
 13738                           	
 13739  1492                     l38105:	
 13740                           ;litterlanguage.c: 334: set_Dryer(context.dryer);
 13741  1492  0022               	movlb 2	; select bank2
 13742  1493  0D20               	rlf	(litterlanguage_pause@context)^0100h,w
 13743  1494  0D20               	rlf	(litterlanguage_pause@context)^0100h,w
 13744  1495  3901               	andlw	1
 13745  1496  31A8  20AC  3192   	fcall	_set_Dryer
 13746  1499  2C9A               	goto	l38107
 13747                           	line	335
 13748                           	
 13749  149A                     l4292:	
 13750                           	line	336
 13751                           	
 13752  149A                     l38107:	
 13753                           ;litterlanguage.c: 335: }
 13754                           ;litterlanguage.c: 336: paused = pause;
 13755  149A  12F1               	bcf	(_paused/8),(_paused)&7
 13756  149B  0020               	movlb 0	; select bank0
 13757  149C  1C50               	btfss	(litterlanguage_pause@pause),0
 13758  149D  2C9F               	goto	u11575
 13759  149E  16F1               	bsf	(_paused/8),(_paused)&7
 13760  149F                     u11575:
 13761                           
 13762                           	line	337
 13763                           	
 13764  149F                     l4290:	
 13765  149F  0008               	return
 13766                           	opt stack 0
 13767                           GLOBAL	__end_of_litterlanguage_pause
 13768  14A0                     	__end_of_litterlanguage_pause:
 13769 ;; =============== function _litterlanguage_pause ends ============
 13770                           
 13771                           	signat	_litterlanguage_pause,4216
 13772                           	global	_cmdline_work
 13773                           psect	text3261,local,class=CODE,delta=2
 13774                           global __ptext3261
 13775  2A40                     __ptext3261:
 13776                           
 13777 ;; *************** function _cmdline_work *****************
 13778 ;; Defined at:
 13779 ;;		line 72 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;		None
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;  rxd             1   62[BANK0 ] unsigned char 
 13784 ;; Return value:  Size  Location     Type
 13785 ;;		None               void
 13786 ;; Registers used:
 13787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13797 ;;Total ram usage:        1 bytes
 13798 ;; Hardware stack levels used:    1
 13799 ;; Hardware stack levels required when called:    7
 13800 ;; This function calls:
 13801 ;;		_putch
 13802 ;;		_proc_char
 13803 ;;		_readch
 13804 ;; This function is called by:
 13805 ;;		_main
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           psect	text3261
 13809                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 13810                           	line	72
 13811                           	global	__size_of_cmdline_work
 13812  001F                     	__size_of_cmdline_work	equ	__end_of_cmdline_work-_cmdline_work
 13813                           	
 13814  2A40                     _cmdline_work:	
 13815                           	opt	stack 8
 13816                           ; Regs used in _cmdline_work: [allreg]
 13817                           	line	75
 13818                           	
 13819  2A40                     l38003:	
 13820                           ;cmdline.c: 73: char rxd ;
 13821                           ;cmdline.c: 75: while (readch(&rxd))
 13822  2A40  2A54               	goto	l38011
 13823                           	
 13824  2A41                     l15100:	
 13825                           	line	76
 13826                           ;cmdline.c: 76: switch(rxd) {
 13827  2A41  2A4D               	goto	l38009
 13828                           	line	77
 13829                           ;cmdline.c: 77: case 0x05:
 13830                           	
 13831  2A42                     l15102:	
 13832                           	line	78
 13833                           	
 13834  2A42                     l38005:	
 13835                           ;cmdline.c: 78: putch(0x06);
 13836  2A42  3006               	movlw	(06h)
 13837  2A43  31AB  2368  31AA   	fcall	_putch
 13838                           	line	79
 13839                           ;cmdline.c: 79: break;
 13840  2A46  2A54               	goto	l38011
 13841                           	line	80
 13842                           ;cmdline.c: 80: default:
 13843                           	
 13844  2A47                     l15104:	
 13845                           	line	81
 13846                           	
 13847  2A47                     l38007:	
 13848                           ;cmdline.c: 81: proc_char(rxd);
 13849  2A47  0020               	movlb 0	; select bank0
 13850  2A48  085F               	movf	(cmdline_work@rxd),w
 13851  2A49  3198  200C  31AA   	fcall	_proc_char
 13852                           	line	82
 13853                           ;cmdline.c: 82: }
 13854  2A4C  2A54               	goto	l38011
 13855                           	line	76
 13856                           	
 13857  2A4D                     l15101:	
 13858                           	
 13859  2A4D                     l38009:	
 13860  2A4D  0020               	movlb 0	; select bank0
 13861  2A4E  085F               	movf	(cmdline_work@rxd),w
 13862                           	; Switch size 1, requested type "space"
 13863                           ; Number of cases is 1, Range of values is 5 to 5
 13864                           ; switch strategies available:
 13865                           ; Name         Instructions Cycles
 13866                           ; simple_byte            4     3 (average)
 13867                           ; direct_byte           11     9 (fixed)
 13868                           ; jumptable            263     9 (fixed)
 13869                           ;	Chosen strategy is simple_byte
 13870                           
 13871                           	opt asmopt_off
 13872  2A4F  3A05               	xorlw	5^0	; case 5
 13873  2A50  1903               	skipnz
 13874  2A51  2A42               	goto	l38005
 13875  2A52  2A47               	goto	l38007
 13876                           	opt asmopt_on
 13877                           
 13878                           	line	82
 13879                           	
 13880  2A53                     l15103:	
 13881  2A53  2A54               	goto	l38011
 13882                           	
 13883  2A54                     l15099:	
 13884                           	line	75
 13885                           	
 13886  2A54                     l38011:	
 13887  2A54  305F               	movlw	(cmdline_work@rxd)&0ffh
 13888  2A55  31A2  227E  31AA   	fcall	_readch
 13889  2A58  3800               	iorlw	0
 13890  2A59  1D03               	skipz
 13891  2A5A  2A5C               	goto	u11471
 13892  2A5B  2A5D               	goto	u11470
 13893  2A5C                     u11471:
 13894  2A5C  2A4D               	goto	l38009
 13895  2A5D                     u11470:
 13896  2A5D  2A5E               	goto	l15106
 13897                           	
 13898  2A5E                     l15105:	
 13899                           	line	83
 13900                           	
 13901  2A5E                     l15106:	
 13902  2A5E  0008               	return
 13903                           	opt stack 0
 13904                           GLOBAL	__end_of_cmdline_work
 13905  2A5F                     	__end_of_cmdline_work:
 13906 ;; =============== function _cmdline_work ends ============
 13907                           
 13908                           	signat	_cmdline_work,88
 13909                           	global	_catsensor_work
 13910                           psect	text3262,local,class=CODE,delta=2
 13911                           global __ptext3262
 13912  2630                     __ptext3262:
 13913                           
 13914 ;; *************** function _catsensor_work *****************
 13915 ;; Defined at:
 13916 ;;		line 86 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 13917 ;; Parameters:    Size  Location     Type
 13918 ;;		None
 13919 ;; Auto vars:     Size  Location     Type
 13920 ;;		None
 13921 ;; Return value:  Size  Location     Type
 13922 ;;		None               void
 13923 ;; Registers used:
 13924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13925 ;; Tracked objects:
 13926 ;;		On entry : 0/0
 13927 ;;		On exit  : 0/0
 13928 ;;		Unchanged: 0/0
 13929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13934 ;;Total ram usage:        1 bytes
 13935 ;; Hardware stack levels used:    1
 13936 ;; Hardware stack levels required when called:    7
 13937 ;; This function calls:
 13938 ;;		_timeoutexpired
 13939 ;;		_settimeout
 13940 ;;		_timeoutnever
 13941 ;;		_catsensor_event
 13942 ;; This function is called by:
 13943 ;;		_main
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           psect	text3262
 13947                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 13948                           	line	86
 13949                           	global	__size_of_catsensor_work
 13950  008E                     	__size_of_catsensor_work	equ	__end_of_catsensor_work-_catsensor_work
 13951                           	
 13952  2630                     _catsensor_work:	
 13953                           	opt	stack 8
 13954                           ; Regs used in _catsensor_work: [wreg-status,0+pclath+cstack]
 13955                           	line	88
 13956                           	
 13957  2630                     l37967:	
 13958                           ;catsensor.c: 87: if (!pinging &&
 13959                           ;catsensor.c: 88: timeoutexpired(&pingtime)) {
 13960  2630  1B71               	btfsc	(_pinging/8),(_pinging)&7
 13961  2631  2E33               	goto	u11361
 13962  2632  2E34               	goto	u11360
 13963  2633                     u11361:
 13964  2633  2E62               	goto	l37989
 13965  2634                     u11360:
 13966                           	
 13967  2634                     l37969:	
 13968  2634  3046               	movlw	(_pingtime&0ffh)
 13969  2635  0020               	movlb 0	; select bank0
 13970  2636  00A9               	movwf	(?_timeoutexpired)
 13971  2637  3001               	movlw	0x2/2
 13972  2638  00AA               	movwf	(?_timeoutexpired+1)
 13973  2639  31A3  235B  31A6   	fcall	_timeoutexpired
 13974  263C  3A00               	xorlw	0&0ffh
 13975  263D  1903               	skipnz
 13976  263E  2E40               	goto	u11371
 13977  263F  2E41               	goto	u11370
 13978  2640                     u11371:
 13979  2640  2E62               	goto	l37989
 13980  2641                     u11370:
 13981                           	line	90
 13982                           	
 13983  2641                     l37971:	
 13984                           ;catsensor.c: 90: settimeout(&pingtime, (((((4UL * (1000UL * ((1000UL)))))/4)/8) / 10));
 13985  2641  3046               	movlw	(_pingtime&0ffh)
 13986  2642  0020               	movlb 0	; select bank0
 13987  2643  00AD               	movwf	(?_settimeout)
 13988  2644  3001               	movlw	0x2/2
 13989  2645  00AE               	movwf	(?_settimeout+1)
 13990  2646  3000               	movlw	0
 13991  2647  00B2               	movwf	3+(?_settimeout)+02h
 13992  2648  3000               	movlw	0
 13993  2649  00B1               	movwf	2+(?_settimeout)+02h
 13994  264A  3030               	movlw	030h
 13995  264B  00B0               	movwf	1+(?_settimeout)+02h
 13996  264C  30D4               	movlw	0D4h
 13997  264D  00AF               	movwf	0+(?_settimeout)+02h
 13998                           
 13999  264E  31A0  20DE  31A6   	fcall	_settimeout
 14000                           	line	92
 14001                           	
 14002  2651                     l37973:	
 14003                           ;catsensor.c: 92: echoed = 0;
 14004  2651  1270               	bcf	(_echoed/8),(_echoed)&7
 14005                           	line	94
 14006                           	
 14007  2652                     l37975:	
 14008                           ;catsensor.c: 94: pinging = 1;
 14009  2652  1771               	bsf	(_pinging/8),(_pinging)&7
 14010                           	line	97
 14011                           	
 14012  2653                     l37977:	
 14013                           ;catsensor.c: 97: PR2 = 0x54 ;
 14014  2653  3054               	movlw	(054h)
 14015  2654  0020               	movlb 0	; select bank0
 14016  2655  009B               	movwf	(27)	;volatile
 14017                           	line	101
 14018                           	
 14019  2656                     l37979:	
 14020                           ;catsensor.c: 101: T2CON = 0x7D ;
 14021  2656  307D               	movlw	(07Dh)
 14022  2657  009C               	movwf	(28)	;volatile
 14023                           	line	103
 14024                           	
 14025  2658                     l37981:	
 14026                           ;catsensor.c: 103: CCPR1L = 0x2A ;
 14027  2658  302A               	movlw	(02Ah)
 14028  2659  0025               	movlb 5	; select bank5
 14029  265A  0091               	movwf	(657)^0280h	;volatile
 14030                           	line	106
 14031                           	
 14032  265B                     l37983:	
 14033                           ;catsensor.c: 106: CCP1CON = 0x1F ;
 14034  265B  301F               	movlw	(01Fh)
 14035  265C  0093               	movwf	(659)^0280h	;volatile
 14036                           	line	108
 14037                           	
 14038  265D                     l37985:	
 14039                           ;catsensor.c: 108: TMR2IF = 0;
 14040  265D  0020               	movlb 0	; select bank0
 14041  265E  1091               	bcf	(137/8),(137)&7
 14042                           	line	110
 14043                           	
 14044  265F                     l37987:	
 14045                           ;catsensor.c: 110: TMR2IE = 1;
 14046  265F  0021               	movlb 1	; select bank1
 14047  2660  1491               	bsf	(1161/8)^080h,(1161)&7
 14048  2661  2E62               	goto	l37989
 14049                           	line	111
 14050                           	
 14051  2662                     l13034:	
 14052                           	line	113
 14053                           	
 14054  2662                     l37989:	
 14055                           ;catsensor.c: 111: }
 14056                           ;catsensor.c: 113: if (detected_cur != detected_old) {
 14057  2662  19F0               	btfsc	(_detected_old/8),(_detected_old)&7
 14058  2663  2E65               	goto	u11381
 14059  2664  2E67               	goto	u11380
 14060  2665                     u11381:
 14061  2665  3001               	movlw	1
 14062  2666  2E68               	goto	u11382
 14063  2667                     u11380:
 14064  2667  3000               	movlw	0
 14065  2668                     u11382:
 14066  2668  0020               	movlb 0	; select bank0
 14067  2669  00D2               	movwf	(??_catsensor_work+0)+0
 14068  266A  1970               	btfsc	(_detected_cur/8),(_detected_cur)&7
 14069  266B  2E6D               	goto	u11391
 14070  266C  2E6F               	goto	u11390
 14071  266D                     u11391:
 14072  266D  3001               	movlw	1
 14073  266E  2E70               	goto	u11392
 14074  266F                     u11390:
 14075  266F  3000               	movlw	0
 14076  2670                     u11392:
 14077  2670  0652               	xorwf	(??_catsensor_work+0)+0,w
 14078  2671  1903               	skipnz
 14079  2672  2E74               	goto	u11401
 14080  2673  2E75               	goto	u11400
 14081  2674                     u11401:
 14082  2674  2E88               	goto	l13035
 14083  2675                     u11400:
 14084                           	line	114
 14085                           	
 14086  2675                     l37991:	
 14087                           ;catsensor.c: 114: settimeout(&debouncer, (3 * (((((4UL * (1000UL * ((1000UL)))))/4)/8) 
                                 / 10)));
 14088  2675  3058               	movlw	(_debouncer&0ffh)
 14089  2676  00AD               	movwf	(?_settimeout)
 14090  2677  3001               	movlw	0x2/2
 14091  2678  00AE               	movwf	(?_settimeout+1)
 14092  2679  3000               	movlw	0
 14093  267A  00B2               	movwf	3+(?_settimeout)+02h
 14094  267B  3000               	movlw	0
 14095  267C  00B1               	movwf	2+(?_settimeout)+02h
 14096  267D  3092               	movlw	092h
 14097  267E  00B0               	movwf	1+(?_settimeout)+02h
 14098  267F  307C               	movlw	07Ch
 14099  2680  00AF               	movwf	0+(?_settimeout)+02h
 14100                           
 14101  2681  31A0  20DE  31A6   	fcall	_settimeout
 14102                           	line	115
 14103                           	
 14104  2684                     l37993:	
 14105                           ;catsensor.c: 115: detected_old = detected_cur;
 14106  2684  11F0               	bcf	(_detected_old/8),(_detected_old)&7
 14107  2685  1D70               	btfss	(_detected_cur/8),(_detected_cur)&7
 14108  2686  2E88               	goto	u11415
 14109  2687  15F0               	bsf	(_detected_old/8),(_detected_old)&7
 14110  2688                     u11415:
 14111                           
 14112                           	line	116
 14113                           	
 14114  2688                     l13035:	
 14115                           	line	119
 14116                           ;catsensor.c: 116: }
 14117                           ;catsensor.c: 119: if (timeoutexpired(&debouncer)) {
 14118  2688  3058               	movlw	(_debouncer&0ffh)
 14119  2689  0020               	movlb 0	; select bank0
 14120  268A  00A9               	movwf	(?_timeoutexpired)
 14121  268B  3001               	movlw	0x2/2
 14122  268C  00AA               	movwf	(?_timeoutexpired+1)
 14123  268D  31A3  235B  31A6   	fcall	_timeoutexpired
 14124  2690  3A00               	xorlw	0&0ffh
 14125  2691  1903               	skipnz
 14126  2692  2E94               	goto	u11421
 14127  2693  2E95               	goto	u11420
 14128  2694                     u11421:
 14129  2694  2EBD               	goto	l13038
 14130  2695                     u11420:
 14131                           	line	120
 14132                           	
 14133  2695                     l37995:	
 14134                           ;catsensor.c: 120: timeoutnever(&debouncer);
 14135  2695  3058               	movlw	(_debouncer&0ffh)
 14136  2696  0020               	movlb 0	; select bank0
 14137  2697  00A5               	movwf	(?_timeoutnever)
 14138  2698  3001               	movlw	0x2/2
 14139  2699  00A6               	movwf	(?_timeoutnever+1)
 14140  269A  31A9  21AF  31A6   	fcall	_timeoutnever
 14141                           	line	121
 14142                           	
 14143  269D                     l37997:	
 14144                           ;catsensor.c: 121: if (detected_cur != detected_dbc) {
 14145  269D  0020               	movlb 0	; select bank0
 14146  269E  18ED               	btfsc	(_detected_dbc/8),(_detected_dbc)&7
 14147  269F  2EA1               	goto	u11431
 14148  26A0  2EA3               	goto	u11430
 14149  26A1                     u11431:
 14150  26A1  3001               	movlw	1
 14151  26A2  2EA4               	goto	u11432
 14152  26A3                     u11430:
 14153  26A3  3000               	movlw	0
 14154  26A4                     u11432:
 14155  26A4  00D2               	movwf	(??_catsensor_work+0)+0
 14156  26A5  1970               	btfsc	(_detected_cur/8),(_detected_cur)&7
 14157  26A6  2EA8               	goto	u11441
 14158  26A7  2EAA               	goto	u11440
 14159  26A8                     u11441:
 14160  26A8  3001               	movlw	1
 14161  26A9  2EAB               	goto	u11442
 14162  26AA                     u11440:
 14163  26AA  3000               	movlw	0
 14164  26AB                     u11442:
 14165  26AB  0652               	xorwf	(??_catsensor_work+0)+0,w
 14166  26AC  1903               	skipnz
 14167  26AD  2EAF               	goto	u11451
 14168  26AE  2EB0               	goto	u11450
 14169  26AF                     u11451:
 14170  26AF  2EBD               	goto	l13038
 14171  26B0                     u11450:
 14172                           	line	122
 14173                           	
 14174  26B0                     l37999:	
 14175                           ;catsensor.c: 122: detected_dbc = detected_cur;
 14176  26B0  10ED               	bcf	(_detected_dbc/8),(_detected_dbc)&7
 14177  26B1  1D70               	btfss	(_detected_cur/8),(_detected_cur)&7
 14178  26B2  2EB4               	goto	u11465
 14179  26B3  14ED               	bsf	(_detected_dbc/8),(_detected_dbc)&7
 14180  26B4                     u11465:
 14181                           
 14182                           	line	123
 14183                           	
 14184  26B4                     l38001:	
 14185                           ;catsensor.c: 123: catsensor_event(detected_dbc);
 14186  26B4  3000               	movlw	0
 14187  26B5  0020               	movlb 0	; select bank0
 14188  26B6  18ED               	btfsc	(_detected_dbc/8),(_detected_dbc)&7
 14189  26B7  3001               	movlw	1
 14190  26B8  3198  208D  31A6   	fcall	_catsensor_event
 14191  26BB  2EBD               	goto	l13038
 14192                           	line	124
 14193                           	
 14194  26BC                     l13037:	
 14195  26BC  2EBD               	goto	l13038
 14196                           	line	125
 14197                           	
 14198  26BD                     l13036:	
 14199                           	line	126
 14200                           	
 14201  26BD                     l13038:	
 14202  26BD  0008               	return
 14203                           	opt stack 0
 14204                           GLOBAL	__end_of_catsensor_work
 14205  26BE                     	__end_of_catsensor_work:
 14206 ;; =============== function _catsensor_work ends ============
 14207                           
 14208                           	signat	_catsensor_work,88
 14209                           	global	_proc_char
 14210                           psect	text3263,local,class=CODE,delta=2
 14211                           global __ptext3263
 14212  180C                     __ptext3263:
 14213                           
 14214 ;; *************** function _proc_char *****************
 14215 ;; Defined at:
 14216 ;;		line 92 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;  rxd             1    wreg     unsigned char 
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;  rxd             1   61[BANK0 ] unsigned char 
 14221 ;; Return value:  Size  Location     Type
 14222 ;;		None               void
 14223 ;; Registers used:
 14224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14234 ;;Total ram usage:        2 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    6
 14237 ;; This function calls:
 14238 ;;		_putch
 14239 ;;		_proc_line
 14240 ;;		_printf
 14241 ;; This function is called by:
 14242 ;;		_cmdline_work
 14243 ;; This function uses a non-reentrant model
 14244 ;;
 14245                           psect	text3263
 14246                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 14247                           	line	92
 14248                           	global	__size_of_proc_char
 14249  0081                     	__size_of_proc_char	equ	__end_of_proc_char-_proc_char
 14250                           	
 14251  180C                     _proc_char:	
 14252                           	opt	stack 8
 14253                           ; Regs used in _proc_char: [allreg]
 14254                           ;proc_char@rxd stored from wreg
 14255                           	line	95
 14256  180C  0020               	movlb 0	; select bank0
 14257  180D  00DE               	movwf	(proc_char@rxd)
 14258                           	
 14259  180E                     l37921:	
 14260                           ;cmdline.c: 93: static unsigned char curcolumn = 0;
 14261                           ;cmdline.c: 95: if ((rxd >= ' ') && (rxd <= '~')) {
 14262  180E  3020               	movlw	(020h)
 14263  180F  025E               	subwf	(proc_char@rxd),w
 14264  1810  1C03               	skipc
 14265  1811  2813               	goto	u11241
 14266  1812  2814               	goto	u11240
 14267  1813                     u11241:
 14268  1813  2843               	goto	l37939
 14269  1814                     u11240:
 14270                           	
 14271  1814                     l37923:	
 14272  1814  307F               	movlw	(07Fh)
 14273  1815  025E               	subwf	(proc_char@rxd),w
 14274  1816  1803               	skipnc
 14275  1817  2819               	goto	u11251
 14276  1818  281A               	goto	u11250
 14277  1819                     u11251:
 14278  1819  2843               	goto	l37939
 14279  181A                     u11250:
 14280                           	line	96
 14281                           	
 14282  181A                     l37925:	
 14283                           ;cmdline.c: 96: if (curcolumn < ((20)-1)) {
 14284  181A  3013               	movlw	(013h)
 14285  181B  0267               	subwf	(proc_char@curcolumn),w
 14286  181C  1803               	skipnc
 14287  181D  281F               	goto	u11261
 14288  181E  2820               	goto	u11260
 14289  181F                     u11261:
 14290  181F  2837               	goto	l37935
 14291  1820                     u11260:
 14292                           	line	98
 14293                           	
 14294  1820                     l37927:	
 14295                           ;cmdline.c: 98: linebuffer[curcolumn] = rxd;
 14296  1820  085E               	movf	(proc_char@rxd),w
 14297  1821  00DD               	movwf	(??_proc_char+0)+0
 14298  1822  0867               	movf	(proc_char@curcolumn),w
 14299  1823  3ECE               	addlw	_linebuffer&0ffh
 14300  1824  0086               	movwf	fsr1l
 14301  1825  3001               	movlw 1	; select bank3/4
 14302  1826  0087               	movwf fsr1h	
 14303                           	
 14304  1827  085D               	movf	(??_proc_char+0)+0,w
 14305  1828  0081               	movwf	indf1
 14306                           	line	99
 14307                           	
 14308  1829                     l37929:	
 14309                           ;cmdline.c: 99: curcolumn++;
 14310  1829  3001               	movlw	(01h)
 14311  182A  00DD               	movwf	(??_proc_char+0)+0
 14312  182B  085D               	movf	(??_proc_char+0)+0,w
 14313  182C  07E7               	addwf	(proc_char@curcolumn),f
 14314                           	line	101
 14315                           	
 14316  182D                     l37931:	
 14317                           ;cmdline.c: 101: if (localecho)
 14318  182D  086F               	movf	(_localecho),w
 14319  182E  1D03               	skipz
 14320  182F  2831               	goto	u11270
 14321  1830  288C               	goto	l15125
 14322  1831                     u11270:
 14323                           	line	102
 14324                           	
 14325  1831                     l37933:	
 14326                           ;cmdline.c: 102: putch(rxd);
 14327  1831  085E               	movf	(proc_char@rxd),w
 14328  1832  31AB  2368  3198   	fcall	_putch
 14329  1835  288C               	goto	l15125
 14330                           	
 14331  1836                     l15113:	
 14332                           	line	103
 14333                           ;cmdline.c: 103: } else
 14334  1836  288C               	goto	l15125
 14335                           	
 14336  1837                     l15112:	
 14337                           	line	105
 14338                           	
 14339  1837                     l37935:	
 14340                           ;cmdline.c: 105: if (localecho)
 14341  1837  0020               	movlb 0	; select bank0
 14342  1838  086F               	movf	(_localecho),w
 14343  1839  1D03               	skipz
 14344  183A  283C               	goto	u11280
 14345  183B  288C               	goto	l15125
 14346  183C                     u11280:
 14347                           	line	106
 14348                           	
 14349  183C                     l37937:	
 14350                           ;cmdline.c: 106: putch('\a');
 14351  183C  3007               	movlw	(07h)
 14352  183D  31AB  2368  3198   	fcall	_putch
 14353  1840  288C               	goto	l15125
 14354                           	
 14355  1841                     l15115:	
 14356  1841  288C               	goto	l15125
 14357                           	line	107
 14358                           	
 14359  1842                     l15114:	
 14360                           ;cmdline.c: 107: } else if (rxd == '\r') {
 14361  1842  288C               	goto	l15125
 14362                           	
 14363  1843                     l15111:	
 14364                           	
 14365  1843                     l37939:	
 14366  1843  0020               	movlb 0	; select bank0
 14367  1844  085E               	movf	(proc_char@rxd),w
 14368  1845  3A0D               	xorlw	0Dh&0ffh
 14369  1846  1D03               	skipz
 14370  1847  2849               	goto	u11291
 14371  1848  284A               	goto	u11290
 14372  1849                     u11291:
 14373  1849  2872               	goto	l37957
 14374  184A                     u11290:
 14375                           	line	108
 14376                           	
 14377  184A                     l37941:	
 14378                           ;cmdline.c: 108: if (localecho)
 14379  184A  086F               	movf	(_localecho),w
 14380  184B  1D03               	skipz
 14381  184C  284E               	goto	u11300
 14382  184D  2853               	goto	l37945
 14383  184E                     u11300:
 14384                           	line	109
 14385                           	
 14386  184E                     l37943:	
 14387                           ;cmdline.c: 109: putch('\n');
 14388  184E  300A               	movlw	(0Ah)
 14389  184F  31AB  2368  3198   	fcall	_putch
 14390  1852  2853               	goto	l37945
 14391                           	
 14392  1853                     l15118:	
 14393                           	line	111
 14394                           	
 14395  1853                     l37945:	
 14396                           ;cmdline.c: 111: if (curcolumn) {
 14397  1853  0020               	movlb 0	; select bank0
 14398  1854  0867               	movf	(proc_char@curcolumn),w
 14399  1855  1D03               	skipz
 14400  1856  2858               	goto	u11310
 14401  1857  2863               	goto	l37951
 14402  1858                     u11310:
 14403                           	line	113
 14404                           	
 14405  1858                     l37947:	
 14406                           ;cmdline.c: 113: linebuffer[curcolumn] = 0;
 14407  1858  0867               	movf	(proc_char@curcolumn),w
 14408  1859  3ECE               	addlw	_linebuffer&0ffh
 14409  185A  0086               	movwf	fsr1l
 14410  185B  3001               	movlw 1	; select bank3/4
 14411  185C  0087               	movwf fsr1h	
 14412                           	
 14413  185D  0181               	clrf	indf1
 14414                           	line	115
 14415                           	
 14416  185E                     l37949:	
 14417                           ;cmdline.c: 115: proc_line(linebuffer);
 14418  185E  30CE               	movlw	(_linebuffer)&0ffh
 14419  185F  319A  22C6  3198   	fcall	_proc_line
 14420  1862  2863               	goto	l37951
 14421                           	line	116
 14422                           	
 14423  1863                     l15119:	
 14424                           	line	117
 14425                           	
 14426  1863                     l37951:	
 14427                           ;cmdline.c: 116: }
 14428                           ;cmdline.c: 117: curcolumn = 0;
 14429  1863  0020               	movlb 0	; select bank0
 14430  1864  01E7               	clrf	(proc_char@curcolumn)
 14431                           	line	119
 14432                           	
 14433  1865                     l37953:	
 14434                           ;cmdline.c: 119: if (localecho)
 14435  1865  086F               	movf	(_localecho),w
 14436  1866  1D03               	skipz
 14437  1867  2869               	goto	u11320
 14438  1868  288C               	goto	l15125
 14439  1869                     u11320:
 14440                           	line	120
 14441                           	
 14442  1869                     l37955:	
 14443                           ;cmdline.c: 120: printf("# ");
 14444  1869  303C               	movlw	low(STR_100|8000h)
 14445  186A  00AF               	movwf	(?_printf)
 14446  186B  3089               	movlw	high(STR_100|8000h)
 14447  186C  00B0               	movwf	((?_printf))+1
 14448  186D  3194  24A0  3198   	fcall	_printf
 14449  1870  288C               	goto	l15125
 14450                           	
 14451  1871                     l15120:	
 14452                           	line	121
 14453                           ;cmdline.c: 121: } else if (rxd == 0x7f) {
 14454  1871  288C               	goto	l15125
 14455                           	
 14456  1872                     l15117:	
 14457                           	
 14458  1872                     l37957:	
 14459  1872  0020               	movlb 0	; select bank0
 14460  1873  085E               	movf	(proc_char@rxd),w
 14461  1874  3A7F               	xorlw	07Fh&0ffh
 14462  1875  1D03               	skipz
 14463  1876  2878               	goto	u11331
 14464  1877  2879               	goto	u11330
 14465  1878                     u11331:
 14466  1878  288C               	goto	l15125
 14467  1879                     u11330:
 14468                           	line	123
 14469                           	
 14470  1879                     l37959:	
 14471                           ;cmdline.c: 123: if (curcolumn) {
 14472  1879  0867               	movf	(proc_char@curcolumn),w
 14473  187A  1D03               	skipz
 14474  187B  287D               	goto	u11340
 14475  187C  288C               	goto	l15125
 14476  187D                     u11340:
 14477                           	line	125
 14478                           	
 14479  187D                     l37961:	
 14480                           ;cmdline.c: 125: curcolumn--;
 14481  187D  3001               	movlw	low(01h)
 14482  187E  02E7               	subwf	(proc_char@curcolumn),f
 14483                           	line	127
 14484                           	
 14485  187F                     l37963:	
 14486                           ;cmdline.c: 127: if (localecho)
 14487  187F  086F               	movf	(_localecho),w
 14488  1880  1D03               	skipz
 14489  1881  2883               	goto	u11350
 14490  1882  288C               	goto	l15125
 14491  1883                     u11350:
 14492                           	line	128
 14493                           	
 14494  1883                     l37965:	
 14495                           ;cmdline.c: 128: putch(rxd);
 14496  1883  085E               	movf	(proc_char@rxd),w
 14497  1884  31AB  2368  3198   	fcall	_putch
 14498  1887  288C               	goto	l15125
 14499                           	
 14500  1888                     l15124:	
 14501  1888  288C               	goto	l15125
 14502                           	line	129
 14503                           	
 14504  1889                     l15123:	
 14505  1889  288C               	goto	l15125
 14506                           	line	130
 14507                           	
 14508  188A                     l15122:	
 14509  188A  288C               	goto	l15125
 14510                           	line	131
 14511                           	
 14512  188B                     l15121:	
 14513  188B  288C               	goto	l15125
 14514                           	
 14515  188C                     l15116:	
 14516                           	
 14517  188C                     l15125:	
 14518  188C  0008               	return
 14519                           	opt stack 0
 14520                           GLOBAL	__end_of_proc_char
 14521  188D                     	__end_of_proc_char:
 14522 ;; =============== function _proc_char ends ============
 14523                           
 14524                           	signat	_proc_char,4216
 14525                           	global	_catsensor_event
 14526                           psect	text3264,local,class=CODE,delta=2
 14527                           global __ptext3264
 14528  188D                     __ptext3264:
 14529                           
 14530 ;; *************** function _catsensor_event *****************
 14531 ;; Defined at:
 14532 ;;		line 290 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14533 ;; Parameters:    Size  Location     Type
 14534 ;;  detected        1    wreg     unsigned char 
 14535 ;; Auto vars:     Size  Location     Type
 14536 ;;  detected        1   48[BANK0 ] unsigned char 
 14537 ;; Return value:  Size  Location     Type
 14538 ;;		None               void
 14539 ;; Registers used:
 14540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14541 ;; Tracked objects:
 14542 ;;		On entry : 0/0
 14543 ;;		On exit  : 0/0
 14544 ;;		Unchanged: 0/0
 14545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14547 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14549 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14550 ;;Total ram usage:        3 bytes
 14551 ;; Hardware stack levels used:    1
 14552 ;; Hardware stack levels required when called:    6
 14553 ;; This function calls:
 14554 ;;		_printtime
 14555 ;;		_printf
 14556 ;;		_timeoutnever
 14557 ;;		_settimeout
 14558 ;;		_update_display
 14559 ;; This function is called by:
 14560 ;;		_catsensor_work
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           psect	text3264
 14564                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14565                           	line	290
 14566                           	global	__size_of_catsensor_event
 14567  00B5                     	__size_of_catsensor_event	equ	__end_of_catsensor_event-_catsensor_event
 14568                           	
 14569  188D                     _catsensor_event:	
 14570                           	opt	stack 8
 14571                           ; Regs used in _catsensor_event: [wreg-status,0+pclath+cstack]
 14572                           ;catsensor_event@detected stored from wreg
 14573                           	line	292
 14574  188D  0020               	movlb 0	; select bank0
 14575  188E  00D1               	movwf	(catsensor_event@detected)
 14576                           	
 14577  188F                     l37871:	
 14578                           ;userinterface.c: 292: cat_present = detected;
 14579  188F  10F0               	bcf	(_cat_present/8),(_cat_present)&7
 14580  1890  1C51               	btfss	(catsensor_event@detected),0
 14581  1891  2893               	goto	u11065
 14582  1892  14F0               	bsf	(_cat_present/8),(_cat_present)&7
 14583  1893                     u11065:
 14584                           
 14585                           	line	294
 14586                           	
 14587  1893                     l37873:	
 14588                           ;userinterface.c: 294: printtime();
 14589  1893  31AB  2395  3198   	fcall	_printtime
 14590                           	line	295
 14591                           	
 14592  1896                     l37875:	
 14593                           ;userinterface.c: 295: printf("Cat %s\n", detected?"in":"out");
 14594  1896  0020               	movlb 0	; select bank0
 14595  1897  08D1               	movf	(catsensor_event@detected),f
 14596  1898  1D03               	skipz
 14597  1899  289B               	goto	u11071
 14598  189A  289C               	goto	u11070
 14599  189B                     u11071:
 14600  189B  28A1               	goto	l37879
 14601  189C                     u11070:
 14602                           	
 14603  189C                     l37877:	
 14604  189C  3028               	movlw	low(STR_97|8000h)
 14605  189D  00CF               	movwf	(_catsensor_event$10723)
 14606  189E  3089               	movlw	high(STR_97|8000h)
 14607  189F  00D0               	movwf	((_catsensor_event$10723))+1
 14608  18A0  28A6               	goto	l37881
 14609                           	
 14610  18A1                     l8679:	
 14611                           	
 14612  18A1                     l37879:	
 14613  18A1  303F               	movlw	low(STR_96|8000h)
 14614  18A2  00CF               	movwf	(_catsensor_event$10723)
 14615  18A3  3089               	movlw	high(STR_96|8000h)
 14616  18A4  00D0               	movwf	((_catsensor_event$10723))+1
 14617  18A5  28A6               	goto	l37881
 14618                           	
 14619  18A6                     l8681:	
 14620                           	
 14621  18A6                     l37881:	
 14622  18A6  30D4               	movlw	low(STR_95|8000h)
 14623  18A7  00AF               	movwf	(?_printf)
 14624  18A8  3088               	movlw	high(STR_95|8000h)
 14625  18A9  00B0               	movwf	((?_printf))+1
 14626  18AA  0850               	movf	(_catsensor_event$10723+1),w
 14627  18AB  01B2               	clrf	(1+?_printf+02h)
 14628  18AC  07B2               	addwf	(1+?_printf+02h)
 14629  18AD  084F               	movf	(_catsensor_event$10723),w
 14630  18AE  01B1               	clrf	(0+?_printf+02h)
 14631  18AF  07B1               	addwf	(0+?_printf+02h)
 14632                           
 14633  18B0  3194  24A0  3198   	fcall	_printf
 14634                           	line	298
 14635                           	
 14636  18B3                     l37883:	
 14637                           ;userinterface.c: 298: if (detected)
 14638  18B3  0020               	movlb 0	; select bank0
 14639  18B4  0851               	movf	(catsensor_event@detected),w
 14640  18B5  1D03               	skipz
 14641  18B6  28B8               	goto	u11080
 14642  18B7  28B9               	goto	l8682
 14643  18B8                     u11080:
 14644                           	line	299
 14645                           	
 14646  18B8                     l37885:	
 14647                           ;userinterface.c: 299: cat_detected = 1;
 14648  18B8  1470               	bsf	(_cat_detected/8),(_cat_detected)&7
 14649                           	
 14650  18B9                     l8682:	
 14651                           	line	302
 14652                           ;userinterface.c: 302: if (cat_detected)
 14653  18B9  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 14654  18BA  28BC               	goto	u11091
 14655  18BB  28BD               	goto	u11090
 14656  18BC                     u11091:
 14657  18BC  28DB               	goto	l37893
 14658  18BD                     u11090:
 14659                           	line	303
 14660                           	
 14661  18BD                     l37887:	
 14662                           ;userinterface.c: 303: if (detected)
 14663  18BD  0851               	movf	(catsensor_event@detected),w
 14664  18BE  1D03               	skipz
 14665  18BF  28C1               	goto	u11100
 14666  18C0  28C9               	goto	l37891
 14667  18C1                     u11100:
 14668                           	line	304
 14669                           	
 14670  18C1                     l37889:	
 14671                           ;userinterface.c: 304: timeoutnever(&cattimer);
 14672  18C1  3040               	movlw	(_cattimer&0ffh)
 14673  18C2  00A5               	movwf	(?_timeoutnever)
 14674  18C3  3001               	movlw	0x2/2
 14675  18C4  00A6               	movwf	(?_timeoutnever+1)
 14676  18C5  31A9  21AF  3198   	fcall	_timeoutnever
 14677  18C8  28DB               	goto	l37893
 14678                           	line	305
 14679                           	
 14680  18C9                     l8684:	
 14681                           	line	306
 14682                           	
 14683  18C9                     l37891:	
 14684                           ;userinterface.c: 305: else
 14685                           ;userinterface.c: 306: settimeout(&cattimer, (4 * 60 * ((((4UL * (1000UL * ((1000UL)))))
                                 /4)/8)));
 14686  18C9  3040               	movlw	(_cattimer&0ffh)
 14687  18CA  0020               	movlb 0	; select bank0
 14688  18CB  00AD               	movwf	(?_settimeout)
 14689  18CC  3001               	movlw	0x2/2
 14690  18CD  00AE               	movwf	(?_settimeout+1)
 14691  18CE  3001               	movlw	01h
 14692  18CF  00B2               	movwf	3+(?_settimeout)+02h
 14693  18D0  30C9               	movlw	0C9h
 14694  18D1  00B1               	movwf	2+(?_settimeout)+02h
 14695  18D2  30C3               	movlw	0C3h
 14696  18D3  00B0               	movwf	1+(?_settimeout)+02h
 14697  18D4  3080               	movlw	080h
 14698  18D5  00AF               	movwf	0+(?_settimeout)+02h
 14699                           
 14700  18D6  31A0  20DE  3198   	fcall	_settimeout
 14701  18D9  28DB               	goto	l37893
 14702                           	
 14703  18DA                     l8685:	
 14704  18DA  28DB               	goto	l37893
 14705                           	
 14706  18DB                     l8683:	
 14707                           	line	312
 14708                           	
 14709  18DB                     l37893:	
 14710                           ;userinterface.c: 308: if ( (auto_mode == 5) ||
 14711                           ;userinterface.c: 309: (auto_mode == 6) ||
 14712                           ;userinterface.c: 310: (auto_mode == 7) ||
 14713                           ;userinterface.c: 311: (auto_mode == 8) ||
 14714                           ;userinterface.c: 312: (auto_mode == 9) ) {
 14715  18DB  0020               	movlb 0	; select bank0
 14716  18DC  0862               	movf	(_auto_mode),w
 14717  18DD  3A05               	xorlw	05h&0ffh
 14718  18DE  1903               	skipnz
 14719  18DF  28E1               	goto	u11111
 14720  18E0  28E2               	goto	u11110
 14721  18E1                     u11111:
 14722  18E1  28FA               	goto	l8688
 14723  18E2                     u11110:
 14724                           	
 14725  18E2                     l37895:	
 14726  18E2  0862               	movf	(_auto_mode),w
 14727  18E3  3A06               	xorlw	06h&0ffh
 14728  18E4  1903               	skipnz
 14729  18E5  28E7               	goto	u11121
 14730  18E6  28E8               	goto	u11120
 14731  18E7                     u11121:
 14732  18E7  28FA               	goto	l8688
 14733  18E8                     u11120:
 14734                           	
 14735  18E8                     l37897:	
 14736  18E8  0862               	movf	(_auto_mode),w
 14737  18E9  3A07               	xorlw	07h&0ffh
 14738  18EA  1903               	skipnz
 14739  18EB  28ED               	goto	u11131
 14740  18EC  28EE               	goto	u11130
 14741  18ED                     u11131:
 14742  18ED  28FA               	goto	l8688
 14743  18EE                     u11130:
 14744                           	
 14745  18EE                     l37899:	
 14746  18EE  0862               	movf	(_auto_mode),w
 14747  18EF  3A08               	xorlw	08h&0ffh
 14748  18F0  1903               	skipnz
 14749  18F1  28F3               	goto	u11141
 14750  18F2  28F4               	goto	u11140
 14751  18F3                     u11141:
 14752  18F3  28FA               	goto	l8688
 14753  18F4                     u11140:
 14754                           	
 14755  18F4                     l37901:	
 14756  18F4  0862               	movf	(_auto_mode),w
 14757  18F5  3A09               	xorlw	09h&0ffh
 14758  18F6  1D03               	skipz
 14759  18F7  28F9               	goto	u11151
 14760  18F8  28FA               	goto	u11150
 14761  18F9                     u11151:
 14762  18F9  2941               	goto	l8697
 14763  18FA                     u11150:
 14764                           	
 14765  18FA                     l8688:	
 14766                           	line	313
 14767                           ;userinterface.c: 313: if (cat_detected && state == 0) {
 14768  18FA  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 14769  18FB  28FD               	goto	u11161
 14770  18FC  28FE               	goto	u11160
 14771  18FD                     u11161:
 14772  18FD  293D               	goto	l37919
 14773  18FE                     u11160:
 14774                           	
 14775  18FE                     l37903:	
 14776  18FE  08E6               	movf	(_state),f
 14777  18FF  1D03               	skipz
 14778  1900  2902               	goto	u11171
 14779  1901  2903               	goto	u11170
 14780  1902                     u11171:
 14781  1902  293D               	goto	l37919
 14782  1903                     u11170:
 14783  1903  2927               	goto	l37915
 14784                           	line	314
 14785                           	
 14786  1904                     l37905:	
 14787                           ;userinterface.c: 314: switch(auto_mode) {
 14788  1904  2927               	goto	l37915
 14789                           	line	315
 14790                           ;userinterface.c: 315: case 5:
 14791                           	
 14792  1905                     l8691:	
 14793                           	line	316
 14794                           ;userinterface.c: 316: full_wash = 1;
 14795  1905  1571               	bsf	(_full_wash/8),(_full_wash)&7
 14796                           	line	317
 14797                           ;userinterface.c: 317: break;
 14798  1906  2938               	goto	l37917
 14799                           	line	318
 14800                           ;userinterface.c: 318: case 6:
 14801                           	
 14802  1907                     l8693:	
 14803                           	line	319
 14804                           	
 14805  1907                     l37907:	
 14806                           ;userinterface.c: 319: full_wash = (interval >= 1);
 14807  1907  0021               	movlb 1	; select bank1
 14808  1908  08D8               	movf	(_interval)^080h,f
 14809  1909  1D03               	skipz
 14810  190A  290C               	goto	u11181
 14811  190B  290E               	goto	u11180
 14812                           	
 14813  190C                     u11181:
 14814  190C  1571               	bsf	(_full_wash/8),(_full_wash)&7
 14815  190D  290F               	goto	u11194
 14816  190E                     u11180:
 14817  190E  1171               	bcf	(_full_wash/8),(_full_wash)&7
 14818  190F                     u11194:
 14819                           	line	320
 14820                           ;userinterface.c: 320: break;
 14821  190F  2938               	goto	l37917
 14822                           	line	321
 14823                           ;userinterface.c: 321: case 7:
 14824                           	
 14825  1910                     l8694:	
 14826                           	line	322
 14827                           	
 14828  1910                     l37909:	
 14829                           ;userinterface.c: 322: full_wash = (interval >= 2);
 14830  1910  3002               	movlw	(02h)
 14831  1911  0021               	movlb 1	; select bank1
 14832  1912  0258               	subwf	(_interval)^080h,w
 14833  1913  1803               	skipnc
 14834  1914  2916               	goto	u11201
 14835  1915  2918               	goto	u11200
 14836                           	
 14837  1916                     u11201:
 14838  1916  1571               	bsf	(_full_wash/8),(_full_wash)&7
 14839  1917  2919               	goto	u11214
 14840  1918                     u11200:
 14841  1918  1171               	bcf	(_full_wash/8),(_full_wash)&7
 14842  1919                     u11214:
 14843                           	line	323
 14844                           ;userinterface.c: 323: break;
 14845  1919  2938               	goto	l37917
 14846                           	line	324
 14847                           ;userinterface.c: 324: case 8:
 14848                           	
 14849  191A                     l8695:	
 14850                           	line	325
 14851                           	
 14852  191A                     l37911:	
 14853                           ;userinterface.c: 325: full_wash = (interval >= 3);
 14854  191A  3003               	movlw	(03h)
 14855  191B  0021               	movlb 1	; select bank1
 14856  191C  0258               	subwf	(_interval)^080h,w
 14857  191D  1803               	skipnc
 14858  191E  2920               	goto	u11221
 14859  191F  2922               	goto	u11220
 14860                           	
 14861  1920                     u11221:
 14862  1920  1571               	bsf	(_full_wash/8),(_full_wash)&7
 14863  1921  2923               	goto	u11234
 14864  1922                     u11220:
 14865  1922  1171               	bcf	(_full_wash/8),(_full_wash)&7
 14866  1923                     u11234:
 14867                           	line	326
 14868                           ;userinterface.c: 326: break;
 14869  1923  2938               	goto	l37917
 14870                           	line	327
 14871                           ;userinterface.c: 327: case 9:
 14872                           	
 14873  1924                     l8696:	
 14874                           	line	328
 14875                           ;userinterface.c: 328: full_wash = 0;
 14876  1924  1171               	bcf	(_full_wash/8),(_full_wash)&7
 14877                           	line	329
 14878                           ;userinterface.c: 329: break;
 14879  1925  2938               	goto	l37917
 14880                           	line	330
 14881                           	
 14882  1926                     l37913:	
 14883                           ;userinterface.c: 330: }
 14884  1926  2938               	goto	l37917
 14885                           	line	314
 14886                           	
 14887  1927                     l8690:	
 14888                           	
 14889  1927                     l37915:	
 14890  1927  0862               	movf	(_auto_mode),w
 14891                           	; Switch size 1, requested type "space"
 14892                           ; Number of cases is 5, Range of values is 5 to 9
 14893                           ; switch strategies available:
 14894                           ; Name         Instructions Cycles
 14895                           ; simple_byte           16     9 (average)
 14896                           ; direct_byte           19     9 (fixed)
 14897                           ; jumptable            263     9 (fixed)
 14898                           ;	Chosen strategy is simple_byte
 14899                           
 14900                           	opt asmopt_off
 14901  1928  3A05               	xorlw	5^0	; case 5
 14902  1929  1903               	skipnz
 14903  192A  2905               	goto	l8691
 14904  192B  3A03               	xorlw	6^5	; case 6
 14905  192C  1903               	skipnz
 14906  192D  2907               	goto	l37907
 14907  192E  3A01               	xorlw	7^6	; case 7
 14908  192F  1903               	skipnz
 14909  1930  2910               	goto	l37909
 14910  1931  3A0F               	xorlw	8^7	; case 8
 14911  1932  1903               	skipnz
 14912  1933  291A               	goto	l37911
 14913  1934  3A01               	xorlw	9^8	; case 9
 14914  1935  1903               	skipnz
 14915  1936  2924               	goto	l8696
 14916  1937  2938               	goto	l37917
 14917                           	opt asmopt_on
 14918                           
 14919                           	line	330
 14920                           	
 14921  1938                     l8692:	
 14922                           	line	331
 14923                           	
 14924  1938                     l37917:	
 14925                           ;userinterface.c: 331: state = 1;
 14926  1938  0020               	movlb 0	; select bank0
 14927  1939  01E6               	clrf	(_state)
 14928  193A  1403               	bsf	status,0
 14929  193B  0DE6               	rlf	(_state),f
 14930  193C  293D               	goto	l37919
 14931                           	line	332
 14932                           	
 14933  193D                     l8689:	
 14934                           	line	334
 14935                           	
 14936  193D                     l37919:	
 14937                           ;userinterface.c: 332: }
 14938                           ;userinterface.c: 334: update_display();
 14939  193D  3189  218C  3198   	fcall	_update_display
 14940  1940  2941               	goto	l8697
 14941                           	line	335
 14942                           	
 14943  1941                     l8686:	
 14944                           	line	336
 14945                           	
 14946  1941                     l8697:	
 14947  1941  0008               	return
 14948                           	opt stack 0
 14949                           GLOBAL	__end_of_catsensor_event
 14950  1942                     	__end_of_catsensor_event:
 14951 ;; =============== function _catsensor_event ends ============
 14952                           
 14953                           	signat	_catsensor_event,4216
 14954                           	global	_process_button
 14955                           psect	text3265,local,class=CODE,delta=2
 14956                           global __ptext3265
 14957  2143                     __ptext3265:
 14958                           
 14959 ;; *************** function _process_button *****************
 14960 ;; Defined at:
 14961 ;;		line 387 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;  button_mask     1    wreg     unsigned char 
 14964 ;;  down            1   28[BANK0 ] unsigned char 
 14965 ;; Auto vars:     Size  Location     Type
 14966 ;;  button_mask     1   30[BANK0 ] unsigned char 
 14967 ;; Return value:  Size  Location     Type
 14968 ;;		None               void
 14969 ;; Registers used:
 14970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14971 ;; Tracked objects:
 14972 ;;		On entry : 0/0
 14973 ;;		On exit  : 0/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14976 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14979 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14980 ;;Total ram usage:        3 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:    6
 14983 ;; This function calls:
 14984 ;;		_set_Beeper
 14985 ;;		_settimeout
 14986 ;;		_timeoutnever
 14987 ;;		_update_display
 14988 ;; This function is called by:
 14989 ;;		_startbutton_event
 14990 ;;		_setupbutton_event
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           psect	text3265
 14994                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14995                           	line	387
 14996                           	global	__size_of_process_button
 14997  0069                     	__size_of_process_button	equ	__end_of_process_button-_process_button
 14998                           	
 14999  2143                     _process_button:	
 15000                           	opt	stack 7
 15001                           ; Regs used in _process_button: [wreg-status,0+pclath+cstack]
 15002                           ;process_button@button_mask stored from wreg
 15003                           	line	389
 15004  2143  0020               	movlb 0	; select bank0
 15005  2144  00BF               	movwf	(process_button@button_mask)
 15006                           	
 15007  2145                     l37837:	
 15008                           ;userinterface.c: 389: if (((buttonmask_cur & button_mask)?1:0) == down)
 15009  2145  0021               	movlb 1	; select bank1
 15010  2146  0856               	movf	(_buttonmask_cur)^080h,w
 15011  2147  0020               	movlb 0	; select bank0
 15012  2148  053F               	andwf	(process_button@button_mask),w
 15013  2149  3000               	movlw	0
 15014  214A  1D03               	btfss	status,2
 15015  214B  3001               	movlw	1
 15016  214C  063D               	xorwf	(process_button@down),w
 15017  214D  1D03               	skipz
 15018  214E  2950               	goto	u10991
 15019  214F  2951               	goto	u10990
 15020  2150                     u10991:
 15021  2150  2953               	goto	l37841
 15022  2151                     u10990:
 15023  2151  29AB               	goto	l8720
 15024                           	line	390
 15025                           	
 15026  2152                     l37839:	
 15027                           ;userinterface.c: 390: return;
 15028  2152  29AB               	goto	l8720
 15029                           	
 15030  2153                     l8719:	
 15031                           	line	392
 15032                           	
 15033  2153                     l37841:	
 15034                           ;userinterface.c: 392: if (down) {
 15035  2153  083D               	movf	(process_button@down),w
 15036  2154  1D03               	skipz
 15037  2155  2957               	goto	u11000
 15038  2156  297E               	goto	l37853
 15039  2157                     u11000:
 15040                           	line	393
 15041                           	
 15042  2157                     l37843:	
 15043                           ;userinterface.c: 393: if (!locked)
 15044  2157  19F1               	btfsc	(_locked/8),(_locked)&7
 15045  2158  295A               	goto	u11011
 15046  2159  295B               	goto	u11010
 15047  215A                     u11011:
 15048  215A  2960               	goto	l8722
 15049  215B                     u11010:
 15050                           	line	394
 15051                           	
 15052  215B                     l37845:	
 15053                           ;userinterface.c: 394: set_Beeper(0x01, 0);
 15054  215B  01AE               	clrf	(?_set_Beeper)
 15055  215C  3001               	movlw	(01h)
 15056  215D  31B7  27F1  31A1   	fcall	_set_Beeper
 15057                           	
 15058  2160                     l8722:	
 15059                           	line	396
 15060                           ;userinterface.c: 396: settimeout(&holdtimeout, (2 * ((((4UL * (1000UL * ((1000UL)))))/4
                                 )/8)));
 15061  2160  305E               	movlw	(_holdtimeout&0ffh)
 15062  2161  0020               	movlb 0	; select bank0
 15063  2162  00AD               	movwf	(?_settimeout)
 15064  2163  3001               	movlw	0x2/2
 15065  2164  00AE               	movwf	(?_settimeout+1)
 15066  2165  3000               	movlw	0
 15067  2166  00B2               	movwf	3+(?_settimeout)+02h
 15068  2167  3003               	movlw	03h
 15069  2168  00B1               	movwf	2+(?_settimeout)+02h
 15070  2169  30D0               	movlw	0D0h
 15071  216A  00B0               	movwf	1+(?_settimeout)+02h
 15072  216B  3090               	movlw	090h
 15073  216C  00AF               	movwf	0+(?_settimeout)+02h
 15074                           
 15075  216D  31A0  20DE  31A1   	fcall	_settimeout
 15076                           	line	397
 15077                           	
 15078  2170                     l37847:	
 15079                           ;userinterface.c: 397: longhandled = 0;
 15080  2170  1271               	bcf	(_longhandled/8),(_longhandled)&7
 15081                           	line	399
 15082                           	
 15083  2171                     l37849:	
 15084                           ;userinterface.c: 399: buttonmask_cur |= button_mask;
 15085  2171  0020               	movlb 0	; select bank0
 15086  2172  083F               	movf	(process_button@button_mask),w
 15087  2173  00BE               	movwf	(??_process_button+0)+0
 15088  2174  083E               	movf	(??_process_button+0)+0,w
 15089  2175  0021               	movlb 1	; select bank1
 15090  2176  04D6               	iorwf	(_buttonmask_cur)^080h,f
 15091                           	line	400
 15092                           	
 15093  2177                     l37851:	
 15094                           ;userinterface.c: 400: buttonmask_cum |= button_mask;
 15095  2177  0020               	movlb 0	; select bank0
 15096  2178  083F               	movf	(process_button@button_mask),w
 15097  2179  00BE               	movwf	(??_process_button+0)+0
 15098  217A  083E               	movf	(??_process_button+0)+0,w
 15099  217B  0021               	movlb 1	; select bank1
 15100  217C  04D5               	iorwf	(_buttonmask_cum)^080h,f
 15101                           	line	401
 15102                           ;userinterface.c: 401: } else {
 15103  217D  29A3               	goto	l37867
 15104                           	
 15105  217E                     l8721:	
 15106                           	line	403
 15107                           	
 15108  217E                     l37853:	
 15109                           ;userinterface.c: 403: timeoutnever(&holdtimeout);
 15110  217E  305E               	movlw	(_holdtimeout&0ffh)
 15111  217F  0020               	movlb 0	; select bank0
 15112  2180  00A5               	movwf	(?_timeoutnever)
 15113  2181  3001               	movlw	0x2/2
 15114  2182  00A6               	movwf	(?_timeoutnever+1)
 15115  2183  31A9  21AF  31A1   	fcall	_timeoutnever
 15116                           	line	405
 15117                           	
 15118  2186                     l37855:	
 15119                           ;userinterface.c: 405: buttonmask_cur &= ~button_mask;
 15120  2186  0020               	movlb 0	; select bank0
 15121  2187  093F               	comf	(process_button@button_mask),w
 15122  2188  00BE               	movwf	(??_process_button+0)+0
 15123  2189  083E               	movf	(??_process_button+0)+0,w
 15124  218A  0021               	movlb 1	; select bank1
 15125  218B  05D6               	andwf	(_buttonmask_cur)^080h,f
 15126                           	line	406
 15127                           	
 15128  218C                     l37857:	
 15129                           ;userinterface.c: 406: if (!buttonmask_cur) {
 15130  218C  08D6               	movf	(_buttonmask_cur)^080h,f
 15131  218D  1D03               	skipz
 15132  218E  2990               	goto	u11021
 15133  218F  2991               	goto	u11020
 15134  2190                     u11021:
 15135  2190  29A3               	goto	l37867
 15136  2191                     u11020:
 15137                           	line	407
 15138                           	
 15139  2191                     l37859:	
 15140                           ;userinterface.c: 407: if( (!locked) && (!longhandled) )
 15141  2191  19F1               	btfsc	(_locked/8),(_locked)&7
 15142  2192  2994               	goto	u11031
 15143  2193  2995               	goto	u11030
 15144  2194                     u11031:
 15145  2194  29A0               	goto	l37865
 15146  2195                     u11030:
 15147                           	
 15148  2195                     l37861:	
 15149  2195  1A71               	btfsc	(_longhandled/8),(_longhandled)&7
 15150  2196  2998               	goto	u11041
 15151  2197  2999               	goto	u11040
 15152  2198                     u11041:
 15153  2198  29A0               	goto	l37865
 15154  2199                     u11040:
 15155                           	line	409
 15156                           	
 15157  2199                     l37863:	
 15158                           ;userinterface.c: 409: buttonmask_evt = buttonmask_cum;
 15159  2199  0855               	movf	(_buttonmask_cum)^080h,w
 15160  219A  0020               	movlb 0	; select bank0
 15161  219B  00BE               	movwf	(??_process_button+0)+0
 15162  219C  083E               	movf	(??_process_button+0)+0,w
 15163  219D  0021               	movlb 1	; select bank1
 15164  219E  00D7               	movwf	(_buttonmask_evt)^080h
 15165  219F  29A0               	goto	l37865
 15166                           	
 15167  21A0                     l8725:	
 15168                           	line	411
 15169                           	
 15170  21A0                     l37865:	
 15171                           ;userinterface.c: 411: buttonmask_cum = 0;
 15172  21A0  01D5               	clrf	(_buttonmask_cum)^080h
 15173  21A1  29A3               	goto	l37867
 15174                           	line	412
 15175                           	
 15176  21A2                     l8724:	
 15177  21A2  29A3               	goto	l37867
 15178                           	line	413
 15179                           	
 15180  21A3                     l8723:	
 15181                           	line	414
 15182                           	
 15183  21A3                     l37867:	
 15184                           ;userinterface.c: 412: }
 15185                           ;userinterface.c: 413: }
 15186                           ;userinterface.c: 414: if (locked)
 15187  21A3  1DF1               	btfss	(_locked/8),(_locked)&7
 15188  21A4  29A6               	goto	u11051
 15189  21A5  29A7               	goto	u11050
 15190  21A6                     u11051:
 15191  21A6  29AB               	goto	l8720
 15192  21A7                     u11050:
 15193                           	line	415
 15194                           	
 15195  21A7                     l37869:	
 15196                           ;userinterface.c: 415: update_display();
 15197  21A7  3189  218C  31A1   	fcall	_update_display
 15198  21AA  29AB               	goto	l8720
 15199                           	
 15200  21AB                     l8726:	
 15201                           	line	416
 15202                           	
 15203  21AB                     l8720:	
 15204  21AB  0008               	return
 15205                           	opt stack 0
 15206                           GLOBAL	__end_of_process_button
 15207  21AC                     	__end_of_process_button:
 15208 ;; =============== function _process_button ends ============
 15209                           
 15210                           	signat	_process_button,8312
 15211                           	global	_setup_short
 15212                           psect	text3266,local,class=CODE,delta=2
 15213                           global __ptext3266
 15214  2446                     __ptext3266:
 15215                           
 15216 ;; *************** function _setup_short *****************
 15217 ;; Defined at:
 15218 ;;		line 528 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;		None
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;		None
 15223 ;; Return value:  Size  Location     Type
 15224 ;;		None               void
 15225 ;; Registers used:
 15226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15233 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15235 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15236 ;;Total ram usage:        3 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; Hardware stack levels required when called:    6
 15239 ;; This function calls:
 15240 ;;		_set_mode
 15241 ;;		_settimeout
 15242 ;; This function is called by:
 15243 ;;		_userinterface_work
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           psect	text3266
 15247                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15248                           	line	528
 15249                           	global	__size_of_setup_short
 15250  0077                     	__size_of_setup_short	equ	__end_of_setup_short-_setup_short
 15251                           	
 15252  2446                     _setup_short:	
 15253                           	opt	stack 8
 15254                           ; Regs used in _setup_short: [wreg-status,0+pclath+cstack]
 15255                           	line	529
 15256                           	
 15257  2446                     l37801:	
 15258                           ;userinterface.c: 529: switch (panel_mode) {
 15259  2446  2CB0               	goto	l37835
 15260                           	line	530
 15261                           ;userinterface.c: 530: default:
 15262                           	
 15263  2447                     l8775:	
 15264                           	line	531
 15265                           ;userinterface.c: 531: panel_mode = 0;
 15266  2447  01D9               	clrf	(_panel_mode)^080h
 15267  2448  2C49               	goto	l37803
 15268                           	line	532
 15269                           ;userinterface.c: 532: case 0:
 15270                           	
 15271  2449                     l8776:	
 15272                           	line	533
 15273                           	
 15274  2449                     l37803:	
 15275                           ;userinterface.c: 533: set_mode((auto_mode==9)?0:auto_mode+1);
 15276  2449  0020               	movlb 0	; select bank0
 15277  244A  0862               	movf	(_auto_mode),w
 15278  244B  3A09               	xorlw	09h&0ffh
 15279  244C  1903               	skipnz
 15280  244D  2C4F               	goto	u10931
 15281  244E  2C50               	goto	u10930
 15282  244F                     u10931:
 15283  244F  2C58               	goto	l37807
 15284  2450                     u10930:
 15285                           	
 15286  2450                     l37805:	
 15287  2450  0862               	movf	(_auto_mode),w
 15288  2451  3E01               	addlw	low(01h)
 15289  2452  00CB               	movwf	(_setup_short$10735)
 15290  2453  3000               	movlw	high(01h)
 15291  2454  1803               	skipnc
 15292  2455  3001               	movlw	(high(01h)+1)&0ffh
 15293  2456  00CC               	movwf	((_setup_short$10735))+1
 15294  2457  2C5B               	goto	l37809
 15295                           	
 15296  2458                     l8778:	
 15297                           	
 15298  2458                     l37807:	
 15299  2458  01CB               	clrf	(_setup_short$10735)
 15300  2459  01CC               	clrf	(_setup_short$10735+1)
 15301  245A  2C5B               	goto	l37809
 15302                           	
 15303  245B                     l8780:	
 15304                           	
 15305  245B                     l37809:	
 15306  245B  084B               	movf	(_setup_short$10735),w
 15307  245C  31AE  268E  31A4   	fcall	_set_mode
 15308                           	line	534
 15309                           ;userinterface.c: 534: break;
 15310  245F  2CBC               	goto	l8794
 15311                           	line	536
 15312                           ;userinterface.c: 536: case 1:
 15313                           	
 15314  2460                     l8782:	
 15315                           	line	537
 15316                           	
 15317  2460                     l37811:	
 15318                           ;userinterface.c: 537: if (cart_level < 10)
 15319  2460  300A               	movlw	(0Ah)
 15320  2461  0020               	movlb 0	; select bank0
 15321  2462  026E               	subwf	(_cart_level),w
 15322  2463  1803               	skipnc
 15323  2464  2C66               	goto	u10941
 15324  2465  2C67               	goto	u10940
 15325  2466                     u10941:
 15326  2466  2C6C               	goto	l37815
 15327  2467                     u10940:
 15328                           	line	538
 15329                           	
 15330  2467                     l37813:	
 15331                           ;userinterface.c: 538: cart_level = 10;
 15332  2467  300A               	movlw	(0Ah)
 15333  2468  00CA               	movwf	(??_setup_short+0)+0
 15334  2469  084A               	movf	(??_setup_short+0)+0,w
 15335  246A  00EE               	movwf	(_cart_level)
 15336  246B  2C9E               	goto	l37831
 15337                           	line	539
 15338                           	
 15339  246C                     l8783:	
 15340                           	
 15341  246C                     l37815:	
 15342                           ;userinterface.c: 539: else if (cart_level < 25)
 15343  246C  3019               	movlw	(019h)
 15344  246D  026E               	subwf	(_cart_level),w
 15345  246E  1803               	skipnc
 15346  246F  2C71               	goto	u10951
 15347  2470  2C72               	goto	u10950
 15348  2471                     u10951:
 15349  2471  2C77               	goto	l37819
 15350  2472                     u10950:
 15351                           	line	540
 15352                           	
 15353  2472                     l37817:	
 15354                           ;userinterface.c: 540: cart_level = 25;
 15355  2472  3019               	movlw	(019h)
 15356  2473  00CA               	movwf	(??_setup_short+0)+0
 15357  2474  084A               	movf	(??_setup_short+0)+0,w
 15358  2475  00EE               	movwf	(_cart_level)
 15359  2476  2C9E               	goto	l37831
 15360                           	line	541
 15361                           	
 15362  2477                     l8785:	
 15363                           	
 15364  2477                     l37819:	
 15365                           ;userinterface.c: 541: else if (cart_level < 50)
 15366  2477  3032               	movlw	(032h)
 15367  2478  026E               	subwf	(_cart_level),w
 15368  2479  1803               	skipnc
 15369  247A  2C7C               	goto	u10961
 15370  247B  2C7D               	goto	u10960
 15371  247C                     u10961:
 15372  247C  2C82               	goto	l37823
 15373  247D                     u10960:
 15374                           	line	542
 15375                           	
 15376  247D                     l37821:	
 15377                           ;userinterface.c: 542: cart_level = 50;
 15378  247D  3032               	movlw	(032h)
 15379  247E  00CA               	movwf	(??_setup_short+0)+0
 15380  247F  084A               	movf	(??_setup_short+0)+0,w
 15381  2480  00EE               	movwf	(_cart_level)
 15382  2481  2C9E               	goto	l37831
 15383                           	line	543
 15384                           	
 15385  2482                     l8787:	
 15386                           	
 15387  2482                     l37823:	
 15388                           ;userinterface.c: 543: else if (cart_level < 75)
 15389  2482  304B               	movlw	(04Bh)
 15390  2483  026E               	subwf	(_cart_level),w
 15391  2484  1803               	skipnc
 15392  2485  2C87               	goto	u10971
 15393  2486  2C88               	goto	u10970
 15394  2487                     u10971:
 15395  2487  2C8D               	goto	l37827
 15396  2488                     u10970:
 15397                           	line	544
 15398                           	
 15399  2488                     l37825:	
 15400                           ;userinterface.c: 544: cart_level = 75;
 15401  2488  304B               	movlw	(04Bh)
 15402  2489  00CA               	movwf	(??_setup_short+0)+0
 15403  248A  084A               	movf	(??_setup_short+0)+0,w
 15404  248B  00EE               	movwf	(_cart_level)
 15405  248C  2C9E               	goto	l37831
 15406                           	line	545
 15407                           	
 15408  248D                     l8789:	
 15409                           	
 15410  248D                     l37827:	
 15411                           ;userinterface.c: 545: else if (cart_level < 100)
 15412  248D  3064               	movlw	(064h)
 15413  248E  026E               	subwf	(_cart_level),w
 15414  248F  1803               	skipnc
 15415  2490  2C92               	goto	u10981
 15416  2491  2C93               	goto	u10980
 15417  2492                     u10981:
 15418  2492  2C98               	goto	l8791
 15419  2493                     u10980:
 15420                           	line	546
 15421                           	
 15422  2493                     l37829:	
 15423                           ;userinterface.c: 546: cart_level = 100;
 15424  2493  3064               	movlw	(064h)
 15425  2494  00CA               	movwf	(??_setup_short+0)+0
 15426  2495  084A               	movf	(??_setup_short+0)+0,w
 15427  2496  00EE               	movwf	(_cart_level)
 15428  2497  2C9E               	goto	l37831
 15429                           	line	547
 15430                           	
 15431  2498                     l8791:	
 15432                           	line	548
 15433                           ;userinterface.c: 547: else
 15434                           ;userinterface.c: 548: cart_level = 0;
 15435  2498  01EE               	clrf	(_cart_level)
 15436  2499  2C9E               	goto	l37831
 15437                           	
 15438  249A                     l8792:	
 15439  249A  2C9E               	goto	l37831
 15440                           	
 15441  249B                     l8790:	
 15442  249B  2C9E               	goto	l37831
 15443                           	
 15444  249C                     l8788:	
 15445  249C  2C9E               	goto	l37831
 15446                           	
 15447  249D                     l8786:	
 15448  249D  2C9E               	goto	l37831
 15449                           	
 15450  249E                     l8784:	
 15451                           	line	550
 15452                           	
 15453  249E                     l37831:	
 15454                           ;userinterface.c: 550: settimeout(&cartridgetimeout, (5 * ((((4UL * (1000UL * ((1000UL))
                                 )))/4)/8)));
 15455  249E  303A               	movlw	(_cartridgetimeout&0ffh)
 15456  249F  00AD               	movwf	(?_settimeout)
 15457  24A0  3001               	movlw	0x2/2
 15458  24A1  00AE               	movwf	(?_settimeout+1)
 15459  24A2  3000               	movlw	0
 15460  24A3  00B2               	movwf	3+(?_settimeout)+02h
 15461  24A4  3009               	movlw	09h
 15462  24A5  00B1               	movwf	2+(?_settimeout)+02h
 15463  24A6  3089               	movlw	089h
 15464  24A7  00B0               	movwf	1+(?_settimeout)+02h
 15465  24A8  3068               	movlw	068h
 15466  24A9  00AF               	movwf	0+(?_settimeout)+02h
 15467                           
 15468  24AA  31A0  20DE  31A4   	fcall	_settimeout
 15469                           	line	551
 15470                           ;userinterface.c: 551: break;
 15471  24AD  2CBC               	goto	l8794
 15472                           	line	553
 15473                           ;userinterface.c: 553: case 2:
 15474                           	
 15475  24AE                     l8793:	
 15476                           	line	554
 15477                           ;userinterface.c: 554: break;
 15478  24AE  2CBC               	goto	l8794
 15479                           	line	555
 15480                           	
 15481  24AF                     l37833:	
 15482                           ;userinterface.c: 555: }
 15483  24AF  2CBC               	goto	l8794
 15484                           	line	529
 15485                           	
 15486  24B0                     l8774:	
 15487                           	
 15488  24B0                     l37835:	
 15489  24B0  0021               	movlb 1	; select bank1
 15490  24B1  0859               	movf	(_panel_mode)^080h,w
 15491                           	; Switch size 1, requested type "space"
 15492                           ; Number of cases is 3, Range of values is 0 to 2
 15493                           ; switch strategies available:
 15494                           ; Name         Instructions Cycles
 15495                           ; simple_byte           10     6 (average)
 15496                           ; direct_byte           12     6 (fixed)
 15497                           ; jumptable            260     6 (fixed)
 15498                           ; rangetable             7     4 (fixed)
 15499                           ; spacedrange           11     6 (fixed)
 15500                           ; locatedrange           3     3 (fixed)
 15501                           ;	Chosen strategy is simple_byte
 15502                           
 15503                           	opt asmopt_off
 15504  24B2  3A00               	xorlw	0^0	; case 0
 15505  24B3  1903               	skipnz
 15506  24B4  2C49               	goto	l37803
 15507  24B5  3A01               	xorlw	1^0	; case 1
 15508  24B6  1903               	skipnz
 15509  24B7  2C60               	goto	l37811
 15510  24B8  3A03               	xorlw	2^1	; case 2
 15511  24B9  1903               	skipnz
 15512  24BA  2CBC               	goto	l8794
 15513  24BB  2C47               	goto	l8775
 15514                           	opt asmopt_on
 15515                           
 15516                           	line	555
 15517                           	
 15518  24BC                     l8781:	
 15519                           	line	556
 15520                           	
 15521  24BC                     l8794:	
 15522  24BC  0008               	return
 15523                           	opt stack 0
 15524                           GLOBAL	__end_of_setup_short
 15525  24BD                     	__end_of_setup_short:
 15526 ;; =============== function _setup_short ends ============
 15527                           
 15528                           	signat	_setup_short,88
 15529                           	global	_litterlanguage_init
 15530                           psect	text3267,local,class=CODE,delta=2
 15531                           global __ptext3267
 15532  25B3                     __ptext3267:
 15533                           
 15534 ;; *************** function _litterlanguage_init *****************
 15535 ;; Defined at:
 15536 ;;		line 85 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15537 ;; Parameters:    Size  Location     Type
 15538 ;;  flags           1    wreg     unsigned char 
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;  flags           1   51[BANK0 ] unsigned char 
 15541 ;; Return value:  Size  Location     Type
 15542 ;;		None               void
 15543 ;; Registers used:
 15544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15545 ;; Tracked objects:
 15546 ;;		On entry : 0/0
 15547 ;;		On exit  : 0/0
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15553 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15554 ;;Total ram usage:        3 bytes
 15555 ;; Hardware stack levels used:    1
 15556 ;; Hardware stack levels required when called:    6
 15557 ;; This function calls:
 15558 ;;		_printf
 15559 ;;		_litterlanguage_cleanup
 15560 ;;		_eeprom_write
 15561 ;;		_eeprom_read
 15562 ;; This function is called by:
 15563 ;;		_main
 15564 ;; This function uses a non-reentrant model
 15565 ;;
 15566                           psect	text3267
 15567                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15568                           	line	85
 15569                           	global	__size_of_litterlanguage_init
 15570  007D                     	__size_of_litterlanguage_init	equ	__end_of_litterlanguage_init-_litterlanguage_init
 15571                           	
 15572  25B3                     _litterlanguage_init:	
 15573                           	opt	stack 9
 15574                           ; Regs used in _litterlanguage_init: [wreg-status,0+pclath+cstack]
 15575                           ;litterlanguage_init@flags stored from wreg
 15576  25B3  0020               	movlb 0	; select bank0
 15577  25B4  00D4               	movwf	(litterlanguage_init@flags)
 15578                           	line	86
 15579                           	
 15580  25B5                     l37771:	
 15581                           ;litterlanguage.c: 86: switch(flags & ((0x01 << 0) | (0x01 << 1))) {
 15582  25B5  2E17               	goto	l37795
 15583                           	line	87
 15584                           ;litterlanguage.c: 87: case 0:
 15585                           	
 15586  25B6                     l4225:	
 15587                           	line	88
 15588                           	
 15589  25B6                     l37773:	
 15590                           ;litterlanguage.c: 88: printf("Box is ");
 15591  25B6  30E4               	movlw	low(STR_9|8000h)
 15592  25B7  00AF               	movwf	(?_printf)
 15593  25B8  3088               	movlw	high(STR_9|8000h)
 15594  25B9  00B0               	movwf	((?_printf))+1
 15595  25BA  3194  24A0  31A5   	fcall	_printf
 15596                           	line	89
 15597                           ;litterlanguage.c: 89: switch (eeprom_read((3))){
 15598  25BD  2DF1               	goto	l37787
 15599                           	line	90
 15600                           ;litterlanguage.c: 90: case 0:
 15601                           	
 15602  25BE                     l4227:	
 15603                           	line	91
 15604                           	
 15605  25BE                     l37775:	
 15606                           ;litterlanguage.c: 91: printf("tidy\n");
 15607  25BE  3018               	movlw	low(STR_10|8000h)
 15608  25BF  0020               	movlb 0	; select bank0
 15609  25C0  00AF               	movwf	(?_printf)
 15610  25C1  3089               	movlw	high(STR_10|8000h)
 15611  25C2  00B0               	movwf	((?_printf))+1
 15612  25C3  3194  24A0  31A5   	fcall	_printf
 15613                           	line	92
 15614                           ;litterlanguage.c: 92: break;
 15615  25C6  2E2F               	goto	l4237
 15616                           	line	93
 15617                           ;litterlanguage.c: 93: case 1:
 15618                           	
 15619  25C7                     l4229:	
 15620                           	line	94
 15621                           	
 15622  25C7                     l37777:	
 15623                           ;litterlanguage.c: 94: printf("messy\n");
 15624  25C7  3003               	movlw	low(STR_11|8000h)
 15625  25C8  0020               	movlb 0	; select bank0
 15626  25C9  00AF               	movwf	(?_printf)
 15627  25CA  3089               	movlw	high(STR_11|8000h)
 15628  25CB  00B0               	movwf	((?_printf))+1
 15629  25CC  3194  24A0  31A5   	fcall	_printf
 15630                           	line	95
 15631                           ;litterlanguage.c: 95: litterlanguage_cleanup(0);
 15632  25CF  3000               	movlw	(0)
 15633  25D0  31AC  24F3  31A5   	fcall	_litterlanguage_cleanup
 15634                           	line	96
 15635                           ;litterlanguage.c: 96: break;
 15636  25D3  2E2F               	goto	l4237
 15637                           	line	97
 15638                           ;litterlanguage.c: 97: case 2:
 15639                           	
 15640  25D4                     l4230:	
 15641                           	line	98
 15642                           	
 15643  25D4                     l37779:	
 15644                           ;litterlanguage.c: 98: printf("wet\n");
 15645  25D4  301E               	movlw	low(STR_12|8000h)
 15646  25D5  0020               	movlb 0	; select bank0
 15647  25D6  00AF               	movwf	(?_printf)
 15648  25D7  3089               	movlw	high(STR_12|8000h)
 15649  25D8  00B0               	movwf	((?_printf))+1
 15650  25D9  3194  24A0  31A5   	fcall	_printf
 15651                           	line	99
 15652                           ;litterlanguage.c: 99: litterlanguage_cleanup(1);
 15653  25DC  3001               	movlw	(01h)
 15654  25DD  31AC  24F3  31A5   	fcall	_litterlanguage_cleanup
 15655                           	line	100
 15656                           ;litterlanguage.c: 100: break;
 15657  25E0  2E2F               	goto	l4237
 15658                           	line	101
 15659                           ;litterlanguage.c: 101: default:
 15660                           	
 15661  25E1                     l4231:	
 15662                           	line	102
 15663                           	
 15664  25E1                     l37781:	
 15665                           ;litterlanguage.c: 102: printf("unknown\n");
 15666  25E1  30A7               	movlw	low(STR_13|8000h)
 15667  25E2  0020               	movlb 0	; select bank0
 15668  25E3  00AF               	movwf	(?_printf)
 15669  25E4  3088               	movlw	high(STR_13|8000h)
 15670  25E5  00B0               	movwf	((?_printf))+1
 15671  25E6  3194  24A0  31A5   	fcall	_printf
 15672                           	line	103
 15673                           	
 15674  25E9                     l37783:	
 15675                           ;litterlanguage.c: 103: eeprom_write((3), 0);
 15676  25E9  0020               	movlb 0	; select bank0
 15677  25EA  01A1               	clrf	(?_eeprom_write)
 15678  25EB  3003               	movlw	(03h)
 15679  25EC  31AC  244D  31A5   	fcall	_eeprom_write
 15680                           	line	104
 15681                           ;litterlanguage.c: 104: break;
 15682  25EF  2E2F               	goto	l4237
 15683                           	line	105
 15684                           	
 15685  25F0                     l37785:	
 15686                           ;litterlanguage.c: 105: }
 15687  25F0  2E2F               	goto	l4237
 15688                           	line	89
 15689                           	
 15690  25F1                     l4226:	
 15691                           	
 15692  25F1                     l37787:	
 15693  25F1  3003               	movlw	(03h)
 15694  25F2  31AA  225F  31A5   	fcall	_eeprom_read
 15695                           	; Switch size 1, requested type "space"
 15696                           ; Number of cases is 3, Range of values is 0 to 2
 15697                           ; switch strategies available:
 15698                           ; Name         Instructions Cycles
 15699                           ; simple_byte           10     6 (average)
 15700                           ; direct_byte           12     6 (fixed)
 15701                           ; jumptable            260     6 (fixed)
 15702                           ; rangetable             7     4 (fixed)
 15703                           ; spacedrange           11     6 (fixed)
 15704                           ; locatedrange           3     3 (fixed)
 15705                           ;	Chosen strategy is simple_byte
 15706                           
 15707                           	opt asmopt_off
 15708  25F5  3A00               	xorlw	0^0	; case 0
 15709  25F6  1903               	skipnz
 15710  25F7  2DBE               	goto	l37775
 15711  25F8  3A01               	xorlw	1^0	; case 1
 15712  25F9  1903               	skipnz
 15713  25FA  2DC7               	goto	l37777
 15714  25FB  3A03               	xorlw	2^1	; case 2
 15715  25FC  1903               	skipnz
 15716  25FD  2DD4               	goto	l37779
 15717  25FE  2DE1               	goto	l37781
 15718                           	opt asmopt_on
 15719                           
 15720                           	line	105
 15721                           	
 15722  25FF                     l4228:	
 15723                           	line	106
 15724                           ;litterlanguage.c: 106: break;
 15725  25FF  2E2F               	goto	l4237
 15726                           	line	107
 15727                           ;litterlanguage.c: 107: case (0x01 << 0):
 15728                           	
 15729  2600                     l4233:	
 15730                           	line	109
 15731                           	
 15732  2600                     l37789:	
 15733                           ;litterlanguage.c: 109: printf("Wet cleanup forced\n");
 15734  2600  30B6               	movlw	low(STR_14|8000h)
 15735  2601  0020               	movlb 0	; select bank0
 15736  2602  00AF               	movwf	(?_printf)
 15737  2603  3085               	movlw	high(STR_14|8000h)
 15738  2604  00B0               	movwf	((?_printf))+1
 15739  2605  3194  24A0  31A5   	fcall	_printf
 15740                           	line	110
 15741                           ;litterlanguage.c: 110: litterlanguage_cleanup(1);
 15742  2608  3001               	movlw	(01h)
 15743  2609  31AC  24F3  31A5   	fcall	_litterlanguage_cleanup
 15744                           	line	111
 15745                           ;litterlanguage.c: 111: break;
 15746  260C  2E2F               	goto	l4237
 15747                           	line	112
 15748                           ;litterlanguage.c: 112: case (0x01 << 1):
 15749                           	
 15750  260D                     l4234:	
 15751                           	line	114
 15752                           ;litterlanguage.c: 114: break;
 15753  260D  2E2F               	goto	l4237
 15754                           	line	115
 15755                           ;litterlanguage.c: 115: case (0x01 << 0) | (0x01 << 1):
 15756                           	
 15757  260E                     l4235:	
 15758  260E  2E0F               	goto	l37791
 15759                           	line	116
 15760                           ;litterlanguage.c: 116: default:
 15761                           	
 15762  260F                     l4236:	
 15763                           	line	118
 15764                           	
 15765  260F                     l37791:	
 15766                           ;litterlanguage.c: 118: eeprom_write((3), 0);
 15767  260F  0020               	movlb 0	; select bank0
 15768  2610  01A1               	clrf	(?_eeprom_write)
 15769  2611  3003               	movlw	(03h)
 15770  2612  31AC  244D  31A5   	fcall	_eeprom_write
 15771                           	line	119
 15772                           ;litterlanguage.c: 119: break;
 15773  2615  2E2F               	goto	l4237
 15774                           	line	120
 15775                           	
 15776  2616                     l37793:	
 15777                           ;litterlanguage.c: 120: }
 15778  2616  2E2F               	goto	l4237
 15779                           	line	86
 15780                           	
 15781  2617                     l4224:	
 15782                           	
 15783  2617                     l37795:	
 15784  2617  0020               	movlb 0	; select bank0
 15785  2618  0854               	movf	(litterlanguage_init@flags),w
 15786  2619  3903               	andlw	03h
 15787  261A  00D2               	movwf	(??_litterlanguage_init+0)+0
 15788  261B  01D3               	clrf	(??_litterlanguage_init+0)+0+1
 15789                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15790                           ; Switch size 1, requested type "space"
 15791                           ; Number of cases is 1, Range of values is 0 to 0
 15792                           ; switch strategies available:
 15793                           ; Name         Instructions Cycles
 15794                           ; simple_byte            4     3 (average)
 15795                           ; direct_byte            8     6 (fixed)
 15796                           ; jumptable            260     6 (fixed)
 15797                           ; rangetable             5     4 (fixed)
 15798                           ; spacedrange            7     6 (fixed)
 15799                           ; locatedrange           1     3 (fixed)
 15800                           ;	Chosen strategy is simple_byte
 15801                           
 15802  261C  0853               	movf 1+(??_litterlanguage_init+0)+0,w
 15803                           	opt asmopt_off
 15804  261D  3A00               	xorlw	0^0	; case 0
 15805  261E  1903               	skipnz
 15806  261F  2E21               	goto	l39179
 15807  2620  2E0F               	goto	l37791
 15808                           	opt asmopt_on
 15809                           	
 15810  2621                     l39179:	
 15811                           ; Switch size 1, requested type "space"
 15812                           ; Number of cases is 4, Range of values is 0 to 3
 15813                           ; switch strategies available:
 15814                           ; Name         Instructions Cycles
 15815                           ; simple_byte           13     7 (average)
 15816                           ; direct_byte           14     6 (fixed)
 15817                           ; jumptable            260     6 (fixed)
 15818                           ; rangetable             8     4 (fixed)
 15819                           ; spacedrange           13     6 (fixed)
 15820                           ; locatedrange           4     3 (fixed)
 15821                           ;	Chosen strategy is simple_byte
 15822                           
 15823  2621  0852               	movf 0+(??_litterlanguage_init+0)+0,w
 15824                           	opt asmopt_off
 15825  2622  3A00               	xorlw	0^0	; case 0
 15826  2623  1903               	skipnz
 15827  2624  2DB6               	goto	l37773
 15828  2625  3A01               	xorlw	1^0	; case 1
 15829  2626  1903               	skipnz
 15830  2627  2E00               	goto	l37789
 15831  2628  3A03               	xorlw	2^1	; case 2
 15832  2629  1903               	skipnz
 15833  262A  2E2F               	goto	l4237
 15834  262B  3A01               	xorlw	3^2	; case 3
 15835  262C  1903               	skipnz
 15836  262D  2E0F               	goto	l37791
 15837  262E  2E0F               	goto	l37791
 15838                           	opt asmopt_on
 15839                           
 15840                           	line	120
 15841                           	
 15842  262F                     l4232:	
 15843                           	line	121
 15844                           	
 15845  262F                     l4237:	
 15846  262F  0008               	return
 15847                           	opt stack 0
 15848                           GLOBAL	__end_of_litterlanguage_init
 15849  2630                     	__end_of_litterlanguage_init:
 15850 ;; =============== function _litterlanguage_init ends ============
 15851                           
 15852                           	signat	_litterlanguage_init,4216
 15853                           	global	_userinterface_init
 15854                           psect	text3268,local,class=CODE,delta=2
 15855                           global __ptext3268
 15856  2BF0                     __ptext3268:
 15857                           
 15858 ;; *************** function _userinterface_init *****************
 15859 ;; Defined at:
 15860 ;;		line 104 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;  flags           1    wreg     unsigned char 
 15863 ;; Auto vars:     Size  Location     Type
 15864 ;;  flags           1   42[BANK0 ] unsigned char 
 15865 ;; Return value:  Size  Location     Type
 15866 ;;		None               void
 15867 ;; Registers used:
 15868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15869 ;; Tracked objects:
 15870 ;;		On entry : 0/0
 15871 ;;		On exit  : 0/0
 15872 ;;		Unchanged: 0/0
 15873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15878 ;;Total ram usage:        2 bytes
 15879 ;; Hardware stack levels used:    1
 15880 ;; Hardware stack levels required when called:    6
 15881 ;; This function calls:
 15882 ;;		_eeprom_write
 15883 ;;		_eeprom_read
 15884 ;;		_set_mode
 15885 ;;		_update_display
 15886 ;; This function is called by:
 15887 ;;		_main
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           psect	text3268
 15891                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15892                           	line	104
 15893                           	global	__size_of_userinterface_init
 15894  002E                     	__size_of_userinterface_init	equ	__end_of_userinterface_init-_userinterface_init
 15895                           	
 15896  2BF0                     _userinterface_init:	
 15897                           	opt	stack 9
 15898                           ; Regs used in _userinterface_init: [wreg-status,0+pclath+cstack]
 15899                           ;userinterface_init@flags stored from wreg
 15900                           	line	106
 15901  2BF0  0020               	movlb 0	; select bank0
 15902  2BF1  00CB               	movwf	(userinterface_init@flags)
 15903                           	
 15904  2BF2                     l37761:	
 15905                           ;userinterface.c: 105: if ((flags & (0x01 << 0)) &&
 15906                           ;userinterface.c: 106: (flags & (0x01 << 1))) {
 15907  2BF2  1C4B               	btfss	(userinterface_init@flags),(0)&7
 15908  2BF3  2BF5               	goto	u10891
 15909  2BF4  2BF6               	goto	u10890
 15910  2BF5                     u10891:
 15911  2BF5  2C08               	goto	l8634
 15912  2BF6                     u10890:
 15913                           	
 15914  2BF6                     l37763:	
 15915  2BF6  1CCB               	btfss	(userinterface_init@flags),(1)&7
 15916  2BF7  2BF9               	goto	u10901
 15917  2BF8  2BFA               	goto	u10900
 15918  2BF9                     u10901:
 15919  2BF9  2C08               	goto	l8634
 15920  2BFA                     u10900:
 15921                           	line	108
 15922                           	
 15923  2BFA                     l37765:	
 15924                           ;userinterface.c: 108: eeprom_write((1), 0);
 15925  2BFA  01A1               	clrf	(?_eeprom_write)
 15926  2BFB  3001               	movlw	(01h)
 15927  2BFC  31AC  244D  31AB   	fcall	_eeprom_write
 15928                           	line	109
 15929                           ;userinterface.c: 109: eeprom_write((2), 0xFF);
 15930  2BFF  30FF               	movlw	(0FFh)
 15931  2C00  0020               	movlb 0	; select bank0
 15932  2C01  00CA               	movwf	(??_userinterface_init+0)+0
 15933  2C02  084A               	movf	(??_userinterface_init+0)+0,w
 15934  2C03  00A1               	movwf	(?_eeprom_write)
 15935  2C04  3002               	movlw	(02h)
 15936  2C05  31AC  244D  31AB   	fcall	_eeprom_write
 15937                           	line	110
 15938                           	
 15939  2C08                     l8634:	
 15940                           	line	113
 15941                           ;userinterface.c: 110: }
 15942                           ;userinterface.c: 113: locked = !eeprom_read((2));
 15943  2C08  3002               	movlw	(02h)
 15944  2C09  31AA  225F  31AB   	fcall	_eeprom_read
 15945  2C0C  3A00               	xorlw	0&0ffh
 15946  2C0D  1903               	skipnz
 15947  2C0E  2C10               	goto	u10911
 15948  2C0F  2C12               	goto	u10910
 15949                           	
 15950  2C10                     u10911:
 15951  2C10  15F1               	bsf	(_locked/8),(_locked)&7
 15952  2C11  2C13               	goto	u10924
 15953  2C12                     u10910:
 15954  2C12  11F1               	bcf	(_locked/8),(_locked)&7
 15955  2C13                     u10924:
 15956                           	line	115
 15957                           	
 15958  2C13                     l37767:	
 15959                           ;userinterface.c: 115: set_mode(eeprom_read((1)));
 15960  2C13  3001               	movlw	(01h)
 15961  2C14  31AA  225F  31AB   	fcall	_eeprom_read
 15962  2C17  31AE  268E  31AB   	fcall	_set_mode
 15963                           	line	117
 15964                           	
 15965  2C1A                     l37769:	
 15966                           ;userinterface.c: 117: update_display();
 15967  2C1A  3189  218C  31AB   	fcall	_update_display
 15968                           	line	118
 15969                           	
 15970  2C1D                     l8635:	
 15971  2C1D  0008               	return
 15972                           	opt stack 0
 15973                           GLOBAL	__end_of_userinterface_init
 15974  2C1E                     	__end_of_userinterface_init:
 15975 ;; =============== function _userinterface_init ends ============
 15976                           
 15977                           	signat	_userinterface_init,4216
 15978                           	global	_proc_line
 15979                           psect	text3269,local,class=CODE,delta=2
 15980                           global __ptext3269
 15981  1AC6                     __ptext3269:
 15982                           
 15983 ;; *************** function _proc_line *****************
 15984 ;; Defined at:
 15985 ;;		line 135 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 15986 ;; Parameters:    Size  Location     Type
 15987 ;;  line            1    wreg     PTR unsigned char 
 15988 ;;		 -> linebuffer(20), 
 15989 ;; Auto vars:     Size  Location     Type
 15990 ;;  line            1   59[BANK0 ] PTR unsigned char 
 15991 ;;		 -> linebuffer(20), 
 15992 ;;  argv            4   48[BANK0 ] PTR unsigned char [4]
 15993 ;;		 -> linebuffer(20), 
 15994 ;;  len             2   57[BANK0 ] unsigned int 
 15995 ;;  argc            2   55[BANK0 ] int 
 15996 ;;  index           2   53[BANK0 ] int 
 15997 ;; Return value:  Size  Location     Type
 15998 ;;		None               void
 15999 ;; Registers used:
 16000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 16001 ;; Tracked objects:
 16002 ;;		On entry : 0/0
 16003 ;;		On exit  : 0/0
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16007 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 16008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16009 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 16010 ;;Total ram usage:       14 bytes
 16011 ;; Hardware stack levels used:    1
 16012 ;; Hardware stack levels required when called:    5
 16013 ;; This function calls:
 16014 ;;		_strlen
 16015 ;;		_cmd2index
 16016 ;;		_printf
 16017 ;;		___bmul
 16018 ;;		Absolute function
 16019 ;;		_echo
 16020 ;;		_help
 16021 ;; This function is called by:
 16022 ;;		_proc_char
 16023 ;; This function uses a non-reentrant model
 16024 ;;
 16025                           psect	text3269
 16026                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 16027                           	line	135
 16028                           	global	__size_of_proc_line
 16029  012A                     	__size_of_proc_line	equ	__end_of_proc_line-_proc_line
 16030                           	
 16031  1AC6                     _proc_line:	
 16032                           	opt	stack 8
 16033                           ; Regs used in _proc_line: [allreg]
 16034                           ;proc_line@line stored from wreg
 16035  1AC6  0020               	movlb 0	; select bank0
 16036  1AC7  00DC               	movwf	(proc_line@line)
 16037                           	line	136
 16038                           	
 16039  1AC8                     l37695:	
 16040                           ;cmdline.c: 136: unsigned int len = strlen(line);
 16041  1AC8  085C               	movf	(proc_line@line),w
 16042  1AC9  31AC  241E  319A   	fcall	_strlen
 16043  1ACC  0020               	movlb 0	; select bank0
 16044  1ACD  0822               	movf	(1+(?_strlen)),w
 16045  1ACE  01DB               	clrf	(proc_line@len+1)
 16046  1ACF  07DB               	addwf	(proc_line@len+1)
 16047  1AD0  0821               	movf	(0+(?_strlen)),w
 16048  1AD1  01DA               	clrf	(proc_line@len)
 16049  1AD2  07DA               	addwf	(proc_line@len)
 16050                           
 16051                           	line	137
 16052                           	
 16053  1AD3                     l37697:	
 16054                           ;cmdline.c: 137: int argc = 0;
 16055  1AD3  01D8               	clrf	(proc_line@argc)
 16056  1AD4  01D9               	clrf	(proc_line@argc+1)
 16057                           	line	142
 16058                           ;cmdline.c: 138: char* argv[(4)];
 16059                           ;cmdline.c: 139: int index;
 16060                           ;cmdline.c: 142: while (len && (line[len-1] == ' ' || line[len-1] == '\t')) {
 16061  1AD5  2AE4               	goto	l37703
 16062                           	
 16063  1AD6                     l15129:	
 16064                           	line	143
 16065                           	
 16066  1AD6                     l37699:	
 16067                           ;cmdline.c: 143: line[len-1] = 0;
 16068  1AD6  085A               	movf	(proc_line@len),w
 16069  1AD7  3EFF               	addlw	0FFh
 16070  1AD8  075C               	addwf	(proc_line@line),w
 16071  1AD9  00CF               	movwf	(??_proc_line+0)+0
 16072  1ADA  084F               	movf	0+(??_proc_line+0)+0,w
 16073  1ADB  0086               	movwf	fsr1l
 16074  1ADC  3001               	movlw 1	; select bank2/3
 16075  1ADD  0087               	movwf fsr1h	
 16076                           	
 16077  1ADE  0181               	clrf	indf1
 16078                           	line	144
 16079                           	
 16080  1ADF                     l37701:	
 16081                           ;cmdline.c: 144: len--;
 16082  1ADF  3001               	movlw	low(01h)
 16083  1AE0  02DA               	subwf	(proc_line@len),f
 16084  1AE1  3000               	movlw	high(01h)
 16085  1AE2  3BDB               	subwfb	(proc_line@len+1),f
 16086  1AE3  2AE4               	goto	l37703
 16087                           	line	145
 16088                           	
 16089  1AE4                     l15128:	
 16090                           	line	142
 16091                           	
 16092  1AE4                     l37703:	
 16093  1AE4  085B               	movf	(proc_line@len+1),w
 16094  1AE5  045A               	iorwf	(proc_line@len),w
 16095  1AE6  1903               	skipnz
 16096  1AE7  2AE9               	goto	u10781
 16097  1AE8  2AEA               	goto	u10780
 16098  1AE9                     u10781:
 16099  1AE9  2B67               	goto	l37731
 16100  1AEA                     u10780:
 16101                           	
 16102  1AEA                     l37705:	
 16103  1AEA  085A               	movf	(proc_line@len),w
 16104  1AEB  3EFF               	addlw	0FFh
 16105  1AEC  075C               	addwf	(proc_line@line),w
 16106  1AED  00CF               	movwf	(??_proc_line+0)+0
 16107  1AEE  084F               	movf	0+(??_proc_line+0)+0,w
 16108  1AEF  0086               	movwf	fsr1l
 16109  1AF0  3001               	movlw 1	; select bank2/3
 16110  1AF1  0087               	movwf fsr1h	
 16111                           	
 16112  1AF2  0801               	movf	indf1,w
 16113  1AF3  3A20               	xorlw	020h&0ffh
 16114  1AF4  1903               	skipnz
 16115  1AF5  2AF7               	goto	u10791
 16116  1AF6  2AF8               	goto	u10790
 16117  1AF7                     u10791:
 16118  1AF7  2AD6               	goto	l37699
 16119  1AF8                     u10790:
 16120                           	
 16121  1AF8                     l37707:	
 16122  1AF8  085A               	movf	(proc_line@len),w
 16123  1AF9  3EFF               	addlw	0FFh
 16124  1AFA  075C               	addwf	(proc_line@line),w
 16125  1AFB  00CF               	movwf	(??_proc_line+0)+0
 16126  1AFC  084F               	movf	0+(??_proc_line+0)+0,w
 16127  1AFD  0086               	movwf	fsr1l
 16128  1AFE  3001               	movlw 1	; select bank2/3
 16129  1AFF  0087               	movwf fsr1h	
 16130                           	
 16131  1B00  0801               	movf	indf1,w
 16132  1B01  3A09               	xorlw	09h&0ffh
 16133  1B02  1903               	skipnz
 16134  1B03  2B05               	goto	u10801
 16135  1B04  2B06               	goto	u10800
 16136  1B05                     u10801:
 16137  1B05  2AD6               	goto	l37699
 16138  1B06                     u10800:
 16139  1B06  2B67               	goto	l37731
 16140                           	
 16141  1B07                     l15131:	
 16142  1B07  2B67               	goto	l37731
 16143                           	
 16144  1B08                     l15132:	
 16145                           	line	148
 16146                           ;cmdline.c: 145: }
 16147                           ;cmdline.c: 148: while (*line) {
 16148  1B08  2B67               	goto	l37731
 16149                           	
 16150  1B09                     l15134:	
 16151                           	line	150
 16152                           ;cmdline.c: 150: while ((*line == ' ') || (*line == '\t')) {
 16153  1B09  2B14               	goto	l37713
 16154                           	
 16155  1B0A                     l15136:	
 16156                           	line	151
 16157                           	
 16158  1B0A                     l37709:	
 16159                           ;cmdline.c: 151: *line = 0;
 16160  1B0A  085C               	movf	(proc_line@line),w
 16161  1B0B  0086               	movwf	fsr1l
 16162  1B0C  3001               	movlw 1	; select bank2/3
 16163  1B0D  0087               	movwf fsr1h	
 16164                           	
 16165  1B0E  0181               	clrf	indf1
 16166                           	line	152
 16167                           	
 16168  1B0F                     l37711:	
 16169                           ;cmdline.c: 152: line++;
 16170  1B0F  3001               	movlw	(01h)
 16171  1B10  00CF               	movwf	(??_proc_line+0)+0
 16172  1B11  084F               	movf	(??_proc_line+0)+0,w
 16173  1B12  07DC               	addwf	(proc_line@line),f
 16174  1B13  2B14               	goto	l37713
 16175                           	line	153
 16176                           	
 16177  1B14                     l15135:	
 16178                           	line	150
 16179                           	
 16180  1B14                     l37713:	
 16181  1B14  085C               	movf	(proc_line@line),w
 16182  1B15  0086               	movwf	fsr1l
 16183  1B16  3001               	movlw 1	; select bank2/3
 16184  1B17  0087               	movwf fsr1h	
 16185                           	
 16186  1B18  0801               	movf	indf1,w
 16187  1B19  3A20               	xorlw	020h&0ffh
 16188  1B1A  1903               	skipnz
 16189  1B1B  2B1D               	goto	u10811
 16190  1B1C  2B1E               	goto	u10810
 16191  1B1D                     u10811:
 16192  1B1D  2B0A               	goto	l37709
 16193  1B1E                     u10810:
 16194                           	
 16195  1B1E                     l37715:	
 16196  1B1E  085C               	movf	(proc_line@line),w
 16197  1B1F  0086               	movwf	fsr1l
 16198  1B20  3001               	movlw 1	; select bank2/3
 16199  1B21  0087               	movwf fsr1h	
 16200                           	
 16201  1B22  0801               	movf	indf1,w
 16202  1B23  3A09               	xorlw	09h&0ffh
 16203  1B24  1903               	skipnz
 16204  1B25  2B27               	goto	u10821
 16205  1B26  2B28               	goto	u10820
 16206  1B27                     u10821:
 16207  1B27  2B0A               	goto	l37709
 16208  1B28                     u10820:
 16209  1B28  2B29               	goto	l37717
 16210                           	
 16211  1B29                     l15137:	
 16212                           	line	156
 16213                           	
 16214  1B29                     l37717:	
 16215                           ;cmdline.c: 153: }
 16216                           ;cmdline.c: 156: if (*line) {
 16217  1B29  085C               	movf	(proc_line@line),w
 16218  1B2A  0086               	movwf	fsr1l
 16219  1B2B  3001               	movlw 1	; select bank2/3
 16220  1B2C  0087               	movwf fsr1h	
 16221                           	
 16222  1B2D  0801               	movf	indf1,w
 16223  1B2E  3A00               	xorlw	0&0ffh
 16224  1B2F  1903               	skipnz
 16225  1B30  2B32               	goto	u10831
 16226  1B31  2B33               	goto	u10830
 16227  1B32                     u10831:
 16228  1B32  2B46               	goto	l37725
 16229  1B33                     u10830:
 16230                           	line	157
 16231                           	
 16232  1B33                     l37719:	
 16233                           ;cmdline.c: 157: argv[argc] = line;
 16234  1B33  085C               	movf	(proc_line@line),w
 16235  1B34  00CF               	movwf	(??_proc_line+0)+0
 16236  1B35  0858               	movf	(proc_line@argc),w
 16237  1B36  3E51               	addlw	proc_line@argv&0ffh
 16238  1B37  0086               	movwf	fsr1l
 16239  1B38  0187               	clrf fsr1h	
 16240                           	
 16241  1B39  084F               	movf	(??_proc_line+0)+0,w
 16242  1B3A  0081               	movwf	indf1
 16243                           	line	158
 16244                           	
 16245  1B3B                     l37721:	
 16246                           ;cmdline.c: 158: argc++;
 16247  1B3B  3001               	movlw	low(01h)
 16248  1B3C  07D8               	addwf	(proc_line@argc),f
 16249  1B3D  3000               	movlw	high(01h)
 16250  1B3E  3DD9               	addwfc	(proc_line@argc+1),f
 16251  1B3F  2B46               	goto	l37725
 16252                           	line	159
 16253                           	
 16254  1B40                     l15138:	
 16255                           	line	162
 16256                           ;cmdline.c: 159: }
 16257                           ;cmdline.c: 162: while (*line && *line != ' ' && *line != '\t')
 16258  1B40  2B46               	goto	l37725
 16259                           	
 16260  1B41                     l15140:	
 16261                           	line	163
 16262                           	
 16263  1B41                     l37723:	
 16264                           ;cmdline.c: 163: line++;
 16265  1B41  3001               	movlw	(01h)
 16266  1B42  00CF               	movwf	(??_proc_line+0)+0
 16267  1B43  084F               	movf	(??_proc_line+0)+0,w
 16268  1B44  07DC               	addwf	(proc_line@line),f
 16269  1B45  2B46               	goto	l37725
 16270                           	
 16271  1B46                     l15139:	
 16272                           	line	162
 16273                           	
 16274  1B46                     l37725:	
 16275  1B46  085C               	movf	(proc_line@line),w
 16276  1B47  0086               	movwf	fsr1l
 16277  1B48  3001               	movlw 1	; select bank2/3
 16278  1B49  0087               	movwf fsr1h	
 16279                           	
 16280  1B4A  0801               	movf	indf1,w
 16281  1B4B  3A00               	xorlw	0&0ffh
 16282  1B4C  1903               	skipnz
 16283  1B4D  2B4F               	goto	u10841
 16284  1B4E  2B50               	goto	u10840
 16285  1B4F                     u10841:
 16286  1B4F  2B67               	goto	l37731
 16287  1B50                     u10840:
 16288                           	
 16289  1B50                     l37727:	
 16290  1B50  085C               	movf	(proc_line@line),w
 16291  1B51  0086               	movwf	fsr1l
 16292  1B52  3001               	movlw 1	; select bank2/3
 16293  1B53  0087               	movwf fsr1h	
 16294                           	
 16295  1B54  0801               	movf	indf1,w
 16296  1B55  3A20               	xorlw	020h&0ffh
 16297  1B56  1903               	skipnz
 16298  1B57  2B59               	goto	u10851
 16299  1B58  2B5A               	goto	u10850
 16300  1B59                     u10851:
 16301  1B59  2B67               	goto	l37731
 16302  1B5A                     u10850:
 16303                           	
 16304  1B5A                     l37729:	
 16305  1B5A  085C               	movf	(proc_line@line),w
 16306  1B5B  0086               	movwf	fsr1l
 16307  1B5C  3001               	movlw 1	; select bank2/3
 16308  1B5D  0087               	movwf fsr1h	
 16309                           	
 16310  1B5E  0801               	movf	indf1,w
 16311  1B5F  3A09               	xorlw	09h&0ffh
 16312  1B60  1D03               	skipz
 16313  1B61  2B63               	goto	u10861
 16314  1B62  2B64               	goto	u10860
 16315  1B63                     u10861:
 16316  1B63  2B41               	goto	l37723
 16317  1B64                     u10860:
 16318  1B64  2B67               	goto	l37731
 16319                           	
 16320  1B65                     l15142:	
 16321  1B65  2B67               	goto	l37731
 16322                           	
 16323  1B66                     l15143:	
 16324  1B66  2B67               	goto	l37731
 16325                           	line	164
 16326                           	
 16327  1B67                     l15133:	
 16328                           	line	148
 16329                           	
 16330  1B67                     l37731:	
 16331  1B67  085C               	movf	(proc_line@line),w
 16332  1B68  0086               	movwf	fsr1l
 16333  1B69  3001               	movlw 1	; select bank2/3
 16334  1B6A  0087               	movwf fsr1h	
 16335                           	
 16336  1B6B  0881               	movf	indf1,f
 16337  1B6C  1D03               	skipz
 16338  1B6D  2B6F               	goto	u10871
 16339  1B6E  2B70               	goto	u10870
 16340  1B6F                     u10871:
 16341  1B6F  2B14               	goto	l37713
 16342  1B70                     u10870:
 16343  1B70  2B71               	goto	l37733
 16344                           	
 16345  1B71                     l15144:	
 16346                           	line	166
 16347                           	
 16348  1B71                     l37733:	
 16349                           ;cmdline.c: 164: }
 16350                           ;cmdline.c: 166: index = cmd2index(argv[0]);
 16351  1B71  0851               	movf	(proc_line@argv),w
 16352  1B72  31AE  2640  319A   	fcall	_cmd2index
 16353  1B75  0020               	movlb 0	; select bank0
 16354  1B76  082D               	movf	(1+(?_cmd2index)),w
 16355  1B77  01D7               	clrf	(proc_line@index+1)
 16356  1B78  07D7               	addwf	(proc_line@index+1)
 16357  1B79  082C               	movf	(0+(?_cmd2index)),w
 16358  1B7A  01D6               	clrf	(proc_line@index)
 16359  1B7B  07D6               	addwf	(proc_line@index)
 16360                           
 16361                           	line	167
 16362                           	
 16363  1B7C                     l37735:	
 16364                           ;cmdline.c: 167: if (index >= 0) {
 16365  1B7C  1BD7               	btfsc	(proc_line@index+1),7
 16366  1B7D  2B7F               	goto	u10881
 16367  1B7E  2B80               	goto	u10880
 16368  1B7F                     u10881:
 16369  1B7F  2BE3               	goto	l37751
 16370  1B80                     u10880:
 16371  1B80  2BA6               	goto	l37747
 16372                           	line	168
 16373                           	
 16374  1B81                     l37737:	
 16375                           ;cmdline.c: 168: switch (commands[index].function(argc, argv)) {
 16376  1B81  2BA6               	goto	l37747
 16377                           	line	169
 16378                           ;cmdline.c: 169: case (0):
 16379                           	
 16380  1B82                     l15147:	
 16381                           	line	170
 16382                           ;cmdline.c: 170: break;
 16383  1B82  2BEF               	goto	l15154
 16384                           	line	171
 16385                           ;cmdline.c: 171: case (-1):
 16386                           	
 16387  1B83                     l15149:	
 16388                           	line	172
 16389                           	
 16390  1B83                     l37739:	
 16391                           ;cmdline.c: 172: printf("Syntax error\n");
 16392  1B83  30D5               	movlw	low(STR_101|8000h)
 16393  1B84  00AF               	movwf	(?_printf)
 16394  1B85  3087               	movlw	high(STR_101|8000h)
 16395  1B86  00B0               	movwf	((?_printf))+1
 16396  1B87  3194  24A0  319A   	fcall	_printf
 16397                           	line	173
 16398                           ;cmdline.c: 173: break;
 16399  1B8A  2BEF               	goto	l15154
 16400                           	line	174
 16401                           ;cmdline.c: 174: case (-2):
 16402                           	
 16403  1B8B                     l15150:	
 16404                           	line	175
 16405                           	
 16406  1B8B                     l37741:	
 16407                           ;cmdline.c: 175: printf("I/O error\n");
 16408  1B8B  304B               	movlw	low(STR_102|8000h)
 16409  1B8C  0020               	movlb 0	; select bank0
 16410  1B8D  00AF               	movwf	(?_printf)
 16411  1B8E  3088               	movlw	high(STR_102|8000h)
 16412  1B8F  00B0               	movwf	((?_printf))+1
 16413  1B90  3194  24A0  319A   	fcall	_printf
 16414                           	line	176
 16415                           ;cmdline.c: 176: break;
 16416  1B93  2BEF               	goto	l15154
 16417                           	line	177
 16418                           ;cmdline.c: 177: case (-3):
 16419                           	
 16420  1B94                     l15151:	
 16421                           	line	178
 16422                           	
 16423  1B94                     l37743:	
 16424                           ;cmdline.c: 178: printf("Parameter error\n");
 16425  1B94  30F4               	movlw	low(STR_103|8000h)
 16426  1B95  0020               	movlb 0	; select bank0
 16427  1B96  00AF               	movwf	(?_printf)
 16428  1B97  3086               	movlw	high(STR_103|8000h)
 16429  1B98  00B0               	movwf	((?_printf))+1
 16430  1B99  3194  24A0  319A   	fcall	_printf
 16431                           	line	179
 16432                           ;cmdline.c: 179: break;
 16433  1B9C  2BEF               	goto	l15154
 16434                           	line	180
 16435                           ;cmdline.c: 180: default:
 16436                           	
 16437  1B9D                     l15152:	
 16438                           	line	181
 16439                           	
 16440  1B9D                     l37745:	
 16441                           ;cmdline.c: 181: printf("Unknown error\n");
 16442  1B9D  3099               	movlw	low(STR_104|8000h)
 16443  1B9E  0020               	movlb 0	; select bank0
 16444  1B9F  00AF               	movwf	(?_printf)
 16445  1BA0  3087               	movlw	high(STR_104|8000h)
 16446  1BA1  00B0               	movwf	((?_printf))+1
 16447  1BA2  3194  24A0  319A   	fcall	_printf
 16448                           	line	182
 16449                           ;cmdline.c: 182: }
 16450  1BA5  2BEF               	goto	l15154
 16451                           	line	168
 16452                           	
 16453  1BA6                     l15146:	
 16454                           	
 16455  1BA6                     l37747:	
 16456  1BA6  3009               	movlw	(09h)
 16457  1BA7  0020               	movlb 0	; select bank0
 16458  1BA8  00CF               	movwf	(??_proc_line+0)+0
 16459  1BA9  084F               	movf	(??_proc_line+0)+0,w
 16460  1BAA  00A1               	movwf	(?___bmul)
 16461  1BAB  0856               	movf	(proc_line@index),w
 16462  1BAC  31A9  2179  319A   	fcall	___bmul
 16463  1BAF  3E08               	addlw	08h
 16464  1BB0  3E10               	addlw	low(_commands|8000h)
 16465  1BB1  0084               	movwf	fsr0l
 16466  1BB2  3085               	movlw	high(_commands|8000h)
 16467  1BB3  1803               	skipnc
 16468  1BB4  3E01               	addlw	1
 16469  1BB5  0085               	movwf	fsr0h
 16470  1BB6  0800               	movf	indf0,w ;code access
 16471  1BB7  0020               	movlb 0	; select bank0
 16472  1BB8  00D0               	movwf	(??_proc_line+1)+0
 16473  1BB9  0850               	movf	(??_proc_line+1)+0,w
 16474  1BBA  00D5               	movwf	(_proc_line$30517)
 16475                           	
 16476  1BBB                     l37749:	
 16477  1BBB  0859               	movf	(proc_line@argc+1),w
 16478  1BBC  01C8               	clrf	(?_echo+1)
 16479  1BBD  07C8               	addwf	(?_echo+1)
 16480  1BBE  0858               	movf	(proc_line@argc),w
 16481  1BBF  01C7               	clrf	(?_echo)
 16482  1BC0  07C7               	addwf	(?_echo)
 16483                           
 16484  1BC1  3051               	movlw	(proc_line@argv)&0ffh
 16485  1BC2  00CF               	movwf	(??_proc_line+0)+0
 16486  1BC3  084F               	movf	(??_proc_line+0)+0,w
 16487  1BC4  00C9               	movwf	(0+?_echo+02h)
 16488  1BC5  0855               	movf	(_proc_line$30517),w
 16489  1BC6  3181  2100  319A   	fcall	fptable
 16490                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
 16491                           ; Switch size 1, requested type "space"
 16492                           ; Number of cases is 2, Range of values is 0 to 255
 16493                           ; switch strategies available:
 16494                           ; Name         Instructions Cycles
 16495                           ; simple_byte            7     4 (average)
 16496                           ; jumptable            260     6 (fixed)
 16497                           ; rangetable           260     6 (fixed)
 16498                           ; spacedrange          517     8 (fixed)
 16499                           ; locatedrange         256     3 (fixed)
 16500                           ;	Chosen strategy is simple_byte
 16501                           
 16502  1BC9  0020               	movlb 0	; select bank0
 16503  1BCA  0848               	movf (1+(?_echo)),w
 16504                           	opt asmopt_off
 16505  1BCB  3A00               	xorlw	0^0	; case 0
 16506  1BCC  1903               	skipnz
 16507  1BCD  2BD2               	goto	l39181
 16508  1BCE  3AFF               	xorlw	255^0	; case 255
 16509  1BCF  1903               	skipnz
 16510  1BD0  2BD7               	goto	l39183
 16511  1BD1  2B9D               	goto	l37745
 16512                           	opt asmopt_on
 16513                           	
 16514  1BD2                     l39181:	
 16515                           ; Switch size 1, requested type "space"
 16516                           ; Number of cases is 1, Range of values is 0 to 0
 16517                           ; switch strategies available:
 16518                           ; Name         Instructions Cycles
 16519                           ; simple_byte            4     3 (average)
 16520                           ; direct_byte            8     6 (fixed)
 16521                           ; jumptable            260     6 (fixed)
 16522                           ; rangetable             5     4 (fixed)
 16523                           ; spacedrange            7     6 (fixed)
 16524                           ; locatedrange           1     3 (fixed)
 16525                           ;	Chosen strategy is simple_byte
 16526                           
 16527  1BD2  0847               	movf (0+(?_echo)),w
 16528                           	opt asmopt_off
 16529  1BD3  3A00               	xorlw	0^0	; case 0
 16530  1BD4  1903               	skipnz
 16531  1BD5  2BEF               	goto	l15154
 16532  1BD6  2B9D               	goto	l37745
 16533                           	opt asmopt_on
 16534                           	
 16535  1BD7                     l39183:	
 16536                           ; Switch size 1, requested type "space"
 16537                           ; Number of cases is 3, Range of values is 253 to 255
 16538                           ; switch strategies available:
 16539                           ; Name         Instructions Cycles
 16540                           ; simple_byte           10     6 (average)
 16541                           ; direct_byte           11     5 (fixed)
 16542                           ; jumptable            263     9 (fixed)
 16543                           ;	Chosen strategy is simple_byte
 16544                           
 16545  1BD7  0847               	movf (0+(?_echo)),w
 16546                           	opt asmopt_off
 16547  1BD8  3AFD               	xorlw	253^0	; case 253
 16548  1BD9  1903               	skipnz
 16549  1BDA  2B94               	goto	l37743
 16550  1BDB  3A03               	xorlw	254^253	; case 254
 16551  1BDC  1903               	skipnz
 16552  1BDD  2B8B               	goto	l37741
 16553  1BDE  3A01               	xorlw	255^254	; case 255
 16554  1BDF  1903               	skipnz
 16555  1BE0  2B83               	goto	l37739
 16556  1BE1  2B9D               	goto	l37745
 16557                           	opt asmopt_on
 16558                           
 16559                           	line	182
 16560                           	
 16561  1BE2                     l15148:	
 16562                           	line	183
 16563                           ;cmdline.c: 183: } else
 16564  1BE2  2BEF               	goto	l15154
 16565                           	
 16566  1BE3                     l15145:	
 16567                           	line	184
 16568                           	
 16569  1BE3                     l37751:	
 16570                           ;cmdline.c: 184: printf("Unknown command '%s'\n", argv[0]);
 16571  1BE3  304C               	movlw	low(STR_105|8000h)
 16572  1BE4  00AF               	movwf	(?_printf)
 16573  1BE5  3085               	movlw	high(STR_105|8000h)
 16574  1BE6  00B0               	movwf	((?_printf))+1
 16575  1BE7  0851               	movf	(proc_line@argv),w
 16576  1BE8  00B1               	movwf	(0+?_printf+02h)
 16577  1BE9  3001               	movlw	(0x2/2)
 16578  1BEA  00B2               	movwf	(1+?_printf+02h)
 16579  1BEB  3194  24A0  319A   	fcall	_printf
 16580  1BEE  2BEF               	goto	l15154
 16581                           	
 16582  1BEF                     l15153:	
 16583                           	line	185
 16584                           	
 16585  1BEF                     l15154:	
 16586  1BEF  0008               	return
 16587                           	opt stack 0
 16588                           GLOBAL	__end_of_proc_line
 16589  1BF0                     	__end_of_proc_line:
 16590 ;; =============== function _proc_line ends ============
 16591                           
 16592                           	signat	_proc_line,4216
 16593                           	global	_update_display
 16594                           psect	text3270,local,class=CODE,delta=2
 16595                           global __ptext3270
 16596  098C                     __ptext3270:
 16597                           
 16598 ;; *************** function _update_display *****************
 16599 ;; Defined at:
 16600 ;;		line 450 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;		None
 16603 ;; Auto vars:     Size  Location     Type
 16604 ;;		None
 16605 ;; Return value:  Size  Location     Type
 16606 ;;		None               void
 16607 ;; Registers used:
 16608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16609 ;; Tracked objects:
 16610 ;;		On entry : 0/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16616 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16618 ;;Total ram usage:        1 bytes
 16619 ;; Hardware stack levels used:    1
 16620 ;; Hardware stack levels required when called:    5
 16621 ;; This function calls:
 16622 ;;		_set_LED_Error
 16623 ;;		_set_LED_Cartridge
 16624 ;;		_set_LED
 16625 ;;		_set_LED_Cat
 16626 ;;		_set_LED_Locked
 16627 ;; This function is called by:
 16628 ;;		_userinterface_init
 16629 ;;		_userinterface_work
 16630 ;;		_catsensor_event
 16631 ;;		_process_button
 16632 ;; This function uses a non-reentrant model
 16633 ;;
 16634                           psect	text3270
 16635                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 16636                           	line	450
 16637                           	global	__size_of_update_display
 16638  01B1                     	__size_of_update_display	equ	__end_of_update_display-_update_display
 16639                           	
 16640  098C                     _update_display:	
 16641                           	opt	stack 9
 16642                           ; Regs used in _update_display: [wreg-status,0+pclath+cstack]
 16643                           	line	451
 16644                           	
 16645  098C                     l37617:	
 16646                           ;userinterface.c: 451: switch (panel_mode) {
 16647  098C  2B0D               	goto	l37681
 16648                           	line	452
 16649                           ;userinterface.c: 452: default:
 16650                           	
 16651  098D                     l8739:	
 16652                           	line	453
 16653                           ;userinterface.c: 453: panel_mode = 0;
 16654  098D  01D9               	clrf	(_panel_mode)^080h
 16655  098E  298F               	goto	l37619
 16656                           	line	454
 16657                           ;userinterface.c: 454: case 0:
 16658                           	
 16659  098F                     l8740:	
 16660                           	line	455
 16661                           	
 16662  098F                     l37619:	
 16663                           ;userinterface.c: 455: set_LED_Error(0x00, 0);
 16664  098F  0020               	movlb 0	; select bank0
 16665  0990  01AE               	clrf	(?_set_LED_Error)
 16666  0991  3000               	movlw	(0)
 16667  0992  31A8  203E  3189   	fcall	_set_LED_Error
 16668                           	line	456
 16669                           	
 16670  0995                     l37621:	
 16671                           ;userinterface.c: 456: if (cart_level >= 10)
 16672  0995  300A               	movlw	(0Ah)
 16673  0996  0020               	movlb 0	; select bank0
 16674  0997  026E               	subwf	(_cart_level),w
 16675  0998  1C03               	skipc
 16676  0999  299B               	goto	u10691
 16677  099A  299C               	goto	u10690
 16678  099B                     u10691:
 16679  099B  29A2               	goto	l37625
 16680  099C                     u10690:
 16681                           	line	457
 16682                           	
 16683  099C                     l37623:	
 16684                           ;userinterface.c: 457: set_LED_Cartridge(0x00, 0);
 16685  099C  01AE               	clrf	(?_set_LED_Cartridge)
 16686  099D  3000               	movlw	(0)
 16687  099E  31A8  204D  3189   	fcall	_set_LED_Cartridge
 16688  09A1  2A64               	goto	l37651
 16689                           	line	458
 16690                           	
 16691  09A2                     l8741:	
 16692                           	line	459
 16693                           	
 16694  09A2                     l37625:	
 16695                           ;userinterface.c: 458: else
 16696                           ;userinterface.c: 459: set_LED_Cartridge(0x55, 1);
 16697  09A2  0020               	movlb 0	; select bank0
 16698  09A3  01AE               	clrf	(?_set_LED_Cartridge)
 16699  09A4  1403               	bsf	status,0
 16700  09A5  0DAE               	rlf	(?_set_LED_Cartridge),f
 16701  09A6  3055               	movlw	(055h)
 16702  09A7  31A8  204D  3189   	fcall	_set_LED_Cartridge
 16703  09AA  2A64               	goto	l37651
 16704                           	
 16705  09AB                     l8742:	
 16706                           	line	460
 16707                           ;userinterface.c: 460: switch (auto_mode) {
 16708  09AB  2A64               	goto	l37651
 16709                           	line	461
 16710                           ;userinterface.c: 461: default:
 16711                           	
 16712  09AC                     l8744:	
 16713                           	line	462
 16714                           ;userinterface.c: 462: auto_mode = 0;
 16715  09AC  01E2               	clrf	(_auto_mode)
 16716  09AD  29B2               	goto	l37627
 16717                           	line	463
 16718                           ;userinterface.c: 463: case 0:
 16719                           	
 16720  09AE                     l8745:	
 16721  09AE  29B2               	goto	l37627
 16722                           	line	464
 16723                           	
 16724  09AF                     l8746:	
 16725  09AF  29B2               	goto	l37627
 16726                           	line	465
 16727                           	
 16728  09B0                     l8747:	
 16729  09B0  29B2               	goto	l37627
 16730                           	line	466
 16731                           	
 16732  09B1                     l8748:	
 16733  09B1  29B2               	goto	l37627
 16734                           	line	467
 16735                           	
 16736  09B2                     l8749:	
 16737                           	line	468
 16738                           	
 16739  09B2                     l37627:	
 16740                           ;userinterface.c: 464: case 1:
 16741                           ;userinterface.c: 465: case 2:
 16742                           ;userinterface.c: 466: case 3:
 16743                           ;userinterface.c: 467: case 4:
 16744                           ;userinterface.c: 468: set_LED(1, auto_mode == 1);
 16745  09B2  0862               	movf	(_auto_mode),w
 16746  09B3  3A01               	xorlw	01h&0ffh
 16747  09B4  3000               	movlw	0
 16748  09B5  1903               	skipnz
 16749  09B6  3001               	movlw	1
 16750  09B7  00B2               	movwf	(??_update_display+0)+0
 16751  09B8  0832               	movf	(??_update_display+0)+0,w
 16752  09B9  00A1               	movwf	(?_set_LED)
 16753  09BA  3001               	movlw	(01h)
 16754  09BB  31AD  25F2  3189   	fcall	_set_LED
 16755                           	line	469
 16756                           ;userinterface.c: 469: set_LED(2, auto_mode == 2);
 16757  09BE  0020               	movlb 0	; select bank0
 16758  09BF  0862               	movf	(_auto_mode),w
 16759  09C0  3A02               	xorlw	02h&0ffh
 16760  09C1  3000               	movlw	0
 16761  09C2  1903               	skipnz
 16762  09C3  3001               	movlw	1
 16763  09C4  00B2               	movwf	(??_update_display+0)+0
 16764  09C5  0832               	movf	(??_update_display+0)+0,w
 16765  09C6  00A1               	movwf	(?_set_LED)
 16766  09C7  3002               	movlw	(02h)
 16767  09C8  31AD  25F2  3189   	fcall	_set_LED
 16768                           	line	470
 16769                           ;userinterface.c: 470: set_LED(3, auto_mode == 3);
 16770  09CB  0020               	movlb 0	; select bank0
 16771  09CC  0862               	movf	(_auto_mode),w
 16772  09CD  3A03               	xorlw	03h&0ffh
 16773  09CE  3000               	movlw	0
 16774  09CF  1903               	skipnz
 16775  09D0  3001               	movlw	1
 16776  09D1  00B2               	movwf	(??_update_display+0)+0
 16777  09D2  0832               	movf	(??_update_display+0)+0,w
 16778  09D3  00A1               	movwf	(?_set_LED)
 16779  09D4  3003               	movlw	(03h)
 16780  09D5  31AD  25F2  3189   	fcall	_set_LED
 16781                           	line	471
 16782                           ;userinterface.c: 471: set_LED(4, auto_mode == 4);
 16783  09D8  0020               	movlb 0	; select bank0
 16784  09D9  0862               	movf	(_auto_mode),w
 16785  09DA  3A04               	xorlw	04h&0ffh
 16786  09DB  3000               	movlw	0
 16787  09DC  1903               	skipnz
 16788  09DD  3001               	movlw	1
 16789  09DE  00B2               	movwf	(??_update_display+0)+0
 16790  09DF  0832               	movf	(??_update_display+0)+0,w
 16791  09E0  00A1               	movwf	(?_set_LED)
 16792  09E1  3004               	movlw	(04h)
 16793  09E2  31AD  25F2  3189   	fcall	_set_LED
 16794                           	line	472
 16795                           	
 16796  09E5                     l37629:	
 16797                           ;userinterface.c: 472: set_LED_Cat(0x00, 0);
 16798  09E5  0020               	movlb 0	; select bank0
 16799  09E6  01AE               	clrf	(?_set_LED_Cat)
 16800  09E7  3000               	movlw	(0)
 16801  09E8  31A8  205C  3189   	fcall	_set_LED_Cat
 16802                           	line	473
 16803                           ;userinterface.c: 473: break;
 16804  09EB  2B19               	goto	l8762
 16805                           	line	474
 16806                           ;userinterface.c: 474: case 5:
 16807                           	
 16808  09EC                     l8751:	
 16809  09EC  29F0               	goto	l37631
 16810                           	line	475
 16811                           	
 16812  09ED                     l8752:	
 16813  09ED  29F0               	goto	l37631
 16814                           	line	476
 16815                           	
 16816  09EE                     l8753:	
 16817  09EE  29F0               	goto	l37631
 16818                           	line	477
 16819                           	
 16820  09EF                     l8754:	
 16821  09EF  29F0               	goto	l37631
 16822                           	line	478
 16823                           	
 16824  09F0                     l8755:	
 16825                           	line	479
 16826                           	
 16827  09F0                     l37631:	
 16828                           ;userinterface.c: 475: case 6:
 16829                           ;userinterface.c: 476: case 7:
 16830                           ;userinterface.c: 477: case 8:
 16831                           ;userinterface.c: 478: case 9:
 16832                           ;userinterface.c: 479: set_LED(1, auto_mode != 9);
 16833  09F0  0020               	movlb 0	; select bank0
 16834  09F1  0862               	movf	(_auto_mode),w
 16835  09F2  3A09               	xorlw	09h&0ffh
 16836  09F3  3000               	movlw	0
 16837  09F4  1D03               	skipz
 16838  09F5  3001               	movlw	1
 16839  09F6  00B2               	movwf	(??_update_display+0)+0
 16840  09F7  0832               	movf	(??_update_display+0)+0,w
 16841  09F8  00A1               	movwf	(?_set_LED)
 16842  09F9  3001               	movlw	(01h)
 16843  09FA  31AD  25F2  3189   	fcall	_set_LED
 16844                           	line	480
 16845                           ;userinterface.c: 480: set_LED(2, auto_mode == 6);
 16846  09FD  0020               	movlb 0	; select bank0
 16847  09FE  0862               	movf	(_auto_mode),w
 16848  09FF  3A06               	xorlw	06h&0ffh
 16849  0A00  3000               	movlw	0
 16850  0A01  1903               	skipnz
 16851  0A02  3001               	movlw	1
 16852  0A03  00B2               	movwf	(??_update_display+0)+0
 16853  0A04  0832               	movf	(??_update_display+0)+0,w
 16854  0A05  00A1               	movwf	(?_set_LED)
 16855  0A06  3002               	movlw	(02h)
 16856  0A07  31AD  25F2  3189   	fcall	_set_LED
 16857                           	line	481
 16858                           ;userinterface.c: 481: set_LED(3, auto_mode == 7);
 16859  0A0A  0020               	movlb 0	; select bank0
 16860  0A0B  0862               	movf	(_auto_mode),w
 16861  0A0C  3A07               	xorlw	07h&0ffh
 16862  0A0D  3000               	movlw	0
 16863  0A0E  1903               	skipnz
 16864  0A0F  3001               	movlw	1
 16865  0A10  00B2               	movwf	(??_update_display+0)+0
 16866  0A11  0832               	movf	(??_update_display+0)+0,w
 16867  0A12  00A1               	movwf	(?_set_LED)
 16868  0A13  3003               	movlw	(03h)
 16869  0A14  31AD  25F2  3189   	fcall	_set_LED
 16870                           	line	482
 16871                           ;userinterface.c: 482: set_LED(4, auto_mode == 8);
 16872  0A17  0020               	movlb 0	; select bank0
 16873  0A18  0862               	movf	(_auto_mode),w
 16874  0A19  3A08               	xorlw	08h&0ffh
 16875  0A1A  3000               	movlw	0
 16876  0A1B  1903               	skipnz
 16877  0A1C  3001               	movlw	1
 16878  0A1D  00B2               	movwf	(??_update_display+0)+0
 16879  0A1E  0832               	movf	(??_update_display+0)+0,w
 16880  0A1F  00A1               	movwf	(?_set_LED)
 16881  0A20  3004               	movlw	(04h)
 16882  0A21  31AD  25F2  3189   	fcall	_set_LED
 16883                           	line	483
 16884                           	
 16885  0A24                     l37633:	
 16886                           ;userinterface.c: 483: if ((cat_present) && (state != 2))
 16887  0A24  1CF0               	btfss	(_cat_present/8),(_cat_present)&7
 16888  0A25  2A27               	goto	u10701
 16889  0A26  2A28               	goto	u10700
 16890  0A27                     u10701:
 16891  0A27  2A37               	goto	l8756
 16892  0A28                     u10700:
 16893                           	
 16894  0A28                     l37635:	
 16895  0A28  0020               	movlb 0	; select bank0
 16896  0A29  0866               	movf	(_state),w
 16897  0A2A  3A02               	xorlw	02h&0ffh
 16898  0A2B  1903               	skipnz
 16899  0A2C  2A2E               	goto	u10711
 16900  0A2D  2A2F               	goto	u10710
 16901  0A2E                     u10711:
 16902  0A2E  2A37               	goto	l8756
 16903  0A2F                     u10710:
 16904                           	line	484
 16905                           	
 16906  0A2F                     l37637:	
 16907                           ;userinterface.c: 484: set_LED_Cat(0x55, 1);
 16908  0A2F  01AE               	clrf	(?_set_LED_Cat)
 16909  0A30  1403               	bsf	status,0
 16910  0A31  0DAE               	rlf	(?_set_LED_Cat),f
 16911  0A32  3055               	movlw	(055h)
 16912  0A33  31A8  205C  3189   	fcall	_set_LED_Cat
 16913  0A36  2B19               	goto	l8762
 16914                           	line	485
 16915                           	
 16916  0A37                     l8756:	
 16917                           ;userinterface.c: 485: else if ((cat_detected) && (state != 2))
 16918  0A37  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 16919  0A38  2A3A               	goto	u10721
 16920  0A39  2A3B               	goto	u10720
 16921  0A3A                     u10721:
 16922  0A3A  2A58               	goto	l37647
 16923  0A3B                     u10720:
 16924                           	
 16925  0A3B                     l37639:	
 16926  0A3B  0020               	movlb 0	; select bank0
 16927  0A3C  0866               	movf	(_state),w
 16928  0A3D  3A02               	xorlw	02h&0ffh
 16929  0A3E  1903               	skipnz
 16930  0A3F  2A41               	goto	u10731
 16931  0A40  2A42               	goto	u10730
 16932  0A41                     u10731:
 16933  0A41  2A58               	goto	l37647
 16934  0A42                     u10730:
 16935                           	line	486
 16936                           	
 16937  0A42                     l37641:	
 16938                           ;userinterface.c: 486: if (full_wash)
 16939  0A42  1D71               	btfss	(_full_wash/8),(_full_wash)&7
 16940  0A43  2A45               	goto	u10741
 16941  0A44  2A46               	goto	u10740
 16942  0A45                     u10741:
 16943  0A45  2A4E               	goto	l37645
 16944  0A46                     u10740:
 16945                           	line	487
 16946                           	
 16947  0A46                     l37643:	
 16948                           ;userinterface.c: 487: set_LED_Cat(0xFA, 1);
 16949  0A46  01AE               	clrf	(?_set_LED_Cat)
 16950  0A47  1403               	bsf	status,0
 16951  0A48  0DAE               	rlf	(?_set_LED_Cat),f
 16952  0A49  30FA               	movlw	(0FAh)
 16953  0A4A  31A8  205C  3189   	fcall	_set_LED_Cat
 16954  0A4D  2B19               	goto	l8762
 16955                           	line	488
 16956                           	
 16957  0A4E                     l8759:	
 16958                           	line	489
 16959                           	
 16960  0A4E                     l37645:	
 16961                           ;userinterface.c: 488: else
 16962                           ;userinterface.c: 489: set_LED_Cat(0xFE, 1);
 16963  0A4E  0020               	movlb 0	; select bank0
 16964  0A4F  01AE               	clrf	(?_set_LED_Cat)
 16965  0A50  1403               	bsf	status,0
 16966  0A51  0DAE               	rlf	(?_set_LED_Cat),f
 16967  0A52  30FE               	movlw	(0FEh)
 16968  0A53  31A8  205C  3189   	fcall	_set_LED_Cat
 16969  0A56  2B19               	goto	l8762
 16970                           	
 16971  0A57                     l8760:	
 16972  0A57  2B19               	goto	l8762
 16973                           	line	490
 16974                           	
 16975  0A58                     l8758:	
 16976                           	line	491
 16977                           	
 16978  0A58                     l37647:	
 16979                           ;userinterface.c: 490: else
 16980                           ;userinterface.c: 491: set_LED_Cat(0xFF, 1);
 16981  0A58  0020               	movlb 0	; select bank0
 16982  0A59  01AE               	clrf	(?_set_LED_Cat)
 16983  0A5A  1403               	bsf	status,0
 16984  0A5B  0DAE               	rlf	(?_set_LED_Cat),f
 16985  0A5C  30FF               	movlw	(0FFh)
 16986  0A5D  31A8  205C  3189   	fcall	_set_LED_Cat
 16987  0A60  2B19               	goto	l8762
 16988                           	
 16989  0A61                     l8761:	
 16990  0A61  2B19               	goto	l8762
 16991                           	
 16992  0A62                     l8757:	
 16993                           	line	492
 16994                           ;userinterface.c: 492: break;
 16995  0A62  2B19               	goto	l8762
 16996                           	line	493
 16997                           	
 16998  0A63                     l37649:	
 16999                           ;userinterface.c: 493: }
 17000  0A63  2B19               	goto	l8762
 17001                           	line	460
 17002                           	
 17003  0A64                     l8743:	
 17004                           	
 17005  0A64                     l37651:	
 17006  0A64  0020               	movlb 0	; select bank0
 17007  0A65  0862               	movf	(_auto_mode),w
 17008                           	; Switch size 1, requested type "space"
 17009                           ; Number of cases is 10, Range of values is 0 to 9
 17010                           ; switch strategies available:
 17011                           ; Name         Instructions Cycles
 17012                           ; direct_byte           26     6 (fixed)
 17013                           ; simple_byte           31    16 (average)
 17014                           ; jumptable            260     6 (fixed)
 17015                           ; rangetable            14     4 (fixed)
 17016                           ; spacedrange           25     6 (fixed)
 17017                           ; locatedrange          10     3 (fixed)
 17018                           ;	Chosen strategy is direct_byte
 17019                           
 17020  0A66  0084               	movwf fsr0l
 17021  0A67  300A               	movlw	10
 17022  0A68  0204               	subwf	fsr0l,w
 17023  0A69  1803               skipnc
 17024  0A6A  29AC               goto l8744
 17025  0A6B  31A8               movlp high(S39185)
 17026  0A6C  3504               	lslf fsr0l,w
 17027  0A6D  3E1E               	addlw low(S39185)
 17028  0A6E  0082               	movwf pc
 17029                           psect	swtext4,local,class=CONST,delta=2
 17030                           global __pswtext4
 17031  281E                     __pswtext4:
 17032  281E                     S39185:
 17033  281E  3189  29B2         	ljmp	l37627
 17034  2820  3189  29B2         	ljmp	l37627
 17035  2822  3189  29B2         	ljmp	l37627
 17036  2824  3189  29B2         	ljmp	l37627
 17037  2826  3189  29B2         	ljmp	l37627
 17038  2828  3189  29F0         	ljmp	l37631
 17039  282A  3189  29F0         	ljmp	l37631
 17040  282C  3189  29F0         	ljmp	l37631
 17041  282E  3189  29F0         	ljmp	l37631
 17042  2830  3189  29F0         	ljmp	l37631
 17043                           psect	text3270
 17044                           
 17045                           	line	493
 17046                           	
 17047  0A6F                     l8750:	
 17048                           	line	494
 17049                           ;userinterface.c: 494: break;
 17050  0A6F  2B19               	goto	l8762
 17051                           	line	495
 17052                           ;userinterface.c: 495: case 1:
 17053                           	
 17054  0A70                     l8763:	
 17055                           	line	496
 17056                           	
 17057  0A70                     l37653:	
 17058                           ;userinterface.c: 496: set_LED_Error(0x00, 0);
 17059  0A70  0020               	movlb 0	; select bank0
 17060  0A71  01AE               	clrf	(?_set_LED_Error)
 17061  0A72  3000               	movlw	(0)
 17062  0A73  31A8  203E  3189   	fcall	_set_LED_Error
 17063                           	line	497
 17064                           ;userinterface.c: 497: set_LED_Cartridge(0xFF, 1);
 17065  0A76  0020               	movlb 0	; select bank0
 17066  0A77  01AE               	clrf	(?_set_LED_Cartridge)
 17067  0A78  1403               	bsf	status,0
 17068  0A79  0DAE               	rlf	(?_set_LED_Cartridge),f
 17069  0A7A  30FF               	movlw	(0FFh)
 17070  0A7B  31A8  204D  3189   	fcall	_set_LED_Cartridge
 17071                           	line	498
 17072                           	
 17073  0A7E                     l37655:	
 17074                           ;userinterface.c: 498: set_LED(1, cart_level >= 10);
 17075  0A7E  300A               	movlw	(0Ah)
 17076  0A7F  0020               	movlb 0	; select bank0
 17077  0A80  026E               	subwf	(_cart_level),w
 17078  0A81  3000               	movlw	0
 17079  0A82  1803               	skipnc
 17080  0A83  3001               	movlw	1
 17081  0A84  00B2               	movwf	(??_update_display+0)+0
 17082  0A85  0832               	movf	(??_update_display+0)+0,w
 17083  0A86  00A1               	movwf	(?_set_LED)
 17084  0A87  3001               	movlw	(01h)
 17085  0A88  31AD  25F2  3189   	fcall	_set_LED
 17086                           	line	499
 17087                           	
 17088  0A8B                     l37657:	
 17089                           ;userinterface.c: 499: set_LED(2, cart_level >= 25);
 17090  0A8B  3019               	movlw	(019h)
 17091  0A8C  0020               	movlb 0	; select bank0
 17092  0A8D  026E               	subwf	(_cart_level),w
 17093  0A8E  3000               	movlw	0
 17094  0A8F  1803               	skipnc
 17095  0A90  3001               	movlw	1
 17096  0A91  00B2               	movwf	(??_update_display+0)+0
 17097  0A92  0832               	movf	(??_update_display+0)+0,w
 17098  0A93  00A1               	movwf	(?_set_LED)
 17099  0A94  3002               	movlw	(02h)
 17100  0A95  31AD  25F2  3189   	fcall	_set_LED
 17101                           	line	500
 17102                           	
 17103  0A98                     l37659:	
 17104                           ;userinterface.c: 500: set_LED(3, cart_level >= 50);
 17105  0A98  3032               	movlw	(032h)
 17106  0A99  0020               	movlb 0	; select bank0
 17107  0A9A  026E               	subwf	(_cart_level),w
 17108  0A9B  3000               	movlw	0
 17109  0A9C  1803               	skipnc
 17110  0A9D  3001               	movlw	1
 17111  0A9E  00B2               	movwf	(??_update_display+0)+0
 17112  0A9F  0832               	movf	(??_update_display+0)+0,w
 17113  0AA0  00A1               	movwf	(?_set_LED)
 17114  0AA1  3003               	movlw	(03h)
 17115  0AA2  31AD  25F2  3189   	fcall	_set_LED
 17116                           	line	501
 17117                           	
 17118  0AA5                     l37661:	
 17119                           ;userinterface.c: 501: set_LED(4, cart_level >= 75);
 17120  0AA5  304B               	movlw	(04Bh)
 17121  0AA6  0020               	movlb 0	; select bank0
 17122  0AA7  026E               	subwf	(_cart_level),w
 17123  0AA8  3000               	movlw	0
 17124  0AA9  1803               	skipnc
 17125  0AAA  3001               	movlw	1
 17126  0AAB  00B2               	movwf	(??_update_display+0)+0
 17127  0AAC  0832               	movf	(??_update_display+0)+0,w
 17128  0AAD  00A1               	movwf	(?_set_LED)
 17129  0AAE  3004               	movlw	(04h)
 17130  0AAF  31AD  25F2  3189   	fcall	_set_LED
 17131                           	line	502
 17132                           	
 17133  0AB2                     l37663:	
 17134                           ;userinterface.c: 502: if (cart_level >= 100)
 17135  0AB2  3064               	movlw	(064h)
 17136  0AB3  0020               	movlb 0	; select bank0
 17137  0AB4  026E               	subwf	(_cart_level),w
 17138  0AB5  1C03               	skipc
 17139  0AB6  2AB8               	goto	u10751
 17140  0AB7  2AB9               	goto	u10750
 17141  0AB8                     u10751:
 17142  0AB8  2AC1               	goto	l37667
 17143  0AB9                     u10750:
 17144                           	line	503
 17145                           	
 17146  0AB9                     l37665:	
 17147                           ;userinterface.c: 503: set_LED_Cat(0xFF, 1);
 17148  0AB9  01AE               	clrf	(?_set_LED_Cat)
 17149  0ABA  1403               	bsf	status,0
 17150  0ABB  0DAE               	rlf	(?_set_LED_Cat),f
 17151  0ABC  30FF               	movlw	(0FFh)
 17152  0ABD  31A8  205C  3189   	fcall	_set_LED_Cat
 17153  0AC0  2B19               	goto	l8762
 17154                           	line	504
 17155                           	
 17156  0AC1                     l8764:	
 17157                           	line	505
 17158                           	
 17159  0AC1                     l37667:	
 17160                           ;userinterface.c: 504: else
 17161                           ;userinterface.c: 505: set_LED_Cat(0x00, 0);
 17162  0AC1  0020               	movlb 0	; select bank0
 17163  0AC2  01AE               	clrf	(?_set_LED_Cat)
 17164  0AC3  3000               	movlw	(0)
 17165  0AC4  31A8  205C  3189   	fcall	_set_LED_Cat
 17166  0AC7  2B19               	goto	l8762
 17167                           	
 17168  0AC8                     l8765:	
 17169                           	line	506
 17170                           ;userinterface.c: 506: break;
 17171  0AC8  2B19               	goto	l8762
 17172                           	line	507
 17173                           ;userinterface.c: 507: case 2:
 17174                           	
 17175  0AC9                     l8766:	
 17176                           	line	508
 17177                           	
 17178  0AC9                     l37669:	
 17179                           ;userinterface.c: 508: set_LED_Error(0x55, 1);
 17180  0AC9  0020               	movlb 0	; select bank0
 17181  0ACA  01AE               	clrf	(?_set_LED_Error)
 17182  0ACB  1403               	bsf	status,0
 17183  0ACC  0DAE               	rlf	(?_set_LED_Error),f
 17184  0ACD  3055               	movlw	(055h)
 17185  0ACE  31A8  203E  3189   	fcall	_set_LED_Error
 17186                           	line	509
 17187                           ;userinterface.c: 509: set_LED_Cartridge(0x00, 0);
 17188  0AD1  0020               	movlb 0	; select bank0
 17189  0AD2  01AE               	clrf	(?_set_LED_Cartridge)
 17190  0AD3  3000               	movlw	(0)
 17191  0AD4  31A8  204D  3189   	fcall	_set_LED_Cartridge
 17192                           	line	510
 17193                           	
 17194  0AD7                     l37671:	
 17195                           ;userinterface.c: 510: set_LED(1, error_nr == 1);
 17196  0AD7  0020               	movlb 0	; select bank0
 17197  0AD8  0863               	movf	(_error_nr),w
 17198  0AD9  3A01               	xorlw	01h&0ffh
 17199  0ADA  3000               	movlw	0
 17200  0ADB  1903               	skipnz
 17201  0ADC  3001               	movlw	1
 17202  0ADD  00B2               	movwf	(??_update_display+0)+0
 17203  0ADE  0832               	movf	(??_update_display+0)+0,w
 17204  0ADF  00A1               	movwf	(?_set_LED)
 17205  0AE0  3001               	movlw	(01h)
 17206  0AE1  31AD  25F2  3189   	fcall	_set_LED
 17207                           	line	511
 17208                           	
 17209  0AE4                     l37673:	
 17210                           ;userinterface.c: 511: set_LED(2, error_nr == 2);
 17211  0AE4  0020               	movlb 0	; select bank0
 17212  0AE5  0863               	movf	(_error_nr),w
 17213  0AE6  3A02               	xorlw	02h&0ffh
 17214  0AE7  3000               	movlw	0
 17215  0AE8  1903               	skipnz
 17216  0AE9  3001               	movlw	1
 17217  0AEA  00B2               	movwf	(??_update_display+0)+0
 17218  0AEB  0832               	movf	(??_update_display+0)+0,w
 17219  0AEC  00A1               	movwf	(?_set_LED)
 17220  0AED  3002               	movlw	(02h)
 17221  0AEE  31AD  25F2  3189   	fcall	_set_LED
 17222                           	line	512
 17223                           	
 17224  0AF1                     l37675:	
 17225                           ;userinterface.c: 512: set_LED(3, error_nr == 3);
 17226  0AF1  0020               	movlb 0	; select bank0
 17227  0AF2  0863               	movf	(_error_nr),w
 17228  0AF3  3A03               	xorlw	03h&0ffh
 17229  0AF4  3000               	movlw	0
 17230  0AF5  1903               	skipnz
 17231  0AF6  3001               	movlw	1
 17232  0AF7  00B2               	movwf	(??_update_display+0)+0
 17233  0AF8  0832               	movf	(??_update_display+0)+0,w
 17234  0AF9  00A1               	movwf	(?_set_LED)
 17235  0AFA  3003               	movlw	(03h)
 17236  0AFB  31AD  25F2  3189   	fcall	_set_LED
 17237                           	line	513
 17238                           	
 17239  0AFE                     l37677:	
 17240                           ;userinterface.c: 513: set_LED(4, error_nr == 4);
 17241  0AFE  0020               	movlb 0	; select bank0
 17242  0AFF  0863               	movf	(_error_nr),w
 17243  0B00  3A04               	xorlw	04h&0ffh
 17244  0B01  3000               	movlw	0
 17245  0B02  1903               	skipnz
 17246  0B03  3001               	movlw	1
 17247  0B04  00B2               	movwf	(??_update_display+0)+0
 17248  0B05  0832               	movf	(??_update_display+0)+0,w
 17249  0B06  00A1               	movwf	(?_set_LED)
 17250  0B07  3004               	movlw	(04h)
 17251  0B08  31AD  25F2  3189   	fcall	_set_LED
 17252                           	line	514
 17253                           ;userinterface.c: 514: break;
 17254  0B0B  2B19               	goto	l8762
 17255                           	line	515
 17256                           	
 17257  0B0C                     l37679:	
 17258                           ;userinterface.c: 515: }
 17259  0B0C  2B19               	goto	l8762
 17260                           	line	451
 17261                           	
 17262  0B0D                     l8738:	
 17263                           	
 17264  0B0D                     l37681:	
 17265  0B0D  0021               	movlb 1	; select bank1
 17266  0B0E  0859               	movf	(_panel_mode)^080h,w
 17267                           	; Switch size 1, requested type "space"
 17268                           ; Number of cases is 3, Range of values is 0 to 2
 17269                           ; switch strategies available:
 17270                           ; Name         Instructions Cycles
 17271                           ; simple_byte           10     6 (average)
 17272                           ; direct_byte           12     6 (fixed)
 17273                           ; jumptable            260     6 (fixed)
 17274                           ; rangetable             7     4 (fixed)
 17275                           ; spacedrange           11     6 (fixed)
 17276                           ; locatedrange           3     3 (fixed)
 17277                           ;	Chosen strategy is simple_byte
 17278                           
 17279                           	opt asmopt_off
 17280  0B0F  3A00               	xorlw	0^0	; case 0
 17281  0B10  1903               	skipnz
 17282  0B11  298F               	goto	l37619
 17283  0B12  3A01               	xorlw	1^0	; case 1
 17284  0B13  1903               	skipnz
 17285  0B14  2A70               	goto	l37653
 17286  0B15  3A03               	xorlw	2^1	; case 2
 17287  0B16  1903               	skipnz
 17288  0B17  2AC9               	goto	l37669
 17289  0B18  298D               	goto	l8739
 17290                           	opt asmopt_on
 17291                           
 17292                           	line	515
 17293                           	
 17294  0B19                     l8762:	
 17295                           	line	518
 17296                           ;userinterface.c: 518: if (locked) {
 17297  0B19  1DF1               	btfss	(_locked/8),(_locked)&7
 17298  0B1A  2B1C               	goto	u10761
 17299  0B1B  2B1D               	goto	u10760
 17300  0B1C                     u10761:
 17301  0B1C  2B35               	goto	l37689
 17302  0B1D                     u10760:
 17303                           	line	519
 17304                           	
 17305  0B1D                     l37683:	
 17306                           ;userinterface.c: 519: if (buttonmask_cur)
 17307  0B1D  0021               	movlb 1	; select bank1
 17308  0B1E  0856               	movf	(_buttonmask_cur)^080h,w
 17309  0B1F  1D03               	skipz
 17310  0B20  2B22               	goto	u10770
 17311  0B21  2B2B               	goto	l37687
 17312  0B22                     u10770:
 17313                           	line	520
 17314                           	
 17315  0B22                     l37685:	
 17316                           ;userinterface.c: 520: set_LED_Locked(0xAA, 1);
 17317  0B22  0020               	movlb 0	; select bank0
 17318  0B23  01AE               	clrf	(?_set_LED_Locked)
 17319  0B24  1403               	bsf	status,0
 17320  0B25  0DAE               	rlf	(?_set_LED_Locked),f
 17321  0B26  30AA               	movlw	(0AAh)
 17322  0B27  31A8  206B  3189   	fcall	_set_LED_Locked
 17323  0B2A  2B3C               	goto	l8771
 17324                           	line	521
 17325                           	
 17326  0B2B                     l8768:	
 17327                           	line	522
 17328                           	
 17329  0B2B                     l37687:	
 17330                           ;userinterface.c: 521: else
 17331                           ;userinterface.c: 522: set_LED_Locked(0xFF, 1);
 17332  0B2B  0020               	movlb 0	; select bank0
 17333  0B2C  01AE               	clrf	(?_set_LED_Locked)
 17334  0B2D  1403               	bsf	status,0
 17335  0B2E  0DAE               	rlf	(?_set_LED_Locked),f
 17336  0B2F  30FF               	movlw	(0FFh)
 17337  0B30  31A8  206B  3189   	fcall	_set_LED_Locked
 17338  0B33  2B3C               	goto	l8771
 17339                           	
 17340  0B34                     l8769:	
 17341                           	line	523
 17342                           ;userinterface.c: 523: } else
 17343  0B34  2B3C               	goto	l8771
 17344                           	
 17345  0B35                     l8767:	
 17346                           	line	524
 17347                           	
 17348  0B35                     l37689:	
 17349                           ;userinterface.c: 524: set_LED_Locked(0x00, 0);
 17350  0B35  0020               	movlb 0	; select bank0
 17351  0B36  01AE               	clrf	(?_set_LED_Locked)
 17352  0B37  3000               	movlw	(0)
 17353  0B38  31A8  206B  3189   	fcall	_set_LED_Locked
 17354  0B3B  2B3C               	goto	l8771
 17355                           	
 17356  0B3C                     l8770:	
 17357                           	line	525
 17358                           	
 17359  0B3C                     l8771:	
 17360  0B3C  0008               	return
 17361                           	opt stack 0
 17362                           GLOBAL	__end_of_update_display
 17363  0B3D                     	__end_of_update_display:
 17364 ;; =============== function _update_display ends ============
 17365                           
 17366                           	signat	_update_display,88
 17367                           	global	_set_mode
 17368                           psect	text3271,local,class=CODE,delta=2
 17369                           global __ptext3271
 17370  2E8E                     __ptext3271:
 17371                           
 17372 ;; *************** function _set_mode *****************
 17373 ;; Defined at:
 17374 ;;		line 419 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 17375 ;; Parameters:    Size  Location     Type
 17376 ;;  mode            1    wreg     unsigned char 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;  mode            1   40[BANK0 ] unsigned char 
 17379 ;; Return value:  Size  Location     Type
 17380 ;;		None               void
 17381 ;; Registers used:
 17382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17383 ;; Tracked objects:
 17384 ;;		On entry : 0/0
 17385 ;;		On exit  : 0/0
 17386 ;;		Unchanged: 0/0
 17387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17390 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17391 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17392 ;;Total ram usage:        3 bytes
 17393 ;; Hardware stack levels used:    1
 17394 ;; Hardware stack levels required when called:    5
 17395 ;; This function calls:
 17396 ;;		_printf
 17397 ;;		_update_autotimer
 17398 ;;		_timeoutnow
 17399 ;;		_eeprom_write
 17400 ;; This function is called by:
 17401 ;;		_userinterface_init
 17402 ;;		_setup_short
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           psect	text3271
 17406                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 17407                           	line	419
 17408                           	global	__size_of_set_mode
 17409  005A                     	__size_of_set_mode	equ	__end_of_set_mode-_set_mode
 17410                           	
 17411  2E8E                     _set_mode:	
 17412                           	opt	stack 8
 17413                           ; Regs used in _set_mode: [wreg-status,0+pclath+cstack]
 17414                           ;set_mode@mode stored from wreg
 17415  2E8E  0020               	movlb 0	; select bank0
 17416  2E8F  00C9               	movwf	(set_mode@mode)
 17417                           	line	420
 17418                           	
 17419  2E90                     l37589:	
 17420                           ;userinterface.c: 420: if (mode > 9)
 17421  2E90  300A               	movlw	(0Ah)
 17422  2E91  0249               	subwf	(set_mode@mode),w
 17423  2E92  1C03               	skipc
 17424  2E93  2E95               	goto	u10631
 17425  2E94  2E96               	goto	u10630
 17426  2E95                     u10631:
 17427  2E95  2E98               	goto	l37593
 17428  2E96                     u10630:
 17429                           	line	421
 17430                           	
 17431  2E96                     l37591:	
 17432                           ;userinterface.c: 421: auto_mode = 0;
 17433  2E96  01E2               	clrf	(_auto_mode)
 17434  2E97  2E9D               	goto	l37595
 17435                           	line	422
 17436                           	
 17437  2E98                     l8729:	
 17438                           	line	423
 17439                           	
 17440  2E98                     l37593:	
 17441                           ;userinterface.c: 422: else
 17442                           ;userinterface.c: 423: auto_mode = mode;
 17443  2E98  0849               	movf	(set_mode@mode),w
 17444  2E99  00C7               	movwf	(??_set_mode+0)+0
 17445  2E9A  0847               	movf	(??_set_mode+0)+0,w
 17446  2E9B  00E2               	movwf	(_auto_mode)
 17447  2E9C  2E9D               	goto	l37595
 17448                           	
 17449  2E9D                     l8730:	
 17450                           	line	425
 17451                           	
 17452  2E9D                     l37595:	
 17453                           ;userinterface.c: 425: printf("Set mode %u\n", auto_mode);
 17454  2E9D  300D               	movlw	low(STR_98|8000h)
 17455  2E9E  00AF               	movwf	(?_printf)
 17456  2E9F  3088               	movlw	high(STR_98|8000h)
 17457  2EA0  00B0               	movwf	((?_printf))+1
 17458  2EA1  0862               	movf	(_auto_mode),w
 17459  2EA2  00C7               	movwf	(??_set_mode+0)+0
 17460  2EA3  01C8               	clrf	(??_set_mode+0)+0+1
 17461  2EA4  0847               	movf	0+(??_set_mode+0)+0,w
 17462  2EA5  00B1               	movwf	0+(?_printf)+02h
 17463  2EA6  0848               	movf	1+(??_set_mode+0)+0,w
 17464  2EA7  00B2               	movwf	1+(?_printf)+02h
 17465  2EA8  3194  24A0  31AE   	fcall	_printf
 17466                           	line	431
 17467                           	
 17468  2EAB                     l37597:	
 17469                           ;userinterface.c: 428: if ( (auto_mode == 1) ||
 17470                           ;userinterface.c: 429: (auto_mode == 2) ||
 17471                           ;userinterface.c: 430: (auto_mode == 3) ||
 17472                           ;userinterface.c: 431: (auto_mode == 4) ) {
 17473  2EAB  0020               	movlb 0	; select bank0
 17474  2EAC  0862               	movf	(_auto_mode),w
 17475  2EAD  3A01               	xorlw	01h&0ffh
 17476  2EAE  1903               	skipnz
 17477  2EAF  2EB1               	goto	u10641
 17478  2EB0  2EB2               	goto	u10640
 17479  2EB1                     u10641:
 17480  2EB1  2EC4               	goto	l8733
 17481  2EB2                     u10640:
 17482                           	
 17483  2EB2                     l37599:	
 17484  2EB2  0862               	movf	(_auto_mode),w
 17485  2EB3  3A02               	xorlw	02h&0ffh
 17486  2EB4  1903               	skipnz
 17487  2EB5  2EB7               	goto	u10651
 17488  2EB6  2EB8               	goto	u10650
 17489  2EB7                     u10651:
 17490  2EB7  2EC4               	goto	l8733
 17491  2EB8                     u10650:
 17492                           	
 17493  2EB8                     l37601:	
 17494  2EB8  0862               	movf	(_auto_mode),w
 17495  2EB9  3A03               	xorlw	03h&0ffh
 17496  2EBA  1903               	skipnz
 17497  2EBB  2EBD               	goto	u10661
 17498  2EBC  2EBE               	goto	u10660
 17499  2EBD                     u10661:
 17500  2EBD  2EC4               	goto	l8733
 17501  2EBE                     u10660:
 17502                           	
 17503  2EBE                     l37603:	
 17504  2EBE  0862               	movf	(_auto_mode),w
 17505  2EBF  3A04               	xorlw	04h&0ffh
 17506  2EC0  1D03               	skipz
 17507  2EC1  2EC3               	goto	u10671
 17508  2EC2  2EC4               	goto	u10670
 17509  2EC3                     u10671:
 17510  2EC3  2EC6               	goto	l37605
 17511  2EC4                     u10670:
 17512                           	
 17513  2EC4                     l8733:	
 17514                           	line	432
 17515                           ;userinterface.c: 432: full_wash = 1;
 17516  2EC4  1571               	bsf	(_full_wash/8),(_full_wash)&7
 17517  2EC5  2EC6               	goto	l37605
 17518                           	line	433
 17519                           	
 17520  2EC6                     l8731:	
 17521                           	line	435
 17522                           	
 17523  2EC6                     l37605:	
 17524                           ;userinterface.c: 433: }
 17525                           ;userinterface.c: 435: if (state != 2) {
 17526  2EC6  0866               	movf	(_state),w
 17527  2EC7  3A02               	xorlw	02h&0ffh
 17528  2EC8  1903               	skipnz
 17529  2EC9  2ECB               	goto	u10681
 17530  2ECA  2ECC               	goto	u10680
 17531  2ECB                     u10681:
 17532  2ECB  2ED0               	goto	l37609
 17533  2ECC                     u10680:
 17534                           	line	437
 17535                           	
 17536  2ECC                     l37607:	
 17537                           ;userinterface.c: 437: state = 0;
 17538  2ECC  01E6               	clrf	(_state)
 17539                           	line	438
 17540                           ;userinterface.c: 438: interval = 0;
 17541  2ECD  0021               	movlb 1	; select bank1
 17542  2ECE  01D8               	clrf	(_interval)^080h
 17543  2ECF  2ED0               	goto	l37609
 17544                           	line	439
 17545                           	
 17546  2ED0                     l8734:	
 17547                           	line	441
 17548                           	
 17549  2ED0                     l37609:	
 17550                           ;userinterface.c: 439: }
 17551                           ;userinterface.c: 441: update_autotimer(auto_mode);
 17552  2ED0  0020               	movlb 0	; select bank0
 17553  2ED1  0862               	movf	(_auto_mode),w
 17554  2ED2  31A6  26BE  31AE   	fcall	_update_autotimer
 17555                           	line	442
 17556                           	
 17557  2ED5                     l37611:	
 17558                           ;userinterface.c: 442: timeoutnow(&cattimer);
 17559  2ED5  3040               	movlw	(_cattimer&0ffh)
 17560  2ED6  0020               	movlb 0	; select bank0
 17561  2ED7  00A5               	movwf	(?_timeoutnow)
 17562  2ED8  3001               	movlw	0x2/2
 17563  2ED9  00A6               	movwf	(?_timeoutnow+1)
 17564  2EDA  31A9  21CB  31AE   	fcall	_timeoutnow
 17565                           	line	443
 17566                           	
 17567  2EDD                     l37613:	
 17568                           ;userinterface.c: 443: cat_detected = 0;
 17569  2EDD  1070               	bcf	(_cat_detected/8),(_cat_detected)&7
 17570                           	line	446
 17571                           	
 17572  2EDE                     l37615:	
 17573                           ;userinterface.c: 446: eeprom_write((1), auto_mode);
 17574  2EDE  0020               	movlb 0	; select bank0
 17575  2EDF  0862               	movf	(_auto_mode),w
 17576  2EE0  00C7               	movwf	(??_set_mode+0)+0
 17577  2EE1  0847               	movf	(??_set_mode+0)+0,w
 17578  2EE2  00A1               	movwf	(?_eeprom_write)
 17579  2EE3  3001               	movlw	(01h)
 17580  2EE4  31AC  244D  31AE   	fcall	_eeprom_write
 17581                           	line	447
 17582                           	
 17583  2EE7                     l8735:	
 17584  2EE7  0008               	return
 17585                           	opt stack 0
 17586                           GLOBAL	__end_of_set_mode
 17587  2EE8                     	__end_of_set_mode:
 17588 ;; =============== function _set_mode ends ============
 17589                           
 17590                           	signat	_set_mode,4216
 17591                           	global	_litterlanguage_start
 17592                           psect	text3272,local,class=CODE,delta=2
 17593                           global __ptext3272
 17594  2D6A                     __ptext3272:
 17595                           
 17596 ;; *************** function _litterlanguage_start *****************
 17597 ;; Defined at:
 17598 ;;		line 235 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17599 ;; Parameters:    Size  Location     Type
 17600 ;;  wet             1    wreg     unsigned char 
 17601 ;; Auto vars:     Size  Location     Type
 17602 ;;  wet             1   48[BANK0 ] unsigned char 
 17603 ;; Return value:  Size  Location     Type
 17604 ;;		None               void
 17605 ;; Registers used:
 17606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17607 ;; Tracked objects:
 17608 ;;		On entry : 0/0
 17609 ;;		On exit  : 0/0
 17610 ;;		Unchanged: 0/0
 17611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17613 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17615 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17616 ;;Total ram usage:        3 bytes
 17617 ;; Hardware stack levels used:    1
 17618 ;; Hardware stack levels required when called:    5
 17619 ;; This function calls:
 17620 ;;		_printtime
 17621 ;;		_printf
 17622 ;; This function is called by:
 17623 ;;		_userinterface_work
 17624 ;;		_start_short
 17625 ;;		_start_long
 17626 ;; This function uses a non-reentrant model
 17627 ;;
 17628                           psect	text3272
 17629                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17630                           	line	235
 17631                           	global	__size_of_litterlanguage_start
 17632  0040                     	__size_of_litterlanguage_start	equ	__end_of_litterlanguage_start-_litterlanguage_start
 17633                           	
 17634  2D6A                     _litterlanguage_start:	
 17635                           	opt	stack 8
 17636                           ; Regs used in _litterlanguage_start: [wreg-status,0+pclath+cstack]
 17637                           ;litterlanguage_start@wet stored from wreg
 17638                           	line	237
 17639  2D6A  0020               	movlb 0	; select bank0
 17640  2D6B  00D1               	movwf	(litterlanguage_start@wet)
 17641                           	
 17642  2D6C                     l37569:	
 17643                           ;litterlanguage.c: 236: extern const struct instruction washprogram[];
 17644                           ;litterlanguage.c: 237: if (ins_state == 0) {
 17645  2D6C  08E5               	movf	(_ins_state),f
 17646  2D6D  1D03               	skipz
 17647  2D6E  2D70               	goto	u10601
 17648  2D6F  2D71               	goto	u10600
 17649  2D70                     u10601:
 17650  2D70  2DA9               	goto	l4281
 17651  2D71                     u10600:
 17652                           	line	238
 17653                           	
 17654  2D71                     l37571:	
 17655                           ;litterlanguage.c: 238: printtime();
 17656  2D71  31AB  2395  31AD   	fcall	_printtime
 17657                           	line	239
 17658                           	
 17659  2D74                     l37573:	
 17660                           ;litterlanguage.c: 239: printf("Starting %s program\n", wet?"wet":"dry");
 17661  2D74  0020               	movlb 0	; select bank0
 17662  2D75  08D1               	movf	(litterlanguage_start@wet),f
 17663  2D76  1D03               	skipz
 17664  2D77  2D79               	goto	u10611
 17665  2D78  2D7A               	goto	u10610
 17666  2D79                     u10611:
 17667  2D79  2D7F               	goto	l37577
 17668  2D7A                     u10610:
 17669                           	
 17670  2D7A                     l37575:	
 17671  2D7A  3038               	movlw	low(STR_26|8000h)
 17672  2D7B  00CF               	movwf	(_litterlanguage_start$5890)
 17673  2D7C  3089               	movlw	high(STR_26|8000h)
 17674  2D7D  00D0               	movwf	((_litterlanguage_start$5890))+1
 17675  2D7E  2D84               	goto	l37579
 17676                           	
 17677  2D7F                     l4275:	
 17678                           	
 17679  2D7F                     l37577:	
 17680  2D7F  3030               	movlw	low(STR_25|8000h)
 17681  2D80  00CF               	movwf	(_litterlanguage_start$5890)
 17682  2D81  3089               	movlw	high(STR_25|8000h)
 17683  2D82  00D0               	movwf	((_litterlanguage_start$5890))+1
 17684  2D83  2D84               	goto	l37579
 17685                           	
 17686  2D84                     l4277:	
 17687                           	
 17688  2D84                     l37579:	
 17689  2D84  3078               	movlw	low(STR_24|8000h)
 17690  2D85  00AF               	movwf	(?_printf)
 17691  2D86  3085               	movlw	high(STR_24|8000h)
 17692  2D87  00B0               	movwf	((?_printf))+1
 17693  2D88  0850               	movf	(_litterlanguage_start$5890+1),w
 17694  2D89  01B2               	clrf	(1+?_printf+02h)
 17695  2D8A  07B2               	addwf	(1+?_printf+02h)
 17696  2D8B  084F               	movf	(_litterlanguage_start$5890),w
 17697  2D8C  01B1               	clrf	(0+?_printf+02h)
 17698  2D8D  07B1               	addwf	(0+?_printf+02h)
 17699                           
 17700  2D8E  3194  24A0  31AD   	fcall	_printf
 17701                           	line	240
 17702                           ;litterlanguage.c: 240: switch (prg_source) {
 17703  2D91  2D99               	goto	l37585
 17704                           	line	241
 17705                           ;litterlanguage.c: 241: case 0:
 17706                           	
 17707  2D92                     l4279:	
 17708                           	line	242
 17709                           	
 17710  2D92                     l37581:	
 17711                           ;litterlanguage.c: 242: ins_pointer = &washprogram[0];
 17712  2D92  3013               	movlw	low(_washprogram|8000h)
 17713  2D93  0020               	movlb 0	; select bank0
 17714  2D94  00EB               	movwf	(_ins_pointer)
 17715  2D95  3082               	movlw	high(_washprogram|8000h)
 17716  2D96  00EC               	movwf	((_ins_pointer))+1
 17717                           	line	243
 17718                           ;litterlanguage.c: 243: break;
 17719  2D97  2D9F               	goto	l4280
 17720                           	line	244
 17721                           	
 17722  2D98                     l37583:	
 17723                           ;litterlanguage.c: 244: }
 17724  2D98  2D9F               	goto	l4280
 17725                           	line	240
 17726                           	
 17727  2D99                     l4278:	
 17728                           	
 17729  2D99                     l37585:	
 17730  2D99  0021               	movlb 1	; select bank1
 17731  2D9A  085A               	movf	(_prg_source)^080h,w
 17732                           	; Switch size 1, requested type "space"
 17733                           ; Number of cases is 1, Range of values is 0 to 0
 17734                           ; switch strategies available:
 17735                           ; Name         Instructions Cycles
 17736                           ; simple_byte            4     3 (average)
 17737                           ; direct_byte            8     6 (fixed)
 17738                           ; jumptable            260     6 (fixed)
 17739                           ; rangetable             5     4 (fixed)
 17740                           ; spacedrange            7     6 (fixed)
 17741                           ; locatedrange           1     3 (fixed)
 17742                           ;	Chosen strategy is simple_byte
 17743                           
 17744                           	opt asmopt_off
 17745  2D9B  3A00               	xorlw	0^0	; case 0
 17746  2D9C  1903               	skipnz
 17747  2D9D  2D92               	goto	l37581
 17748  2D9E  2D9F               	goto	l4280
 17749                           	opt asmopt_on
 17750                           
 17751                           	line	244
 17752                           	
 17753  2D9F                     l4280:	
 17754                           	line	245
 17755                           ;litterlanguage.c: 245: wet_program = wet;
 17756  2D9F  0020               	movlb 0	; select bank0
 17757  2DA0  126D               	bcf	(_wet_program/8),(_wet_program)&7
 17758  2DA1  1C51               	btfss	(litterlanguage_start@wet),0
 17759  2DA2  2DA4               	goto	u10625
 17760  2DA3  166D               	bsf	(_wet_program/8),(_wet_program)&7
 17761  2DA4                     u10625:
 17762                           
 17763                           	line	246
 17764                           	
 17765  2DA4                     l37587:	
 17766                           ;litterlanguage.c: 246: ins_state = 1 ;
 17767  2DA4  0020               	movlb 0	; select bank0
 17768  2DA5  01E5               	clrf	(_ins_state)
 17769  2DA6  1403               	bsf	status,0
 17770  2DA7  0DE5               	rlf	(_ins_state),f
 17771  2DA8  2DA9               	goto	l4281
 17772                           	line	247
 17773                           	
 17774  2DA9                     l4273:	
 17775                           	line	248
 17776                           	
 17777  2DA9                     l4281:	
 17778  2DA9  0008               	return
 17779                           	opt stack 0
 17780                           GLOBAL	__end_of_litterlanguage_start
 17781  2DAA                     	__end_of_litterlanguage_start:
 17782 ;; =============== function _litterlanguage_start ends ============
 17783                           
 17784                           	signat	_litterlanguage_start,4216
 17785                           	global	_litterlanguage_cleanup
 17786                           psect	text3273,local,class=CODE,delta=2
 17787                           global __ptext3273
 17788  2CF3                     __ptext3273:
 17789                           
 17790 ;; *************** function _litterlanguage_cleanup *****************
 17791 ;; Defined at:
 17792 ;;		line 435 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  wet             1    wreg     unsigned char 
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;  wet             1   48[BANK0 ] unsigned char 
 17797 ;; Return value:  Size  Location     Type
 17798 ;;		None               void
 17799 ;; Registers used:
 17800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17801 ;; Tracked objects:
 17802 ;;		On entry : 0/0
 17803 ;;		On exit  : 0/0
 17804 ;;		Unchanged: 0/0
 17805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17807 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17809 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17810 ;;Total ram usage:        3 bytes
 17811 ;; Hardware stack levels used:    1
 17812 ;; Hardware stack levels required when called:    5
 17813 ;; This function calls:
 17814 ;;		_printtime
 17815 ;;		_printf
 17816 ;; This function is called by:
 17817 ;;		_litterlanguage_init
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           psect	text3273
 17821                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17822                           	line	435
 17823                           	global	__size_of_litterlanguage_cleanup
 17824  0038                     	__size_of_litterlanguage_cleanup	equ	__end_of_litterlanguage_cleanup-_litterlanguage_cl
                                 eanup
 17825                           	
 17826  2CF3                     _litterlanguage_cleanup:	
 17827                           	opt	stack 9
 17828                           ; Regs used in _litterlanguage_cleanup: [wreg-status,0+pclath+cstack]
 17829                           ;litterlanguage_cleanup@wet stored from wreg
 17830                           	line	437
 17831  2CF3  0020               	movlb 0	; select bank0
 17832  2CF4  00D1               	movwf	(litterlanguage_cleanup@wet)
 17833                           	
 17834  2CF5                     l37549:	
 17835                           ;litterlanguage.c: 436: extern const struct instruction cleanupprogram[];
 17836                           ;litterlanguage.c: 437: if (ins_state == 0) {
 17837  2CF5  08E5               	movf	(_ins_state),f
 17838  2CF6  1D03               	skipz
 17839  2CF7  2CF9               	goto	u10571
 17840  2CF8  2CFA               	goto	u10570
 17841  2CF9                     u10571:
 17842  2CF9  2D2A               	goto	l4335
 17843  2CFA                     u10570:
 17844                           	line	438
 17845                           	
 17846  2CFA                     l37551:	
 17847                           ;litterlanguage.c: 438: printtime();
 17848  2CFA  31AB  2395  31AC   	fcall	_printtime
 17849                           	line	439
 17850                           	
 17851  2CFD                     l37553:	
 17852                           ;litterlanguage.c: 439: printf("Starting %s cleanup\n", wet?"wet":"dry");
 17853  2CFD  0020               	movlb 0	; select bank0
 17854  2CFE  08D1               	movf	(litterlanguage_cleanup@wet),f
 17855  2CFF  1D03               	skipz
 17856  2D00  2D02               	goto	u10581
 17857  2D01  2D03               	goto	u10580
 17858  2D02                     u10581:
 17859  2D02  2D08               	goto	l37557
 17860  2D03                     u10580:
 17861                           	
 17862  2D03                     l37555:	
 17863  2D03  3038               	movlw	low(STR_38|8000h)
 17864  2D04  00CF               	movwf	(_litterlanguage_cleanup$5941)
 17865  2D05  3089               	movlw	high(STR_38|8000h)
 17866  2D06  00D0               	movwf	((_litterlanguage_cleanup$5941))+1
 17867  2D07  2D0D               	goto	l37559
 17868                           	
 17869  2D08                     l4332:	
 17870                           	
 17871  2D08                     l37557:	
 17872  2D08  3030               	movlw	low(STR_37|8000h)
 17873  2D09  00CF               	movwf	(_litterlanguage_cleanup$5941)
 17874  2D0A  3089               	movlw	high(STR_37|8000h)
 17875  2D0B  00D0               	movwf	((_litterlanguage_cleanup$5941))+1
 17876  2D0C  2D0D               	goto	l37559
 17877                           	
 17878  2D0D                     l4334:	
 17879                           	
 17880  2D0D                     l37559:	
 17881  2D0D  308D               	movlw	low(STR_36|8000h)
 17882  2D0E  00AF               	movwf	(?_printf)
 17883  2D0F  3085               	movlw	high(STR_36|8000h)
 17884  2D10  00B0               	movwf	((?_printf))+1
 17885  2D11  0850               	movf	(_litterlanguage_cleanup$5941+1),w
 17886  2D12  01B2               	clrf	(1+?_printf+02h)
 17887  2D13  07B2               	addwf	(1+?_printf+02h)
 17888  2D14  084F               	movf	(_litterlanguage_cleanup$5941),w
 17889  2D15  01B1               	clrf	(0+?_printf+02h)
 17890  2D16  07B1               	addwf	(0+?_printf+02h)
 17891                           
 17892  2D17  3194  24A0  31AC   	fcall	_printf
 17893                           	line	440
 17894                           	
 17895  2D1A                     l37561:	
 17896                           ;litterlanguage.c: 440: prg_source = 0;
 17897  2D1A  0021               	movlb 1	; select bank1
 17898  2D1B  01DA               	clrf	(_prg_source)^080h
 17899                           	line	441
 17900                           	
 17901  2D1C                     l37563:	
 17902                           ;litterlanguage.c: 441: ins_pointer = &cleanupprogram[0];
 17903  2D1C  30EC               	movlw	low(_cleanupprogram|8000h)
 17904  2D1D  0020               	movlb 0	; select bank0
 17905  2D1E  00EB               	movwf	(_ins_pointer)
 17906  2D1F  3084               	movlw	high(_cleanupprogram|8000h)
 17907  2D20  00EC               	movwf	((_ins_pointer))+1
 17908                           	line	442
 17909                           	
 17910  2D21                     l37565:	
 17911                           ;litterlanguage.c: 442: wet_program = wet;
 17912  2D21  126D               	bcf	(_wet_program/8),(_wet_program)&7
 17913  2D22  1C51               	btfss	(litterlanguage_cleanup@wet),0
 17914  2D23  2D25               	goto	u10595
 17915  2D24  166D               	bsf	(_wet_program/8),(_wet_program)&7
 17916  2D25                     u10595:
 17917                           
 17918                           	line	443
 17919                           	
 17920  2D25                     l37567:	
 17921                           ;litterlanguage.c: 443: ins_state = 1 ;
 17922  2D25  0020               	movlb 0	; select bank0
 17923  2D26  01E5               	clrf	(_ins_state)
 17924  2D27  1403               	bsf	status,0
 17925  2D28  0DE5               	rlf	(_ins_state),f
 17926  2D29  2D2A               	goto	l4335
 17927                           	line	444
 17928                           	
 17929  2D2A                     l4330:	
 17930                           	line	445
 17931                           	
 17932  2D2A                     l4335:	
 17933  2D2A  0008               	return
 17934                           	opt stack 0
 17935                           GLOBAL	__end_of_litterlanguage_cleanup
 17936  2D2B                     	__end_of_litterlanguage_cleanup:
 17937 ;; =============== function _litterlanguage_cleanup ends ============
 17938                           
 17939                           	signat	_litterlanguage_cleanup,4216
 17940                           	global	_help
 17941                           	global	_echo
 17942                           psect	text3274,local,class=CODE,delta=2
 17943                           global __ptext3274
 17944  24BD                     __ptext3274:
 17945                           
 17946 ;; *************** function _echo *****************
 17947 ;; Defined at:
 17948 ;;		line 203 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 17949 ;; Parameters:    Size  Location     Type
 17950 ;;  argc            2   38[BANK0 ] int 
 17951 ;;  argv            1   40[BANK0 ] PTR PTR unsigned char 
 17952 ;;		 -> proc_line@argv(4), 
 17953 ;; Auto vars:     Size  Location     Type
 17954 ;;		None
 17955 ;; Return value:  Size  Location     Type
 17956 ;;                  2   38[BANK0 ] int 
 17957 ;; Registers used:
 17958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 17959 ;; Tracked objects:
 17960 ;;		On entry : 0/0
 17961 ;;		On exit  : 0/0
 17962 ;;		Unchanged: 0/0
 17963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17964 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17967 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 17968 ;;Total ram usage:        5 bytes
 17969 ;; Hardware stack levels used:    1
 17970 ;; Hardware stack levels required when called:    4
 17971 ;; This function calls:
 17972 ;;		_strncmp
 17973 ;;		_printf
 17974 ;; This function is called by:
 17975 ;;		_proc_line
 17976 ;; This function uses a non-reentrant model
 17977 ;;
 17978                           psect	text3274
 17979                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 17980                           	line	203
 17981                           	global	__size_of_echo
 17982  007A                     	__size_of_echo	equ	__end_of_echo-_echo
 17983                           	
 17984  24BD                     _echo:	
 17985                           	opt	stack 8
 17986                           ; Regs used in _echo: [allreg]
 17987                           	line	204
 17988                           	
 17989  24BD                     l37495:	
 17990                           ;cmdline.c: 204: if (argc > 2)
 17991  24BD  0020               	movlb 0	; select bank0
 17992  24BE  0848               	movf	(echo@argc+1),w
 17993  24BF  3A80               	xorlw	80h
 17994  24C0  00FF               	movwf	btemp+1
 17995  24C1  3080               	movlw	(high(03h))^80h
 17996  24C2  027F               	subwf	btemp+1,w
 17997  24C3  1D03               	skipz
 17998  24C4  2CC7               	goto	u10505
 17999  24C5  3003               	movlw	low(03h)
 18000  24C6  0247               	subwf	(echo@argc),w
 18001  24C7                     u10505:
 18002                           
 18003  24C7  1C03               	skipc
 18004  24C8  2CCA               	goto	u10501
 18005  24C9  2CCB               	goto	u10500
 18006  24CA                     u10501:
 18007  24CA  2CD2               	goto	l37501
 18008  24CB                     u10500:
 18009                           	line	205
 18010                           	
 18011  24CB                     l37497:	
 18012                           ;cmdline.c: 205: return (-1);
 18013  24CB  30FF               	movlw	low(-1)
 18014  24CC  0020               	movlb 0	; select bank0
 18015  24CD  00C7               	movwf	(?_echo)
 18016  24CE  30FF               	movlw	high(-1)
 18017  24CF  00C8               	movwf	((?_echo))+1
 18018  24D0  2D36               	goto	l15165
 18019                           	
 18020  24D1                     l37499:	
 18021  24D1  2D36               	goto	l15165
 18022                           	
 18023  24D2                     l15164:	
 18024                           	line	207
 18025                           	
 18026  24D2                     l37501:	
 18027                           ;cmdline.c: 207: if (argc == 2) {
 18028  24D2  3002               	movlw	02h
 18029  24D3  0020               	movlb 0	; select bank0
 18030  24D4  0647               	xorwf	(echo@argc),w
 18031  24D5  0448               	iorwf	(echo@argc+1),w
 18032  24D6  1D03               	skipz
 18033  24D7  2CD9               	goto	u10511
 18034  24D8  2CDA               	goto	u10510
 18035  24D9                     u10511:
 18036  24D9  2D16               	goto	l37515
 18037  24DA                     u10510:
 18038                           	line	208
 18039                           	
 18040  24DA                     l37503:	
 18041                           ;cmdline.c: 208: if (!strncmp (argv[1], "on", (20)))
 18042  24DA  3042               	movlw	low(STR_106|8000h)
 18043  24DB  00A5               	movwf	(?_strncmp)
 18044  24DC  3089               	movlw	high(STR_106|8000h)
 18045  24DD  00A6               	movwf	((?_strncmp))+1
 18046  24DE  3014               	movlw	low(014h)
 18047  24DF  00A7               	movwf	0+(?_strncmp)+02h
 18048  24E0  3000               	movlw	high(014h)
 18049  24E1  00A8               	movwf	(0+(?_strncmp)+02h)+1
 18050  24E2  0849               	movf	(echo@argv),w
 18051  24E3  3E01               	addlw	01h
 18052  24E4  0086               	movwf	fsr1l
 18053  24E5  0187               	clrf fsr1h	
 18054                           	
 18055  24E6  0801               	movf	indf1,w
 18056  24E7  3190  2000  31A4   	fcall	_strncmp
 18057  24EA  0020               	movlb 0	; select bank0
 18058  24EB  0826               	movf	((1+(?_strncmp))),w
 18059  24EC  0425               	iorwf	((0+(?_strncmp))),w
 18060  24ED  1D03               	skipz
 18061  24EE  2CF0               	goto	u10521
 18062  24EF  2CF1               	goto	u10520
 18063  24F0                     u10521:
 18064  24F0  2CF5               	goto	l37507
 18065  24F1                     u10520:
 18066                           	line	209
 18067                           	
 18068  24F1                     l37505:	
 18069                           ;cmdline.c: 209: localecho = 1;
 18070  24F1  01EF               	clrf	(_localecho)
 18071  24F2  1403               	bsf	status,0
 18072  24F3  0DEF               	rlf	(_localecho),f
 18073  24F4  2D16               	goto	l37515
 18074                           	line	210
 18075                           	
 18076  24F5                     l15167:	
 18077                           	
 18078  24F5                     l37507:	
 18079                           ;cmdline.c: 210: else if (!strncmp (argv[1], "off", (20)))
 18080  24F5  302C               	movlw	low(STR_107|8000h)
 18081  24F6  00A5               	movwf	(?_strncmp)
 18082  24F7  3089               	movlw	high(STR_107|8000h)
 18083  24F8  00A6               	movwf	((?_strncmp))+1
 18084  24F9  3014               	movlw	low(014h)
 18085  24FA  00A7               	movwf	0+(?_strncmp)+02h
 18086  24FB  3000               	movlw	high(014h)
 18087  24FC  00A8               	movwf	(0+(?_strncmp)+02h)+1
 18088  24FD  0849               	movf	(echo@argv),w
 18089  24FE  3E01               	addlw	01h
 18090  24FF  0086               	movwf	fsr1l
 18091  2500  0187               	clrf fsr1h	
 18092                           	
 18093  2501  0801               	movf	indf1,w
 18094  2502  3190  2000  31A4   	fcall	_strncmp
 18095  2505  0020               	movlb 0	; select bank0
 18096  2506  0826               	movf	((1+(?_strncmp))),w
 18097  2507  0425               	iorwf	((0+(?_strncmp))),w
 18098  2508  1D03               	skipz
 18099  2509  2D0B               	goto	u10531
 18100  250A  2D0C               	goto	u10530
 18101  250B                     u10531:
 18102  250B  2D0E               	goto	l37511
 18103  250C                     u10530:
 18104                           	line	211
 18105                           	
 18106  250C                     l37509:	
 18107                           ;cmdline.c: 211: localecho = 0;
 18108  250C  01EF               	clrf	(_localecho)
 18109  250D  2D16               	goto	l37515
 18110                           	line	212
 18111                           	
 18112  250E                     l15169:	
 18113                           	line	213
 18114                           	
 18115  250E                     l37511:	
 18116                           ;cmdline.c: 212: else
 18117                           ;cmdline.c: 213: return (-1);
 18118  250E  30FF               	movlw	low(-1)
 18119  250F  00C7               	movwf	(?_echo)
 18120  2510  30FF               	movlw	high(-1)
 18121  2511  00C8               	movwf	((?_echo))+1
 18122  2512  2D36               	goto	l15165
 18123                           	
 18124  2513                     l37513:	
 18125  2513  2D36               	goto	l15165
 18126                           	
 18127  2514                     l15170:	
 18128  2514  2D16               	goto	l37515
 18129                           	
 18130  2515                     l15168:	
 18131  2515  2D16               	goto	l37515
 18132                           	line	214
 18133                           	
 18134  2516                     l15166:	
 18135                           	line	215
 18136                           	
 18137  2516                     l37515:	
 18138                           ;cmdline.c: 214: }
 18139                           ;cmdline.c: 215: printf("Echo: %s\n", localecho?"on":"off");
 18140  2516  08EF               	movf	(_localecho),f
 18141  2517  1D03               	skipz
 18142  2518  2D1A               	goto	u10541
 18143  2519  2D1B               	goto	u10540
 18144  251A                     u10541:
 18145  251A  2D20               	goto	l37519
 18146  251B                     u10540:
 18147                           	
 18148  251B                     l37517:	
 18149  251B  302C               	movlw	low(STR_110|8000h)
 18150  251C  00CA               	movwf	(_echo$17754)
 18151  251D  3089               	movlw	high(STR_110|8000h)
 18152  251E  00CB               	movwf	((_echo$17754))+1
 18153  251F  2D25               	goto	l37521
 18154                           	
 18155  2520                     l15172:	
 18156                           	
 18157  2520                     l37519:	
 18158  2520  3042               	movlw	low(STR_109|8000h)
 18159  2521  00CA               	movwf	(_echo$17754)
 18160  2522  3089               	movlw	high(STR_109|8000h)
 18161  2523  00CB               	movwf	((_echo$17754))+1
 18162  2524  2D25               	goto	l37521
 18163                           	
 18164  2525                     l15174:	
 18165                           	
 18166  2525                     l37521:	
 18167  2525  306C               	movlw	low(STR_108|8000h)
 18168  2526  00AF               	movwf	(?_printf)
 18169  2527  3088               	movlw	high(STR_108|8000h)
 18170  2528  00B0               	movwf	((?_printf))+1
 18171  2529  084B               	movf	(_echo$17754+1),w
 18172  252A  01B2               	clrf	(1+?_printf+02h)
 18173  252B  07B2               	addwf	(1+?_printf+02h)
 18174  252C  084A               	movf	(_echo$17754),w
 18175  252D  01B1               	clrf	(0+?_printf+02h)
 18176  252E  07B1               	addwf	(0+?_printf+02h)
 18177                           
 18178  252F  3194  24A0  31A4   	fcall	_printf
 18179                           	line	217
 18180                           	
 18181  2532                     l37523:	
 18182                           ;cmdline.c: 217: return (0);
 18183  2532  0020               	movlb 0	; select bank0
 18184  2533  01C7               	clrf	(?_echo)
 18185  2534  01C8               	clrf	(?_echo+1)
 18186  2535  2D36               	goto	l15165
 18187                           	
 18188  2536                     l37525:	
 18189                           	line	218
 18190                           	
 18191  2536                     l15165:	
 18192  2536  0008               	return
 18193                           	opt stack 0
 18194                           GLOBAL	__end_of_echo
 18195  2537                     	__end_of_echo:
 18196 ;; =============== function _echo ends ============
 18197                           
 18198                           	signat	_echo,8314
 18199                           psect	text3275,local,class=CODE,delta=2
 18200                           global __ptext3275
 18201  2FA1                     __ptext3275:
 18202                           
 18203 ;; *************** function _help *****************
 18204 ;; Defined at:
 18205 ;;		line 222 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 18206 ;; Parameters:    Size  Location     Type
 18207 ;;  argc            2   38[BANK0 ] int 
 18208 ;;  argv            1   40[BANK0 ] PTR PTR unsigned char 
 18209 ;;		 -> proc_line@argv(4), 
 18210 ;; Auto vars:     Size  Location     Type
 18211 ;;  index           2   44[BANK0 ] int 
 18212 ;; Return value:  Size  Location     Type
 18213 ;;                  2   38[BANK0 ] int 
 18214 ;; Registers used:
 18215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 18216 ;; Tracked objects:
 18217 ;;		On entry : 0/0
 18218 ;;		On exit  : 0/0
 18219 ;;		Unchanged: 0/0
 18220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18221 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 18222 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18224 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 18225 ;;Total ram usage:        8 bytes
 18226 ;; Hardware stack levels used:    1
 18227 ;; Hardware stack levels required when called:    4
 18228 ;; This function calls:
 18229 ;;		_printf
 18230 ;;		___bmul
 18231 ;; This function is called by:
 18232 ;;		_proc_line
 18233 ;; This function uses a non-reentrant model
 18234 ;;
 18235                           psect	text3275
 18236                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 18237                           	line	222
 18238                           	global	__size_of_help
 18239  005F                     	__size_of_help	equ	__end_of_help-_help
 18240                           	
 18241  2FA1                     _help:	
 18242                           	opt	stack 8
 18243                           ; Regs used in _help: [allreg]
 18244                           	line	223
 18245                           	
 18246  2FA1                     l37527:	
 18247                           ;cmdline.c: 223: int index = 0;
 18248  2FA1  0020               	movlb 0	; select bank0
 18249  2FA2  01CD               	clrf	(help@index)
 18250  2FA3  01CE               	clrf	(help@index+1)
 18251                           	line	225
 18252                           	
 18253  2FA4                     l37529:	
 18254                           ;cmdline.c: 225: if (argc > 1)
 18255  2FA4  0848               	movf	(help@argc+1),w
 18256  2FA5  3A80               	xorlw	80h
 18257  2FA6  00FF               	movwf	btemp+1
 18258  2FA7  3080               	movlw	(high(02h))^80h
 18259  2FA8  027F               	subwf	btemp+1,w
 18260  2FA9  1D03               	skipz
 18261  2FAA  2FAD               	goto	u10555
 18262  2FAB  3002               	movlw	low(02h)
 18263  2FAC  0247               	subwf	(help@argc),w
 18264  2FAD                     u10555:
 18265                           
 18266  2FAD  1C03               	skipc
 18267  2FAE  2FB0               	goto	u10551
 18268  2FAF  2FB1               	goto	u10550
 18269  2FB0                     u10551:
 18270  2FB0  2FB8               	goto	l37535
 18271  2FB1                     u10550:
 18272                           	line	226
 18273                           	
 18274  2FB1                     l37531:	
 18275                           ;cmdline.c: 226: return (-1);
 18276  2FB1  30FF               	movlw	low(-1)
 18277  2FB2  0020               	movlb 0	; select bank0
 18278  2FB3  00C7               	movwf	(?_echo)
 18279  2FB4  30FF               	movlw	high(-1)
 18280  2FB5  00C8               	movwf	((?_echo))+1
 18281  2FB6  2FFF               	goto	l15178
 18282                           	
 18283  2FB7                     l37533:	
 18284  2FB7  2FFF               	goto	l15178
 18285                           	
 18286  2FB8                     l15177:	
 18287                           	line	228
 18288                           	
 18289  2FB8                     l37535:	
 18290                           ;cmdline.c: 228: printf("Known commands:\n");
 18291  2FB8  30E3               	movlw	low(STR_111|8000h)
 18292  2FB9  0020               	movlb 0	; select bank0
 18293  2FBA  00AF               	movwf	(?_printf)
 18294  2FBB  3086               	movlw	high(STR_111|8000h)
 18295  2FBC  00B0               	movwf	((?_printf))+1
 18296  2FBD  3194  24A0  31AF   	fcall	_printf
 18297                           	line	229
 18298                           ;cmdline.c: 229: while (commands[index].function) {
 18299  2FC0  2FE4               	goto	l37543
 18300                           	
 18301  2FC1                     l15180:	
 18302                           	line	230
 18303                           	
 18304  2FC1                     l37537:	
 18305                           ;cmdline.c: 230: printf("%s\n", (char*)commands[index].cmd);
 18306  2FC1  3009               	movlw	(09h)
 18307  2FC2  0020               	movlb 0	; select bank0
 18308  2FC3  00CA               	movwf	(??_help+0)+0
 18309  2FC4  084A               	movf	(??_help+0)+0,w
 18310  2FC5  00A1               	movwf	(?___bmul)
 18311  2FC6  084D               	movf	(help@index),w
 18312  2FC7  31A9  2179  31AF   	fcall	___bmul
 18313  2FCA  3E10               	addlw	low(_commands|8000h)
 18314  2FCB  0020               	movlb 0	; select bank0
 18315  2FCC  00CB               	movwf	(_help$30523)
 18316  2FCD  3085               	movlw	high(_commands|8000h)
 18317  2FCE  1803               	skipnc
 18318  2FCF  0A89               	incf	wreg,f
 18319  2FD0  00CC               	movwf	1+(_help$30523)
 18320                           	
 18321  2FD1                     l37539:	
 18322                           ;cmdline.c: 230: printf("%s\n", (char*)commands[index].cmd);
 18323  2FD1  3072               	movlw	low(STR_112|8000h)
 18324  2FD2  00AF               	movwf	(?_printf)
 18325  2FD3  3088               	movlw	high(STR_112|8000h)
 18326  2FD4  00B0               	movwf	((?_printf))+1
 18327  2FD5  084C               	movf	(_help$30523+1),w
 18328  2FD6  01B2               	clrf	(1+?_printf+02h)
 18329  2FD7  07B2               	addwf	(1+?_printf+02h)
 18330  2FD8  084B               	movf	(_help$30523),w
 18331  2FD9  01B1               	clrf	(0+?_printf+02h)
 18332  2FDA  07B1               	addwf	(0+?_printf+02h)
 18333                           
 18334  2FDB  3194  24A0  31AF   	fcall	_printf
 18335                           	line	231
 18336                           	
 18337  2FDE                     l37541:	
 18338                           ;cmdline.c: 231: index++;
 18339  2FDE  3001               	movlw	low(01h)
 18340  2FDF  0020               	movlb 0	; select bank0
 18341  2FE0  07CD               	addwf	(help@index),f
 18342  2FE1  3000               	movlw	high(01h)
 18343  2FE2  3DCE               	addwfc	(help@index+1),f
 18344  2FE3  2FE4               	goto	l37543
 18345                           	line	232
 18346                           	
 18347  2FE4                     l15179:	
 18348                           	line	229
 18349                           	
 18350  2FE4                     l37543:	
 18351  2FE4  3009               	movlw	(09h)
 18352  2FE5  0020               	movlb 0	; select bank0
 18353  2FE6  00CA               	movwf	(??_help+0)+0
 18354  2FE7  084A               	movf	(??_help+0)+0,w
 18355  2FE8  00A1               	movwf	(?___bmul)
 18356  2FE9  084D               	movf	(help@index),w
 18357  2FEA  31A9  2179  31AF   	fcall	___bmul
 18358  2FED  3E08               	addlw	08h
 18359  2FEE  3E10               	addlw	low(_commands|8000h)
 18360  2FEF  0084               	movwf	fsr0l
 18361  2FF0  3085               	movlw	high(_commands|8000h)
 18362  2FF1  1803               	skipnc
 18363  2FF2  3E01               	addlw	1
 18364  2FF3  0085               	movwf	fsr0h
 18365  2FF4  0800               	movf	indf0,w ;code access
 18366  2FF5  3800               	iorlw	0
 18367  2FF6  1D03               	skipz
 18368  2FF7  2FF9               	goto	u10561
 18369  2FF8  2FFA               	goto	u10560
 18370  2FF9                     u10561:
 18371  2FF9  2FC1               	goto	l37537
 18372  2FFA                     u10560:
 18373  2FFA  2FFB               	goto	l37545
 18374                           	
 18375  2FFB                     l15181:	
 18376                           	line	234
 18377                           	
 18378  2FFB                     l37545:	
 18379                           ;cmdline.c: 232: }
 18380                           ;cmdline.c: 234: return (0);
 18381  2FFB  0020               	movlb 0	; select bank0
 18382  2FFC  01C7               	clrf	(?_echo)
 18383  2FFD  01C8               	clrf	(?_echo+1)
 18384  2FFE  2FFF               	goto	l15178
 18385                           	
 18386  2FFF                     l37547:	
 18387                           	line	235
 18388                           	
 18389  2FFF                     l15178:	
 18390  2FFF  0008               	return
 18391                           	opt stack 0
 18392                           GLOBAL	__end_of_help
 18393  3000                     	__end_of_help:
 18394 ;; =============== function _help ends ============
 18395                           
 18396                           	signat	_help,8314
 18397                           	global	_set_LED_Locked
 18398                           psect	text3276,local,class=CODE,delta=2
 18399                           global __ptext3276
 18400  286B                     __ptext3276:
 18401                           
 18402 ;; *************** function _set_LED_Locked *****************
 18403 ;; Defined at:
 18404 ;;		line 325 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18405 ;; Parameters:    Size  Location     Type
 18406 ;;  pattern         1    wreg     unsigned char 
 18407 ;;  repeat          1   13[BANK0 ] unsigned char 
 18408 ;; Auto vars:     Size  Location     Type
 18409 ;;  pattern         1   16[BANK0 ] unsigned char 
 18410 ;; Return value:  Size  Location     Type
 18411 ;;		None               void
 18412 ;; Registers used:
 18413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18414 ;; Tracked objects:
 18415 ;;		On entry : 0/0
 18416 ;;		On exit  : 0/0
 18417 ;;		Unchanged: 0/0
 18418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18419 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18423 ;;Total ram usage:        4 bytes
 18424 ;; Hardware stack levels used:    1
 18425 ;; Hardware stack levels required when called:    4
 18426 ;; This function calls:
 18427 ;;		_set_pacer
 18428 ;; This function is called by:
 18429 ;;		_update_display
 18430 ;; This function uses a non-reentrant model
 18431 ;;
 18432                           psect	text3276
 18433                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18434                           	line	325
 18435                           	global	__size_of_set_LED_Locked
 18436  000F                     	__size_of_set_LED_Locked	equ	__end_of_set_LED_Locked-_set_LED_Locked
 18437                           	
 18438  286B                     _set_LED_Locked:	
 18439                           	opt	stack 9
 18440                           ; Regs used in _set_LED_Locked: [wreg+fsr1l-status,0+pclath+cstack]
 18441                           ;set_LED_Locked@pattern stored from wreg
 18442  286B  0020               	movlb 0	; select bank0
 18443  286C  00B1               	movwf	(set_LED_Locked@pattern)
 18444                           	line	326
 18445                           	
 18446  286D                     l37493:	
 18447                           ;catgenie120.c: 326: set_pacer(2, pattern, repeat);
 18448  286D  0831               	movf	(set_LED_Locked@pattern),w
 18449  286E  00AF               	movwf	(??_set_LED_Locked+0)+0
 18450  286F  082F               	movf	(??_set_LED_Locked+0)+0,w
 18451  2870  00A9               	movwf	(?_set_pacer)
 18452  2871  082E               	movf	(set_LED_Locked@repeat),w
 18453  2872  00B0               	movwf	(??_set_LED_Locked+1)+0
 18454  2873  0830               	movf	(??_set_LED_Locked+1)+0,w
 18455  2874  00AA               	movwf	0+(?_set_pacer)+01h
 18456  2875  3002               	movlw	(02h)
 18457  2876  31A3  23CF  31A8   	fcall	_set_pacer
 18458                           	line	327
 18459                           	
 18460  2879                     l10913:	
 18461  2879  0008               	return
 18462                           	opt stack 0
 18463                           GLOBAL	__end_of_set_LED_Locked
 18464  287A                     	__end_of_set_LED_Locked:
 18465 ;; =============== function _set_LED_Locked ends ============
 18466                           
 18467                           	signat	_set_LED_Locked,8312
 18468                           	global	_set_LED_Cat
 18469                           psect	text3277,local,class=CODE,delta=2
 18470                           global __ptext3277
 18471  285C                     __ptext3277:
 18472                           
 18473 ;; *************** function _set_LED_Cat *****************
 18474 ;; Defined at:
 18475 ;;		line 337 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18476 ;; Parameters:    Size  Location     Type
 18477 ;;  pattern         1    wreg     unsigned char 
 18478 ;;  repeat          1   13[BANK0 ] unsigned char 
 18479 ;; Auto vars:     Size  Location     Type
 18480 ;;  pattern         1   16[BANK0 ] unsigned char 
 18481 ;; Return value:  Size  Location     Type
 18482 ;;		None               void
 18483 ;; Registers used:
 18484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18485 ;; Tracked objects:
 18486 ;;		On entry : 0/0
 18487 ;;		On exit  : 0/0
 18488 ;;		Unchanged: 0/0
 18489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18490 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18494 ;;Total ram usage:        4 bytes
 18495 ;; Hardware stack levels used:    1
 18496 ;; Hardware stack levels required when called:    4
 18497 ;; This function calls:
 18498 ;;		_set_pacer
 18499 ;; This function is called by:
 18500 ;;		_update_display
 18501 ;; This function uses a non-reentrant model
 18502 ;;
 18503                           psect	text3277
 18504                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18505                           	line	337
 18506                           	global	__size_of_set_LED_Cat
 18507  000F                     	__size_of_set_LED_Cat	equ	__end_of_set_LED_Cat-_set_LED_Cat
 18508                           	
 18509  285C                     _set_LED_Cat:	
 18510                           	opt	stack 9
 18511                           ; Regs used in _set_LED_Cat: [wreg+fsr1l-status,0+pclath+cstack]
 18512                           ;set_LED_Cat@pattern stored from wreg
 18513  285C  0020               	movlb 0	; select bank0
 18514  285D  00B1               	movwf	(set_LED_Cat@pattern)
 18515                           	line	338
 18516                           	
 18517  285E                     l37491:	
 18518                           ;catgenie120.c: 338: set_pacer(4, pattern, repeat);
 18519  285E  0831               	movf	(set_LED_Cat@pattern),w
 18520  285F  00AF               	movwf	(??_set_LED_Cat+0)+0
 18521  2860  082F               	movf	(??_set_LED_Cat+0)+0,w
 18522  2861  00A9               	movwf	(?_set_pacer)
 18523  2862  082E               	movf	(set_LED_Cat@repeat),w
 18524  2863  00B0               	movwf	(??_set_LED_Cat+1)+0
 18525  2864  0830               	movf	(??_set_LED_Cat+1)+0,w
 18526  2865  00AA               	movwf	0+(?_set_pacer)+01h
 18527  2866  3004               	movlw	(04h)
 18528  2867  31A3  23CF  31A8   	fcall	_set_pacer
 18529                           	line	339
 18530                           	
 18531  286A                     l10919:	
 18532  286A  0008               	return
 18533                           	opt stack 0
 18534                           GLOBAL	__end_of_set_LED_Cat
 18535  286B                     	__end_of_set_LED_Cat:
 18536 ;; =============== function _set_LED_Cat ends ============
 18537                           
 18538                           	signat	_set_LED_Cat,8312
 18539                           	global	_set_LED_Cartridge
 18540                           psect	text3278,local,class=CODE,delta=2
 18541                           global __ptext3278
 18542  284D                     __ptext3278:
 18543                           
 18544 ;; *************** function _set_LED_Cartridge *****************
 18545 ;; Defined at:
 18546 ;;		line 331 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18547 ;; Parameters:    Size  Location     Type
 18548 ;;  pattern         1    wreg     unsigned char 
 18549 ;;  repeat          1   13[BANK0 ] unsigned char 
 18550 ;; Auto vars:     Size  Location     Type
 18551 ;;  pattern         1   16[BANK0 ] unsigned char 
 18552 ;; Return value:  Size  Location     Type
 18553 ;;		None               void
 18554 ;; Registers used:
 18555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18556 ;; Tracked objects:
 18557 ;;		On entry : 0/0
 18558 ;;		On exit  : 0/0
 18559 ;;		Unchanged: 0/0
 18560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18561 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18564 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18565 ;;Total ram usage:        4 bytes
 18566 ;; Hardware stack levels used:    1
 18567 ;; Hardware stack levels required when called:    4
 18568 ;; This function calls:
 18569 ;;		_set_pacer
 18570 ;; This function is called by:
 18571 ;;		_update_display
 18572 ;; This function uses a non-reentrant model
 18573 ;;
 18574                           psect	text3278
 18575                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18576                           	line	331
 18577                           	global	__size_of_set_LED_Cartridge
 18578  000F                     	__size_of_set_LED_Cartridge	equ	__end_of_set_LED_Cartridge-_set_LED_Cartridge
 18579                           	
 18580  284D                     _set_LED_Cartridge:	
 18581                           	opt	stack 9
 18582                           ; Regs used in _set_LED_Cartridge: [wreg+fsr1l-status,0+pclath+cstack]
 18583                           ;set_LED_Cartridge@pattern stored from wreg
 18584  284D  0020               	movlb 0	; select bank0
 18585  284E  00B1               	movwf	(set_LED_Cartridge@pattern)
 18586                           	line	332
 18587                           	
 18588  284F                     l37489:	
 18589                           ;catgenie120.c: 332: set_pacer(3, pattern, repeat);
 18590  284F  0831               	movf	(set_LED_Cartridge@pattern),w
 18591  2850  00AF               	movwf	(??_set_LED_Cartridge+0)+0
 18592  2851  082F               	movf	(??_set_LED_Cartridge+0)+0,w
 18593  2852  00A9               	movwf	(?_set_pacer)
 18594  2853  082E               	movf	(set_LED_Cartridge@repeat),w
 18595  2854  00B0               	movwf	(??_set_LED_Cartridge+1)+0
 18596  2855  0830               	movf	(??_set_LED_Cartridge+1)+0,w
 18597  2856  00AA               	movwf	0+(?_set_pacer)+01h
 18598  2857  3003               	movlw	(03h)
 18599  2858  31A3  23CF  31A8   	fcall	_set_pacer
 18600                           	line	333
 18601                           	
 18602  285B                     l10916:	
 18603  285B  0008               	return
 18604                           	opt stack 0
 18605                           GLOBAL	__end_of_set_LED_Cartridge
 18606  285C                     	__end_of_set_LED_Cartridge:
 18607 ;; =============== function _set_LED_Cartridge ends ============
 18608                           
 18609                           	signat	_set_LED_Cartridge,8312
 18610                           	global	_set_LED_Error
 18611                           psect	text3279,local,class=CODE,delta=2
 18612                           global __ptext3279
 18613  283E                     __ptext3279:
 18614                           
 18615 ;; *************** function _set_LED_Error *****************
 18616 ;; Defined at:
 18617 ;;		line 319 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;  pattern         1    wreg     unsigned char 
 18620 ;;  repeat          1   13[BANK0 ] unsigned char 
 18621 ;; Auto vars:     Size  Location     Type
 18622 ;;  pattern         1   16[BANK0 ] unsigned char 
 18623 ;; Return value:  Size  Location     Type
 18624 ;;		None               void
 18625 ;; Registers used:
 18626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18627 ;; Tracked objects:
 18628 ;;		On entry : 0/0
 18629 ;;		On exit  : 0/0
 18630 ;;		Unchanged: 0/0
 18631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18632 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18636 ;;Total ram usage:        4 bytes
 18637 ;; Hardware stack levels used:    1
 18638 ;; Hardware stack levels required when called:    4
 18639 ;; This function calls:
 18640 ;;		_set_pacer
 18641 ;; This function is called by:
 18642 ;;		_update_display
 18643 ;; This function uses a non-reentrant model
 18644 ;;
 18645                           psect	text3279
 18646                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18647                           	line	319
 18648                           	global	__size_of_set_LED_Error
 18649  000F                     	__size_of_set_LED_Error	equ	__end_of_set_LED_Error-_set_LED_Error
 18650                           	
 18651  283E                     _set_LED_Error:	
 18652                           	opt	stack 9
 18653                           ; Regs used in _set_LED_Error: [wreg+fsr1l-status,0+pclath+cstack]
 18654                           ;set_LED_Error@pattern stored from wreg
 18655  283E  0020               	movlb 0	; select bank0
 18656  283F  00B1               	movwf	(set_LED_Error@pattern)
 18657                           	line	320
 18658                           	
 18659  2840                     l37487:	
 18660                           ;catgenie120.c: 320: set_pacer(1, pattern, repeat);
 18661  2840  0831               	movf	(set_LED_Error@pattern),w
 18662  2841  00AF               	movwf	(??_set_LED_Error+0)+0
 18663  2842  082F               	movf	(??_set_LED_Error+0)+0,w
 18664  2843  00A9               	movwf	(?_set_pacer)
 18665  2844  082E               	movf	(set_LED_Error@repeat),w
 18666  2845  00B0               	movwf	(??_set_LED_Error+1)+0
 18667  2846  0830               	movf	(??_set_LED_Error+1)+0,w
 18668  2847  00AA               	movwf	0+(?_set_pacer)+01h
 18669  2848  3001               	movlw	(01h)
 18670  2849  31A3  23CF  31A8   	fcall	_set_pacer
 18671                           	line	321
 18672                           	
 18673  284C                     l10910:	
 18674  284C  0008               	return
 18675                           	opt stack 0
 18676                           GLOBAL	__end_of_set_LED_Error
 18677  284D                     	__end_of_set_LED_Error:
 18678 ;; =============== function _set_LED_Error ends ============
 18679                           
 18680                           	signat	_set_LED_Error,8312
 18681                           	global	_set_Beeper
 18682                           psect	text3280,local,class=CODE,delta=2
 18683                           global __ptext3280
 18684  37F1                     __ptext3280:
 18685                           
 18686 ;; *************** function _set_Beeper *****************
 18687 ;; Defined at:
 18688 ;;		line 343 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18689 ;; Parameters:    Size  Location     Type
 18690 ;;  pattern         1    wreg     unsigned char 
 18691 ;;  repeat          1   13[BANK0 ] unsigned char 
 18692 ;; Auto vars:     Size  Location     Type
 18693 ;;  pattern         1   16[BANK0 ] unsigned char 
 18694 ;; Return value:  Size  Location     Type
 18695 ;;		None               void
 18696 ;; Registers used:
 18697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18698 ;; Tracked objects:
 18699 ;;		On entry : 0/0
 18700 ;;		On exit  : 0/0
 18701 ;;		Unchanged: 0/0
 18702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18703 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18707 ;;Total ram usage:        4 bytes
 18708 ;; Hardware stack levels used:    1
 18709 ;; Hardware stack levels required when called:    4
 18710 ;; This function calls:
 18711 ;;		_set_pacer
 18712 ;; This function is called by:
 18713 ;;		_userinterface_work
 18714 ;;		_litterlanguage_event
 18715 ;;		_process_button
 18716 ;; This function uses a non-reentrant model
 18717 ;;
 18718                           psect	text3280
 18719                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18720                           	line	343
 18721                           	global	__size_of_set_Beeper
 18722  000F                     	__size_of_set_Beeper	equ	__end_of_set_Beeper-_set_Beeper
 18723                           	
 18724  37F1                     _set_Beeper:	
 18725                           	opt	stack 8
 18726                           ; Regs used in _set_Beeper: [wreg+fsr1l-status,0+pclath+cstack]
 18727                           ;set_Beeper@pattern stored from wreg
 18728  37F1  0020               	movlb 0	; select bank0
 18729  37F2  00B1               	movwf	(set_Beeper@pattern)
 18730                           	line	344
 18731                           	
 18732  37F3                     l37485:	
 18733                           ;catgenie120.c: 344: set_pacer(0, pattern, repeat);
 18734  37F3  0831               	movf	(set_Beeper@pattern),w
 18735  37F4  00AF               	movwf	(??_set_Beeper+0)+0
 18736  37F5  082F               	movf	(??_set_Beeper+0)+0,w
 18737  37F6  00A9               	movwf	(?_set_pacer)
 18738  37F7  082E               	movf	(set_Beeper@repeat),w
 18739  37F8  00B0               	movwf	(??_set_Beeper+1)+0
 18740  37F9  0830               	movf	(??_set_Beeper+1)+0,w
 18741  37FA  00AA               	movwf	0+(?_set_pacer)+01h
 18742  37FB  3000               	movlw	(0)
 18743  37FC  31A3  23CF  31B7   	fcall	_set_pacer
 18744                           	line	345
 18745                           	
 18746  37FF                     l10922:	
 18747  37FF  0008               	return
 18748                           	opt stack 0
 18749                           GLOBAL	__end_of_set_Beeper
 18750  3800                     	__end_of_set_Beeper:
 18751 ;; =============== function _set_Beeper ends ============
 18752                           
 18753                           	signat	_set_Beeper,8312
 18754                           	global	_both_short
 18755                           psect	text3281,local,class=CODE,delta=2
 18756                           global __ptext3281
 18757  2906                     __ptext3281:
 18758                           
 18759 ;; *************** function _both_short *****************
 18760 ;; Defined at:
 18761 ;;		line 591 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18762 ;; Parameters:    Size  Location     Type
 18763 ;;		None
 18764 ;; Auto vars:     Size  Location     Type
 18765 ;;		None
 18766 ;; Return value:  Size  Location     Type
 18767 ;;		None               void
 18768 ;; Registers used:
 18769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18770 ;; Tracked objects:
 18771 ;;		On entry : 0/0
 18772 ;;		On exit  : 0/0
 18773 ;;		Unchanged: 0/0
 18774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18779 ;;Total ram usage:        0 bytes
 18780 ;; Hardware stack levels used:    1
 18781 ;; Hardware stack levels required when called:    4
 18782 ;; This function calls:
 18783 ;;		_settimeout
 18784 ;; This function is called by:
 18785 ;;		_userinterface_work
 18786 ;; This function uses a non-reentrant model
 18787 ;;
 18788                           psect	text3281
 18789                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18790                           	line	591
 18791                           	global	__size_of_both_short
 18792  0015                     	__size_of_both_short	equ	__end_of_both_short-_both_short
 18793                           	
 18794  2906                     _both_short:	
 18795                           	opt	stack 10
 18796                           ; Regs used in _both_short: [wreg+fsr1l-status,0+pclath+cstack]
 18797                           	line	593
 18798                           	
 18799  2906                     l37481:	
 18800                           ;userinterface.c: 593: panel_mode = 1;
 18801  2906  0021               	movlb 1	; select bank1
 18802  2907  01D9               	clrf	(_panel_mode)^080h
 18803  2908  1403               	bsf	status,0
 18804  2909  0DD9               	rlf	(_panel_mode)^080h,f
 18805                           	line	595
 18806                           	
 18807  290A                     l37483:	
 18808                           ;userinterface.c: 595: settimeout(&cartridgetimeout, (5 * ((((4UL * (1000UL * ((1000UL))
                                 )))/4)/8)));
 18809  290A  303A               	movlw	(_cartridgetimeout&0ffh)
 18810  290B  0020               	movlb 0	; select bank0
 18811  290C  00AD               	movwf	(?_settimeout)
 18812  290D  3001               	movlw	0x2/2
 18813  290E  00AE               	movwf	(?_settimeout+1)
 18814  290F  3000               	movlw	0
 18815  2910  00B2               	movwf	3+(?_settimeout)+02h
 18816  2911  3009               	movlw	09h
 18817  2912  00B1               	movwf	2+(?_settimeout)+02h
 18818  2913  3089               	movlw	089h
 18819  2914  00B0               	movwf	1+(?_settimeout)+02h
 18820  2915  3068               	movlw	068h
 18821  2916  00AF               	movwf	0+(?_settimeout)+02h
 18822                           
 18823  2917  31A0  20DE  31A9   	fcall	_settimeout
 18824                           	line	596
 18825                           	
 18826  291A                     l8810:	
 18827  291A  0008               	return
 18828                           	opt stack 0
 18829                           GLOBAL	__end_of_both_short
 18830  291B                     	__end_of_both_short:
 18831 ;; =============== function _both_short ends ============
 18832                           
 18833                           	signat	_both_short,88
 18834                           	global	_update_autotimer
 18835                           psect	text3282,local,class=CODE,delta=2
 18836                           global __ptext3282
 18837  26BE                     __ptext3282:
 18838                           
 18839 ;; *************** function _update_autotimer *****************
 18840 ;; Defined at:
 18841 ;;		line 607 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;  mode            1    wreg     unsigned char 
 18844 ;; Auto vars:     Size  Location     Type
 18845 ;;  mode            1   28[BANK0 ] unsigned char 
 18846 ;; Return value:  Size  Location     Type
 18847 ;;		None               void
 18848 ;; Registers used:
 18849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18850 ;; Tracked objects:
 18851 ;;		On entry : 0/0
 18852 ;;		On exit  : 0/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18859 ;;Total ram usage:        1 bytes
 18860 ;; Hardware stack levels used:    1
 18861 ;; Hardware stack levels required when called:    4
 18862 ;; This function calls:
 18863 ;;		_settimeout
 18864 ;;		_postponetimeout
 18865 ;;		_timeoutnever
 18866 ;; This function is called by:
 18867 ;;		_userinterface_work
 18868 ;;		_set_mode
 18869 ;; This function uses a non-reentrant model
 18870 ;;
 18871                           psect	text3282
 18872                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18873                           	line	607
 18874                           	global	__size_of_update_autotimer
 18875  0090                     	__size_of_update_autotimer	equ	__end_of_update_autotimer-_update_autotimer
 18876                           	
 18877  26BE                     _update_autotimer:	
 18878                           	opt	stack 8
 18879                           ; Regs used in _update_autotimer: [wreg-status,0+pclath+cstack]
 18880                           ;update_autotimer@mode stored from wreg
 18881  26BE  0020               	movlb 0	; select bank0
 18882  26BF  00BD               	movwf	(update_autotimer@mode)
 18883                           	line	614
 18884                           	
 18885  26C0                     l37465:	
 18886                           ;userinterface.c: 614: switch (mode) {
 18887  26C0  2F3E               	goto	l37479
 18888                           	line	615
 18889                           ;userinterface.c: 615: case 1:
 18890                           	
 18891  26C1                     l8817:	
 18892                           	line	616
 18893                           	
 18894  26C1                     l37467:	
 18895                           ;userinterface.c: 616: settimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18896  26C1  30DD               	movlw	(_autotimer&0ffh)
 18897  26C2  00AD               	movwf	(?_settimeout)
 18898  26C3  3000               	movlw	0x1/2
 18899  26C4  00AE               	movwf	(?_settimeout+1)
 18900  26C5  30F1               	movlw	0F1h
 18901  26C6  00B2               	movwf	3+(?_settimeout)+02h
 18902  26C7  3066               	movlw	066h
 18903  26C8  00B1               	movwf	2+(?_settimeout)+02h
 18904  26C9  3018               	movlw	018h
 18905  26CA  00B0               	movwf	1+(?_settimeout)+02h
 18906  26CB  3080               	movlw	080h
 18907  26CC  00AF               	movwf	0+(?_settimeout)+02h
 18908                           
 18909  26CD  31A0  20DE  31A6   	fcall	_settimeout
 18910                           	line	617
 18911                           ;userinterface.c: 617: postponetimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 18912  26D0  30DD               	movlw	(_autotimer&0ffh)
 18913  26D1  0020               	movlb 0	; select bank0
 18914  26D2  00A1               	movwf	(?_postponetimeout)
 18915  26D3  3000               	movlw	0x1/2
 18916  26D4  00A2               	movwf	(?_postponetimeout+1)
 18917  26D5  30F1               	movlw	0F1h
 18918  26D6  00A6               	movwf	3+(?_postponetimeout)+02h
 18919  26D7  3066               	movlw	066h
 18920  26D8  00A5               	movwf	2+(?_postponetimeout)+02h
 18921  26D9  3018               	movlw	018h
 18922  26DA  00A4               	movwf	1+(?_postponetimeout)+02h
 18923  26DB  3080               	movlw	080h
 18924  26DC  00A3               	movwf	0+(?_postponetimeout)+02h
 18925                           
 18926  26DD  31AE  26E8  31A6   	fcall	_postponetimeout
 18927                           	line	618
 18928                           ;userinterface.c: 618: postponetimeout(&autotimer, 6 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 18929  26E0  30DD               	movlw	(_autotimer&0ffh)
 18930  26E1  0020               	movlb 0	; select bank0
 18931  26E2  00A1               	movwf	(?_postponetimeout)
 18932  26E3  3000               	movlw	0x1/2
 18933  26E4  00A2               	movwf	(?_postponetimeout+1)
 18934  26E5  30A0               	movlw	0A0h
 18935  26E6  00A6               	movwf	3+(?_postponetimeout)+02h
 18936  26E7  30EE               	movlw	0EEh
 18937  26E8  00A5               	movwf	2+(?_postponetimeout)+02h
 18938  26E9  30BB               	movlw	0BBh
 18939  26EA  00A4               	movwf	1+(?_postponetimeout)+02h
 18940  26EB  3000               	movlw	0
 18941  26EC  00A3               	movwf	0+(?_postponetimeout)+02h
 18942                           
 18943  26ED  31AE  26E8  31A6   	fcall	_postponetimeout
 18944                           	line	619
 18945                           ;userinterface.c: 619: break;
 18946  26F0  2F4D               	goto	l8823
 18947                           	line	620
 18948                           ;userinterface.c: 620: case 2:
 18949                           	
 18950  26F1                     l8819:	
 18951                           	line	621
 18952                           	
 18953  26F1                     l37469:	
 18954                           ;userinterface.c: 621: settimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18955  26F1  30DD               	movlw	(_autotimer&0ffh)
 18956  26F2  0020               	movlb 0	; select bank0
 18957  26F3  00AD               	movwf	(?_settimeout)
 18958  26F4  3000               	movlw	0x1/2
 18959  26F5  00AE               	movwf	(?_settimeout+1)
 18960  26F6  30F1               	movlw	0F1h
 18961  26F7  00B2               	movwf	3+(?_settimeout)+02h
 18962  26F8  3066               	movlw	066h
 18963  26F9  00B1               	movwf	2+(?_settimeout)+02h
 18964  26FA  3018               	movlw	018h
 18965  26FB  00B0               	movwf	1+(?_settimeout)+02h
 18966  26FC  3080               	movlw	080h
 18967  26FD  00AF               	movwf	0+(?_settimeout)+02h
 18968                           
 18969  26FE  31A0  20DE  31A6   	fcall	_settimeout
 18970                           	line	622
 18971                           ;userinterface.c: 622: postponetimeout(&autotimer, 3 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 18972  2701  30DD               	movlw	(_autotimer&0ffh)
 18973  2702  0020               	movlb 0	; select bank0
 18974  2703  00A1               	movwf	(?_postponetimeout)
 18975  2704  3000               	movlw	0x1/2
 18976  2705  00A2               	movwf	(?_postponetimeout+1)
 18977  2706  3050               	movlw	050h
 18978  2707  00A6               	movwf	3+(?_postponetimeout)+02h
 18979  2708  3077               	movlw	077h
 18980  2709  00A5               	movwf	2+(?_postponetimeout)+02h
 18981  270A  305D               	movlw	05Dh
 18982  270B  00A4               	movwf	1+(?_postponetimeout)+02h
 18983  270C  3080               	movlw	080h
 18984  270D  00A3               	movwf	0+(?_postponetimeout)+02h
 18985                           
 18986  270E  31AE  26E8  31A6   	fcall	_postponetimeout
 18987                           	line	623
 18988                           ;userinterface.c: 623: break;
 18989  2711  2F4D               	goto	l8823
 18990                           	line	624
 18991                           ;userinterface.c: 624: case 3:
 18992                           	
 18993  2712                     l8820:	
 18994                           	line	625
 18995                           	
 18996  2712                     l37471:	
 18997                           ;userinterface.c: 625: settimeout(&autotimer, 8 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18998  2712  30DD               	movlw	(_autotimer&0ffh)
 18999  2713  0020               	movlb 0	; select bank0
 19000  2714  00AD               	movwf	(?_settimeout)
 19001  2715  3000               	movlw	0x1/2
 19002  2716  00AE               	movwf	(?_settimeout+1)
 19003  2717  30D6               	movlw	0D6h
 19004  2718  00B2               	movwf	3+(?_settimeout)+02h
 19005  2719  3093               	movlw	093h
 19006  271A  00B1               	movwf	2+(?_settimeout)+02h
 19007  271B  30A4               	movlw	0A4h
 19008  271C  00B0               	movwf	1+(?_settimeout)+02h
 19009  271D  3000               	movlw	0
 19010  271E  00AF               	movwf	0+(?_settimeout)+02h
 19011                           
 19012  271F  31A0  20DE  31A6   	fcall	_settimeout
 19013                           	line	626
 19014                           ;userinterface.c: 626: break;
 19015  2722  2F4D               	goto	l8823
 19016                           	line	627
 19017                           ;userinterface.c: 627: case 4:
 19018                           	
 19019  2723                     l8821:	
 19020                           	line	628
 19021                           	
 19022  2723                     l37473:	
 19023                           ;userinterface.c: 628: settimeout(&autotimer, 6 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 19024  2723  30DD               	movlw	(_autotimer&0ffh)
 19025  2724  0020               	movlb 0	; select bank0
 19026  2725  00AD               	movwf	(?_settimeout)
 19027  2726  3000               	movlw	0x1/2
 19028  2727  00AE               	movwf	(?_settimeout+1)
 19029  2728  30A0               	movlw	0A0h
 19030  2729  00B2               	movwf	3+(?_settimeout)+02h
 19031  272A  30EE               	movlw	0EEh
 19032  272B  00B1               	movwf	2+(?_settimeout)+02h
 19033  272C  30BB               	movlw	0BBh
 19034  272D  00B0               	movwf	1+(?_settimeout)+02h
 19035  272E  3000               	movlw	0
 19036  272F  00AF               	movwf	0+(?_settimeout)+02h
 19037                           
 19038  2730  31A0  20DE  31A6   	fcall	_settimeout
 19039                           	line	629
 19040                           ;userinterface.c: 629: break;
 19041  2733  2F4D               	goto	l8823
 19042                           	line	630
 19043                           ;userinterface.c: 630: default:
 19044                           	
 19045  2734                     l8822:	
 19046                           	line	631
 19047                           	
 19048  2734                     l37475:	
 19049                           ;userinterface.c: 631: timeoutnever(&autotimer);
 19050  2734  30DD               	movlw	(_autotimer&0ffh)
 19051  2735  0020               	movlb 0	; select bank0
 19052  2736  00A5               	movwf	(?_timeoutnever)
 19053  2737  3000               	movlw	0x1/2
 19054  2738  00A6               	movwf	(?_timeoutnever+1)
 19055  2739  31A9  21AF  31A6   	fcall	_timeoutnever
 19056                           	line	632
 19057                           ;userinterface.c: 632: break;
 19058  273C  2F4D               	goto	l8823
 19059                           	line	633
 19060                           	
 19061  273D                     l37477:	
 19062                           ;userinterface.c: 633: }
 19063  273D  2F4D               	goto	l8823
 19064                           	line	614
 19065                           	
 19066  273E                     l8816:	
 19067                           	
 19068  273E                     l37479:	
 19069  273E  0020               	movlb 0	; select bank0
 19070  273F  083D               	movf	(update_autotimer@mode),w
 19071                           	; Switch size 1, requested type "space"
 19072                           ; Number of cases is 4, Range of values is 1 to 4
 19073                           ; switch strategies available:
 19074                           ; Name         Instructions Cycles
 19075                           ; simple_byte           13     7 (average)
 19076                           ; direct_byte           17     9 (fixed)
 19077                           ; jumptable            263     9 (fixed)
 19078                           ;	Chosen strategy is simple_byte
 19079                           
 19080                           	opt asmopt_off
 19081  2740  3A01               	xorlw	1^0	; case 1
 19082  2741  1903               	skipnz
 19083  2742  2EC1               	goto	l37467
 19084  2743  3A03               	xorlw	2^1	; case 2
 19085  2744  1903               	skipnz
 19086  2745  2EF1               	goto	l37469
 19087  2746  3A01               	xorlw	3^2	; case 3
 19088  2747  1903               	skipnz
 19089  2748  2F12               	goto	l37471
 19090  2749  3A07               	xorlw	4^3	; case 4
 19091  274A  1903               	skipnz
 19092  274B  2F23               	goto	l37473
 19093  274C  2F34               	goto	l37475
 19094                           	opt asmopt_on
 19095                           
 19096                           	line	633
 19097                           	
 19098  274D                     l8818:	
 19099                           	line	634
 19100                           	
 19101  274D                     l8823:	
 19102  274D  0008               	return
 19103                           	opt stack 0
 19104                           GLOBAL	__end_of_update_autotimer
 19105  274E                     	__end_of_update_autotimer:
 19106 ;; =============== function _update_autotimer ends ============
 19107                           
 19108                           	signat	_update_autotimer,4216
 19109                           	global	_wait_instruction
 19110                           psect	text3283,local,class=CODE,delta=2
 19111                           global __ptext3283
 19112  2537                     __ptext3283:
 19113                           
 19114 ;; *************** function _wait_instruction *****************
 19115 ;; Defined at:
 19116 ;;		line 658 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 19117 ;; Parameters:    Size  Location     Type
 19118 ;;		None
 19119 ;; Auto vars:     Size  Location     Type
 19120 ;;		None
 19121 ;; Return value:  Size  Location     Type
 19122 ;;		None               void
 19123 ;; Registers used:
 19124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19125 ;; Tracked objects:
 19126 ;;		On entry : 0/0
 19127 ;;		On exit  : 0/0
 19128 ;;		Unchanged: 0/0
 19129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19134 ;;Total ram usage:        1 bytes
 19135 ;; Hardware stack levels used:    1
 19136 ;; Hardware stack levels required when called:    4
 19137 ;; This function calls:
 19138 ;;		_timeoutexpired
 19139 ;;		_water_detected
 19140 ;;		_timeoutnever
 19141 ;;		_get_Dosage
 19142 ;; This function is called by:
 19143 ;;		_litterlanguage_work
 19144 ;; This function uses a non-reentrant model
 19145 ;;
 19146                           psect	text3283
 19147                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 19148                           	line	658
 19149                           	global	__size_of_wait_instruction
 19150  007C                     	__size_of_wait_instruction	equ	__end_of_wait_instruction-_wait_instruction
 19151                           	
 19152  2537                     _wait_instruction:	
 19153                           	opt	stack 10
 19154                           ; Regs used in _wait_instruction: [wreg-status,0+pclath+cstack]
 19155                           	line	659
 19156                           	
 19157  2537                     l37435:	
 19158                           ;litterlanguage.c: 659: switch (cur_instruction.opcode) {
 19159  2537  2DA6               	goto	l37463
 19160                           	line	660
 19161                           ;litterlanguage.c: 660: case 0x07:
 19162                           	
 19163  2538                     l4458:	
 19164                           	line	661
 19165                           	
 19166  2538                     l37437:	
 19167                           ;litterlanguage.c: 661: if (timeoutexpired(&timer_waitins)) {
 19168  2538  306A               	movlw	(_timer_waitins&0ffh)
 19169  2539  0020               	movlb 0	; select bank0
 19170  253A  00A9               	movwf	(?_timeoutexpired)
 19171  253B  3001               	movlw	0x2/2
 19172  253C  00AA               	movwf	(?_timeoutexpired+1)
 19173  253D  31A3  235B  31A5   	fcall	_timeoutexpired
 19174  2540  3A00               	xorlw	0&0ffh
 19175  2541  1903               	skipnz
 19176  2542  2D44               	goto	u10451
 19177  2543  2D45               	goto	u10450
 19178  2544                     u10451:
 19179  2544  2DB2               	goto	l4469
 19180  2545                     u10450:
 19181                           	line	662
 19182                           	
 19183  2545                     l37439:	
 19184                           ;litterlanguage.c: 662: ins_pointer++;
 19185  2545  3003               	movlw	low(03h)
 19186  2546  0020               	movlb 0	; select bank0
 19187  2547  07EB               	addwf	(_ins_pointer),f
 19188  2548  3000               	movlw	high(03h)
 19189  2549  3DEC               	addwfc	(_ins_pointer+1),f
 19190                           	line	663
 19191                           ;litterlanguage.c: 663: ins_state = 3;
 19192  254A  3003               	movlw	(03h)
 19193  254B  00B7               	movwf	(??_wait_instruction+0)+0
 19194  254C  0837               	movf	(??_wait_instruction+0)+0,w
 19195  254D  00E5               	movwf	(_ins_state)
 19196  254E  2DB2               	goto	l4469
 19197                           	line	664
 19198                           	
 19199  254F                     l4459:	
 19200                           	line	665
 19201                           ;litterlanguage.c: 664: }
 19202                           ;litterlanguage.c: 665: break;
 19203  254F  2DB2               	goto	l4469
 19204                           	line	666
 19205                           ;litterlanguage.c: 666: case 0x08:
 19206                           	
 19207  2550                     l4461:	
 19208                           	line	667
 19209                           	
 19210  2550                     l37441:	
 19211                           ;litterlanguage.c: 667: if (cur_instruction.operant) {
 19212  2550  3001               	movlw	(01h)
 19213  2551  3E68               	addlw	_cur_instruction&0ffh
 19214  2552  0086               	movwf	fsr1l
 19215  2553  0187               	clrf fsr1h	
 19216                           	
 19217  2554  0016               	moviw	fsr1++
 19218  2555  0401               	iorwf	indf1,w
 19219  2556  1903               	skipnz
 19220  2557  2D59               	goto	u10461
 19221  2558  2D5A               	goto	u10460
 19222  2559                     u10461:
 19223  2559  2D6D               	goto	l37447
 19224  255A                     u10460:
 19225                           	line	668
 19226                           	
 19227  255A                     l37443:	
 19228                           ;litterlanguage.c: 668: if (water_detected()) {
 19229  255A  31B7  277A  31A5   	fcall	_water_detected
 19230  255D  3A00               	xorlw	0&0ffh
 19231  255E  1903               	skipnz
 19232  255F  2D61               	goto	u10471
 19233  2560  2D62               	goto	u10470
 19234  2561                     u10471:
 19235  2561  2DB2               	goto	l4469
 19236  2562                     u10470:
 19237                           	line	669
 19238                           	
 19239  2562                     l37445:	
 19240                           ;litterlanguage.c: 669: ins_pointer++;
 19241  2562  3003               	movlw	low(03h)
 19242  2563  0020               	movlb 0	; select bank0
 19243  2564  07EB               	addwf	(_ins_pointer),f
 19244  2565  3000               	movlw	high(03h)
 19245  2566  3DEC               	addwfc	(_ins_pointer+1),f
 19246                           	line	670
 19247                           ;litterlanguage.c: 670: ins_state = 3;
 19248  2567  3003               	movlw	(03h)
 19249  2568  00B7               	movwf	(??_wait_instruction+0)+0
 19250  2569  0837               	movf	(??_wait_instruction+0)+0,w
 19251  256A  00E5               	movwf	(_ins_state)
 19252  256B  2DB2               	goto	l4469
 19253                           	line	671
 19254                           	
 19255  256C                     l4463:	
 19256                           	line	672
 19257                           ;litterlanguage.c: 671: }
 19258                           ;litterlanguage.c: 672: } else {
 19259  256C  2DB2               	goto	l4469
 19260                           	
 19261  256D                     l4462:	
 19262                           	line	673
 19263                           	
 19264  256D                     l37447:	
 19265                           ;litterlanguage.c: 673: if (!water_detected()) {
 19266  256D  31B7  277A  31A5   	fcall	_water_detected
 19267  2570  3800               	iorlw	0
 19268  2571  1D03               	skipz
 19269  2572  2D74               	goto	u10481
 19270  2573  2D75               	goto	u10480
 19271  2574                     u10481:
 19272  2574  2DB2               	goto	l4469
 19273  2575                     u10480:
 19274                           	line	675
 19275                           	
 19276  2575                     l37449:	
 19277                           ;litterlanguage.c: 675: timeoutnever(&timer_drain);
 19278  2575  30E3               	movlw	(_timer_drain&0ffh)
 19279  2576  0020               	movlb 0	; select bank0
 19280  2577  00A5               	movwf	(?_timeoutnever)
 19281  2578  3000               	movlw	0x1/2
 19282  2579  00A6               	movwf	(?_timeoutnever+1)
 19283  257A  31A9  21AF  31A5   	fcall	_timeoutnever
 19284                           	line	676
 19285                           	
 19286  257D                     l37451:	
 19287                           ;litterlanguage.c: 676: ins_pointer++;
 19288  257D  3003               	movlw	low(03h)
 19289  257E  0020               	movlb 0	; select bank0
 19290  257F  07EB               	addwf	(_ins_pointer),f
 19291  2580  3000               	movlw	high(03h)
 19292  2581  3DEC               	addwfc	(_ins_pointer+1),f
 19293                           	line	677
 19294                           	
 19295  2582                     l37453:	
 19296                           ;litterlanguage.c: 677: ins_state = 3;
 19297  2582  3003               	movlw	(03h)
 19298  2583  00B7               	movwf	(??_wait_instruction+0)+0
 19299  2584  0837               	movf	(??_wait_instruction+0)+0,w
 19300  2585  00E5               	movwf	(_ins_state)
 19301  2586  2DB2               	goto	l4469
 19302                           	line	678
 19303                           	
 19304  2587                     l4465:	
 19305  2587  2DB2               	goto	l4469
 19306                           	line	679
 19307                           	
 19308  2588                     l4464:	
 19309                           	line	680
 19310                           ;litterlanguage.c: 678: }
 19311                           ;litterlanguage.c: 679: }
 19312                           ;litterlanguage.c: 680: break;
 19313  2588  2DB2               	goto	l4469
 19314                           	line	681
 19315                           ;litterlanguage.c: 681: case 0x09:
 19316                           	
 19317  2589                     l4466:	
 19318                           	line	682
 19319                           	
 19320  2589                     l37455:	
 19321                           ;litterlanguage.c: 682: if (!get_Dosage()) {
 19322  2589  31B7  276B  31A5   	fcall	_get_Dosage
 19323  258C  3800               	iorlw	0
 19324  258D  1D03               	skipz
 19325  258E  2D90               	goto	u10491
 19326  258F  2D91               	goto	u10490
 19327  2590                     u10491:
 19328  2590  2DB2               	goto	l4469
 19329  2591                     u10490:
 19330                           	line	683
 19331                           	
 19332  2591                     l37457:	
 19333                           ;litterlanguage.c: 683: ins_pointer++;
 19334  2591  3003               	movlw	low(03h)
 19335  2592  0020               	movlb 0	; select bank0
 19336  2593  07EB               	addwf	(_ins_pointer),f
 19337  2594  3000               	movlw	high(03h)
 19338  2595  3DEC               	addwfc	(_ins_pointer+1),f
 19339                           	line	684
 19340                           ;litterlanguage.c: 684: ins_state = 3;
 19341  2596  3003               	movlw	(03h)
 19342  2597  00B7               	movwf	(??_wait_instruction+0)+0
 19343  2598  0837               	movf	(??_wait_instruction+0)+0,w
 19344  2599  00E5               	movwf	(_ins_state)
 19345  259A  2DB2               	goto	l4469
 19346                           	line	685
 19347                           	
 19348  259B                     l4467:	
 19349                           	line	686
 19350                           ;litterlanguage.c: 685: }
 19351                           ;litterlanguage.c: 686: break;
 19352  259B  2DB2               	goto	l4469
 19353                           	line	687
 19354                           ;litterlanguage.c: 687: default:
 19355                           	
 19356  259C                     l4468:	
 19357                           	line	688
 19358                           	
 19359  259C                     l37459:	
 19360                           ;litterlanguage.c: 688: ins_pointer++;
 19361  259C  3003               	movlw	low(03h)
 19362  259D  07EB               	addwf	(_ins_pointer),f
 19363  259E  3000               	movlw	high(03h)
 19364  259F  3DEC               	addwfc	(_ins_pointer+1),f
 19365                           	line	689
 19366                           ;litterlanguage.c: 689: ins_state = 3;
 19367  25A0  3003               	movlw	(03h)
 19368  25A1  00B7               	movwf	(??_wait_instruction+0)+0
 19369  25A2  0837               	movf	(??_wait_instruction+0)+0,w
 19370  25A3  00E5               	movwf	(_ins_state)
 19371                           	line	690
 19372                           ;litterlanguage.c: 690: break;
 19373  25A4  2DB2               	goto	l4469
 19374                           	line	691
 19375                           	
 19376  25A5                     l37461:	
 19377                           ;litterlanguage.c: 691: }
 19378  25A5  2DB2               	goto	l4469
 19379                           	line	659
 19380                           	
 19381  25A6                     l4457:	
 19382                           	
 19383  25A6                     l37463:	
 19384  25A6  0020               	movlb 0	; select bank0
 19385  25A7  0868               	movf	(_cur_instruction),w
 19386                           	; Switch size 1, requested type "space"
 19387                           ; Number of cases is 3, Range of values is 7 to 9
 19388                           ; switch strategies available:
 19389                           ; Name         Instructions Cycles
 19390                           ; simple_byte           10     6 (average)
 19391                           ; direct_byte           15     9 (fixed)
 19392                           ; jumptable            263     9 (fixed)
 19393                           ;	Chosen strategy is simple_byte
 19394                           
 19395                           	opt asmopt_off
 19396  25A8  3A07               	xorlw	7^0	; case 7
 19397  25A9  1903               	skipnz
 19398  25AA  2D38               	goto	l37437
 19399  25AB  3A0F               	xorlw	8^7	; case 8
 19400  25AC  1903               	skipnz
 19401  25AD  2D50               	goto	l37441
 19402  25AE  3A01               	xorlw	9^8	; case 9
 19403  25AF  1903               	skipnz
 19404  25B0  2D89               	goto	l37455
 19405  25B1  2D9C               	goto	l37459
 19406                           	opt asmopt_on
 19407                           
 19408                           	line	691
 19409                           	
 19410  25B2                     l4460:	
 19411                           	line	692
 19412                           	
 19413  25B2                     l4469:	
 19414  25B2  0008               	return
 19415                           	opt stack 0
 19416                           GLOBAL	__end_of_wait_instruction
 19417  25B3                     	__end_of_wait_instruction:
 19418 ;; =============== function _wait_instruction ends ============
 19419                           
 19420                           	signat	_wait_instruction,88
 19421                           	global	_printtime
 19422                           psect	text3284,local,class=CODE,delta=2
 19423                           global __ptext3284
 19424  2B95                     __ptext3284:
 19425                           
 19426 ;; *************** function _printtime *****************
 19427 ;; Defined at:
 19428 ;;		line 89 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19429 ;; Parameters:    Size  Location     Type
 19430 ;;		None
 19431 ;; Auto vars:     Size  Location     Type
 19432 ;;		None
 19433 ;; Return value:  Size  Location     Type
 19434 ;;		None               void
 19435 ;; Registers used:
 19436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19437 ;; Tracked objects:
 19438 ;;		On entry : 0/0
 19439 ;;		On exit  : 0/0
 19440 ;;		Unchanged: 0/0
 19441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19444 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 19445 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 19446 ;;Total ram usage:        8 bytes
 19447 ;; Hardware stack levels used:    1
 19448 ;; Hardware stack levels required when called:    4
 19449 ;; This function calls:
 19450 ;;		_printf
 19451 ;; This function is called by:
 19452 ;;		_litterlanguage_work
 19453 ;;		_litterlanguage_start
 19454 ;;		_litterlanguage_pause
 19455 ;;		_litterlanguage_stop
 19456 ;;		_watersensor_event
 19457 ;;		_litterlanguage_cleanup
 19458 ;;		_exe_instruction
 19459 ;;		_userinterface_work
 19460 ;;		_catsensor_event
 19461 ;;		_incminutes
 19462 ;; This function uses a non-reentrant model
 19463 ;;
 19464                           psect	text3284
 19465                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19466                           	line	89
 19467                           	global	__size_of_printtime
 19468  002D                     	__size_of_printtime	equ	__end_of_printtime-_printtime
 19469                           	
 19470  2B95                     _printtime:	
 19471                           	opt	stack 7
 19472                           ; Regs used in _printtime: [wreg-status,0+pclath+cstack]
 19473                           	line	92
 19474                           	
 19475  2B95                     l37433:	
 19476                           ;rtc.c: 90: printf( "%d %d:%.2d.%.2d ",
 19477                           ;rtc.c: 91: currenttime.weekday, currenttime.hours,
 19478                           ;rtc.c: 92: currenttime.minutes, currenttime.seconds );
 19479  2B95  30D2               	movlw	low(STR_113|8000h)
 19480  2B96  0020               	movlb 0	; select bank0
 19481  2B97  00AF               	movwf	(?_printf)
 19482  2B98  3086               	movlw	high(STR_113|8000h)
 19483  2B99  00B0               	movwf	((?_printf))+1
 19484  2B9A  0021               	movlb 1	; select bank1
 19485  2B9B  0849               	movf	0+(_currenttime)^080h+03h,w
 19486  2B9C  0020               	movlb 0	; select bank0
 19487  2B9D  00C7               	movwf	(??_printtime+0)+0
 19488  2B9E  01C8               	clrf	(??_printtime+0)+0+1
 19489  2B9F  0847               	movf	0+(??_printtime+0)+0,w
 19490  2BA0  00B1               	movwf	0+(?_printf)+02h
 19491  2BA1  0848               	movf	1+(??_printtime+0)+0,w
 19492  2BA2  00B2               	movwf	1+(?_printf)+02h
 19493  2BA3  0021               	movlb 1	; select bank1
 19494  2BA4  0848               	movf	0+(_currenttime)^080h+02h,w
 19495  2BA5  0020               	movlb 0	; select bank0
 19496  2BA6  00C9               	movwf	(??_printtime+2)+0
 19497  2BA7  01CA               	clrf	(??_printtime+2)+0+1
 19498  2BA8  0849               	movf	0+(??_printtime+2)+0,w
 19499  2BA9  00B3               	movwf	0+(?_printf)+04h
 19500  2BAA  084A               	movf	1+(??_printtime+2)+0,w
 19501  2BAB  00B4               	movwf	1+(?_printf)+04h
 19502  2BAC  0021               	movlb 1	; select bank1
 19503  2BAD  0847               	movf	0+(_currenttime)^080h+01h,w
 19504  2BAE  0020               	movlb 0	; select bank0
 19505  2BAF  00CB               	movwf	(??_printtime+4)+0
 19506  2BB0  01CC               	clrf	(??_printtime+4)+0+1
 19507  2BB1  084B               	movf	0+(??_printtime+4)+0,w
 19508  2BB2  00B5               	movwf	0+(?_printf)+06h
 19509  2BB3  084C               	movf	1+(??_printtime+4)+0,w
 19510  2BB4  00B6               	movwf	1+(?_printf)+06h
 19511  2BB5  0021               	movlb 1	; select bank1
 19512  2BB6  0846               	movf	(_currenttime)^080h,w
 19513  2BB7  0020               	movlb 0	; select bank0
 19514  2BB8  00CD               	movwf	(??_printtime+6)+0
 19515  2BB9  01CE               	clrf	(??_printtime+6)+0+1
 19516  2BBA  084D               	movf	0+(??_printtime+6)+0,w
 19517  2BBB  00B7               	movwf	0+(?_printf)+08h
 19518  2BBC  084E               	movf	1+(??_printtime+6)+0,w
 19519  2BBD  00B8               	movwf	1+(?_printf)+08h
 19520  2BBE  3194  24A0  31AB   	fcall	_printf
 19521                           	line	93
 19522                           	
 19523  2BC1                     l17234:	
 19524  2BC1  0008               	return
 19525                           	opt stack 0
 19526                           GLOBAL	__end_of_printtime
 19527  2BC2                     	__end_of_printtime:
 19528 ;; =============== function _printtime ends ============
 19529                           
 19530                           	signat	_printtime,88
 19531                           	global	_rtc_work
 19532                           psect	text3285,local,class=CODE,delta=2
 19533                           global __ptext3285
 19534  201B                     __ptext3285:
 19535                           
 19536 ;; *************** function _rtc_work *****************
 19537 ;; Defined at:
 19538 ;;		line 68 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19539 ;; Parameters:    Size  Location     Type
 19540 ;;		None
 19541 ;; Auto vars:     Size  Location     Type
 19542 ;;		None
 19543 ;; Return value:  Size  Location     Type
 19544 ;;		None               void
 19545 ;; Registers used:
 19546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19547 ;; Tracked objects:
 19548 ;;		On entry : 0/0
 19549 ;;		On exit  : 0/0
 19550 ;;		Unchanged: 0/0
 19551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19556 ;;Total ram usage:        1 bytes
 19557 ;; Hardware stack levels used:    1
 19558 ;; Hardware stack levels required when called:    4
 19559 ;; This function calls:
 19560 ;;		_timeoutexpired
 19561 ;;		_postponetimeout
 19562 ;; This function is called by:
 19563 ;;		_main
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           psect	text3285
 19567                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19568                           	line	68
 19569                           	global	__size_of_rtc_work
 19570  0060                     	__size_of_rtc_work	equ	__end_of_rtc_work-_rtc_work
 19571                           	
 19572  201B                     _rtc_work:	
 19573                           	opt	stack 11
 19574                           ; Regs used in _rtc_work: [wreg+fsr1l-status,0+pclath+cstack]
 19575                           	line	69
 19576                           	
 19577  201B                     l37411:	
 19578                           ;rtc.c: 69: if (timeoutexpired(&second)) {
 19579  201B  304C               	movlw	(_second&0ffh)
 19580  201C  0020               	movlb 0	; select bank0
 19581  201D  00A9               	movwf	(?_timeoutexpired)
 19582  201E  3001               	movlw	0x2/2
 19583  201F  00AA               	movwf	(?_timeoutexpired+1)
 19584  2020  31A3  235B  31A0   	fcall	_timeoutexpired
 19585  2023  3A00               	xorlw	0&0ffh
 19586  2024  1903               	skipnz
 19587  2025  2827               	goto	u10401
 19588  2026  2828               	goto	u10400
 19589  2027                     u10401:
 19590  2027  287A               	goto	l17231
 19591  2028                     u10400:
 19592                           	line	70
 19593                           	
 19594  2028                     l37413:	
 19595                           ;rtc.c: 70: postponetimeout(&second, ((((4UL * (1000UL * ((1000UL)))))/4)/8));
 19596  2028  304C               	movlw	(_second&0ffh)
 19597  2029  0020               	movlb 0	; select bank0
 19598  202A  00A1               	movwf	(?_postponetimeout)
 19599  202B  3001               	movlw	0x2/2
 19600  202C  00A2               	movwf	(?_postponetimeout+1)
 19601  202D  3000               	movlw	0
 19602  202E  00A6               	movwf	3+(?_postponetimeout)+02h
 19603  202F  3001               	movlw	01h
 19604  2030  00A5               	movwf	2+(?_postponetimeout)+02h
 19605  2031  30E8               	movlw	0E8h
 19606  2032  00A4               	movwf	1+(?_postponetimeout)+02h
 19607  2033  3048               	movlw	048h
 19608  2034  00A3               	movwf	0+(?_postponetimeout)+02h
 19609                           
 19610  2035  31AE  26E8  31A0   	fcall	_postponetimeout
 19611                           	line	71
 19612                           	
 19613  2038                     l37415:	
 19614                           ;rtc.c: 71: uptime++;
 19615  2038  3001               	movlw	01h
 19616  2039  0023               	movlb 3	; select bank3
 19617  203A  07CA               	addwf	(_uptime)^0180h,f
 19618  203B  3000               	movlw	0
 19619  203C  3DCB               	addwfc	(_uptime+1)^0180h,f
 19620  203D  3000               	movlw	0
 19621  203E  3DCC               	addwfc	(_uptime+2)^0180h,f
 19622  203F  3000               	movlw	0
 19623  2040  3DCD               	addwfc	(_uptime+3)^0180h,f
 19624                           	line	72
 19625                           	
 19626  2041                     l37417:	
 19627                           ;rtc.c: 72: if (++currenttime.seconds >= 60) {
 19628  2041  3001               	movlw	(01h)
 19629  2042  0020               	movlb 0	; select bank0
 19630  2043  00B7               	movwf	(??_rtc_work+0)+0
 19631  2044  0837               	movf	(??_rtc_work+0)+0,w
 19632  2045  0021               	movlb 1	; select bank1
 19633  2046  07C6               	addwf	(_currenttime)^080h,f
 19634  2047  303C               	movlw	(03Ch)
 19635  2048  0246               	subwf	((_currenttime)^080h),w
 19636  2049  1C03               	skipc
 19637  204A  284C               	goto	u10411
 19638  204B  284D               	goto	u10410
 19639  204C                     u10411:
 19640  204C  287A               	goto	l17231
 19641  204D                     u10410:
 19642                           	line	73
 19643                           	
 19644  204D                     l37419:	
 19645                           ;rtc.c: 73: currenttime.seconds = 0;
 19646  204D  01C6               	clrf	(_currenttime)^080h
 19647                           	line	74
 19648                           	
 19649  204E                     l37421:	
 19650                           ;rtc.c: 74: if (++currenttime.minutes >=60) {
 19651  204E  3001               	movlw	(01h)
 19652  204F  0020               	movlb 0	; select bank0
 19653  2050  00B7               	movwf	(??_rtc_work+0)+0
 19654  2051  0837               	movf	(??_rtc_work+0)+0,w
 19655  2052  0021               	movlb 1	; select bank1
 19656  2053  07C7               	addwf	0+(_currenttime)^080h+01h,f
 19657  2054  303C               	movlw	(03Ch)
 19658  2055  0247               	subwf	(0+(_currenttime)^080h+01h),w
 19659  2056  1C03               	skipc
 19660  2057  2859               	goto	u10421
 19661  2058  285A               	goto	u10420
 19662  2059                     u10421:
 19663  2059  287A               	goto	l17231
 19664  205A                     u10420:
 19665                           	line	75
 19666                           	
 19667  205A                     l37423:	
 19668                           ;rtc.c: 75: currenttime.minutes = 0;
 19669  205A  01C7               	clrf	0+(_currenttime)^080h+01h
 19670                           	line	76
 19671                           	
 19672  205B                     l37425:	
 19673                           ;rtc.c: 76: if (++currenttime.hours >=24) {
 19674  205B  3001               	movlw	(01h)
 19675  205C  0020               	movlb 0	; select bank0
 19676  205D  00B7               	movwf	(??_rtc_work+0)+0
 19677  205E  0837               	movf	(??_rtc_work+0)+0,w
 19678  205F  0021               	movlb 1	; select bank1
 19679  2060  07C8               	addwf	0+(_currenttime)^080h+02h,f
 19680  2061  3018               	movlw	(018h)
 19681  2062  0248               	subwf	(0+(_currenttime)^080h+02h),w
 19682  2063  1C03               	skipc
 19683  2064  2866               	goto	u10431
 19684  2065  2867               	goto	u10430
 19685  2066                     u10431:
 19686  2066  287A               	goto	l17231
 19687  2067                     u10430:
 19688                           	line	77
 19689                           	
 19690  2067                     l37427:	
 19691                           ;rtc.c: 77: currenttime.hours = 0;
 19692  2067  01C8               	clrf	0+(_currenttime)^080h+02h
 19693                           	line	78
 19694                           	
 19695  2068                     l37429:	
 19696                           ;rtc.c: 78: if (++currenttime.weekday >=7)
 19697  2068  3001               	movlw	(01h)
 19698  2069  0020               	movlb 0	; select bank0
 19699  206A  00B7               	movwf	(??_rtc_work+0)+0
 19700  206B  0837               	movf	(??_rtc_work+0)+0,w
 19701  206C  0021               	movlb 1	; select bank1
 19702  206D  07C9               	addwf	0+(_currenttime)^080h+03h,f
 19703  206E  3007               	movlw	(07h)
 19704  206F  0249               	subwf	(0+(_currenttime)^080h+03h),w
 19705  2070  1C03               	skipc
 19706  2071  2873               	goto	u10441
 19707  2072  2874               	goto	u10440
 19708  2073                     u10441:
 19709  2073  287A               	goto	l17231
 19710  2074                     u10440:
 19711                           	line	79
 19712                           	
 19713  2074                     l37431:	
 19714                           ;rtc.c: 79: currenttime.weekday = 0;
 19715  2074  01C9               	clrf	0+(_currenttime)^080h+03h
 19716  2075  287A               	goto	l17231
 19717                           	
 19718  2076                     l17230:	
 19719  2076  287A               	goto	l17231
 19720                           	line	80
 19721                           	
 19722  2077                     l17229:	
 19723  2077  287A               	goto	l17231
 19724                           	line	81
 19725                           	
 19726  2078                     l17228:	
 19727  2078  287A               	goto	l17231
 19728                           	line	82
 19729                           	
 19730  2079                     l17227:	
 19731  2079  287A               	goto	l17231
 19732                           	line	83
 19733                           	
 19734  207A                     l17226:	
 19735                           	line	84
 19736                           	
 19737  207A                     l17231:	
 19738  207A  0008               	return
 19739                           	opt stack 0
 19740                           GLOBAL	__end_of_rtc_work
 19741  207B                     	__end_of_rtc_work:
 19742 ;; =============== function _rtc_work ends ============
 19743                           
 19744                           	signat	_rtc_work,88
 19745                           	global	_cmdline_init
 19746                           psect	text3286,local,class=CODE,delta=2
 19747                           global __ptext3286
 19748  37B8                     __ptext3286:
 19749                           
 19750 ;; *************** function _cmdline_init *****************
 19751 ;; Defined at:
 19752 ;;		line 58 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19753 ;; Parameters:    Size  Location     Type
 19754 ;;		None
 19755 ;; Auto vars:     Size  Location     Type
 19756 ;;		None
 19757 ;; Return value:  Size  Location     Type
 19758 ;;		None               void
 19759 ;; Registers used:
 19760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19770 ;;Total ram usage:        0 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:    4
 19773 ;; This function calls:
 19774 ;;		_printf
 19775 ;; This function is called by:
 19776 ;;		_main
 19777 ;; This function uses a non-reentrant model
 19778 ;;
 19779                           psect	text3286
 19780                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19781                           	line	58
 19782                           	global	__size_of_cmdline_init
 19783  000E                     	__size_of_cmdline_init	equ	__end_of_cmdline_init-_cmdline_init
 19784                           	
 19785  37B8                     _cmdline_init:	
 19786                           	opt	stack 11
 19787                           ; Regs used in _cmdline_init: [wreg-status,0+pclath+cstack]
 19788                           	line	59
 19789                           	
 19790  37B8                     l37407:	
 19791                           ;cmdline.c: 59: if (localecho)
 19792  37B8  0020               	movlb 0	; select bank0
 19793  37B9  086F               	movf	(_localecho),w
 19794  37BA  1D03               	skipz
 19795  37BB  2FBD               	goto	u10390
 19796  37BC  2FC5               	goto	l15096
 19797  37BD                     u10390:
 19798                           	line	60
 19799                           	
 19800  37BD                     l37409:	
 19801                           ;cmdline.c: 60: printf("# ");
 19802  37BD  303C               	movlw	low(STR_99|8000h)
 19803  37BE  00AF               	movwf	(?_printf)
 19804  37BF  3089               	movlw	high(STR_99|8000h)
 19805  37C0  00B0               	movwf	((?_printf))+1
 19806  37C1  3194  24A0  31B7   	fcall	_printf
 19807  37C4  2FC5               	goto	l15096
 19808                           	
 19809  37C5                     l15095:	
 19810                           	line	61
 19811                           	
 19812  37C5                     l15096:	
 19813  37C5  0008               	return
 19814                           	opt stack 0
 19815                           GLOBAL	__end_of_cmdline_init
 19816  37C6                     	__end_of_cmdline_init:
 19817 ;; =============== function _cmdline_init ends ============
 19818                           
 19819                           	signat	_cmdline_init,88
 19820                           	global	_rtc_init
 19821                           psect	text3287,local,class=CODE,delta=2
 19822                           global __ptext3287
 19823  29E7                     __ptext3287:
 19824                           
 19825 ;; *************** function _rtc_init *****************
 19826 ;; Defined at:
 19827 ;;		line 48 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  flags           1    wreg     unsigned char 
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;  flags           1   28[BANK0 ] unsigned char 
 19832 ;; Return value:  Size  Location     Type
 19833 ;;		None               void
 19834 ;; Registers used:
 19835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/0
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19844 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19845 ;;Total ram usage:        1 bytes
 19846 ;; Hardware stack levels used:    1
 19847 ;; Hardware stack levels required when called:    4
 19848 ;; This function calls:
 19849 ;;		_settimeout
 19850 ;; This function is called by:
 19851 ;;		_main
 19852 ;; This function uses a non-reentrant model
 19853 ;;
 19854                           psect	text3287
 19855                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19856                           	line	48
 19857                           	global	__size_of_rtc_init
 19858  001D                     	__size_of_rtc_init	equ	__end_of_rtc_init-_rtc_init
 19859                           	
 19860  29E7                     _rtc_init:	
 19861                           	opt	stack 11
 19862                           ; Regs used in _rtc_init: [wreg+fsr1l-status,0+pclath+cstack]
 19863                           ;rtc_init@flags stored from wreg
 19864  29E7  0020               	movlb 0	; select bank0
 19865  29E8  00BD               	movwf	(rtc_init@flags)
 19866                           	line	49
 19867                           	
 19868  29E9                     l37401:	
 19869                           ;rtc.c: 49: settimeout(&second, ((((4UL * (1000UL * ((1000UL)))))/4)/8));
 19870  29E9  304C               	movlw	(_second&0ffh)
 19871  29EA  00AD               	movwf	(?_settimeout)
 19872  29EB  3001               	movlw	0x2/2
 19873  29EC  00AE               	movwf	(?_settimeout+1)
 19874  29ED  3000               	movlw	0
 19875  29EE  00B2               	movwf	3+(?_settimeout)+02h
 19876  29EF  3001               	movlw	01h
 19877  29F0  00B1               	movwf	2+(?_settimeout)+02h
 19878  29F1  30E8               	movlw	0E8h
 19879  29F2  00B0               	movwf	1+(?_settimeout)+02h
 19880  29F3  3048               	movlw	048h
 19881  29F4  00AF               	movwf	0+(?_settimeout)+02h
 19882                           
 19883  29F5  31A0  20DE  31A9   	fcall	_settimeout
 19884                           	line	51
 19885                           	
 19886  29F8                     l37403:	
 19887                           ;rtc.c: 51: if (flags & (0x01 << 7)) {
 19888  29F8  0020               	movlb 0	; select bank0
 19889  29F9  1FBD               	btfss	(rtc_init@flags),(7)&7
 19890  29FA  29FC               	goto	u10381
 19891  29FB  29FD               	goto	u10380
 19892  29FC                     u10381:
 19893  29FC  2A03               	goto	l17223
 19894  29FD                     u10380:
 19895                           	line	52
 19896                           	
 19897  29FD                     l37405:	
 19898                           ;rtc.c: 52: currenttime.seconds = 0;
 19899  29FD  0021               	movlb 1	; select bank1
 19900  29FE  01C6               	clrf	(_currenttime)^080h
 19901                           	line	53
 19902                           ;rtc.c: 53: currenttime.minutes = 0;
 19903  29FF  01C7               	clrf	0+(_currenttime)^080h+01h
 19904                           	line	54
 19905                           ;rtc.c: 54: currenttime.hours = 0;
 19906  2A00  01C8               	clrf	0+(_currenttime)^080h+02h
 19907                           	line	55
 19908                           ;rtc.c: 55: currenttime.weekday = 0;
 19909  2A01  01C9               	clrf	0+(_currenttime)^080h+03h
 19910  2A02  2A03               	goto	l17223
 19911                           	line	56
 19912                           	
 19913  2A03                     l17222:	
 19914                           	line	57
 19915                           	
 19916  2A03                     l17223:	
 19917  2A03  0008               	return
 19918                           	opt stack 0
 19919                           GLOBAL	__end_of_rtc_init
 19920  2A04                     	__end_of_rtc_init:
 19921 ;; =============== function _rtc_init ends ============
 19922                           
 19923                           	signat	_rtc_init,4216
 19924                           	global	_cmd2index
 19925                           psect	text3288,local,class=CODE,delta=2
 19926                           global __ptext3288
 19927  2E40                     __ptext3288:
 19928                           
 19929 ;; *************** function _cmd2index *****************
 19930 ;; Defined at:
 19931 ;;		line 189 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19932 ;; Parameters:    Size  Location     Type
 19933 ;;  cmd             1    wreg     PTR unsigned char 
 19934 ;;		 -> linebuffer(20), 
 19935 ;; Auto vars:     Size  Location     Type
 19936 ;;  cmd             1   14[BANK0 ] PTR unsigned char 
 19937 ;;		 -> linebuffer(20), 
 19938 ;;  index           2   15[BANK0 ] int 
 19939 ;; Return value:  Size  Location     Type
 19940 ;;                  2   11[BANK0 ] int 
 19941 ;; Registers used:
 19942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19943 ;; Tracked objects:
 19944 ;;		On entry : 0/0
 19945 ;;		On exit  : 0/0
 19946 ;;		Unchanged: 0/0
 19947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19949 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 19950 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19951 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19952 ;;Total ram usage:        6 bytes
 19953 ;; Hardware stack levels used:    1
 19954 ;; Hardware stack levels required when called:    3
 19955 ;; This function calls:
 19956 ;;		___bmul
 19957 ;;		_strncmp
 19958 ;; This function is called by:
 19959 ;;		_proc_line
 19960 ;; This function uses a non-reentrant model
 19961 ;;
 19962                           psect	text3288
 19963                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19964                           	line	189
 19965                           	global	__size_of_cmd2index
 19966  004E                     	__size_of_cmd2index	equ	__end_of_cmd2index-_cmd2index
 19967                           	
 19968  2E40                     _cmd2index:	
 19969                           	opt	stack 9
 19970                           ; Regs used in _cmd2index: [wreg-status,0+pclath+cstack]
 19971                           ;cmd2index@cmd stored from wreg
 19972  2E40  0020               	movlb 0	; select bank0
 19973  2E41  00AF               	movwf	(cmd2index@cmd)
 19974                           	line	190
 19975                           	
 19976  2E42                     l37385:	
 19977                           ;cmdline.c: 190: int index = 0;
 19978  2E42  01B0               	clrf	(cmd2index@index)
 19979  2E43  01B1               	clrf	(cmd2index@index+1)
 19980                           	line	192
 19981                           ;cmdline.c: 192: while (commands[index].function) {
 19982  2E44  2E71               	goto	l37395
 19983                           	
 19984  2E45                     l15158:	
 19985                           	line	193
 19986                           	
 19987  2E45                     l37387:	
 19988                           ;cmdline.c: 193: if (!strncmp (cmd, commands[index].cmd, (8)))
 19989  2E45  3009               	movlw	(09h)
 19990  2E46  0020               	movlb 0	; select bank0
 19991  2E47  00AE               	movwf	(??_cmd2index+0)+0
 19992  2E48  082E               	movf	(??_cmd2index+0)+0,w
 19993  2E49  00A1               	movwf	(?___bmul)
 19994  2E4A  0830               	movf	(cmd2index@index),w
 19995  2E4B  31A9  2179  31AE   	fcall	___bmul
 19996  2E4E  3E10               	addlw	low(_commands|8000h)
 19997  2E4F  0020               	movlb 0	; select bank0
 19998  2E50  00A5               	movwf	(?_strncmp)
 19999  2E51  3085               	movlw	high(_commands|8000h)
 20000  2E52  1803               	skipnc
 20001  2E53  0A89               	incf	wreg,f
 20002  2E54  00A6               	movwf	1+(?_strncmp)
 20003  2E55  3008               	movlw	low(08h)
 20004  2E56  00A7               	movwf	0+(?_strncmp)+02h
 20005  2E57  3000               	movlw	high(08h)
 20006  2E58  00A8               	movwf	(0+(?_strncmp)+02h)+1
 20007  2E59  082F               	movf	(cmd2index@cmd),w
 20008  2E5A  3190  2000  31AE   	fcall	_strncmp
 20009  2E5D  0020               	movlb 0	; select bank0
 20010  2E5E  0826               	movf	((1+(?_strncmp))),w
 20011  2E5F  0425               	iorwf	((0+(?_strncmp))),w
 20012  2E60  1D03               	skipz
 20013  2E61  2E63               	goto	u10361
 20014  2E62  2E64               	goto	u10360
 20015  2E63                     u10361:
 20016  2E63  2E6C               	goto	l37393
 20017  2E64                     u10360:
 20018                           	line	194
 20019                           	
 20020  2E64                     l37389:	
 20021                           ;cmdline.c: 194: return index;
 20022  2E64  0831               	movf	(cmd2index@index+1),w
 20023  2E65  01AD               	clrf	(?_cmd2index+1)
 20024  2E66  07AD               	addwf	(?_cmd2index+1)
 20025  2E67  0830               	movf	(cmd2index@index),w
 20026  2E68  01AC               	clrf	(?_cmd2index)
 20027  2E69  07AC               	addwf	(?_cmd2index)
 20028                           
 20029  2E6A  2E8D               	goto	l15160
 20030                           	
 20031  2E6B                     l37391:	
 20032  2E6B  2E8D               	goto	l15160
 20033                           	
 20034  2E6C                     l15159:	
 20035                           	line	195
 20036                           	
 20037  2E6C                     l37393:	
 20038                           ;cmdline.c: 195: index++;
 20039  2E6C  3001               	movlw	low(01h)
 20040  2E6D  07B0               	addwf	(cmd2index@index),f
 20041  2E6E  3000               	movlw	high(01h)
 20042  2E6F  3DB1               	addwfc	(cmd2index@index+1),f
 20043  2E70  2E71               	goto	l37395
 20044                           	line	196
 20045                           	
 20046  2E71                     l15157:	
 20047                           	line	192
 20048                           	
 20049  2E71                     l37395:	
 20050  2E71  3009               	movlw	(09h)
 20051  2E72  00AE               	movwf	(??_cmd2index+0)+0
 20052  2E73  082E               	movf	(??_cmd2index+0)+0,w
 20053  2E74  00A1               	movwf	(?___bmul)
 20054  2E75  0830               	movf	(cmd2index@index),w
 20055  2E76  31A9  2179  31AE   	fcall	___bmul
 20056  2E79  3E08               	addlw	08h
 20057  2E7A  3E10               	addlw	low(_commands|8000h)
 20058  2E7B  0084               	movwf	fsr0l
 20059  2E7C  3085               	movlw	high(_commands|8000h)
 20060  2E7D  1803               	skipnc
 20061  2E7E  3E01               	addlw	1
 20062  2E7F  0085               	movwf	fsr0h
 20063  2E80  0800               	movf	indf0,w ;code access
 20064  2E81  3800               	iorlw	0
 20065  2E82  1D03               	skipz
 20066  2E83  2E85               	goto	u10371
 20067  2E84  2E86               	goto	u10370
 20068  2E85                     u10371:
 20069  2E85  2E45               	goto	l37387
 20070  2E86                     u10370:
 20071  2E86  2E87               	goto	l37397
 20072                           	
 20073  2E87                     l15161:	
 20074                           	line	198
 20075                           	
 20076  2E87                     l37397:	
 20077                           ;cmdline.c: 196: }
 20078                           ;cmdline.c: 198: return (-1);
 20079  2E87  30FF               	movlw	low(-1)
 20080  2E88  0020               	movlb 0	; select bank0
 20081  2E89  00AC               	movwf	(?_cmd2index)
 20082  2E8A  30FF               	movlw	high(-1)
 20083  2E8B  00AD               	movwf	((?_cmd2index))+1
 20084  2E8C  2E8D               	goto	l15160
 20085                           	
 20086  2E8D                     l37399:	
 20087                           	line	199
 20088                           	
 20089  2E8D                     l15160:	
 20090  2E8D  0008               	return
 20091                           	opt stack 0
 20092                           GLOBAL	__end_of_cmd2index
 20093  2E8E                     	__end_of_cmd2index:
 20094 ;; =============== function _cmd2index ends ============
 20095                           
 20096                           	signat	_cmd2index,4218
 20097                           	global	_set_pacer
 20098                           psect	text3289,local,class=CODE,delta=2
 20099                           global __ptext3289
 20100  23CF                     __ptext3289:
 20101                           
 20102 ;; *************** function _set_pacer *****************
 20103 ;; Defined at:
 20104 ;;		line 460 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;  pacer           1    wreg     unsigned char 
 20107 ;;  pattern         1    8[BANK0 ] unsigned char 
 20108 ;;  repeat          1    9[BANK0 ] unsigned char 
 20109 ;; Auto vars:     Size  Location     Type
 20110 ;;  pacer           1   12[BANK0 ] unsigned char 
 20111 ;; Return value:  Size  Location     Type
 20112 ;;		None               void
 20113 ;; Registers used:
 20114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20115 ;; Tracked objects:
 20116 ;;		On entry : 0/0
 20117 ;;		On exit  : 0/0
 20118 ;;		Unchanged: 0/0
 20119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20123 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 20124 ;;Total ram usage:        5 bytes
 20125 ;; Hardware stack levels used:    1
 20126 ;; Hardware stack levels required when called:    3
 20127 ;; This function calls:
 20128 ;;		___bmul
 20129 ;;		_timeoutnow
 20130 ;; This function is called by:
 20131 ;;		_set_LED_Error
 20132 ;;		_set_LED_Locked
 20133 ;;		_set_LED_Cartridge
 20134 ;;		_set_LED_Cat
 20135 ;;		_set_Beeper
 20136 ;; This function uses a non-reentrant model
 20137 ;;
 20138                           psect	text3289
 20139                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 20140                           	line	460
 20141                           	global	__size_of_set_pacer
 20142  0077                     	__size_of_set_pacer	equ	__end_of_set_pacer-_set_pacer
 20143                           	
 20144  23CF                     _set_pacer:	
 20145                           	opt	stack 8
 20146                           ; Regs used in _set_pacer: [wreg+fsr1l-status,0+pclath+cstack]
 20147                           ;set_pacer@pacer stored from wreg
 20148                           	line	463
 20149  23CF  0020               	movlb 0	; select bank0
 20150  23D0  00AD               	movwf	(set_pacer@pacer)
 20151                           	
 20152  23D1                     l37375:	
 20153                           ;catgenie120.c: 461: if( repeat &&
 20154                           ;catgenie120.c: 462: (pacers[pacer].pattern == pattern) &&
 20155                           ;catgenie120.c: 463: (pacers[pacer].repeat == repeat) )
 20156  23D1  082A               	movf	(set_pacer@repeat),w
 20157  23D2  1D03               	skipz
 20158  23D3  2BD5               	goto	u10330
 20159  23D4  2BFF               	goto	l37383
 20160  23D5                     u10330:
 20161                           	
 20162  23D5                     l37377:	
 20163  23D5  300B               	movlw	(0Bh)
 20164  23D6  00AB               	movwf	(??_set_pacer+0)+0
 20165  23D7  082B               	movf	(??_set_pacer+0)+0,w
 20166  23D8  00A1               	movwf	(?___bmul)
 20167  23D9  082D               	movf	(set_pacer@pacer),w
 20168  23DA  31A9  2179  31A3   	fcall	___bmul
 20169  23DD  3E07               	addlw	07h
 20170  23DE  3E20               	addlw	_pacers&0ffh
 20171  23DF  0086               	movwf	fsr1l
 20172  23E0  3002               	movlw 2	; select bank4/5
 20173  23E1  0087               	movwf fsr1h	
 20174                           	
 20175  23E2  0801               	movf	indf1,w
 20176  23E3  0020               	movlb 0	; select bank0
 20177  23E4  0629               	xorwf	(set_pacer@pattern),w
 20178  23E5  1D03               	skipz
 20179  23E6  2BE8               	goto	u10341
 20180  23E7  2BE9               	goto	u10340
 20181  23E8                     u10341:
 20182  23E8  2BFF               	goto	l37383
 20183  23E9                     u10340:
 20184                           	
 20185  23E9                     l37379:	
 20186  23E9  300B               	movlw	(0Bh)
 20187  23EA  00AB               	movwf	(??_set_pacer+0)+0
 20188  23EB  082B               	movf	(??_set_pacer+0)+0,w
 20189  23EC  00A1               	movwf	(?___bmul)
 20190  23ED  082D               	movf	(set_pacer@pacer),w
 20191  23EE  31A9  2179  31A3   	fcall	___bmul
 20192  23F1  3E08               	addlw	08h
 20193  23F2  3E20               	addlw	_pacers&0ffh
 20194  23F3  0086               	movwf	fsr1l
 20195  23F4  3002               	movlw 2	; select bank4/5
 20196  23F5  0087               	movwf fsr1h	
 20197                           	
 20198  23F6  0801               	movf	indf1,w
 20199  23F7  0020               	movlb 0	; select bank0
 20200  23F8  062A               	xorwf	(set_pacer@repeat),w
 20201  23F9  1D03               	skipz
 20202  23FA  2BFC               	goto	u10351
 20203  23FB  2BFD               	goto	u10350
 20204  23FC                     u10351:
 20205  23FC  2BFF               	goto	l37383
 20206  23FD                     u10350:
 20207  23FD  2C45               	goto	l10982
 20208                           	line	464
 20209                           	
 20210  23FE                     l37381:	
 20211                           ;catgenie120.c: 464: return;
 20212  23FE  2C45               	goto	l10982
 20213                           	
 20214  23FF                     l10981:	
 20215                           	line	467
 20216                           	
 20217  23FF                     l37383:	
 20218                           ;catgenie120.c: 467: timeoutnow(&pacers[pacer].timer);
 20219  23FF  300B               	movlw	(0Bh)
 20220  2400  00AB               	movwf	(??_set_pacer+0)+0
 20221  2401  082B               	movf	(??_set_pacer+0)+0,w
 20222  2402  00A1               	movwf	(?___bmul)
 20223  2403  082D               	movf	(set_pacer@pacer),w
 20224  2404  31A9  2179  31A3   	fcall	___bmul
 20225  2407  3E20               	addlw	_pacers&0ffh
 20226  2408  0020               	movlb 0	; select bank0
 20227  2409  00A5               	movwf	(?_timeoutnow)
 20228  240A  3002               	movlw	(0x4/2)
 20229  240B  00A6               	movwf	(?_timeoutnow+1)
 20230  240C  31A9  21CB  31A3   	fcall	_timeoutnow
 20231                           	line	469
 20232                           ;catgenie120.c: 469: pacers[pacer].mask = 0x01;
 20233  240F  300B               	movlw	(0Bh)
 20234  2410  0020               	movlb 0	; select bank0
 20235  2411  00AB               	movwf	(??_set_pacer+0)+0
 20236  2412  082B               	movf	(??_set_pacer+0)+0,w
 20237  2413  00A1               	movwf	(?___bmul)
 20238  2414  082D               	movf	(set_pacer@pacer),w
 20239  2415  31A9  2179  31A3   	fcall	___bmul
 20240  2418  3E06               	addlw	06h
 20241  2419  3E20               	addlw	_pacers&0ffh
 20242  241A  0086               	movwf	fsr1l
 20243  241B  3002               	movlw 2	; select bank4/5
 20244  241C  0087               	movwf fsr1h	
 20245                           	
 20246  241D  0181               	clrf	indf1
 20247  241E  1403               	bsf	status,0
 20248  241F  0D81               	rlf	indf1,f
 20249                           	line	471
 20250                           ;catgenie120.c: 471: pacers[pacer].pattern = pattern;
 20251  2420  0020               	movlb 0	; select bank0
 20252  2421  0829               	movf	(set_pacer@pattern),w
 20253  2422  00AB               	movwf	(??_set_pacer+0)+0
 20254  2423  300B               	movlw	(0Bh)
 20255  2424  00AC               	movwf	(??_set_pacer+1)+0
 20256  2425  082C               	movf	(??_set_pacer+1)+0,w
 20257  2426  00A1               	movwf	(?___bmul)
 20258  2427  082D               	movf	(set_pacer@pacer),w
 20259  2428  31A9  2179  31A3   	fcall	___bmul
 20260  242B  3E07               	addlw	07h
 20261  242C  3E20               	addlw	_pacers&0ffh
 20262  242D  0086               	movwf	fsr1l
 20263  242E  3002               	movlw 2	; select bank4/5
 20264  242F  0087               	movwf fsr1h	
 20265                           	
 20266  2430  0020               	movlb 0	; select bank0
 20267  2431  082B               	movf	(??_set_pacer+0)+0,w
 20268  2432  0081               	movwf	indf1
 20269                           	line	473
 20270                           ;catgenie120.c: 473: pacers[pacer].repeat = repeat;
 20271  2433  082A               	movf	(set_pacer@repeat),w
 20272  2434  00AB               	movwf	(??_set_pacer+0)+0
 20273  2435  300B               	movlw	(0Bh)
 20274  2436  00AC               	movwf	(??_set_pacer+1)+0
 20275  2437  082C               	movf	(??_set_pacer+1)+0,w
 20276  2438  00A1               	movwf	(?___bmul)
 20277  2439  082D               	movf	(set_pacer@pacer),w
 20278  243A  31A9  2179  31A3   	fcall	___bmul
 20279  243D  3E08               	addlw	08h
 20280  243E  3E20               	addlw	_pacers&0ffh
 20281  243F  0086               	movwf	fsr1l
 20282  2440  3002               	movlw 2	; select bank4/5
 20283  2441  0087               	movwf fsr1h	
 20284                           	
 20285  2442  0020               	movlb 0	; select bank0
 20286  2443  082B               	movf	(??_set_pacer+0)+0,w
 20287  2444  0081               	movwf	indf1
 20288                           	line	474
 20289                           	
 20290  2445                     l10982:	
 20291  2445  0008               	return
 20292                           	opt stack 0
 20293                           GLOBAL	__end_of_set_pacer
 20294  2446                     	__end_of_set_pacer:
 20295 ;; =============== function _set_pacer ends ============
 20296                           
 20297                           	signat	_set_pacer,12408
 20298                           	global	_both_long
 20299                           psect	text3290,local,class=CODE,delta=2
 20300                           global __ptext3290
 20301  287A                     __ptext3290:
 20302                           
 20303 ;; *************** function _both_long *****************
 20304 ;; Defined at:
 20305 ;;		line 600 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 20306 ;; Parameters:    Size  Location     Type
 20307 ;;		None
 20308 ;; Auto vars:     Size  Location     Type
 20309 ;;		None
 20310 ;; Return value:  Size  Location     Type
 20311 ;;		None               void
 20312 ;; Registers used:
 20313 ;;		wreg, status,2, status,0, pclath, cstack
 20314 ;; Tracked objects:
 20315 ;;		On entry : 0/0
 20316 ;;		On exit  : 0/0
 20317 ;;		Unchanged: 0/0
 20318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20322 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20323 ;;Total ram usage:        1 bytes
 20324 ;; Hardware stack levels used:    1
 20325 ;; Hardware stack levels required when called:    3
 20326 ;; This function calls:
 20327 ;;		_eeprom_write
 20328 ;; This function is called by:
 20329 ;;		_userinterface_work
 20330 ;; This function uses a non-reentrant model
 20331 ;;
 20332                           psect	text3290
 20333                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 20334                           	line	600
 20335                           	global	__size_of_both_long
 20336  0010                     	__size_of_both_long	equ	__end_of_both_long-_both_long
 20337                           	
 20338  287A                     _both_long:	
 20339                           	opt	stack 11
 20340                           ; Regs used in _both_long: [wreg+status,2+status,0+pclath+cstack]
 20341                           	line	601
 20342                           	
 20343  287A                     l37371:	
 20344                           ;userinterface.c: 601: locked = !locked;
 20345  287A  3008               	movlw	1<<((_locked)&7)
 20346  287B  06F1               	xorwf	((_locked)/8),f
 20347                           	line	602
 20348                           	
 20349  287C                     l37373:	
 20350                           ;userinterface.c: 602: eeprom_write((2), !locked);
 20351  287C  1003               	clrc
 20352  287D  1DF1               	btfss	(_locked/8),(_locked)&7
 20353  287E  1403               	setc
 20354  287F  3000               	movlw	0
 20355  2880  3D09               	addwfc	wreg,w
 20356  2881  0020               	movlb 0	; select bank0
 20357  2882  00A5               	movwf	(??_both_long+0)+0
 20358  2883  0825               	movf	(??_both_long+0)+0,w
 20359  2884  00A1               	movwf	(?_eeprom_write)
 20360  2885  3002               	movlw	(02h)
 20361  2886  31AC  244D  31A8   	fcall	_eeprom_write
 20362                           	line	603
 20363                           	
 20364  2889                     l8813:	
 20365  2889  0008               	return
 20366                           	opt stack 0
 20367                           GLOBAL	__end_of_both_long
 20368  288A                     	__end_of_both_long:
 20369 ;; =============== function _both_long ends ============
 20370                           
 20371                           	signat	_both_long,88
 20372                           	global	_settimeout
 20373                           psect	text3291,local,class=CODE,delta=2
 20374                           global __ptext3291
 20375  20DE                     __ptext3291:
 20376                           
 20377 ;; *************** function _settimeout *****************
 20378 ;; Defined at:
 20379 ;;		line 82 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20380 ;; Parameters:    Size  Location     Type
 20381 ;;  timer_p         2   12[BANK0 ] const PTR struct timer
 20382 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 20383 ;;		 -> pacers(55), debouncers(42), cattimer(6), autotimer(6), 
 20384 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 20385 ;;		 -> timer_fill(6), timer_waitins(6), 
 20386 ;;  timout          4   14[BANK0 ] const unsigned long 
 20387 ;; Auto vars:     Size  Location     Type
 20388 ;;  tempLongTick    4   22[BANK0 ] unsigned long 
 20389 ;;  longshort       2   26[BANK0 ] PTR struct longshort
 20390 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 20391 ;;		 -> pacers(55), debouncers(42), cattimer(6), autotimer(6), 
 20392 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 20393 ;;		 -> timer_fill(6), timer_waitins(6), 
 20394 ;; Return value:  Size  Location     Type
 20395 ;;		None               void
 20396 ;; Registers used:
 20397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20398 ;; Tracked objects:
 20399 ;;		On entry : 0/0
 20400 ;;		On exit  : 0/0
 20401 ;;		Unchanged: 0/0
 20402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20403 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20404 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 20406 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 20407 ;;Total ram usage:       16 bytes
 20408 ;; Hardware stack levels used:    1
 20409 ;; Hardware stack levels required when called:    3
 20410 ;; This function calls:
 20411 ;;		_gettimestamp
 20412 ;; This function is called by:
 20413 ;;		_litterlanguage_pause
 20414 ;;		_exe_instruction
 20415 ;;		_catsensor_event
 20416 ;;		_process_button
 20417 ;;		_setup_short
 20418 ;;		_both_short
 20419 ;;		_update_autotimer
 20420 ;;		_catgenie_work
 20421 ;;		_catsensor_work
 20422 ;;		_rtc_init
 20423 ;;		_water_work
 20424 ;;		_incminutes
 20425 ;;		_inchours
 20426 ;;		_incweekday
 20427 ;; This function uses a non-reentrant model
 20428 ;;
 20429                           psect	text3291
 20430                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20431                           	line	82
 20432                           	global	__size_of_settimeout
 20433  0065                     	__size_of_settimeout	equ	__end_of_settimeout-_settimeout
 20434                           	
 20435  20DE                     _settimeout:	
 20436                           	opt	stack 8
 20437                           ; Regs used in _settimeout: [wreg+fsr1l-status,0+pclath+cstack]
 20438                           	line	84
 20439                           	
 20440  20DE                     l37359:	
 20441                           ;timer.c: 83: unsigned long tempLongTicks;
 20442                           ;timer.c: 84: struct longshort *longshort = (struct longshort*)timer_p;
 20443  20DE  0020               	movlb 0	; select bank0
 20444  20DF  082E               	movf	(settimeout@timer_p+1),w
 20445  20E0  01BC               	clrf	(settimeout@longshort+1)
 20446  20E1  07BC               	addwf	(settimeout@longshort+1)
 20447  20E2  082D               	movf	(settimeout@timer_p),w
 20448  20E3  01BB               	clrf	(settimeout@longshort)
 20449  20E4  07BB               	addwf	(settimeout@longshort)
 20450                           
 20451                           	line	87
 20452                           	
 20453  20E5                     l37361:	
 20454                           ;timer.c: 87: gettimestamp(timer_p);
 20455  20E5  082E               	movf	(settimeout@timer_p+1),w
 20456  20E6  01A2               	clrf	(?_gettimestamp+1)
 20457  20E7  07A2               	addwf	(?_gettimestamp+1)
 20458  20E8  082D               	movf	(settimeout@timer_p),w
 20459  20E9  01A1               	clrf	(?_gettimestamp)
 20460  20EA  07A1               	addwf	(?_gettimestamp)
 20461                           
 20462  20EB  31AD  25AA  31A0   	fcall	_gettimestamp
 20463                           	line	90
 20464                           	
 20465  20EE                     l37363:	
 20466                           ;timer.c: 90: if (!timout)
 20467  20EE  0020               	movlb 0	; select bank0
 20468  20EF  0832               	movf	(settimeout@timout+3),w
 20469  20F0  0431               	iorwf	(settimeout@timout+2),w
 20470  20F1  0430               	iorwf	(settimeout@timout+1),w
 20471  20F2  042F               	iorwf	(settimeout@timout),w
 20472  20F3  1D03               	skipz
 20473  20F4  28F6               	goto	u10311
 20474  20F5  28F7               	goto	u10310
 20475  20F6                     u10311:
 20476  20F6  28F9               	goto	l37367
 20477  20F7                     u10310:
 20478  20F7  2942               	goto	l21357
 20479                           	line	91
 20480                           	
 20481  20F8                     l37365:	
 20482                           ;timer.c: 91: return;
 20483  20F8  2942               	goto	l21357
 20484                           	
 20485  20F9                     l21356:	
 20486                           	line	94
 20487                           	
 20488  20F9                     l37367:	
 20489                           ;timer.c: 94: tempLongTicks = longshort->ls_longTicks;
 20490  20F9  083B               	movf	(settimeout@longshort),w
 20491  20FA  0086               	movwf	fsr1l
 20492  20FB  083C               	movf	(settimeout@longshort+1),w
 20493  20FC  0087               	movwf	fsr1h
 20494                           
 20495  20FD  3F40               	moviw	[0]fsr1
 20496  20FE  00B7               	movwf	(settimeout@tempLongTicks)
 20497  20FF  3F41               	moviw	[1]fsr1
 20498  2100  00B8               	movwf	(settimeout@tempLongTicks+1)
 20499  2101  3F42               	moviw	[2]fsr1
 20500  2102  00B9               	movwf	(settimeout@tempLongTicks+2)
 20501  2103  3F43               	moviw	[3]fsr1
 20502  2104  00BA               	movwf	(settimeout@tempLongTicks+3)
 20503                           	line	97
 20504                           ;timer.c: 97: longshort->ls_longTicks += timout;
 20505  2105  083B               	movf	(settimeout@longshort),w
 20506  2106  0086               	movwf	fsr1l
 20507  2107  083C               	movf	(settimeout@longshort+1),w
 20508  2108  0087               	movwf	fsr1h
 20509                           
 20510  2109  082F               	movf	(settimeout@timout),w
 20511  210A  0781               	addwf	indf1,f
 20512  210B  3141               	addfsr	fsr1,1
 20513  210C  0830               	movf	(settimeout@timout+1),w
 20514  210D  3D81               	addwfc	indf1,f
 20515  210E  3141               	addfsr	fsr1,1
 20516  210F  0831               	movf	(settimeout@timout+2),w
 20517  2110  3D81               	addwfc	indf1,f
 20518  2111  3141               	addfsr	fsr1,1
 20519  2112  0832               	movf	(settimeout@timout+3),w
 20520  2113  3D81               	addwfc	indf1,f
 20521                           
 20522                           	line	100
 20523                           ;timer.c: 100: if (longshort->ls_longTicks <= tempLongTicks)
 20524  2114  083B               	movf	(settimeout@longshort),w
 20525  2115  0086               	movwf	fsr1l
 20526  2116  083C               	movf	(settimeout@longshort+1),w
 20527  2117  0087               	movwf	fsr1h
 20528                           
 20529  2118  3F40               	moviw	[0]fsr1
 20530  2119  00B3               	movwf	((??_settimeout+0)+0+0)
 20531  211A  3F41               	moviw	[1]fsr1
 20532  211B  00B4               	movwf	((??_settimeout+0)+0+1)
 20533  211C  3F42               	moviw	[2]fsr1
 20534  211D  00B5               	movwf	((??_settimeout+0)+0+2)
 20535  211E  3F43               	moviw	[3]fsr1
 20536  211F  00B6               	movwf	((??_settimeout+0)+0+3)
 20537  2120  0836               	movf	3+(??_settimeout+0)+0,w
 20538  2121  023A               	subwf	(settimeout@tempLongTicks+3),w
 20539  2122  1D03               	skipz
 20540  2123  292E               	goto	u10325
 20541  2124  0835               	movf	2+(??_settimeout+0)+0,w
 20542  2125  0239               	subwf	(settimeout@tempLongTicks+2),w
 20543  2126  1D03               	skipz
 20544  2127  292E               	goto	u10325
 20545  2128  0834               	movf	1+(??_settimeout+0)+0,w
 20546  2129  0238               	subwf	(settimeout@tempLongTicks+1),w
 20547  212A  1D03               	skipz
 20548  212B  292E               	goto	u10325
 20549  212C  0833               	movf	0+(??_settimeout+0)+0,w
 20550  212D  0237               	subwf	(settimeout@tempLongTicks),w
 20551  212E                     u10325:
 20552  212E  1C03               	skipc
 20553  212F  2931               	goto	u10321
 20554  2130  2932               	goto	u10320
 20555  2131                     u10321:
 20556  2131  2942               	goto	l21357
 20557  2132                     u10320:
 20558                           	line	101
 20559                           	
 20560  2132                     l37369:	
 20561                           ;timer.c: 101: longshort->ms_shortTicks++;
 20562  2132  083B               	movf	(settimeout@longshort),w
 20563  2133  3E04               	addlw	low(04h)
 20564  2134  00B3               	movwf	(??_settimeout+0)+0
 20565  2135  3000               	movlw	high(04h)
 20566  2136  3D3C               	addwfc	(settimeout@longshort+1),w
 20567  2137  00B4               	movwf	1+(??_settimeout+0)+0
 20568  2138  0833               	movf	0+(??_settimeout+0)+0,w
 20569  2139  0086               	movwf	fsr1l
 20570  213A  0834               	movf	1+(??_settimeout+0)+0,w
 20571  213B  0087               	movwf	fsr1h
 20572                           
 20573  213C  3001               	movlw	01h
 20574  213D  0781               	addwf	indf1,f
 20575  213E  3141               	addfsr	fsr1,1
 20576  213F  1803               	skipnc
 20577  2140  0A81               	incf	indf1,f
 20578  2141  2942               	goto	l21357
 20579                           	
 20580  2142                     l21358:	
 20581                           	line	102
 20582                           	
 20583  2142                     l21357:	
 20584  2142  0008               	return
 20585                           	opt stack 0
 20586                           GLOBAL	__end_of_settimeout
 20587  2143                     	__end_of_settimeout:
 20588 ;; =============== function _settimeout ends ============
 20589                           
 20590                           	signat	_settimeout,8312
 20591                           	global	_get_instruction
 20592                           psect	text3292,local,class=CODE,delta=2
 20593                           global __ptext3292
 20594  28F3                     __ptext3292:
 20595                           
 20596 ;; *************** function _get_instruction *****************
 20597 ;; Defined at:
 20598 ;;		line 457 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;  instruction     1    wreg     PTR struct instruction
 20601 ;;		 -> cur_instruction(3), 
 20602 ;; Auto vars:     Size  Location     Type
 20603 ;;  instruction     1    4[BANK0 ] PTR struct instruction
 20604 ;;		 -> cur_instruction(3), 
 20605 ;; Return value:  Size  Location     Type
 20606 ;;                  1    wreg      unsigned char 
 20607 ;; Registers used:
 20608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20609 ;; Tracked objects:
 20610 ;;		On entry : 0/0
 20611 ;;		On exit  : 0/0
 20612 ;;		Unchanged: 0/0
 20613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20618 ;;Total ram usage:        1 bytes
 20619 ;; Hardware stack levels used:    1
 20620 ;; Hardware stack levels required when called:    3
 20621 ;; This function calls:
 20622 ;;		_romwashprogram_getins
 20623 ;; This function is called by:
 20624 ;;		_litterlanguage_work
 20625 ;; This function uses a non-reentrant model
 20626 ;;
 20627                           psect	text3292
 20628                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20629                           	line	457
 20630                           	global	__size_of_get_instruction
 20631  0013                     	__size_of_get_instruction	equ	__end_of_get_instruction-_get_instruction
 20632                           	
 20633  28F3                     _get_instruction:	
 20634                           	opt	stack 11
 20635                           ; Regs used in _get_instruction: [wreg-status,0+pclath+cstack]
 20636                           ;get_instruction@instruction stored from wreg
 20637  28F3  0020               	movlb 0	; select bank0
 20638  28F4  00A5               	movwf	(get_instruction@instruction)
 20639                           	line	458
 20640                           	
 20641  28F5                     l37349:	
 20642                           ;litterlanguage.c: 458: switch (prg_source) {
 20643  28F5  28FF               	goto	l37357
 20644                           	line	459
 20645                           ;litterlanguage.c: 459: default:
 20646                           	
 20647  28F6                     l4345:	
 20648  28F6  28F7               	goto	l37351
 20649                           	line	460
 20650                           ;litterlanguage.c: 460: case 0:
 20651                           	
 20652  28F7                     l4346:	
 20653                           	line	461
 20654                           	
 20655  28F7                     l37351:	
 20656                           ;litterlanguage.c: 461: return romwashprogram_getins(instruction);
 20657  28F7  0020               	movlb 0	; select bank0
 20658  28F8  0825               	movf	(get_instruction@instruction),w
 20659  28F9  31A9  215F  31A8   	fcall	_romwashprogram_getins
 20660  28FC  2905               	goto	l4347
 20661                           	
 20662  28FD                     l37353:	
 20663  28FD  2905               	goto	l4347
 20664                           	line	462
 20665                           	
 20666  28FE                     l37355:	
 20667                           ;litterlanguage.c: 462: }
 20668  28FE  2905               	goto	l4347
 20669                           	line	458
 20670                           	
 20671  28FF                     l4344:	
 20672                           	
 20673  28FF                     l37357:	
 20674  28FF  0021               	movlb 1	; select bank1
 20675  2900  085A               	movf	(_prg_source)^080h,w
 20676                           	; Switch size 1, requested type "space"
 20677                           ; Number of cases is 1, Range of values is 0 to 0
 20678                           ; switch strategies available:
 20679                           ; Name         Instructions Cycles
 20680                           ; simple_byte            4     3 (average)
 20681                           ; direct_byte            8     6 (fixed)
 20682                           ; jumptable            260     6 (fixed)
 20683                           ; rangetable             5     4 (fixed)
 20684                           ; spacedrange            7     6 (fixed)
 20685                           ; locatedrange           1     3 (fixed)
 20686                           ;	Chosen strategy is simple_byte
 20687                           
 20688                           	opt asmopt_off
 20689  2901  3A00               	xorlw	0^0	; case 0
 20690  2902  1903               	skipnz
 20691  2903  28F7               	goto	l37351
 20692  2904  28F7               	goto	l37351
 20693                           	opt asmopt_on
 20694                           
 20695                           	line	462
 20696                           	
 20697  2905                     l4348:	
 20698                           	line	463
 20699                           	
 20700  2905                     l4347:	
 20701  2905  0008               	return
 20702                           	opt stack 0
 20703                           GLOBAL	__end_of_get_instruction
 20704  2906                     	__end_of_get_instruction:
 20705 ;; =============== function _get_instruction ends ============
 20706                           
 20707                           	signat	_get_instruction,4217
 20708                           	global	_req_instruction
 20709                           psect	text3293,local,class=CODE,delta=2
 20710                           global __ptext3293
 20711  28E0                     __ptext3293:
 20712                           
 20713 ;; *************** function _req_instruction *****************
 20714 ;; Defined at:
 20715 ;;		line 449 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20716 ;; Parameters:    Size  Location     Type
 20717 ;;  instruction     2    2[BANK0 ] PTR const struct instruc
 20718 ;;		 -> cleanupprogram(36), washprogram(303), cur_instruction(3), ROM(16384), 
 20719 ;; Auto vars:     Size  Location     Type
 20720 ;;		None
 20721 ;; Return value:  Size  Location     Type
 20722 ;;		None               void
 20723 ;; Registers used:
 20724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20725 ;; Tracked objects:
 20726 ;;		On entry : 0/0
 20727 ;;		On exit  : 0/0
 20728 ;;		Unchanged: 0/0
 20729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20733 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20734 ;;Total ram usage:        2 bytes
 20735 ;; Hardware stack levels used:    1
 20736 ;; Hardware stack levels required when called:    3
 20737 ;; This function calls:
 20738 ;;		_romwashprogram_reqins
 20739 ;; This function is called by:
 20740 ;;		_litterlanguage_work
 20741 ;; This function uses a non-reentrant model
 20742 ;;
 20743                           psect	text3293
 20744                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20745                           	line	449
 20746                           	global	__size_of_req_instruction
 20747  0013                     	__size_of_req_instruction	equ	__end_of_req_instruction-_req_instruction
 20748                           	
 20749  28E0                     _req_instruction:	
 20750                           	opt	stack 11
 20751                           ; Regs used in _req_instruction: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20752                           	line	450
 20753                           	
 20754  28E0                     l37343:	
 20755                           ;litterlanguage.c: 450: switch (prg_source) {
 20756  28E0  28EC               	goto	l37347
 20757                           	line	451
 20758                           ;litterlanguage.c: 451: case 0:
 20759                           	
 20760  28E1                     l4339:	
 20761                           	line	452
 20762                           	
 20763  28E1                     l37345:	
 20764                           ;litterlanguage.c: 452: romwashprogram_reqins(instruction);
 20765  28E1  0020               	movlb 0	; select bank0
 20766  28E2  0824               	movf	(req_instruction@instruction+1),w
 20767  28E3  01A2               	clrf	(?_romwashprogram_reqins+1)
 20768  28E4  07A2               	addwf	(?_romwashprogram_reqins+1)
 20769  28E5  0823               	movf	(req_instruction@instruction),w
 20770  28E6  01A1               	clrf	(?_romwashprogram_reqins)
 20771  28E7  07A1               	addwf	(?_romwashprogram_reqins)
 20772                           
 20773  28E8  31B7  27AD  31A8   	fcall	_romwashprogram_reqins
 20774                           	line	453
 20775                           ;litterlanguage.c: 453: }
 20776  28EB  28F2               	goto	l4341
 20777                           	line	450
 20778                           	
 20779  28EC                     l4338:	
 20780                           	
 20781  28EC                     l37347:	
 20782  28EC  0021               	movlb 1	; select bank1
 20783  28ED  085A               	movf	(_prg_source)^080h,w
 20784                           	; Switch size 1, requested type "space"
 20785                           ; Number of cases is 1, Range of values is 0 to 0
 20786                           ; switch strategies available:
 20787                           ; Name         Instructions Cycles
 20788                           ; simple_byte            4     3 (average)
 20789                           ; direct_byte            8     6 (fixed)
 20790                           ; jumptable            260     6 (fixed)
 20791                           ; rangetable             5     4 (fixed)
 20792                           ; spacedrange            7     6 (fixed)
 20793                           ; locatedrange           1     3 (fixed)
 20794                           ;	Chosen strategy is simple_byte
 20795                           
 20796                           	opt asmopt_off
 20797  28EE  3A00               	xorlw	0^0	; case 0
 20798  28EF  1903               	skipnz
 20799  28F0  28E1               	goto	l37345
 20800  28F1  28F2               	goto	l4341
 20801                           	opt asmopt_on
 20802                           
 20803                           	line	453
 20804                           	
 20805  28F2                     l4340:	
 20806                           	line	454
 20807                           	
 20808  28F2                     l4341:	
 20809  28F2  0008               	return
 20810                           	opt stack 0
 20811                           GLOBAL	__end_of_req_instruction
 20812  28F3                     	__end_of_req_instruction:
 20813 ;; =============== function _req_instruction ends ============
 20814                           
 20815                           	signat	_req_instruction,4216
 20816                           	global	_timeoutexpired
 20817                           psect	text3294,local,class=CODE,delta=2
 20818                           global __ptext3294
 20819  235B                     __ptext3294:
 20820                           
 20821 ;; *************** function _timeoutexpired *****************
 20822 ;; Defined at:
 20823 ;;		line 170 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;  timer_p         2    8[BANK0 ] const PTR const struct t
 20826 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 20827 ;;		 -> pacers(55), debouncers(42), cattimer(6), autotimer(6), 
 20828 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 20829 ;;		 -> timer_fill(6), timer_waitins(6), 
 20830 ;; Auto vars:     Size  Location     Type
 20831 ;;  currentTime     6   16[BANK0 ] struct timer
 20832 ;; Return value:  Size  Location     Type
 20833 ;;                  1    wreg      unsigned char 
 20834 ;; Registers used:
 20835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20836 ;; Tracked objects:
 20837 ;;		On entry : 0/0
 20838 ;;		On exit  : 0/0
 20839 ;;		Unchanged: 0/0
 20840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20842 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20843 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20844 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 20845 ;;Total ram usage:       14 bytes
 20846 ;; Hardware stack levels used:    1
 20847 ;; Hardware stack levels required when called:    3
 20848 ;; This function calls:
 20849 ;;		_gettimestamp
 20850 ;; This function is called by:
 20851 ;;		_litterlanguage_work
 20852 ;;		_wait_instruction
 20853 ;;		_userinterface_work
 20854 ;;		_catgenie_work
 20855 ;;		_catsensor_work
 20856 ;;		_rtc_work
 20857 ;;		_water_work
 20858 ;; This function uses a non-reentrant model
 20859 ;;
 20860                           psect	text3294
 20861                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20862                           	line	170
 20863                           	global	__size_of_timeoutexpired
 20864  0074                     	__size_of_timeoutexpired	equ	__end_of_timeoutexpired-_timeoutexpired
 20865                           	
 20866  235B                     _timeoutexpired:	
 20867                           	opt	stack 10
 20868                           ; Regs used in _timeoutexpired: [wreg+fsr1l-status,0+pclath+cstack]
 20869                           	line	174
 20870                           	
 20871  235B                     l37315:	
 20872                           ;timer.c: 171: struct timer currentTime;
 20873                           ;timer.c: 174: gettimestamp (&currentTime);
 20874  235B  3031               	movlw	(timeoutexpired@currentTime&0ffh)
 20875  235C  0020               	movlb 0	; select bank0
 20876  235D  00A1               	movwf	(?_gettimestamp)
 20877  235E  3000               	movlw	0x0/2
 20878  235F  00A2               	movwf	(?_gettimestamp+1)
 20879  2360  31AD  25AA  31A3   	fcall	_gettimestamp
 20880                           	line	176
 20881                           	
 20882  2363                     l37317:	
 20883                           ;timer.c: 176: if (currentTime.overflows == timer_p->overflows) {
 20884  2363  0020               	movlb 0	; select bank0
 20885  2364  0829               	movf	(timeoutexpired@timer_p),w
 20886  2365  3E02               	addlw	low(02h)
 20887  2366  00AB               	movwf	(??_timeoutexpired+0)+0
 20888  2367  3000               	movlw	high(02h)
 20889  2368  3D2A               	addwfc	(timeoutexpired@timer_p+1),w
 20890  2369  00AC               	movwf	1+(??_timeoutexpired+0)+0
 20891  236A  082B               	movf	0+(??_timeoutexpired+0)+0,w
 20892  236B  0086               	movwf	fsr1l
 20893  236C  082C               	movf	1+(??_timeoutexpired+0)+0,w
 20894  236D  0087               	movwf	fsr1h
 20895                           
 20896  236E  3F40               	moviw	[0]fsr1
 20897  236F  00AD               	movwf	((??_timeoutexpired+2)+0+0)
 20898  2370  3F41               	moviw	[1]fsr1
 20899  2371  00AE               	movwf	((??_timeoutexpired+2)+0+1)
 20900  2372  3F42               	moviw	[2]fsr1
 20901  2373  00AF               	movwf	((??_timeoutexpired+2)+0+2)
 20902  2374  3F43               	moviw	[3]fsr1
 20903  2375  00B0               	movwf	((??_timeoutexpired+2)+0+3)
 20904  2376  0830               	movf	3+(??_timeoutexpired+2)+0,w
 20905  2377  0636               	xorwf	3+(timeoutexpired@currentTime)+02h,w
 20906  2378  1D03               	skipz
 20907  2379  2B84               	goto	u10285
 20908  237A  082F               	movf	2+(??_timeoutexpired+2)+0,w
 20909  237B  0635               	xorwf	2+(timeoutexpired@currentTime)+02h,w
 20910  237C  1D03               	skipz
 20911  237D  2B84               	goto	u10285
 20912  237E  082E               	movf	1+(??_timeoutexpired+2)+0,w
 20913  237F  0634               	xorwf	1+(timeoutexpired@currentTime)+02h,w
 20914  2380  1D03               	skipz
 20915  2381  2B84               	goto	u10285
 20916  2382  082D               	movf	0+(??_timeoutexpired+2)+0,w
 20917  2383  0633               	xorwf	0+(timeoutexpired@currentTime)+02h,w
 20918  2384                     u10285:
 20919  2384  1D03               	skipz
 20920  2385  2B87               	goto	u10281
 20921  2386  2B88               	goto	u10280
 20922  2387                     u10281:
 20923  2387  2BA2               	goto	l37331
 20924  2388                     u10280:
 20925                           	line	177
 20926                           	
 20927  2388                     l37319:	
 20928                           ;timer.c: 177: if (currentTime.timer1 >= timer_p->timer1)
 20929  2388  0829               	movf	(timeoutexpired@timer_p),w
 20930  2389  0086               	movwf	fsr1l
 20931  238A  082A               	movf	(timeoutexpired@timer_p+1),w
 20932  238B  0087               	movwf	fsr1h
 20933                           
 20934  238C  3F40               	moviw	[0]fsr1
 20935  238D  00AB               	movwf	(??_timeoutexpired+0)+0
 20936  238E  3F41               	moviw	[1]fsr1
 20937  238F  00AC               	movwf	(??_timeoutexpired+0)+0+1
 20938  2390  082C               	movf	1+(??_timeoutexpired+0)+0,w
 20939  2391  0232               	subwf	(timeoutexpired@currentTime+1),w
 20940  2392  1D03               	skipz
 20941  2393  2B96               	goto	u10295
 20942  2394  082B               	movf	0+(??_timeoutexpired+0)+0,w
 20943  2395  0231               	subwf	(timeoutexpired@currentTime),w
 20944  2396                     u10295:
 20945  2396  1C03               	skipc
 20946  2397  2B99               	goto	u10291
 20947  2398  2B9A               	goto	u10290
 20948  2399                     u10291:
 20949  2399  2B9E               	goto	l37327
 20950  239A                     u10290:
 20951                           	line	178
 20952                           	
 20953  239A                     l37321:	
 20954                           ;timer.c: 178: return 1;
 20955  239A  3001               	movlw	(01h)
 20956  239B  2BCE               	goto	l21374
 20957                           	
 20958  239C                     l37323:	
 20959  239C  2BCE               	goto	l21374
 20960                           	
 20961  239D                     l37325:	
 20962  239D  2BCE               	goto	l21374
 20963                           	line	179
 20964                           	
 20965  239E                     l21373:	
 20966                           	line	180
 20967                           	
 20968  239E                     l37327:	
 20969                           ;timer.c: 179: else
 20970                           ;timer.c: 180: return 0;
 20971  239E  3000               	movlw	(0)
 20972  239F  2BCE               	goto	l21374
 20973                           	
 20974  23A0                     l37329:	
 20975  23A0  2BCE               	goto	l21374
 20976                           	
 20977  23A1                     l21375:	
 20978                           	line	181
 20979                           ;timer.c: 181: } else {
 20980  23A1  2BCE               	goto	l21374
 20981                           	
 20982  23A2                     l21372:	
 20983                           	line	182
 20984                           	
 20985  23A2                     l37331:	
 20986                           ;timer.c: 182: if (currentTime.overflows > timer_p->overflows)
 20987  23A2  0829               	movf	(timeoutexpired@timer_p),w
 20988  23A3  3E02               	addlw	low(02h)
 20989  23A4  00AB               	movwf	(??_timeoutexpired+0)+0
 20990  23A5  3000               	movlw	high(02h)
 20991  23A6  3D2A               	addwfc	(timeoutexpired@timer_p+1),w
 20992  23A7  00AC               	movwf	1+(??_timeoutexpired+0)+0
 20993  23A8  082B               	movf	0+(??_timeoutexpired+0)+0,w
 20994  23A9  0086               	movwf	fsr1l
 20995  23AA  082C               	movf	1+(??_timeoutexpired+0)+0,w
 20996  23AB  0087               	movwf	fsr1h
 20997                           
 20998  23AC  3F40               	moviw	[0]fsr1
 20999  23AD  00AD               	movwf	((??_timeoutexpired+2)+0+0)
 21000  23AE  3F41               	moviw	[1]fsr1
 21001  23AF  00AE               	movwf	((??_timeoutexpired+2)+0+1)
 21002  23B0  3F42               	moviw	[2]fsr1
 21003  23B1  00AF               	movwf	((??_timeoutexpired+2)+0+2)
 21004  23B2  3F43               	moviw	[3]fsr1
 21005  23B3  00B0               	movwf	((??_timeoutexpired+2)+0+3)
 21006  23B4  0836               	movf	3+(timeoutexpired@currentTime)+02h,w
 21007  23B5  0230               	subwf	3+(??_timeoutexpired+2)+0,w
 21008  23B6  1D03               	skipz
 21009  23B7  2BC2               	goto	u10305
 21010  23B8  0835               	movf	2+(timeoutexpired@currentTime)+02h,w
 21011  23B9  022F               	subwf	2+(??_timeoutexpired+2)+0,w
 21012  23BA  1D03               	skipz
 21013  23BB  2BC2               	goto	u10305
 21014  23BC  0834               	movf	1+(timeoutexpired@currentTime)+02h,w
 21015  23BD  022E               	subwf	1+(??_timeoutexpired+2)+0,w
 21016  23BE  1D03               	skipz
 21017  23BF  2BC2               	goto	u10305
 21018  23C0  0833               	movf	0+(timeoutexpired@currentTime)+02h,w
 21019  23C1  022D               	subwf	0+(??_timeoutexpired+2)+0,w
 21020  23C2                     u10305:
 21021  23C2  1803               	skipnc
 21022  23C3  2BC5               	goto	u10301
 21023  23C4  2BC6               	goto	u10300
 21024  23C5                     u10301:
 21025  23C5  2BCA               	goto	l37339
 21026  23C6                     u10300:
 21027                           	line	183
 21028                           	
 21029  23C6                     l37333:	
 21030                           ;timer.c: 183: return 1;
 21031  23C6  3001               	movlw	(01h)
 21032  23C7  2BCE               	goto	l21374
 21033                           	
 21034  23C8                     l37335:	
 21035  23C8  2BCE               	goto	l21374
 21036                           	
 21037  23C9                     l37337:	
 21038  23C9  2BCE               	goto	l21374
 21039                           	line	184
 21040                           	
 21041  23CA                     l21377:	
 21042                           	line	185
 21043                           	
 21044  23CA                     l37339:	
 21045                           ;timer.c: 184: else
 21046                           ;timer.c: 185: return 0;
 21047  23CA  3000               	movlw	(0)
 21048  23CB  2BCE               	goto	l21374
 21049                           	
 21050  23CC                     l37341:	
 21051  23CC  2BCE               	goto	l21374
 21052                           	
 21053  23CD                     l21378:	
 21054  23CD  2BCE               	goto	l21374
 21055                           	line	186
 21056                           	
 21057  23CE                     l21376:	
 21058                           	line	187
 21059                           	
 21060  23CE                     l21374:	
 21061  23CE  0008               	return
 21062                           	opt stack 0
 21063                           GLOBAL	__end_of_timeoutexpired
 21064  23CF                     	__end_of_timeoutexpired:
 21065 ;; =============== function _timeoutexpired ends ============
 21066                           
 21067                           	signat	_timeoutexpired,4217
 21068                           	global	_printf
 21069                           psect	text3295,local,class=CODE,delta=2
 21070                           global __ptext3295
 21071  14A0                     __ptext3295:
 21072                           
 21073 ;; *************** function _printf *****************
 21074 ;; Defined at:
 21075 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
 21076 ;; Parameters:    Size  Location     Type
 21077 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 21078 ;;		 -> STR_113(17), STR_112(4), STR_111(17), STR_108(10), 
 21079 ;;		 -> STR_105(22), STR_104(15), STR_103(17), STR_102(11), 
 21080 ;;		 -> STR_101(14), STR_100(3), STR_99(3), STR_98(13), 
 21081 ;;		 -> STR_95(8), STR_94(18), STR_93(10), STR_92(12), 
 21082 ;;		 -> STR_91(20), STR_90(2), STR_89(18), STR_88(22), 
 21083 ;;		 -> STR_87(8), STR_86(19), STR_85(17), STR_82(24), 
 21084 ;;		 -> STR_79(20), STR_76(20), STR_73(17), STR_68(20), 
 21085 ;;		 -> STR_67(19), STR_62(16), STR_61(11), STR_60(10), 
 21086 ;;		 -> STR_55(15), STR_54(11), STR_53(9), STR_48(16), 
 21087 ;;		 -> STR_44(12), STR_40(13), STR_39(12), STR_36(21), 
 21088 ;;		 -> STR_35(14), STR_34(9), STR_33(8), STR_30(10), 
 21089 ;;		 -> STR_29(18), STR_28(18), STR_27(16), STR_24(21), 
 21090 ;;		 -> STR_23(2), STR_22(17), STR_21(15), STR_18(14), 
 21091 ;;		 -> STR_17(12), STR_16(15), STR_15(14), STR_14(20), 
 21092 ;;		 -> STR_13(9), STR_12(5), STR_11(7), STR_10(6), 
 21093 ;;		 -> STR_9(8), STR_8(19), STR_7(19), STR_6(11), 
 21094 ;;		 -> STR_5(19), STR_4(16), STR_3(17), STR_2(16), 
 21095 ;;		 -> STR_1(20), 
 21096 ;; Auto vars:     Size  Location     Type
 21097 ;;  _val            4   34[BANK0 ] struct .
 21098 ;;  width           2   30[BANK0 ] int 
 21099 ;;  c               1   33[BANK0 ] char 
 21100 ;;  prec            1   32[BANK0 ] char 
 21101 ;;  flag            1   29[BANK0 ] unsigned char 
 21102 ;;  ap              1   28[BANK0 ] PTR void [1]
 21103 ;;		 -> ?_printf(2), 
 21104 ;; Return value:  Size  Location     Type
 21105 ;;                  2   14[BANK0 ] int 
 21106 ;; Registers used:
 21107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21108 ;; Tracked objects:
 21109 ;;		On entry : 0/0
 21110 ;;		On exit  : 0/0
 21111 ;;		Unchanged: 0/0
 21112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21113 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 21114 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 21115 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21116 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0
 21117 ;;Total ram usage:       24 bytes
 21118 ;; Hardware stack levels used:    1
 21119 ;; Hardware stack levels required when called:    3
 21120 ;; This function calls:
 21121 ;;		_putch
 21122 ;;		_isdigit
 21123 ;;		___wmul
 21124 ;;		___bmul
 21125 ;;		___lwdiv
 21126 ;;		___lwmod
 21127 ;; This function is called by:
 21128 ;;		_main
 21129 ;;		_litterlanguage_init
 21130 ;;		_litterlanguage_work
 21131 ;;		_litterlanguage_start
 21132 ;;		_litterlanguage_pause
 21133 ;;		_litterlanguage_stop
 21134 ;;		_watersensor_event
 21135 ;;		_litterlanguage_cleanup
 21136 ;;		_exe_instruction
 21137 ;;		_userinterface_work
 21138 ;;		_catsensor_event
 21139 ;;		_set_mode
 21140 ;;		_cmdline_init
 21141 ;;		_proc_char
 21142 ;;		_proc_line
 21143 ;;		_echo
 21144 ;;		_help
 21145 ;;		_printtime
 21146 ;; This function uses a non-reentrant model
 21147 ;;
 21148                           psect	text3295
 21149                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
 21150                           	line	461
 21151                           	global	__size_of_printf
 21152  0360                     	__size_of_printf	equ	__end_of_printf-_printf
 21153                           	
 21154  14A0                     _printf:	
 21155                           	opt	stack 8
 21156                           ; Regs used in _printf: [wreg-status,0+pclath+cstack]
 21157                           	line	537
 21158                           	
 21159  14A0                     l37121:	
 21160  14A0  3031               	movlw	(?_printf+02h)&0ffh
 21161  14A1  0020               	movlb 0	; select bank0
 21162  14A2  00B9               	movwf	(??_printf+0)+0
 21163  14A3  0839               	movf	(??_printf+0)+0,w
 21164  14A4  00BD               	movwf	(printf@ap)
 21165                           	line	540
 21166  14A5  2FE7               	goto	l37313
 21167                           	
 21168  14A6                     l23510:	
 21169                           	line	542
 21170                           	
 21171  14A6                     l37123:	
 21172  14A6  0842               	movf	(printf@c),w
 21173  14A7  3A25               	xorlw	025h&0ffh
 21174  14A8  1903               	skipnz
 21175  14A9  2CAB               	goto	u9911
 21176  14AA  2CAC               	goto	u9910
 21177  14AB                     u9911:
 21178  14AB  2CB1               	goto	l37127
 21179  14AC                     u9910:
 21180                           	line	545
 21181                           	
 21182  14AC                     l37125:	
 21183  14AC  0842               	movf	(printf@c),w
 21184  14AD  31AB  2368  3194   	fcall	_putch
 21185                           	line	546
 21186  14B0  2FE7               	goto	l37313
 21187                           	line	547
 21188                           	
 21189  14B1                     l23511:	
 21190                           	line	550
 21191                           	
 21192  14B1                     l37127:	
 21193  14B1  0020               	movlb 0	; select bank0
 21194  14B2  01BF               	clrf	(printf@width)
 21195  14B3  01C0               	clrf	(printf@width+1)
 21196                           	line	552
 21197                           	
 21198  14B4                     l37129:	
 21199  14B4  01BE               	clrf	(printf@flag)
 21200  14B5  2CBE               	goto	l37135
 21201                           	line	554
 21202                           	
 21203  14B6                     l23512:	
 21204                           	line	555
 21205  14B6  2CBE               	goto	l37135
 21206                           	line	583
 21207                           	
 21208  14B7                     l23514:	
 21209                           	line	584
 21210  14B7  153E               	bsf	(printf@flag)+(2/8),(2)&7
 21211                           	line	585
 21212                           	
 21213  14B8                     l37131:	
 21214  14B8  3001               	movlw	low(01h)
 21215  14B9  07AF               	addwf	(printf@f),f
 21216  14BA  3000               	movlw	high(01h)
 21217  14BB  3DB0               	addwfc	(printf@f+1),f
 21218                           	line	586
 21219  14BC  2CBE               	goto	l37135
 21220                           	line	588
 21221                           	
 21222  14BD                     l37133:	
 21223  14BD  2CC9               	goto	l37137
 21224                           	line	555
 21225                           	
 21226  14BE                     l23513:	
 21227                           	
 21228  14BE                     l37135:	
 21229  14BE  082F               	movf	(printf@f),w
 21230  14BF  0084               	movwf	fsr0l
 21231  14C0  0830               	movf	((printf@f+1)),w
 21232  14C1  0085               	movwf	fsr0h
 21233  14C2  0800               	movf	indf0,w ;code access
 21234                           	; Switch size 1, requested type "space"
 21235                           ; Number of cases is 1, Range of values is 48 to 48
 21236                           ; switch strategies available:
 21237                           ; Name         Instructions Cycles
 21238                           ; simple_byte            4     3 (average)
 21239                           ; direct_byte           11     9 (fixed)
 21240                           ; jumptable            263     9 (fixed)
 21241                           ;	Chosen strategy is simple_byte
 21242                           
 21243                           	opt asmopt_off
 21244  14C3  3A30               	xorlw	48^0	; case 48
 21245  14C4  1903               	skipnz
 21246  14C5  2CB7               	goto	l23514
 21247  14C6  2CC9               	goto	l37137
 21248                           	opt asmopt_on
 21249                           
 21250                           	line	588
 21251                           	
 21252  14C7                     l23516:	
 21253                           	line	589
 21254  14C7  2CC9               	goto	l37137
 21255                           	line	590
 21256                           	
 21257  14C8                     l23515:	
 21258  14C8  2CBE               	goto	l37135
 21259                           	
 21260  14C9                     l23517:	
 21261                           	line	601
 21262                           	
 21263  14C9                     l37137:	
 21264  14C9  082F               	movf	(printf@f),w
 21265  14CA  0084               	movwf	fsr0l
 21266  14CB  0830               	movf	((printf@f+1)),w
 21267  14CC  0085               	movwf	fsr0h
 21268  14CD  0800               	movf	indf0,w ;code access
 21269  14CE  31A9  2131  3194   	fcall	_isdigit
 21270  14D1  1C03               	btfss	status,0
 21271  14D2  2CD4               	goto	u9921
 21272  14D3  2CD5               	goto	u9920
 21273  14D4                     u9921:
 21274  14D4  2D0D               	goto	l37147
 21275  14D5                     u9920:
 21276                           	line	602
 21277                           	
 21278  14D5                     l37139:	
 21279  14D5  0020               	movlb 0	; select bank0
 21280  14D6  01BF               	clrf	(printf@width)
 21281  14D7  01C0               	clrf	(printf@width+1)
 21282  14D8  2CD9               	goto	l37141
 21283                           	line	603
 21284                           	
 21285  14D9                     l23519:	
 21286                           	line	604
 21287                           	
 21288  14D9                     l37141:	
 21289  14D9  0020               	movlb 0	; select bank0
 21290  14DA  082F               	movf	(printf@f),w
 21291  14DB  0084               	movwf	fsr0l
 21292  14DC  0830               	movf	((printf@f+1)),w
 21293  14DD  0085               	movwf	fsr0h
 21294  14DE  0800               	movf	indf0,w ;code access
 21295  14DF  00B9               	movwf	(??_printf+0)+0
 21296  14E0  01BA               	clrf	(??_printf+0)+0+1
 21297  14E1  0840               	movf	(printf@width+1),w
 21298  14E2  01A2               	clrf	(?___wmul+1)
 21299  14E3  07A2               	addwf	(?___wmul+1)
 21300  14E4  083F               	movf	(printf@width),w
 21301  14E5  01A1               	clrf	(?___wmul)
 21302  14E6  07A1               	addwf	(?___wmul)
 21303                           
 21304  14E7  300A               	movlw	low(0Ah)
 21305  14E8  00A3               	movwf	0+(?___wmul)+02h
 21306  14E9  3000               	movlw	high(0Ah)
 21307  14EA  00A4               	movwf	(0+(?___wmul)+02h)+1
 21308  14EB  31AA  22CA  3194   	fcall	___wmul
 21309  14EE  0020               	movlb 0	; select bank0
 21310  14EF  0839               	movf	0+(??_printf+0)+0,w
 21311  14F0  0721               	addwf	(0+(?___wmul)),w
 21312  14F1  00BB               	movwf	(??_printf+2)+0
 21313  14F2  083A               	movf	1+(??_printf+0)+0,w
 21314  14F3  3D22               	addwfc	(1+(?___wmul)),w
 21315  14F4  00BC               	movwf	1+(??_printf+2)+0
 21316  14F5  083B               	movf	0+(??_printf+2)+0,w
 21317  14F6  3ED0               	addlw	low(0FFD0h)
 21318  14F7  00BF               	movwf	(printf@width)
 21319  14F8  30FF               	movlw	high(0FFD0h)
 21320  14F9  3D3C               	addwfc	1+(??_printf+2)+0,w
 21321  14FA  00C0               	movwf	1+(printf@width)
 21322                           	
 21323  14FB                     l37143:	
 21324  14FB  3001               	movlw	low(01h)
 21325  14FC  07AF               	addwf	(printf@f),f
 21326  14FD  3000               	movlw	high(01h)
 21327  14FE  3DB0               	addwfc	(printf@f+1),f
 21328                           	line	605
 21329                           	
 21330  14FF                     l37145:	
 21331  14FF  082F               	movf	(printf@f),w
 21332  1500  0084               	movwf	fsr0l
 21333  1501  0830               	movf	((printf@f+1)),w
 21334  1502  0085               	movwf	fsr0h
 21335  1503  0800               	movf	indf0,w ;code access
 21336  1504  31A9  2131  3194   	fcall	_isdigit
 21337  1507  1803               	btfsc	status,0
 21338  1508  2D0A               	goto	u9931
 21339  1509  2D0B               	goto	u9930
 21340  150A                     u9931:
 21341  150A  2CD9               	goto	l37141
 21342  150B                     u9930:
 21343  150B  2D0D               	goto	l37147
 21344                           	
 21345  150C                     l23520:	
 21346  150C  2D0D               	goto	l37147
 21347                           	line	611
 21348                           	
 21349  150D                     l23518:	
 21350                           	line	614
 21351                           	
 21352  150D                     l37147:	
 21353  150D  0020               	movlb 0	; select bank0
 21354  150E  082F               	movf	(printf@f),w
 21355  150F  0084               	movwf	fsr0l
 21356  1510  0830               	movf	((printf@f+1)),w
 21357  1511  0085               	movwf	fsr0h
 21358  1512  0800               	movf	indf0,w ;code access
 21359  1513  3A2E               	xorlw	02Eh
 21360  1514  1D03               	skipz
 21361  1515  2D17               	goto	u9941
 21362  1516  2D18               	goto	u9940
 21363  1517                     u9941:
 21364  1517  2D46               	goto	l23521
 21365  1518                     u9940:
 21366                           	line	616
 21367                           	
 21368  1518                     l37149:	
 21369  1518  3001               	movlw	low(01h)
 21370  1519  07AF               	addwf	(printf@f),f
 21371  151A  3000               	movlw	high(01h)
 21372  151B  3DB0               	addwfc	(printf@f+1),f
 21373                           	line	624
 21374                           	
 21375  151C                     l37151:	
 21376  151C  01C1               	clrf	(printf@prec)
 21377                           	line	625
 21378  151D  2D38               	goto	l37157
 21379                           	
 21380  151E                     l23523:	
 21381                           	line	626
 21382                           	
 21383  151E                     l37153:	
 21384  151E  300A               	movlw	(0Ah)
 21385  151F  0020               	movlb 0	; select bank0
 21386  1520  00B9               	movwf	(??_printf+0)+0
 21387  1521  0839               	movf	(??_printf+0)+0,w
 21388  1522  00A1               	movwf	(?___bmul)
 21389  1523  0841               	movf	(printf@prec),w
 21390  1524  31A9  2179  3194   	fcall	___bmul
 21391  1527  0020               	movlb 0	; select bank0
 21392  1528  00BA               	movwf	(??_printf+1)+0
 21393  1529  082F               	movf	(printf@f),w
 21394  152A  0084               	movwf	fsr0l
 21395  152B  0830               	movf	((printf@f+1)),w
 21396  152C  0085               	movwf	fsr0h
 21397  152D  0800               	movf	indf0,w ;code access
 21398  152E  073A               	addwf	0+(??_printf+1)+0,w
 21399  152F  3ED0               	addlw	-48
 21400  1530  00BB               	movwf	(??_printf+2)+0
 21401  1531  083B               	movf	(??_printf+2)+0,w
 21402  1532  00C1               	movwf	(printf@prec)
 21403                           	
 21404  1533                     l37155:	
 21405  1533  3001               	movlw	low(01h)
 21406  1534  07AF               	addwf	(printf@f),f
 21407  1535  3000               	movlw	high(01h)
 21408  1536  3DB0               	addwfc	(printf@f+1),f
 21409  1537  2D38               	goto	l37157
 21410                           	
 21411  1538                     l23522:	
 21412                           	line	625
 21413                           	
 21414  1538                     l37157:	
 21415  1538  082F               	movf	(printf@f),w
 21416  1539  0084               	movwf	fsr0l
 21417  153A  0830               	movf	((printf@f+1)),w
 21418  153B  0085               	movwf	fsr0h
 21419  153C  0800               	movf	indf0,w ;code access
 21420  153D  31A9  2131  3194   	fcall	_isdigit
 21421  1540  1803               	btfsc	status,0
 21422  1541  2D43               	goto	u9951
 21423  1542  2D44               	goto	u9950
 21424  1543                     u9951:
 21425  1543  2D1E               	goto	l37153
 21426  1544                     u9950:
 21427  1544  2DE6               	goto	l37199
 21428                           	
 21429  1545                     l23524:	
 21430                           	line	628
 21431  1545  2DE6               	goto	l37199
 21432                           	
 21433  1546                     l23521:	
 21434                           	line	629
 21435  1546  01C1               	clrf	(printf@prec)
 21436  1547  2DE6               	goto	l37199
 21437                           	line	633
 21438                           	
 21439  1548                     l23525:	
 21440                           	line	638
 21441  1548  2DE6               	goto	l37199
 21442                           	line	640
 21443                           	
 21444  1549                     l23527:	
 21445                           	line	641
 21446  1549  2FFF               	goto	l23593
 21447                           	line	700
 21448                           	
 21449  154A                     l23529:	
 21450  154A  2E0B               	goto	l37201
 21451                           	line	701
 21452                           	
 21453  154B                     l23530:	
 21454                           	line	702
 21455  154B  2E0B               	goto	l37201
 21456                           	line	715
 21457                           	
 21458  154C                     l23532:	
 21459                           	line	721
 21460                           	
 21461  154C                     l23533:	
 21462                           	line	724
 21463  154C  17BE               	bsf	(printf@flag)+(7/8),(7)&7
 21464                           	line	726
 21465  154D  2E0B               	goto	l37201
 21466                           	line	731
 21467                           	
 21468  154E                     l23534:	
 21469                           	line	737
 21470                           	
 21471  154E                     l37159:	
 21472  154E  083D               	movf	(printf@ap),w
 21473  154F  0086               	movwf	fsr1l
 21474  1550  0187               	clrf fsr1h	
 21475                           	
 21476  1551  3F40               	moviw	[0]fsr1
 21477  1552  00C3               	movwf	(printf@_val)
 21478  1553  3F41               	moviw	[1]fsr1
 21479  1554  00C4               	movwf	(printf@_val+1)
 21480                           	
 21481  1555                     l37161:	
 21482  1555  3002               	movlw	(02h)
 21483  1556  00B9               	movwf	(??_printf+0)+0
 21484  1557  0839               	movf	(??_printf+0)+0,w
 21485  1558  07BD               	addwf	(printf@ap),f
 21486                           	line	743
 21487                           	
 21488  1559                     l37163:	
 21489  1559  0844               	movf	((printf@_val+1)),w
 21490  155A  0443               	iorwf	((printf@_val)),w
 21491  155B  1D03               	skipz
 21492  155C  2D5E               	goto	u9961
 21493  155D  2D5F               	goto	u9960
 21494  155E                     u9961:
 21495  155E  2D64               	goto	l37167
 21496  155F                     u9960:
 21497                           	line	744
 21498                           	
 21499  155F                     l37165:	
 21500  155F  30FC               	movlw	low(STR_114|8000h)
 21501  1560  00C3               	movwf	(printf@_val)
 21502  1561  3088               	movlw	high(STR_114|8000h)
 21503  1562  00C4               	movwf	((printf@_val))+1
 21504  1563  2D64               	goto	l37167
 21505                           	
 21506  1564                     l23535:	
 21507                           	line	748
 21508                           	
 21509  1564                     l37167:	
 21510  1564  01C5               	clrf	0+(printf@_val)+02h
 21511  1565  01C6               	clrf	1+(printf@_val)+02h
 21512                           	line	749
 21513  1566  2D6C               	goto	l37171
 21514                           	
 21515  1567                     l23537:	
 21516                           	line	750
 21517                           	
 21518  1567                     l37169:	
 21519  1567  3001               	movlw	low(01h)
 21520  1568  07C5               	addwf	0+(printf@_val)+02h,f
 21521  1569  3000               	movlw	high(01h)
 21522  156A  3DC6               	addwfc	1+(printf@_val)+02h,f
 21523  156B  2D6C               	goto	l37171
 21524                           	
 21525  156C                     l23536:	
 21526                           	line	749
 21527                           	
 21528  156C                     l37171:	
 21529  156C  0843               	movf	(printf@_val),w
 21530  156D  0745               	addwf	0+(printf@_val)+02h,w
 21531  156E  0084               	movwf	fsr0l
 21532  156F  0844               	movf	(printf@_val+1),w
 21533  1570  3D46               	addwfc	1+(printf@_val)+02h,w
 21534  1571  0085               	movwf	fsr0h
 21535  1572  0800               	movf	indf0,w ;code access
 21536  1573  3800               	iorlw	0
 21537  1574  1D03               	skipz
 21538  1575  2D77               	goto	u9971
 21539  1576  2D78               	goto	u9970
 21540  1577                     u9971:
 21541  1577  2D67               	goto	l37169
 21542  1578                     u9970:
 21543  1578  2D79               	goto	l37173
 21544                           	
 21545  1579                     l23538:	
 21546                           	line	756
 21547                           	
 21548  1579                     l37173:	
 21549  1579  0841               	movf	(printf@prec),w
 21550  157A  1D03               	skipz
 21551  157B  2D7D               	goto	u9980
 21552  157C  2D92               	goto	l37179
 21553  157D                     u9980:
 21554                           	
 21555  157D                     l37175:	
 21556  157D  0841               	movf	(printf@prec),w
 21557  157E  00B9               	movwf	(??_printf+0)+0
 21558  157F  01BA               	clrf	(??_printf+0)+0+1
 21559  1580  1BB9               	btfsc	(??_printf+0)+0,7
 21560  1581  03BA               	decf	(??_printf+0)+0+1,f
 21561  1582  0846               	movf	1+(printf@_val)+02h,w
 21562  1583  023A               	subwf	1+(??_printf+0)+0,w
 21563  1584  1D03               	skipz
 21564  1585  2D88               	goto	u9995
 21565  1586  0845               	movf	0+(printf@_val)+02h,w
 21566  1587  0239               	subwf	0+(??_printf+0)+0,w
 21567  1588                     u9995:
 21568  1588  1803               	skipnc
 21569  1589  2D8B               	goto	u9991
 21570  158A  2D8C               	goto	u9990
 21571  158B                     u9991:
 21572  158B  2D92               	goto	l37179
 21573  158C                     u9990:
 21574                           	line	757
 21575                           	
 21576  158C                     l37177:	
 21577  158C  0841               	movf	(printf@prec),w
 21578  158D  00C5               	movwf	0+(printf@_val)+02h
 21579  158E  01C6               	clrf	1+(printf@_val)+02h
 21580  158F  1BC5               	btfsc	0+(printf@_val)+02h,7
 21581  1590  03C6               	decf	1+(printf@_val)+02h,f
 21582  1591  2D92               	goto	l37179
 21583                           	
 21584  1592                     l23539:	
 21585                           	line	760
 21586                           	
 21587  1592                     l37179:	
 21588  1592  0840               	movf	(printf@width+1),w
 21589  1593  0246               	subwf	1+(printf@_val)+02h,w
 21590  1594  1D03               	skipz
 21591  1595  2D98               	goto	u10005
 21592  1596  083F               	movf	(printf@width),w
 21593  1597  0245               	subwf	0+(printf@_val)+02h,w
 21594  1598                     u10005:
 21595  1598  1803               	skipnc
 21596  1599  2D9B               	goto	u10001
 21597  159A  2D9C               	goto	u10000
 21598  159B                     u10001:
 21599  159B  2DA1               	goto	l37183
 21600  159C                     u10000:
 21601                           	line	761
 21602                           	
 21603  159C                     l37181:	
 21604  159C  0845               	movf	0+(printf@_val)+02h,w
 21605  159D  02BF               	subwf	(printf@width),f
 21606  159E  0846               	movf	1+(printf@_val)+02h,w
 21607  159F  3BC0               	subwfb	(printf@width+1),f
 21608  15A0  2DAA               	goto	l37187
 21609                           	line	762
 21610                           	
 21611  15A1                     l23540:	
 21612                           	line	763
 21613                           	
 21614  15A1                     l37183:	
 21615  15A1  01BF               	clrf	(printf@width)
 21616  15A2  01C0               	clrf	(printf@width+1)
 21617  15A3  2DAA               	goto	l37187
 21618                           	
 21619  15A4                     l23541:	
 21620                           	line	767
 21621  15A4  2DAA               	goto	l37187
 21622                           	
 21623  15A5                     l23543:	
 21624                           	line	768
 21625                           	
 21626  15A5                     l37185:	
 21627  15A5  3020               	movlw	(020h)
 21628  15A6  31AB  2368  3194   	fcall	_putch
 21629  15A9  2DAA               	goto	l37187
 21630                           	
 21631  15AA                     l23542:	
 21632                           	line	767
 21633                           	
 21634  15AA                     l37187:	
 21635  15AA  30FF               	movlw	low(-1)
 21636  15AB  0020               	movlb 0	; select bank0
 21637  15AC  07BF               	addwf	(printf@width),f
 21638  15AD  30FF               	movlw	high(-1)
 21639  15AE  3DC0               	addwfc	(printf@width+1),f
 21640  15AF  30FF               	movlw	high(-1)
 21641  15B0  0640               	xorwf	((printf@width+1)),w
 21642  15B1  1D03               	skipz
 21643  15B2  2DB5               	goto	u10015
 21644  15B3  30FF               	movlw	low(-1)
 21645  15B4  063F               	xorwf	((printf@width)),w
 21646  15B5                     u10015:
 21647                           
 21648  15B5  1D03               	skipz
 21649  15B6  2DB8               	goto	u10011
 21650  15B7  2DB9               	goto	u10010
 21651  15B8                     u10011:
 21652  15B8  2DA5               	goto	l37185
 21653  15B9                     u10010:
 21654  15B9  2DC9               	goto	l37193
 21655                           	
 21656  15BA                     l23544:	
 21657                           	line	770
 21658  15BA  2DC9               	goto	l37193
 21659                           	
 21660  15BB                     l23546:	
 21661                           	line	771
 21662                           	
 21663  15BB                     l37189:	
 21664  15BB  0843               	movf	(printf@_val),w
 21665  15BC  0084               	movwf	fsr0l
 21666  15BD  0844               	movf	((printf@_val+1)),w
 21667  15BE  0085               	movwf	fsr0h
 21668  15BF  0800               	movf	indf0,w ;code access
 21669  15C0  31AB  2368  3194   	fcall	_putch
 21670                           	
 21671  15C3                     l37191:	
 21672  15C3  3001               	movlw	low(01h)
 21673  15C4  0020               	movlb 0	; select bank0
 21674  15C5  07C3               	addwf	(printf@_val),f
 21675  15C6  3000               	movlw	high(01h)
 21676  15C7  3DC4               	addwfc	(printf@_val+1),f
 21677  15C8  2DC9               	goto	l37193
 21678                           	
 21679  15C9                     l23545:	
 21680                           	line	770
 21681                           	
 21682  15C9                     l37193:	
 21683  15C9  3002               	movlw	(02h)
 21684  15CA  3E43               	addlw	printf@_val&0ffh
 21685  15CB  0086               	movwf	fsr1l
 21686  15CC  0187               	clrf fsr1h	
 21687                           	
 21688  15CD  3001               	movlw	low(01h)
 21689  15CE  0281               	subwf	indf1,f
 21690  15CF  3141               	addfsr	fsr1,1
 21691  15D0  3000               	movlw	high(01h)
 21692  15D1  3B81               	subwfb	indf1,f
 21693  15D2  317F               	addfsr	fsr1,-1
 21694  15D3  3F40               	moviw	[0]fsr1
 21695  15D4  3AFF               	xorlw	low(0FFFFh)
 21696  15D5  1D03               	skipz
 21697  15D6  2DD9               	goto	u10025
 21698  15D7  3F41               	moviw	[1]fsr1
 21699  15D8  3AFF               	xorlw	high(0FFFFh)
 21700  15D9                     u10025:
 21701  15D9  1D03               	skipz
 21702  15DA  2DDC               	goto	u10021
 21703  15DB  2DDD               	goto	u10020
 21704  15DC                     u10021:
 21705  15DC  2DBB               	goto	l37189
 21706  15DD                     u10020:
 21707  15DD  2FE7               	goto	l37313
 21708                           	
 21709  15DE                     l23547:	
 21710                           	line	777
 21711  15DE  2FE7               	goto	l37313
 21712                           	line	805
 21713                           	
 21714  15DF                     l23548:	
 21715                           	line	816
 21716  15DF  2FE7               	goto	l37313
 21717                           	line	820
 21718                           	
 21719  15E0                     l23549:	
 21720                           	line	821
 21721                           	
 21722  15E0                     l37195:	
 21723  15E0  30C0               	movlw	(0C0h)
 21724  15E1  00B9               	movwf	(??_printf+0)+0
 21725  15E2  0839               	movf	(??_printf+0)+0,w
 21726  15E3  04BE               	iorwf	(printf@flag),f
 21727                           	line	822
 21728  15E4  2E0B               	goto	l37201
 21729                           	line	825
 21730                           	
 21731  15E5                     l37197:	
 21732  15E5  2E0B               	goto	l37201
 21733                           	line	638
 21734                           	
 21735  15E6                     l23526:	
 21736                           	
 21737  15E6                     l37199:	
 21738  15E6  0020               	movlb 0	; select bank0
 21739  15E7  0830               	movf	(printf@f+1),w
 21740  15E8  00BA               	movwf	(??_printf+0)+0+1
 21741  15E9  082F               	movf	(printf@f),w
 21742  15EA  00B9               	movwf	(??_printf+0)+0
 21743  15EB  3001               	movlw	(01h)
 21744  15EC  07AF               	addwf	(printf@f),f
 21745  15ED  1803               	skipnc
 21746  15EE  0AB0               	incf	(printf@f+1),f
 21747  15EF  0839               	movf	0+(??_printf+0)+0,w
 21748  15F0  0084               	movwf	fsr0l
 21749  15F1  083A               	movf	(1+(??_printf+0)+0),w
 21750  15F2  0085               	movwf	fsr0h
 21751  15F3  0800               	movf	indf0,w ;code access
 21752  15F4  00C2               	movwf	(printf@c)
 21753                           	; Switch size 1, requested type "space"
 21754                           ; Number of cases is 7, Range of values is 0 to 120
 21755                           ; switch strategies available:
 21756                           ; Name         Instructions Cycles
 21757                           ; simple_byte           22    12 (average)
 21758                           ; direct_byte          248     6 (fixed)
 21759                           ; jumptable            260     6 (fixed)
 21760                           ; rangetable           125     4 (fixed)
 21761                           ; spacedrange          247     6 (fixed)
 21762                           ; locatedrange         121     3 (fixed)
 21763                           ;	Chosen strategy is simple_byte
 21764                           
 21765                           	opt asmopt_off
 21766  15F5  3A00               	xorlw	0^0	; case 0
 21767  15F6  1903               	skipnz
 21768  15F7  2FFF               	goto	l23593
 21769  15F8  3A58               	xorlw	88^0	; case 88
 21770  15F9  1903               	skipnz
 21771  15FA  2D4C               	goto	l23533
 21772  15FB  3A3C               	xorlw	100^88	; case 100
 21773  15FC  1903               	skipnz
 21774  15FD  2E0B               	goto	l37201
 21775  15FE  3A0D               	xorlw	105^100	; case 105
 21776  15FF  1903               	skipnz
 21777  1600  2E0B               	goto	l37201
 21778  1601  3A1A               	xorlw	115^105	; case 115
 21779  1602  1903               	skipnz
 21780  1603  2D4E               	goto	l37159
 21781  1604  3A06               	xorlw	117^115	; case 117
 21782  1605  1903               	skipnz
 21783  1606  2DE0               	goto	l37195
 21784  1607  3A0D               	xorlw	120^117	; case 120
 21785  1608  1903               	skipnz
 21786  1609  2D4C               	goto	l23533
 21787  160A  2FE7               	goto	l37313
 21788                           	opt asmopt_on
 21789                           
 21790                           	line	825
 21791                           	
 21792  160B                     l23531:	
 21793                           	line	1246
 21794                           	
 21795  160B                     l37201:	
 21796  160B  083E               	movf	(printf@flag),w
 21797  160C  39C0               	andlw	0C0h
 21798  160D  1D03               	btfss	status,2
 21799  160E  2E10               	goto	u10031
 21800  160F  2E11               	goto	u10030
 21801  1610                     u10031:
 21802  1610  2E2B               	goto	l37213
 21803  1611                     u10030:
 21804                           	line	1254
 21805                           	
 21806  1611                     l37203:	
 21807  1611  083D               	movf	(printf@ap),w
 21808  1612  0086               	movwf	fsr1l
 21809  1613  0187               	clrf fsr1h	
 21810                           	
 21811  1614  3F40               	moviw	[0]fsr1
 21812  1615  00C3               	movwf	(printf@_val)
 21813  1616  3F41               	moviw	[1]fsr1
 21814  1617  00C4               	movwf	(printf@_val+1)
 21815                           	
 21816  1618                     l37205:	
 21817  1618  3002               	movlw	(02h)
 21818  1619  00B9               	movwf	(??_printf+0)+0
 21819  161A  0839               	movf	(??_printf+0)+0,w
 21820  161B  07BD               	addwf	(printf@ap),f
 21821                           	line	1256
 21822                           	
 21823  161C                     l37207:	
 21824  161C  1FC4               	btfss	(printf@_val+1),7
 21825  161D  2E1F               	goto	u10041
 21826  161E  2E20               	goto	u10040
 21827  161F                     u10041:
 21828  161F  2E37               	goto	l37217
 21829  1620                     u10040:
 21830                           	line	1257
 21831                           	
 21832  1620                     l37209:	
 21833  1620  3003               	movlw	(03h)
 21834  1621  00B9               	movwf	(??_printf+0)+0
 21835  1622  0839               	movf	(??_printf+0)+0,w
 21836  1623  04BE               	iorwf	(printf@flag),f
 21837                           	line	1258
 21838                           	
 21839  1624                     l37211:	
 21840  1624  09C3               	comf	(printf@_val),f
 21841  1625  09C4               	comf	(printf@_val+1),f
 21842  1626  0AC3               	incf	(printf@_val),f
 21843  1627  1903               	skipnz
 21844  1628  0AC4               	incf	(printf@_val+1),f
 21845  1629  2E37               	goto	l37217
 21846                           	line	1259
 21847                           	
 21848  162A                     l23551:	
 21849                           	line	1261
 21850  162A  2E37               	goto	l37217
 21851                           	line	1263
 21852                           	
 21853  162B                     l23550:	
 21854                           	line	1281
 21855                           	
 21856  162B                     l37213:	
 21857  162B  083D               	movf	(printf@ap),w
 21858  162C  0086               	movwf	fsr1l
 21859  162D  0187               	clrf fsr1h	
 21860                           	
 21861  162E  3F40               	moviw	[0]fsr1
 21862  162F  00C3               	movwf	(printf@_val)
 21863  1630  3F41               	moviw	[1]fsr1
 21864  1631  00C4               	movwf	(printf@_val+1)
 21865                           	
 21866  1632                     l37215:	
 21867  1632  3002               	movlw	(02h)
 21868  1633  00B9               	movwf	(??_printf+0)+0
 21869  1634  0839               	movf	(??_printf+0)+0,w
 21870  1635  07BD               	addwf	(printf@ap),f
 21871  1636  2E37               	goto	l37217
 21872                           	line	1282
 21873                           	
 21874  1637                     l23552:	
 21875                           	line	1285
 21876                           	
 21877  1637                     l37217:	
 21878  1637  08C1               	movf	(printf@prec),f
 21879  1638  1D03               	skipz
 21880  1639  2E3B               	goto	u10051
 21881  163A  2E3C               	goto	u10050
 21882  163B                     u10051:
 21883  163B  2EA8               	goto	l37253
 21884  163C                     u10050:
 21885                           	
 21886  163C                     l37219:	
 21887  163C  0844               	movf	((printf@_val+1)),w
 21888  163D  0443               	iorwf	((printf@_val)),w
 21889  163E  1D03               	skipz
 21890  163F  2E41               	goto	u10061
 21891  1640  2E42               	goto	u10060
 21892  1641                     u10061:
 21893  1641  2EA8               	goto	l37253
 21894  1642                     u10060:
 21895                           	line	1286
 21896                           	
 21897  1642                     l37221:	
 21898  1642  3001               	movlw	(01h)
 21899  1643  00B9               	movwf	(??_printf+0)+0
 21900  1644  0839               	movf	(??_printf+0)+0,w
 21901  1645  07C1               	addwf	(printf@prec),f
 21902  1646  2EA8               	goto	l37253
 21903                           	
 21904  1647                     l23553:	
 21905                           	line	1289
 21906  1647  2EA8               	goto	l37253
 21907                           	line	1294
 21908                           	
 21909  1648                     l23555:	
 21910  1648  2E49               	goto	l37223
 21911                           	line	1297
 21912                           	
 21913  1649                     l23556:	
 21914                           	line	1300
 21915                           	
 21916  1649                     l37223:	
 21917  1649  01C2               	clrf	(printf@c)
 21918  164A  1403               	bsf	status,0
 21919  164B  0DC2               	rlf	(printf@c),f
 21920                           	
 21921  164C                     l37225:	
 21922  164C  0842               	movf	(printf@c),w
 21923  164D  3A05               	xorlw	05h&0ffh
 21924  164E  1D03               	skipz
 21925  164F  2E51               	goto	u10071
 21926  1650  2E52               	goto	u10070
 21927  1651                     u10071:
 21928  1651  2E54               	goto	l37229
 21929  1652                     u10070:
 21930  1652  2EB4               	goto	l37255
 21931                           	
 21932  1653                     l37227:	
 21933  1653  2EB4               	goto	l37255
 21934                           	line	1301
 21935                           	
 21936  1654                     l23557:	
 21937                           	
 21938  1654                     l37229:	
 21939  1654  0842               	movf	(printf@c),w
 21940  1655  0709               	addwf	wreg,w
 21941  1656  3E01               	addlw	low(_dpowers|8000h)
 21942  1657  0084               	movwf	fsr0l
 21943  1658  3082               	movlw	high(_dpowers|8000h)
 21944  1659  1803               	skipnc
 21945  165A  3E01               	addlw	1
 21946  165B  0085               	movwf	fsr0h
 21947  165C  3F00               	moviw	[0]fsr0
 21948  165D  00B9               	movwf	(??_printf+0)+0
 21949  165E  3F01               	moviw	[1]fsr0
 21950  165F  00BA               	movwf	(??_printf+0)+0+1
 21951  1660  083A               	movf	1+(??_printf+0)+0,w
 21952  1661  0244               	subwf	(printf@_val+1),w
 21953  1662  1D03               	skipz
 21954  1663  2E66               	goto	u10085
 21955  1664  0839               	movf	0+(??_printf+0)+0,w
 21956  1665  0243               	subwf	(printf@_val),w
 21957  1666                     u10085:
 21958  1666  1803               	skipnc
 21959  1667  2E69               	goto	u10081
 21960  1668  2E6A               	goto	u10080
 21961  1669                     u10081:
 21962  1669  2E6C               	goto	l37233
 21963  166A                     u10080:
 21964  166A  2EB4               	goto	l37255
 21965                           	line	1302
 21966                           	
 21967  166B                     l37231:	
 21968  166B  2EB4               	goto	l37255
 21969                           	
 21970  166C                     l23559:	
 21971                           	line	1300
 21972                           	
 21973  166C                     l37233:	
 21974  166C  3001               	movlw	(01h)
 21975  166D  00B9               	movwf	(??_printf+0)+0
 21976  166E  0839               	movf	(??_printf+0)+0,w
 21977  166F  07C2               	addwf	(printf@c),f
 21978                           	
 21979  1670                     l37235:	
 21980  1670  0842               	movf	(printf@c),w
 21981  1671  3A05               	xorlw	05h&0ffh
 21982  1672  1D03               	skipz
 21983  1673  2E75               	goto	u10091
 21984  1674  2E76               	goto	u10090
 21985  1675                     u10091:
 21986  1675  2E54               	goto	l37229
 21987  1676                     u10090:
 21988  1676  2EB4               	goto	l37255
 21989                           	
 21990  1677                     l23558:	
 21991                           	line	1304
 21992  1677  2EB4               	goto	l37255
 21993                           	line	1309
 21994                           	
 21995  1678                     l23561:	
 21996                           	line	1311
 21997                           	
 21998  1678                     l37237:	
 21999  1678  01C2               	clrf	(printf@c)
 22000  1679  1403               	bsf	status,0
 22001  167A  0DC2               	rlf	(printf@c),f
 22002                           	
 22003  167B                     l37239:	
 22004  167B  0842               	movf	(printf@c),w
 22005  167C  3A04               	xorlw	04h&0ffh
 22006  167D  1D03               	skipz
 22007  167E  2E80               	goto	u10101
 22008  167F  2E81               	goto	u10100
 22009  1680                     u10101:
 22010  1680  2E83               	goto	l37243
 22011  1681                     u10100:
 22012  1681  2EB4               	goto	l37255
 22013                           	
 22014  1682                     l37241:	
 22015  1682  2EB4               	goto	l37255
 22016                           	line	1312
 22017                           	
 22018  1683                     l23562:	
 22019                           	
 22020  1683                     l37243:	
 22021  1683  0842               	movf	(printf@c),w
 22022  1684  0709               	addwf	wreg,w
 22023  1685  3E0B               	addlw	low(_hexpowers|8000h)
 22024  1686  0084               	movwf	fsr0l
 22025  1687  3082               	movlw	high(_hexpowers|8000h)
 22026  1688  1803               	skipnc
 22027  1689  3E01               	addlw	1
 22028  168A  0085               	movwf	fsr0h
 22029  168B  3F00               	moviw	[0]fsr0
 22030  168C  00B9               	movwf	(??_printf+0)+0
 22031  168D  3F01               	moviw	[1]fsr0
 22032  168E  00BA               	movwf	(??_printf+0)+0+1
 22033  168F  083A               	movf	1+(??_printf+0)+0,w
 22034  1690  0244               	subwf	(printf@_val+1),w
 22035  1691  1D03               	skipz
 22036  1692  2E95               	goto	u10115
 22037  1693  0839               	movf	0+(??_printf+0)+0,w
 22038  1694  0243               	subwf	(printf@_val),w
 22039  1695                     u10115:
 22040  1695  1803               	skipnc
 22041  1696  2E98               	goto	u10111
 22042  1697  2E99               	goto	u10110
 22043  1698                     u10111:
 22044  1698  2E9B               	goto	l37247
 22045  1699                     u10110:
 22046  1699  2EB4               	goto	l37255
 22047                           	line	1313
 22048                           	
 22049  169A                     l37245:	
 22050  169A  2EB4               	goto	l37255
 22051                           	
 22052  169B                     l23564:	
 22053                           	line	1311
 22054                           	
 22055  169B                     l37247:	
 22056  169B  3001               	movlw	(01h)
 22057  169C  00B9               	movwf	(??_printf+0)+0
 22058  169D  0839               	movf	(??_printf+0)+0,w
 22059  169E  07C2               	addwf	(printf@c),f
 22060                           	
 22061  169F                     l37249:	
 22062  169F  0842               	movf	(printf@c),w
 22063  16A0  3A04               	xorlw	04h&0ffh
 22064  16A1  1D03               	skipz
 22065  16A2  2EA4               	goto	u10121
 22066  16A3  2EA5               	goto	u10120
 22067  16A4                     u10121:
 22068  16A4  2E83               	goto	l37243
 22069  16A5                     u10120:
 22070  16A5  2EB4               	goto	l37255
 22071                           	
 22072  16A6                     l23563:	
 22073                           	line	1315
 22074  16A6  2EB4               	goto	l37255
 22075                           	line	1331
 22076                           	
 22077  16A7                     l37251:	
 22078  16A7  2EB4               	goto	l37255
 22079                           	line	1289
 22080                           	
 22081  16A8                     l23554:	
 22082                           	
 22083  16A8                     l37253:	
 22084  16A8  083E               	movf	(printf@flag),w
 22085  16A9  39C0               	andlw	0C0h
 22086                           	; Switch size 1, requested type "space"
 22087                           ; Number of cases is 3, Range of values is 0 to 192
 22088                           ; switch strategies available:
 22089                           ; Name         Instructions Cycles
 22090                           ; simple_byte           10     6 (average)
 22091                           ; jumptable            260     6 (fixed)
 22092                           ; rangetable           197     6 (fixed)
 22093                           ; spacedrange          391     8 (fixed)
 22094                           ; locatedrange         193     3 (fixed)
 22095                           ;	Chosen strategy is simple_byte
 22096                           
 22097                           	opt asmopt_off
 22098  16AA  3A00               	xorlw	0^0	; case 0
 22099  16AB  1903               	skipnz
 22100  16AC  2E49               	goto	l37223
 22101  16AD  3A80               	xorlw	128^0	; case 128
 22102  16AE  1903               	skipnz
 22103  16AF  2E78               	goto	l37237
 22104  16B0  3A40               	xorlw	192^128	; case 192
 22105  16B1  1903               	skipnz
 22106  16B2  2E49               	goto	l37223
 22107  16B3  2EB4               	goto	l37255
 22108                           	opt asmopt_on
 22109                           
 22110                           	line	1331
 22111                           	
 22112  16B4                     l23560:	
 22113                           	line	1334
 22114                           	
 22115  16B4                     l37255:	
 22116  16B4  0842               	movf	(printf@c),w
 22117  16B5  3A80               	xorlw	80h
 22118  16B6  00B9               	movwf	(??_printf+0)+0
 22119  16B7  0841               	movf	(printf@prec),w
 22120  16B8  3A80               	xorlw	80h
 22121  16B9  02B9               	subwf	(??_printf+0)+0
 22122  16BA  1803               	skipnc
 22123  16BB  2EBD               	goto	u10131
 22124  16BC  2EBE               	goto	u10130
 22125  16BD                     u10131:
 22126  16BD  2EC3               	goto	l37259
 22127  16BE                     u10130:
 22128                           	line	1335
 22129                           	
 22130  16BE                     l37257:	
 22131  16BE  0841               	movf	(printf@prec),w
 22132  16BF  00B9               	movwf	(??_printf+0)+0
 22133  16C0  0839               	movf	(??_printf+0)+0,w
 22134  16C1  00C2               	movwf	(printf@c)
 22135  16C2  2ED2               	goto	l23566
 22136                           	line	1336
 22137                           	
 22138  16C3                     l23565:	
 22139                           	
 22140  16C3                     l37259:	
 22141  16C3  0841               	movf	(printf@prec),w
 22142  16C4  3A80               	xorlw	80h
 22143  16C5  00B9               	movwf	(??_printf+0)+0
 22144  16C6  0842               	movf	(printf@c),w
 22145  16C7  3A80               	xorlw	80h
 22146  16C8  02B9               	subwf	(??_printf+0)+0
 22147  16C9  1803               	skipnc
 22148  16CA  2ECC               	goto	u10141
 22149  16CB  2ECD               	goto	u10140
 22150  16CC                     u10141:
 22151  16CC  2ED2               	goto	l23566
 22152  16CD                     u10140:
 22153                           	line	1337
 22154                           	
 22155  16CD                     l37261:	
 22156  16CD  0842               	movf	(printf@c),w
 22157  16CE  00B9               	movwf	(??_printf+0)+0
 22158  16CF  0839               	movf	(??_printf+0)+0,w
 22159  16D0  00C1               	movwf	(printf@prec)
 22160  16D1  2ED2               	goto	l23566
 22161                           	
 22162  16D2                     l23567:	
 22163                           	line	1340
 22164                           	
 22165  16D2                     l23566:	
 22166  16D2  0840               	movf	(printf@width+1),w
 22167  16D3  043F               	iorwf	(printf@width),w
 22168  16D4  1903               	skipnz
 22169  16D5  2ED7               	goto	u10151
 22170  16D6  2ED8               	goto	u10150
 22171  16D7                     u10151:
 22172  16D7  2F07               	goto	l37273
 22173  16D8                     u10150:
 22174                           	
 22175  16D8                     l37263:	
 22176  16D8  083E               	movf	(printf@flag),w
 22177  16D9  3903               	andlw	03h
 22178  16DA  1903               	btfsc	status,2
 22179  16DB  2EDD               	goto	u10161
 22180  16DC  2EDE               	goto	u10160
 22181  16DD                     u10161:
 22182  16DD  2F07               	goto	l37273
 22183  16DE                     u10160:
 22184                           	line	1341
 22185                           	
 22186  16DE                     l37265:	
 22187  16DE  30FF               	movlw	low(-1)
 22188  16DF  07BF               	addwf	(printf@width),f
 22189  16E0  30FF               	movlw	high(-1)
 22190  16E1  3DC0               	addwfc	(printf@width+1),f
 22191  16E2  2F07               	goto	l37273
 22192                           	
 22193  16E3                     l23568:	
 22194                           	line	1343
 22195  16E3  2F07               	goto	l37273
 22196                           	line	1344
 22197                           	
 22198  16E4                     l37267:	
 22199  16E4  0841               	movf	(printf@prec),w
 22200  16E5  00B9               	movwf	(??_printf+0)+0
 22201  16E6  01BA               	clrf	(??_printf+0)+0+1
 22202  16E7  1BB9               	btfsc	(??_printf+0)+0,7
 22203  16E8  03BA               	decf	(??_printf+0)+0+1,f
 22204  16E9  083A               	movf	1+(??_printf+0)+0,w
 22205  16EA  3A80               	xorlw	80h
 22206  16EB  00BB               	movwf	(??_printf+2)+0
 22207  16EC  0840               	movf	(printf@width+1),w
 22208  16ED  3A80               	xorlw	80h
 22209  16EE  023B               	subwf	(??_printf+2)+0,w
 22210  16EF  1D03               	skipz
 22211  16F0  2EF3               	goto	u10175
 22212  16F1  083F               	movf	(printf@width),w
 22213  16F2  0239               	subwf	0+(??_printf+0)+0,w
 22214  16F3                     u10175:
 22215                           
 22216  16F3  1803               	skipnc
 22217  16F4  2EF6               	goto	u10171
 22218  16F5  2EF7               	goto	u10170
 22219  16F6                     u10171:
 22220  16F6  2F02               	goto	l37271
 22221  16F7                     u10170:
 22222                           	line	1345
 22223                           	
 22224  16F7                     l37269:	
 22225  16F7  0020               	movlb 0	; select bank0
 22226  16F8  0841               	movf	(printf@prec),w
 22227  16F9  00B9               	movwf	(??_printf+0)+0
 22228  16FA  01BA               	clrf	(??_printf+0)+0+1
 22229  16FB  1BB9               	btfsc	(??_printf+0)+0,7
 22230  16FC  03BA               	decf	(??_printf+0)+0+1,f
 22231  16FD  0839               	movf	0+(??_printf+0)+0,w
 22232  16FE  02BF               	subwf	(printf@width),f
 22233  16FF  083A               	movf	1+(??_printf+0)+0,w
 22234  1700  3BC0               	subwfb	(printf@width+1),f
 22235  1701  2F07               	goto	l37273
 22236                           	line	1346
 22237                           	
 22238  1702                     l23570:	
 22239                           	line	1347
 22240                           	
 22241  1702                     l37271:	
 22242  1702  0020               	movlb 0	; select bank0
 22243  1703  01BF               	clrf	(printf@width)
 22244  1704  01C0               	clrf	(printf@width+1)
 22245  1705  2F07               	goto	l37273
 22246                           	
 22247  1706                     l23571:	
 22248  1706  2F07               	goto	l37273
 22249                           	line	1348
 22250                           	
 22251  1707                     l23569:	
 22252                           	line	1376
 22253                           	
 22254  1707                     l37273:	
 22255  1707  0842               	movf	(printf@c),w
 22256  1708  00B9               	movwf	(??_printf+0)+0
 22257  1709  01BA               	clrf	(??_printf+0)+0+1
 22258  170A  1BB9               	btfsc	(??_printf+0)+0,7
 22259  170B  03BA               	decf	(??_printf+0)+0+1,f
 22260  170C  083A               	movf	1+(??_printf+0)+0,w
 22261  170D  3A80               	xorlw	80h
 22262  170E  00BB               	movwf	(??_printf+2)+0
 22263  170F  0840               	movf	(printf@width+1),w
 22264  1710  3A80               	xorlw	80h
 22265  1711  023B               	subwf	(??_printf+2)+0,w
 22266  1712  1D03               	skipz
 22267  1713  2F16               	goto	u10185
 22268  1714  083F               	movf	(printf@width),w
 22269  1715  0239               	subwf	0+(??_printf+0)+0,w
 22270  1716                     u10185:
 22271                           
 22272  1716  1803               	skipnc
 22273  1717  2F19               	goto	u10181
 22274  1718  2F1A               	goto	u10180
 22275  1719                     u10181:
 22276  1719  2F25               	goto	l37277
 22277  171A                     u10180:
 22278                           	line	1377
 22279                           	
 22280  171A                     l37275:	
 22281  171A  0020               	movlb 0	; select bank0
 22282  171B  0842               	movf	(printf@c),w
 22283  171C  00B9               	movwf	(??_printf+0)+0
 22284  171D  01BA               	clrf	(??_printf+0)+0+1
 22285  171E  1BB9               	btfsc	(??_printf+0)+0,7
 22286  171F  03BA               	decf	(??_printf+0)+0+1,f
 22287  1720  0839               	movf	0+(??_printf+0)+0,w
 22288  1721  02BF               	subwf	(printf@width),f
 22289  1722  083A               	movf	1+(??_printf+0)+0,w
 22290  1723  3BC0               	subwfb	(printf@width+1),f
 22291  1724  2F29               	goto	l37279
 22292                           	line	1378
 22293                           	
 22294  1725                     l23572:	
 22295                           	line	1379
 22296                           	
 22297  1725                     l37277:	
 22298  1725  0020               	movlb 0	; select bank0
 22299  1726  01BF               	clrf	(printf@width)
 22300  1727  01C0               	clrf	(printf@width+1)
 22301  1728  2F29               	goto	l37279
 22302                           	
 22303  1729                     l23573:	
 22304                           	line	1382
 22305                           	
 22306  1729                     l37279:	
 22307  1729  1D3E               	btfss	(printf@flag),(2)&7
 22308  172A  2F2C               	goto	u10191
 22309  172B  2F2D               	goto	u10190
 22310  172C                     u10191:
 22311  172C  2F52               	goto	l37291
 22312  172D                     u10190:
 22313                           	line	1387
 22314                           	
 22315  172D                     l37281:	
 22316  172D  083E               	movf	(printf@flag),w
 22317  172E  3903               	andlw	03h
 22318  172F  1903               	btfsc	status,2
 22319  1730  2F32               	goto	u10201
 22320  1731  2F33               	goto	u10200
 22321  1732                     u10201:
 22322  1732  2F38               	goto	l37285
 22323  1733                     u10200:
 22324                           	line	1388
 22325                           	
 22326  1733                     l37283:	
 22327  1733  302D               	movlw	(02Dh)
 22328  1734  31AB  2368  3194   	fcall	_putch
 22329  1737  2F38               	goto	l37285
 22330                           	
 22331  1738                     l23575:	
 22332                           	line	1410
 22333                           	
 22334  1738                     l37285:	
 22335  1738  0020               	movlb 0	; select bank0
 22336  1739  0840               	movf	(printf@width+1),w
 22337  173A  043F               	iorwf	(printf@width),w
 22338  173B  1903               	skipnz
 22339  173C  2F3E               	goto	u10211
 22340  173D  2F3F               	goto	u10210
 22341  173E                     u10211:
 22342  173E  2FDA               	goto	l37311
 22343  173F                     u10210:
 22344  173F  2F40               	goto	l37287
 22345                           	line	1411
 22346                           	
 22347  1740                     l23577:	
 22348                           	line	1412
 22349                           	
 22350  1740                     l37287:	
 22351  1740  3030               	movlw	(030h)
 22352  1741  31AB  2368  3194   	fcall	_putch
 22353                           	line	1413
 22354                           	
 22355  1744                     l37289:	
 22356  1744  30FF               	movlw	low(-1)
 22357  1745  0020               	movlb 0	; select bank0
 22358  1746  07BF               	addwf	(printf@width),f
 22359  1747  30FF               	movlw	high(-1)
 22360  1748  3DC0               	addwfc	(printf@width+1),f
 22361  1749  0840               	movf	(((printf@width+1))),w
 22362  174A  043F               	iorwf	(((printf@width))),w
 22363  174B  1D03               	skipz
 22364  174C  2F4E               	goto	u10221
 22365  174D  2F4F               	goto	u10220
 22366  174E                     u10221:
 22367  174E  2F40               	goto	l37287
 22368  174F                     u10220:
 22369  174F  2FDA               	goto	l37311
 22370                           	
 22371  1750                     l23578:	
 22372  1750  2FDA               	goto	l37311
 22373                           	
 22374  1751                     l23576:	
 22375                           	line	1415
 22376  1751  2FDA               	goto	l37311
 22377                           	
 22378  1752                     l23574:	
 22379                           	line	1423
 22380                           	
 22381  1752                     l37291:	
 22382  1752  0840               	movf	(printf@width+1),w
 22383  1753  043F               	iorwf	(printf@width),w
 22384  1754  1903               	skipnz
 22385  1755  2F57               	goto	u10231
 22386  1756  2F58               	goto	u10230
 22387  1757                     u10231:
 22388  1757  2F6A               	goto	l37297
 22389  1758                     u10230:
 22390  1758  2F59               	goto	l37293
 22391                           	line	1424
 22392                           	
 22393  1759                     l23581:	
 22394                           	line	1425
 22395                           	
 22396  1759                     l37293:	
 22397  1759  3020               	movlw	(020h)
 22398  175A  31AB  2368  3194   	fcall	_putch
 22399                           	line	1426
 22400                           	
 22401  175D                     l37295:	
 22402  175D  30FF               	movlw	low(-1)
 22403  175E  0020               	movlb 0	; select bank0
 22404  175F  07BF               	addwf	(printf@width),f
 22405  1760  30FF               	movlw	high(-1)
 22406  1761  3DC0               	addwfc	(printf@width+1),f
 22407  1762  0840               	movf	(((printf@width+1))),w
 22408  1763  043F               	iorwf	(((printf@width))),w
 22409  1764  1D03               	skipz
 22410  1765  2F67               	goto	u10241
 22411  1766  2F68               	goto	u10240
 22412  1767                     u10241:
 22413  1767  2F59               	goto	l37293
 22414  1768                     u10240:
 22415  1768  2F6A               	goto	l37297
 22416                           	
 22417  1769                     l23582:	
 22418  1769  2F6A               	goto	l37297
 22419                           	
 22420  176A                     l23580:	
 22421                           	line	1433
 22422                           	
 22423  176A                     l37297:	
 22424  176A  083E               	movf	(printf@flag),w
 22425  176B  3903               	andlw	03h
 22426  176C  1903               	btfsc	status,2
 22427  176D  2F6F               	goto	u10251
 22428  176E  2F70               	goto	u10250
 22429  176F                     u10251:
 22430  176F  2FDA               	goto	l37311
 22431  1770                     u10250:
 22432                           	line	1434
 22433                           	
 22434  1770                     l37299:	
 22435  1770  302D               	movlw	(02Dh)
 22436  1771  31AB  2368  3194   	fcall	_putch
 22437  1774  2FDA               	goto	l37311
 22438                           	
 22439  1775                     l23583:	
 22440  1775  2FDA               	goto	l37311
 22441                           	line	1464
 22442                           	
 22443  1776                     l23579:	
 22444                           	line	1469
 22445  1776  2FDA               	goto	l37311
 22446                           	
 22447  1777                     l23585:	
 22448                           	line	1471
 22449  1777  2FC8               	goto	l37307
 22450                           	line	1478
 22451                           	
 22452  1778                     l23587:	
 22453  1778  2F79               	goto	l37301
 22454                           	line	1481
 22455                           	
 22456  1779                     l23588:	
 22457                           	line	1484
 22458                           	
 22459  1779                     l37301:	
 22460  1779  300A               	movlw	low(0Ah)
 22461  177A  0020               	movlb 0	; select bank0
 22462  177B  00A9               	movwf	(?___lwmod)
 22463  177C  3000               	movlw	high(0Ah)
 22464  177D  00AA               	movwf	((?___lwmod))+1
 22465  177E  0841               	movf	(printf@prec),w
 22466  177F  0709               	addwf	wreg,w
 22467  1780  3E01               	addlw	low(_dpowers|8000h)
 22468  1781  0084               	movwf	fsr0l
 22469  1782  3082               	movlw	high(_dpowers|8000h)
 22470  1783  1803               	skipnc
 22471  1784  3E01               	addlw	1
 22472  1785  0085               	movwf	fsr0h
 22473  1786  3F00               	moviw	[0]fsr0
 22474  1787  00A1               	movwf	(?___lwdiv)
 22475  1788  3F01               	moviw	[1]fsr0
 22476  1789  00A2               	movwf	(?___lwdiv+1)
 22477  178A  0844               	movf	(printf@_val+1),w
 22478  178B  01A4               	clrf	1+(?___lwdiv)+02h
 22479  178C  07A4               	addwf	1+(?___lwdiv)+02h
 22480  178D  0843               	movf	(printf@_val),w
 22481  178E  01A3               	clrf	0+(?___lwdiv)+02h
 22482  178F  07A3               	addwf	0+(?___lwdiv)+02h
 22483                           
 22484  1790  3189  2145  3194   	fcall	___lwdiv
 22485  1793  0020               	movlb 0	; select bank0
 22486  1794  0822               	movf	(1+(?___lwdiv)),w
 22487  1795  01AC               	clrf	1+(?___lwmod)+02h
 22488  1796  07AC               	addwf	1+(?___lwmod)+02h
 22489  1797  0821               	movf	(0+(?___lwdiv)),w
 22490  1798  01AB               	clrf	0+(?___lwmod)+02h
 22491  1799  07AB               	addwf	0+(?___lwmod)+02h
 22492                           
 22493  179A  31AD  252B  3194   	fcall	___lwmod
 22494  179D  0020               	movlb 0	; select bank0
 22495  179E  0829               	movf	(0+(?___lwmod)),w
 22496  179F  3E30               	addlw	030h
 22497  17A0  00B9               	movwf	(??_printf+0)+0
 22498  17A1  0839               	movf	(??_printf+0)+0,w
 22499  17A2  00C2               	movwf	(printf@c)
 22500                           	line	1486
 22501  17A3  2FD5               	goto	l37309
 22502                           	line	1492
 22503                           	
 22504  17A4                     l23590:	
 22505                           	line	1497
 22506                           	
 22507  17A4                     l37303:	
 22508  17A4  0841               	movf	(printf@prec),w
 22509  17A5  0709               	addwf	wreg,w
 22510  17A6  3E0B               	addlw	low(_hexpowers|8000h)
 22511  17A7  0084               	movwf	fsr0l
 22512  17A8  3082               	movlw	high(_hexpowers|8000h)
 22513  17A9  1803               	skipnc
 22514  17AA  3E01               	addlw	1
 22515  17AB  0085               	movwf	fsr0h
 22516  17AC  3F00               	moviw	[0]fsr0
 22517  17AD  00A1               	movwf	(?___lwdiv)
 22518  17AE  3F01               	moviw	[1]fsr0
 22519  17AF  00A2               	movwf	(?___lwdiv+1)
 22520  17B0  0844               	movf	(printf@_val+1),w
 22521  17B1  01A4               	clrf	1+(?___lwdiv)+02h
 22522  17B2  07A4               	addwf	1+(?___lwdiv)+02h
 22523  17B3  0843               	movf	(printf@_val),w
 22524  17B4  01A3               	clrf	0+(?___lwdiv)+02h
 22525  17B5  07A3               	addwf	0+(?___lwdiv)+02h
 22526                           
 22527  17B6  3189  2145  3194   	fcall	___lwdiv
 22528  17B9  0020               	movlb 0	; select bank0
 22529  17BA  0821               	movf	(0+(?___lwdiv)),w
 22530  17BB  390F               	andlw	0Fh
 22531  17BC  3EC1               	addlw	low(STR_115|8000h)
 22532  17BD  0084               	movwf	fsr0l
 22533  17BE  3086               	movlw	high(STR_115|8000h)
 22534  17BF  1803               	skipnc
 22535  17C0  3E01               	addlw	1
 22536  17C1  0085               	movwf	fsr0h
 22537  17C2  0800               	movf	indf0,w ;code access
 22538  17C3  00B9               	movwf	(??_printf+0)+0
 22539  17C4  0839               	movf	(??_printf+0)+0,w
 22540  17C5  00C2               	movwf	(printf@c)
 22541                           	line	1502
 22542  17C6  2FD5               	goto	l37309
 22543                           	line	1515
 22544                           	
 22545  17C7                     l37305:	
 22546  17C7  2FD5               	goto	l37309
 22547                           	line	1471
 22548                           	
 22549  17C8                     l23586:	
 22550                           	
 22551  17C8                     l37307:	
 22552  17C8  0020               	movlb 0	; select bank0
 22553  17C9  083E               	movf	(printf@flag),w
 22554  17CA  39C0               	andlw	0C0h
 22555                           	; Switch size 1, requested type "space"
 22556                           ; Number of cases is 3, Range of values is 0 to 192
 22557                           ; switch strategies available:
 22558                           ; Name         Instructions Cycles
 22559                           ; simple_byte           10     6 (average)
 22560                           ; jumptable            260     6 (fixed)
 22561                           ; rangetable           197     6 (fixed)
 22562                           ; spacedrange          391     8 (fixed)
 22563                           ; locatedrange         193     3 (fixed)
 22564                           ;	Chosen strategy is simple_byte
 22565                           
 22566                           	opt asmopt_off
 22567  17CB  3A00               	xorlw	0^0	; case 0
 22568  17CC  1903               	skipnz
 22569  17CD  2F79               	goto	l37301
 22570  17CE  3A80               	xorlw	128^0	; case 128
 22571  17CF  1903               	skipnz
 22572  17D0  2FA4               	goto	l37303
 22573  17D1  3A40               	xorlw	192^128	; case 192
 22574  17D2  1903               	skipnz
 22575  17D3  2F79               	goto	l37301
 22576  17D4  2FD5               	goto	l37309
 22577                           	opt asmopt_on
 22578                           
 22579                           	line	1515
 22580                           	
 22581  17D5                     l23589:	
 22582                           	line	1516
 22583                           	
 22584  17D5                     l37309:	
 22585  17D5  0842               	movf	(printf@c),w
 22586  17D6  31AB  2368  3194   	fcall	_putch
 22587  17D9  2FDA               	goto	l37311
 22588                           	line	1517
 22589                           	
 22590  17DA                     l23584:	
 22591                           	line	1469
 22592                           	
 22593  17DA                     l37311:	
 22594  17DA  30FF               	movlw	(-1)
 22595  17DB  0020               	movlb 0	; select bank0
 22596  17DC  00B9               	movwf	(??_printf+0)+0
 22597  17DD  0839               	movf	(??_printf+0)+0,w
 22598  17DE  07C1               	addwf	(printf@prec),f
 22599  17DF  0841               	movf	((printf@prec)),w
 22600  17E0  3AFF               	xorlw	-1&0ffh
 22601  17E1  1D03               	skipz
 22602  17E2  2FE4               	goto	u10261
 22603  17E3  2FE5               	goto	u10260
 22604  17E4                     u10261:
 22605  17E4  2FC8               	goto	l37307
 22606  17E5                     u10260:
 22607  17E5  2FE7               	goto	l37313
 22608                           	
 22609  17E6                     l23591:	
 22610  17E6  2FE7               	goto	l37313
 22611                           	line	1525
 22612                           	
 22613  17E7                     l23509:	
 22614                           	line	540
 22615                           	
 22616  17E7                     l37313:	
 22617  17E7  0020               	movlb 0	; select bank0
 22618  17E8  0830               	movf	(printf@f+1),w
 22619  17E9  00BA               	movwf	(??_printf+0)+0+1
 22620  17EA  082F               	movf	(printf@f),w
 22621  17EB  00B9               	movwf	(??_printf+0)+0
 22622  17EC  3001               	movlw	(01h)
 22623  17ED  07AF               	addwf	(printf@f),f
 22624  17EE  1803               	skipnc
 22625  17EF  0AB0               	incf	(printf@f+1),f
 22626  17F0  0839               	movf	0+(??_printf+0)+0,w
 22627  17F1  0084               	movwf	fsr0l
 22628  17F2  083A               	movf	(1+(??_printf+0)+0),w
 22629  17F3  0085               	movwf	fsr0h
 22630  17F4  0800               	movf	indf0,w ;code access
 22631  17F5  00BB               	movwf	(??_printf+2)+0
 22632  17F6  083B               	movf	(??_printf+2)+0,w
 22633  17F7  00C2               	movwf	(printf@c)
 22634  17F8  08C2               	movf	((printf@c)),f
 22635  17F9  1D03               	skipz
 22636  17FA  2FFC               	goto	u10271
 22637  17FB  2FFD               	goto	u10270
 22638  17FC                     u10271:
 22639  17FC  2CA6               	goto	l37123
 22640  17FD                     u10270:
 22641  17FD  2FFF               	goto	l23593
 22642                           	
 22643  17FE                     l23592:	
 22644  17FE  2FFF               	goto	l23593
 22645                           	line	1527
 22646                           	
 22647  17FF                     l23528:	
 22648                           	line	1533
 22649                           ;	Return value of _printf is never used
 22650                           	
 22651  17FF                     l23593:	
 22652  17FF  0008               	return
 22653                           	opt stack 0
 22654                           GLOBAL	__end_of_printf
 22655  1800                     	__end_of_printf:
 22656 ;; =============== function _printf ends ============
 22657                           
 22658                           	signat	_printf,602
 22659                           	global	_serial_init
 22660                           psect	text3296,local,class=CODE,delta=2
 22661                           global __ptext3296
 22662  19FF                     __ptext3296:
 22663                           
 22664 ;; *************** function _serial_init *****************
 22665 ;; Defined at:
 22666 ;;		line 37 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 22667 ;; Parameters:    Size  Location     Type
 22668 ;;  bitrate         4   14[BANK0 ] unsigned long 
 22669 ;; Auto vars:     Size  Location     Type
 22670 ;;  divider         4   30[BANK0 ] unsigned long 
 22671 ;; Return value:  Size  Location     Type
 22672 ;;		None               void
 22673 ;; Registers used:
 22674 ;;		wreg, status,2, status,0, pclath, cstack
 22675 ;; Tracked objects:
 22676 ;;		On entry : 0/0
 22677 ;;		On exit  : 0/0
 22678 ;;		Unchanged: 0/0
 22679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22681 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22682 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 22683 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0
 22684 ;;Total ram usage:       20 bytes
 22685 ;; Hardware stack levels used:    1
 22686 ;; Hardware stack levels required when called:    3
 22687 ;; This function calls:
 22688 ;;		___lldiv
 22689 ;; This function is called by:
 22690 ;;		_main
 22691 ;; This function uses a non-reentrant model
 22692 ;;
 22693                           psect	text3296
 22694                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 22695                           	line	37
 22696                           	global	__size_of_serial_init
 22697  00C7                     	__size_of_serial_init	equ	__end_of_serial_init-_serial_init
 22698                           	
 22699  19FF                     _serial_init:	
 22700                           	opt	stack 12
 22701                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
 22702                           	line	39
 22703                           	
 22704  19FF                     l34533:	
 22705                           ;serial.c: 39: rx.head = 0;
 22706  19FF  30F8               	movlw	((0 & ((1<<3)-1))<<0)|not (((1<<3)-1)<<0)
 22707  1A00  0022               	movlb 2	; select bank2
 22708  1A01  05B9               	andwf	0+(_rx)^0100h+08h,f
 22709                           	line	40
 22710                           ;serial.c: 40: rx.tail = 0;
 22711  1A02  30C7               	movlw	((0 & ((1<<3)-1))<<3)|not (((1<<3)-1)<<3)
 22712  1A03  05B9               	andwf	0+(_rx)^0100h+08h,f
 22713                           	line	41
 22714                           	
 22715  1A04                     l34535:	
 22716                           ;serial.c: 41: rx.xon_enabled = 1;
 22717  1A04  1739               	bsf	0+(_rx)^0100h+08h,6
 22718                           	line	42
 22719                           	
 22720  1A05                     l34537:	
 22721                           ;serial.c: 42: rx.xon_state = 1;
 22722  1A05  17B9               	bsf	0+(_rx)^0100h+08h,7
 22723                           	line	55
 22724                           	
 22725  1A06                     l34539:	
 22726                           ;serial.c: 55: BRG16 = 1;
 22727  1A06  0023               	movlb 3	; select bank3
 22728  1A07  159F               	bsf	(3323/8)^0180h,(3323)&7
 22729                           	line	56
 22730                           	
 22731  1A08                     l34541:	
 22732                           ;serial.c: 56: if (BRG16) {
 22733  1A08  1D9F               	btfss	(3323/8)^0180h,(3323)&7
 22734  1A09  2A0B               	goto	u6581
 22735  1A0A  2A0C               	goto	u6580
 22736  1A0B                     u6581:
 22737  1A0B  2A57               	goto	l34549
 22738  1A0C                     u6580:
 22739                           	line	58
 22740                           	
 22741  1A0C                     l34543:	
 22742                           ;serial.c: 58: unsigned long divider = ((2*(((2*((4UL * (1000UL * ((1000UL)))))+(4UL))/(
                                 2*(4UL))))+(bitrate))/(2*(bitrate)))-1;
 22743  1A0C  0020               	movlb 0	; select bank0
 22744  1A0D  082F               	movf	(serial_init@bitrate),w
 22745  1A0E  00B3               	movwf	(??_serial_init+0)+0
 22746  1A0F  0830               	movf	(serial_init@bitrate+1),w
 22747  1A10  00B4               	movwf	((??_serial_init+0)+0+1)
 22748  1A11  0831               	movf	(serial_init@bitrate+2),w
 22749  1A12  00B5               	movwf	((??_serial_init+0)+0+2)
 22750  1A13  0832               	movf	(serial_init@bitrate+3),w
 22751  1A14  00B6               	movwf	((??_serial_init+0)+0+3)
 22752  1A15  3001               	movlw	01h
 22753  1A16                     u6595:
 22754  1A16  35B3               	lslf	(??_serial_init+0)+0,f
 22755  1A17  0DB4               	rlf	(??_serial_init+0)+1,f
 22756  1A18  0DB5               	rlf	(??_serial_init+0)+2,f
 22757  1A19  0DB6               	rlf	(??_serial_init+0)+3,f
 22758  1A1A                     u6590:
 22759  1A1A  0B89               	decfsz	wreg,f
 22760  1A1B  2A16               	goto	u6595
 22761  1A1C  0836               	movf	3+(??_serial_init+0)+0,w
 22762  1A1D  00A4               	movwf	(?___lldiv+3)
 22763  1A1E  0835               	movf	2+(??_serial_init+0)+0,w
 22764  1A1F  00A3               	movwf	(?___lldiv+2)
 22765  1A20  0834               	movf	1+(??_serial_init+0)+0,w
 22766  1A21  00A2               	movwf	(?___lldiv+1)
 22767  1A22  0833               	movf	0+(??_serial_init+0)+0,w
 22768  1A23  00A1               	movwf	(?___lldiv)
 22769                           
 22770  1A24  3080               	movlw	080h
 22771  1A25  072F               	addwf	((serial_init@bitrate)),w
 22772  1A26  00A5               	movwf	0+(?___lldiv)+04h
 22773  1A27  3084               	movlw	084h
 22774  1A28  3D30               	addwfc	((serial_init@bitrate+1)),w
 22775  1A29  00A6               	movwf	1+0+(?___lldiv)+04h
 22776  1A2A  301E               	movlw	01Eh
 22777  1A2B  3D31               	addwfc	((serial_init@bitrate+2)),w
 22778  1A2C  00A7               	movwf	2+0+(?___lldiv)+04h
 22779  1A2D  3000               	movlw	0
 22780  1A2E  3D32               	addwfc	((serial_init@bitrate+3)),w
 22781  1A2F  00A8               	movwf	3+0+(?___lldiv)+04h
 22782  1A30  31A0  207B  3199   	fcall	___lldiv
 22783  1A33  30FF               	movlw	0FFh
 22784  1A34  0020               	movlb 0	; select bank0
 22785  1A35  0721               	addwf	((0+(?___lldiv))),w
 22786  1A36  00BF               	movwf	(serial_init@divider)
 22787  1A37  30FF               	movlw	0FFh
 22788  1A38  3D22               	addwfc	((1+(?___lldiv))),w
 22789  1A39  00C0               	movwf	1+(serial_init@divider)
 22790  1A3A  30FF               	movlw	0FFh
 22791  1A3B  3D23               	addwfc	((2+(?___lldiv))),w
 22792  1A3C  00C1               	movwf	2+(serial_init@divider)
 22793  1A3D  30FF               	movlw	0FFh
 22794  1A3E  3D24               	addwfc	((3+(?___lldiv))),w
 22795  1A3F  00C2               	movwf	3+(serial_init@divider)
 22796                           	line	60
 22797                           	
 22798  1A40                     l34545:	
 22799                           ;serial.c: 60: SPBRG = divider & 0x00FF;
 22800  1A40  083F               	movf	(serial_init@divider),w
 22801  1A41  0023               	movlb 3	; select bank3
 22802  1A42  009B               	movwf	(411)^0180h	;volatile
 22803                           	line	61
 22804                           	
 22805  1A43                     l34547:	
 22806                           ;serial.c: 61: SPBRGH = (divider & 0xFF00) >> 8;
 22807  1A43  0020               	movlb 0	; select bank0
 22808  1A44  083F               	movf	(serial_init@divider),w
 22809  1A45  00B3               	movwf	(??_serial_init+0)+0
 22810  1A46  0840               	movf	(serial_init@divider+1),w
 22811  1A47  00B4               	movwf	((??_serial_init+0)+0+1)
 22812  1A48  0841               	movf	(serial_init@divider+2),w
 22813  1A49  00B5               	movwf	((??_serial_init+0)+0+2)
 22814  1A4A  0842               	movf	(serial_init@divider+3),w
 22815  1A4B  00B6               	movwf	((??_serial_init+0)+0+3)
 22816  1A4C  3008               	movlw	08h
 22817  1A4D                     u6605:
 22818  1A4D  36B6               	lsrf	(??_serial_init+0)+3,f
 22819  1A4E  0CB5               	rrf	(??_serial_init+0)+2,f
 22820  1A4F  0CB4               	rrf	(??_serial_init+0)+1,f
 22821  1A50  0CB3               	rrf	(??_serial_init+0)+0,f
 22822  1A51                     u6600:
 22823  1A51  0B89               	decfsz	wreg,f
 22824  1A52  2A4D               	goto	u6605
 22825  1A53  0833               	movf	0+(??_serial_init+0)+0,w
 22826  1A54  0023               	movlb 3	; select bank3
 22827  1A55  009C               	movwf	(412)^0180h	;volatile
 22828                           	line	62
 22829                           ;serial.c: 62: } else
 22830  1A56  2AAA               	goto	l34551
 22831                           	
 22832  1A57                     l19275:	
 22833                           	line	64
 22834                           	
 22835  1A57                     l34549:	
 22836                           ;serial.c: 64: SPBRG = ((2*(((2*((4UL * (1000UL * ((1000UL)))))+(bitrate))/(2*(bitrate))
                                 ))+(16UL))/(2*(16UL)))-1;
 22837  1A57  3010               	movlw	010h
 22838  1A58  0020               	movlb 0	; select bank0
 22839  1A59  00B3               	movwf	((??_serial_init+0)+0)
 22840  1A5A  3000               	movlw	0
 22841  1A5B  00B4               	movwf	((??_serial_init+0)+0+1)
 22842  1A5C  3000               	movlw	0
 22843  1A5D  00B5               	movwf	((??_serial_init+0)+0+2)
 22844  1A5E  3000               	movlw	0
 22845  1A5F  00B6               	movwf	((??_serial_init+0)+0+3)
 22846  1A60  082F               	movf	(serial_init@bitrate),w
 22847  1A61  00B7               	movwf	(??_serial_init+4)+0
 22848  1A62  0830               	movf	(serial_init@bitrate+1),w
 22849  1A63  00B8               	movwf	((??_serial_init+4)+0+1)
 22850  1A64  0831               	movf	(serial_init@bitrate+2),w
 22851  1A65  00B9               	movwf	((??_serial_init+4)+0+2)
 22852  1A66  0832               	movf	(serial_init@bitrate+3),w
 22853  1A67  00BA               	movwf	((??_serial_init+4)+0+3)
 22854  1A68  3001               	movlw	01h
 22855  1A69                     u6615:
 22856  1A69  35B7               	lslf	(??_serial_init+4)+0,f
 22857  1A6A  0DB8               	rlf	(??_serial_init+4)+1,f
 22858  1A6B  0DB9               	rlf	(??_serial_init+4)+2,f
 22859  1A6C  0DBA               	rlf	(??_serial_init+4)+3,f
 22860  1A6D                     u6610:
 22861  1A6D  0B89               	decfsz	wreg,f
 22862  1A6E  2A69               	goto	u6615
 22863  1A6F  083A               	movf	3+(??_serial_init+4)+0,w
 22864  1A70  00A4               	movwf	(?___lldiv+3)
 22865  1A71  0839               	movf	2+(??_serial_init+4)+0,w
 22866  1A72  00A3               	movwf	(?___lldiv+2)
 22867  1A73  0838               	movf	1+(??_serial_init+4)+0,w
 22868  1A74  00A2               	movwf	(?___lldiv+1)
 22869  1A75  0837               	movf	0+(??_serial_init+4)+0,w
 22870  1A76  00A1               	movwf	(?___lldiv)
 22871                           
 22872  1A77  3000               	movlw	0
 22873  1A78  072F               	addwf	((serial_init@bitrate)),w
 22874  1A79  00A5               	movwf	0+(?___lldiv)+04h
 22875  1A7A  3012               	movlw	012h
 22876  1A7B  3D30               	addwfc	((serial_init@bitrate+1)),w
 22877  1A7C  00A6               	movwf	1+0+(?___lldiv)+04h
 22878  1A7D  307A               	movlw	07Ah
 22879  1A7E  3D31               	addwfc	((serial_init@bitrate+2)),w
 22880  1A7F  00A7               	movwf	2+0+(?___lldiv)+04h
 22881  1A80  3000               	movlw	0
 22882  1A81  3D32               	addwfc	((serial_init@bitrate+3)),w
 22883  1A82  00A8               	movwf	3+0+(?___lldiv)+04h
 22884  1A83  31A0  207B  3199   	fcall	___lldiv
 22885  1A86  0020               	movlb 0	; select bank0
 22886  1A87  0821               	movf	(0+?___lldiv),w
 22887  1A88  00BB               	movwf	(??_serial_init+8)+0
 22888  1A89  0822               	movf	(1+?___lldiv),w
 22889  1A8A  00BC               	movwf	((??_serial_init+8)+0+1)
 22890  1A8B  0823               	movf	(2+?___lldiv),w
 22891  1A8C  00BD               	movwf	((??_serial_init+8)+0+2)
 22892  1A8D  0824               	movf	(3+?___lldiv),w
 22893  1A8E  00BE               	movwf	((??_serial_init+8)+0+3)
 22894  1A8F  3001               	movlw	01h
 22895  1A90                     u6625:
 22896  1A90  35BB               	lslf	(??_serial_init+8)+0,f
 22897  1A91  0DBC               	rlf	(??_serial_init+8)+1,f
 22898  1A92  0DBD               	rlf	(??_serial_init+8)+2,f
 22899  1A93  0DBE               	rlf	(??_serial_init+8)+3,f
 22900  1A94                     u6620:
 22901  1A94  0B89               	decfsz	wreg,f
 22902  1A95  2A90               	goto	u6625
 22903  1A96  083B               	movf	0+(??_serial_init+8)+0,w
 22904  1A97  07B3               	addwf	(??_serial_init+0)+0,f
 22905  1A98  083C               	movf	1+(??_serial_init+8)+0,w
 22906  1A99  3DB4               	addwfc	(??_serial_init+0)+1,f
 22907  1A9A  083D               	movf	2+(??_serial_init+8)+0,w
 22908  1A9B  3DB5               	addwfc	(??_serial_init+0)+2,f
 22909  1A9C  083E               	movf	3+(??_serial_init+8)+0,w
 22910  1A9D  3DB6               	addwfc	(??_serial_init+0)+3,f
 22911  1A9E  3005               	movlw	05h
 22912  1A9F                     u6635:
 22913  1A9F  36B6               	lsrf	(??_serial_init+0)+3,f
 22914  1AA0  0CB5               	rrf	(??_serial_init+0)+2,f
 22915  1AA1  0CB4               	rrf	(??_serial_init+0)+1,f
 22916  1AA2  0CB3               	rrf	(??_serial_init+0)+0,f
 22917  1AA3                     u6630:
 22918  1AA3  0B89               	decfsz	wreg,f
 22919  1AA4  2A9F               	goto	u6635
 22920  1AA5  0833               	movf	0+(??_serial_init+0)+0,w
 22921  1AA6  3EFF               	addlw	0FFh
 22922  1AA7  0023               	movlb 3	; select bank3
 22923  1AA8  009B               	movwf	(411)^0180h	;volatile
 22924  1AA9  2AAA               	goto	l34551
 22925                           	
 22926  1AAA                     l19276:	
 22927                           	line	67
 22928                           	
 22929  1AAA                     l34551:	
 22930                           ;serial.c: 67: CSRC = 1;
 22931  1AAA  179E               	bsf	(3319/8)^0180h,(3319)&7
 22932                           	line	68
 22933                           	
 22934  1AAB                     l34553:	
 22935                           ;serial.c: 68: BRGH = 1;
 22936  1AAB  151E               	bsf	(3314/8)^0180h,(3314)&7
 22937                           	line	69
 22938                           	
 22939  1AAC                     l34555:	
 22940                           ;serial.c: 69: SYNC = 0;
 22941  1AAC  121E               	bcf	(3316/8)^0180h,(3316)&7
 22942                           	line	70
 22943                           	
 22944  1AAD                     l34557:	
 22945                           ;serial.c: 70: SPEN = 1;
 22946  1AAD  179D               	bsf	(3311/8)^0180h,(3311)&7
 22947                           	line	71
 22948                           	
 22949  1AAE                     l34559:	
 22950                           ;serial.c: 71: RCIE = 0;
 22951  1AAE  0021               	movlb 1	; select bank1
 22952  1AAF  1291               	bcf	(1165/8)^080h,(1165)&7
 22953                           	line	72
 22954                           	
 22955  1AB0                     l34561:	
 22956                           ;serial.c: 72: TXIE = 0;
 22957  1AB0  1211               	bcf	(1164/8)^080h,(1164)&7
 22958                           	line	73
 22959                           	
 22960  1AB1                     l34563:	
 22961                           ;serial.c: 73: RX9 = 0;
 22962  1AB1  0023               	movlb 3	; select bank3
 22963  1AB2  131D               	bcf	(3310/8)^0180h,(3310)&7
 22964                           	line	74
 22965                           	
 22966  1AB3                     l34565:	
 22967                           ;serial.c: 74: TX9 = 0;
 22968  1AB3  131E               	bcf	(3318/8)^0180h,(3318)&7
 22969                           	line	75
 22970                           	
 22971  1AB4                     l34567:	
 22972                           ;serial.c: 75: CREN = 0;
 22973  1AB4  121D               	bcf	(3308/8)^0180h,(3308)&7
 22974                           	line	76
 22975                           	
 22976  1AB5                     l34569:	
 22977                           ;serial.c: 76: CREN = 1;
 22978  1AB5  161D               	bsf	(3308/8)^0180h,(3308)&7
 22979                           	line	77
 22980                           	
 22981  1AB6                     l34571:	
 22982                           ;serial.c: 77: TXEN = 0;
 22983  1AB6  129E               	bcf	(3317/8)^0180h,(3317)&7
 22984                           	line	78
 22985                           	
 22986  1AB7                     l34573:	
 22987                           ;serial.c: 78: TXEN = 1;
 22988  1AB7  169E               	bsf	(3317/8)^0180h,(3317)&7
 22989                           	line	81
 22990                           	
 22991  1AB8                     l34575:	
 22992                           ;serial.c: 81: RCIE = 1;
 22993  1AB8  0021               	movlb 1	; select bank1
 22994  1AB9  1691               	bsf	(1165/8)^080h,(1165)&7
 22995                           	line	83
 22996                           	
 22997  1ABA                     l34577:	
 22998                           ;serial.c: 83: if (rx.xon_enabled) {
 22999  1ABA  0022               	movlb 2	; select bank2
 23000  1ABB  1F39               	btfss	0+(_rx)^0100h+08h,6
 23001  1ABC  2ABE               	goto	u6641
 23002  1ABD  2ABF               	goto	u6640
 23003  1ABE                     u6641:
 23004  1ABE  2AC5               	goto	l19278
 23005  1ABF                     u6640:
 23006                           	line	84
 23007                           	
 23008  1ABF                     l34579:	
 23009                           ;serial.c: 84: TXREG = 0x11;
 23010  1ABF  3011               	movlw	(011h)
 23011  1AC0  0023               	movlb 3	; select bank3
 23012  1AC1  009A               	movwf	(410)^0180h	;volatile
 23013                           	line	85
 23014                           	
 23015  1AC2                     l34581:	
 23016                           ;serial.c: 85: rx.xon_state = 1;
 23017  1AC2  0022               	movlb 2	; select bank2
 23018  1AC3  17B9               	bsf	0+(_rx)^0100h+08h,7
 23019  1AC4  2AC5               	goto	l19278
 23020                           	line	86
 23021                           	
 23022  1AC5                     l19277:	
 23023                           	line	88
 23024                           	
 23025  1AC5                     l19278:	
 23026  1AC5  0008               	return
 23027                           	opt stack 0
 23028                           GLOBAL	__end_of_serial_init
 23029  1AC6                     	__end_of_serial_init:
 23030 ;; =============== function _serial_init ends ============
 23031                           
 23032                           	signat	_serial_init,4216
 23033                           	global	_catgenie_init
 23034                           psect	text3297,local,class=CODE,delta=2
 23035                           global __ptext3297
 23036  0053                     __ptext3297:
 23037                           
 23038 ;; *************** function _catgenie_init *****************
 23039 ;; Defined at:
 23040 ;;		line 100 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 23041 ;; Parameters:    Size  Location     Type
 23042 ;;		None
 23043 ;; Auto vars:     Size  Location     Type
 23044 ;;  tempmask        1    7[BANK0 ] unsigned char 
 23045 ;;  temp            1    8[BANK0 ] unsigned char 
 23046 ;; Return value:  Size  Location     Type
 23047 ;;                  1    wreg      unsigned char 
 23048 ;; Registers used:
 23049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23050 ;; Tracked objects:
 23051 ;;		On entry : 0/0
 23052 ;;		On exit  : 0/0
 23053 ;;		Unchanged: 0/0
 23054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23057 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23058 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 23059 ;;Total ram usage:        5 bytes
 23060 ;; Hardware stack levels used:    1
 23061 ;; Hardware stack levels required when called:    3
 23062 ;; This function calls:
 23063 ;;		___bmul
 23064 ;; This function is called by:
 23065 ;;		_main
 23066 ;; This function uses a non-reentrant model
 23067 ;;
 23068                           psect	text3297
 23069                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 23070                           	line	100
 23071                           	global	__size_of_catgenie_init
 23072  00A0                     	__size_of_catgenie_init	equ	__end_of_catgenie_init-_catgenie_init
 23073                           	
 23074  0053                     _catgenie_init:	
 23075                           	opt	stack 12
 23076                           ; Regs used in _catgenie_init: [wreg+fsr1l-status,0+pclath+cstack]
 23077                           	line	105
 23078                           	
 23079  0053                     l37069:	
 23080                           ;catgenie120.c: 101: unsigned char temp ;
 23081                           ;catgenie120.c: 105: nWPUEN = 0;
 23082  0053  0021               	movlb 1	; select bank1
 23083  0054  1395               	bcf	(1199/8)^080h,(1199)&7
 23084                           	line	113
 23085                           	
 23086  0055                     l37071:	
 23087                           ;catgenie120.c: 111: TRISA = (1U << (0)) |
 23088                           ;catgenie120.c: 112: (1U << (4)) |
 23089                           ;catgenie120.c: 113: (1U << (1));
 23090  0055  3013               	movlw	(013h)
 23091  0056  008C               	movwf	(140)^080h	;volatile
 23092                           	line	114
 23093                           	
 23094  0057                     l37073:	
 23095                           ;catgenie120.c: 114: PORTA = 0x00;
 23096  0057  0020               	movlb 0	; select bank0
 23097  0058  018C               	clrf	(12)	;volatile
 23098                           	line	121
 23099                           	
 23100  0059                     l37075:	
 23101                           ;catgenie120.c: 121: ANSELA = (1U << (1));
 23102  0059  3002               	movlw	(02h)
 23103  005A  0023               	movlb 3	; select bank3
 23104  005B  008C               	movwf	(396)^0180h	;volatile
 23105                           	line	137
 23106                           	
 23107  005C                     l37077:	
 23108                           ;catgenie120.c: 131: TRISB = (1U << (0)) |
 23109                           ;catgenie120.c: 132: (1U << (3)) |
 23110                           ;catgenie120.c: 133: (1U << (1)) |
 23111                           ;catgenie120.c: 134: (1U << (4)) |
 23112                           ;catgenie120.c: 135: (1U << (5)) |
 23113                           ;catgenie120.c: 136: (1U << (6)) |
 23114                           ;catgenie120.c: 137: (1U << (7)) ;
 23115  005C  30FB               	movlw	(0FBh)
 23116  005D  0021               	movlb 1	; select bank1
 23117  005E  008D               	movwf	(141)^080h	;volatile
 23118                           	line	138
 23119                           	
 23120  005F                     l37079:	
 23121                           ;catgenie120.c: 138: PORTB = 0x00;
 23122  005F  0020               	movlb 0	; select bank0
 23123  0060  018D               	clrf	(13)	;volatile
 23124                           	line	144
 23125                           	
 23126  0061                     l37081:	
 23127                           ;catgenie120.c: 144: ANSELB = 0;
 23128  0061  0023               	movlb 3	; select bank3
 23129  0062  018D               	clrf	(397)^0180h	;volatile
 23130                           	line	146
 23131                           	
 23132  0063                     l37083:	
 23133                           ;catgenie120.c: 146: WPUB = ~(1U << (3));
 23134  0063  30F7               	movlw	(0F7h)
 23135  0064  0024               	movlb 4	; select bank4
 23136  0065  008D               	movwf	(525)^0200h	;volatile
 23137                           	line	153
 23138                           	
 23139  0066                     l37085:	
 23140                           ;catgenie120.c: 153: IOCBP = (1U << (4));
 23141  0066  3010               	movlw	(010h)
 23142  0067  0027               	movlb 7	; select bank7
 23143  0068  0094               	movwf	(916)^0380h	;volatile
 23144                           	line	154
 23145                           	
 23146  0069                     l37087:	
 23147                           ;catgenie120.c: 154: IOCBN = (1U << (4));
 23148  0069  3010               	movlw	(010h)
 23149  006A  0095               	movwf	(917)^0380h	;volatile
 23150                           	line	155
 23151                           ;catgenie120.c: 155: IOCBF = 0;
 23152  006B  0196               	clrf	(918)^0380h	;volatile
 23153                           	line	156
 23154                           	
 23155  006C                     l37089:	
 23156                           ;catgenie120.c: 156: IOCIF = 0;
 23157  006C  100B               	bcf	(88/8),(88)&7
 23158                           	line	162
 23159                           	
 23160  006D                     l37091:	
 23161                           ;catgenie120.c: 162: IOCIE = 1;
 23162  006D  158B               	bsf	(91/8),(91)&7
 23163                           	line	167
 23164                           	
 23165  006E                     l37093:	
 23166                           ;catgenie120.c: 165: PORTB_old = (1U << (0)) |
 23167                           ;catgenie120.c: 166: (1U << (5)) |
 23168                           ;catgenie120.c: 167: (1U << (1)) ;
 23169  006E  3023               	movlw	(023h)
 23170  006F  0020               	movlb 0	; select bank0
 23171  0070  00A5               	movwf	(??_catgenie_init+0)+0
 23172  0071  0825               	movf	(??_catgenie_init+0)+0,w
 23173  0072  0021               	movlb 1	; select bank1
 23174  0073  00DB               	movwf	(catgenie120@PORTB_old)^080h
 23175                           	line	174
 23176                           	
 23177  0074                     l37095:	
 23178                           ;catgenie120.c: 172: TRISC = (1U << (3)) |
 23179                           ;catgenie120.c: 173: (1U << (4)) |
 23180                           ;catgenie120.c: 174: (1U << (7)) ;
 23181  0074  3098               	movlw	(098h)
 23182  0075  008E               	movwf	(142)^080h	;volatile
 23183                           	line	176
 23184                           ;catgenie120.c: 176: PORTC = 0x00;
 23185  0076  0020               	movlb 0	; select bank0
 23186  0077  018E               	clrf	(14)	;volatile
 23187                           	line	181
 23188                           ;catgenie120.c: 181: TRISD = 0;
 23189  0078  0021               	movlb 1	; select bank1
 23190  0079  018F               	clrf	(143)^080h	;volatile
 23191                           	line	182
 23192                           ;catgenie120.c: 182: PORTD = 0;
 23193  007A  0020               	movlb 0	; select bank0
 23194  007B  018F               	clrf	(15)	;volatile
 23195                           	line	185
 23196                           ;catgenie120.c: 185: ANSELD = 0;
 23197  007C  0023               	movlb 3	; select bank3
 23198  007D  018F               	clrf	(399)^0180h	;volatile
 23199                           	line	191
 23200                           ;catgenie120.c: 191: TRISE = 0x00;
 23201  007E  0021               	movlb 1	; select bank1
 23202  007F  0190               	clrf	(144)^080h	;volatile
 23203                           	line	192
 23204                           ;catgenie120.c: 192: PORTE = 0x00;
 23205  0080  0020               	movlb 0	; select bank0
 23206  0081  0190               	clrf	(16)	;volatile
 23207                           	line	195
 23208                           ;catgenie120.c: 195: ANSELE = 0;
 23209  0082  0023               	movlb 3	; select bank3
 23210  0083  0190               	clrf	(400)^0180h	;volatile
 23211                           	line	197
 23212                           ;catgenie120.c: 197: WPUE = 0x00;
 23213  0084  0024               	movlb 4	; select bank4
 23214  0085  0190               	clrf	(528)^0200h	;volatile
 23215                           	line	201
 23216                           	
 23217  0086                     l37097:	
 23218                           ;catgenie120.c: 201: _delay((unsigned long)((100)*((4UL * (1000UL * ((1000UL))))/4000.0)
                                 ));
 23219                           	opt asmopt_off
 23220  0086  3082               movlw	130
 23221  0087  0020               	movlb 0	; select bank0
 23222  0088  00A6               movwf	((??_catgenie_init+0)+0+1),f
 23223  0089  30DD               	movlw	221
 23224  008A  00A5               movwf	((??_catgenie_init+0)+0),f
 23225  008B                     u12677:
 23226  008B  0BA5               	decfsz	((??_catgenie_init+0)+0),f
 23227  008C  288B               	goto	u12677
 23228  008D  0BA6               	decfsz	((??_catgenie_init+0)+0+1),f
 23229  008E  288B               	goto	u12677
 23230  008F  2890               	nop2
 23231                           opt asmopt_on
 23232                           
 23233                           	line	202
 23234                           	
 23235  0090                     l37099:	
 23236                           ;catgenie120.c: 202: _delay((unsigned long)((100)*((4UL * (1000UL * ((1000UL))))/4000.0)
                                 ));
 23237                           	opt asmopt_off
 23238  0090  3082               movlw	130
 23239  0091  0020               	movlb 0	; select bank0
 23240  0092  00A6               movwf	((??_catgenie_init+0)+0+1),f
 23241  0093  30DD               	movlw	221
 23242  0094  00A5               movwf	((??_catgenie_init+0)+0),f
 23243  0095                     u12687:
 23244  0095  0BA5               	decfsz	((??_catgenie_init+0)+0),f
 23245  0096  2895               	goto	u12687
 23246  0097  0BA6               	decfsz	((??_catgenie_init+0)+0+1),f
 23247  0098  2895               	goto	u12687
 23248  0099  289A               	nop2
 23249                           opt asmopt_on
 23250                           
 23251                           	line	205
 23252                           	
 23253  009A                     l37101:	
 23254                           ;catgenie120.c: 205: for (temp = 0; temp < 3; temp++) {
 23255  009A  0020               	movlb 0	; select bank0
 23256  009B  01A9               	clrf	(catgenie_init@temp)
 23257                           	
 23258  009C                     l37103:	
 23259  009C  3003               	movlw	(03h)
 23260  009D  0229               	subwf	(catgenie_init@temp),w
 23261  009E  1C03               	skipc
 23262  009F  28A1               	goto	u9871
 23263  00A0  28A2               	goto	u9870
 23264  00A1                     u9871:
 23265  00A1  28A4               	goto	l37107
 23266  00A2                     u9870:
 23267  00A2  28E4               	goto	l10875
 23268                           	
 23269  00A3                     l37105:	
 23270  00A3  28E4               	goto	l10875
 23271                           	
 23272  00A4                     l10874:	
 23273                           	line	206
 23274                           	
 23275  00A4                     l37107:	
 23276                           ;catgenie120.c: 206: unsigned char tempmask = debouncers[temp].port_mask;
 23277  00A4  300E               	movlw	(0Eh)
 23278  00A5  00A5               	movwf	(??_catgenie_init+0)+0
 23279  00A6  0825               	movf	(??_catgenie_init+0)+0,w
 23280  00A7  00A1               	movwf	(?___bmul)
 23281  00A8  0829               	movf	(catgenie_init@temp),w
 23282  00A9  31A9  2179  3180   	fcall	___bmul
 23283  00AC  3E0C               	addlw	0Ch
 23284  00AD  3EA0               	addlw	_debouncers&0ffh
 23285  00AE  0086               	movwf	fsr1l
 23286  00AF  3001               	movlw 1	; select bank3/4
 23287  00B0  0087               	movwf fsr1h	
 23288                           	
 23289  00B1  0801               	movf	indf1,w
 23290  00B2  0020               	movlb 0	; select bank0
 23291  00B3  00A6               	movwf	(??_catgenie_init+1)+0
 23292  00B4  0826               	movf	(??_catgenie_init+1)+0,w
 23293  00B5  00A8               	movwf	(catgenie_init@tempmask)
 23294                           	line	208
 23295                           ;catgenie120.c: 208: debouncers[temp].state = *debouncers[temp].port & tempmask;
 23296  00B6  300E               	movlw	(0Eh)
 23297  00B7  00A5               	movwf	(??_catgenie_init+0)+0
 23298  00B8  0825               	movf	(??_catgenie_init+0)+0,w
 23299  00B9  00A1               	movwf	(?___bmul)
 23300  00BA  0829               	movf	(catgenie_init@temp),w
 23301  00BB  31A9  2179  3180   	fcall	___bmul
 23302  00BE  3E0B               	addlw	0Bh
 23303  00BF  3EA0               	addlw	_debouncers&0ffh
 23304  00C0  0086               	movwf	fsr1l
 23305  00C1  3001               	movlw 1	; select bank3/4
 23306  00C2  0087               	movwf fsr1h	
 23307                           	
 23308  00C3  0801               	movf	indf1,w
 23309  00C4  0086               	movwf	fsr1l
 23310  00C5  0187               	clrf fsr1h	
 23311                           	
 23312  00C6  0801               	movf	indf1,w
 23313  00C7  0020               	movlb 0	; select bank0
 23314  00C8  0528               	andwf	(catgenie_init@tempmask),w
 23315  00C9  00A6               	movwf	(??_catgenie_init+1)+0
 23316  00CA  300E               	movlw	(0Eh)
 23317  00CB  00A7               	movwf	(??_catgenie_init+2)+0
 23318  00CC  0827               	movf	(??_catgenie_init+2)+0,w
 23319  00CD  00A1               	movwf	(?___bmul)
 23320  00CE  0829               	movf	(catgenie_init@temp),w
 23321  00CF  31A9  2179  3180   	fcall	___bmul
 23322  00D2  3E0A               	addlw	0Ah
 23323  00D3  3EA0               	addlw	_debouncers&0ffh
 23324  00D4  0086               	movwf	fsr1l
 23325  00D5  3001               	movlw 1	; select bank3/4
 23326  00D6  0087               	movwf fsr1h	
 23327                           	
 23328  00D7  0020               	movlb 0	; select bank0
 23329  00D8  0826               	movf	(??_catgenie_init+1)+0,w
 23330  00D9  0081               	movwf	indf1
 23331                           	line	205
 23332                           	
 23333  00DA                     l37109:	
 23334  00DA  3001               	movlw	(01h)
 23335  00DB  00A5               	movwf	(??_catgenie_init+0)+0
 23336  00DC  0825               	movf	(??_catgenie_init+0)+0,w
 23337  00DD  07A9               	addwf	(catgenie_init@temp),f
 23338                           	
 23339  00DE                     l37111:	
 23340  00DE  3003               	movlw	(03h)
 23341  00DF  0229               	subwf	(catgenie_init@temp),w
 23342  00E0  1C03               	skipc
 23343  00E1  28E3               	goto	u9881
 23344  00E2  28E4               	goto	u9880
 23345  00E3                     u9881:
 23346  00E3  28A4               	goto	l37107
 23347  00E4                     u9880:
 23348                           	
 23349  00E4                     l10875:	
 23350                           	line	212
 23351                           ;catgenie120.c: 209: }
 23352                           ;catgenie120.c: 212: temp = 0;
 23353  00E4  01A9               	clrf	(catgenie_init@temp)
 23354                           	line	213
 23355                           ;catgenie120.c: 213: if (!(PORTB & (1U << (0))))
 23356  00E5  180D               	btfsc	(13),(0)&7	;volatile
 23357  00E6  28E8               	goto	u9891
 23358  00E7  28E9               	goto	u9890
 23359  00E8                     u9891:
 23360  00E8  28EA               	goto	l10876
 23361  00E9                     u9890:
 23362                           	line	214
 23363                           	
 23364  00E9                     l37113:	
 23365                           ;catgenie120.c: 214: temp |= (0x01 << 0);
 23366  00E9  1429               	bsf	(catgenie_init@temp)+(0/8),(0)&7
 23367                           	
 23368  00EA                     l10876:	
 23369                           	line	215
 23370                           ;catgenie120.c: 215: if (!(PORTB & (1U << (5))))
 23371  00EA  1A8D               	btfsc	(13),(5)&7	;volatile
 23372  00EB  28ED               	goto	u9901
 23373  00EC  28EE               	goto	u9900
 23374  00ED                     u9901:
 23375  00ED  28F0               	goto	l37117
 23376  00EE                     u9900:
 23377                           	line	216
 23378                           	
 23379  00EE                     l37115:	
 23380                           ;catgenie120.c: 216: temp |= (0x01 << 1);
 23381  00EE  14A9               	bsf	(catgenie_init@temp)+(1/8),(1)&7
 23382  00EF  28F0               	goto	l37117
 23383                           	
 23384  00F0                     l10877:	
 23385                           	line	218
 23386                           	
 23387  00F0                     l37117:	
 23388                           ;catgenie120.c: 218: return temp;
 23389  00F0  0829               	movf	(catgenie_init@temp),w
 23390  00F1  28F2               	goto	l10878
 23391                           	
 23392  00F2                     l37119:	
 23393                           	line	219
 23394                           	
 23395  00F2                     l10878:	
 23396  00F2  0008               	return
 23397                           	opt stack 0
 23398                           GLOBAL	__end_of_catgenie_init
 23399  00F3                     	__end_of_catgenie_init:
 23400 ;; =============== function _catgenie_init ends ============
 23401                           
 23402                           	signat	_catgenie_init,89
 23403                           	global	___lldiv
 23404                           psect	text3298,local,class=CODE,delta=2
 23405                           global __ptext3298
 23406  207B                     __ptext3298:
 23407                           
 23408 ;; *************** function ___lldiv *****************
 23409 ;; Defined at:
 23410 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 23411 ;; Parameters:    Size  Location     Type
 23412 ;;  divisor         4    0[BANK0 ] unsigned long 
 23413 ;;  dividend        4    4[BANK0 ] unsigned long 
 23414 ;; Auto vars:     Size  Location     Type
 23415 ;;  quotient        4    9[BANK0 ] unsigned long 
 23416 ;;  counter         1   13[BANK0 ] unsigned char 
 23417 ;; Return value:  Size  Location     Type
 23418 ;;                  4    0[BANK0 ] unsigned long 
 23419 ;; Registers used:
 23420 ;;		wreg, status,2, status,0
 23421 ;; Tracked objects:
 23422 ;;		On entry : 0/0
 23423 ;;		On exit  : 0/0
 23424 ;;		Unchanged: 0/0
 23425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23426 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 23427 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 23428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23429 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 23430 ;;Total ram usage:       14 bytes
 23431 ;; Hardware stack levels used:    1
 23432 ;; Hardware stack levels required when called:    2
 23433 ;; This function calls:
 23434 ;;		Nothing
 23435 ;; This function is called by:
 23436 ;;		_serial_init
 23437 ;; This function uses a non-reentrant model
 23438 ;;
 23439                           psect	text3298
 23440                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 23441                           	line	5
 23442                           	global	__size_of___lldiv
 23443  0063                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 23444                           	
 23445  207B                     ___lldiv:	
 23446                           	opt	stack 12
 23447                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 23448                           	line	9
 23449                           	
 23450  207B                     l34457:	
 23451  207B  3000               	movlw	0
 23452  207C  0020               	movlb 0	; select bank0
 23453  207D  00AD               	movwf	(___lldiv@quotient+3)
 23454  207E  3000               	movlw	0
 23455  207F  00AC               	movwf	(___lldiv@quotient+2)
 23456  2080  3000               	movlw	0
 23457  2081  00AB               	movwf	(___lldiv@quotient+1)
 23458  2082  3000               	movlw	0
 23459  2083  00AA               	movwf	(___lldiv@quotient)
 23460                           
 23461                           	line	10
 23462  2084  0824               	movf	(___lldiv@divisor+3),w
 23463  2085  0423               	iorwf	(___lldiv@divisor+2),w
 23464  2086  0422               	iorwf	(___lldiv@divisor+1),w
 23465  2087  0421               	iorwf	(___lldiv@divisor),w
 23466  2088  1903               	skipnz
 23467  2089  288B               	goto	u6471
 23468  208A  288C               	goto	u6470
 23469  208B                     u6471:
 23470  208B  28D4               	goto	l34477
 23471  208C                     u6470:
 23472                           	line	11
 23473                           	
 23474  208C                     l34459:	
 23475  208C  01AE               	clrf	(___lldiv@counter)
 23476  208D  1403               	bsf	status,0
 23477  208E  0DAE               	rlf	(___lldiv@counter),f
 23478                           	line	12
 23479  208F  289C               	goto	l34463
 23480                           	
 23481  2090                     l29261:	
 23482                           	line	13
 23483                           	
 23484  2090                     l34461:	
 23485  2090  3001               	movlw	01h
 23486  2091                     u6485:
 23487  2091  35A1               	lslf	(___lldiv@divisor),f
 23488  2092  0DA2               	rlf	(___lldiv@divisor+1),f
 23489  2093  0DA3               	rlf	(___lldiv@divisor+2),f
 23490  2094  0DA4               	rlf	(___lldiv@divisor+3),f
 23491  2095  0B89               	decfsz	wreg,f
 23492  2096  2891               	goto	u6485
 23493                           	line	14
 23494  2097  3001               	movlw	(01h)
 23495  2098  00A9               	movwf	(??___lldiv+0)+0
 23496  2099  0829               	movf	(??___lldiv+0)+0,w
 23497  209A  07AE               	addwf	(___lldiv@counter),f
 23498  209B  289C               	goto	l34463
 23499                           	line	15
 23500                           	
 23501  209C                     l29260:	
 23502                           	line	12
 23503                           	
 23504  209C                     l34463:	
 23505  209C  1FA4               	btfss	(___lldiv@divisor+3),(31)&7
 23506  209D  289F               	goto	u6491
 23507  209E  28A0               	goto	u6490
 23508  209F                     u6491:
 23509  209F  2890               	goto	l34461
 23510  20A0                     u6490:
 23511  20A0  28A2               	goto	l34465
 23512                           	
 23513  20A1                     l29262:	
 23514  20A1  28A2               	goto	l34465
 23515                           	line	16
 23516                           	
 23517  20A2                     l29263:	
 23518                           	line	17
 23519                           	
 23520  20A2                     l34465:	
 23521  20A2  3001               	movlw	01h
 23522  20A3                     u6505:
 23523  20A3  35AA               	lslf	(___lldiv@quotient),f
 23524  20A4  0DAB               	rlf	(___lldiv@quotient+1),f
 23525  20A5  0DAC               	rlf	(___lldiv@quotient+2),f
 23526  20A6  0DAD               	rlf	(___lldiv@quotient+3),f
 23527  20A7  0B89               	decfsz	wreg,f
 23528  20A8  28A3               	goto	u6505
 23529                           	line	18
 23530                           	
 23531  20A9                     l34467:	
 23532  20A9  0824               	movf	(___lldiv@divisor+3),w
 23533  20AA  0228               	subwf	(___lldiv@dividend+3),w
 23534  20AB  1D03               	skipz
 23535  20AC  28B7               	goto	u6515
 23536  20AD  0823               	movf	(___lldiv@divisor+2),w
 23537  20AE  0227               	subwf	(___lldiv@dividend+2),w
 23538  20AF  1D03               	skipz
 23539  20B0  28B7               	goto	u6515
 23540  20B1  0822               	movf	(___lldiv@divisor+1),w
 23541  20B2  0226               	subwf	(___lldiv@dividend+1),w
 23542  20B3  1D03               	skipz
 23543  20B4  28B7               	goto	u6515
 23544  20B5  0821               	movf	(___lldiv@divisor),w
 23545  20B6  0225               	subwf	(___lldiv@dividend),w
 23546  20B7                     u6515:
 23547  20B7  1C03               	skipc
 23548  20B8  28BA               	goto	u6511
 23549  20B9  28BB               	goto	u6510
 23550  20BA                     u6511:
 23551  20BA  28C5               	goto	l34473
 23552  20BB                     u6510:
 23553                           	line	19
 23554                           	
 23555  20BB                     l34469:	
 23556  20BB  0821               	movf	(___lldiv@divisor),w
 23557  20BC  02A5               	subwf	(___lldiv@dividend),f
 23558  20BD  0822               	movf	(___lldiv@divisor+1),w
 23559  20BE  3BA6               	subwfb	(___lldiv@dividend+1),f
 23560  20BF  0823               	movf	(___lldiv@divisor+2),w
 23561  20C0  3BA7               	subwfb	(___lldiv@dividend+2),f
 23562  20C1  0824               	movf	(___lldiv@divisor+3),w
 23563  20C2  3BA8               	subwfb	(___lldiv@dividend+3),f
 23564                           	line	20
 23565                           	
 23566  20C3                     l34471:	
 23567  20C3  142A               	bsf	(___lldiv@quotient)+(0/8),(0)&7
 23568  20C4  28C5               	goto	l34473
 23569                           	line	21
 23570                           	
 23571  20C5                     l29264:	
 23572                           	line	22
 23573                           	
 23574  20C5                     l34473:	
 23575  20C5  3001               	movlw	01h
 23576  20C6                     u6525:
 23577  20C6  36A4               	lsrf	(___lldiv@divisor+3),f
 23578  20C7  0CA3               	rrf	(___lldiv@divisor+2),f
 23579  20C8  0CA2               	rrf	(___lldiv@divisor+1),f
 23580  20C9  0CA1               	rrf	(___lldiv@divisor),f
 23581  20CA  0B89               	decfsz	wreg,f
 23582  20CB  28C6               	goto	u6525
 23583                           
 23584                           	line	23
 23585                           	
 23586  20CC                     l34475:	
 23587  20CC  3001               	movlw	low(01h)
 23588  20CD  02AE               	subwf	(___lldiv@counter),f
 23589  20CE  1D03               	btfss	status,2
 23590  20CF  28D1               	goto	u6531
 23591  20D0  28D2               	goto	u6530
 23592  20D1                     u6531:
 23593  20D1  28A2               	goto	l34465
 23594  20D2                     u6530:
 23595  20D2  28D4               	goto	l34477
 23596                           	
 23597  20D3                     l29265:	
 23598  20D3  28D4               	goto	l34477
 23599                           	line	24
 23600                           	
 23601  20D4                     l29259:	
 23602                           	line	25
 23603                           	
 23604  20D4                     l34477:	
 23605  20D4  082D               	movf	(___lldiv@quotient+3),w
 23606  20D5  00A4               	movwf	(?___lldiv+3)
 23607  20D6  082C               	movf	(___lldiv@quotient+2),w
 23608  20D7  00A3               	movwf	(?___lldiv+2)
 23609  20D8  082B               	movf	(___lldiv@quotient+1),w
 23610  20D9  00A2               	movwf	(?___lldiv+1)
 23611  20DA  082A               	movf	(___lldiv@quotient),w
 23612  20DB  00A1               	movwf	(?___lldiv)
 23613                           
 23614  20DC  28DD               	goto	l29266
 23615                           	
 23616  20DD                     l34479:	
 23617                           	line	26
 23618                           	
 23619  20DD                     l29266:	
 23620  20DD  0008               	return
 23621                           	opt stack 0
 23622                           GLOBAL	__end_of___lldiv
 23623  20DE                     	__end_of___lldiv:
 23624 ;; =============== function ___lldiv ends ============
 23625                           
 23626                           	signat	___lldiv,8316
 23627                           	global	___lmul
 23628                           psect	text3299,local,class=CODE,delta=2
 23629                           global __ptext3299
 23630  2CBB                     __ptext3299:
 23631                           
 23632 ;; *************** function ___lmul *****************
 23633 ;; Defined at:
 23634 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
 23635 ;; Parameters:    Size  Location     Type
 23636 ;;  multiplier      4    0[BANK0 ] unsigned long 
 23637 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 23638 ;; Auto vars:     Size  Location     Type
 23639 ;;  product         4    8[BANK0 ] unsigned long 
 23640 ;; Return value:  Size  Location     Type
 23641 ;;                  4    0[BANK0 ] unsigned long 
 23642 ;; Registers used:
 23643 ;;		wreg, status,2, status,0
 23644 ;; Tracked objects:
 23645 ;;		On entry : 0/0
 23646 ;;		On exit  : 0/0
 23647 ;;		Unchanged: 0/0
 23648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 23650 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23652 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 23653 ;;Total ram usage:       12 bytes
 23654 ;; Hardware stack levels used:    1
 23655 ;; Hardware stack levels required when called:    2
 23656 ;; This function calls:
 23657 ;;		Nothing
 23658 ;; This function is called by:
 23659 ;;		_exe_instruction
 23660 ;; This function uses a non-reentrant model
 23661 ;;
 23662                           psect	text3299
 23663                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
 23664                           	line	3
 23665                           	global	__size_of___lmul
 23666  0038                     	__size_of___lmul	equ	__end_of___lmul-___lmul
 23667                           	
 23668  2CBB                     ___lmul:	
 23669                           	opt	stack 11
 23670                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 23671                           	line	4
 23672                           	
 23673  2CBB                     l37055:	
 23674  2CBB  3000               	movlw	0
 23675  2CBC  0020               	movlb 0	; select bank0
 23676  2CBD  00AC               	movwf	(___lmul@product+3)
 23677  2CBE  3000               	movlw	0
 23678  2CBF  00AB               	movwf	(___lmul@product+2)
 23679  2CC0  3000               	movlw	0
 23680  2CC1  00AA               	movwf	(___lmul@product+1)
 23681  2CC2  3000               	movlw	0
 23682  2CC3  00A9               	movwf	(___lmul@product)
 23683                           
 23684  2CC4  2CC5               	goto	l37057
 23685                           	line	6
 23686                           	
 23687  2CC5                     l29162:	
 23688                           	line	7
 23689                           	
 23690  2CC5                     l37057:	
 23691  2CC5  1C21               	btfss	(___lmul@multiplier),(0)&7
 23692  2CC6  2CC8               	goto	u9831
 23693  2CC7  2CC9               	goto	u9830
 23694  2CC8                     u9831:
 23695  2CC8  2CD2               	goto	l37061
 23696  2CC9                     u9830:
 23697                           	line	8
 23698                           	
 23699  2CC9                     l37059:	
 23700  2CC9  0825               	movf	(___lmul@multiplicand),w
 23701  2CCA  07A9               	addwf	(___lmul@product),f
 23702  2CCB  0826               	movf	(___lmul@multiplicand+1),w
 23703  2CCC  3DAA               	addwfc	(___lmul@product+1),f
 23704  2CCD  0827               	movf	(___lmul@multiplicand+2),w
 23705  2CCE  3DAB               	addwfc	(___lmul@product+2),f
 23706  2CCF  0828               	movf	(___lmul@multiplicand+3),w
 23707  2CD0  3DAC               	addwfc	(___lmul@product+3),f
 23708  2CD1  2CD2               	goto	l37061
 23709                           	
 23710  2CD2                     l29163:	
 23711                           	line	9
 23712                           	
 23713  2CD2                     l37061:	
 23714  2CD2  3001               	movlw	01h
 23715  2CD3                     u9845:
 23716  2CD3  35A5               	lslf	(___lmul@multiplicand),f
 23717  2CD4  0DA6               	rlf	(___lmul@multiplicand+1),f
 23718  2CD5  0DA7               	rlf	(___lmul@multiplicand+2),f
 23719  2CD6  0DA8               	rlf	(___lmul@multiplicand+3),f
 23720  2CD7  0B89               	decfsz	wreg,f
 23721  2CD8  2CD3               	goto	u9845
 23722                           	line	10
 23723                           	
 23724  2CD9                     l37063:	
 23725  2CD9  3001               	movlw	01h
 23726  2CDA                     u9855:
 23727  2CDA  36A4               	lsrf	(___lmul@multiplier+3),f
 23728  2CDB  0CA3               	rrf	(___lmul@multiplier+2),f
 23729  2CDC  0CA2               	rrf	(___lmul@multiplier+1),f
 23730  2CDD  0CA1               	rrf	(___lmul@multiplier),f
 23731  2CDE  0B89               	decfsz	wreg,f
 23732  2CDF  2CDA               	goto	u9855
 23733                           
 23734                           	line	11
 23735  2CE0  0824               	movf	(___lmul@multiplier+3),w
 23736  2CE1  0423               	iorwf	(___lmul@multiplier+2),w
 23737  2CE2  0422               	iorwf	(___lmul@multiplier+1),w
 23738  2CE3  0421               	iorwf	(___lmul@multiplier),w
 23739  2CE4  1D03               	skipz
 23740  2CE5  2CE7               	goto	u9861
 23741  2CE6  2CE8               	goto	u9860
 23742  2CE7                     u9861:
 23743  2CE7  2CC5               	goto	l37057
 23744  2CE8                     u9860:
 23745  2CE8  2CE9               	goto	l37065
 23746                           	
 23747  2CE9                     l29164:	
 23748                           	line	12
 23749                           	
 23750  2CE9                     l37065:	
 23751  2CE9  082C               	movf	(___lmul@product+3),w
 23752  2CEA  00A4               	movwf	(?___lmul+3)
 23753  2CEB  082B               	movf	(___lmul@product+2),w
 23754  2CEC  00A3               	movwf	(?___lmul+2)
 23755  2CED  082A               	movf	(___lmul@product+1),w
 23756  2CEE  00A2               	movwf	(?___lmul+1)
 23757  2CEF  0829               	movf	(___lmul@product),w
 23758  2CF0  00A1               	movwf	(?___lmul)
 23759                           
 23760  2CF1  2CF2               	goto	l29165
 23761                           	
 23762  2CF2                     l37067:	
 23763                           	line	13
 23764                           	
 23765  2CF2                     l29165:	
 23766  2CF2  0008               	return
 23767                           	opt stack 0
 23768                           GLOBAL	__end_of___lmul
 23769  2CF3                     	__end_of___lmul:
 23770 ;; =============== function ___lmul ends ============
 23771                           
 23772                           	signat	___lmul,8316
 23773                           	global	___lwmod
 23774                           psect	text3300,local,class=CODE,delta=2
 23775                           global __ptext3300
 23776  2D2B                     __ptext3300:
 23777                           
 23778 ;; *************** function ___lwmod *****************
 23779 ;; Defined at:
 23780 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 23781 ;; Parameters:    Size  Location     Type
 23782 ;;  divisor         2    8[BANK0 ] unsigned int 
 23783 ;;  dividend        2   10[BANK0 ] unsigned int 
 23784 ;; Auto vars:     Size  Location     Type
 23785 ;;  counter         1   13[BANK0 ] unsigned char 
 23786 ;; Return value:  Size  Location     Type
 23787 ;;                  2    8[BANK0 ] unsigned int 
 23788 ;; Registers used:
 23789 ;;		wreg, status,2, status,0
 23790 ;; Tracked objects:
 23791 ;;		On entry : 0/0
 23792 ;;		On exit  : 0/0
 23793 ;;		Unchanged: 0/0
 23794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23798 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 23799 ;;Total ram usage:        6 bytes
 23800 ;; Hardware stack levels used:    1
 23801 ;; Hardware stack levels required when called:    2
 23802 ;; This function calls:
 23803 ;;		Nothing
 23804 ;; This function is called by:
 23805 ;;		_exe_instruction
 23806 ;;		_printf
 23807 ;; This function uses a non-reentrant model
 23808 ;;
 23809                           psect	text3300
 23810                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 23811                           	line	5
 23812                           	global	__size_of___lwmod
 23813  003F                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 23814                           	
 23815  2D2B                     ___lwmod:	
 23816                           	opt	stack 8
 23817                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 23818                           	line	8
 23819                           	
 23820  2D2B                     l37033:	
 23821  2D2B  0020               	movlb 0	; select bank0
 23822  2D2C  082A               	movf	(___lwmod@divisor+1),w
 23823  2D2D  0429               	iorwf	(___lwmod@divisor),w
 23824  2D2E  1903               	skipnz
 23825  2D2F  2D31               	goto	u9771
 23826  2D30  2D32               	goto	u9770
 23827  2D31                     u9771:
 23828  2D31  2D62               	goto	l37051
 23829  2D32                     u9770:
 23830                           	line	9
 23831                           	
 23832  2D32                     l37035:	
 23833  2D32  01AE               	clrf	(___lwmod@counter)
 23834  2D33  1403               	bsf	status,0
 23835  2D34  0DAE               	rlf	(___lwmod@counter),f
 23836                           	line	10
 23837  2D35  2D40               	goto	l37041
 23838                           	
 23839  2D36                     l29105:	
 23840                           	line	11
 23841                           	
 23842  2D36                     l37037:	
 23843  2D36  3001               	movlw	01h
 23844                           	
 23845  2D37                     u9785:
 23846  2D37  35A9               	lslf	(___lwmod@divisor),f
 23847  2D38  0DAA               	rlf	(___lwmod@divisor+1),f
 23848  2D39  0B89               	decfsz	wreg,f
 23849  2D3A  2D37               	goto	u9785
 23850                           	line	12
 23851                           	
 23852  2D3B                     l37039:	
 23853  2D3B  3001               	movlw	(01h)
 23854  2D3C  00AD               	movwf	(??___lwmod+0)+0
 23855  2D3D  082D               	movf	(??___lwmod+0)+0,w
 23856  2D3E  07AE               	addwf	(___lwmod@counter),f
 23857  2D3F  2D40               	goto	l37041
 23858                           	line	13
 23859                           	
 23860  2D40                     l29104:	
 23861                           	line	10
 23862                           	
 23863  2D40                     l37041:	
 23864  2D40  1FAA               	btfss	(___lwmod@divisor+1),(15)&7
 23865  2D41  2D43               	goto	u9791
 23866  2D42  2D44               	goto	u9790
 23867  2D43                     u9791:
 23868  2D43  2D36               	goto	l37037
 23869  2D44                     u9790:
 23870  2D44  2D46               	goto	l37043
 23871                           	
 23872  2D45                     l29106:	
 23873  2D45  2D46               	goto	l37043
 23874                           	line	14
 23875                           	
 23876  2D46                     l29107:	
 23877                           	line	15
 23878                           	
 23879  2D46                     l37043:	
 23880  2D46  082A               	movf	(___lwmod@divisor+1),w
 23881  2D47  022C               	subwf	(___lwmod@dividend+1),w
 23882  2D48  1D03               	skipz
 23883  2D49  2D4C               	goto	u9805
 23884  2D4A  0829               	movf	(___lwmod@divisor),w
 23885  2D4B  022B               	subwf	(___lwmod@dividend),w
 23886  2D4C                     u9805:
 23887  2D4C  1C03               	skipc
 23888  2D4D  2D4F               	goto	u9801
 23889  2D4E  2D50               	goto	u9800
 23890  2D4F                     u9801:
 23891  2D4F  2D55               	goto	l37047
 23892  2D50                     u9800:
 23893                           	line	16
 23894                           	
 23895  2D50                     l37045:	
 23896  2D50  0829               	movf	(___lwmod@divisor),w
 23897  2D51  02AB               	subwf	(___lwmod@dividend),f
 23898  2D52  082A               	movf	(___lwmod@divisor+1),w
 23899  2D53  3BAC               	subwfb	(___lwmod@dividend+1),f
 23900  2D54  2D55               	goto	l37047
 23901                           	
 23902  2D55                     l29108:	
 23903                           	line	17
 23904                           	
 23905  2D55                     l37047:	
 23906  2D55  3001               	movlw	01h
 23907                           	
 23908  2D56                     u9815:
 23909  2D56  36AA               	lsrf	(___lwmod@divisor+1),f
 23910  2D57  0CA9               	rrf	(___lwmod@divisor),f
 23911  2D58  0B89               	decfsz	wreg,f
 23912  2D59  2D56               	goto	u9815
 23913                           	line	18
 23914                           	
 23915  2D5A                     l37049:	
 23916  2D5A  3001               	movlw	low(01h)
 23917  2D5B  02AE               	subwf	(___lwmod@counter),f
 23918  2D5C  1D03               	btfss	status,2
 23919  2D5D  2D5F               	goto	u9821
 23920  2D5E  2D60               	goto	u9820
 23921  2D5F                     u9821:
 23922  2D5F  2D46               	goto	l37043
 23923  2D60                     u9820:
 23924  2D60  2D62               	goto	l37051
 23925                           	
 23926  2D61                     l29109:	
 23927  2D61  2D62               	goto	l37051
 23928                           	line	19
 23929                           	
 23930  2D62                     l29103:	
 23931                           	line	20
 23932                           	
 23933  2D62                     l37051:	
 23934  2D62  082C               	movf	(___lwmod@dividend+1),w
 23935  2D63  01AA               	clrf	(?___lwmod+1)
 23936  2D64  07AA               	addwf	(?___lwmod+1)
 23937  2D65  082B               	movf	(___lwmod@dividend),w
 23938  2D66  01A9               	clrf	(?___lwmod)
 23939  2D67  07A9               	addwf	(?___lwmod)
 23940                           
 23941  2D68  2D69               	goto	l29110
 23942                           	
 23943  2D69                     l37053:	
 23944                           	line	21
 23945                           	
 23946  2D69                     l29110:	
 23947  2D69  0008               	return
 23948                           	opt stack 0
 23949                           GLOBAL	__end_of___lwmod
 23950  2D6A                     	__end_of___lwmod:
 23951 ;; =============== function ___lwmod ends ============
 23952                           
 23953                           	signat	___lwmod,8314
 23954                           	global	___lwdiv
 23955                           psect	text3301,local,class=CODE,delta=2
 23956                           global __ptext3301
 23957  0945                     __ptext3301:
 23958                           
 23959 ;; *************** function ___lwdiv *****************
 23960 ;; Defined at:
 23961 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 23962 ;; Parameters:    Size  Location     Type
 23963 ;;  divisor         2    0[BANK0 ] unsigned int 
 23964 ;;  dividend        2    2[BANK0 ] unsigned int 
 23965 ;; Auto vars:     Size  Location     Type
 23966 ;;  quotient        2    6[BANK0 ] unsigned int 
 23967 ;;  counter         1    5[BANK0 ] unsigned char 
 23968 ;; Return value:  Size  Location     Type
 23969 ;;                  2    0[BANK0 ] unsigned int 
 23970 ;; Registers used:
 23971 ;;		wreg, status,2, status,0
 23972 ;; Tracked objects:
 23973 ;;		On entry : 0/0
 23974 ;;		On exit  : 0/0
 23975 ;;		Unchanged: 0/0
 23976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23978 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23980 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 23981 ;;Total ram usage:        8 bytes
 23982 ;; Hardware stack levels used:    1
 23983 ;; Hardware stack levels required when called:    2
 23984 ;; This function calls:
 23985 ;;		Nothing
 23986 ;; This function is called by:
 23987 ;;		_exe_instruction
 23988 ;;		_printf
 23989 ;; This function uses a non-reentrant model
 23990 ;;
 23991                           psect	text3301
 23992                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 23993                           	line	5
 23994                           	global	__size_of___lwdiv
 23995  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 23996                           	
 23997  0945                     ___lwdiv:	
 23998                           	opt	stack 8
 23999                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 24000                           	line	9
 24001                           	
 24002  0945                     l37007:	
 24003  0945  0020               	movlb 0	; select bank0
 24004  0946  01A7               	clrf	(___lwdiv@quotient)
 24005  0947  01A8               	clrf	(___lwdiv@quotient+1)
 24006                           	line	10
 24007                           	
 24008  0948                     l37009:	
 24009  0948  0822               	movf	(___lwdiv@divisor+1),w
 24010  0949  0421               	iorwf	(___lwdiv@divisor),w
 24011  094A  1903               	skipnz
 24012  094B  294D               	goto	u9701
 24013  094C  294E               	goto	u9700
 24014  094D                     u9701:
 24015  094D  2984               	goto	l37029
 24016  094E                     u9700:
 24017                           	line	11
 24018                           	
 24019  094E                     l37011:	
 24020  094E  01A6               	clrf	(___lwdiv@counter)
 24021  094F  1403               	bsf	status,0
 24022  0950  0DA6               	rlf	(___lwdiv@counter),f
 24023                           	line	12
 24024  0951  295C               	goto	l37017
 24025                           	
 24026  0952                     l29095:	
 24027                           	line	13
 24028                           	
 24029  0952                     l37013:	
 24030  0952  3001               	movlw	01h
 24031                           	
 24032  0953                     u9715:
 24033  0953  35A1               	lslf	(___lwdiv@divisor),f
 24034  0954  0DA2               	rlf	(___lwdiv@divisor+1),f
 24035  0955  0B89               	decfsz	wreg,f
 24036  0956  2953               	goto	u9715
 24037                           	line	14
 24038                           	
 24039  0957                     l37015:	
 24040  0957  3001               	movlw	(01h)
 24041  0958  00A5               	movwf	(??___lwdiv+0)+0
 24042  0959  0825               	movf	(??___lwdiv+0)+0,w
 24043  095A  07A6               	addwf	(___lwdiv@counter),f
 24044  095B  295C               	goto	l37017
 24045                           	line	15
 24046                           	
 24047  095C                     l29094:	
 24048                           	line	12
 24049                           	
 24050  095C                     l37017:	
 24051  095C  1FA2               	btfss	(___lwdiv@divisor+1),(15)&7
 24052  095D  295F               	goto	u9721
 24053  095E  2960               	goto	u9720
 24054  095F                     u9721:
 24055  095F  2952               	goto	l37013
 24056  0960                     u9720:
 24057  0960  2962               	goto	l37019
 24058                           	
 24059  0961                     l29096:	
 24060  0961  2962               	goto	l37019
 24061                           	line	16
 24062                           	
 24063  0962                     l29097:	
 24064                           	line	17
 24065                           	
 24066  0962                     l37019:	
 24067  0962  3001               	movlw	01h
 24068                           	
 24069  0963                     u9735:
 24070  0963  35A7               	lslf	(___lwdiv@quotient),f
 24071  0964  0DA8               	rlf	(___lwdiv@quotient+1),f
 24072  0965  0B89               	decfsz	wreg,f
 24073  0966  2963               	goto	u9735
 24074                           	line	18
 24075  0967  0822               	movf	(___lwdiv@divisor+1),w
 24076  0968  0224               	subwf	(___lwdiv@dividend+1),w
 24077  0969  1D03               	skipz
 24078  096A  296D               	goto	u9745
 24079  096B  0821               	movf	(___lwdiv@divisor),w
 24080  096C  0223               	subwf	(___lwdiv@dividend),w
 24081  096D                     u9745:
 24082  096D  1C03               	skipc
 24083  096E  2970               	goto	u9741
 24084  096F  2971               	goto	u9740
 24085  0970                     u9741:
 24086  0970  2977               	goto	l37025
 24087  0971                     u9740:
 24088                           	line	19
 24089                           	
 24090  0971                     l37021:	
 24091  0971  0821               	movf	(___lwdiv@divisor),w
 24092  0972  02A3               	subwf	(___lwdiv@dividend),f
 24093  0973  0822               	movf	(___lwdiv@divisor+1),w
 24094  0974  3BA4               	subwfb	(___lwdiv@dividend+1),f
 24095                           	line	20
 24096                           	
 24097  0975                     l37023:	
 24098  0975  1427               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 24099  0976  2977               	goto	l37025
 24100                           	line	21
 24101                           	
 24102  0977                     l29098:	
 24103                           	line	22
 24104                           	
 24105  0977                     l37025:	
 24106  0977  3001               	movlw	01h
 24107                           	
 24108  0978                     u9755:
 24109  0978  36A2               	lsrf	(___lwdiv@divisor+1),f
 24110  0979  0CA1               	rrf	(___lwdiv@divisor),f
 24111  097A  0B89               	decfsz	wreg,f
 24112  097B  2978               	goto	u9755
 24113                           	line	23
 24114                           	
 24115  097C                     l37027:	
 24116  097C  3001               	movlw	low(01h)
 24117  097D  02A6               	subwf	(___lwdiv@counter),f
 24118  097E  1D03               	btfss	status,2
 24119  097F  2981               	goto	u9761
 24120  0980  2982               	goto	u9760
 24121  0981                     u9761:
 24122  0981  2962               	goto	l37019
 24123  0982                     u9760:
 24124  0982  2984               	goto	l37029
 24125                           	
 24126  0983                     l29099:	
 24127  0983  2984               	goto	l37029
 24128                           	line	24
 24129                           	
 24130  0984                     l29093:	
 24131                           	line	25
 24132                           	
 24133  0984                     l37029:	
 24134  0984  0828               	movf	(___lwdiv@quotient+1),w
 24135  0985  01A2               	clrf	(?___lwdiv+1)
 24136  0986  07A2               	addwf	(?___lwdiv+1)
 24137  0987  0827               	movf	(___lwdiv@quotient),w
 24138  0988  01A1               	clrf	(?___lwdiv)
 24139  0989  07A1               	addwf	(?___lwdiv)
 24140                           
 24141  098A  298B               	goto	l29100
 24142                           	
 24143  098B                     l37031:	
 24144                           	line	26
 24145                           	
 24146  098B                     l29100:	
 24147  098B  0008               	return
 24148                           	opt stack 0
 24149                           GLOBAL	__end_of___lwdiv
 24150  098C                     	__end_of___lwdiv:
 24151 ;; =============== function ___lwdiv ends ============
 24152                           
 24153                           	signat	___lwdiv,8314
 24154                           	global	___wmul
 24155                           psect	text3302,local,class=CODE,delta=2
 24156                           global __ptext3302
 24157  2ACA                     __ptext3302:
 24158                           
 24159 ;; *************** function ___wmul *****************
 24160 ;; Defined at:
 24161 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 24162 ;; Parameters:    Size  Location     Type
 24163 ;;  multiplier      2    0[BANK0 ] unsigned int 
 24164 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 24165 ;; Auto vars:     Size  Location     Type
 24166 ;;  product         2    4[BANK0 ] unsigned int 
 24167 ;; Return value:  Size  Location     Type
 24168 ;;                  2    0[BANK0 ] unsigned int 
 24169 ;; Registers used:
 24170 ;;		wreg, status,2, status,0
 24171 ;; Tracked objects:
 24172 ;;		On entry : 0/0
 24173 ;;		On exit  : 0/0
 24174 ;;		Unchanged: 0/0
 24175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24176 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24180 ;;Total ram usage:        6 bytes
 24181 ;; Hardware stack levels used:    1
 24182 ;; Hardware stack levels required when called:    2
 24183 ;; This function calls:
 24184 ;;		Nothing
 24185 ;; This function is called by:
 24186 ;;		_exe_instruction
 24187 ;;		_catgenie_init
 24188 ;;		_catgenie_work
 24189 ;;		_set_pacer
 24190 ;;		_proc_line
 24191 ;;		_cmd2index
 24192 ;;		_help
 24193 ;;		_printf
 24194 ;; This function uses a non-reentrant model
 24195 ;;
 24196                           psect	text3302
 24197                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 24198                           	line	3
 24199                           	global	__size_of___wmul
 24200  0025                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 24201                           	
 24202  2ACA                     ___wmul:	
 24203                           	opt	stack 8
 24204                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 24205                           	line	4
 24206                           	
 24207  2ACA                     l36995:	
 24208  2ACA  0020               	movlb 0	; select bank0
 24209  2ACB  01A5               	clrf	(___wmul@product)
 24210  2ACC  01A6               	clrf	(___wmul@product+1)
 24211  2ACD  2ACE               	goto	l36997
 24212                           	line	6
 24213                           	
 24214  2ACE                     l29087:	
 24215                           	line	7
 24216                           	
 24217  2ACE                     l36997:	
 24218  2ACE  1C21               	btfss	(___wmul@multiplier),(0)&7
 24219  2ACF  2AD1               	goto	u9661
 24220  2AD0  2AD2               	goto	u9660
 24221  2AD1                     u9661:
 24222  2AD1  2AD6               	goto	l29088
 24223  2AD2                     u9660:
 24224                           	line	8
 24225                           	
 24226  2AD2                     l36999:	
 24227  2AD2  0823               	movf	(___wmul@multiplicand),w
 24228  2AD3  07A5               	addwf	(___wmul@product),f
 24229  2AD4  0824               	movf	(___wmul@multiplicand+1),w
 24230  2AD5  3DA6               	addwfc	(___wmul@product+1),f
 24231                           	
 24232  2AD6                     l29088:	
 24233                           	line	9
 24234  2AD6  3001               	movlw	01h
 24235                           	
 24236  2AD7                     u9675:
 24237  2AD7  35A3               	lslf	(___wmul@multiplicand),f
 24238  2AD8  0DA4               	rlf	(___wmul@multiplicand+1),f
 24239  2AD9  0B89               	decfsz	wreg,f
 24240  2ADA  2AD7               	goto	u9675
 24241                           	line	10
 24242                           	
 24243  2ADB                     l37001:	
 24244  2ADB  3001               	movlw	01h
 24245                           	
 24246  2ADC                     u9685:
 24247  2ADC  36A2               	lsrf	(___wmul@multiplier+1),f
 24248  2ADD  0CA1               	rrf	(___wmul@multiplier),f
 24249  2ADE  0B89               	decfsz	wreg,f
 24250  2ADF  2ADC               	goto	u9685
 24251                           	line	11
 24252  2AE0  0822               	movf	((___wmul@multiplier+1)),w
 24253  2AE1  0421               	iorwf	((___wmul@multiplier)),w
 24254  2AE2  1D03               	skipz
 24255  2AE3  2AE5               	goto	u9691
 24256  2AE4  2AE6               	goto	u9690
 24257  2AE5                     u9691:
 24258  2AE5  2ACE               	goto	l36997
 24259  2AE6                     u9690:
 24260  2AE6  2AE7               	goto	l37003
 24261                           	
 24262  2AE7                     l29089:	
 24263                           	line	12
 24264                           	
 24265  2AE7                     l37003:	
 24266  2AE7  0826               	movf	(___wmul@product+1),w
 24267  2AE8  01A2               	clrf	(?___wmul+1)
 24268  2AE9  07A2               	addwf	(?___wmul+1)
 24269  2AEA  0825               	movf	(___wmul@product),w
 24270  2AEB  01A1               	clrf	(?___wmul)
 24271  2AEC  07A1               	addwf	(?___wmul)
 24272                           
 24273  2AED  2AEE               	goto	l29090
 24274                           	
 24275  2AEE                     l37005:	
 24276                           	line	13
 24277                           	
 24278  2AEE                     l29090:	
 24279  2AEE  0008               	return
 24280                           	opt stack 0
 24281                           GLOBAL	__end_of___wmul
 24282  2AEF                     	__end_of___wmul:
 24283 ;; =============== function ___wmul ends ============
 24284                           
 24285                           	signat	___wmul,8314
 24286                           	global	___bmul
 24287                           psect	text3303,local,class=CODE,delta=2
 24288                           global __ptext3303
 24289  2979                     __ptext3303:
 24290                           
 24291 ;; *************** function ___bmul *****************
 24292 ;; Defined at:
 24293 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 24294 ;; Parameters:    Size  Location     Type
 24295 ;;  multiplier      1    wreg     unsigned char 
 24296 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 24297 ;; Auto vars:     Size  Location     Type
 24298 ;;  multiplier      1    3[BANK0 ] unsigned char 
 24299 ;;  product         1    2[BANK0 ] unsigned char 
 24300 ;; Return value:  Size  Location     Type
 24301 ;;                  1    wreg      unsigned char 
 24302 ;; Registers used:
 24303 ;;		wreg, status,2, status,0
 24304 ;; Tracked objects:
 24305 ;;		On entry : 0/0
 24306 ;;		On exit  : 0/0
 24307 ;;		Unchanged: 0/0
 24308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24309 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24312 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24313 ;;Total ram usage:        4 bytes
 24314 ;; Hardware stack levels used:    1
 24315 ;; Hardware stack levels required when called:    2
 24316 ;; This function calls:
 24317 ;;		Nothing
 24318 ;; This function is called by:
 24319 ;;		_printf
 24320 ;;		_catgenie_init
 24321 ;;		_catgenie_work
 24322 ;;		_set_pacer
 24323 ;;		_proc_line
 24324 ;;		_cmd2index
 24325 ;;		_help
 24326 ;; This function uses a non-reentrant model
 24327 ;;
 24328                           psect	text3303
 24329                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 24330                           	line	3
 24331                           	global	__size_of___bmul
 24332  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
 24333                           	
 24334  2979                     ___bmul:	
 24335                           	opt	stack 8
 24336                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 24337                           ;___bmul@multiplier stored from wreg
 24338  2979  0020               	movlb 0	; select bank0
 24339  297A  00A4               	movwf	(___bmul@multiplier)
 24340                           	line	4
 24341                           	
 24342  297B                     l36979:	
 24343  297B  01A3               	clrf	(___bmul@product)
 24344  297C  297D               	goto	l36981
 24345                           	line	6
 24346                           	
 24347  297D                     l29081:	
 24348                           	line	7
 24349                           	
 24350  297D                     l36981:	
 24351  297D  1C24               	btfss	(___bmul@multiplier),(0)&7
 24352  297E  2980               	goto	u9641
 24353  297F  2981               	goto	u9640
 24354  2980                     u9641:
 24355  2980  2986               	goto	l36985
 24356  2981                     u9640:
 24357                           	line	8
 24358                           	
 24359  2981                     l36983:	
 24360  2981  0821               	movf	(___bmul@multiplicand),w
 24361  2982  00A2               	movwf	(??___bmul+0)+0
 24362  2983  0822               	movf	(??___bmul+0)+0,w
 24363  2984  07A3               	addwf	(___bmul@product),f
 24364  2985  2986               	goto	l36985
 24365                           	
 24366  2986                     l29082:	
 24367                           	line	9
 24368                           	
 24369  2986                     l36985:	
 24370  2986  1003               	clrc
 24371  2987  0DA1               	rlf	(___bmul@multiplicand),f
 24372                           
 24373                           	line	10
 24374                           	
 24375  2988                     l36987:	
 24376  2988  1003               	clrc
 24377  2989  0CA4               	rrf	(___bmul@multiplier),f
 24378                           
 24379                           	line	11
 24380                           	
 24381  298A                     l36989:	
 24382  298A  08A4               	movf	(___bmul@multiplier),f
 24383  298B  1D03               	skipz
 24384  298C  298E               	goto	u9651
 24385  298D  298F               	goto	u9650
 24386  298E                     u9651:
 24387  298E  297D               	goto	l36981
 24388  298F                     u9650:
 24389  298F  2990               	goto	l36991
 24390                           	
 24391  2990                     l29083:	
 24392                           	line	12
 24393                           	
 24394  2990                     l36991:	
 24395  2990  0823               	movf	(___bmul@product),w
 24396  2991  2992               	goto	l29084
 24397                           	
 24398  2992                     l36993:	
 24399                           	line	13
 24400                           	
 24401  2992                     l29084:	
 24402  2992  0008               	return
 24403                           	opt stack 0
 24404                           GLOBAL	__end_of___bmul
 24405  2993                     	__end_of___bmul:
 24406 ;; =============== function ___bmul ends ============
 24407                           
 24408                           	signat	___bmul,8313
 24409                           	global	_isdigit
 24410                           psect	text3304,local,class=CODE,delta=2
 24411                           global __ptext3304
 24412  2931                     __ptext3304:
 24413                           
 24414 ;; *************** function _isdigit *****************
 24415 ;; Defined at:
 24416 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 24417 ;; Parameters:    Size  Location     Type
 24418 ;;  c               1    wreg     unsigned char 
 24419 ;; Auto vars:     Size  Location     Type
 24420 ;;  c               1    1[BANK0 ] unsigned char 
 24421 ;; Return value:  Size  Location     Type
 24422 ;;		None               void
 24423 ;; Registers used:
 24424 ;;		wreg, status,2, status,0
 24425 ;; Tracked objects:
 24426 ;;		On entry : 0/0
 24427 ;;		On exit  : 0/0
 24428 ;;		Unchanged: 0/0
 24429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24434 ;;Total ram usage:        2 bytes
 24435 ;; Hardware stack levels used:    1
 24436 ;; Hardware stack levels required when called:    2
 24437 ;; This function calls:
 24438 ;;		Nothing
 24439 ;; This function is called by:
 24440 ;;		_printf
 24441 ;; This function uses a non-reentrant model
 24442 ;;
 24443                           psect	text3304
 24444                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 24445                           	global	__size_of_isdigit
 24446  0016                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 24447                           	
 24448  2931                     _isdigit:	
 24449                           	opt	stack 8
 24450                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 24451                           ;isdigit@c stored from wreg
 24452  2931  0020               	movlb 0	; select bank0
 24453  2932  00A2               	movwf	(isdigit@c)
 24454                           	line	14
 24455                           	
 24456  2933                     l36967:	
 24457  2933  01A1               	clrf	(_isdigit$29792)
 24458                           	
 24459  2934                     l36969:	
 24460  2934  303A               	movlw	(03Ah)
 24461  2935  0222               	subwf	(isdigit@c),w
 24462  2936  1803               	skipnc
 24463  2937  2939               	goto	u9621
 24464  2938  293A               	goto	u9620
 24465  2939                     u9621:
 24466  2939  2944               	goto	l36975
 24467  293A                     u9620:
 24468                           	
 24469  293A                     l36971:	
 24470  293A  3030               	movlw	(030h)
 24471  293B  0222               	subwf	(isdigit@c),w
 24472  293C  1C03               	skipc
 24473  293D  293F               	goto	u9631
 24474  293E  2940               	goto	u9630
 24475  293F                     u9631:
 24476  293F  2944               	goto	l36975
 24477  2940                     u9630:
 24478                           	
 24479  2940                     l36973:	
 24480  2940  01A1               	clrf	(_isdigit$29792)
 24481  2941  1403               	bsf	status,0
 24482  2942  0DA1               	rlf	(_isdigit$29792),f
 24483  2943  2944               	goto	l36975
 24484                           	
 24485  2944                     l29056:	
 24486                           	
 24487  2944                     l36975:	
 24488  2944  0C21               	rrf	(_isdigit$29792),w
 24489                           	
 24490  2945  2946               	goto	l29057
 24491                           	
 24492  2946                     l36977:	
 24493                           	line	15
 24494                           	
 24495  2946                     l29057:	
 24496  2946  0008               	return
 24497                           	opt stack 0
 24498                           GLOBAL	__end_of_isdigit
 24499  2947                     	__end_of_isdigit:
 24500 ;; =============== function _isdigit ends ============
 24501                           
 24502                           	signat	_isdigit,4216
 24503                           	global	_strncmp
 24504                           psect	text3305,local,class=CODE,delta=2
 24505                           global __ptext3305
 24506  1000                     __ptext3305:
 24507                           
 24508 ;; *************** function _strncmp *****************
 24509 ;; Defined at:
 24510 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strncmp.c"
 24511 ;; Parameters:    Size  Location     Type
 24512 ;;  s1              1    wreg     PTR const unsigned char 
 24513 ;;		 -> linebuffer(20), 
 24514 ;;  s2              2    4[BANK0 ] PTR const unsigned char 
 24515 ;;		 -> STR_107(4), STR_106(3), commands(36), 
 24516 ;;  len             2    6[BANK0 ] unsigned int 
 24517 ;; Auto vars:     Size  Location     Type
 24518 ;;  s1              1   10[BANK0 ] PTR const unsigned char 
 24519 ;;		 -> linebuffer(20), 
 24520 ;; Return value:  Size  Location     Type
 24521 ;;                  2    4[BANK0 ] int 
 24522 ;; Registers used:
 24523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 24524 ;; Tracked objects:
 24525 ;;		On entry : 0/0
 24526 ;;		On exit  : 0/0
 24527 ;;		Unchanged: 0/0
 24528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24531 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24532 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 24533 ;;Total ram usage:        7 bytes
 24534 ;; Hardware stack levels used:    1
 24535 ;; Hardware stack levels required when called:    2
 24536 ;; This function calls:
 24537 ;;		Nothing
 24538 ;; This function is called by:
 24539 ;;		_cmd2index
 24540 ;;		_echo
 24541 ;; This function uses a non-reentrant model
 24542 ;;
 24543                           psect	text3305
 24544                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strncmp.c"
 24545                           	line	5
 24546                           	global	__size_of_strncmp
 24547  0053                     	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
 24548                           	
 24549  1000                     _strncmp:	
 24550                           	opt	stack 9
 24551                           ; Regs used in _strncmp: [wreg-status,0+pclath]
 24552                           ;strncmp@s1 stored from wreg
 24553  1000  0020               	movlb 0	; select bank0
 24554  1001  00AB               	movwf	(strncmp@s1)
 24555                           	line	6
 24556                           	
 24557  1002                     l34303:	
 24558  1002  2840               	goto	l34317
 24559                           	
 24560  1003                     l29073:	
 24561                           	line	7
 24562                           	
 24563  1003                     l34305:	
 24564  1003  082B               	movf	(strncmp@s1),w
 24565  1004  0086               	movwf	fsr1l
 24566  1005  3001               	movlw 1	; select bank2/3
 24567  1006  0087               	movwf fsr1h	
 24568                           	
 24569  1007  0801               	movf	indf1,w
 24570  1008  3A00               	xorlw	0&0ffh
 24571  1009  1903               	skipnz
 24572  100A  280C               	goto	u6111
 24573  100B  280D               	goto	u6110
 24574  100C                     u6111:
 24575  100C  281E               	goto	l34309
 24576  100D                     u6110:
 24577                           	
 24578  100D                     l34307:	
 24579  100D  0825               	movf	(strncmp@s2),w
 24580  100E  0084               	movwf	fsr0l
 24581  100F  0826               	movf	((strncmp@s2+1)),w
 24582  1010  0085               	movwf	fsr0h
 24583  1011  0800               	movf	indf0,w ;code access
 24584  1012  00A9               	movwf	(??_strncmp+0)+0
 24585  1013  082B               	movf	(strncmp@s1),w
 24586  1014  0086               	movwf	fsr1l
 24587  1015  3001               	movlw 1	; select bank2/3
 24588  1016  0087               	movwf fsr1h	
 24589                           	
 24590  1017  0801               	movf	indf1,w
 24591  1018  0629               	xorwf	(??_strncmp+0)+0,w
 24592  1019  1903               	skipnz
 24593  101A  281C               	goto	u6121
 24594  101B  281D               	goto	u6120
 24595  101C                     u6121:
 24596  101C  2837               	goto	l34313
 24597  101D                     u6120:
 24598  101D  281E               	goto	l34309
 24599                           	
 24600  101E                     l29076:	
 24601                           	line	8
 24602                           	
 24603  101E                     l34309:	
 24604  101E  0825               	movf	(strncmp@s2),w
 24605  101F  0084               	movwf	fsr0l
 24606  1020  0826               	movf	((strncmp@s2+1)),w
 24607  1021  0085               	movwf	fsr0h
 24608  1022  0800               	movf	indf0,w ;code access
 24609  1023  00A9               	movwf	(??_strncmp+0)+0
 24610  1024  01AA               	clrf	(??_strncmp+0)+0+1
 24611  1025  09A9               	comf	(??_strncmp+0)+0,f
 24612  1026  09AA               	comf	(??_strncmp+0)+1,f
 24613  1027  0AA9               	incf	(??_strncmp+0)+0,f
 24614  1028  1903               	skipnz
 24615  1029  0AAA               	incf	(??_strncmp+0)+1,f
 24616  102A  082B               	movf	(strncmp@s1),w
 24617  102B  0086               	movwf	fsr1l
 24618  102C  3001               	movlw 1	; select bank2/3
 24619  102D  0087               	movwf fsr1h	
 24620                           	
 24621  102E  0801               	movf	indf1,w
 24622  102F  0729               	addwf	0+(??_strncmp+0)+0,w
 24623  1030  00A5               	movwf	(?_strncmp)
 24624  1031  082A               	movf	1+(??_strncmp+0)+0,w
 24625  1032  1803               	skipnc
 24626  1033  0A2A               	incf	1+(??_strncmp+0)+0,w
 24627  1034  00A6               	movwf	((?_strncmp))+1
 24628  1035  2852               	goto	l29077
 24629                           	
 24630  1036                     l34311:	
 24631  1036  2852               	goto	l29077
 24632                           	
 24633  1037                     l29074:	
 24634                           	line	10
 24635                           	
 24636  1037                     l34313:	
 24637  1037  3001               	movlw	(01h)
 24638  1038  00A9               	movwf	(??_strncmp+0)+0
 24639  1039  0829               	movf	(??_strncmp+0)+0,w
 24640  103A  07AB               	addwf	(strncmp@s1),f
 24641                           	line	11
 24642                           	
 24643  103B                     l34315:	
 24644  103B  3001               	movlw	low(01h)
 24645  103C  07A5               	addwf	(strncmp@s2),f
 24646  103D  3000               	movlw	high(01h)
 24647  103E  3DA6               	addwfc	(strncmp@s2+1),f
 24648  103F  2840               	goto	l34317
 24649                           	line	12
 24650                           	
 24651  1040                     l29072:	
 24652                           	line	6
 24653                           	
 24654  1040                     l34317:	
 24655  1040  3001               	movlw	low(01h)
 24656  1041  02A7               	subwf	(strncmp@len),f
 24657  1042  3000               	movlw	high(01h)
 24658  1043  3BA8               	subwfb	(strncmp@len+1),f
 24659  1044  30FF               	movlw	high(0FFFFh)
 24660  1045  0628               	xorwf	((strncmp@len+1)),w
 24661  1046  1D03               	skipz
 24662  1047  284A               	goto	u6135
 24663  1048  30FF               	movlw	low(0FFFFh)
 24664  1049  0627               	xorwf	((strncmp@len)),w
 24665  104A                     u6135:
 24666                           
 24667  104A  1D03               	skipz
 24668  104B  284D               	goto	u6131
 24669  104C  284E               	goto	u6130
 24670  104D                     u6131:
 24671  104D  2803               	goto	l34305
 24672  104E                     u6130:
 24673  104E  284F               	goto	l34319
 24674                           	
 24675  104F                     l29078:	
 24676                           	line	13
 24677                           	
 24678  104F                     l34319:	
 24679  104F  01A5               	clrf	(?_strncmp)
 24680  1050  01A6               	clrf	(?_strncmp+1)
 24681  1051  2852               	goto	l29077
 24682                           	
 24683  1052                     l34321:	
 24684                           	line	14
 24685                           	
 24686  1052                     l29077:	
 24687  1052  0008               	return
 24688                           	opt stack 0
 24689                           GLOBAL	__end_of_strncmp
 24690  1053                     	__end_of_strncmp:
 24691 ;; =============== function _strncmp ends ============
 24692                           
 24693                           	signat	_strncmp,12410
 24694                           	global	_strlen
 24695                           psect	text3306,local,class=CODE,delta=2
 24696                           global __ptext3306
 24697  2C1E                     __ptext3306:
 24698                           
 24699 ;; *************** function _strlen *****************
 24700 ;; Defined at:
 24701 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strlen.c"
 24702 ;; Parameters:    Size  Location     Type
 24703 ;;  s               1    wreg     PTR const unsigned char 
 24704 ;;		 -> linebuffer(20), 
 24705 ;; Auto vars:     Size  Location     Type
 24706 ;;  s               1    8[BANK0 ] PTR const unsigned char 
 24707 ;;		 -> linebuffer(20), 
 24708 ;;  cp              1    9[BANK0 ] PTR const unsigned char 
 24709 ;;		 -> linebuffer(20), 
 24710 ;; Return value:  Size  Location     Type
 24711 ;;                  2    0[BANK0 ] unsigned int 
 24712 ;; Registers used:
 24713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24714 ;; Tracked objects:
 24715 ;;		On entry : 0/0
 24716 ;;		On exit  : 0/0
 24717 ;;		Unchanged: 0/0
 24718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24721 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24722 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 24723 ;;Total ram usage:       10 bytes
 24724 ;; Hardware stack levels used:    1
 24725 ;; Hardware stack levels required when called:    2
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		_proc_line
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           psect	text3306
 24733                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strlen.c"
 24734                           	line	5
 24735                           	global	__size_of_strlen
 24736  002F                     	__size_of_strlen	equ	__end_of_strlen-_strlen
 24737                           	
 24738  2C1E                     _strlen:	
 24739                           	opt	stack 10
 24740                           ; Regs used in _strlen: [wreg+fsr1l-status,0]
 24741                           ;strlen@s stored from wreg
 24742                           	line	8
 24743  2C1E  0020               	movlb 0	; select bank0
 24744  2C1F  00A9               	movwf	(strlen@s)
 24745                           	
 24746  2C20                     l34295:	
 24747  2C20  0829               	movf	(strlen@s),w
 24748  2C21  00A3               	movwf	(??_strlen+0)+0
 24749  2C22  0823               	movf	(??_strlen+0)+0,w
 24750  2C23  00AA               	movwf	(strlen@cp)
 24751                           	line	9
 24752  2C24  2C26               	goto	l34297
 24753                           	
 24754  2C25                     l29067:	
 24755                           	line	10
 24756  2C25  2C26               	goto	l34297
 24757                           	
 24758  2C26                     l29066:	
 24759                           	line	9
 24760                           	
 24761  2C26                     l34297:	
 24762  2C26  082A               	movf	(strlen@cp),w
 24763  2C27  0086               	movwf	fsr1l
 24764  2C28  3001               	movlw 1	; select bank2/3
 24765  2C29  0087               	movwf fsr1h	
 24766                           	
 24767  2C2A  3001               	movlw	01h
 24768  2C2B  07AA               	addwf	(strlen@cp),f
 24769  2C2C  0881               	movf	indf1,f
 24770  2C2D  1D03               	skipz
 24771  2C2E  2C30               	goto	u6101
 24772  2C2F  2C31               	goto	u6100
 24773  2C30                     u6101:
 24774  2C30  2C26               	goto	l34297
 24775  2C31                     u6100:
 24776  2C31  2C32               	goto	l34299
 24777                           	
 24778  2C32                     l29068:	
 24779                           	line	11
 24780                           	
 24781  2C32                     l34299:	
 24782  2C32  0829               	movf	(strlen@s),w
 24783  2C33  00A3               	movwf	(??_strlen+0)+0
 24784  2C34  3001               	movlw	(0x2/2)
 24785  2C35  00A4               	movwf	(??_strlen+0)+0+1
 24786  2C36  09A3               	comf	(??_strlen+0)+0,f
 24787  2C37  09A4               	comf	(??_strlen+0)+1,f
 24788  2C38  0AA3               	incf	(??_strlen+0)+0,f
 24789  2C39  1903               	skipnz
 24790  2C3A  0AA4               	incf	(??_strlen+0)+1,f
 24791  2C3B  082A               	movf	(strlen@cp),w
 24792  2C3C  00A5               	movwf	(??_strlen+2)+0
 24793  2C3D  3001               	movlw	(0x2/2)
 24794  2C3E  00A6               	movwf	(??_strlen+2)+0+1
 24795  2C3F  0823               	movf	0+(??_strlen+0)+0,w
 24796  2C40  0725               	addwf	0+(??_strlen+2)+0,w
 24797  2C41  00A7               	movwf	(??_strlen+4)+0
 24798  2C42  0824               	movf	1+(??_strlen+0)+0,w
 24799  2C43  3D26               	addwfc	1+(??_strlen+2)+0,w
 24800  2C44  00A8               	movwf	1+(??_strlen+4)+0
 24801  2C45  0827               	movf	0+(??_strlen+4)+0,w
 24802  2C46  3EFF               	addlw	low(-1)
 24803  2C47  00A1               	movwf	(?_strlen)
 24804  2C48  30FF               	movlw	high(-1)
 24805  2C49  3D28               	addwfc	1+(??_strlen+4)+0,w
 24806  2C4A  00A2               	movwf	1+(?_strlen)
 24807  2C4B  2C4C               	goto	l29069
 24808                           	
 24809  2C4C                     l34301:	
 24810                           	line	12
 24811                           	
 24812  2C4C                     l29069:	
 24813  2C4C  0008               	return
 24814                           	opt stack 0
 24815                           GLOBAL	__end_of_strlen
 24816  2C4D                     	__end_of_strlen:
 24817 ;; =============== function _strlen ends ============
 24818                           
 24819                           	signat	_strlen,4218
 24820                           	global	_readch
 24821                           psect	text3307,local,class=CODE,delta=2
 24822                           global __ptext3307
 24823  227E                     __ptext3307:
 24824                           
 24825 ;; *************** function _readch *****************
 24826 ;; Defined at:
 24827 ;;		line 239 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24828 ;; Parameters:    Size  Location     Type
 24829 ;;  ch              1    wreg     PTR unsigned char 
 24830 ;;		 -> cmdline_work@rxd(1), 
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;  ch              1    2[BANK0 ] PTR unsigned char 
 24833 ;;		 -> cmdline_work@rxd(1), 
 24834 ;;  result          1    3[BANK0 ] unsigned char 
 24835 ;; Return value:  Size  Location     Type
 24836 ;;                  1    wreg      unsigned char 
 24837 ;; Registers used:
 24838 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24839 ;; Tracked objects:
 24840 ;;		On entry : 0/0
 24841 ;;		On exit  : 0/0
 24842 ;;		Unchanged: 0/0
 24843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24847 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24848 ;;Total ram usage:        4 bytes
 24849 ;; Hardware stack levels used:    1
 24850 ;; Hardware stack levels required when called:    2
 24851 ;; This function calls:
 24852 ;;		Nothing
 24853 ;; This function is called by:
 24854 ;;		_cmdline_work
 24855 ;; This function uses a non-reentrant model
 24856 ;;
 24857                           psect	text3307
 24858                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24859                           	line	239
 24860                           	global	__size_of_readch
 24861  006C                     	__size_of_readch	equ	__end_of_readch-_readch
 24862                           	
 24863  227E                     _readch:	
 24864                           	opt	stack 12
 24865                           ; Regs used in _readch: [wreg+fsr1l-status,0]
 24866                           ;readch@ch stored from wreg
 24867                           	line	241
 24868  227E  0020               	movlb 0	; select bank0
 24869  227F  00A3               	movwf	(readch@ch)
 24870                           	
 24871  2280                     l34267:	
 24872                           ;serial.c: 241: unsigned char result = 0;
 24873  2280  01A4               	clrf	(readch@result)
 24874                           	line	243
 24875                           ;serial.c: 243: RCIE = 0;
 24876  2281  0021               	movlb 1	; select bank1
 24877  2282  1291               	bcf	(1165/8)^080h,(1165)&7
 24878                           	line	249
 24879                           	
 24880  2283                     l34269:	
 24881                           ;serial.c: 249: if (rx.head != rx.tail) {
 24882  2283  0022               	movlb 2	; select bank2
 24883  2284  0C39               	rrf	0+(_rx)^0100h+08h,w
 24884  2285  0020               	movlb 0	; select bank0
 24885  2286  00A1               	movwf	(??_readch+0)+0
 24886  2287  0CA1               	rrf	(??_readch+0)+0,f
 24887  2288  0C21               	rrf	(??_readch+0)+0,w
 24888  2289  3907               	andlw	(1<<3)-1
 24889  228A  00A2               	movwf	(??_readch+1)+0
 24890  228B  0022               	movlb 2	; select bank2
 24891  228C  0839               	movf	0+(_rx)^0100h+08h,w
 24892  228D  3907               	andlw	(1<<3)-1
 24893  228E  0020               	movlb 0	; select bank0
 24894  228F  0622               	xorwf	(??_readch+1)+0,w
 24895  2290  1903               	skipnz
 24896  2291  2A93               	goto	u6051
 24897  2292  2A94               	goto	u6050
 24898  2293                     u6051:
 24899  2293  2AE4               	goto	l34289
 24900  2294                     u6050:
 24901                           	line	251
 24902                           	
 24903  2294                     l34271:	
 24904                           ;serial.c: 251: *ch = rx.buffer[rx.tail];
 24905  2294  0022               	movlb 2	; select bank2
 24906  2295  0C39               	rrf	0+(_rx)^0100h+08h,w
 24907  2296  0020               	movlb 0	; select bank0
 24908  2297  00A1               	movwf	(??_readch+0)+0
 24909  2298  0CA1               	rrf	(??_readch+0)+0,f
 24910  2299  0C21               	rrf	(??_readch+0)+0,w
 24911  229A  3907               	andlw	(1<<3)-1
 24912  229B  3E31               	addlw	_rx&0ffh
 24913  229C  0086               	movwf	fsr1l
 24914  229D  3001               	movlw 1	; select bank2/3
 24915  229E  0087               	movwf fsr1h	
 24916                           	
 24917  229F  0801               	movf	indf1,w
 24918  22A0  00A2               	movwf	(??_readch+1)+0
 24919  22A1  0823               	movf	(readch@ch),w
 24920  22A2  0086               	movwf	fsr1l
 24921  22A3  0187               	clrf fsr1h	
 24922                           	
 24923  22A4  0822               	movf	(??_readch+1)+0,w
 24924  22A5  0081               	movwf	indf1
 24925                           	line	253
 24926                           	
 24927  22A6                     l34273:	
 24928                           ;serial.c: 253: rx.tail++;
 24929  22A6  0022               	movlb 2	; select bank2
 24930  22A7  0C39               	rrf	0+(_rx)^0100h+08h,w
 24931  22A8  0020               	movlb 0	; select bank0
 24932  22A9  00A1               	movwf	((??_readch+0)+0)
 24933  22AA  0CA1               	rrf	((??_readch+0)+0),f
 24934  22AB  0C21               	rrf	((??_readch+0)+0),w
 24935  22AC  3907               	andlw	(1<<3)-1
 24936  22AD  00A1               	movwf	((??_readch+0)+0)
 24937  22AE  0AA1               	incf	(??_readch+0)+0
 24938  22AF  0DA1               	rlf	((??_readch+0)+0),f
 24939  22B0  0DA1               	rlf	((??_readch+0)+0),f
 24940  22B1  0DA1               	rlf	((??_readch+0)+0),f
 24941  22B2  0022               	movlb 2	; select bank2
 24942  22B3  0839               	movf	0+(_rx)^0100h+08h,w
 24943  22B4  0020               	movlb 0	; select bank0
 24944  22B5  0621               	xorwf	((??_readch+0)+0),w
 24945  22B6  39C7               	andlw	not (((1<<3)-1)<<3)
 24946  22B7  0621               	xorwf	((??_readch+0)+0),w
 24947  22B8  0022               	movlb 2	; select bank2
 24948  22B9  00B9               	movwf	0+(_rx)^0100h+08h
 24949                           	line	257
 24950                           	
 24951  22BA                     l34275:	
 24952                           ;serial.c: 255: if (rx.xon_enabled &&
 24953                           ;serial.c: 256: !rx.xon_state &&
 24954                           ;serial.c: 257: (rx.head == rx.tail)) {
 24955  22BA  1F39               	btfss	0+(_rx)^0100h+08h,6
 24956  22BB  2ABD               	goto	u6061
 24957  22BC  2ABE               	goto	u6060
 24958  22BD                     u6061:
 24959  22BD  2ADF               	goto	l34287
 24960  22BE                     u6060:
 24961                           	
 24962  22BE                     l34277:	
 24963  22BE  1BB9               	btfsc	0+(_rx)^0100h+08h,7
 24964  22BF  2AC1               	goto	u6071
 24965  22C0  2AC2               	goto	u6070
 24966  22C1                     u6071:
 24967  22C1  2ADF               	goto	l34287
 24968  22C2                     u6070:
 24969                           	
 24970  22C2                     l34279:	
 24971  22C2  0C39               	rrf	0+(_rx)^0100h+08h,w
 24972  22C3  0020               	movlb 0	; select bank0
 24973  22C4  00A1               	movwf	(??_readch+0)+0
 24974  22C5  0CA1               	rrf	(??_readch+0)+0,f
 24975  22C6  0C21               	rrf	(??_readch+0)+0,w
 24976  22C7  3907               	andlw	(1<<3)-1
 24977  22C8  00A2               	movwf	(??_readch+1)+0
 24978  22C9  0022               	movlb 2	; select bank2
 24979  22CA  0839               	movf	0+(_rx)^0100h+08h,w
 24980  22CB  3907               	andlw	(1<<3)-1
 24981  22CC  0020               	movlb 0	; select bank0
 24982  22CD  0622               	xorwf	(??_readch+1)+0,w
 24983  22CE  1D03               	skipz
 24984  22CF  2AD1               	goto	u6081
 24985  22D0  2AD2               	goto	u6080
 24986  22D1                     u6081:
 24987  22D1  2ADF               	goto	l34287
 24988  22D2                     u6080:
 24989  22D2  2AD4               	goto	l19319
 24990                           	line	258
 24991                           	
 24992  22D3                     l34281:	
 24993                           ;serial.c: 258: while(!TXIF);
 24994  22D3  2AD4               	goto	l19319
 24995                           	
 24996  22D4                     l19320:	
 24997                           	
 24998  22D4                     l19319:	
 24999  22D4  1E11               	btfss	(140/8),(140)&7
 25000  22D5  2AD7               	goto	u6091
 25001  22D6  2AD8               	goto	u6090
 25002  22D7                     u6091:
 25003  22D7  2AD4               	goto	l19319
 25004  22D8                     u6090:
 25005  22D8  2AD9               	goto	l34283
 25006                           	
 25007  22D9                     l19321:	
 25008                           	line	259
 25009                           	
 25010  22D9                     l34283:	
 25011                           ;serial.c: 259: TXREG = 0x11;
 25012  22D9  3011               	movlw	(011h)
 25013  22DA  0023               	movlb 3	; select bank3
 25014  22DB  009A               	movwf	(410)^0180h	;volatile
 25015                           	line	260
 25016                           	
 25017  22DC                     l34285:	
 25018                           ;serial.c: 260: rx.xon_state = 1;
 25019  22DC  0022               	movlb 2	; select bank2
 25020  22DD  17B9               	bsf	0+(_rx)^0100h+08h,7
 25021  22DE  2ADF               	goto	l34287
 25022                           	line	261
 25023                           	
 25024  22DF                     l19318:	
 25025                           	line	262
 25026                           	
 25027  22DF                     l34287:	
 25028                           ;serial.c: 261: }
 25029                           ;serial.c: 262: result = 1;
 25030  22DF  0020               	movlb 0	; select bank0
 25031  22E0  01A4               	clrf	(readch@result)
 25032  22E1  1403               	bsf	status,0
 25033  22E2  0DA4               	rlf	(readch@result),f
 25034  22E3  2AE4               	goto	l34289
 25035                           	line	263
 25036                           	
 25037  22E4                     l19317:	
 25038                           	line	265
 25039                           	
 25040  22E4                     l34289:	
 25041                           ;serial.c: 263: }
 25042                           ;serial.c: 265: RCIE = 1;
 25043  22E4  0021               	movlb 1	; select bank1
 25044  22E5  1691               	bsf	(1165/8)^080h,(1165)&7
 25045                           	line	271
 25046                           	
 25047  22E6                     l34291:	
 25048                           ;serial.c: 271: return result;
 25049  22E6  0020               	movlb 0	; select bank0
 25050  22E7  0824               	movf	(readch@result),w
 25051  22E8  2AE9               	goto	l19322
 25052                           	
 25053  22E9                     l34293:	
 25054                           	line	294
 25055                           	
 25056  22E9                     l19322:	
 25057  22E9  0008               	return
 25058                           	opt stack 0
 25059                           GLOBAL	__end_of_readch
 25060  22EA                     	__end_of_readch:
 25061 ;; =============== function _readch ends ============
 25062                           
 25063                           	signat	_readch,4217
 25064                           	global	_putch
 25065                           psect	text3308,local,class=CODE,delta=2
 25066                           global __ptext3308
 25067  2B68                     __ptext3308:
 25068                           
 25069 ;; *************** function _putch *****************
 25070 ;; Defined at:
 25071 ;;		line 187 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25072 ;; Parameters:    Size  Location     Type
 25073 ;;  ch              1    wreg     unsigned char 
 25074 ;; Auto vars:     Size  Location     Type
 25075 ;;  ch              1    1[BANK0 ] unsigned char 
 25076 ;;  dummy           1    2[BANK0 ] volatile unsigned char 
 25077 ;; Return value:  Size  Location     Type
 25078 ;;		None               void
 25079 ;; Registers used:
 25080 ;;		wreg
 25081 ;; Tracked objects:
 25082 ;;		On entry : 0/0
 25083 ;;		On exit  : 0/0
 25084 ;;		Unchanged: 0/0
 25085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25090 ;;Total ram usage:        3 bytes
 25091 ;; Hardware stack levels used:    1
 25092 ;; Hardware stack levels required when called:    2
 25093 ;; This function calls:
 25094 ;;		Nothing
 25095 ;; This function is called by:
 25096 ;;		_cmdline_work
 25097 ;;		_proc_char
 25098 ;;		_printf
 25099 ;; This function uses a non-reentrant model
 25100 ;;
 25101                           psect	text3308
 25102                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25103                           	line	187
 25104                           	global	__size_of_putch
 25105  002D                     	__size_of_putch	equ	__end_of_putch-_putch
 25106                           	
 25107  2B68                     _putch:	
 25108                           	opt	stack 8
 25109                           ; Regs used in _putch: [wreg]
 25110                           ;putch@ch stored from wreg
 25111                           	line	213
 25112  2B68  0020               	movlb 0	; select bank0
 25113  2B69  00A2               	movwf	(putch@ch)
 25114                           	
 25115  2B6A                     l36927:	
 25116                           ;serial.c: 213: if (!SPEN)
 25117  2B6A  0023               	movlb 3	; select bank3
 25118  2B6B  1B9D               	btfsc	(3311/8)^0180h,(3311)&7
 25119  2B6C  2B6E               	goto	u9551
 25120  2B6D  2B6F               	goto	u9550
 25121  2B6E                     u9551:
 25122  2B6E  2B8A               	goto	l36941
 25123  2B6F                     u9550:
 25124  2B6F  2B94               	goto	l19309
 25125                           	line	214
 25126                           	
 25127  2B70                     l36929:	
 25128                           ;serial.c: 214: return;
 25129  2B70  2B94               	goto	l19309
 25130                           	
 25131  2B71                     l19308:	
 25132                           	line	215
 25133                           ;serial.c: 215: while(!TXIF) {
 25134  2B71  2B8A               	goto	l36941
 25135                           	
 25136  2B72                     l19311:	
 25137                           	line	216
 25138                           ;serial.c: 216: if (OERR) {
 25139  2B72  0023               	movlb 3	; select bank3
 25140  2B73  1C9D               	btfss	(3305/8)^0180h,(3305)&7
 25141  2B74  2B76               	goto	u9561
 25142  2B75  2B77               	goto	u9560
 25143  2B76                     u9561:
 25144  2B76  2B7B               	goto	l19312
 25145  2B77                     u9560:
 25146                           	line	217
 25147                           	
 25148  2B77                     l36931:	
 25149                           ;serial.c: 217: TXEN = 0;
 25150  2B77  129E               	bcf	(3317/8)^0180h,(3317)&7
 25151                           	line	218
 25152                           ;serial.c: 218: TXEN = 1;
 25153  2B78  169E               	bsf	(3317/8)^0180h,(3317)&7
 25154                           	line	219
 25155                           ;serial.c: 219: CREN = 0;
 25156  2B79  121D               	bcf	(3308/8)^0180h,(3308)&7
 25157                           	line	220
 25158                           ;serial.c: 220: CREN = 1;
 25159  2B7A  161D               	bsf	(3308/8)^0180h,(3308)&7
 25160                           	line	221
 25161                           	
 25162  2B7B                     l19312:	
 25163                           	line	222
 25164                           ;serial.c: 221: }
 25165                           ;serial.c: 222: if (FERR) {
 25166  2B7B  1D1D               	btfss	(3306/8)^0180h,(3306)&7
 25167  2B7C  2B7E               	goto	u9571
 25168  2B7D  2B7F               	goto	u9570
 25169  2B7E                     u9571:
 25170  2B7E  2B88               	goto	l36939
 25171  2B7F                     u9570:
 25172                           	line	225
 25173                           	
 25174  2B7F                     l36933:	
 25175                           ;serial.c: 223: volatile unsigned char dummy;
 25176                           ;serial.c: 225: dummy = RCREG;
 25177  2B7F  0819               	movf	(409)^0180h,w	;volatile
 25178  2B80  0020               	movlb 0	; select bank0
 25179  2B81  00A1               	movwf	(??_putch+0)+0
 25180  2B82  0821               	movf	(??_putch+0)+0,w
 25181  2B83  00A3               	movwf	(putch@dummy)	;volatile
 25182                           	line	226
 25183                           	
 25184  2B84                     l36935:	
 25185                           ;serial.c: 226: TXEN = 0;
 25186  2B84  0023               	movlb 3	; select bank3
 25187  2B85  129E               	bcf	(3317/8)^0180h,(3317)&7
 25188                           	line	227
 25189                           	
 25190  2B86                     l36937:	
 25191                           ;serial.c: 227: TXEN = 1;
 25192  2B86  169E               	bsf	(3317/8)^0180h,(3317)&7
 25193  2B87  2B88               	goto	l36939
 25194                           	line	228
 25195                           	
 25196  2B88                     l19313:	
 25197                           	line	229
 25198                           	
 25199  2B88                     l36939:	
 25200                           # 229 "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25201  2B88  0064               clrwdt ;#
 25202                           psect	text3308
 25203  2B89  2B8A               	goto	l36941
 25204                           	line	230
 25205                           	
 25206  2B8A                     l19310:	
 25207                           	line	215
 25208                           	
 25209  2B8A                     l36941:	
 25210  2B8A  0020               	movlb 0	; select bank0
 25211  2B8B  1E11               	btfss	(140/8),(140)&7
 25212  2B8C  2B8E               	goto	u9581
 25213  2B8D  2B8F               	goto	u9580
 25214  2B8E                     u9581:
 25215  2B8E  2B72               	goto	l19311
 25216  2B8F                     u9580:
 25217  2B8F  2B90               	goto	l36943
 25218                           	
 25219  2B90                     l19314:	
 25220                           	line	231
 25221                           	
 25222  2B90                     l36943:	
 25223                           ;serial.c: 230: }
 25224                           ;serial.c: 231: TXREG = ch;
 25225  2B90  0822               	movf	(putch@ch),w
 25226  2B91  0023               	movlb 3	; select bank3
 25227  2B92  009A               	movwf	(410)^0180h	;volatile
 25228                           	line	232
 25229                           	
 25230  2B93                     l36945:	
 25231                           # 232 "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25232  2B93  0064               clrwdt ;#
 25233                           psect	text3308
 25234                           	line	234
 25235                           	
 25236  2B94                     l19309:	
 25237  2B94  0008               	return
 25238                           	opt stack 0
 25239                           GLOBAL	__end_of_putch
 25240  2B95                     	__end_of_putch:
 25241 ;; =============== function _putch ends ============
 25242                           
 25243                           	signat	_putch,4216
 25244                           	global	_postponetimeout
 25245                           psect	text3309,local,class=CODE,delta=2
 25246                           global __ptext3309
 25247  2EE8                     __ptext3309:
 25248                           
 25249 ;; *************** function _postponetimeout *****************
 25250 ;; Defined at:
 25251 ;;		line 114 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25252 ;; Parameters:    Size  Location     Type
 25253 ;;  timer_p         2    0[BANK0 ] const PTR struct timer
 25254 ;;		 -> second(6), autotimer(6), 
 25255 ;;  postpone        4    2[BANK0 ] const unsigned long 
 25256 ;; Auto vars:     Size  Location     Type
 25257 ;;  tempLongTick    4   10[BANK0 ] unsigned long 
 25258 ;;  longshort       2   14[BANK0 ] PTR struct longshort
 25259 ;;		 -> second(6), autotimer(6), 
 25260 ;; Return value:  Size  Location     Type
 25261 ;;		None               void
 25262 ;; Registers used:
 25263 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25264 ;; Tracked objects:
 25265 ;;		On entry : 0/0
 25266 ;;		On exit  : 0/0
 25267 ;;		Unchanged: 0/0
 25268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25272 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 25273 ;;Total ram usage:       16 bytes
 25274 ;; Hardware stack levels used:    1
 25275 ;; Hardware stack levels required when called:    2
 25276 ;; This function calls:
 25277 ;;		Nothing
 25278 ;; This function is called by:
 25279 ;;		_update_autotimer
 25280 ;;		_rtc_work
 25281 ;; This function uses a non-reentrant model
 25282 ;;
 25283                           psect	text3309
 25284                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25285                           	line	114
 25286                           	global	__size_of_postponetimeout
 25287  005B                     	__size_of_postponetimeout	equ	__end_of_postponetimeout-_postponetimeout
 25288                           	
 25289  2EE8                     _postponetimeout:	
 25290                           	opt	stack 9
 25291                           ; Regs used in _postponetimeout: [wreg+fsr1l-status,0]
 25292                           	line	116
 25293                           	
 25294  2EE8                     l34237:	
 25295                           ;timer.c: 115: unsigned long tempLongTicks;
 25296                           ;timer.c: 116: struct longshort *longshort = (struct longshort*)timer_p;
 25297  2EE8  0020               	movlb 0	; select bank0
 25298  2EE9  0822               	movf	(postponetimeout@timer_p+1),w
 25299  2EEA  01B0               	clrf	(postponetimeout@longshort+1)
 25300  2EEB  07B0               	addwf	(postponetimeout@longshort+1)
 25301  2EEC  0821               	movf	(postponetimeout@timer_p),w
 25302  2EED  01AF               	clrf	(postponetimeout@longshort)
 25303  2EEE  07AF               	addwf	(postponetimeout@longshort)
 25304                           
 25305                           	line	119
 25306                           	
 25307  2EEF                     l34239:	
 25308                           ;timer.c: 119: if (!postpone)
 25309  2EEF  0826               	movf	(postponetimeout@postpone+3),w
 25310  2EF0  0425               	iorwf	(postponetimeout@postpone+2),w
 25311  2EF1  0424               	iorwf	(postponetimeout@postpone+1),w
 25312  2EF2  0423               	iorwf	(postponetimeout@postpone),w
 25313  2EF3  1D03               	skipz
 25314  2EF4  2EF6               	goto	u5991
 25315  2EF5  2EF7               	goto	u5990
 25316  2EF6                     u5991:
 25317  2EF6  2EF9               	goto	l34243
 25318  2EF7                     u5990:
 25319  2EF7  2F42               	goto	l21362
 25320                           	line	120
 25321                           	
 25322  2EF8                     l34241:	
 25323                           ;timer.c: 120: return;
 25324  2EF8  2F42               	goto	l21362
 25325                           	
 25326  2EF9                     l21361:	
 25327                           	line	123
 25328                           	
 25329  2EF9                     l34243:	
 25330                           ;timer.c: 123: tempLongTicks = longshort->ls_longTicks;
 25331  2EF9  082F               	movf	(postponetimeout@longshort),w
 25332  2EFA  0086               	movwf	fsr1l
 25333  2EFB  0830               	movf	(postponetimeout@longshort+1),w
 25334  2EFC  0087               	movwf	fsr1h
 25335                           
 25336  2EFD  3F40               	moviw	[0]fsr1
 25337  2EFE  00AB               	movwf	(postponetimeout@tempLongTicks)
 25338  2EFF  3F41               	moviw	[1]fsr1
 25339  2F00  00AC               	movwf	(postponetimeout@tempLongTicks+1)
 25340  2F01  3F42               	moviw	[2]fsr1
 25341  2F02  00AD               	movwf	(postponetimeout@tempLongTicks+2)
 25342  2F03  3F43               	moviw	[3]fsr1
 25343  2F04  00AE               	movwf	(postponetimeout@tempLongTicks+3)
 25344                           	line	126
 25345                           ;timer.c: 126: longshort->ls_longTicks += postpone;
 25346  2F05  082F               	movf	(postponetimeout@longshort),w
 25347  2F06  0086               	movwf	fsr1l
 25348  2F07  0830               	movf	(postponetimeout@longshort+1),w
 25349  2F08  0087               	movwf	fsr1h
 25350                           
 25351  2F09  0823               	movf	(postponetimeout@postpone),w
 25352  2F0A  0781               	addwf	indf1,f
 25353  2F0B  3141               	addfsr	fsr1,1
 25354  2F0C  0824               	movf	(postponetimeout@postpone+1),w
 25355  2F0D  3D81               	addwfc	indf1,f
 25356  2F0E  3141               	addfsr	fsr1,1
 25357  2F0F  0825               	movf	(postponetimeout@postpone+2),w
 25358  2F10  3D81               	addwfc	indf1,f
 25359  2F11  3141               	addfsr	fsr1,1
 25360  2F12  0826               	movf	(postponetimeout@postpone+3),w
 25361  2F13  3D81               	addwfc	indf1,f
 25362                           
 25363                           	line	129
 25364                           ;timer.c: 129: if (longshort->ls_longTicks <= tempLongTicks)
 25365  2F14  082F               	movf	(postponetimeout@longshort),w
 25366  2F15  0086               	movwf	fsr1l
 25367  2F16  0830               	movf	(postponetimeout@longshort+1),w
 25368  2F17  0087               	movwf	fsr1h
 25369                           
 25370  2F18  3F40               	moviw	[0]fsr1
 25371  2F19  00A7               	movwf	((??_postponetimeout+0)+0+0)
 25372  2F1A  3F41               	moviw	[1]fsr1
 25373  2F1B  00A8               	movwf	((??_postponetimeout+0)+0+1)
 25374  2F1C  3F42               	moviw	[2]fsr1
 25375  2F1D  00A9               	movwf	((??_postponetimeout+0)+0+2)
 25376  2F1E  3F43               	moviw	[3]fsr1
 25377  2F1F  00AA               	movwf	((??_postponetimeout+0)+0+3)
 25378  2F20  082A               	movf	3+(??_postponetimeout+0)+0,w
 25379  2F21  022E               	subwf	(postponetimeout@tempLongTicks+3),w
 25380  2F22  1D03               	skipz
 25381  2F23  2F2E               	goto	u6005
 25382  2F24  0829               	movf	2+(??_postponetimeout+0)+0,w
 25383  2F25  022D               	subwf	(postponetimeout@tempLongTicks+2),w
 25384  2F26  1D03               	skipz
 25385  2F27  2F2E               	goto	u6005
 25386  2F28  0828               	movf	1+(??_postponetimeout+0)+0,w
 25387  2F29  022C               	subwf	(postponetimeout@tempLongTicks+1),w
 25388  2F2A  1D03               	skipz
 25389  2F2B  2F2E               	goto	u6005
 25390  2F2C  0827               	movf	0+(??_postponetimeout+0)+0,w
 25391  2F2D  022B               	subwf	(postponetimeout@tempLongTicks),w
 25392  2F2E                     u6005:
 25393  2F2E  1C03               	skipc
 25394  2F2F  2F31               	goto	u6001
 25395  2F30  2F32               	goto	u6000
 25396  2F31                     u6001:
 25397  2F31  2F42               	goto	l21362
 25398  2F32                     u6000:
 25399                           	line	130
 25400                           	
 25401  2F32                     l34245:	
 25402                           ;timer.c: 130: longshort->ms_shortTicks++;
 25403  2F32  082F               	movf	(postponetimeout@longshort),w
 25404  2F33  3E04               	addlw	low(04h)
 25405  2F34  00A7               	movwf	(??_postponetimeout+0)+0
 25406  2F35  3000               	movlw	high(04h)
 25407  2F36  3D30               	addwfc	(postponetimeout@longshort+1),w
 25408  2F37  00A8               	movwf	1+(??_postponetimeout+0)+0
 25409  2F38  0827               	movf	0+(??_postponetimeout+0)+0,w
 25410  2F39  0086               	movwf	fsr1l
 25411  2F3A  0828               	movf	1+(??_postponetimeout+0)+0,w
 25412  2F3B  0087               	movwf	fsr1h
 25413                           
 25414  2F3C  3001               	movlw	01h
 25415  2F3D  0781               	addwf	indf1,f
 25416  2F3E  3141               	addfsr	fsr1,1
 25417  2F3F  1803               	skipnc
 25418  2F40  0A81               	incf	indf1,f
 25419  2F41  2F42               	goto	l21362
 25420                           	
 25421  2F42                     l21363:	
 25422                           	line	131
 25423                           	
 25424  2F42                     l21362:	
 25425  2F42  0008               	return
 25426                           	opt stack 0
 25427                           GLOBAL	__end_of_postponetimeout
 25428  2F43                     	__end_of_postponetimeout:
 25429 ;; =============== function _postponetimeout ends ============
 25430                           
 25431                           	signat	_postponetimeout,8312
 25432                           	global	_set_LED
 25433                           psect	text3310,local,class=CODE,delta=2
 25434                           global __ptext3310
 25435  2DF2                     __ptext3310:
 25436                           
 25437 ;; *************** function _set_LED *****************
 25438 ;; Defined at:
 25439 ;;		line 288 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 25440 ;; Parameters:    Size  Location     Type
 25441 ;;  led             1    wreg     unsigned char 
 25442 ;;  on              1    0[BANK0 ] unsigned char 
 25443 ;; Auto vars:     Size  Location     Type
 25444 ;;  led             1    2[BANK0 ] unsigned char 
 25445 ;;  mask            1    4[BANK0 ] unsigned char 
 25446 ;;  latch           1    3[BANK0 ] PTR volatile unsigned ch
 25447 ;;		 -> LATA(1), LATC(1), 
 25448 ;; Return value:  Size  Location     Type
 25449 ;;		None               void
 25450 ;; Registers used:
 25451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 25452 ;; Tracked objects:
 25453 ;;		On entry : 0/0
 25454 ;;		On exit  : 0/0
 25455 ;;		Unchanged: 0/0
 25456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25457 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25459 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25460 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 25461 ;;Total ram usage:        5 bytes
 25462 ;; Hardware stack levels used:    1
 25463 ;; Hardware stack levels required when called:    2
 25464 ;; This function calls:
 25465 ;;		Nothing
 25466 ;; This function is called by:
 25467 ;;		_update_display
 25468 ;; This function uses a non-reentrant model
 25469 ;;
 25470                           psect	text3310
 25471                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 25472                           	line	288
 25473                           	global	__size_of_set_LED
 25474  004E                     	__size_of_set_LED	equ	__end_of_set_LED-_set_LED
 25475                           	
 25476  2DF2                     _set_LED:	
 25477                           	opt	stack 11
 25478                           ; Regs used in _set_LED: [wreg-status,0]
 25479                           ;set_LED@led stored from wreg
 25480  2DF2  0020               	movlb 0	; select bank0
 25481  2DF3  00A3               	movwf	(set_LED@led)
 25482                           	line	291
 25483                           	
 25484  2DF4                     l34217:	
 25485                           ;catgenie120.c: 289: volatile unsigned char *latch;
 25486                           ;catgenie120.c: 290: unsigned char mask;
 25487                           ;catgenie120.c: 291: switch(led) {
 25488  2DF4  2E1B               	goto	l34229
 25489                           	line	292
 25490                           ;catgenie120.c: 292: case 1:
 25491                           	
 25492  2DF5                     l10899:	
 25493                           	line	293
 25494                           	
 25495  2DF5                     l34219:	
 25496                           ;catgenie120.c: 293: latch = &LATC;
 25497  2DF5  300E               	movlw	(270)&0ffh
 25498  2DF6  00A2               	movwf	(??_set_LED+0)+0
 25499  2DF7  0822               	movf	(??_set_LED+0)+0,w
 25500  2DF8  00A4               	movwf	(set_LED@latch)
 25501                           	line	294
 25502                           ;catgenie120.c: 294: mask = (1U << (5));
 25503  2DF9  3020               	movlw	(020h)
 25504  2DFA  00A2               	movwf	(??_set_LED+0)+0
 25505  2DFB  0822               	movf	(??_set_LED+0)+0,w
 25506  2DFC  00A5               	movwf	(set_LED@mask)
 25507                           	line	295
 25508                           ;catgenie120.c: 295: break;
 25509  2DFD  2E29               	goto	l34231
 25510                           	line	296
 25511                           ;catgenie120.c: 296: case 2:
 25512                           	
 25513  2DFE                     l10901:	
 25514                           	line	297
 25515                           	
 25516  2DFE                     l34221:	
 25517                           ;catgenie120.c: 297: latch = &LATA;
 25518  2DFE  300C               	movlw	(268)&0ffh
 25519  2DFF  00A2               	movwf	(??_set_LED+0)+0
 25520  2E00  0822               	movf	(??_set_LED+0)+0,w
 25521  2E01  00A4               	movwf	(set_LED@latch)
 25522                           	line	298
 25523                           ;catgenie120.c: 298: mask = (1U << (2));
 25524  2E02  3004               	movlw	(04h)
 25525  2E03  00A2               	movwf	(??_set_LED+0)+0
 25526  2E04  0822               	movf	(??_set_LED+0)+0,w
 25527  2E05  00A5               	movwf	(set_LED@mask)
 25528                           	line	299
 25529                           ;catgenie120.c: 299: break;
 25530  2E06  2E29               	goto	l34231
 25531                           	line	300
 25532                           ;catgenie120.c: 300: case 3:
 25533                           	
 25534  2E07                     l10902:	
 25535                           	line	301
 25536                           	
 25537  2E07                     l34223:	
 25538                           ;catgenie120.c: 301: latch = &LATA;
 25539  2E07  300C               	movlw	(268)&0ffh
 25540  2E08  00A2               	movwf	(??_set_LED+0)+0
 25541  2E09  0822               	movf	(??_set_LED+0)+0,w
 25542  2E0A  00A4               	movwf	(set_LED@latch)
 25543                           	line	302
 25544                           ;catgenie120.c: 302: mask = (1U << (3));
 25545  2E0B  3008               	movlw	(08h)
 25546  2E0C  00A2               	movwf	(??_set_LED+0)+0
 25547  2E0D  0822               	movf	(??_set_LED+0)+0,w
 25548  2E0E  00A5               	movwf	(set_LED@mask)
 25549                           	line	303
 25550                           ;catgenie120.c: 303: break;
 25551  2E0F  2E29               	goto	l34231
 25552                           	line	304
 25553                           ;catgenie120.c: 304: case 4:
 25554                           	
 25555  2E10                     l10903:	
 25556                           	line	305
 25557                           	
 25558  2E10                     l34225:	
 25559                           ;catgenie120.c: 305: latch = &LATA;
 25560  2E10  300C               	movlw	(268)&0ffh
 25561  2E11  00A2               	movwf	(??_set_LED+0)+0
 25562  2E12  0822               	movf	(??_set_LED+0)+0,w
 25563  2E13  00A4               	movwf	(set_LED@latch)
 25564                           	line	306
 25565                           ;catgenie120.c: 306: mask = (1U << (5));
 25566  2E14  3020               	movlw	(020h)
 25567  2E15  00A2               	movwf	(??_set_LED+0)+0
 25568  2E16  0822               	movf	(??_set_LED+0)+0,w
 25569  2E17  00A5               	movwf	(set_LED@mask)
 25570                           	line	307
 25571                           ;catgenie120.c: 307: break;
 25572  2E18  2E29               	goto	l34231
 25573                           	line	308
 25574                           ;catgenie120.c: 308: default:
 25575                           	
 25576  2E19                     l10904:	
 25577                           	line	309
 25578                           ;catgenie120.c: 309: return;
 25579  2E19  2E3F               	goto	l10905
 25580                           	line	310
 25581                           	
 25582  2E1A                     l34227:	
 25583                           ;catgenie120.c: 310: }
 25584  2E1A  2E29               	goto	l34231
 25585                           	line	291
 25586                           	
 25587  2E1B                     l10898:	
 25588                           	
 25589  2E1B                     l34229:	
 25590  2E1B  0823               	movf	(set_LED@led),w
 25591                           	; Switch size 1, requested type "space"
 25592                           ; Number of cases is 4, Range of values is 1 to 4
 25593                           ; switch strategies available:
 25594                           ; Name         Instructions Cycles
 25595                           ; simple_byte           13     7 (average)
 25596                           ; direct_byte           17     9 (fixed)
 25597                           ; jumptable            263     9 (fixed)
 25598                           ;	Chosen strategy is simple_byte
 25599                           
 25600                           	opt asmopt_off
 25601  2E1C  3A01               	xorlw	1^0	; case 1
 25602  2E1D  1903               	skipnz
 25603  2E1E  2DF5               	goto	l34219
 25604  2E1F  3A03               	xorlw	2^1	; case 2
 25605  2E20  1903               	skipnz
 25606  2E21  2DFE               	goto	l34221
 25607  2E22  3A01               	xorlw	3^2	; case 3
 25608  2E23  1903               	skipnz
 25609  2E24  2E07               	goto	l34223
 25610  2E25  3A07               	xorlw	4^3	; case 4
 25611  2E26  1903               	skipnz
 25612  2E27  2E10               	goto	l34225
 25613  2E28  2E3F               	goto	l10905
 25614                           	opt asmopt_on
 25615                           
 25616                           	line	310
 25617                           	
 25618  2E29                     l10900:	
 25619                           	line	311
 25620                           	
 25621  2E29                     l34231:	
 25622                           ;catgenie120.c: 311: if (on)
 25623  2E29  0821               	movf	(set_LED@on),w
 25624  2E2A  1D03               	skipz
 25625  2E2B  2E2D               	goto	u5980
 25626  2E2C  2E36               	goto	l34235
 25627  2E2D                     u5980:
 25628                           	line	312
 25629                           	
 25630  2E2D                     l34233:	
 25631                           ;catgenie120.c: 312: *latch |= mask;
 25632  2E2D  0825               	movf	(set_LED@mask),w
 25633  2E2E  00A2               	movwf	(??_set_LED+0)+0
 25634  2E2F  0824               	movf	(set_LED@latch),w
 25635  2E30  0086               	movwf	fsr1l
 25636  2E31  3001               	movlw 1	; select bank2/3
 25637  2E32  0087               	movwf fsr1h	
 25638                           	
 25639  2E33  0822               	movf	(??_set_LED+0)+0,w
 25640  2E34  0481               	iorwf	indf1,f
 25641  2E35  2E3F               	goto	l10905
 25642                           	line	313
 25643                           	
 25644  2E36                     l10906:	
 25645                           	line	314
 25646                           	
 25647  2E36                     l34235:	
 25648                           ;catgenie120.c: 313: else
 25649                           ;catgenie120.c: 314: *latch &= ~mask;
 25650  2E36  0925               	comf	(set_LED@mask),w
 25651  2E37  00A2               	movwf	(??_set_LED+0)+0
 25652  2E38  0824               	movf	(set_LED@latch),w
 25653  2E39  0086               	movwf	fsr1l
 25654  2E3A  3001               	movlw 1	; select bank2/3
 25655  2E3B  0087               	movwf fsr1h	
 25656                           	
 25657  2E3C  0822               	movf	(??_set_LED+0)+0,w
 25658  2E3D  0581               	andwf	indf1,f
 25659  2E3E  2E3F               	goto	l10905
 25660                           	
 25661  2E3F                     l10907:	
 25662                           	line	315
 25663                           	
 25664  2E3F                     l10905:	
 25665  2E3F  0008               	return
 25666                           	opt stack 0
 25667                           GLOBAL	__end_of_set_LED
 25668  2E40                     	__end_of_set_LED:
 25669 ;; =============== function _set_LED ends ============
 25670                           
 25671                           	signat	_set_LED,8312
 25672                           	global	_setup_long
 25673                           psect	text3311,local,class=CODE,delta=2
 25674                           global __ptext3311
 25675  01FF                     __ptext3311:
 25676                           
 25677 ;; *************** function _setup_long *****************
 25678 ;; Defined at:
 25679 ;;		line 559 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 25680 ;; Parameters:    Size  Location     Type
 25681 ;;		None
 25682 ;; Auto vars:     Size  Location     Type
 25683 ;;		None
 25684 ;; Return value:  Size  Location     Type
 25685 ;;		None               void
 25686 ;; Registers used:
 25687 ;;		None
 25688 ;; Tracked objects:
 25689 ;;		On entry : 0/0
 25690 ;;		On exit  : 0/0
 25691 ;;		Unchanged: 0/0
 25692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25697 ;;Total ram usage:        0 bytes
 25698 ;; Hardware stack levels used:    1
 25699 ;; Hardware stack levels required when called:    2
 25700 ;; This function calls:
 25701 ;;		Nothing
 25702 ;; This function is called by:
 25703 ;;		_userinterface_work
 25704 ;; This function uses a non-reentrant model
 25705 ;;
 25706                           psect	text3311
 25707                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 25708                           	line	559
 25709                           	global	__size_of_setup_long
 25710  0001                     	__size_of_setup_long	equ	__end_of_setup_long-_setup_long
 25711                           	
 25712  01FF                     _setup_long:	
 25713                           	opt	stack 12
 25714                           ; Regs used in _setup_long: []
 25715                           	line	560
 25716                           	
 25717  01FF                     l8797:	
 25718  01FF  0008               	return
 25719                           	opt stack 0
 25720                           GLOBAL	__end_of_setup_long
 25721  0200                     	__end_of_setup_long:
 25722 ;; =============== function _setup_long ends ============
 25723                           
 25724                           	signat	_setup_long,88
 25725                           	global	_timeoutnow
 25726                           psect	text3312,local,class=CODE,delta=2
 25727                           global __ptext3312
 25728  29CB                     __ptext3312:
 25729                           
 25730 ;; *************** function _timeoutnow *****************
 25731 ;; Defined at:
 25732 ;;		line 142 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25733 ;; Parameters:    Size  Location     Type
 25734 ;;  timer_p         2    4[BANK0 ] const PTR struct timer
 25735 ;;		 -> pacers(55), cattimer(6), 
 25736 ;; Auto vars:     Size  Location     Type
 25737 ;;		None
 25738 ;; Return value:  Size  Location     Type
 25739 ;;		None               void
 25740 ;; Registers used:
 25741 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25742 ;; Tracked objects:
 25743 ;;		On entry : 0/0
 25744 ;;		On exit  : 0/0
 25745 ;;		Unchanged: 0/0
 25746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25749 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25750 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25751 ;;Total ram usage:        4 bytes
 25752 ;; Hardware stack levels used:    1
 25753 ;; Hardware stack levels required when called:    2
 25754 ;; This function calls:
 25755 ;;		Nothing
 25756 ;; This function is called by:
 25757 ;;		_userinterface_work
 25758 ;;		_set_mode
 25759 ;;		_set_pacer
 25760 ;; This function uses a non-reentrant model
 25761 ;;
 25762                           psect	text3312
 25763                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25764                           	line	142
 25765                           	global	__size_of_timeoutnow
 25766  001C                     	__size_of_timeoutnow	equ	__end_of_timeoutnow-_timeoutnow
 25767                           	
 25768  29CB                     _timeoutnow:	
 25769                           	opt	stack 8
 25770                           ; Regs used in _timeoutnow: [wreg+fsr1l-status,0]
 25771                           	line	143
 25772                           	
 25773  29CB                     l36923:	
 25774                           ;timer.c: 143: timer_p->timer1 = 0x0000;
 25775  29CB  0020               	movlb 0	; select bank0
 25776  29CC  0825               	movf	(timeoutnow@timer_p),w
 25777  29CD  0086               	movwf	fsr1l
 25778  29CE  0826               	movf	(timeoutnow@timer_p+1),w
 25779  29CF  0087               	movwf	fsr1h
 25780                           
 25781  29D0  3000               	movlw	low(0)
 25782  29D1  3FC0               	movwi	[0]fsr1
 25783  29D2  3000               	movlw	high(0)
 25784  29D3  3FC1               	movwi	[1]fsr1
 25785                           	line	144
 25786                           	
 25787  29D4                     l36925:	
 25788                           ;timer.c: 144: timer_p->overflows = 0x00000000;
 25789  29D4  0825               	movf	(timeoutnow@timer_p),w
 25790  29D5  3E02               	addlw	low(02h)
 25791  29D6  00A7               	movwf	(??_timeoutnow+0)+0
 25792  29D7  3000               	movlw	high(02h)
 25793  29D8  3D26               	addwfc	(timeoutnow@timer_p+1),w
 25794  29D9  00A8               	movwf	1+(??_timeoutnow+0)+0
 25795  29DA  0827               	movf	0+(??_timeoutnow+0)+0,w
 25796  29DB  0086               	movwf	fsr1l
 25797  29DC  0828               	movf	1+(??_timeoutnow+0)+0,w
 25798  29DD  0087               	movwf	fsr1h
 25799                           
 25800  29DE  3000               	movlw	0
 25801  29DF  3FC0               	movwi	[0]fsr1
 25802  29E0  3000               	movlw	0
 25803  29E1  3FC1               	movwi	[1]fsr1
 25804  29E2  3000               	movlw	0
 25805  29E3  3FC2               	movwi	[2]fsr1
 25806  29E4  3000               	movlw	0
 25807  29E5  3FC3               	movwi	[3]fsr1
 25808                           	line	145
 25809                           	
 25810  29E6                     l21366:	
 25811  29E6  0008               	return
 25812                           	opt stack 0
 25813                           GLOBAL	__end_of_timeoutnow
 25814  29E7                     	__end_of_timeoutnow:
 25815 ;; =============== function _timeoutnow ends ============
 25816                           
 25817                           	signat	_timeoutnow,4216
 25818                           	global	_memcpy
 25819                           psect	text3313,local,class=CODE,delta=2
 25820                           global __ptext3313
 25821  2BC2                     __ptext3313:
 25822                           
 25823 ;; *************** function _memcpy *****************
 25824 ;; Defined at:
 25825 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
 25826 ;; Parameters:    Size  Location     Type
 25827 ;;  d1              1    wreg     PTR void 
 25828 ;;		 -> ins_pointer(2), 
 25829 ;;  s1              1    0[BANK0 ] PTR const void 
 25830 ;;		 -> exe_instruction@temp(2), 
 25831 ;;  n               2    1[BANK0 ] unsigned int 
 25832 ;; Auto vars:     Size  Location     Type
 25833 ;;  d1              1    4[BANK0 ] PTR void 
 25834 ;;		 -> ins_pointer(2), 
 25835 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 25836 ;;		 -> exe_instruction@temp(2), 
 25837 ;;  d               1    5[BANK0 ] PTR unsigned char 
 25838 ;;		 -> ins_pointer(2), 
 25839 ;; Return value:  Size  Location     Type
 25840 ;;                  1    wreg      PTR void 
 25841 ;; Registers used:
 25842 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25843 ;; Tracked objects:
 25844 ;;		On entry : 0/0
 25845 ;;		On exit  : 0/0
 25846 ;;		Unchanged: 0/0
 25847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25848 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25850 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25851 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 25852 ;;Total ram usage:        7 bytes
 25853 ;; Hardware stack levels used:    1
 25854 ;; Hardware stack levels required when called:    2
 25855 ;; This function calls:
 25856 ;;		Nothing
 25857 ;; This function is called by:
 25858 ;;		_exe_instruction
 25859 ;; This function uses a non-reentrant model
 25860 ;;
 25861                           psect	text3313
 25862                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
 25863                           	line	10
 25864                           	global	__size_of_memcpy
 25865  002E                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
 25866                           	
 25867  2BC2                     _memcpy:	
 25868                           	opt	stack 11
 25869                           ; Regs used in _memcpy: [wreg+fsr1l-status,0]
 25870                           ;memcpy@d1 stored from wreg
 25871                           	line	19
 25872  2BC2  0020               	movlb 0	; select bank0
 25873  2BC3  00A5               	movwf	(memcpy@d1)
 25874                           	
 25875  2BC4                     l36913:	
 25876  2BC4  0821               	movf	(memcpy@s1),w
 25877  2BC5  00A4               	movwf	(??_memcpy+0)+0
 25878  2BC6  0824               	movf	(??_memcpy+0)+0,w
 25879  2BC7  00A7               	movwf	(memcpy@s)
 25880                           	line	20
 25881  2BC8  0825               	movf	(memcpy@d1),w
 25882  2BC9  00A4               	movwf	(??_memcpy+0)+0
 25883  2BCA  0824               	movf	(??_memcpy+0)+0,w
 25884  2BCB  00A6               	movwf	(memcpy@d)
 25885                           	line	21
 25886  2BCC  2BE0               	goto	l36921
 25887                           	
 25888  2BCD                     l29061:	
 25889                           	line	22
 25890                           	
 25891  2BCD                     l36915:	
 25892  2BCD  0827               	movf	(memcpy@s),w
 25893  2BCE  0086               	movwf	fsr1l
 25894  2BCF  0187               	clrf fsr1h	
 25895                           	
 25896  2BD0  0801               	movf	indf1,w
 25897  2BD1  00A4               	movwf	(??_memcpy+0)+0
 25898  2BD2  0826               	movf	(memcpy@d),w
 25899  2BD3  0086               	movwf	fsr1l
 25900  2BD4  0187               	clrf fsr1h	
 25901                           	
 25902  2BD5  0824               	movf	(??_memcpy+0)+0,w
 25903  2BD6  0081               	movwf	indf1
 25904                           	
 25905  2BD7                     l36917:	
 25906  2BD7  3001               	movlw	(01h)
 25907  2BD8  00A4               	movwf	(??_memcpy+0)+0
 25908  2BD9  0824               	movf	(??_memcpy+0)+0,w
 25909  2BDA  07A7               	addwf	(memcpy@s),f
 25910                           	
 25911  2BDB                     l36919:	
 25912  2BDB  3001               	movlw	(01h)
 25913  2BDC  00A4               	movwf	(??_memcpy+0)+0
 25914  2BDD  0824               	movf	(??_memcpy+0)+0,w
 25915  2BDE  07A6               	addwf	(memcpy@d),f
 25916  2BDF  2BE0               	goto	l36921
 25917                           	
 25918  2BE0                     l29060:	
 25919                           	line	21
 25920                           	
 25921  2BE0                     l36921:	
 25922  2BE0  3001               	movlw	low(01h)
 25923  2BE1  02A2               	subwf	(memcpy@n),f
 25924  2BE2  3000               	movlw	high(01h)
 25925  2BE3  3BA3               	subwfb	(memcpy@n+1),f
 25926  2BE4  30FF               	movlw	high(0FFFFh)
 25927  2BE5  0623               	xorwf	((memcpy@n+1)),w
 25928  2BE6  1D03               	skipz
 25929  2BE7  2BEA               	goto	u9545
 25930  2BE8  30FF               	movlw	low(0FFFFh)
 25931  2BE9  0622               	xorwf	((memcpy@n)),w
 25932  2BEA                     u9545:
 25933                           
 25934  2BEA  1D03               	skipz
 25935  2BEB  2BED               	goto	u9541
 25936  2BEC  2BEE               	goto	u9540
 25937  2BED                     u9541:
 25938  2BED  2BCD               	goto	l36915
 25939  2BEE                     u9540:
 25940  2BEE  2BEF               	goto	l29063
 25941                           	
 25942  2BEF                     l29062:	
 25943                           	line	24
 25944                           ;	Return value of _memcpy is never used
 25945                           	
 25946  2BEF                     l29063:	
 25947  2BEF  0008               	return
 25948                           	opt stack 0
 25949                           GLOBAL	__end_of_memcpy
 25950  2BF0                     	__end_of_memcpy:
 25951 ;; =============== function _memcpy ends ============
 25952                           
 25953                           	signat	_memcpy,12409
 25954                           	global	_romwashprogram_getins
 25955                           psect	text3314,local,class=CODE,delta=2
 25956                           global __ptext3314
 25957  295F                     __ptext3314:
 25958                           
 25959 ;; *************** function _romwashprogram_getins *****************
 25960 ;; Defined at:
 25961 ;;		line 340 in file "D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 25962 ;; Parameters:    Size  Location     Type
 25963 ;;  instruction     1    wreg     const PTR struct instruc
 25964 ;;		 -> cur_instruction(3), 
 25965 ;; Auto vars:     Size  Location     Type
 25966 ;;  instruction     1    3[BANK0 ] const PTR struct instruc
 25967 ;;		 -> cur_instruction(3), 
 25968 ;; Return value:  Size  Location     Type
 25969 ;;                  1    wreg      unsigned char 
 25970 ;; Registers used:
 25971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 25972 ;; Tracked objects:
 25973 ;;		On entry : 0/0
 25974 ;;		On exit  : 0/0
 25975 ;;		Unchanged: 0/0
 25976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25979 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25980 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25981 ;;Total ram usage:        4 bytes
 25982 ;; Hardware stack levels used:    1
 25983 ;; Hardware stack levels required when called:    2
 25984 ;; This function calls:
 25985 ;;		Nothing
 25986 ;; This function is called by:
 25987 ;;		_get_instruction
 25988 ;; This function uses a non-reentrant model
 25989 ;;
 25990                           psect	text3314
 25991                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 25992                           	line	340
 25993                           	global	__size_of_romwashprogram_getins
 25994  001A                     	__size_of_romwashprogram_getins	equ	__end_of_romwashprogram_getins-_romwashprogram_geti
                                 ns
 25995                           	
 25996  295F                     _romwashprogram_getins:	
 25997                           	opt	stack 11
 25998                           ; Regs used in _romwashprogram_getins: [wreg-status,0+pclath]
 25999                           ;romwashprogram_getins@instruction stored from wreg
 26000  295F  0020               	movlb 0	; select bank0
 26001  2960  00A4               	movwf	(romwashprogram_getins@instruction)
 26002                           	line	341
 26003                           	
 26004  2961                     l36907:	
 26005                           ;romwashprogram.c: 341: *instruction = *ins_address;
 26006  2961  0021               	movlb 1	; select bank1
 26007  2962  084E               	movf	(_ins_address)^080h,w
 26008  2963  0084               	movwf	fsr0l
 26009  2964  084F               	movf	((_ins_address+1)^080h),w
 26010  2965  0085               	movwf	fsr0h
 26011  2966  3F00               	moviw	[0]fsr0
 26012  2967  0020               	movlb 0	; select bank0
 26013  2968  00A1               	movwf	((??_romwashprogram_getins+0)+0)
 26014  2969  3F01               	moviw	[1]fsr0
 26015  296A  00A2               	movwf	((??_romwashprogram_getins+0)+0+1)
 26016  296B  3F02               	moviw	[2]fsr0
 26017  296C  00A3               	movwf	((??_romwashprogram_getins+0)+0+2)
 26018  296D  0824               	movf	(romwashprogram_getins@instruction),w
 26019  296E  0086               	movwf	fsr1l
 26020  296F  0187               	clrf fsr1h	
 26021                           	
 26022  2970  0821               	movf	0+(??_romwashprogram_getins+0)+0,w
 26023  2971  3FC0               	movwi	[0]fsr1
 26024  2972  0822               	movf	1+(??_romwashprogram_getins+0)+0,w
 26025  2973  3FC1               	movwi	[1]fsr1
 26026  2974  0823               	movf	2+(??_romwashprogram_getins+0)+0,w
 26027  2975  3FC2               	movwi	[2]fsr1
 26028                           	line	343
 26029                           	
 26030  2976                     l36909:	
 26031                           ;romwashprogram.c: 343: return 1;
 26032  2976  3001               	movlw	(01h)
 26033  2977  2978               	goto	l6511
 26034                           	
 26035  2978                     l36911:	
 26036                           	line	344
 26037                           	
 26038  2978                     l6511:	
 26039  2978  0008               	return
 26040                           	opt stack 0
 26041                           GLOBAL	__end_of_romwashprogram_getins
 26042  2979                     	__end_of_romwashprogram_getins:
 26043 ;; =============== function _romwashprogram_getins ends ============
 26044                           
 26045                           	signat	_romwashprogram_getins,4217
 26046                           	global	_romwashprogram_reqins
 26047                           psect	text3315,local,class=CODE,delta=2
 26048                           global __ptext3315
 26049  37AD                     __ptext3315:
 26050                           
 26051 ;; *************** function _romwashprogram_reqins *****************
 26052 ;; Defined at:
 26053 ;;		line 335 in file "D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 26054 ;; Parameters:    Size  Location     Type
 26055 ;;  address         2    0[BANK0 ] PTR const struct instruc
 26056 ;;		 -> cleanupprogram(36), washprogram(303), cur_instruction(3), ROM(16384), 
 26057 ;; Auto vars:     Size  Location     Type
 26058 ;;		None
 26059 ;; Return value:  Size  Location     Type
 26060 ;;		None               void
 26061 ;; Registers used:
 26062 ;;		wreg, status,2, status,0
 26063 ;; Tracked objects:
 26064 ;;		On entry : 0/0
 26065 ;;		On exit  : 0/0
 26066 ;;		Unchanged: 0/0
 26067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26071 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26072 ;;Total ram usage:        2 bytes
 26073 ;; Hardware stack levels used:    1
 26074 ;; Hardware stack levels required when called:    2
 26075 ;; This function calls:
 26076 ;;		Nothing
 26077 ;; This function is called by:
 26078 ;;		_req_instruction
 26079 ;; This function uses a non-reentrant model
 26080 ;;
 26081                           psect	text3315
 26082                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 26083                           	line	335
 26084                           	global	__size_of_romwashprogram_reqins
 26085  000B                     	__size_of_romwashprogram_reqins	equ	__end_of_romwashprogram_reqins-_romwashprogram_reqi
                                 ns
 26086                           	
 26087  37AD                     _romwashprogram_reqins:	
 26088                           	opt	stack 11
 26089                           ; Regs used in _romwashprogram_reqins: [wreg+status,2+status,0]
 26090                           	line	336
 26091                           	
 26092  37AD                     l36905:	
 26093                           ;romwashprogram.c: 336: ins_address = address;
 26094  37AD  0020               	movlb 0	; select bank0
 26095  37AE  0822               	movf	(romwashprogram_reqins@address+1),w
 26096  37AF  0021               	movlb 1	; select bank1
 26097  37B0  01CF               	clrf	(_ins_address+1)^080h
 26098  37B1  07CF               	addwf	(_ins_address+1)^080h
 26099  37B2  0020               	movlb 0	; select bank0
 26100  37B3  0821               	movf	(romwashprogram_reqins@address),w
 26101  37B4  0021               	movlb 1	; select bank1
 26102  37B5  01CE               	clrf	(_ins_address)^080h
 26103  37B6  07CE               	addwf	(_ins_address)^080h
 26104                           
 26105                           	line	337
 26106                           	
 26107  37B7                     l6508:	
 26108  37B7  0008               	return
 26109                           	opt stack 0
 26110                           GLOBAL	__end_of_romwashprogram_reqins
 26111  37B8                     	__end_of_romwashprogram_reqins:
 26112 ;; =============== function _romwashprogram_reqins ends ============
 26113                           
 26114                           	signat	_romwashprogram_reqins,4216
 26115                           	global	_litterlanguage_paused
 26116                           psect	text3316,local,class=CODE,delta=2
 26117                           global __ptext3316
 26118  3775                     __ptext3316:
 26119                           
 26120 ;; *************** function _litterlanguage_paused *****************
 26121 ;; Defined at:
 26122 ;;		line 341 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 26123 ;; Parameters:    Size  Location     Type
 26124 ;;		None
 26125 ;; Auto vars:     Size  Location     Type
 26126 ;;		None
 26127 ;; Return value:  Size  Location     Type
 26128 ;;                  1    wreg      unsigned char 
 26129 ;; Registers used:
 26130 ;;		wreg
 26131 ;; Tracked objects:
 26132 ;;		On entry : 0/0
 26133 ;;		On exit  : 0/0
 26134 ;;		Unchanged: 0/0
 26135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26140 ;;Total ram usage:        0 bytes
 26141 ;; Hardware stack levels used:    1
 26142 ;; Hardware stack levels required when called:    2
 26143 ;; This function calls:
 26144 ;;		Nothing
 26145 ;; This function is called by:
 26146 ;;		_start_short
 26147 ;; This function uses a non-reentrant model
 26148 ;;
 26149                           psect	text3316
 26150                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 26151                           	line	341
 26152                           	global	__size_of_litterlanguage_paused
 26153  0005                     	__size_of_litterlanguage_paused	equ	__end_of_litterlanguage_paused-_litterlanguage_paus
                                 ed
 26154                           	
 26155  3775                     _litterlanguage_paused:	
 26156                           	opt	stack 11
 26157                           ; Regs used in _litterlanguage_paused: [wreg]
 26158                           	line	342
 26159                           	
 26160  3775                     l34191:	
 26161                           ;litterlanguage.c: 342: return (paused);
 26162  3775  3000               	movlw	0
 26163  3776  1AF1               	btfsc	(_paused/8),(_paused)&7
 26164  3777  3001               	movlw	1
 26165  3778  2F79               	goto	l4304
 26166                           	
 26167  3779                     l34193:	
 26168                           	line	343
 26169                           	
 26170  3779                     l4304:	
 26171  3779  0008               	return
 26172                           	opt stack 0
 26173                           GLOBAL	__end_of_litterlanguage_paused
 26174  377A                     	__end_of_litterlanguage_paused:
 26175 ;; =============== function _litterlanguage_paused ends ============
 26176                           
 26177                           	signat	_litterlanguage_paused,89
 26178                           	global	_timestampdiff
 26179                           psect	text3317,local,class=CODE,delta=2
 26180                           global __ptext3317
 26181  1BF0                     __ptext3317:
 26182                           
 26183 ;; *************** function _timestampdiff *****************
 26184 ;; Defined at:
 26185 ;;		line 246 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26186 ;; Parameters:    Size  Location     Type
 26187 ;;  early_p         2    0[BANK0 ] const PTR const struct t
 26188 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26189 ;;  late_p          1    2[BANK0 ] const PTR const struct t
 26190 ;;		 -> litterlanguage_pause@timer_now(6), 
 26191 ;; Auto vars:     Size  Location     Type
 26192 ;;  diff            4   12[BANK0 ] unsigned long 
 26193 ;;  early_longsh    2   16[BANK0 ] PTR struct longshort
 26194 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26195 ;;  late_longsho    1   18[BANK0 ] PTR struct longshort
 26196 ;;		 -> litterlanguage_pause@timer_now(6), 
 26197 ;; Return value:  Size  Location     Type
 26198 ;;                  4    0[BANK0 ] unsigned long 
 26199 ;; Registers used:
 26200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 26201 ;; Tracked objects:
 26202 ;;		On entry : 0/0
 26203 ;;		On exit  : 0/0
 26204 ;;		Unchanged: 0/0
 26205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26207 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 26208 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 26209 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
       0       0
 26210 ;;Total ram usage:       19 bytes
 26211 ;; Hardware stack levels used:    1
 26212 ;; Hardware stack levels required when called:    2
 26213 ;; This function calls:
 26214 ;;		Nothing
 26215 ;; This function is called by:
 26216 ;;		_litterlanguage_pause
 26217 ;; This function uses a non-reentrant model
 26218 ;;
 26219                           psect	text3317
 26220                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26221                           	line	246
 26222                           	global	__size_of_timestampdiff
 26223  013E                     	__size_of_timestampdiff	equ	__end_of_timestampdiff-_timestampdiff
 26224                           	
 26225  1BF0                     _timestampdiff:	
 26226                           	opt	stack 9
 26227                           ; Regs used in _timestampdiff: [wreg-status,0]
 26228                           	line	247
 26229                           	
 26230  1BF0                     l36871:	
 26231                           ;timer.c: 247: unsigned long diff = 0;
 26232  1BF0  3000               	movlw	0
 26233  1BF1  0020               	movlb 0	; select bank0
 26234  1BF2  00B0               	movwf	(timestampdiff@diff+3)
 26235  1BF3  3000               	movlw	0
 26236  1BF4  00AF               	movwf	(timestampdiff@diff+2)
 26237  1BF5  3000               	movlw	0
 26238  1BF6  00AE               	movwf	(timestampdiff@diff+1)
 26239  1BF7  3000               	movlw	0
 26240  1BF8  00AD               	movwf	(timestampdiff@diff)
 26241                           
 26242                           	line	248
 26243                           	
 26244  1BF9                     l36873:	
 26245                           ;timer.c: 248: struct longshort *early_longshort = (struct longshort*)early_p;
 26246  1BF9  0822               	movf	(timestampdiff@early_p+1),w
 26247  1BFA  01B2               	clrf	(timestampdiff@early_longshort+1)
 26248  1BFB  07B2               	addwf	(timestampdiff@early_longshort+1)
 26249  1BFC  0821               	movf	(timestampdiff@early_p),w
 26250  1BFD  01B1               	clrf	(timestampdiff@early_longshort)
 26251  1BFE  07B1               	addwf	(timestampdiff@early_longshort)
 26252                           
 26253                           	line	249
 26254                           	
 26255  1BFF                     l36875:	
 26256                           ;timer.c: 249: struct longshort *late_longshort = (struct longshort*)late_p;
 26257  1BFF  0823               	movf	(timestampdiff@late_p),w
 26258  1C00  00A5               	movwf	(??_timestampdiff+0)+0
 26259  1C01  0825               	movf	(??_timestampdiff+0)+0,w
 26260  1C02  00B3               	movwf	(timestampdiff@late_longshort)
 26261                           	line	252
 26262                           	
 26263  1C03                     l36877:	
 26264                           ;timer.c: 252: if (early_longshort->ms_shortTicks >= late_longshort->ms_shortTicks) {
 26265  1C03  0833               	movf	(timestampdiff@late_longshort),w
 26266  1C04  3E04               	addlw	04h
 26267  1C05  0086               	movwf	fsr1l
 26268  1C06  0187               	clrf fsr1h	
 26269                           	
 26270  1C07  3F40               	moviw	[0]fsr1
 26271  1C08  00A5               	movwf	(??_timestampdiff+0)+0
 26272  1C09  3F41               	moviw	[1]fsr1
 26273  1C0A  00A6               	movwf	(??_timestampdiff+0)+0+1
 26274  1C0B  0831               	movf	(timestampdiff@early_longshort),w
 26275  1C0C  3E04               	addlw	low(04h)
 26276  1C0D  00A7               	movwf	(??_timestampdiff+2)+0
 26277  1C0E  3000               	movlw	high(04h)
 26278  1C0F  3D32               	addwfc	(timestampdiff@early_longshort+1),w
 26279  1C10  00A8               	movwf	1+(??_timestampdiff+2)+0
 26280  1C11  0827               	movf	0+(??_timestampdiff+2)+0,w
 26281  1C12  0086               	movwf	fsr1l
 26282  1C13  0828               	movf	1+(??_timestampdiff+2)+0,w
 26283  1C14  0087               	movwf	fsr1h
 26284                           
 26285  1C15  3F40               	moviw	[0]fsr1
 26286  1C16  00A9               	movwf	(??_timestampdiff+4)+0
 26287  1C17  3F41               	moviw	[1]fsr1
 26288  1C18  00AA               	movwf	(??_timestampdiff+4)+0+1
 26289  1C19  0826               	movf	1+(??_timestampdiff+0)+0,w
 26290  1C1A  022A               	subwf	1+(??_timestampdiff+4)+0,w
 26291  1C1B  1D03               	skipz
 26292  1C1C  2C1F               	goto	u9515
 26293  1C1D  0825               	movf	0+(??_timestampdiff+0)+0,w
 26294  1C1E  0229               	subwf	0+(??_timestampdiff+4)+0,w
 26295  1C1F                     u9515:
 26296  1C1F  1C03               	skipc
 26297  1C20  2C22               	goto	u9511
 26298  1C21  2C23               	goto	u9510
 26299  1C22                     u9511:
 26300  1C22  2D24               	goto	l36897
 26301  1C23                     u9510:
 26302  1C23  2CF9               	goto	l36895
 26303                           	line	253
 26304                           	
 26305  1C24                     l36879:	
 26306                           ;timer.c: 253: switch (early_longshort->ms_shortTicks - late_longshort->ms_shortTicks) {
 26307  1C24  2CF9               	goto	l36895
 26308                           	line	254
 26309                           ;timer.c: 254: case 0:
 26310                           	
 26311  1C25                     l21393:	
 26312                           	line	255
 26313                           	
 26314  1C25                     l36881:	
 26315                           ;timer.c: 255: if (early_longshort->ls_longTicks > late_longshort->ls_longTicks) {
 26316  1C25  0831               	movf	(timestampdiff@early_longshort),w
 26317  1C26  0086               	movwf	fsr1l
 26318  1C27  0832               	movf	(timestampdiff@early_longshort+1),w
 26319  1C28  0087               	movwf	fsr1h
 26320                           
 26321  1C29  3F40               	moviw	[0]fsr1
 26322  1C2A  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26323  1C2B  3F41               	moviw	[1]fsr1
 26324  1C2C  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26325  1C2D  3F42               	moviw	[2]fsr1
 26326  1C2E  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26327  1C2F  3F43               	moviw	[3]fsr1
 26328  1C30  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26329  1C31  0833               	movf	(timestampdiff@late_longshort),w
 26330  1C32  0086               	movwf	fsr1l
 26331  1C33  0187               	clrf fsr1h	
 26332                           	
 26333  1C34  3F40               	moviw	[0]fsr1
 26334  1C35  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26335  1C36  3F41               	moviw	[1]fsr1
 26336  1C37  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26337  1C38  3F42               	moviw	[2]fsr1
 26338  1C39  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26339  1C3A  3F43               	moviw	[3]fsr1
 26340  1C3B  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26341  1C3C  0828               	movf	3+(??_timestampdiff+0)+0,w
 26342  1C3D  022C               	subwf	3+(??_timestampdiff+4)+0,w
 26343  1C3E  1D03               	skipz
 26344  1C3F  2C4A               	goto	u9525
 26345  1C40  0827               	movf	2+(??_timestampdiff+0)+0,w
 26346  1C41  022B               	subwf	2+(??_timestampdiff+4)+0,w
 26347  1C42  1D03               	skipz
 26348  1C43  2C4A               	goto	u9525
 26349  1C44  0826               	movf	1+(??_timestampdiff+0)+0,w
 26350  1C45  022A               	subwf	1+(??_timestampdiff+4)+0,w
 26351  1C46  1D03               	skipz
 26352  1C47  2C4A               	goto	u9525
 26353  1C48  0825               	movf	0+(??_timestampdiff+0)+0,w
 26354  1C49  0229               	subwf	0+(??_timestampdiff+4)+0,w
 26355  1C4A                     u9525:
 26356  1C4A  1803               	skipnc
 26357  1C4B  2C4D               	goto	u9521
 26358  1C4C  2C4E               	goto	u9520
 26359  1C4D                     u9521:
 26360  1C4D  2D24               	goto	l36897
 26361  1C4E                     u9520:
 26362                           	line	257
 26363                           	
 26364  1C4E                     l36883:	
 26365                           ;timer.c: 257: diff = early_longshort->ls_longTicks - late_longshort->ls_longTicks;
 26366  1C4E  0831               	movf	(timestampdiff@early_longshort),w
 26367  1C4F  0086               	movwf	fsr1l
 26368  1C50  0832               	movf	(timestampdiff@early_longshort+1),w
 26369  1C51  0087               	movwf	fsr1h
 26370                           
 26371  1C52  3F40               	moviw	[0]fsr1
 26372  1C53  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26373  1C54  3F41               	moviw	[1]fsr1
 26374  1C55  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26375  1C56  3F42               	moviw	[2]fsr1
 26376  1C57  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26377  1C58  3F43               	moviw	[3]fsr1
 26378  1C59  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26379  1C5A  0833               	movf	(timestampdiff@late_longshort),w
 26380  1C5B  0086               	movwf	fsr1l
 26381  1C5C  0187               	clrf fsr1h	
 26382                           	
 26383  1C5D  3F40               	moviw	[0]fsr1
 26384  1C5E  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26385  1C5F  3F41               	moviw	[1]fsr1
 26386  1C60  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26387  1C61  3F42               	moviw	[2]fsr1
 26388  1C62  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26389  1C63  3F43               	moviw	[3]fsr1
 26390  1C64  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26391  1C65  09A9               	comf	(??_timestampdiff+4)+0,f
 26392  1C66  09AA               	comf	(??_timestampdiff+4)+1,f
 26393  1C67  09AB               	comf	(??_timestampdiff+4)+2,f
 26394  1C68  09AC               	comf	(??_timestampdiff+4)+3,f
 26395  1C69  0AA9               	incf	(??_timestampdiff+4)+0,f
 26396  1C6A  1903               	skipnz
 26397  1C6B  0AAA               	incf	(??_timestampdiff+4)+1,f
 26398  1C6C  1903               	skipnz
 26399  1C6D  0AAB               	incf	(??_timestampdiff+4)+2,f
 26400  1C6E  1903               	skipnz
 26401  1C6F  0AAC               	incf	(??_timestampdiff+4)+3,f
 26402  1C70  0829               	movf	0+(??_timestampdiff+4)+0,w
 26403  1C71  07A5               	addwf	(??_timestampdiff+0)+0,f
 26404  1C72  082A               	movf	1+(??_timestampdiff+4)+0,w
 26405  1C73  3DA6               	addwfc	(??_timestampdiff+0)+1,f
 26406  1C74  082B               	movf	2+(??_timestampdiff+4)+0,w
 26407  1C75  3DA7               	addwfc	(??_timestampdiff+0)+2,f
 26408  1C76  082C               	movf	3+(??_timestampdiff+4)+0,w
 26409  1C77  3DA8               	addwfc	(??_timestampdiff+0)+3,f
 26410  1C78  0828               	movf	3+(??_timestampdiff+0)+0,w
 26411  1C79  00B0               	movwf	(timestampdiff@diff+3)
 26412  1C7A  0827               	movf	2+(??_timestampdiff+0)+0,w
 26413  1C7B  00AF               	movwf	(timestampdiff@diff+2)
 26414  1C7C  0826               	movf	1+(??_timestampdiff+0)+0,w
 26415  1C7D  00AE               	movwf	(timestampdiff@diff+1)
 26416  1C7E  0825               	movf	0+(??_timestampdiff+0)+0,w
 26417  1C7F  00AD               	movwf	(timestampdiff@diff)
 26418                           
 26419  1C80  2D24               	goto	l36897
 26420                           	line	258
 26421                           	
 26422  1C81                     l21394:	
 26423                           	line	259
 26424                           ;timer.c: 258: }
 26425                           ;timer.c: 259: break;
 26426  1C81  2D24               	goto	l36897
 26427                           	line	261
 26428                           ;timer.c: 261: case 1:
 26429                           	
 26430  1C82                     l21396:	
 26431                           	line	262
 26432                           	
 26433  1C82                     l36885:	
 26434                           ;timer.c: 262: if (early_longshort->ls_longTicks < late_longshort->ls_longTicks) {
 26435  1C82  0833               	movf	(timestampdiff@late_longshort),w
 26436  1C83  0086               	movwf	fsr1l
 26437  1C84  0187               	clrf fsr1h	
 26438                           	
 26439  1C85  3F40               	moviw	[0]fsr1
 26440  1C86  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26441  1C87  3F41               	moviw	[1]fsr1
 26442  1C88  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26443  1C89  3F42               	moviw	[2]fsr1
 26444  1C8A  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26445  1C8B  3F43               	moviw	[3]fsr1
 26446  1C8C  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26447  1C8D  0831               	movf	(timestampdiff@early_longshort),w
 26448  1C8E  0086               	movwf	fsr1l
 26449  1C8F  0832               	movf	(timestampdiff@early_longshort+1),w
 26450  1C90  0087               	movwf	fsr1h
 26451                           
 26452  1C91  3F40               	moviw	[0]fsr1
 26453  1C92  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26454  1C93  3F41               	moviw	[1]fsr1
 26455  1C94  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26456  1C95  3F42               	moviw	[2]fsr1
 26457  1C96  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26458  1C97  3F43               	moviw	[3]fsr1
 26459  1C98  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26460  1C99  0828               	movf	3+(??_timestampdiff+0)+0,w
 26461  1C9A  022C               	subwf	3+(??_timestampdiff+4)+0,w
 26462  1C9B  1D03               	skipz
 26463  1C9C  2CA7               	goto	u9535
 26464  1C9D  0827               	movf	2+(??_timestampdiff+0)+0,w
 26465  1C9E  022B               	subwf	2+(??_timestampdiff+4)+0,w
 26466  1C9F  1D03               	skipz
 26467  1CA0  2CA7               	goto	u9535
 26468  1CA1  0826               	movf	1+(??_timestampdiff+0)+0,w
 26469  1CA2  022A               	subwf	1+(??_timestampdiff+4)+0,w
 26470  1CA3  1D03               	skipz
 26471  1CA4  2CA7               	goto	u9535
 26472  1CA5  0825               	movf	0+(??_timestampdiff+0)+0,w
 26473  1CA6  0229               	subwf	0+(??_timestampdiff+4)+0,w
 26474  1CA7                     u9535:
 26475  1CA7  1803               	skipnc
 26476  1CA8  2CAA               	goto	u9531
 26477  1CA9  2CAB               	goto	u9530
 26478  1CAA                     u9531:
 26479  1CAA  2CE5               	goto	l36889
 26480  1CAB                     u9530:
 26481                           	line	264
 26482                           	
 26483  1CAB                     l36887:	
 26484                           ;timer.c: 264: diff = (0xFFFFFFFF - (late_longshort->ls_longTicks - early_longshort->ls_
                                 longTicks)) + 1;
 26485  1CAB  0833               	movf	(timestampdiff@late_longshort),w
 26486  1CAC  0086               	movwf	fsr1l
 26487  1CAD  0187               	clrf fsr1h	
 26488                           	
 26489  1CAE  3F40               	moviw	[0]fsr1
 26490  1CAF  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26491  1CB0  3F41               	moviw	[1]fsr1
 26492  1CB1  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26493  1CB2  3F42               	moviw	[2]fsr1
 26494  1CB3  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26495  1CB4  3F43               	moviw	[3]fsr1
 26496  1CB5  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26497  1CB6  0831               	movf	(timestampdiff@early_longshort),w
 26498  1CB7  0086               	movwf	fsr1l
 26499  1CB8  0832               	movf	(timestampdiff@early_longshort+1),w
 26500  1CB9  0087               	movwf	fsr1h
 26501                           
 26502  1CBA  3F40               	moviw	[0]fsr1
 26503  1CBB  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26504  1CBC  3F41               	moviw	[1]fsr1
 26505  1CBD  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26506  1CBE  3F42               	moviw	[2]fsr1
 26507  1CBF  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26508  1CC0  3F43               	moviw	[3]fsr1
 26509  1CC1  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26510  1CC2  09A9               	comf	(??_timestampdiff+4)+0,f
 26511  1CC3  09AA               	comf	(??_timestampdiff+4)+1,f
 26512  1CC4  09AB               	comf	(??_timestampdiff+4)+2,f
 26513  1CC5  09AC               	comf	(??_timestampdiff+4)+3,f
 26514  1CC6  0AA9               	incf	(??_timestampdiff+4)+0,f
 26515  1CC7  1903               	skipnz
 26516  1CC8  0AAA               	incf	(??_timestampdiff+4)+1,f
 26517  1CC9  1903               	skipnz
 26518  1CCA  0AAB               	incf	(??_timestampdiff+4)+2,f
 26519  1CCB  1903               	skipnz
 26520  1CCC  0AAC               	incf	(??_timestampdiff+4)+3,f
 26521  1CCD  0829               	movf	0+(??_timestampdiff+4)+0,w
 26522  1CCE  07A5               	addwf	(??_timestampdiff+0)+0,f
 26523  1CCF  082A               	movf	1+(??_timestampdiff+4)+0,w
 26524  1CD0  3DA6               	addwfc	(??_timestampdiff+0)+1,f
 26525  1CD1  082B               	movf	2+(??_timestampdiff+4)+0,w
 26526  1CD2  3DA7               	addwfc	(??_timestampdiff+0)+2,f
 26527  1CD3  082C               	movf	3+(??_timestampdiff+4)+0,w
 26528  1CD4  3DA8               	addwfc	(??_timestampdiff+0)+3,f
 26529  1CD5  0925               	comf	0+(??_timestampdiff+0)+0+0,w
 26530  1CD6  00AD               	movwf	(timestampdiff@diff)
 26531  1CD7  0926               	comf	0+(??_timestampdiff+0)+0+1,w
 26532  1CD8  00AE               	movwf	(timestampdiff@diff+1)
 26533  1CD9  0927               	comf	0+(??_timestampdiff+0)+0+2,w
 26534  1CDA  00AF               	movwf	(timestampdiff@diff+2)
 26535  1CDB  0928               	comf	0+(??_timestampdiff+0)+0+3,w
 26536  1CDC  00B0               	movwf	(timestampdiff@diff+3)
 26537  1CDD  0AAD               	incf	(timestampdiff@diff),f
 26538  1CDE  1903               	skipnz
 26539  1CDF  0AAE               	incf	(timestampdiff@diff+1),f
 26540  1CE0  1903               	skipnz
 26541  1CE1  0AAF               	incf	(timestampdiff@diff+2),f
 26542  1CE2  1903               	skipnz
 26543  1CE3  0AB0               	incf	(timestampdiff@diff+3),f
 26544                           	line	265
 26545                           ;timer.c: 265: } else {
 26546  1CE4  2D24               	goto	l36897
 26547                           	
 26548  1CE5                     l21397:	
 26549                           	line	267
 26550                           	
 26551  1CE5                     l36889:	
 26552                           ;timer.c: 267: diff = 0xFFFFFFFF;
 26553  1CE5  30FF               	movlw	0FFh
 26554  1CE6  00B0               	movwf	(timestampdiff@diff+3)
 26555  1CE7  30FF               	movlw	0FFh
 26556  1CE8  00AF               	movwf	(timestampdiff@diff+2)
 26557  1CE9  30FF               	movlw	0FFh
 26558  1CEA  00AE               	movwf	(timestampdiff@diff+1)
 26559  1CEB  30FF               	movlw	0FFh
 26560  1CEC  00AD               	movwf	(timestampdiff@diff)
 26561                           
 26562  1CED  2D24               	goto	l36897
 26563                           	line	268
 26564                           	
 26565  1CEE                     l21398:	
 26566                           	line	269
 26567                           ;timer.c: 268: }
 26568                           ;timer.c: 269: break;
 26569  1CEE  2D24               	goto	l36897
 26570                           	line	271
 26571                           ;timer.c: 271: default:
 26572                           	
 26573  1CEF                     l21399:	
 26574                           	line	273
 26575                           	
 26576  1CEF                     l36891:	
 26577                           ;timer.c: 273: diff = 0xFFFFFFFF;
 26578  1CEF  30FF               	movlw	0FFh
 26579  1CF0  00B0               	movwf	(timestampdiff@diff+3)
 26580  1CF1  30FF               	movlw	0FFh
 26581  1CF2  00AF               	movwf	(timestampdiff@diff+2)
 26582  1CF3  30FF               	movlw	0FFh
 26583  1CF4  00AE               	movwf	(timestampdiff@diff+1)
 26584  1CF5  30FF               	movlw	0FFh
 26585  1CF6  00AD               	movwf	(timestampdiff@diff)
 26586                           
 26587                           	line	274
 26588                           ;timer.c: 274: break;
 26589  1CF7  2D24               	goto	l36897
 26590                           	line	275
 26591                           	
 26592  1CF8                     l36893:	
 26593                           ;timer.c: 275: }
 26594  1CF8  2D24               	goto	l36897
 26595                           	line	253
 26596                           	
 26597  1CF9                     l21392:	
 26598                           	
 26599  1CF9                     l36895:	
 26600  1CF9  0831               	movf	(timestampdiff@early_longshort),w
 26601  1CFA  3E04               	addlw	low(04h)
 26602  1CFB  00A5               	movwf	(??_timestampdiff+0)+0
 26603  1CFC  3000               	movlw	high(04h)
 26604  1CFD  3D32               	addwfc	(timestampdiff@early_longshort+1),w
 26605  1CFE  00A6               	movwf	1+(??_timestampdiff+0)+0
 26606  1CFF  0825               	movf	0+(??_timestampdiff+0)+0,w
 26607  1D00  0086               	movwf	fsr1l
 26608  1D01  0826               	movf	1+(??_timestampdiff+0)+0,w
 26609  1D02  0087               	movwf	fsr1h
 26610                           
 26611  1D03  0833               	movf	(timestampdiff@late_longshort),w
 26612  1D04  3E04               	addlw	04h
 26613  1D05  0084               	movwf	fsr0l
 26614  1D06  0185               	clrf fsr0h	
 26615                           	
 26616  1D07  3F00               	moviw	[0]fsr0
 26617  1D08  00A7               	movwf	(??_timestampdiff+2)+0
 26618  1D09  3F01               	moviw	[1]fsr0
 26619  1D0A  00A8               	movwf	(??_timestampdiff+2)+0+1
 26620  1D0B  09A7               	comf	(??_timestampdiff+2)+0,f
 26621  1D0C  09A8               	comf	(??_timestampdiff+2)+1,f
 26622  1D0D  0AA7               	incf	(??_timestampdiff+2)+0,f
 26623  1D0E  1903               	skipnz
 26624  1D0F  0AA8               	incf	(??_timestampdiff+2)+1,f
 26625  1D10  3F40               	moviw	[0]fsr1
 26626  1D11  0727               	addwf	0+(??_timestampdiff+2)+0,w
 26627  1D12  00A9               	movwf	(??_timestampdiff+4)+0
 26628  1D13  3F41               	moviw	[1]fsr1
 26629  1D14  3D28               	addwfc	1+(??_timestampdiff+2)+0,w
 26630  1D15  00AA               	movwf	(??_timestampdiff+4)+0+1
 26631                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 26632                           ; Switch size 1, requested type "space"
 26633                           ; Number of cases is 1, Range of values is 0 to 0
 26634                           ; switch strategies available:
 26635                           ; Name         Instructions Cycles
 26636                           ; simple_byte            4     3 (average)
 26637                           ; direct_byte            8     6 (fixed)
 26638                           ; jumptable            260     6 (fixed)
 26639                           ; rangetable             5     4 (fixed)
 26640                           ; spacedrange            7     6 (fixed)
 26641                           ; locatedrange           1     3 (fixed)
 26642                           ;	Chosen strategy is simple_byte
 26643                           
 26644  1D16  082A               	movf 1+(??_timestampdiff+4)+0,w
 26645                           	opt asmopt_off
 26646  1D17  3A00               	xorlw	0^0	; case 0
 26647  1D18  1903               	skipnz
 26648  1D19  2D1B               	goto	l39187
 26649  1D1A  2CEF               	goto	l36891
 26650                           	opt asmopt_on
 26651                           	
 26652  1D1B                     l39187:	
 26653                           ; Switch size 1, requested type "space"
 26654                           ; Number of cases is 2, Range of values is 0 to 1
 26655                           ; switch strategies available:
 26656                           ; Name         Instructions Cycles
 26657                           ; simple_byte            7     4 (average)
 26658                           ; direct_byte           10     6 (fixed)
 26659                           ; jumptable            260     6 (fixed)
 26660                           ; rangetable             6     4 (fixed)
 26661                           ; spacedrange            9     6 (fixed)
 26662                           ; locatedrange           2     3 (fixed)
 26663                           ;	Chosen strategy is simple_byte
 26664                           
 26665  1D1B  0829               	movf 0+(??_timestampdiff+4)+0,w
 26666                           	opt asmopt_off
 26667  1D1C  3A00               	xorlw	0^0	; case 0
 26668  1D1D  1903               	skipnz
 26669  1D1E  2C25               	goto	l36881
 26670  1D1F  3A01               	xorlw	1^0	; case 1
 26671  1D20  1903               	skipnz
 26672  1D21  2C82               	goto	l36885
 26673  1D22  2CEF               	goto	l36891
 26674                           	opt asmopt_on
 26675                           
 26676                           	line	275
 26677                           	
 26678  1D23                     l21395:	
 26679  1D23  2D24               	goto	l36897
 26680                           	line	276
 26681                           	
 26682  1D24                     l21391:	
 26683                           	line	278
 26684                           	
 26685  1D24                     l36897:	
 26686                           ;timer.c: 276: }
 26687                           ;timer.c: 278: return (diff);
 26688  1D24  0830               	movf	(timestampdiff@diff+3),w
 26689  1D25  00A4               	movwf	(?_timestampdiff+3)
 26690  1D26  082F               	movf	(timestampdiff@diff+2),w
 26691  1D27  00A3               	movwf	(?_timestampdiff+2)
 26692  1D28  082E               	movf	(timestampdiff@diff+1),w
 26693  1D29  00A2               	movwf	(?_timestampdiff+1)
 26694  1D2A  082D               	movf	(timestampdiff@diff),w
 26695  1D2B  00A1               	movwf	(?_timestampdiff)
 26696                           
 26697  1D2C  2D2D               	goto	l21400
 26698                           	
 26699  1D2D                     l36899:	
 26700                           	line	279
 26701                           	
 26702  1D2D                     l21400:	
 26703  1D2D  0008               	return
 26704                           	opt stack 0
 26705                           GLOBAL	__end_of_timestampdiff
 26706  1D2E                     	__end_of_timestampdiff:
 26707 ;; =============== function _timestampdiff ends ============
 26708                           
 26709                           	signat	_timestampdiff,8316
 26710                           	global	_gettimestamp
 26711                           psect	text3318,local,class=CODE,delta=2
 26712                           global __ptext3318
 26713  2DAA                     __ptext3318:
 26714                           
 26715 ;; *************** function _gettimestamp *****************
 26716 ;; Defined at:
 26717 ;;		line 212 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26718 ;; Parameters:    Size  Location     Type
 26719 ;;  ticks           2    0[BANK0 ] const PTR struct timer
 26720 ;;		 -> sensortimer(6), timeoutexpired@currentTime(6), second(6), pingtime(6), 
 26721 ;;		 -> debouncer(6), pacers(55), debouncers(42), cattimer(6), 
 26722 ;;		 -> autotimer(6), holdtimeout(6), cartridgetimeout(6), litterlanguage_pause@timer_now(6), 
 26723 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26724 ;; Auto vars:     Size  Location     Type
 26725 ;;  bytes           2    5[BANK0 ] PTR unsigned char 
 26726 ;;		 -> sensortimer(6), timeoutexpired@currentTime(6), second(6), pingtime(6), 
 26727 ;;		 -> debouncer(6), pacers(55), debouncers(42), cattimer(6), 
 26728 ;;		 -> autotimer(6), holdtimeout(6), cartridgetimeout(6), litterlanguage_pause@timer_now(6), 
 26729 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26730 ;;  temp            1    7[BANK0 ] volatile unsigned char 
 26731 ;; Return value:  Size  Location     Type
 26732 ;;		None               void
 26733 ;; Registers used:
 26734 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26735 ;; Tracked objects:
 26736 ;;		On entry : 0/0
 26737 ;;		On exit  : 0/0
 26738 ;;		Unchanged: 0/0
 26739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26741 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26742 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 26744 ;;Total ram usage:        8 bytes
 26745 ;; Hardware stack levels used:    1
 26746 ;; Hardware stack levels required when called:    2
 26747 ;; This function calls:
 26748 ;;		Nothing
 26749 ;; This function is called by:
 26750 ;;		_litterlanguage_pause
 26751 ;;		_settimeout
 26752 ;;		_timeoutexpired
 26753 ;; This function uses a non-reentrant model
 26754 ;;
 26755                           psect	text3318
 26756                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26757                           	line	212
 26758                           	global	__size_of_gettimestamp
 26759  0048                     	__size_of_gettimestamp	equ	__end_of_gettimestamp-_gettimestamp
 26760                           	
 26761  2DAA                     _gettimestamp:	
 26762                           	opt	stack 10
 26763                           ; Regs used in _gettimestamp: [wreg+fsr1l-status,0]
 26764                           	line	214
 26765                           	
 26766  2DAA                     l36861:	
 26767                           ;timer.c: 213: volatile unsigned char temp;
 26768                           ;timer.c: 214: unsigned char *bytes = (unsigned char *)ticks;
 26769  2DAA  0020               	movlb 0	; select bank0
 26770  2DAB  0822               	movf	(gettimestamp@ticks+1),w
 26771  2DAC  01A7               	clrf	(gettimestamp@bytes+1)
 26772  2DAD  07A7               	addwf	(gettimestamp@bytes+1)
 26773  2DAE  0821               	movf	(gettimestamp@ticks),w
 26774  2DAF  01A6               	clrf	(gettimestamp@bytes)
 26775  2DB0  07A6               	addwf	(gettimestamp@bytes)
 26776                           
 26777  2DB1  2DB2               	goto	l36863
 26778                           	line	219
 26779                           ;timer.c: 219: do
 26780                           	
 26781  2DB2                     l21386:	
 26782                           	line	223
 26783                           	
 26784  2DB2                     l36863:	
 26785                           ;timer.c: 220: {
 26786                           ;timer.c: 223: temp = TMR1H;
 26787  2DB2  0817               	movf	(23),w	;volatile
 26788  2DB3  00A3               	movwf	(??_gettimestamp+0)+0
 26789  2DB4  0823               	movf	(??_gettimestamp+0)+0,w
 26790  2DB5  00A8               	movwf	(gettimestamp@temp)	;volatile
 26791                           	line	226
 26792                           	
 26793  2DB6                     l36865:	
 26794                           ;timer.c: 226: ticks->overflows = overflows;
 26795  2DB6  0821               	movf	(gettimestamp@ticks),w
 26796  2DB7  3E02               	addlw	low(02h)
 26797  2DB8  00A3               	movwf	(??_gettimestamp+0)+0
 26798  2DB9  3000               	movlw	high(02h)
 26799  2DBA  3D22               	addwfc	(gettimestamp@ticks+1),w
 26800  2DBB  00A4               	movwf	1+(??_gettimestamp+0)+0
 26801  2DBC  0823               	movf	0+(??_gettimestamp+0)+0,w
 26802  2DBD  0086               	movwf	fsr1l
 26803  2DBE  0824               	movf	1+(??_gettimestamp+0)+0,w
 26804  2DBF  0087               	movwf	fsr1h
 26805                           
 26806  2DC0  0021               	movlb 1	; select bank1
 26807  2DC1  084A               	movf	(_overflows)^080h,w	;volatile
 26808  2DC2  3FC0               	movwi	[0]fsr1
 26809  2DC3  084B               	movf	(_overflows+1)^080h,w	;volatile
 26810  2DC4  3FC1               	movwi	[1]fsr1
 26811  2DC5  084C               	movf	(_overflows+2)^080h,w	;volatile
 26812  2DC6  3FC2               	movwi	[2]fsr1
 26813  2DC7  084D               	movf	(_overflows+3)^080h,w	;volatile
 26814  2DC8  3FC3               	movwi	[3]fsr1
 26815                           	line	227
 26816                           ;timer.c: 227: bytes[0] = TMR1L;
 26817  2DC9  0020               	movlb 0	; select bank0
 26818  2DCA  0816               	movf	(22),w	;volatile
 26819  2DCB  00A3               	movwf	(??_gettimestamp+0)+0
 26820  2DCC  0826               	movf	(gettimestamp@bytes),w
 26821  2DCD  0086               	movwf	fsr1l
 26822  2DCE  0827               	movf	(gettimestamp@bytes+1),w
 26823  2DCF  0087               	movwf	fsr1h
 26824                           
 26825  2DD0  0823               	movf	(??_gettimestamp+0)+0,w
 26826  2DD1  0081               	movwf	indf1
 26827                           	line	228
 26828                           	
 26829  2DD2                     l36867:	
 26830                           ;timer.c: 228: bytes[1] = TMR1H;
 26831  2DD2  0817               	movf	(23),w	;volatile
 26832  2DD3  00A3               	movwf	(??_gettimestamp+0)+0
 26833  2DD4  0826               	movf	(gettimestamp@bytes),w
 26834  2DD5  3E01               	addlw	low(01h)
 26835  2DD6  00A4               	movwf	(??_gettimestamp+1)+0
 26836  2DD7  3000               	movlw	high(01h)
 26837  2DD8  3D27               	addwfc	(gettimestamp@bytes+1),w
 26838  2DD9  00A5               	movwf	1+(??_gettimestamp+1)+0
 26839  2DDA  0824               	movf	0+(??_gettimestamp+1)+0,w
 26840  2DDB  0086               	movwf	fsr1l
 26841  2DDC  0825               	movf	1+(??_gettimestamp+1)+0,w
 26842  2DDD  0087               	movwf	fsr1h
 26843                           
 26844  2DDE  0823               	movf	(??_gettimestamp+0)+0,w
 26845  2DDF  0081               	movwf	indf1
 26846                           	line	233
 26847                           	
 26848  2DE0                     l36869:	
 26849                           ;timer.c: 233: } while (bytes[1] != temp);
 26850  2DE0  0826               	movf	(gettimestamp@bytes),w
 26851  2DE1  3E01               	addlw	low(01h)
 26852  2DE2  00A3               	movwf	(??_gettimestamp+0)+0
 26853  2DE3  3000               	movlw	high(01h)
 26854  2DE4  3D27               	addwfc	(gettimestamp@bytes+1),w
 26855  2DE5  00A4               	movwf	1+(??_gettimestamp+0)+0
 26856  2DE6  0823               	movf	0+(??_gettimestamp+0)+0,w
 26857  2DE7  0086               	movwf	fsr1l
 26858  2DE8  0824               	movf	1+(??_gettimestamp+0)+0,w
 26859  2DE9  0087               	movwf	fsr1h
 26860                           
 26861  2DEA  0801               	movf	indf1,w
 26862  2DEB  0628               	xorwf	(gettimestamp@temp),w	;volatile
 26863  2DEC  1D03               	skipz
 26864  2DED  2DEF               	goto	u9501
 26865  2DEE  2DF0               	goto	u9500
 26866  2DEF                     u9501:
 26867  2DEF  2DB2               	goto	l36863
 26868  2DF0                     u9500:
 26869  2DF0  2DF1               	goto	l21388
 26870                           	
 26871  2DF1                     l21387:	
 26872                           	line	234
 26873                           	
 26874  2DF1                     l21388:	
 26875  2DF1  0008               	return
 26876                           	opt stack 0
 26877                           GLOBAL	__end_of_gettimestamp
 26878  2DF2                     	__end_of_gettimestamp:
 26879 ;; =============== function _gettimestamp ends ============
 26880                           
 26881                           	signat	_gettimestamp,4216
 26882                           	global	_set_Dryer
 26883                           psect	text3319,local,class=CODE,delta=2
 26884                           global __ptext3319
 26885  28AC                     __ptext3319:
 26886                           
 26887 ;; *************** function _set_Dryer *****************
 26888 ;; Defined at:
 26889 ;;		line 441 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26890 ;; Parameters:    Size  Location     Type
 26891 ;;  on              1    wreg     unsigned char 
 26892 ;; Auto vars:     Size  Location     Type
 26893 ;;  on              1    1[BANK0 ] unsigned char 
 26894 ;; Return value:  Size  Location     Type
 26895 ;;		None               void
 26896 ;; Registers used:
 26897 ;;		wreg, status,2, status,0
 26898 ;; Tracked objects:
 26899 ;;		On entry : 0/0
 26900 ;;		On exit  : 0/0
 26901 ;;		Unchanged: 0/0
 26902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26906 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26907 ;;Total ram usage:        2 bytes
 26908 ;; Hardware stack levels used:    1
 26909 ;; Hardware stack levels required when called:    2
 26910 ;; This function calls:
 26911 ;;		Nothing
 26912 ;; This function is called by:
 26913 ;;		_litterlanguage_pause
 26914 ;;		_litterlanguage_stop
 26915 ;;		_exe_instruction
 26916 ;; This function uses a non-reentrant model
 26917 ;;
 26918                           psect	text3319
 26919                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26920                           	line	441
 26921                           	global	__size_of_set_Dryer
 26922  0011                     	__size_of_set_Dryer	equ	__end_of_set_Dryer-_set_Dryer
 26923                           	
 26924  28AC                     _set_Dryer:	
 26925                           	opt	stack 9
 26926                           ; Regs used in _set_Dryer: [wreg+status,2+status,0]
 26927                           ;set_Dryer@on stored from wreg
 26928  28AC  0020               	movlb 0	; select bank0
 26929  28AD  00A2               	movwf	(set_Dryer@on)
 26930                           	line	442
 26931                           	
 26932  28AE                     l36855:	
 26933                           ;catgenie120.c: 442: if (on)
 26934  28AE  0822               	movf	(set_Dryer@on),w
 26935  28AF  1D03               	skipz
 26936  28B0  28B2               	goto	u9490
 26937  28B1  28B5               	goto	l36859
 26938  28B2                     u9490:
 26939                           	line	443
 26940                           	
 26941  28B2                     l36857:	
 26942                           ;catgenie120.c: 443: LATD |= (1U << (2));
 26943  28B2  0022               	movlb 2	; select bank2
 26944  28B3  150F               	bsf	(271)^0100h+(2/8),(2)&7	;volatile
 26945  28B4  28BC               	goto	l10975
 26946                           	line	444
 26947                           	
 26948  28B5                     l10973:	
 26949                           	line	445
 26950                           	
 26951  28B5                     l36859:	
 26952                           ;catgenie120.c: 444: else
 26953                           ;catgenie120.c: 445: LATD &= ~(1U << (2));
 26954  28B5  30FB               	movlw	(0FBh)
 26955  28B6  0020               	movlb 0	; select bank0
 26956  28B7  00A1               	movwf	(??_set_Dryer+0)+0
 26957  28B8  0821               	movf	(??_set_Dryer+0)+0,w
 26958  28B9  0022               	movlb 2	; select bank2
 26959  28BA  058F               	andwf	(271)^0100h,f	;volatile
 26960  28BB  28BC               	goto	l10975
 26961                           	
 26962  28BC                     l10974:	
 26963                           	line	446
 26964                           	
 26965  28BC                     l10975:	
 26966  28BC  0008               	return
 26967                           	opt stack 0
 26968                           GLOBAL	__end_of_set_Dryer
 26969  28BD                     	__end_of_set_Dryer:
 26970 ;; =============== function _set_Dryer ends ============
 26971                           
 26972                           	signat	_set_Dryer,4216
 26973                           	global	_get_Dryer
 26974                           psect	text3320,local,class=CODE,delta=2
 26975                           global __ptext3320
 26976  3770                     __ptext3320:
 26977                           
 26978 ;; *************** function _get_Dryer *****************
 26979 ;; Defined at:
 26980 ;;		line 450 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26981 ;; Parameters:    Size  Location     Type
 26982 ;;		None
 26983 ;; Auto vars:     Size  Location     Type
 26984 ;;		None
 26985 ;; Return value:  Size  Location     Type
 26986 ;;                  1    wreg      unsigned char 
 26987 ;; Registers used:
 26988 ;;		wreg, status,2
 26989 ;; Tracked objects:
 26990 ;;		On entry : 0/0
 26991 ;;		On exit  : 0/0
 26992 ;;		Unchanged: 0/0
 26993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26998 ;;Total ram usage:        0 bytes
 26999 ;; Hardware stack levels used:    1
 27000 ;; Hardware stack levels required when called:    2
 27001 ;; This function calls:
 27002 ;;		Nothing
 27003 ;; This function is called by:
 27004 ;;		_litterlanguage_pause
 27005 ;; This function uses a non-reentrant model
 27006 ;;
 27007                           psect	text3320
 27008                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27009                           	line	450
 27010                           	global	__size_of_get_Dryer
 27011  0005                     	__size_of_get_Dryer	equ	__end_of_get_Dryer-_get_Dryer
 27012                           	
 27013  3770                     _get_Dryer:	
 27014                           	opt	stack 9
 27015                           ; Regs used in _get_Dryer: [wreg+status,2]
 27016                           	line	451
 27017                           	
 27018  3770                     l36851:	
 27019                           ;catgenie120.c: 451: return (LATD & (1U << (2)));
 27020  3770  0022               	movlb 2	; select bank2
 27021  3771  080F               	movf	(271)^0100h,w	;volatile
 27022  3772  3904               	andlw	04h
 27023  3773  2F74               	goto	l10978
 27024                           	
 27025  3774                     l36853:	
 27026                           	line	452
 27027                           	
 27028  3774                     l10978:	
 27029  3774  0008               	return
 27030                           	opt stack 0
 27031                           GLOBAL	__end_of_get_Dryer
 27032  3775                     	__end_of_get_Dryer:
 27033 ;; =============== function _get_Dryer ends ============
 27034                           
 27035                           	signat	_get_Dryer,89
 27036                           	global	_set_Pump
 27037                           psect	text3321,local,class=CODE,delta=2
 27038                           global __ptext3321
 27039  289B                     __ptext3321:
 27040                           
 27041 ;; *************** function _set_Pump *****************
 27042 ;; Defined at:
 27043 ;;		line 426 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27044 ;; Parameters:    Size  Location     Type
 27045 ;;  on              1    wreg     unsigned char 
 27046 ;; Auto vars:     Size  Location     Type
 27047 ;;  on              1    1[BANK0 ] unsigned char 
 27048 ;; Return value:  Size  Location     Type
 27049 ;;		None               void
 27050 ;; Registers used:
 27051 ;;		wreg, status,2, status,0
 27052 ;; Tracked objects:
 27053 ;;		On entry : 0/0
 27054 ;;		On exit  : 0/0
 27055 ;;		Unchanged: 0/0
 27056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27059 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27061 ;;Total ram usage:        2 bytes
 27062 ;; Hardware stack levels used:    1
 27063 ;; Hardware stack levels required when called:    2
 27064 ;; This function calls:
 27065 ;;		Nothing
 27066 ;; This function is called by:
 27067 ;;		_litterlanguage_pause
 27068 ;;		_litterlanguage_stop
 27069 ;;		_exe_instruction
 27070 ;; This function uses a non-reentrant model
 27071 ;;
 27072                           psect	text3321
 27073                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27074                           	line	426
 27075                           	global	__size_of_set_Pump
 27076  0011                     	__size_of_set_Pump	equ	__end_of_set_Pump-_set_Pump
 27077                           	
 27078  289B                     _set_Pump:	
 27079                           	opt	stack 9
 27080                           ; Regs used in _set_Pump: [wreg+status,2+status,0]
 27081                           ;set_Pump@on stored from wreg
 27082  289B  0020               	movlb 0	; select bank0
 27083  289C  00A2               	movwf	(set_Pump@on)
 27084                           	line	427
 27085                           	
 27086  289D                     l36845:	
 27087                           ;catgenie120.c: 427: if (on)
 27088  289D  0822               	movf	(set_Pump@on),w
 27089  289E  1D03               	skipz
 27090  289F  28A1               	goto	u9480
 27091  28A0  28A4               	goto	l36849
 27092  28A1                     u9480:
 27093                           	line	428
 27094                           	
 27095  28A1                     l36847:	
 27096                           ;catgenie120.c: 428: LATD |= (1U << (1));
 27097  28A1  0022               	movlb 2	; select bank2
 27098  28A2  148F               	bsf	(271)^0100h+(1/8),(1)&7	;volatile
 27099  28A3  28AB               	goto	l10967
 27100                           	line	429
 27101                           	
 27102  28A4                     l10965:	
 27103                           	line	430
 27104                           	
 27105  28A4                     l36849:	
 27106                           ;catgenie120.c: 429: else
 27107                           ;catgenie120.c: 430: LATD &= ~(1U << (1));
 27108  28A4  30FD               	movlw	(0FDh)
 27109  28A5  0020               	movlb 0	; select bank0
 27110  28A6  00A1               	movwf	(??_set_Pump+0)+0
 27111  28A7  0821               	movf	(??_set_Pump+0)+0,w
 27112  28A8  0022               	movlb 2	; select bank2
 27113  28A9  058F               	andwf	(271)^0100h,f	;volatile
 27114  28AA  28AB               	goto	l10967
 27115                           	
 27116  28AB                     l10966:	
 27117                           	line	431
 27118                           	
 27119  28AB                     l10967:	
 27120  28AB  0008               	return
 27121                           	opt stack 0
 27122                           GLOBAL	__end_of_set_Pump
 27123  28AC                     	__end_of_set_Pump:
 27124 ;; =============== function _set_Pump ends ============
 27125                           
 27126                           	signat	_set_Pump,4216
 27127                           	global	_get_Dosage
 27128                           psect	text3322,local,class=CODE,delta=2
 27129                           global __ptext3322
 27130  376B                     __ptext3322:
 27131                           
 27132 ;; *************** function _get_Dosage *****************
 27133 ;; Defined at:
 27134 ;;		line 420 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27135 ;; Parameters:    Size  Location     Type
 27136 ;;		None
 27137 ;; Auto vars:     Size  Location     Type
 27138 ;;		None
 27139 ;; Return value:  Size  Location     Type
 27140 ;;                  1    wreg      unsigned char 
 27141 ;; Registers used:
 27142 ;;		wreg, status,2
 27143 ;; Tracked objects:
 27144 ;;		On entry : 0/0
 27145 ;;		On exit  : 0/0
 27146 ;;		Unchanged: 0/0
 27147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27152 ;;Total ram usage:        0 bytes
 27153 ;; Hardware stack levels used:    1
 27154 ;; Hardware stack levels required when called:    2
 27155 ;; This function calls:
 27156 ;;		Nothing
 27157 ;; This function is called by:
 27158 ;;		_litterlanguage_pause
 27159 ;;		_wait_instruction
 27160 ;; This function uses a non-reentrant model
 27161 ;;
 27162                           psect	text3322
 27163                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27164                           	line	420
 27165                           	global	__size_of_get_Dosage
 27166  0005                     	__size_of_get_Dosage	equ	__end_of_get_Dosage-_get_Dosage
 27167                           	
 27168  376B                     _get_Dosage:	
 27169                           	opt	stack 11
 27170                           ; Regs used in _get_Dosage: [wreg+status,2]
 27171                           	line	421
 27172                           	
 27173  376B                     l36841:	
 27174                           ;catgenie120.c: 421: return (LATD & (1U << (3)));
 27175  376B  0022               	movlb 2	; select bank2
 27176  376C  080F               	movf	(271)^0100h,w	;volatile
 27177  376D  3908               	andlw	08h
 27178  376E  2F6F               	goto	l10962
 27179                           	
 27180  376F                     l36843:	
 27181                           	line	422
 27182                           	
 27183  376F                     l10962:	
 27184  376F  0008               	return
 27185                           	opt stack 0
 27186                           GLOBAL	__end_of_get_Dosage
 27187  3770                     	__end_of_get_Dosage:
 27188 ;; =============== function _get_Dosage ends ============
 27189                           
 27190                           	signat	_get_Dosage,89
 27191                           	global	_water_fill
 27192                           psect	text3323,local,class=CODE,delta=2
 27193                           global __ptext3323
 27194  291B                     __ptext3323:
 27195                           
 27196 ;; *************** function _water_fill *****************
 27197 ;; Defined at:
 27198 ;;		line 238 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27199 ;; Parameters:    Size  Location     Type
 27200 ;;  fill            1    wreg     unsigned char 
 27201 ;; Auto vars:     Size  Location     Type
 27202 ;;  fill            1    1[BANK0 ] unsigned char 
 27203 ;; Return value:  Size  Location     Type
 27204 ;;		None               void
 27205 ;; Registers used:
 27206 ;;		wreg, status,2, status,0
 27207 ;; Tracked objects:
 27208 ;;		On entry : 0/0
 27209 ;;		On exit  : 0/0
 27210 ;;		Unchanged: 0/0
 27211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27216 ;;Total ram usage:        2 bytes
 27217 ;; Hardware stack levels used:    1
 27218 ;; Hardware stack levels required when called:    2
 27219 ;; This function calls:
 27220 ;;		Nothing
 27221 ;; This function is called by:
 27222 ;;		_litterlanguage_pause
 27223 ;;		_litterlanguage_stop
 27224 ;;		_watersensor_event
 27225 ;;		_exe_instruction
 27226 ;; This function uses a non-reentrant model
 27227 ;;
 27228                           psect	text3323
 27229                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27230                           	line	238
 27231                           	global	__size_of_water_fill
 27232  0016                     	__size_of_water_fill	equ	__end_of_water_fill-_water_fill
 27233                           	
 27234  291B                     _water_fill:	
 27235                           	opt	stack 9
 27236                           ; Regs used in _water_fill: [wreg+status,2+status,0]
 27237                           ;water_fill@fill stored from wreg
 27238  291B  0020               	movlb 0	; select bank0
 27239  291C  00A2               	movwf	(water_fill@fill)
 27240                           	line	239
 27241                           	
 27242  291D                     l36833:	
 27243                           ;water.c: 239: filling = fill;
 27244  291D  116D               	bcf	(_filling/8),(_filling)&7
 27245  291E  1C22               	btfss	(water_fill@fill),0
 27246  291F  2921               	goto	u9465
 27247  2920  156D               	bsf	(_filling/8),(_filling)&7
 27248  2921                     u9465:
 27249                           
 27250                           	line	241
 27251                           	
 27252  2921                     l36835:	
 27253                           ;water.c: 241: if (filling) {
 27254  2921  0020               	movlb 0	; select bank0
 27255  2922  1D6D               	btfss	(_filling/8),(_filling)&7
 27256  2923  2925               	goto	u9471
 27257  2924  2926               	goto	u9470
 27258  2925                     u9471:
 27259  2925  2929               	goto	l36839
 27260  2926                     u9470:
 27261                           	line	243
 27262                           	
 27263  2926                     l36837:	
 27264                           ;water.c: 243: LATD |= (1U << (0));
 27265  2926  0022               	movlb 2	; select bank2
 27266  2927  140F               	bsf	(271)^0100h+(0/8),(0)&7	;volatile
 27267                           	line	244
 27268                           ;water.c: 244: } else {
 27269  2928  2930               	goto	l23494
 27270                           	
 27271  2929                     l23492:	
 27272                           	line	246
 27273                           	
 27274  2929                     l36839:	
 27275                           ;water.c: 246: LATD &= ~(1U << (0));
 27276  2929  30FE               	movlw	(0FEh)
 27277  292A  0020               	movlb 0	; select bank0
 27278  292B  00A1               	movwf	(??_water_fill+0)+0
 27279  292C  0821               	movf	(??_water_fill+0)+0,w
 27280  292D  0022               	movlb 2	; select bank2
 27281  292E  058F               	andwf	(271)^0100h,f	;volatile
 27282  292F  2930               	goto	l23494
 27283                           	line	247
 27284                           	
 27285  2930                     l23493:	
 27286                           	line	248
 27287                           	
 27288  2930                     l23494:	
 27289  2930  0008               	return
 27290                           	opt stack 0
 27291                           GLOBAL	__end_of_water_fill
 27292  2931                     	__end_of_water_fill:
 27293 ;; =============== function _water_fill ends ============
 27294                           
 27295                           	signat	_water_fill,4216
 27296                           	global	_set_Arm
 27297                           psect	text3324,local,class=CODE,delta=2
 27298                           global __ptext3324
 27299  2AA6                     __ptext3324:
 27300                           
 27301 ;; *************** function _set_Arm *****************
 27302 ;; Defined at:
 27303 ;;		line 380 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27304 ;; Parameters:    Size  Location     Type
 27305 ;;  mode            1    wreg     unsigned char 
 27306 ;; Auto vars:     Size  Location     Type
 27307 ;;  mode            1    1[BANK0 ] unsigned char 
 27308 ;; Return value:  Size  Location     Type
 27309 ;;		None               void
 27310 ;; Registers used:
 27311 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27312 ;; Tracked objects:
 27313 ;;		On entry : 0/0
 27314 ;;		On exit  : 0/0
 27315 ;;		Unchanged: 0/0
 27316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27320 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27321 ;;Total ram usage:        2 bytes
 27322 ;; Hardware stack levels used:    1
 27323 ;; Hardware stack levels required when called:    2
 27324 ;; This function calls:
 27325 ;;		Nothing
 27326 ;; This function is called by:
 27327 ;;		_litterlanguage_pause
 27328 ;;		_litterlanguage_stop
 27329 ;;		_exe_instruction
 27330 ;; This function uses a non-reentrant model
 27331 ;;
 27332                           psect	text3324
 27333                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27334                           	line	380
 27335                           	global	__size_of_set_Arm
 27336  0024                     	__size_of_set_Arm	equ	__end_of_set_Arm-_set_Arm
 27337                           	
 27338  2AA6                     _set_Arm:	
 27339                           	opt	stack 9
 27340                           ; Regs used in _set_Arm: [wreg-fsr0h+status,2+status,0]
 27341                           ;set_Arm@mode stored from wreg
 27342  2AA6  0020               	movlb 0	; select bank0
 27343  2AA7  00A2               	movwf	(set_Arm@mode)
 27344                           	line	381
 27345                           	
 27346  2AA8                     l36821:	
 27347                           ;catgenie120.c: 381: switch (mode) {
 27348  2AA8  2ABD               	goto	l36831
 27349                           	line	382
 27350                           ;catgenie120.c: 382: default:
 27351                           	
 27352  2AA9                     l10942:	
 27353  2AA9  2AAA               	goto	l36823
 27354                           	line	383
 27355                           ;catgenie120.c: 383: case 0:
 27356                           	
 27357  2AAA                     l10943:	
 27358                           	line	384
 27359                           	
 27360  2AAA                     l36823:	
 27361                           ;catgenie120.c: 384: LATD &= ~((1U << (6)) | (1U << (7)));
 27362  2AAA  303F               	movlw	(03Fh)
 27363  2AAB  00A1               	movwf	(??_set_Arm+0)+0
 27364  2AAC  0821               	movf	(??_set_Arm+0)+0,w
 27365  2AAD  0022               	movlb 2	; select bank2
 27366  2AAE  058F               	andwf	(271)^0100h,f	;volatile
 27367                           	line	385
 27368                           ;catgenie120.c: 385: break;
 27369  2AAF  2AC9               	goto	l10947
 27370                           	line	386
 27371                           ;catgenie120.c: 386: case 2:
 27372                           	
 27373  2AB0                     l10945:	
 27374                           	line	387
 27375                           	
 27376  2AB0                     l36825:	
 27377                           ;catgenie120.c: 387: LATD &= ~(1U << (6));
 27378  2AB0  30BF               	movlw	(0BFh)
 27379  2AB1  0020               	movlb 0	; select bank0
 27380  2AB2  00A1               	movwf	(??_set_Arm+0)+0
 27381  2AB3  0821               	movf	(??_set_Arm+0)+0,w
 27382  2AB4  0022               	movlb 2	; select bank2
 27383  2AB5  058F               	andwf	(271)^0100h,f	;volatile
 27384                           	line	388
 27385                           	
 27386  2AB6                     l36827:	
 27387                           ;catgenie120.c: 388: LATD |= (1U << (7));
 27388  2AB6  178F               	bsf	(271)^0100h+(7/8),(7)&7	;volatile
 27389                           	line	389
 27390                           ;catgenie120.c: 389: break;
 27391  2AB7  2AC9               	goto	l10947
 27392                           	line	390
 27393                           ;catgenie120.c: 390: case 1:
 27394                           	
 27395  2AB8                     l10946:	
 27396                           	line	391
 27397                           ;catgenie120.c: 391: LATD |= (1U << (6));
 27398  2AB8  0022               	movlb 2	; select bank2
 27399  2AB9  170F               	bsf	(271)^0100h+(6/8),(6)&7	;volatile
 27400                           	line	392
 27401                           ;catgenie120.c: 392: LATD |= (1U << (7));
 27402  2ABA  178F               	bsf	(271)^0100h+(7/8),(7)&7	;volatile
 27403                           	line	393
 27404                           ;catgenie120.c: 393: break;
 27405  2ABB  2AC9               	goto	l10947
 27406                           	line	394
 27407                           	
 27408  2ABC                     l36829:	
 27409                           ;catgenie120.c: 394: }
 27410  2ABC  2AC9               	goto	l10947
 27411                           	line	381
 27412                           	
 27413  2ABD                     l10941:	
 27414                           	
 27415  2ABD                     l36831:	
 27416  2ABD  0020               	movlb 0	; select bank0
 27417  2ABE  0822               	movf	(set_Arm@mode),w
 27418                           	; Switch size 1, requested type "space"
 27419                           ; Number of cases is 3, Range of values is 0 to 2
 27420                           ; switch strategies available:
 27421                           ; Name         Instructions Cycles
 27422                           ; simple_byte           10     6 (average)
 27423                           ; direct_byte           12     6 (fixed)
 27424                           ; jumptable            260     6 (fixed)
 27425                           ; rangetable             7     4 (fixed)
 27426                           ; spacedrange           11     6 (fixed)
 27427                           ; locatedrange           3     3 (fixed)
 27428                           ;	Chosen strategy is simple_byte
 27429                           
 27430                           	opt asmopt_off
 27431  2ABF  3A00               	xorlw	0^0	; case 0
 27432  2AC0  1903               	skipnz
 27433  2AC1  2AAA               	goto	l36823
 27434  2AC2  3A01               	xorlw	1^0	; case 1
 27435  2AC3  1903               	skipnz
 27436  2AC4  2AB8               	goto	l10946
 27437  2AC5  3A03               	xorlw	2^1	; case 2
 27438  2AC6  1903               	skipnz
 27439  2AC7  2AB0               	goto	l36825
 27440  2AC8  2AAA               	goto	l36823
 27441                           	opt asmopt_on
 27442                           
 27443                           	line	394
 27444                           	
 27445  2AC9                     l10944:	
 27446                           	line	395
 27447                           	
 27448  2AC9                     l10947:	
 27449  2AC9  0008               	return
 27450                           	opt stack 0
 27451                           GLOBAL	__end_of_set_Arm
 27452  2ACA                     	__end_of_set_Arm:
 27453 ;; =============== function _set_Arm ends ============
 27454                           
 27455                           	signat	_set_Arm,4216
 27456                           	global	_get_Arm
 27457                           psect	text3325,local,class=CODE,delta=2
 27458                           global __ptext3325
 27459  2A22                     __ptext3325:
 27460                           
 27461 ;; *************** function _get_Arm *****************
 27462 ;; Defined at:
 27463 ;;		line 399 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27464 ;; Parameters:    Size  Location     Type
 27465 ;;		None
 27466 ;; Auto vars:     Size  Location     Type
 27467 ;;		None
 27468 ;; Return value:  Size  Location     Type
 27469 ;;                  1    wreg      unsigned char 
 27470 ;; Registers used:
 27471 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27472 ;; Tracked objects:
 27473 ;;		On entry : 0/0
 27474 ;;		On exit  : 0/0
 27475 ;;		Unchanged: 0/0
 27476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27481 ;;Total ram usage:        2 bytes
 27482 ;; Hardware stack levels used:    1
 27483 ;; Hardware stack levels required when called:    2
 27484 ;; This function calls:
 27485 ;;		Nothing
 27486 ;; This function is called by:
 27487 ;;		_litterlanguage_pause
 27488 ;; This function uses a non-reentrant model
 27489 ;;
 27490                           psect	text3325
 27491                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27492                           	line	399
 27493                           	global	__size_of_get_Arm
 27494  001E                     	__size_of_get_Arm	equ	__end_of_get_Arm-_get_Arm
 27495                           	
 27496  2A22                     _get_Arm:	
 27497                           	opt	stack 9
 27498                           ; Regs used in _get_Arm: [wreg-fsr0h+status,2+status,0]
 27499                           	line	400
 27500                           	
 27501  2A22                     l36799:	
 27502                           ;catgenie120.c: 400: switch (LATD & ((1U << (6)) | (1U << (7)))) {
 27503  2A22  2A2A               	goto	l36811
 27504                           	line	401
 27505                           ;catgenie120.c: 401: case (1U << (7)):
 27506                           	
 27507  2A23                     l10951:	
 27508                           	line	402
 27509                           	
 27510  2A23                     l36801:	
 27511                           ;catgenie120.c: 402: return (2);
 27512  2A23  3002               	movlw	(02h)
 27513  2A24  2A3F               	goto	l10952
 27514                           	
 27515  2A25                     l36803:	
 27516  2A25  2A3F               	goto	l10952
 27517                           	line	403
 27518                           ;catgenie120.c: 403: case (1U << (7)) | (1U << (6)):
 27519                           	
 27520  2A26                     l10953:	
 27521                           	line	404
 27522                           	
 27523  2A26                     l36805:	
 27524                           ;catgenie120.c: 404: return (1);
 27525  2A26  3001               	movlw	(01h)
 27526  2A27  2A3F               	goto	l10952
 27527                           	
 27528  2A28                     l36807:	
 27529  2A28  2A3F               	goto	l10952
 27530                           	line	405
 27531                           	
 27532  2A29                     l36809:	
 27533                           ;catgenie120.c: 405: }
 27534  2A29  2A3D               	goto	l36813
 27535                           	line	400
 27536                           	
 27537  2A2A                     l10950:	
 27538                           	
 27539  2A2A                     l36811:	
 27540  2A2A  0022               	movlb 2	; select bank2
 27541  2A2B  080F               	movf	(271)^0100h,w	;volatile
 27542  2A2C  39C0               	andlw	0C0h
 27543  2A2D  0020               	movlb 0	; select bank0
 27544  2A2E  00A1               	movwf	(??_get_Arm+0)+0
 27545  2A2F  01A2               	clrf	(??_get_Arm+0)+0+1
 27546                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 27547                           ; Switch size 1, requested type "space"
 27548                           ; Number of cases is 1, Range of values is 0 to 0
 27549                           ; switch strategies available:
 27550                           ; Name         Instructions Cycles
 27551                           ; simple_byte            4     3 (average)
 27552                           ; direct_byte            8     6 (fixed)
 27553                           ; jumptable            260     6 (fixed)
 27554                           ; rangetable             5     4 (fixed)
 27555                           ; spacedrange            7     6 (fixed)
 27556                           ; locatedrange           1     3 (fixed)
 27557                           ;	Chosen strategy is simple_byte
 27558                           
 27559  2A30  0822               	movf 1+(??_get_Arm+0)+0,w
 27560                           	opt asmopt_off
 27561  2A31  3A00               	xorlw	0^0	; case 0
 27562  2A32  1903               	skipnz
 27563  2A33  2A35               	goto	l39189
 27564  2A34  2A3D               	goto	l36813
 27565                           	opt asmopt_on
 27566                           	
 27567  2A35                     l39189:	
 27568                           ; Switch size 1, requested type "space"
 27569                           ; Number of cases is 2, Range of values is 128 to 192
 27570                           ; switch strategies available:
 27571                           ; Name         Instructions Cycles
 27572                           ; simple_byte            7     4 (average)
 27573                           ; direct_byte          139     9 (fixed)
 27574                           ; jumptable            263     9 (fixed)
 27575                           ;	Chosen strategy is simple_byte
 27576                           
 27577  2A35  0821               	movf 0+(??_get_Arm+0)+0,w
 27578                           	opt asmopt_off
 27579  2A36  3A80               	xorlw	128^0	; case 128
 27580  2A37  1903               	skipnz
 27581  2A38  2A23               	goto	l36801
 27582  2A39  3A40               	xorlw	192^128	; case 192
 27583  2A3A  1903               	skipnz
 27584  2A3B  2A26               	goto	l36805
 27585  2A3C  2A3D               	goto	l36813
 27586                           	opt asmopt_on
 27587                           
 27588                           	line	405
 27589                           	
 27590  2A3D                     l10954:	
 27591                           	line	406
 27592                           	
 27593  2A3D                     l36813:	
 27594                           ;catgenie120.c: 406: return (0);
 27595  2A3D  3000               	movlw	(0)
 27596  2A3E  2A3F               	goto	l10952
 27597                           	
 27598  2A3F                     l36815:	
 27599                           	line	407
 27600                           	
 27601  2A3F                     l10952:	
 27602  2A3F  0008               	return
 27603                           	opt stack 0
 27604                           GLOBAL	__end_of_get_Arm
 27605  2A40                     	__end_of_get_Arm:
 27606 ;; =============== function _get_Arm ends ============
 27607                           
 27608                           	signat	_get_Arm,89
 27609                           	global	_set_Bowl
 27610                           psect	text3326,local,class=CODE,delta=2
 27611                           global __ptext3326
 27612  2A82                     __ptext3326:
 27613                           
 27614 ;; *************** function _set_Bowl *****************
 27615 ;; Defined at:
 27616 ;;		line 349 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27617 ;; Parameters:    Size  Location     Type
 27618 ;;  mode            1    wreg     unsigned char 
 27619 ;; Auto vars:     Size  Location     Type
 27620 ;;  mode            1    1[BANK0 ] unsigned char 
 27621 ;; Return value:  Size  Location     Type
 27622 ;;		None               void
 27623 ;; Registers used:
 27624 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27625 ;; Tracked objects:
 27626 ;;		On entry : 0/0
 27627 ;;		On exit  : 0/0
 27628 ;;		Unchanged: 0/0
 27629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27632 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27633 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27634 ;;Total ram usage:        2 bytes
 27635 ;; Hardware stack levels used:    1
 27636 ;; Hardware stack levels required when called:    2
 27637 ;; This function calls:
 27638 ;;		Nothing
 27639 ;; This function is called by:
 27640 ;;		_litterlanguage_pause
 27641 ;;		_litterlanguage_stop
 27642 ;;		_exe_instruction
 27643 ;; This function uses a non-reentrant model
 27644 ;;
 27645                           psect	text3326
 27646                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27647                           	line	349
 27648                           	global	__size_of_set_Bowl
 27649  0024                     	__size_of_set_Bowl	equ	__end_of_set_Bowl-_set_Bowl
 27650                           	
 27651  2A82                     _set_Bowl:	
 27652                           	opt	stack 9
 27653                           ; Regs used in _set_Bowl: [wreg-fsr0h+status,2+status,0]
 27654                           ;set_Bowl@mode stored from wreg
 27655  2A82  0020               	movlb 0	; select bank0
 27656  2A83  00A2               	movwf	(set_Bowl@mode)
 27657                           	line	350
 27658                           	
 27659  2A84                     l36787:	
 27660                           ;catgenie120.c: 350: switch (mode) {
 27661  2A84  2A99               	goto	l36797
 27662                           	line	351
 27663                           ;catgenie120.c: 351: default:
 27664                           	
 27665  2A85                     l10926:	
 27666  2A85  2A86               	goto	l36789
 27667                           	line	352
 27668                           ;catgenie120.c: 352: case 0:
 27669                           	
 27670  2A86                     l10927:	
 27671                           	line	353
 27672                           	
 27673  2A86                     l36789:	
 27674                           ;catgenie120.c: 353: LATD &= ~((1U << (4)) | (1U << (5)));
 27675  2A86  30CF               	movlw	(0CFh)
 27676  2A87  00A1               	movwf	(??_set_Bowl+0)+0
 27677  2A88  0821               	movf	(??_set_Bowl+0)+0,w
 27678  2A89  0022               	movlb 2	; select bank2
 27679  2A8A  058F               	andwf	(271)^0100h,f	;volatile
 27680                           	line	354
 27681                           ;catgenie120.c: 354: break;
 27682  2A8B  2AA5               	goto	l10931
 27683                           	line	355
 27684                           ;catgenie120.c: 355: case 1:
 27685                           	
 27686  2A8C                     l10929:	
 27687                           	line	356
 27688                           ;catgenie120.c: 356: LATD |= (1U << (4));
 27689  2A8C  0022               	movlb 2	; select bank2
 27690  2A8D  160F               	bsf	(271)^0100h+(4/8),(4)&7	;volatile
 27691                           	line	357
 27692                           ;catgenie120.c: 357: LATD |= (1U << (5));
 27693  2A8E  168F               	bsf	(271)^0100h+(5/8),(5)&7	;volatile
 27694                           	line	358
 27695                           ;catgenie120.c: 358: break;
 27696  2A8F  2AA5               	goto	l10931
 27697                           	line	359
 27698                           ;catgenie120.c: 359: case 2:
 27699                           	
 27700  2A90                     l10930:	
 27701                           	line	360
 27702                           	
 27703  2A90                     l36791:	
 27704                           ;catgenie120.c: 360: LATD &= ~(1U << (4));
 27705  2A90  30EF               	movlw	(0EFh)
 27706  2A91  0020               	movlb 0	; select bank0
 27707  2A92  00A1               	movwf	(??_set_Bowl+0)+0
 27708  2A93  0821               	movf	(??_set_Bowl+0)+0,w
 27709  2A94  0022               	movlb 2	; select bank2
 27710  2A95  058F               	andwf	(271)^0100h,f	;volatile
 27711                           	line	361
 27712                           	
 27713  2A96                     l36793:	
 27714                           ;catgenie120.c: 361: LATD |= (1U << (5));
 27715  2A96  168F               	bsf	(271)^0100h+(5/8),(5)&7	;volatile
 27716                           	line	362
 27717                           ;catgenie120.c: 362: break;
 27718  2A97  2AA5               	goto	l10931
 27719                           	line	363
 27720                           	
 27721  2A98                     l36795:	
 27722                           ;catgenie120.c: 363: }
 27723  2A98  2AA5               	goto	l10931
 27724                           	line	350
 27725                           	
 27726  2A99                     l10925:	
 27727                           	
 27728  2A99                     l36797:	
 27729  2A99  0020               	movlb 0	; select bank0
 27730  2A9A  0822               	movf	(set_Bowl@mode),w
 27731                           	; Switch size 1, requested type "space"
 27732                           ; Number of cases is 3, Range of values is 0 to 2
 27733                           ; switch strategies available:
 27734                           ; Name         Instructions Cycles
 27735                           ; simple_byte           10     6 (average)
 27736                           ; direct_byte           12     6 (fixed)
 27737                           ; jumptable            260     6 (fixed)
 27738                           ; rangetable             7     4 (fixed)
 27739                           ; spacedrange           11     6 (fixed)
 27740                           ; locatedrange           3     3 (fixed)
 27741                           ;	Chosen strategy is simple_byte
 27742                           
 27743                           	opt asmopt_off
 27744  2A9B  3A00               	xorlw	0^0	; case 0
 27745  2A9C  1903               	skipnz
 27746  2A9D  2A86               	goto	l36789
 27747  2A9E  3A01               	xorlw	1^0	; case 1
 27748  2A9F  1903               	skipnz
 27749  2AA0  2A8C               	goto	l10929
 27750  2AA1  3A03               	xorlw	2^1	; case 2
 27751  2AA2  1903               	skipnz
 27752  2AA3  2A90               	goto	l36791
 27753  2AA4  2A86               	goto	l36789
 27754                           	opt asmopt_on
 27755                           
 27756                           	line	363
 27757                           	
 27758  2AA5                     l10928:	
 27759                           	line	364
 27760                           	
 27761  2AA5                     l10931:	
 27762  2AA5  0008               	return
 27763                           	opt stack 0
 27764                           GLOBAL	__end_of_set_Bowl
 27765  2AA6                     	__end_of_set_Bowl:
 27766 ;; =============== function _set_Bowl ends ============
 27767                           
 27768                           	signat	_set_Bowl,4216
 27769                           	global	_get_Bowl
 27770                           psect	text3327,local,class=CODE,delta=2
 27771                           global __ptext3327
 27772  2A04                     __ptext3327:
 27773                           
 27774 ;; *************** function _get_Bowl *****************
 27775 ;; Defined at:
 27776 ;;		line 368 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27777 ;; Parameters:    Size  Location     Type
 27778 ;;		None
 27779 ;; Auto vars:     Size  Location     Type
 27780 ;;		None
 27781 ;; Return value:  Size  Location     Type
 27782 ;;                  1    wreg      unsigned char 
 27783 ;; Registers used:
 27784 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27785 ;; Tracked objects:
 27786 ;;		On entry : 0/0
 27787 ;;		On exit  : 0/0
 27788 ;;		Unchanged: 0/0
 27789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27792 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27793 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27794 ;;Total ram usage:        2 bytes
 27795 ;; Hardware stack levels used:    1
 27796 ;; Hardware stack levels required when called:    2
 27797 ;; This function calls:
 27798 ;;		Nothing
 27799 ;; This function is called by:
 27800 ;;		_litterlanguage_pause
 27801 ;; This function uses a non-reentrant model
 27802 ;;
 27803                           psect	text3327
 27804                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27805                           	line	368
 27806                           	global	__size_of_get_Bowl
 27807  001E                     	__size_of_get_Bowl	equ	__end_of_get_Bowl-_get_Bowl
 27808                           	
 27809  2A04                     _get_Bowl:	
 27810                           	opt	stack 9
 27811                           ; Regs used in _get_Bowl: [wreg-fsr0h+status,2+status,0]
 27812                           	line	369
 27813                           	
 27814  2A04                     l36765:	
 27815                           ;catgenie120.c: 369: switch (LATD & ((1U << (4)) | (1U << (5)))) {
 27816  2A04  2A0C               	goto	l36777
 27817                           	line	370
 27818                           ;catgenie120.c: 370: case (1U << (5)):
 27819                           	
 27820  2A05                     l10935:	
 27821                           	line	371
 27822                           	
 27823  2A05                     l36767:	
 27824                           ;catgenie120.c: 371: return (2);
 27825  2A05  3002               	movlw	(02h)
 27826  2A06  2A21               	goto	l10936
 27827                           	
 27828  2A07                     l36769:	
 27829  2A07  2A21               	goto	l10936
 27830                           	line	372
 27831                           ;catgenie120.c: 372: case (1U << (5)) | (1U << (4)):
 27832                           	
 27833  2A08                     l10937:	
 27834                           	line	373
 27835                           	
 27836  2A08                     l36771:	
 27837                           ;catgenie120.c: 373: return (1);
 27838  2A08  3001               	movlw	(01h)
 27839  2A09  2A21               	goto	l10936
 27840                           	
 27841  2A0A                     l36773:	
 27842  2A0A  2A21               	goto	l10936
 27843                           	line	374
 27844                           	
 27845  2A0B                     l36775:	
 27846                           ;catgenie120.c: 374: }
 27847  2A0B  2A1F               	goto	l36779
 27848                           	line	369
 27849                           	
 27850  2A0C                     l10934:	
 27851                           	
 27852  2A0C                     l36777:	
 27853  2A0C  0022               	movlb 2	; select bank2
 27854  2A0D  080F               	movf	(271)^0100h,w	;volatile
 27855  2A0E  3930               	andlw	030h
 27856  2A0F  0020               	movlb 0	; select bank0
 27857  2A10  00A1               	movwf	(??_get_Bowl+0)+0
 27858  2A11  01A2               	clrf	(??_get_Bowl+0)+0+1
 27859                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 27860                           ; Switch size 1, requested type "space"
 27861                           ; Number of cases is 1, Range of values is 0 to 0
 27862                           ; switch strategies available:
 27863                           ; Name         Instructions Cycles
 27864                           ; simple_byte            4     3 (average)
 27865                           ; direct_byte            8     6 (fixed)
 27866                           ; jumptable            260     6 (fixed)
 27867                           ; rangetable             5     4 (fixed)
 27868                           ; spacedrange            7     6 (fixed)
 27869                           ; locatedrange           1     3 (fixed)
 27870                           ;	Chosen strategy is simple_byte
 27871                           
 27872  2A12  0822               	movf 1+(??_get_Bowl+0)+0,w
 27873                           	opt asmopt_off
 27874  2A13  3A00               	xorlw	0^0	; case 0
 27875  2A14  1903               	skipnz
 27876  2A15  2A17               	goto	l39191
 27877  2A16  2A1F               	goto	l36779
 27878                           	opt asmopt_on
 27879                           	
 27880  2A17                     l39191:	
 27881                           ; Switch size 1, requested type "space"
 27882                           ; Number of cases is 2, Range of values is 32 to 48
 27883                           ; switch strategies available:
 27884                           ; Name         Instructions Cycles
 27885                           ; simple_byte            7     4 (average)
 27886                           ; direct_byte           43     9 (fixed)
 27887                           ; jumptable            263     9 (fixed)
 27888                           ;	Chosen strategy is simple_byte
 27889                           
 27890  2A17  0821               	movf 0+(??_get_Bowl+0)+0,w
 27891                           	opt asmopt_off
 27892  2A18  3A20               	xorlw	32^0	; case 32
 27893  2A19  1903               	skipnz
 27894  2A1A  2A05               	goto	l36767
 27895  2A1B  3A10               	xorlw	48^32	; case 48
 27896  2A1C  1903               	skipnz
 27897  2A1D  2A08               	goto	l36771
 27898  2A1E  2A1F               	goto	l36779
 27899                           	opt asmopt_on
 27900                           
 27901                           	line	374
 27902                           	
 27903  2A1F                     l10938:	
 27904                           	line	375
 27905                           	
 27906  2A1F                     l36779:	
 27907                           ;catgenie120.c: 375: return (0);
 27908  2A1F  3000               	movlw	(0)
 27909  2A20  2A21               	goto	l10936
 27910                           	
 27911  2A21                     l36781:	
 27912                           	line	376
 27913                           	
 27914  2A21                     l10936:	
 27915  2A21  0008               	return
 27916                           	opt stack 0
 27917                           GLOBAL	__end_of_get_Bowl
 27918  2A22                     	__end_of_get_Bowl:
 27919 ;; =============== function _get_Bowl ends ============
 27920                           
 27921                           	signat	_get_Bowl,89
 27922                           	global	_litterlanguage_running
 27923                           psect	text3328,local,class=CODE,delta=2
 27924                           global __ptext3328
 27925  3792                     __ptext3328:
 27926                           
 27927 ;; *************** function _litterlanguage_running *****************
 27928 ;; Defined at:
 27929 ;;		line 252 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 27930 ;; Parameters:    Size  Location     Type
 27931 ;;		None
 27932 ;; Auto vars:     Size  Location     Type
 27933 ;;		None
 27934 ;; Return value:  Size  Location     Type
 27935 ;;                  1    wreg      unsigned char 
 27936 ;; Registers used:
 27937 ;;		wreg, status,2, status,0
 27938 ;; Tracked objects:
 27939 ;;		On entry : 0/0
 27940 ;;		On exit  : 0/0
 27941 ;;		Unchanged: 0/0
 27942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27947 ;;Total ram usage:        0 bytes
 27948 ;; Hardware stack levels used:    1
 27949 ;; Hardware stack levels required when called:    2
 27950 ;; This function calls:
 27951 ;;		Nothing
 27952 ;; This function is called by:
 27953 ;;		_userinterface_work
 27954 ;;		_start_short
 27955 ;;		_start_long
 27956 ;; This function uses a non-reentrant model
 27957 ;;
 27958                           psect	text3328
 27959                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 27960                           	line	252
 27961                           	global	__size_of_litterlanguage_running
 27962  0007                     	__size_of_litterlanguage_running	equ	__end_of_litterlanguage_running-_litterlanguage_ru
                                 nning
 27963                           	
 27964  3792                     _litterlanguage_running:	
 27965                           	opt	stack 11
 27966                           ; Regs used in _litterlanguage_running: [wreg+status,2+status,0]
 27967                           	line	253
 27968                           	
 27969  3792                     l34047:	
 27970                           ;litterlanguage.c: 253: return (ins_state != 0);
 27971  3792  3000               	movlw	0
 27972  3793  0020               	movlb 0	; select bank0
 27973  3794  08E5               	movf	(_ins_state),f
 27974  3795  1D03               	skipz
 27975  3796  3001               	movlw	1
 27976  3797  2F98               	goto	l4284
 27977                           	
 27978  3798                     l34049:	
 27979                           	line	254
 27980                           	
 27981  3798                     l4284:	
 27982  3798  0008               	return
 27983                           	opt stack 0
 27984                           GLOBAL	__end_of_litterlanguage_running
 27985  3799                     	__end_of_litterlanguage_running:
 27986 ;; =============== function _litterlanguage_running ends ============
 27987                           
 27988                           	signat	_litterlanguage_running,89
 27989                           	global	_set_Dosage
 27990                           psect	text3329,local,class=CODE,delta=2
 27991                           global __ptext3329
 27992  288A                     __ptext3329:
 27993                           
 27994 ;; *************** function _set_Dosage *****************
 27995 ;; Defined at:
 27996 ;;		line 411 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27997 ;; Parameters:    Size  Location     Type
 27998 ;;  on              1    wreg     unsigned char 
 27999 ;; Auto vars:     Size  Location     Type
 28000 ;;  on              1    1[BANK0 ] unsigned char 
 28001 ;; Return value:  Size  Location     Type
 28002 ;;		None               void
 28003 ;; Registers used:
 28004 ;;		wreg, status,2, status,0
 28005 ;; Tracked objects:
 28006 ;;		On entry : 0/0
 28007 ;;		On exit  : 0/0
 28008 ;;		Unchanged: 0/0
 28009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28014 ;;Total ram usage:        2 bytes
 28015 ;; Hardware stack levels used:    1
 28016 ;; Hardware stack levels required when called:    2
 28017 ;; This function calls:
 28018 ;;		Nothing
 28019 ;; This function is called by:
 28020 ;;		_litterlanguage_work
 28021 ;;		_litterlanguage_pause
 28022 ;;		_litterlanguage_stop
 28023 ;;		_exe_instruction
 28024 ;; This function uses a non-reentrant model
 28025 ;;
 28026                           psect	text3329
 28027                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28028                           	line	411
 28029                           	global	__size_of_set_Dosage
 28030  0011                     	__size_of_set_Dosage	equ	__end_of_set_Dosage-_set_Dosage
 28031                           	
 28032  288A                     _set_Dosage:	
 28033                           	opt	stack 9
 28034                           ; Regs used in _set_Dosage: [wreg+status,2+status,0]
 28035                           ;set_Dosage@on stored from wreg
 28036  288A  0020               	movlb 0	; select bank0
 28037  288B  00A2               	movwf	(set_Dosage@on)
 28038                           	line	412
 28039                           	
 28040  288C                     l36759:	
 28041                           ;catgenie120.c: 412: if (on)
 28042  288C  0822               	movf	(set_Dosage@on),w
 28043  288D  1D03               	skipz
 28044  288E  2890               	goto	u9450
 28045  288F  2893               	goto	l36763
 28046  2890                     u9450:
 28047                           	line	413
 28048                           	
 28049  2890                     l36761:	
 28050                           ;catgenie120.c: 413: LATD |= (1U << (3));
 28051  2890  0022               	movlb 2	; select bank2
 28052  2891  158F               	bsf	(271)^0100h+(3/8),(3)&7	;volatile
 28053  2892  289A               	goto	l10959
 28054                           	line	414
 28055                           	
 28056  2893                     l10957:	
 28057                           	line	415
 28058                           	
 28059  2893                     l36763:	
 28060                           ;catgenie120.c: 414: else
 28061                           ;catgenie120.c: 415: LATD &= ~(1U << (3));
 28062  2893  30F7               	movlw	(0F7h)
 28063  2894  0020               	movlb 0	; select bank0
 28064  2895  00A1               	movwf	(??_set_Dosage+0)+0
 28065  2896  0821               	movf	(??_set_Dosage+0)+0,w
 28066  2897  0022               	movlb 2	; select bank2
 28067  2898  058F               	andwf	(271)^0100h,f	;volatile
 28068  2899  289A               	goto	l10959
 28069                           	
 28070  289A                     l10958:	
 28071                           	line	416
 28072                           	
 28073  289A                     l10959:	
 28074  289A  0008               	return
 28075                           	opt stack 0
 28076                           GLOBAL	__end_of_set_Dosage
 28077  289B                     	__end_of_set_Dosage:
 28078 ;; =============== function _set_Dosage ends ============
 28079                           
 28080                           	signat	_set_Dosage,4216
 28081                           	global	_timeoutnever
 28082                           psect	text3330,local,class=CODE,delta=2
 28083                           global __ptext3330
 28084  29AF                     __ptext3330:
 28085                           
 28086 ;; *************** function _timeoutnever *****************
 28087 ;; Defined at:
 28088 ;;		line 156 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28089 ;; Parameters:    Size  Location     Type
 28090 ;;  timer_p         2    4[BANK0 ] const PTR struct timer
 28091 ;;		 -> debouncer(6), debouncers(42), cattimer(6), autotimer(6), 
 28092 ;;		 -> holdtimeout(6), timer_autodose(6), timer_drain(6), timer_fill(6), 
 28093 ;;		 -> timer_waitins(6), 
 28094 ;; Auto vars:     Size  Location     Type
 28095 ;;		None
 28096 ;; Return value:  Size  Location     Type
 28097 ;;		None               void
 28098 ;; Registers used:
 28099 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28100 ;; Tracked objects:
 28101 ;;		On entry : 0/0
 28102 ;;		On exit  : 0/0
 28103 ;;		Unchanged: 0/0
 28104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28108 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28109 ;;Total ram usage:        4 bytes
 28110 ;; Hardware stack levels used:    1
 28111 ;; Hardware stack levels required when called:    2
 28112 ;; This function calls:
 28113 ;;		Nothing
 28114 ;; This function is called by:
 28115 ;;		_litterlanguage_work
 28116 ;;		_litterlanguage_pause
 28117 ;;		_litterlanguage_stop
 28118 ;;		_watersensor_event
 28119 ;;		_exe_instruction
 28120 ;;		_wait_instruction
 28121 ;;		_userinterface_work
 28122 ;;		_catsensor_event
 28123 ;;		_process_button
 28124 ;;		_update_autotimer
 28125 ;;		_catgenie_work
 28126 ;;		_catsensor_work
 28127 ;; This function uses a non-reentrant model
 28128 ;;
 28129                           psect	text3330
 28130                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28131                           	line	156
 28132                           	global	__size_of_timeoutnever
 28133  001C                     	__size_of_timeoutnever	equ	__end_of_timeoutnever-_timeoutnever
 28134                           	
 28135  29AF                     _timeoutnever:	
 28136                           	opt	stack 11
 28137                           ; Regs used in _timeoutnever: [wreg+fsr1l-status,0]
 28138                           	line	157
 28139                           	
 28140  29AF                     l36755:	
 28141                           ;timer.c: 157: timer_p->timer1 = 0xFFFF;
 28142  29AF  0020               	movlb 0	; select bank0
 28143  29B0  0825               	movf	(timeoutnever@timer_p),w
 28144  29B1  0086               	movwf	fsr1l
 28145  29B2  0826               	movf	(timeoutnever@timer_p+1),w
 28146  29B3  0087               	movwf	fsr1h
 28147                           
 28148  29B4  30FF               	movlw	low(0FFFFh)
 28149  29B5  3FC0               	movwi	[0]fsr1
 28150  29B6  30FF               	movlw	high(0FFFFh)
 28151  29B7  3FC1               	movwi	[1]fsr1
 28152                           	line	158
 28153                           	
 28154  29B8                     l36757:	
 28155                           ;timer.c: 158: timer_p->overflows = 0xFFFFFFFF;
 28156  29B8  0825               	movf	(timeoutnever@timer_p),w
 28157  29B9  3E02               	addlw	low(02h)
 28158  29BA  00A7               	movwf	(??_timeoutnever+0)+0
 28159  29BB  3000               	movlw	high(02h)
 28160  29BC  3D26               	addwfc	(timeoutnever@timer_p+1),w
 28161  29BD  00A8               	movwf	1+(??_timeoutnever+0)+0
 28162  29BE  0827               	movf	0+(??_timeoutnever+0)+0,w
 28163  29BF  0086               	movwf	fsr1l
 28164  29C0  0828               	movf	1+(??_timeoutnever+0)+0,w
 28165  29C1  0087               	movwf	fsr1h
 28166                           
 28167  29C2  30FF               	movlw	0FFh
 28168  29C3  3FC0               	movwi	[0]fsr1
 28169  29C4  30FF               	movlw	0FFh
 28170  29C5  3FC1               	movwi	[1]fsr1
 28171  29C6  30FF               	movlw	0FFh
 28172  29C7  3FC2               	movwi	[2]fsr1
 28173  29C8  30FF               	movlw	0FFh
 28174  29C9  3FC3               	movwi	[3]fsr1
 28175                           	line	159
 28176                           	
 28177  29CA                     l21369:	
 28178  29CA  0008               	return
 28179                           	opt stack 0
 28180                           GLOBAL	__end_of_timeoutnever
 28181  29CB                     	__end_of_timeoutnever:
 28182 ;; =============== function _timeoutnever ends ============
 28183                           
 28184                           	signat	_timeoutnever,4216
 28185                           	global	_get_Pump
 28186                           psect	text3331,local,class=CODE,delta=2
 28187                           global __ptext3331
 28188  3766                     __ptext3331:
 28189                           
 28190 ;; *************** function _get_Pump *****************
 28191 ;; Defined at:
 28192 ;;		line 435 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28193 ;; Parameters:    Size  Location     Type
 28194 ;;		None
 28195 ;; Auto vars:     Size  Location     Type
 28196 ;;		None
 28197 ;; Return value:  Size  Location     Type
 28198 ;;                  1    wreg      unsigned char 
 28199 ;; Registers used:
 28200 ;;		wreg, status,2
 28201 ;; Tracked objects:
 28202 ;;		On entry : 0/0
 28203 ;;		On exit  : 0/0
 28204 ;;		Unchanged: 0/0
 28205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28210 ;;Total ram usage:        0 bytes
 28211 ;; Hardware stack levels used:    1
 28212 ;; Hardware stack levels required when called:    2
 28213 ;; This function calls:
 28214 ;;		Nothing
 28215 ;; This function is called by:
 28216 ;;		_litterlanguage_work
 28217 ;;		_litterlanguage_pause
 28218 ;; This function uses a non-reentrant model
 28219 ;;
 28220                           psect	text3331
 28221                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28222                           	line	435
 28223                           	global	__size_of_get_Pump
 28224  0005                     	__size_of_get_Pump	equ	__end_of_get_Pump-_get_Pump
 28225                           	
 28226  3766                     _get_Pump:	
 28227                           	opt	stack 9
 28228                           ; Regs used in _get_Pump: [wreg+status,2]
 28229                           	line	436
 28230                           	
 28231  3766                     l36751:	
 28232                           ;catgenie120.c: 436: return (LATD & (1U << (1)));
 28233  3766  0022               	movlb 2	; select bank2
 28234  3767  080F               	movf	(271)^0100h,w	;volatile
 28235  3768  3902               	andlw	02h
 28236  3769  2F6A               	goto	l10970
 28237                           	
 28238  376A                     l36753:	
 28239                           	line	437
 28240                           	
 28241  376A                     l10970:	
 28242  376A  0008               	return
 28243                           	opt stack 0
 28244                           GLOBAL	__end_of_get_Pump
 28245  376B                     	__end_of_get_Pump:
 28246 ;; =============== function _get_Pump ends ============
 28247                           
 28248                           	signat	_get_Pump,89
 28249                           	global	_water_filling
 28250                           psect	text3332,local,class=CODE,delta=2
 28251                           global __ptext3332
 28252  3780                     __ptext3332:
 28253                           
 28254 ;; *************** function _water_filling *****************
 28255 ;; Defined at:
 28256 ;;		line 231 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28257 ;; Parameters:    Size  Location     Type
 28258 ;;		None
 28259 ;; Auto vars:     Size  Location     Type
 28260 ;;		None
 28261 ;; Return value:  Size  Location     Type
 28262 ;;                  1    wreg      unsigned char 
 28263 ;; Registers used:
 28264 ;;		wreg
 28265 ;; Tracked objects:
 28266 ;;		On entry : 0/0
 28267 ;;		On exit  : 0/0
 28268 ;;		Unchanged: 0/0
 28269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28274 ;;Total ram usage:        0 bytes
 28275 ;; Hardware stack levels used:    1
 28276 ;; Hardware stack levels required when called:    2
 28277 ;; This function calls:
 28278 ;;		Nothing
 28279 ;; This function is called by:
 28280 ;;		_litterlanguage_work
 28281 ;;		_litterlanguage_pause
 28282 ;; This function uses a non-reentrant model
 28283 ;;
 28284                           psect	text3332
 28285                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28286                           	line	231
 28287                           	global	__size_of_water_filling
 28288  0006                     	__size_of_water_filling	equ	__end_of_water_filling-_water_filling
 28289                           	
 28290  3780                     _water_filling:	
 28291                           	opt	stack 9
 28292                           ; Regs used in _water_filling: [wreg]
 28293                           	line	232
 28294                           	
 28295  3780                     l36747:	
 28296                           ;water.c: 232: return (filling);
 28297  3780  3000               	movlw	0
 28298  3781  0020               	movlb 0	; select bank0
 28299  3782  196D               	btfsc	(_filling/8),(_filling)&7
 28300  3783  3001               	movlw	1
 28301  3784  2F85               	goto	l23489
 28302                           	
 28303  3785                     l36749:	
 28304                           	line	233
 28305                           	
 28306  3785                     l23489:	
 28307  3785  0008               	return
 28308                           	opt stack 0
 28309                           GLOBAL	__end_of_water_filling
 28310  3786                     	__end_of_water_filling:
 28311 ;; =============== function _water_filling ends ============
 28312                           
 28313                           	signat	_water_filling,89
 28314                           	global	_water_detected
 28315                           psect	text3333,local,class=CODE,delta=2
 28316                           global __ptext3333
 28317  377A                     __ptext3333:
 28318                           
 28319 ;; *************** function _water_detected *****************
 28320 ;; Defined at:
 28321 ;;		line 203 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28322 ;; Parameters:    Size  Location     Type
 28323 ;;		None
 28324 ;; Auto vars:     Size  Location     Type
 28325 ;;		None
 28326 ;; Return value:  Size  Location     Type
 28327 ;;                  1    wreg      unsigned char 
 28328 ;; Registers used:
 28329 ;;		wreg
 28330 ;; Tracked objects:
 28331 ;;		On entry : 0/0
 28332 ;;		On exit  : 0/0
 28333 ;;		Unchanged: 0/0
 28334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28339 ;;Total ram usage:        0 bytes
 28340 ;; Hardware stack levels used:    1
 28341 ;; Hardware stack levels required when called:    2
 28342 ;; This function calls:
 28343 ;;		Nothing
 28344 ;; This function is called by:
 28345 ;;		_litterlanguage_work
 28346 ;;		_exe_instruction
 28347 ;;		_wait_instruction
 28348 ;; This function uses a non-reentrant model
 28349 ;;
 28350                           psect	text3333
 28351                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28352                           	line	203
 28353                           	global	__size_of_water_detected
 28354  0006                     	__size_of_water_detected	equ	__end_of_water_detected-_water_detected
 28355                           	
 28356  377A                     _water_detected:	
 28357                           	opt	stack 11
 28358                           ; Regs used in _water_detected: [wreg]
 28359                           	line	204
 28360                           	
 28361  377A                     l36743:	
 28362                           ;water.c: 204: return (detected);
 28363  377A  3000               	movlw	0
 28364  377B  0020               	movlb 0	; select bank0
 28365  377C  186D               	btfsc	(_detected/8),(_detected)&7
 28366  377D  3001               	movlw	1
 28367  377E  2F7F               	goto	l23477
 28368                           	
 28369  377F                     l36745:	
 28370                           	line	205
 28371                           	
 28372  377F                     l23477:	
 28373  377F  0008               	return
 28374                           	opt stack 0
 28375                           GLOBAL	__end_of_water_detected
 28376  3780                     	__end_of_water_detected:
 28377 ;; =============== function _water_detected ends ============
 28378                           
 28379                           	signat	_water_detected,89
 28380                           	global	_eeprom_read
 28381                           psect	text3334,local,class=CODE,delta=2
 28382                           global __ptext3334
 28383  2A5F                     __ptext3334:
 28384                           
 28385 ;; *************** function _eeprom_read *****************
 28386 ;; Defined at:
 28387 ;;		line 7 in file "eeread.c"
 28388 ;; Parameters:    Size  Location     Type
 28389 ;;  addr            1    wreg     unsigned char 
 28390 ;; Auto vars:     Size  Location     Type
 28391 ;;  addr            1    3[BANK0 ] unsigned char 
 28392 ;; Return value:  Size  Location     Type
 28393 ;;                  1    wreg      unsigned char 
 28394 ;; Registers used:
 28395 ;;		wreg, status,2, status,0
 28396 ;; Tracked objects:
 28397 ;;		On entry : 0/0
 28398 ;;		On exit  : 0/0
 28399 ;;		Unchanged: 0/0
 28400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28403 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 28404 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28405 ;;Total ram usage:        4 bytes
 28406 ;; Hardware stack levels used:    1
 28407 ;; Hardware stack levels required when called:    2
 28408 ;; This function calls:
 28409 ;;		Nothing
 28410 ;; This function is called by:
 28411 ;;		_litterlanguage_init
 28412 ;;		_litterlanguage_work
 28413 ;;		_exe_instruction
 28414 ;;		_userinterface_init
 28415 ;; This function uses a non-reentrant model
 28416 ;;
 28417                           psect	text3334
 28418                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eeread.c"
 28419                           	line	7
 28420                           	global	__size_of_eeprom_read
 28421  0023                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
 28422                           	
 28423  2A5F                     _eeprom_read:	
 28424                           	opt	stack 11
 28425                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
 28426                           ;eeprom_read@addr stored from wreg
 28427                           	line	9
 28428  2A5F  0020               	movlb 0	; select bank0
 28429  2A60  00A4               	movwf	(eeprom_read@addr)
 28430                           	line	8
 28431                           	
 28432  2A61                     l25390:	
 28433                           	line	9
 28434                           # 9 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eeread.c"
 28435  2A61  0064               clrwdt ;#
 28436                           psect	text3334
 28437                           	line	10
 28438  2A62  0023               	movlb 3	; select bank3
 28439  2A63  1895               	btfsc	(3241/8)^0180h,(3241)&7
 28440  2A64  2A66               	goto	u9441
 28441  2A65  2A67               	goto	u9440
 28442  2A66                     u9441:
 28443  2A66  2A61               	goto	l25390
 28444  2A67                     u9440:
 28445  2A67  2A68               	goto	l36739
 28446                           	
 28447  2A68                     l25391:	
 28448                           	line	11
 28449                           	
 28450  2A68                     l36739:	
 28451  2A68  0020               	movlb 0	; select bank0
 28452  2A69  0824               	movf	(eeprom_read@addr),w
 28453  2A6A  00A1               	movwf	(??_eeprom_read+0)+0
 28454  2A6B  01A2               	clrf	(??_eeprom_read+0)+0+1
 28455  2A6C  0821               	movf	0+(??_eeprom_read+0)+0,w
 28456  2A6D  0023               	movlb 3	; select bank3
 28457  2A6E  0091               	movwf	(401)^0180h	;volatile
 28458  2A6F  0020               	movlb 0	; select bank0
 28459  2A70  0822               	movf	1+(??_eeprom_read+0)+0,w
 28460  2A71  0023               	movlb 3	; select bank3
 28461  2A72  0092               	movwf	(401+1)^0180h	;volatile
 28462  2A73  303F               	movlw	(03Fh)
 28463  2A74  0020               	movlb 0	; select bank0
 28464  2A75  00A3               	movwf	(??_eeprom_read+2)+0
 28465  2A76  0823               	movf	(??_eeprom_read+2)+0,w
 28466  2A77  0023               	movlb 3	; select bank3
 28467  2A78  0595               	andwf	(405)^0180h,f	;volatile
 28468  2A79  1415               	bsf	(3240/8)^0180h,(3240)&7
 28469  2A7A  1003               	clrc
 28470  2A7B  1815               	btfsc	(3240/8)^0180h,(3240)&7
 28471  2A7C  1403               	setc
 28472  2A7D  3000               	movlw	0
 28473  2A7E  3D09               	addwfc	wreg,w
 28474  2A7F  0813               	movf	(403)^0180h,w	;volatile
 28475  2A80  2A81               	goto	l25392
 28476                           	
 28477  2A81                     l36741:	
 28478                           	line	12
 28479                           	
 28480  2A81                     l25392:	
 28481  2A81  0008               	return
 28482                           	opt stack 0
 28483                           GLOBAL	__end_of_eeprom_read
 28484  2A82                     	__end_of_eeprom_read:
 28485 ;; =============== function _eeprom_read ends ============
 28486                           
 28487                           	signat	_eeprom_read,4217
 28488                           	global	_eeprom_write
 28489                           psect	text3335,local,class=CODE,delta=2
 28490                           global __ptext3335
 28491  2C4D                     __ptext3335:
 28492                           
 28493 ;; *************** function _eeprom_write *****************
 28494 ;; Defined at:
 28495 ;;		line 7 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eewrite.c"
 28496 ;; Parameters:    Size  Location     Type
 28497 ;;  addr            1    wreg     unsigned char 
 28498 ;;  value           1    0[BANK0 ] unsigned char 
 28499 ;; Auto vars:     Size  Location     Type
 28500 ;;  addr            1    3[BANK0 ] unsigned char 
 28501 ;; Return value:  Size  Location     Type
 28502 ;;                  1    wreg      unsigned char 
 28503 ;; Registers used:
 28504 ;;		wreg, status,2, status,0
 28505 ;; Tracked objects:
 28506 ;;		On entry : 0/0
 28507 ;;		On exit  : 0/0
 28508 ;;		Unchanged: 0/0
 28509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28510 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28514 ;;Total ram usage:        4 bytes
 28515 ;; Hardware stack levels used:    1
 28516 ;; Hardware stack levels required when called:    2
 28517 ;; This function calls:
 28518 ;;		Nothing
 28519 ;; This function is called by:
 28520 ;;		_litterlanguage_init
 28521 ;;		_litterlanguage_work
 28522 ;;		_exe_instruction
 28523 ;;		_userinterface_init
 28524 ;;		_set_mode
 28525 ;;		_both_long
 28526 ;; This function uses a non-reentrant model
 28527 ;;
 28528                           psect	text3335
 28529                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eewrite.c"
 28530                           	line	7
 28531                           	global	__size_of_eeprom_write
 28532  0037                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
 28533                           	
 28534  2C4D                     _eeprom_write:	
 28535                           	opt	stack 11
 28536                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
 28537                           ;eeprom_write@addr stored from wreg
 28538  2C4D  0020               	movlb 0	; select bank0
 28539  2C4E  00A4               	movwf	(eeprom_write@addr)
 28540                           	line	8
 28541                           	
 28542  2C4F                     l27189:	
 28543  2C4F  2C50               	goto	l27190
 28544                           	
 28545  2C50                     l27191:	
 28546                           	
 28547  2C50                     l27190:	
 28548  2C50  0023               	movlb 3	; select bank3
 28549  2C51  1895               	btfsc	(3241/8)^0180h,(3241)&7
 28550  2C52  2C54               	goto	u9411
 28551  2C53  2C55               	goto	u9410
 28552  2C54                     u9411:
 28553  2C54  2C50               	goto	l27190
 28554  2C55                     u9410:
 28555  2C55  2C56               	goto	l36719
 28556                           	
 28557  2C56                     l27192:	
 28558                           	
 28559  2C56                     l36719:	
 28560  2C56  0020               	movlb 0	; select bank0
 28561  2C57  0824               	movf	(eeprom_write@addr),w
 28562  2C58  00A2               	movwf	(??_eeprom_write+0)+0
 28563  2C59  01A3               	clrf	(??_eeprom_write+0)+0+1
 28564  2C5A  0822               	movf	0+(??_eeprom_write+0)+0,w
 28565  2C5B  0023               	movlb 3	; select bank3
 28566  2C5C  0091               	movwf	(401)^0180h	;volatile
 28567  2C5D  0020               	movlb 0	; select bank0
 28568  2C5E  0823               	movf	1+(??_eeprom_write+0)+0,w
 28569  2C5F  0023               	movlb 3	; select bank3
 28570  2C60  0092               	movwf	(401+1)^0180h	;volatile
 28571  2C61  0020               	movlb 0	; select bank0
 28572  2C62  0821               	movf	(eeprom_write@value),w
 28573  2C63  0023               	movlb 3	; select bank3
 28574  2C64  0093               	movwf	(403)^0180h	;volatile
 28575                           	
 28576  2C65                     l36721:	
 28577  2C65  303F               	movlw	(03Fh)
 28578  2C66  0020               	movlb 0	; select bank0
 28579  2C67  00A2               	movwf	(??_eeprom_write+0)+0
 28580  2C68  0822               	movf	(??_eeprom_write+0)+0,w
 28581  2C69  0023               	movlb 3	; select bank3
 28582  2C6A  0595               	andwf	(405)^0180h,f	;volatile
 28583                           	
 28584  2C6B                     l36723:	
 28585  2C6B  0020               	movlb 0	; select bank0
 28586  2C6C  1003               	bcf	(24/8),(24)&7
 28587                           	
 28588  2C6D                     l36725:	
 28589  2C6D  1F8B               	btfss	(95/8),(95)&7
 28590  2C6E  2C70               	goto	u9421
 28591  2C6F  2C71               	goto	u9420
 28592  2C70                     u9421:
 28593  2C70  2C72               	goto	l27193
 28594  2C71                     u9420:
 28595                           	
 28596  2C71                     l36727:	
 28597  2C71  1403               	bsf	(24/8),(24)&7
 28598                           	
 28599  2C72                     l27193:	
 28600  2C72  138B               	bcf	(95/8),(95)&7
 28601  2C73  0023               	movlb 3	; select bank3
 28602  2C74  1515               	bsf	(3242/8)^0180h,(3242)&7
 28603                           	
 28604  2C75                     l36729:	
 28605  2C75  3055               	movlw	(055h)
 28606  2C76  0096               	movwf	(406)^0180h	;volatile
 28607  2C77  30AA               	movlw	(0AAh)
 28608  2C78  0096               	movwf	(406)^0180h	;volatile
 28609                           	
 28610  2C79                     l36731:	
 28611  2C79  1495               	bsf	(3241/8)^0180h,(3241)&7
 28612                           	
 28613  2C7A                     l36733:	
 28614  2C7A  1115               	bcf	(3242/8)^0180h,(3242)&7
 28615                           	
 28616  2C7B                     l36735:	
 28617  2C7B  0020               	movlb 0	; select bank0
 28618  2C7C  1C03               	btfss	(24/8),(24)&7
 28619  2C7D  2C7F               	goto	u9431
 28620  2C7E  2C80               	goto	u9430
 28621  2C7F                     u9431:
 28622  2C7F  2C83               	goto	l27196
 28623  2C80                     u9430:
 28624                           	
 28625  2C80                     l36737:	
 28626  2C80  178B               	bsf	(95/8),(95)&7
 28627  2C81  2C83               	goto	l27196
 28628                           	
 28629  2C82                     l27194:	
 28630  2C82  2C83               	goto	l27196
 28631                           	
 28632  2C83                     l27195:	
 28633                           	line	10
 28634                           ;	Return value of _eeprom_write is never used
 28635                           	
 28636  2C83                     l27196:	
 28637  2C83  0008               	return
 28638                           	opt stack 0
 28639                           GLOBAL	__end_of_eeprom_write
 28640  2C84                     	__end_of_eeprom_write:
 28641 ;; =============== function _eeprom_write ends ============
 28642                           
 28643                           	signat	_eeprom_write,8313
 28644                           	global	_interrupt_init
 28645                           psect	text3336,local,class=CODE,delta=2
 28646                           global __ptext3336
 28647  3799                     __ptext3336:
 28648                           
 28649 ;; *************** function _interrupt_init *****************
 28650 ;; Defined at:
 28651 ;;		line 161 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 28652 ;; Parameters:    Size  Location     Type
 28653 ;;		None
 28654 ;; Auto vars:     Size  Location     Type
 28655 ;;		None
 28656 ;; Return value:  Size  Location     Type
 28657 ;;		None               void
 28658 ;; Registers used:
 28659 ;;		wreg
 28660 ;; Tracked objects:
 28661 ;;		On entry : 0/0
 28662 ;;		On exit  : 0/0
 28663 ;;		Unchanged: 0/0
 28664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28669 ;;Total ram usage:        1 bytes
 28670 ;; Hardware stack levels used:    1
 28671 ;; Hardware stack levels required when called:    2
 28672 ;; This function calls:
 28673 ;;		Nothing
 28674 ;; This function is called by:
 28675 ;;		_main
 28676 ;; This function uses a non-reentrant model
 28677 ;;
 28678                           psect	text3336
 28679                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 28680                           	line	161
 28681                           	global	__size_of_interrupt_init
 28682  0009                     	__size_of_interrupt_init	equ	__end_of_interrupt_init-_interrupt_init
 28683                           	
 28684  3799                     _interrupt_init:	
 28685                           	opt	stack 13
 28686                           ; Regs used in _interrupt_init: [wreg]
 28687                           	line	162
 28688                           	
 28689  3799                     l33887:	
 28690                           ;catgenius.c: 162: PORTB_old = PORTB;
 28691  3799  0020               	movlb 0	; select bank0
 28692  379A  080D               	movf	(13),w	;volatile
 28693  379B  00A1               	movwf	(??_interrupt_init+0)+0
 28694  379C  0821               	movf	(??_interrupt_init+0)+0,w
 28695  379D  0021               	movlb 1	; select bank1
 28696  379E  00D4               	movwf	(_PORTB_old)^080h
 28697                           	line	165
 28698                           	
 28699  379F                     l33889:	
 28700                           ;catgenius.c: 165: PEIE = 1;
 28701  379F  170B               	bsf	(94/8),(94)&7
 28702                           	line	168
 28703                           	
 28704  37A0                     l33891:	
 28705                           ;catgenius.c: 168: GIE = 1;
 28706  37A0  178B               	bsf	(95/8),(95)&7
 28707                           	line	169
 28708                           	
 28709  37A1                     l2096:	
 28710  37A1  0008               	return
 28711                           	opt stack 0
 28712                           GLOBAL	__end_of_interrupt_init
 28713  37A2                     	__end_of_interrupt_init:
 28714 ;; =============== function _interrupt_init ends ============
 28715                           
 28716                           	signat	_interrupt_init,88
 28717                           	global	_water_init
 28718                           psect	text3337,local,class=CODE,delta=2
 28719                           global __ptext3337
 28720  2B16                     __ptext3337:
 28721                           
 28722 ;; *************** function _water_init *****************
 28723 ;; Defined at:
 28724 ;;		line 104 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28725 ;; Parameters:    Size  Location     Type
 28726 ;;		None
 28727 ;; Auto vars:     Size  Location     Type
 28728 ;;  channel         1    2[BANK0 ] unsigned char 
 28729 ;;  mask            1    1[BANK0 ] unsigned char 
 28730 ;; Return value:  Size  Location     Type
 28731 ;;		None               void
 28732 ;; Registers used:
 28733 ;;		wreg, status,2, status,0
 28734 ;; Tracked objects:
 28735 ;;		On entry : 0/0
 28736 ;;		On exit  : 0/0
 28737 ;;		Unchanged: 0/0
 28738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28740 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28741 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28742 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 28743 ;;Total ram usage:        3 bytes
 28744 ;; Hardware stack levels used:    1
 28745 ;; Hardware stack levels required when called:    2
 28746 ;; This function calls:
 28747 ;;		Nothing
 28748 ;; This function is called by:
 28749 ;;		_main
 28750 ;; This function uses a non-reentrant model
 28751 ;;
 28752                           psect	text3337
 28753                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28754                           	line	104
 28755                           	global	__size_of_water_init
 28756  0028                     	__size_of_water_init	equ	__end_of_water_init-_water_init
 28757                           	
 28758  2B16                     _water_init:	
 28759                           	opt	stack 13
 28760                           ; Regs used in _water_init: [wreg+status,2+status,0]
 28761                           	line	106
 28762                           	
 28763  2B16                     l33871:	
 28764                           ;water.c: 106: unsigned char mask = (1U << (1));
 28765  2B16  3002               	movlw	(02h)
 28766  2B17  0020               	movlb 0	; select bank0
 28767  2B18  00A1               	movwf	(??_water_init+0)+0
 28768  2B19  0821               	movf	(??_water_init+0)+0,w
 28769  2B1A  00A2               	movwf	(water_init@mask)
 28770                           	line	107
 28771                           	
 28772  2B1B                     l33873:	
 28773                           ;water.c: 107: unsigned char channel = 0;
 28774  2B1B  01A3               	clrf	(water_init@channel)
 28775                           	line	110
 28776                           ;water.c: 110: while (!(mask & 0x01)) {
 28777  2B1C  2B24               	goto	l33879
 28778                           	
 28779  2B1D                     l23455:	
 28780                           	line	111
 28781                           	
 28782  2B1D                     l33875:	
 28783                           ;water.c: 111: mask >>= 0x01;
 28784  2B1D  1003               	clrc
 28785  2B1E  0CA2               	rrf	(water_init@mask),f
 28786                           
 28787                           	line	112
 28788                           	
 28789  2B1F                     l33877:	
 28790                           ;water.c: 112: channel ++;
 28791  2B1F  3001               	movlw	(01h)
 28792  2B20  00A1               	movwf	(??_water_init+0)+0
 28793  2B21  0821               	movf	(??_water_init+0)+0,w
 28794  2B22  07A3               	addwf	(water_init@channel),f
 28795  2B23  2B24               	goto	l33879
 28796                           	line	113
 28797                           	
 28798  2B24                     l23454:	
 28799                           	line	110
 28800                           	
 28801  2B24                     l33879:	
 28802  2B24  1C22               	btfss	(water_init@mask),(0)&7
 28803  2B25  2B27               	goto	u5641
 28804  2B26  2B28               	goto	u5640
 28805  2B27                     u5641:
 28806  2B27  2B1D               	goto	l33875
 28807  2B28                     u5640:
 28808                           	
 28809  2B28                     l23456:	
 28810                           	line	116
 28811                           ;water.c: 113: }
 28812                           ;water.c: 116: ADCON0bits.ADON = 1;
 28813  2B28  0021               	movlb 1	; select bank1
 28814  2B29  141D               	bsf	(157)^080h,0	;volatile
 28815                           	line	118
 28816                           	
 28817  2B2A                     l33881:	
 28818                           ;water.c: 118: ADCON0bits.CHS = channel;
 28819  2B2A  0020               	movlb 0	; select bank0
 28820  2B2B  0823               	movf	(water_init@channel),w
 28821  2B2C  00A1               	movwf	(??_water_init+0)+0
 28822  2B2D  0DA1               	rlf	(??_water_init+0)+0,f
 28823  2B2E  0DA1               	rlf	(??_water_init+0)+0,f
 28824  2B2F  0021               	movlb 1	; select bank1
 28825  2B30  081D               	movf	(157)^080h,w	;volatile
 28826  2B31  0020               	movlb 0	; select bank0
 28827  2B32  0621               	xorwf	(??_water_init+0)+0,w
 28828  2B33  3983               	andlw	not (((1<<5)-1)<<2)
 28829  2B34  0621               	xorwf	(??_water_init+0)+0,w
 28830  2B35  0021               	movlb 1	; select bank1
 28831  2B36  009D               	movwf	(157)^080h	;volatile
 28832                           	line	121
 28833                           	
 28834  2B37                     l33883:	
 28835                           ;water.c: 121: ADCON1bits.ADFM = 1;
 28836  2B37  179E               	bsf	(158)^080h,7	;volatile
 28837                           	line	123
 28838                           ;water.c: 123: ADCON1bits.ADCS = 7;
 28839  2B38  3070               	movlw	(07h & ((1<<3)-1))<<4
 28840  2B39  049E               	iorwf	(158)^080h,f	;volatile
 28841                           	line	126
 28842                           	
 28843  2B3A                     l33885:	
 28844                           ;water.c: 126: ADCON1bits.ADNREF = 0;
 28845  2B3A  111E               	bcf	(158)^080h,2	;volatile
 28846                           	line	127
 28847                           ;water.c: 127: ADCON1bits.ADPREF = 0;
 28848  2B3B  30FC               	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
 28849  2B3C  059E               	andwf	(158)^080h,f	;volatile
 28850                           	line	129
 28851                           	
 28852  2B3D                     l23457:	
 28853  2B3D  0008               	return
 28854                           	opt stack 0
 28855                           GLOBAL	__end_of_water_init
 28856  2B3E                     	__end_of_water_init:
 28857 ;; =============== function _water_init ends ============
 28858                           
 28859                           	signat	_water_init,88
 28860                           	global	_catsensor_init
 28861                           psect	text3338,local,class=CODE,delta=2
 28862                           global __ptext3338
 28863  37E2                     __ptext3338:
 28864                           
 28865 ;; *************** function _catsensor_init *****************
 28866 ;; Defined at:
 28867 ;;		line 56 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 28868 ;; Parameters:    Size  Location     Type
 28869 ;;		None
 28870 ;; Auto vars:     Size  Location     Type
 28871 ;;		None
 28872 ;; Return value:  Size  Location     Type
 28873 ;;		None               void
 28874 ;; Registers used:
 28875 ;;		wreg
 28876 ;; Tracked objects:
 28877 ;;		On entry : 0/0
 28878 ;;		On exit  : 0/0
 28879 ;;		Unchanged: 0/0
 28880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28885 ;;Total ram usage:        0 bytes
 28886 ;; Hardware stack levels used:    1
 28887 ;; Hardware stack levels required when called:    2
 28888 ;; This function calls:
 28889 ;;		Nothing
 28890 ;; This function is called by:
 28891 ;;		_main
 28892 ;; This function uses a non-reentrant model
 28893 ;;
 28894                           psect	text3338
 28895                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 28896                           	line	56
 28897                           	global	__size_of_catsensor_init
 28898  000F                     	__size_of_catsensor_init	equ	__end_of_catsensor_init-_catsensor_init
 28899                           	
 28900  37E2                     _catsensor_init:	
 28901                           	opt	stack 13
 28902                           ; Regs used in _catsensor_init: [wreg]
 28903                           	line	61
 28904                           	
 28905  37E2                     l33865:	
 28906                           ;catsensor.c: 61: PR2 = 0x54 ;
 28907  37E2  3054               	movlw	(054h)
 28908  37E3  0020               	movlb 0	; select bank0
 28909  37E4  009B               	movwf	(27)	;volatile
 28910                           	line	65
 28911                           ;catsensor.c: 65: T2CON = 0x7D ;
 28912  37E5  307D               	movlw	(07Dh)
 28913  37E6  009C               	movwf	(28)	;volatile
 28914                           	line	67
 28915                           ;catsensor.c: 67: CCPR1L = 0x2A ;
 28916  37E7  302A               	movlw	(02Ah)
 28917  37E8  0025               	movlb 5	; select bank5
 28918  37E9  0091               	movwf	(657)^0280h	;volatile
 28919                           	line	70
 28920                           ;catsensor.c: 70: CCP1CON = 0x1F ;
 28921  37EA  301F               	movlw	(01Fh)
 28922  37EB  0093               	movwf	(659)^0280h	;volatile
 28923                           	line	72
 28924                           	
 28925  37EC                     l33867:	
 28926                           ;catsensor.c: 72: TMR2IF = 0;
 28927  37EC  0020               	movlb 0	; select bank0
 28928  37ED  1091               	bcf	(137/8),(137)&7
 28929                           	line	74
 28930                           	
 28931  37EE                     l33869:	
 28932                           ;catsensor.c: 74: TMR2IE = 1;
 28933  37EE  0021               	movlb 1	; select bank1
 28934  37EF  1491               	bsf	(1161/8)^080h,(1161)&7
 28935                           	line	75
 28936                           	
 28937  37F0                     l13031:	
 28938  37F0  0008               	return
 28939                           	opt stack 0
 28940                           GLOBAL	__end_of_catsensor_init
 28941  37F1                     	__end_of_catsensor_init:
 28942 ;; =============== function _catsensor_init ends ============
 28943                           
 28944                           	signat	_catsensor_init,88
 28945                           	global	_timer_init
 28946                           psect	text3339,local,class=CODE,delta=2
 28947                           global __ptext3339
 28948  37A2                     __ptext3339:
 28949                           
 28950 ;; *************** function _timer_init *****************
 28951 ;; Defined at:
 28952 ;;		line 47 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28953 ;; Parameters:    Size  Location     Type
 28954 ;;		None
 28955 ;; Auto vars:     Size  Location     Type
 28956 ;;		None
 28957 ;; Return value:  Size  Location     Type
 28958 ;;		None               void
 28959 ;; Registers used:
 28960 ;;		None
 28961 ;; Tracked objects:
 28962 ;;		On entry : 0/0
 28963 ;;		On exit  : 0/0
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28970 ;;Total ram usage:        0 bytes
 28971 ;; Hardware stack levels used:    1
 28972 ;; Hardware stack levels required when called:    2
 28973 ;; This function calls:
 28974 ;;		Nothing
 28975 ;; This function is called by:
 28976 ;;		_main
 28977 ;; This function uses a non-reentrant model
 28978 ;;
 28979                           psect	text3339
 28980                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28981                           	line	47
 28982                           	global	__size_of_timer_init
 28983  000B                     	__size_of_timer_init	equ	__end_of_timer_init-_timer_init
 28984                           	
 28985  37A2                     _timer_init:	
 28986                           	opt	stack 13
 28987                           ; Regs used in _timer_init: []
 28988                           	line	56
 28989                           	
 28990  37A2                     l33863:	
 28991                           ;timer.c: 56: TMR1CS0 = 0;
 28992  37A2  0020               	movlb 0	; select bank0
 28993  37A3  1318               	bcf	(198/8),(198)&7
 28994                           	line	57
 28995                           ;timer.c: 57: TMR1CS1 = 0;
 28996  37A4  1398               	bcf	(199/8),(199)&7
 28997                           	line	60
 28998                           ;timer.c: 60: T1CKPS1 = 1;
 28999  37A5  1698               	bsf	(197/8),(197)&7
 29000                           	line	61
 29001                           ;timer.c: 61: T1CKPS0 = 1;
 29002  37A6  1618               	bsf	(196/8),(196)&7
 29003                           	line	63
 29004                           ;timer.c: 63: T1OSCEN = 0;
 29005  37A7  1198               	bcf	(195/8),(195)&7
 29006                           	line	65
 29007                           ;timer.c: 65: nT1SYNC = 1;
 29008  37A8  1518               	bsf	(194/8),(194)&7
 29009                           	line	67
 29010                           ;timer.c: 67: TMR1ON = 1;
 29011  37A9  1418               	bsf	(192/8),(192)&7
 29012                           	line	69
 29013                           ;timer.c: 69: TMR1IE = 1;
 29014  37AA  0021               	movlb 1	; select bank1
 29015  37AB  1411               	bsf	(1160/8)^080h,(1160)&7
 29016                           	line	70
 29017                           	
 29018  37AC                     l21353:	
 29019  37AC  0008               	return
 29020                           	opt stack 0
 29021                           GLOBAL	__end_of_timer_init
 29022  37AD                     	__end_of_timer_init:
 29023 ;; =============== function _timer_init ends ============
 29024                           
 29025                           	signat	_timer_init,88
 29026                           	global	_isr
 29027                           psect	intentry,class=CODE,delta=2
 29028                           global __pintentry
 29029  0004                     __pintentry:
 29030                           
 29031 ;; *************** function _isr *****************
 29032 ;; Defined at:
 29033 ;;		line 172 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 29034 ;; Parameters:    Size  Location     Type
 29035 ;;		None
 29036 ;; Auto vars:     Size  Location     Type
 29037 ;;  temp            1   11[COMMON] unsigned char 
 29038 ;; Return value:  Size  Location     Type
 29039 ;;		None               void
 29040 ;; Registers used:
 29041 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 29042 ;; Tracked objects:
 29043 ;;		On entry : 0/0
 29044 ;;		On exit  : 0/0
 29045 ;;		Unchanged: 0/0
 29046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29051 ;;Total ram usage:        3 bytes
 29052 ;; Hardware stack levels used:    1
 29053 ;; Hardware stack levels required when called:    1
 29054 ;; This function calls:
 29055 ;;		_timer_isr
 29056 ;;		_catsensor_isr_timer
 29057 ;;		_catsensor_isr_input
 29058 ;;		_serial_rx_isr
 29059 ;;		_serial_tx_isr
 29060 ;; This function is called by:
 29061 ;;		Interrupt level 1
 29062 ;; This function uses a non-reentrant model
 29063 ;;
 29064                           psect	intentry
 29065                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 29066                           	line	172
 29067                           	global	__size_of_isr
 29068  004A                     	__size_of_isr	equ	__end_of_isr-_isr
 29069                           	
 29070  0004                     _isr:	
 29071                           	opt	stack 1
 29072                           ; Regs used in _isr: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 29073                           psect	intentry
 29074  0004  3180               	pagesel	$
 29075  0005  0020               	movlb 0	; select bank0
 29076  0006  087F               	movf	btemp+1,w
 29077  0007  00FC               	movwf	(??_isr+1)
 29078                           	line	176
 29079                           	
 29080  0008                     i1l33893:	
 29081                           ;catgenius.c: 173: unsigned char temp;
 29082                           ;catgenius.c: 176: if (TMR1IF) {
 29083  0008  1C11               	btfss	(136/8),(136)&7
 29084  0009  280B               	goto	u565_21
 29085  000A  280C               	goto	u565_20
 29086  000B                     u565_21:
 29087  000B  2811               	goto	i1l33899
 29088  000C                     u565_20:
 29089                           	line	178
 29090                           	
 29091  000C                     i1l33895:	
 29092                           ;catgenius.c: 178: TMR1IF = 0;
 29093  000C  1011               	bcf	(136/8),(136)&7
 29094                           	line	180
 29095                           	
 29096  000D                     i1l33897:	
 29097                           ;catgenius.c: 180: timer_isr();
 29098  000D  31AA  22EF  3180   	fcall	_timer_isr
 29099  0010  2811               	goto	i1l33899
 29100                           	line	181
 29101                           	
 29102  0011                     i1l2099:	
 29103                           	line	183
 29104                           	
 29105  0011                     i1l33899:	
 29106                           ;catgenius.c: 181: }
 29107                           ;catgenius.c: 183: if (TMR2IF) {
 29108  0011  0020               	movlb 0	; select bank0
 29109  0012  1C91               	btfss	(137/8),(137)&7
 29110  0013  2815               	goto	u566_21
 29111  0014  2816               	goto	u566_20
 29112  0015                     u566_21:
 29113  0015  281B               	goto	i1l33905
 29114  0016                     u566_20:
 29115                           	line	185
 29116                           	
 29117  0016                     i1l33901:	
 29118                           ;catgenius.c: 185: TMR2IF = 0;
 29119  0016  1091               	bcf	(137/8),(137)&7
 29120                           	line	187
 29121                           	
 29122  0017                     i1l33903:	
 29123                           ;catgenius.c: 187: catsensor_isr_timer();
 29124  0017  31A9  2193  3180   	fcall	_catsensor_isr_timer
 29125  001A  281B               	goto	i1l33905
 29126                           	line	188
 29127                           	
 29128  001B                     i1l2100:	
 29129                           	line	193
 29130                           	
 29131  001B                     i1l33905:	
 29132                           ;catgenius.c: 188: }
 29133                           ;catgenius.c: 193: if (IOCIF) {
 29134  001B  1C0B               	btfss	(88/8),(88)&7
 29135  001C  281E               	goto	u567_21
 29136  001D  281F               	goto	u567_20
 29137  001E                     u567_21:
 29138  001E  2838               	goto	i1l33919
 29139  001F                     u567_20:
 29140                           	line	196
 29141                           	
 29142  001F                     i1l33907:	
 29143                           ;catgenius.c: 196: temp = PORTB ^ PORTB_old;
 29144  001F  0020               	movlb 0	; select bank0
 29145  0020  080D               	movf	(13),w	;volatile
 29146  0021  0021               	movlb 1	; select bank1
 29147  0022  0654               	xorwf	(_PORTB_old)^080h,w
 29148  0023  00FB               	movwf	(??_isr+0)+0
 29149  0024  087B               	movf	(??_isr+0)+0,w
 29150  0025  00FD               	movwf	(isr@temp)
 29151                           	line	201
 29152                           	
 29153  0026                     i1l33909:	
 29154                           ;catgenius.c: 201: IOCBF = 0;
 29155  0026  0027               	movlb 7	; select bank7
 29156  0027  0196               	clrf	(918)^0380h	;volatile
 29157                           	line	202
 29158                           	
 29159  0028                     i1l33911:	
 29160                           ;catgenius.c: 202: IOCIF = 0;
 29161  0028  100B               	bcf	(88/8),(88)&7
 29162                           	line	205
 29163                           	
 29164  0029                     i1l33913:	
 29165                           ;catgenius.c: 205: if (temp & (1U << (4)))
 29166  0029  1E7D               	btfss	(isr@temp),(4)&7
 29167  002A  282C               	goto	u568_21
 29168  002B  282D               	goto	u568_20
 29169  002C                     u568_21:
 29170  002C  2831               	goto	i1l33917
 29171  002D                     u568_20:
 29172                           	line	206
 29173                           	
 29174  002D                     i1l33915:	
 29175                           ;catgenius.c: 206: catsensor_isr_input();
 29176  002D  31A8  2032  3180   	fcall	_catsensor_isr_input
 29177  0030  2831               	goto	i1l33917
 29178                           	
 29179  0031                     i1l2102:	
 29180                           	line	208
 29181                           	
 29182  0031                     i1l33917:	
 29183                           ;catgenius.c: 208: PORTB_old = PORTB ;
 29184  0031  0020               	movlb 0	; select bank0
 29185  0032  080D               	movf	(13),w	;volatile
 29186  0033  00FB               	movwf	(??_isr+0)+0
 29187  0034  087B               	movf	(??_isr+0)+0,w
 29188  0035  0021               	movlb 1	; select bank1
 29189  0036  00D4               	movwf	(_PORTB_old)^080h
 29190  0037  2838               	goto	i1l33919
 29191                           	line	209
 29192                           	
 29193  0038                     i1l2101:	
 29194                           	line	211
 29195                           	
 29196  0038                     i1l33919:	
 29197                           ;catgenius.c: 209: }
 29198                           ;catgenius.c: 211: if (RCIF)
 29199  0038  0020               	movlb 0	; select bank0
 29200  0039  1E91               	btfss	(141/8),(141)&7
 29201  003A  283C               	goto	u569_21
 29202  003B  283D               	goto	u569_20
 29203  003C                     u569_21:
 29204  003C  2841               	goto	i1l33923
 29205  003D                     u569_20:
 29206                           	line	212
 29207                           	
 29208  003D                     i1l33921:	
 29209                           ;catgenius.c: 212: serial_rx_isr();
 29210  003D  3181  210D  3180   	fcall	_serial_rx_isr
 29211  0040  2841               	goto	i1l33923
 29212                           	
 29213  0041                     i1l2103:	
 29214                           	line	213
 29215                           	
 29216  0041                     i1l33923:	
 29217                           ;catgenius.c: 213: if (TXIF)
 29218  0041  0020               	movlb 0	; select bank0
 29219  0042  1E11               	btfss	(140/8),(140)&7
 29220  0043  2845               	goto	u570_21
 29221  0044  2846               	goto	u570_20
 29222  0045                     u570_21:
 29223  0045  284A               	goto	i1l2105
 29224  0046                     u570_20:
 29225                           	line	214
 29226                           	
 29227  0046                     i1l33925:	
 29228                           ;catgenius.c: 214: serial_tx_isr();
 29229  0046  3180  20FF  3180   	fcall	_serial_tx_isr
 29230  0049  284A               	goto	i1l2105
 29231                           	
 29232  004A                     i1l2104:	
 29233                           	line	215
 29234                           	
 29235  004A                     i1l2105:	
 29236  004A  087C               	movf	(??_isr+1),w
 29237  004B  0020               	movlb 0	; select bank0
 29238  004C  00FF               	movwf	btemp+1
 29239  004D  0009               	retfie
 29240                           	opt stack 0
 29241                           GLOBAL	__end_of_isr
 29242  004E                     	__end_of_isr:
 29243 ;; =============== function _isr ends ============
 29244                           
 29245                           	signat	_isr,88
 29246                           	global	_serial_tx_isr
 29247                           psect	text3341,local,class=CODE,delta=2
 29248                           global __ptext3341
 29249  00FF                     __ptext3341:
 29250                           
 29251 ;; *************** function _serial_tx_isr *****************
 29252 ;; Defined at:
 29253 ;;		line 171 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29254 ;; Parameters:    Size  Location     Type
 29255 ;;		None
 29256 ;; Auto vars:     Size  Location     Type
 29257 ;;		None
 29258 ;; Return value:  Size  Location     Type
 29259 ;;		None               void
 29260 ;; Registers used:
 29261 ;;		None
 29262 ;; Tracked objects:
 29263 ;;		On entry : 0/0
 29264 ;;		On exit  : 0/0
 29265 ;;		Unchanged: 0/0
 29266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29271 ;;Total ram usage:        0 bytes
 29272 ;; Hardware stack levels used:    1
 29273 ;; This function calls:
 29274 ;;		Nothing
 29275 ;; This function is called by:
 29276 ;;		_isr
 29277 ;; This function uses a non-reentrant model
 29278 ;;
 29279                           psect	text3341
 29280                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29281                           	line	171
 29282                           	global	__size_of_serial_tx_isr
 29283  0001                     	__size_of_serial_tx_isr	equ	__end_of_serial_tx_isr-_serial_tx_isr
 29284                           	
 29285  00FF                     _serial_tx_isr:	
 29286                           	opt	stack 1
 29287                           ; Regs used in _serial_tx_isr: []
 29288                           	line	182
 29289                           	
 29290  00FF                     i1l19305:	
 29291  00FF  0008               	return
 29292                           	opt stack 0
 29293                           GLOBAL	__end_of_serial_tx_isr
 29294  0100                     	__end_of_serial_tx_isr:
 29295 ;; =============== function _serial_tx_isr ends ============
 29296                           
 29297                           	signat	_serial_tx_isr,88
 29298                           	global	_serial_rx_isr
 29299                           psect	text3342,local,class=CODE,delta=2
 29300                           global __ptext3342
 29301  010D                     __ptext3342:
 29302                           
 29303 ;; *************** function _serial_rx_isr *****************
 29304 ;; Defined at:
 29305 ;;		line 116 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29306 ;; Parameters:    Size  Location     Type
 29307 ;;		None
 29308 ;; Auto vars:     Size  Location     Type
 29309 ;;		None
 29310 ;; Return value:  Size  Location     Type
 29311 ;;		None               void
 29312 ;; Registers used:
 29313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1
 29314 ;; Tracked objects:
 29315 ;;		On entry : 0/0
 29316 ;;		On exit  : 0/0
 29317 ;;		Unchanged: 0/0
 29318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29321 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29322 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29323 ;;Total ram usage:        9 bytes
 29324 ;; Hardware stack levels used:    1
 29325 ;; This function calls:
 29326 ;;		Nothing
 29327 ;; This function is called by:
 29328 ;;		_isr
 29329 ;; This function uses a non-reentrant model
 29330 ;;
 29331                           psect	text3342
 29332                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29333                           	line	116
 29334                           	global	__size_of_serial_rx_isr
 29335  00D1                     	__size_of_serial_rx_isr	equ	__end_of_serial_rx_isr-_serial_rx_isr
 29336                           	
 29337  010D                     _serial_rx_isr:	
 29338                           	opt	stack 1
 29339                           ; Regs used in _serial_rx_isr: [wreg+fsr1l-status,0+btemp+1]
 29340                           	line	119
 29341                           	
 29342  010D                     i1l33953:	
 29343                           ;serial.c: 119: if (OERR) {
 29344  010D  0023               	movlb 3	; select bank3
 29345  010E  1C9D               	btfss	(3305/8)^0180h,(3305)&7
 29346  010F  2911               	goto	u576_21
 29347  0110  2912               	goto	u576_20
 29348  0111                     u576_21:
 29349  0111  2924               	goto	i1l19291
 29350  0112                     u576_20:
 29351                           	line	120
 29352                           	
 29353  0112                     i1l33955:	
 29354                           ;serial.c: 120: rx.buffer[rx.head] = RCREG;
 29355  0112  0819               	movf	(409)^0180h,w	;volatile
 29356  0113  00F2               	movwf	(??_serial_rx_isr+0)+0
 29357  0114  0022               	movlb 2	; select bank2
 29358  0115  0839               	movf	0+(_rx)^0100h+08h,w
 29359  0116  3907               	andlw	(1<<3)-1
 29360  0117  3E31               	addlw	_rx&0ffh
 29361  0118  0086               	movwf	fsr1l
 29362  0119  3001               	movlw 1	; select bank2/3
 29363  011A  0087               	movwf fsr1h	
 29364                           	
 29365  011B  0872               	movf	(??_serial_rx_isr+0)+0,w
 29366  011C  0081               	movwf	indf1
 29367                           	line	121
 29368                           	
 29369  011D                     i1l33957:	
 29370                           ;serial.c: 121: TXEN = 0;
 29371  011D  0023               	movlb 3	; select bank3
 29372  011E  129E               	bcf	(3317/8)^0180h,(3317)&7
 29373                           	line	122
 29374                           	
 29375  011F                     i1l33959:	
 29376                           ;serial.c: 122: TXEN = 1;
 29377  011F  169E               	bsf	(3317/8)^0180h,(3317)&7
 29378                           	line	123
 29379                           	
 29380  0120                     i1l33961:	
 29381                           ;serial.c: 123: CREN = 0;
 29382  0120  121D               	bcf	(3308/8)^0180h,(3308)&7
 29383                           	line	124
 29384                           	
 29385  0121                     i1l33963:	
 29386                           ;serial.c: 124: CREN = 1;
 29387  0121  161D               	bsf	(3308/8)^0180h,(3308)&7
 29388  0122  29DD               	goto	i1l19292
 29389                           	line	125
 29390                           	
 29391  0123                     i1l33965:	
 29392                           ;serial.c: 125: return;
 29393  0123  29DD               	goto	i1l19292
 29394                           	line	126
 29395                           	
 29396  0124                     i1l19291:	
 29397                           	line	128
 29398                           ;serial.c: 126: }
 29399                           ;serial.c: 128: if (FERR) {
 29400  0124  1D1D               	btfss	(3306/8)^0180h,(3306)&7
 29401  0125  2927               	goto	u577_21
 29402  0126  2928               	goto	u577_20
 29403  0127                     u577_21:
 29404  0127  2938               	goto	i1l33975
 29405  0128                     u577_20:
 29406                           	line	129
 29407                           	
 29408  0128                     i1l33967:	
 29409                           ;serial.c: 129: rx.buffer[rx.head] = RCREG;
 29410  0128  0819               	movf	(409)^0180h,w	;volatile
 29411  0129  00F2               	movwf	(??_serial_rx_isr+0)+0
 29412  012A  0022               	movlb 2	; select bank2
 29413  012B  0839               	movf	0+(_rx)^0100h+08h,w
 29414  012C  3907               	andlw	(1<<3)-1
 29415  012D  3E31               	addlw	_rx&0ffh
 29416  012E  0086               	movwf	fsr1l
 29417  012F  3001               	movlw 1	; select bank2/3
 29418  0130  0087               	movwf fsr1h	
 29419                           	
 29420  0131  0872               	movf	(??_serial_rx_isr+0)+0,w
 29421  0132  0081               	movwf	indf1
 29422                           	line	130
 29423                           	
 29424  0133                     i1l33969:	
 29425                           ;serial.c: 130: TXEN = 0;
 29426  0133  0023               	movlb 3	; select bank3
 29427  0134  129E               	bcf	(3317/8)^0180h,(3317)&7
 29428                           	line	131
 29429                           	
 29430  0135                     i1l33971:	
 29431                           ;serial.c: 131: TXEN = 1;
 29432  0135  169E               	bsf	(3317/8)^0180h,(3317)&7
 29433  0136  29DD               	goto	i1l19292
 29434                           	line	132
 29435                           	
 29436  0137                     i1l33973:	
 29437                           ;serial.c: 132: return;
 29438  0137  29DD               	goto	i1l19292
 29439                           	line	133
 29440                           	
 29441  0138                     i1l19293:	
 29442                           	line	135
 29443                           	
 29444  0138                     i1l33975:	
 29445                           ;serial.c: 133: }
 29446                           ;serial.c: 135: rx.buffer[rx.head] = RCREG;
 29447  0138  0819               	movf	(409)^0180h,w	;volatile
 29448  0139  00F2               	movwf	(??_serial_rx_isr+0)+0
 29449  013A  0022               	movlb 2	; select bank2
 29450  013B  0839               	movf	0+(_rx)^0100h+08h,w
 29451  013C  3907               	andlw	(1<<3)-1
 29452  013D  3E31               	addlw	_rx&0ffh
 29453  013E  0086               	movwf	fsr1l
 29454  013F  3001               	movlw 1	; select bank2/3
 29455  0140  0087               	movwf fsr1h	
 29456                           	
 29457  0141  0872               	movf	(??_serial_rx_isr+0)+0,w
 29458  0142  0081               	movwf	indf1
 29459                           	line	153
 29460                           	
 29461  0143                     i1l33977:	
 29462                           ;serial.c: 153: rx.head++;
 29463  0143  0839               	movf	0+(_rx)^0100h+08h,w
 29464  0144  3907               	andlw	(1<<3)-1
 29465  0145  00F2               	movwf	((??_serial_rx_isr+0)+0)
 29466  0146  0AF2               	incf	(??_serial_rx_isr+0)+0
 29467  0147  0839               	movf	0+(_rx)^0100h+08h,w
 29468  0148  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29469  0149  39F8               	andlw	not ((1<<3)-1)
 29470  014A  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29471  014B  00B9               	movwf	0+(_rx)^0100h+08h
 29472                           	line	157
 29473                           	
 29474  014C                     i1l33979:	
 29475                           ;serial.c: 155: if (rx.xon_enabled &&
 29476                           ;serial.c: 156: rx.xon_state &&
 29477                           ;serial.c: 157: ((((rx.head)>=(rx.tail))?((8)-((rx.head)-(rx.tail))-1):((rx.tail)-(rx.he
                                 ad))-1) <= (2))) {
 29478  014C  1F39               	btfss	0+(_rx)^0100h+08h,6
 29479  014D  294F               	goto	u578_21
 29480  014E  2950               	goto	u578_20
 29481  014F                     u578_21:
 29482  014F  29BF               	goto	i1l33997
 29483  0150                     u578_20:
 29484                           	
 29485  0150                     i1l33981:	
 29486  0150  1FB9               	btfss	0+(_rx)^0100h+08h,7
 29487  0151  2953               	goto	u579_21
 29488  0152  2954               	goto	u579_20
 29489  0153                     u579_21:
 29490  0153  29BF               	goto	i1l33997
 29491  0154                     u579_20:
 29492                           	
 29493  0154                     i1l33983:	
 29494  0154  0C39               	rrf	0+(_rx)^0100h+08h,w
 29495  0155  00F2               	movwf	(??_serial_rx_isr+0)+0
 29496  0156  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 29497  0157  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 29498  0158  3907               	andlw	(1<<3)-1
 29499  0159  00F3               	movwf	(??_serial_rx_isr+1)+0
 29500  015A  0839               	movf	0+(_rx)^0100h+08h,w
 29501  015B  3907               	andlw	(1<<3)-1
 29502  015C  00F4               	movwf	(??_serial_rx_isr+2)+0
 29503  015D  0873               	movf	(??_serial_rx_isr+1)+0,w
 29504  015E  0274               	subwf	(??_serial_rx_isr+2)+0,w
 29505  015F  1803               	skipnc
 29506  0160  2962               	goto	u580_21
 29507  0161  2963               	goto	u580_20
 29508  0162                     u580_21:
 29509  0162  297E               	goto	i1l33987
 29510  0163                     u580_20:
 29511                           	
 29512  0163                     i1l33985:	
 29513  0163  0839               	movf	0+(_rx)^0100h+08h,w
 29514  0164  3907               	andlw	(1<<3)-1
 29515  0165  00F2               	movwf	(??_serial_rx_isr+0)+0
 29516  0166  01F3               	clrf	(??_serial_rx_isr+0)+0+1
 29517  0167  09F2               	comf	(??_serial_rx_isr+0)+0,f
 29518  0168  09F3               	comf	(??_serial_rx_isr+0)+1,f
 29519  0169  0AF2               	incf	(??_serial_rx_isr+0)+0,f
 29520  016A  1903               	skipnz
 29521  016B  0AF3               	incf	(??_serial_rx_isr+0)+1,f
 29522  016C  0C39               	rrf	0+(_rx)^0100h+08h,w
 29523  016D  00F4               	movwf	(??_serial_rx_isr+2)+0
 29524  016E  0CF4               	rrf	(??_serial_rx_isr+2)+0,f
 29525  016F  0C74               	rrf	(??_serial_rx_isr+2)+0,w
 29526  0170  3907               	andlw	(1<<3)-1
 29527  0171  0772               	addwf	0+(??_serial_rx_isr+0)+0,w
 29528  0172  00F5               	movwf	(??_serial_rx_isr+3)+0
 29529  0173  0873               	movf	1+(??_serial_rx_isr+0)+0,w
 29530  0174  1803               	skipnc
 29531  0175  0A73               	incf	1+(??_serial_rx_isr+0)+0,w
 29532  0176  00F6               	movwf	((??_serial_rx_isr+3)+0)+1
 29533  0177  0875               	movf	0+(??_serial_rx_isr+3)+0,w
 29534  0178  3EFF               	addlw	low(-1)
 29535  0179  00F9               	movwf	(_serial_rx_isr$22342)
 29536  017A  30FF               	movlw	high(-1)
 29537  017B  3D76               	addwfc	1+(??_serial_rx_isr+3)+0,w
 29538  017C  00FA               	movwf	1+(_serial_rx_isr$22342)
 29539  017D  29A4               	goto	i1l33989
 29540                           	
 29541  017E                     i1l19296:	
 29542                           	
 29543  017E                     i1l33987:	
 29544  017E  0C39               	rrf	0+(_rx)^0100h+08h,w
 29545  017F  00F2               	movwf	(??_serial_rx_isr+0)+0
 29546  0180  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 29547  0181  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 29548  0182  3907               	andlw	(1<<3)-1
 29549  0183  00F3               	movwf	(??_serial_rx_isr+1)+0
 29550  0184  01F4               	clrf	(??_serial_rx_isr+1)+0+1
 29551  0185  09F3               	comf	(??_serial_rx_isr+1)+0,f
 29552  0186  09F4               	comf	(??_serial_rx_isr+1)+1,f
 29553  0187  0AF3               	incf	(??_serial_rx_isr+1)+0,f
 29554  0188  1903               	skipnz
 29555  0189  0AF4               	incf	(??_serial_rx_isr+1)+1,f
 29556  018A  0839               	movf	0+(_rx)^0100h+08h,w
 29557  018B  3907               	andlw	(1<<3)-1
 29558  018C  0773               	addwf	0+(??_serial_rx_isr+1)+0,w
 29559  018D  00F5               	movwf	(??_serial_rx_isr+3)+0
 29560  018E  0874               	movf	1+(??_serial_rx_isr+1)+0,w
 29561  018F  1803               	skipnc
 29562  0190  0A74               	incf	1+(??_serial_rx_isr+1)+0,w
 29563  0191  00F6               	movwf	((??_serial_rx_isr+3)+0)+1
 29564  0192  0875               	movf	0+(??_serial_rx_isr+3)+0,w
 29565  0193  3E01               	addlw	low(01h)
 29566  0194  00F7               	movwf	(??_serial_rx_isr+5)+0
 29567  0195  3000               	movlw	high(01h)
 29568  0196  3D76               	addwfc	1+(??_serial_rx_isr+3)+0,w
 29569  0197  00F8               	movwf	1+(??_serial_rx_isr+5)+0
 29570  0198  09F7               	comf	(??_serial_rx_isr+5)+0,f
 29571  0199  09F8               	comf	(??_serial_rx_isr+5)+1,f
 29572  019A  0AF7               	incf	(??_serial_rx_isr+5)+0,f
 29573  019B  1903               	skipnz
 29574  019C  0AF8               	incf	(??_serial_rx_isr+5)+1,f
 29575  019D  0877               	movf	0+(??_serial_rx_isr+5)+0,w
 29576  019E  3E08               	addlw	low(08h)
 29577  019F  00F9               	movwf	(_serial_rx_isr$22342)
 29578  01A0  3000               	movlw	high(08h)
 29579  01A1  3D78               	addwfc	1+(??_serial_rx_isr+5)+0,w
 29580  01A2  00FA               	movwf	1+(_serial_rx_isr$22342)
 29581  01A3  29A4               	goto	i1l33989
 29582                           	
 29583  01A4                     i1l19298:	
 29584                           	
 29585  01A4                     i1l33989:	
 29586  01A4  087A               	movf	(_serial_rx_isr$22342+1),w
 29587  01A5  3A80               	xorlw	80h
 29588  01A6  00FF               	movwf	btemp+1
 29589  01A7  3080               	movlw	(high(03h))^80h
 29590  01A8  027F               	subwf	btemp+1,w
 29591  01A9  1D03               	skipz
 29592  01AA  29AD               	goto	u581_25
 29593  01AB  3003               	movlw	low(03h)
 29594  01AC  0279               	subwf	(_serial_rx_isr$22342),w
 29595  01AD                     u581_25:
 29596                           
 29597  01AD  1803               	skipnc
 29598  01AE  29B0               	goto	u581_21
 29599  01AF  29B1               	goto	u581_20
 29600  01B0                     u581_21:
 29601  01B0  29BF               	goto	i1l33997
 29602  01B1                     u581_20:
 29603  01B1  29B3               	goto	i1l19299
 29604                           	line	158
 29605                           	
 29606  01B2                     i1l33991:	
 29607                           ;serial.c: 158: while(!TXIF);
 29608  01B2  29B3               	goto	i1l19299
 29609                           	
 29610  01B3                     i1l19300:	
 29611                           	
 29612  01B3                     i1l19299:	
 29613  01B3  0020               	movlb 0	; select bank0
 29614  01B4  1E11               	btfss	(140/8),(140)&7
 29615  01B5  29B7               	goto	u582_21
 29616  01B6  29B8               	goto	u582_20
 29617  01B7                     u582_21:
 29618  01B7  29B3               	goto	i1l19299
 29619  01B8                     u582_20:
 29620  01B8  29B9               	goto	i1l33993
 29621                           	
 29622  01B9                     i1l19301:	
 29623                           	line	159
 29624                           	
 29625  01B9                     i1l33993:	
 29626                           ;serial.c: 159: TXREG = 0x13;
 29627  01B9  3013               	movlw	(013h)
 29628  01BA  0023               	movlb 3	; select bank3
 29629  01BB  009A               	movwf	(410)^0180h	;volatile
 29630                           	line	160
 29631                           	
 29632  01BC                     i1l33995:	
 29633                           ;serial.c: 160: rx.xon_state = 0;
 29634  01BC  0022               	movlb 2	; select bank2
 29635  01BD  13B9               	bcf	0+(_rx)^0100h+08h,7
 29636  01BE  29BF               	goto	i1l33997
 29637                           	line	161
 29638                           	
 29639  01BF                     i1l19294:	
 29640                           	line	163
 29641                           	
 29642  01BF                     i1l33997:	
 29643                           ;serial.c: 161: }
 29644                           ;serial.c: 163: if (rx.head == rx.tail)
 29645  01BF  0022               	movlb 2	; select bank2
 29646  01C0  0C39               	rrf	0+(_rx)^0100h+08h,w
 29647  01C1  00F2               	movwf	(??_serial_rx_isr+0)+0
 29648  01C2  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 29649  01C3  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 29650  01C4  3907               	andlw	(1<<3)-1
 29651  01C5  00F3               	movwf	(??_serial_rx_isr+1)+0
 29652  01C6  0839               	movf	0+(_rx)^0100h+08h,w
 29653  01C7  3907               	andlw	(1<<3)-1
 29654  01C8  0673               	xorwf	(??_serial_rx_isr+1)+0,w
 29655  01C9  1D03               	skipz
 29656  01CA  29CC               	goto	u583_21
 29657  01CB  29CD               	goto	u583_20
 29658  01CC                     u583_21:
 29659  01CC  29DD               	goto	i1l19292
 29660  01CD                     u583_20:
 29661                           	line	165
 29662                           	
 29663  01CD                     i1l33999:	
 29664                           ;serial.c: 165: rx.tail++;
 29665  01CD  0C39               	rrf	0+(_rx)^0100h+08h,w
 29666  01CE  00F2               	movwf	((??_serial_rx_isr+0)+0)
 29667  01CF  0CF2               	rrf	((??_serial_rx_isr+0)+0),f
 29668  01D0  0C72               	rrf	((??_serial_rx_isr+0)+0),w
 29669  01D1  3907               	andlw	(1<<3)-1
 29670  01D2  00F2               	movwf	((??_serial_rx_isr+0)+0)
 29671  01D3  0AF2               	incf	(??_serial_rx_isr+0)+0
 29672  01D4  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 29673  01D5  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 29674  01D6  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 29675  01D7  0839               	movf	0+(_rx)^0100h+08h,w
 29676  01D8  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29677  01D9  39C7               	andlw	not (((1<<3)-1)<<3)
 29678  01DA  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29679  01DB  00B9               	movwf	0+(_rx)^0100h+08h
 29680  01DC  29DD               	goto	i1l19292
 29681                           	
 29682  01DD                     i1l19302:	
 29683                           	line	167
 29684                           	
 29685  01DD                     i1l19292:	
 29686  01DD  0008               	return
 29687                           	opt stack 0
 29688                           GLOBAL	__end_of_serial_rx_isr
 29689  01DE                     	__end_of_serial_rx_isr:
 29690 ;; =============== function _serial_rx_isr ends ============
 29691                           
 29692                           	signat	_serial_rx_isr,88
 29693                           	global	_catsensor_isr_input
 29694                           psect	text3343,local,class=CODE,delta=2
 29695                           global __ptext3343
 29696  2832                     __ptext3343:
 29697                           
 29698 ;; *************** function _catsensor_isr_input *****************
 29699 ;; Defined at:
 29700 ;;		line 167 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29701 ;; Parameters:    Size  Location     Type
 29702 ;;		None
 29703 ;; Auto vars:     Size  Location     Type
 29704 ;;		None
 29705 ;; Return value:  Size  Location     Type
 29706 ;;		None               void
 29707 ;; Registers used:
 29708 ;;		None
 29709 ;; Tracked objects:
 29710 ;;		On entry : 0/0
 29711 ;;		On exit  : 0/0
 29712 ;;		Unchanged: 0/0
 29713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29718 ;;Total ram usage:        0 bytes
 29719 ;; Hardware stack levels used:    1
 29720 ;; This function calls:
 29721 ;;		Nothing
 29722 ;; This function is called by:
 29723 ;;		_isr
 29724 ;; This function uses a non-reentrant model
 29725 ;;
 29726                           psect	text3343
 29727                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29728                           	global	__size_of_catsensor_isr_input
 29729  000C                     	__size_of_catsensor_isr_input	equ	__end_of_catsensor_isr_input-_catsensor_isr_input
 29730                           	
 29731  2832                     _catsensor_isr_input:	
 29732                           	opt	stack 1
 29733                           ; Regs used in _catsensor_isr_input: []
 29734                           	line	169
 29735                           	
 29736  2832                     i1l33947:	
 29737                           ;catsensor.c: 168: if ( (pinging) &&
 29738                           ;catsensor.c: 169: !(PORTB & (1U << (4))) ) {
 29739  2832  1F71               	btfss	(_pinging/8),(_pinging)&7
 29740  2833  2835               	goto	u574_21
 29741  2834  2836               	goto	u574_20
 29742  2835                     u574_21:
 29743  2835  283D               	goto	i1l13046
 29744  2836                     u574_20:
 29745                           	
 29746  2836                     i1l33949:	
 29747  2836  0020               	movlb 0	; select bank0
 29748  2837  1A0D               	btfsc	(13),(4)&7	;volatile
 29749  2838  283A               	goto	u575_21
 29750  2839  283B               	goto	u575_20
 29751  283A                     u575_21:
 29752  283A  283D               	goto	i1l13046
 29753  283B                     u575_20:
 29754                           	line	170
 29755                           	
 29756  283B                     i1l33951:	
 29757                           ;catsensor.c: 170: echoed = 1;
 29758  283B  1670               	bsf	(_echoed/8),(_echoed)&7
 29759  283C  283D               	goto	i1l13046
 29760                           	line	171
 29761                           	
 29762  283D                     i1l13045:	
 29763                           	line	172
 29764                           	
 29765  283D                     i1l13046:	
 29766  283D  0008               	return
 29767                           	opt stack 0
 29768                           GLOBAL	__end_of_catsensor_isr_input
 29769  283E                     	__end_of_catsensor_isr_input:
 29770 ;; =============== function _catsensor_isr_input ends ============
 29771                           
 29772                           	signat	_catsensor_isr_input,88
 29773                           	global	_catsensor_isr_timer
 29774                           psect	text3344,local,class=CODE,delta=2
 29775                           global __ptext3344
 29776  2993                     __ptext3344:
 29777                           
 29778 ;; *************** function _catsensor_isr_timer *****************
 29779 ;; Defined at:
 29780 ;;		line 136 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29781 ;; Parameters:    Size  Location     Type
 29782 ;;		None
 29783 ;; Auto vars:     Size  Location     Type
 29784 ;;		None
 29785 ;; Return value:  Size  Location     Type
 29786 ;;		None               void
 29787 ;; Registers used:
 29788 ;;		wreg, status,2, status,0
 29789 ;; Tracked objects:
 29790 ;;		On entry : 0/0
 29791 ;;		On exit  : 0/0
 29792 ;;		Unchanged: 0/0
 29793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29798 ;;Total ram usage:        1 bytes
 29799 ;; Hardware stack levels used:    1
 29800 ;; This function calls:
 29801 ;;		Nothing
 29802 ;; This function is called by:
 29803 ;;		_isr
 29804 ;; This function uses a non-reentrant model
 29805 ;;
 29806                           psect	text3344
 29807                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29808                           	line	136
 29809                           	global	__size_of_catsensor_isr_timer
 29810  001C                     	__size_of_catsensor_isr_timer	equ	__end_of_catsensor_isr_timer-_catsensor_isr_timer
 29811                           	
 29812  2993                     _catsensor_isr_timer:	
 29813                           	opt	stack 1
 29814                           ; Regs used in _catsensor_isr_timer: [wreg+status,2+status,0]
 29815                           	line	137
 29816                           	
 29817  2993                     i1l33931:	
 29818                           ;catsensor.c: 137: if (pinging) {
 29819  2993  1F71               	btfss	(_pinging/8),(_pinging)&7
 29820  2994  2996               	goto	u572_21
 29821  2995  2997               	goto	u572_20
 29822  2996                     u572_21:
 29823  2996  29AE               	goto	i1l13042
 29824  2997                     u572_20:
 29825                           	line	139
 29826                           	
 29827  2997                     i1l33933:	
 29828                           ;catsensor.c: 139: pinging = 0;
 29829  2997  1371               	bcf	(_pinging/8),(_pinging)&7
 29830                           	line	141
 29831                           	
 29832  2998                     i1l33935:	
 29833                           ;catsensor.c: 141: PR2 = 0 ;
 29834  2998  0020               	movlb 0	; select bank0
 29835  2999  019B               	clrf	(27)	;volatile
 29836                           	line	145
 29837                           ;catsensor.c: 145: T2CON = 0 ;
 29838  299A  019C               	clrf	(28)	;volatile
 29839                           	line	147
 29840                           ;catsensor.c: 147: CCPR1L = 0 ;
 29841  299B  0025               	movlb 5	; select bank5
 29842  299C  0191               	clrf	(657)^0280h	;volatile
 29843                           	line	148
 29844                           	
 29845  299D                     i1l33937:	
 29846                           ;catsensor.c: 148: TMR2IE = 0;
 29847  299D  0021               	movlb 1	; select bank1
 29848  299E  1091               	bcf	(1161/8)^080h,(1161)&7
 29849                           	line	149
 29850                           	
 29851  299F                     i1l33939:	
 29852                           ;catsensor.c: 149: TMR2IF = 0;
 29853  299F  0020               	movlb 0	; select bank0
 29854  29A0  1091               	bcf	(137/8),(137)&7
 29855                           	line	150
 29856                           	
 29857  29A1                     i1l33941:	
 29858                           ;catsensor.c: 150: TMR2ON = 0;
 29859  29A1  111C               	bcf	(226/8),(226)&7
 29860                           	line	151
 29861                           ;catsensor.c: 151: CCP1CON = 0;
 29862  29A2  0025               	movlb 5	; select bank5
 29863  29A3  0193               	clrf	(659)^0280h	;volatile
 29864                           	line	152
 29865                           	
 29866  29A4                     i1l33943:	
 29867                           ;catsensor.c: 152: LATC &= ~(1U << (2));
 29868  29A4  30FB               	movlw	(0FBh)
 29869  29A5  00F2               	movwf	(??_catsensor_isr_timer+0)+0
 29870  29A6  0872               	movf	(??_catsensor_isr_timer+0)+0,w
 29871  29A7  0022               	movlb 2	; select bank2
 29872  29A8  058E               	andwf	(270)^0100h,f	;volatile
 29873                           	line	154
 29874                           	
 29875  29A9                     i1l33945:	
 29876                           ;catsensor.c: 154: detected_cur = echoed;
 29877  29A9  1170               	bcf	(_detected_cur/8),(_detected_cur)&7
 29878  29AA  1E70               	btfss	(_echoed/8),(_echoed)&7
 29879  29AB  29AD               	goto	u573_25
 29880  29AC  1570               	bsf	(_detected_cur/8),(_detected_cur)&7
 29881  29AD                     u573_25:
 29882                           
 29883  29AD  29AE               	goto	i1l13042
 29884                           	line	155
 29885                           	
 29886  29AE                     i1l13041:	
 29887                           	line	156
 29888                           	
 29889  29AE                     i1l13042:	
 29890  29AE  0008               	return
 29891                           	opt stack 0
 29892                           GLOBAL	__end_of_catsensor_isr_timer
 29893  29AF                     	__end_of_catsensor_isr_timer:
 29894 ;; =============== function _catsensor_isr_timer ends ============
 29895                           
 29896                           	signat	_catsensor_isr_timer,88
 29897                           	global	_timer_isr
 29898                           psect	text3345,local,class=CODE,delta=2
 29899                           global __ptext3345
 29900  2AEF                     __ptext3345:
 29901                           
 29902 ;; *************** function _timer_isr *****************
 29903 ;; Defined at:
 29904 ;;		line 369 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 29905 ;; Parameters:    Size  Location     Type
 29906 ;;		None
 29907 ;; Auto vars:     Size  Location     Type
 29908 ;;		None
 29909 ;; Return value:  Size  Location     Type
 29910 ;;		None               void
 29911 ;; Registers used:
 29912 ;;		wreg
 29913 ;; Tracked objects:
 29914 ;;		On entry : 0/0
 29915 ;;		On exit  : 0/0
 29916 ;;		Unchanged: 0/0
 29917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29922 ;;Total ram usage:        0 bytes
 29923 ;; Hardware stack levels used:    1
 29924 ;; This function calls:
 29925 ;;		Nothing
 29926 ;; This function is called by:
 29927 ;;		_isr
 29928 ;; This function uses a non-reentrant model
 29929 ;;
 29930                           psect	text3345
 29931                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 29932                           	line	369
 29933                           	global	__size_of_timer_isr
 29934  0027                     	__size_of_timer_isr	equ	__end_of_timer_isr-_timer_isr
 29935                           	
 29936  2AEF                     _timer_isr:	
 29937                           	opt	stack 1
 29938                           ; Regs used in _timer_isr: [wreg]
 29939                           	line	371
 29940                           	
 29941  2AEF                     i1l33927:	
 29942                           ;timer.c: 371: overflows++;
 29943  2AEF  3001               	movlw	01h
 29944  2AF0  0021               	movlb 1	; select bank1
 29945  2AF1  07CA               	addwf	(_overflows)^080h,f	;volatile
 29946  2AF2  3000               	movlw	0
 29947  2AF3  3DCB               	addwfc	(_overflows+1)^080h,f	;volatile
 29948  2AF4  3000               	movlw	0
 29949  2AF5  3DCC               	addwfc	(_overflows+2)^080h,f	;volatile
 29950  2AF6  3000               	movlw	0
 29951  2AF7  3DCD               	addwfc	(_overflows+3)^080h,f	;volatile
 29952                           	line	377
 29953                           ;timer.c: 377: if (overflows >= 0xFFFF0000) {
 29954  2AF8  30FF               	movlw	0FFh
 29955  2AF9  024D               	subwf	(_overflows+3)^080h,w	;volatile
 29956  2AFA  1D03               	skipz
 29957  2AFB  2B06               	goto	u571_25
 29958  2AFC  30FF               	movlw	0FFh
 29959  2AFD  024C               	subwf	(_overflows+2)^080h,w	;volatile
 29960  2AFE  1D03               	skipz
 29961  2AFF  2B06               	goto	u571_25
 29962  2B00  3000               	movlw	0
 29963  2B01  024B               	subwf	(_overflows+1)^080h,w	;volatile
 29964  2B02  1D03               	skipz
 29965  2B03  2B06               	goto	u571_25
 29966  2B04  3000               	movlw	0
 29967  2B05  024A               	subwf	(_overflows)^080h,w	;volatile
 29968  2B06                     u571_25:
 29969  2B06  1C03               	skipc
 29970  2B07  2B09               	goto	u571_21
 29971  2B08  2B0A               	goto	u571_20
 29972  2B09                     u571_21:
 29973  2B09  2B15               	goto	i1l21407
 29974  2B0A                     u571_20:
 29975                           	line	378
 29976                           	
 29977  2B0A                     i1l33929:	
 29978                           ;timer.c: 378: overflows = 0;
 29979  2B0A  3000               	movlw	0
 29980  2B0B  00CD               	movwf	(_overflows+3)^080h	;volatile
 29981  2B0C  3000               	movlw	0
 29982  2B0D  00CC               	movwf	(_overflows+2)^080h	;volatile
 29983  2B0E  3000               	movlw	0
 29984  2B0F  00CB               	movwf	(_overflows+1)^080h	;volatile
 29985  2B10  3000               	movlw	0
 29986  2B11  00CA               	movwf	(_overflows)^080h	;volatile
 29987                           
 29988  2B12  2B13               	goto	i1l21405
 29989                           	line	380
 29990                           ;timer.c: 380: while(1);
 29991                           	
 29992  2B13                     i1l21404:	
 29993                           	
 29994  2B13                     i1l21405:	
 29995  2B13  2B13               	goto	i1l21405
 29996                           	
 29997  2B14                     i1l21406:	
 29998  2B14  2B15               	goto	i1l21407
 29999                           	line	381
 30000                           	
 30001  2B15                     i1l21403:	
 30002                           	line	382
 30003                           	
 30004  2B15                     i1l21407:	
 30005  2B15  0008               	return
 30006                           	opt stack 0
 30007                           GLOBAL	__end_of_timer_isr
 30008  2B16                     	__end_of_timer_isr:
 30009 ;; =============== function _timer_isr ends ============
 30010                           
 30011                           	signat	_timer_isr,88
 30012                           	global	fptotal
 30013  000B                     fptotal equ 11
 30014                           	file ""
 30015                           	line	#
 30016                           psect	functab,class=CODE,delta=2,reloc=256
 30017                           global __pfunctab
 30018  0100                     __pfunctab:
 30019                           	global	fptable
 30020  0100                     fptable:
 30021  0100  3181               	movlp high(fptable)
 30022  0101  0782               	addwf pc
 30023                           	global	fpbase
 30024  0102                     fpbase:
 30025  0102  2902               	goto fpbase	; Call via a null pointer and you will get stuck here.
 30026                           	file ""
 30027                           	line	#
 30028  0103                     fp__help:
 30029  0103  31AF  2FA1         	ljmp	_help
 30030                           	file ""
 30031                           	line	#
 30032  0105                     fp__echo:
 30033  0105  31A4  2CBD         	ljmp	_echo
 30034                           	file ""
 30035                           	line	#
 30036  0107                     fp__setupbutton_event:
 30037  0107  31B7  2FC6         	ljmp	_setupbutton_event
 30038                           	file ""
 30039                           	line	#
 30040  0109                     fp__heatsensor_event:
 30041  0109  31A8  28BD         	ljmp	_heatsensor_event
 30042                           	file ""
 30043                           	line	#
 30044  010B                     fp__startbutton_event:
 30045  010B  31B7  2FD4         	ljmp	_startbutton_event
 30046                           	global	btemp
 30047  007E                     	btemp set 07Eh
 30048                           
 30049                           	DABS	1,126,2	;btemp
 30050                           	global	wtemp0
 30051  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Dec 05 14:29:47 2022

           __end_of_set_LED_Error 284D                                 pc 0002                      proc_line@len 005A  
                  ___bmul@product 0023                                _RD 0CA8            __end_of_set_LED_Locked 287A  
                              _WR 0CA9                       _wet_program 036C                                _rx 0131  
             ___wmul@multiplicand 0023                    _update_display 098C                     proc_line@argc 0058  
                   proc_line@argv 0051                     proc_line@line 005C            __end_of_interrupt_init 37A2  
                             _GIE 005F                               _PR2 001B                               _RX9 0CEE  
                             _TX9 0CF6                               _isr 0004                       _start_short 01DE  
                             wreg 0009           userinterface_init@flags 004B                  ?_get_instruction 0072  
                  proc_line@index 0056            ??_litterlanguage_event 0058            ??_litterlanguage_pause 004F  
                   rtc_init@flags 003D            ??_litterlanguage_start 004F                              l2081 2778  
                            l2090 27C9                              l2082 27AC                              l2091 27E8  
                            l2083 2787                              l2092 27FE                              l2084 27AB  
                            l2093 27FE                              l2085 2794                              l2086 27AA  
                            l2087 27A0                              l2096 37A1                              l2088 27A9  
                            l2089 27BC                              l4300 1446                              l4301 1470  
                            l4230 25D4                              l4310 2213                              l4231 25E1  
                            l4304 3779                              l4232 262F                              l4224 2617  
                            l4320 235A                              l4240 1E92                              l4233 2600  
                            l4225 25B6                              l4321 234E                              l4401 0D0B  
                            l4241 1FFF                              l4330 2D2A                              l4234 260D  
                            l4226 25F1                              l4322 235A                              l4314 22FA  
                            l4410 0D89                              l4250 1F39                              l4242 1F1C  
                            l4235 260E                              l4227 25BE                              l4307 21B4  
                            l4403 0D11                              l4251 1FD0                              l4243 1ECC  
                            l4340 28F2                              l4332 2D08                              l4236 260F  
                            l4228 25FF                              l4316 22FF                              l4308 2214  
                            l4420 0DE3                              l4412 0D93                              l4252 1FB8  
                            l4244 1F01                              l4341 28F2                              l4229 25C7  
                            l4237 262F                              l4317 233A                              l4325 28CD  
                            l4309 2202                              l4421 0DF2                              l4405 0D1E  
                            l4261 1F89                              l4245 1F1B                              l4334 2D0D  
                            l4318 232D                              l4422 0DF3                              l4414 0D99  
                            l4246 1FF4                              l4262 1FA4                              l4254 1F5F  
                            l4335 2D2A                              l4319 2339                              l4431 0E33  
                            l4407 0D24                              l4263 1FB7                              l4247 1F1D  
                            l4344 28FF                              l4280 2D9F                              l4440 0E82  
                            l4424 0DFD                              l4416 0DA6                              l4408 0D4A  
                            l4360 0B6D                              l4248 1FFF                              l4264 1FC7  
                            l4256 1F64                              l4345 28F6                              l4273 2DA9  
                            l4281 2DA9                              l4353 0FEC                              l4441 0EB2  
                            l4433 0E39                              l4409 0D54                              l4265 1FD1  
                            l4257 1FAE                              l4249 1F1E                              l4338 28EC  
                            l4346 28F7                              l4290 149F                              l4450 0F8A  
                            l4442 0EB6                              l4434 0E69                              l4426 0E03  
                            l4418 0DAC                              l4370 0BBF                              l4362 0B73  
                            l4354 0B4F                              l4266 1FE1                              l4339 28E1  
                            l4347 2905                              l4275 2D7F                              l4291 137B  
                            l4363 0FF7                              l4451 0FAA                              l4443 0EBB  
                            l4435 0E6D                              l4427 0E1F                              l4419 0DE9  
                            l4267 1FEE                              l4259 1F92                              l4284 3798  
                            l4348 2905                              l4460 25B2                              l4292 149A  
                            l4452 0FBB                              l4436 0E72                              l4428 0E28  
                            l4372 0BC5                              l4364 0BA1                              l4356 0B7A  
                            l4268 1FEF                              l4461 2550                              l4277 2D84  
                            l4293 1381                              l4453 0FD0                              l4445 0EC5  
                            l4429 0E29                              l4381 0C16                              l4373 0BF3  
                            l4462 256D                              l4278 2D99                              l4294 13B1  
                            l4454 0FFF                              l4438 0E7C                              l4390 0CA7  
                            l4382 0C93                              l4366 0BCC                              l4358 0B80  
                            l4463 256C                              l4279 2D92                              l4295 13D2  
                            l4447 0ECB                              l4383 0C85                              l4375 0BFD  
                            l4464 2588                              l4296 13FC                              l4448 0F4C  
                            l4392 0CAD                              l4384 0C56                              l4368 0BD2  
                            l4457 25A6                              l4465 2587                              l4297 13FB  
                            l4289 1262                              l4449 0F56                              l4385 0C7B  
                            l4377 0C03                              l4466 2589                              l4458 2538  
                            l4298 141D                              l4394 0CBA                              l4386 0C84  
                            l4467 259B                              l4459 254F                              l4299 1447  
                            l4387 0C92                              l4379 0C10                              l4468 259C  
                            l4396 0CC0                              l4388 0C9D                              l4469 25B2  
                            l4397 0CEE                              l4398 0CF7                              l6511 2978  
                            l4399 0D01                              l6508 37B7                              ?_isr 0072  
                            l8700 2225                              l8701 2242                              l8710 225F  
                            l8711 2260                              l8703 2239                              l8720 21AB  
                            l8800 01F3                              l8640 1D52                              l8704 2272  
                            l8712 226D                              l8721 217E                              l8801 01FE  
                            l8641 1DE7                              l8713 226E                              l8705 2243  
                            l8810 291A                              l8730 2E9D                              l8634 2C08  
                            l8722 2160                              l8802 01FE                              l8650 1DC0  
                            l8642 1D58                              l8706 227D                              l8714 226F  
                            l8731 2EC6                              l8635 2C1D                              l8723 21A3  
                            l8651 1DE5                              l8643 1D5A                              l8715 2270  
                            l8707 2244                              l8820 2712                              l8740 098F  
                            l8724 21A2                              l8660 1E0D                              l8652 1DD8  
                            l8644 1D94                              l8708 2251                              l8716 227D  
                            l8813 2889                              l8821 2723                              l8733 2EC4  
                            l8741 09A2                              l8725 21A0                              l8805 2016  
                            l8661 1E82                              l8653 1DDF                              l8645 1D8A  
                            l8709 2252                              l8822 2734                              l8734 2ED0  
                            l8750 0A6F                              l8742 09AB                              l8726 21AB  
                            l8806 201A                              l8662 1E63                              l8654 1E0F  
                            l8646 1D93                              l8638 1D57                              l8823 274D  
                            l8735 2EE7                              l8743 0A64                              l8751 09EC  
                            l8719 2153                              l8807 201A                              l8663 1E39  
                            l8655 1DF4                              l8647 1DF3                              l8639 1D4F  
                            l8816 273E                              l8760 0A57                              l8752 09ED  
                            l8744 09AC                              l8672 37E1                              l8664 1E79  
                            l8656 1E28                              l8648 1D95                              l8817 26C1  
                            l8729 2E98                              l8761 0A61                              l8753 09EE  
                            l8745 09AE                              l8681 18A6                              l8665 1E47  
                            l8657 1DF5                              l8649 1DBF                              l8818 274D  
                            l8770 0B3C                              l8738 0B0D                              l8754 09EF  
                            l8762 0B19                              l8746 09AF                              l8690 1927  
                            l8682 18B9                              l8666 1E54                              l8658 1DFD  
                            l8819 26F1                              l8771 0B3C                              l8763 0A70  
                            l8755 09F0                              l8747 09B0                              l8739 098D  
                            l8691 1905                              l8683 18DB                              l8675 37D3  
                            l8667 1E61                              l8659 1E05                              l8764 0AC1  
                            l8756 0A37                              l8748 09B1                              l8780 245B  
                            l8692 1938                              l8684 18C9                              l8668 1E8B  
                            l8765 0AC8                              l8757 0A62                              l8749 09B2  
                            l8781 24BC                              l8693 1907                              l8685 18DA  
                            l8669 1E8B                              l8766 0AC9                              l8758 0A58  
                            l8774 24B0                              l8790 249B                              l8782 2460  
                            l8686 1941                              l8694 1910                              l8767 0B35  
                            l8759 0A4E                              l8791 2498                              l8783 246C  
                            l8775 2447                              l8695 191A                              l8679 18A1  
                            l8768 0B2B                              l8784 249E                              l8792 249A  
                            l8776 2449                              l8696 1924                              l8688 18FA  
                            l8769 0B34                              l8793 24AE                              l8785 2477  
                            l8689 193D                              l8697 1941                              l8786 249D  
                            l8794 24BC                              l8778 2458                              l8787 2482  
                            l8788 249C                              l8797 01FF                              l8789 248D  
                            STR_1 0606                              STR_2 0789                              STR_3 0738  
                            STR_4 0779                              STR_5 0640                              STR_6 0861  
                            STR_7 0666                              STR_8 0653                              STR_9 08E4  
                            _BRGH 0CF2                              _CREN 0CEC                              _FERR 0CEA  
                            _CSRC 0CF7                              _LATA 010C                              _LATB 010D  
                            _LATC 010E                              _LATD 010F                              _LATE 0110  
                            u6000 2F32                              u6001 2F31                              u6100 2C31  
                            u6005 2F2E                              u6101 2C30                              u6110 100D  
                            u6111 100C                              u6120 101D                              u6121 101C  
               ??_postponetimeout 0027                              u6050 2294                              u6130 104E  
                            u6051 2293                              u6131 104D                              _PEIE 005E  
                            u6060 22BE                              u6061 22BD                              u6070 22C2  
                            u6071 22C1                              u6135 104A                              u6080 22D2  
                            u6081 22D1                              u6090 22D8                              u6091 22D7  
                            _RCIE 048D                              _RCIF 008D                              u6510 20BB  
                            u6511 20BA                              u5640 2B28                              u6600 1A51  
                            u5641 2B27                              u6505 20A3                              u6530 20D2  
                            u6610 1A6D                              u6531 20D1                              u6515 20B7  
                            u6620 1A94                              u6525 20C6                              u6605 1A4D  
                            u6470 208C                              u6630 1AA3                              u6471 208B  
                            u6615 1A69                              u6640 1ABF                              u6641 1ABE  
                            u6625 1A90                              u6490 20A0                              _OERR 0CE9  
                            u6491 209F                              u6635 1A9F                              u6580 1A0C  
                            u6485 2091                              u6581 1A0B                              u6590 1A1A  
                            u9410 2C55                              u9411 2C54                              u6595 1A16  
                            u9420 2C71                              u9500 2DF0                              u5980 2E2D  
                            u9421 2C70                              u9501 2DEF                              u9430 2C80  
                            u9510 1C23                              u5990 2EF7                              u9431 2C7F  
                            u9511 1C22                              u5991 2EF6                              u9440 2A67  
                            u9520 1C4E                              u9441 2A66                              u9521 1C4D  
                            u9450 2890                              u9530 1CAB                              u9531 1CAA  
                            u9515 1C1F                              u9540 2BEE                              u9620 293A  
                            u9700 094E                              u9525 1C4A                              u9541 2BED  
                            u9621 2939                              u9701 094D                              u9470 2926  
                            u9550 2B6F                              u9630 2940                              u9471 2925  
                            u9535 1CA7                              u9551 2B6E                              u9631 293F  
                            u9480 28A1                              u9560 2B77                              u9640 2981  
                            u9720 0960                              u9800 2D50                              u9465 2921  
                            u9545 2BEA                              u9561 2B76                              u9641 2980  
                            u9721 095F                              u9801 2D4F                              u9490 28B2  
                            u9570 2B7F                              u9650 298F                              u9571 2B7E  
                            u9651 298E                              u9715 0953                              u9580 2B8F  
                            u9660 2AD2                              u9740 0971                              u9820 2D60  
                            u9900 00EE                              u9581 2B8E                              u9661 2AD1  
                            u9741 0970                              u9821 2D5F                              u9805 2D4C  
                            u9901 00ED                              u9830 2CC9                              u9910 14AC  
                            u9735 0963                              u9815 2D56                              u9831 2CC8  
                            u9911 14AB                              u9760 0982                              u9920 14D5  
                            u9761 0981                              u9745 096D                              u9921 14D4  
                            u9690 2AE6                              u9770 2D32                              u9930 150B  
                            u9691 2AE5                              u9675 2AD7                              u9755 0978  
                            u9771 2D31                              u9931 150A                              u9860 2CE8  
                            u9940 1518                              u9685 2ADC                              u9861 2CE7  
                            u9845 2CD3                              u9941 1517                              u9790 2D44  
                            u9870 00A2                              u9950 1544                              u9791 2D43  
                            u9855 2CDA                              u9871 00A1                              u9951 1543  
                            u9880 00E4                              u9960 155F                              u9785 2D37  
                            u9881 00E3                              u9961 155E                              u9890 00E9  
                            u9970 1578                              u9891 00E8                              u9971 1577  
                            u9980 157D                              u9990 158C                              u9991 158B  
                            _SPEN 0CEF                              u9995 1588                              _TXIE 048C  
                            _WREN 0CAA                              _TXEN 0CF5                              _TXIF 008C  
                            _SYNC 0CF4                              _WPUB 020D                    ??_eeprom_write 0022  
                            _WPUE 0210             ??_catsensor_isr_input 0072                serial_init@bitrate 002F  
               timeoutnow@timer_p 0025                serial_init@divider 003F             ??_catsensor_isr_timer 0072  
                            _nBOR 04B0                              _nPOR 04B1                  ?_exe_instruction 0072  
                            _echo 24BD                              _help 2FA1                              _main 274E  
               _startbutton_event 37D4                              fsr0h 0005                              fsr1h 0007  
                            fsr0l 0004                              indf0 0000                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              start 004E  
romwashprogram_getins@instruction 0024               timeoutnever@timer_p 0025                 ___bmul@multiplier 0024  
              proc_char@curcolumn 0067             _exe_instruction$30234 00A0             _exe_instruction$30235 00A2  
                           S39171 2800                             S39173 1800                             S39185 281E  
                           S39169 00F3            __end_of_update_display 0B3D           ??_litterlanguage_paused 0021  
                           ??_isr 007B               ??_startbutton_event 0041                   ?_set_LED_Locked 002E  
                _update_autotimer 26BE                  _heatsensor_event 28BD                     ?_gettimestamp 0021  
                           l13031 37F0                             l13034 2662                             l13035 2688  
                           l10900 2E29                             l13036 26BD                             l10901 2DFE  
                           l13037 26BC                             l10902 2E07                             l10910 284C  
                           l13038 26BD                             l10903 2E10                             l21400 1D2D  
                           l10904 2E19                             l10905 2E3F                             l10913 2879  
                           l10930 2A90                             l10906 2E36                             l10922 37FF  
                           l10931 2AA5                             l10907 2E3F                             l10916 285B  
                           l15100 2A41                             l10925 2A99                             l10941 2ABD  
                           l15101 2A4D                             l10934 2A0C                             l10926 2A85  
                           l10950 2A2A                             l10942 2AA9                             l15102 2A42  
                           l10935 2A05                             l10927 2A86                             l10951 2A23  
                           l10943 2AAA                             l10919 286A                             l15111 1843  
                           l15103 2A53                             l10936 2A21                             l10928 2AA5  
                           l10952 2A3F                             l10944 2AC9                             l15120 1871  
                           l15112 1837                             l15104 2A47                             l21353 37AC  
                           l10937 2A08                             l10929 2A8C                             l10953 2A26  
                           l10945 2AB0                             l21361 2EF9                             l15121 188B  
                           l15113 1836                             l15105 2A5E                             l10881 107F  
                           l10970 376A                             l10938 2A1F                             l10954 2A3D  
                           l10946 2AB8                             l10962 376F                             l21362 2F42  
                           l10874 00A4                             l15122 188A                             l15114 1842  
                           l15106 2A5E                             l10890 1249                             l10882 1099  
                           l10947 2AC9                             l21363 2F42                             l10875 00E4  
                           l15131 1B07                             l15123 1889                             l15115 1841  
                           l10891 11DB                             l10883 10B3                             l10876 00EA  
                           l21372 23A2                             l21356 20F9                             l15140 1B41  
                           l15132 1B08                             l15116 188C                             l15124 1888  
                           l10892 11FF                             l10884 10BD                             l10957 2893  
                           l10965 28A4                             l10973 28B5                             l10877 00F0  
                           l21373 239E                             l21357 2142                             l10981 23FF  
                           l15133 1B67                             l15117 1872                             l15125 188C  
                           l10893 1248                             l10885 1158                             l10958 289A  
                           l10966 28AB                             l10974 28BC                             l21366 29E6  
                           l10878 00F2                             l21374 23CE                             l21358 2142  
                           l10982 2445                             l15150 1B8B                             l15142 1B65  
                           l15134 1B09                             l15118 1853                             l10894 1247  
                           l10886 114D                             l10959 289A                             l10967 28AB  
                           l10975 28BC                             l21391 1D24                             l21375 23A1  
                           l15151 1B94                             l15143 1B66                             l15135 1B14  
                           l15119 1863                             l10895 1255                             l10887 113C  
                           l21392 1CF9                             l21376 23CE                             l15160 2E8D  
                           l15152 1B9D                             l15144 1B71                             l15136 1B0A  
                           l15128 1AE4                             l10888 1161                             l21369 29CA  
                           l21393 1C25                             l21377 23CA                             l15161 2E87  
                           l15153 1BEF                             l15145 1BE3                             l15137 1B29  
                           l15129 1AD6                             l10889 1255                             l10978 3774  
                           l21386 2DB2                             l21394 1C81                             l10898 2E1B  
                           l21378 23CD                             l15170 2514                             l15146 1BA6  
                           l15154 1BEF                             l15138 1B40                             l21387 2DF1  
                           l21395 1D23                             l10899 2DF5                             l15147 1B82  
                           l15139 1B46                             l21388 2DF1                             l21396 1C82  
                           l15180 2FC1                             l15172 2520                             l15164 24D2  
                           l15148 1BE2                             l21397 1CE5                             l15157 2E71  
                           l15181 2FFB                             l15165 2536                             l15149 1B83  
                           l21398 1CEE                             l23510 14A6                             l15158 2E45  
                           l15174 2525                             l15166 2516                             l21399 1CEF  
                           l23511 14B1                             l15159 2E6C                             l15095 37C5  
                           l15167 24F5                             l23520 150C                             l23512 14B6  
                           l15096 37C5                             l15168 2515                             l23521 1546  
                           l23513 14BE                             l15177 2FB8                             l15169 250E  
                           l23530 154B                             l23522 1538                             l23514 14B7  
                           l15178 2FFF                             l23531 160B                             l23523 151E  
                           l23515 14C8                             l15179 2FE4                             l15099 2A54  
                           l23540 15A1                             l23532 154C                             l23524 1545  
                           l23516 14C7                             l23460 19F2                             l23509 17E7  
                           l23541 15A4                             l23533 154C                             l23525 1548  
                           l23517 14C9                             l23461 1943                             l23454 2B24  
                           l23550 162B                             l23526 15E6                             l23542 15AA  
                           l23534 154E                             l23518 150D                             l17222 2A03  
                           l17230 2076                             l23470 19C0                             l23462 1945  
                           l23455 2B1D                             l23551 162A                             l23543 15A5  
                           l23535 1564                             l23527 1549                             l23519 14D9  
                           l17223 2A03                             l17231 207A                             l23471 19BF  
                           l23463 1954                             l23456 2B28                             l23528 17FF  
                           l23560 16B4                             l23552 1637                             l23544 15BA  
                           l23536 156C                             l23464 19FE                             l23472 19DE  
                           l23457 2B3D                             l23561 1678                             l23553 1647  
                           l23545 15C9                             l23537 1567                             l23529 154A  
                           l23473 19DD                             l23465 196B                             l23570 1702  
                           l23554 16A8                             l23562 1683                             l23546 15BB  
                           l23538 1579                             l17226 207A                             l17234 2BC1  
                           l23466 197A                             l23474 19FE                             l23571 1706  
                           l23563 16A6                             l23555 1648                             l23547 15DE  
                           l23539 1592                             l17227 2079                             l23467 1983  
                           l23492 2929                             l23580 176A                             l23572 1725  
                           l23564 169B                             l23556 1649                             l23548 15DF  
                           l17228 2078                             l23468 1989                             l23477 377F  
                           l23493 2930                             l34221 2DFE                             l34301 2C4C  
                           l23581 1759                             l23573 1729                             l23565 16C3  
                           l23557 1654                             l23549 15E0                             l17229 2077  
                           l23469 199E                             l23494 2930                             l23590 17A4  
                           l23582 1769                             l23574 1752                             l23566 16D2  
                           l23558 1677                             l34047 3792                             l34223 2E07  
                           l34231 2E29                             l34311 1036                             l34303 1002  
                           l23591 17E6                             l23583 1775                             l23575 1738  
                           l23567 16D2                             l23559 166C                             l23592 17FE  
                           l23584 17DA                             l23576 1751                             l23568 16E3  
                           l23489 3785                             l34049 3798                             l34233 2E2D  
                           l34225 2E10                             l34217 2DF4                             l34241 2EF8  
                           l34321 1052                             l34313 1037                             l34305 1003  
                           l23585 1777                             l23577 1740                             l23569 1707  
                           l23593 17FF                             l23586 17C8                             l23578 1750  
                           l34235 2E36                             l34227 2E1A                             l34219 2DF5  
                           l34243 2EF9                             l34315 103B                             l34307 100D  
                           l23587 1778                             l23579 1776                             l23588 1779  
                           l34229 2E1B                             l34245 2F32                             l34237 2EE8  
                           l34309 101E                             l34317 1040                             l23589 17D5  
                           l25390 2A61                             l19310 2B8A                             l25391 2A68  
                           l34191 3775                             l34239 2EEF                             l19311 2B72  
                           l34271 2294                             l34319 104F                             l25392 2A81  
                           l19312 2B7B                             l19320 22D4                             l34193 3779  
                           l19313 2B88                             l19321 22D9                             l34281 22D3  
                           l34273 22A6                             l37001 2ADB                             l19314 2B90  
                           l19322 22E9                             l34291 22E6                             l34283 22D9  
                           l34275 22BA                             l34267 2280                             l37003 2AE7  
                           l37011 094E                             l19308 2B71                             l29100 098B  
                           l19309 2B94                             l34293 22E9                             l19317 22E4  
                           l34285 22DC                             l34277 22BE                             l34269 2283  
                           l37005 2AEE                             l37021 0971                             l37013 0952  
                           l34461 2090                             l37101 009A                             l34541 1A08  
                           l34533 19FF                             l27190 2C50                             l19318 22DF  
                           l29110 2D69                             l27191 2C50                             l19319 22D4  
                           l34279 22C2                             l34287 22DF                             l34295 2C20  
                           l37031 098B                             l37023 0975                             l37015 0957  
                           l37007 0945                             l29103 2D62                             l34471 20C3  
                           l34463 209C                             l37111 00DE                             l37103 009C  
                           l34551 1AAA                             l34543 1A0C                             l34535 1A04  
                           l27192 2C56                             l29104 2D40                             l27193 2C72  
                           l34289 22E4                             l34297 2C26                             l37025 0977  
                           l37017 095C                             l37009 0948                             l29105 2D36  
                           l37041 2D40                             l37033 2D2B                             l34473 20C5  
                           l34465 20A2                             l34457 207B                             l37113 00E9  
                           l37105 00A3                             l34561 1AB0                             l34553 1AAB  
                           l34545 1A40                             l34537 1A05                             l37201 160B  
                           l37121 14A0                             l38001 26B4                             l27194 2C82  
                           l29106 2D45                             l27195 2C83                             l34299 2C32  
                           l37027 097C                             l37019 0962                             l29107 2D46  
                           l37043 2D46                             l37035 2D32                             l37051 2D62  
                           l34475 20CC                             l34467 20A9                             l34459 208C  
                           l37115 00EE                             l37107 00A4                             l34571 1AB6  
                           l34563 1AB1                             l34555 1AAC                             l19275 1A57  
                           l34547 1A43                             l34539 1A06                             l37211 1624  
                           l37203 1611                             l37131 14B8                             l37123 14A6  
                           l38011 2A54                             l38003 2A40                             ?_echo 0047  
                           l27196 2C83                             l29060 2BE0                             l29108 2D55  
                           l19276 1AAA                             l27189 2C4F                             l29061 2BCD  
                           l37029 0984                             l37053 2D69                             l29109 2D61  
                           l37045 2D50                             l37037 2D36                             l37061 2CD2  
                           l34469 20BB                             l34477 20D4                             l37117 00F0  
                           l37109 00DA                             l19277 1AC5                             l34581 1AC2  
                           l34573 1AB7                             l34565 1AB3                             l34557 1AAD  
                           l34549 1A57                             l37301 1779                             l37221 1642  
                           l37205 1618                             l37213 162B                             l37141 14D9  
                           l37133 14BD                             l37125 14AC                             l38005 2A42  
                           l38101 1483                             l38021 126A                             l38013 1258  
                           l29062 2BEF                             l19278 1AC5                             l33863 37A2  
                           l33871 2B16                             l29063 2BEF                             l37047 2D55  
                           l37039 2D3B                             l37063 2CD9                             l37055 2CBB  
                           l34479 20DD                             l37119 00F2                             l37071 0055  
                           l34575 1AB8                             l34567 1AB4                             l34559 1AAE  
                           l37303 17A4                             l37311 17DA                             l37231 166B  
                           l37223 1649                             l37215 1632                             l37207 161C  
                           l37151 151C                             l37143 14FB                             l37135 14BE  
                           l37127 14B1                             l38007 2A47                             l38103 148B  
                           l38031 12B4                             l38023 128E                             l38015 1261  
                           l38111 22EF                             l29072 1040                             l29056 2944  
                           l33865 37E2                             l33881 2B2A                             l33873 2B1B  
                           l29073 1003                             l29057 2946                             l29081 297D  
                           l37049 2D5A                             l37065 2CE9                             l37057 2CC5  
                           l37081 0061                             l37073 0057                             l34577 1ABA  
                           l34569 1AB5                             l37305 17C7                             l37241 1682  
                           l37233 166C                             l37225 164C                             l37209 1620  
                           l37217 1637                             l37161 1555                             l37153 151E  
                           l37145 14FF                             l37137 14C9                             l37129 14B4  
                           l37313 17E7                             l37321 239A                             l37401 29E9  
                           l38009 2A4D                             l38105 1492                             l38041 12E2  
                           l38033 12C3                             l38025 129C                             l38017 1262  
                           l38121 2311                             l38113 22F5                             l38201 1053  
                           l29066 2C26                             l29074 1037                             l29082 2986  
                           l29090 2AEE                             l29162 2CC5                             l33867 37EC  
                           l33883 2B37                             l33875 2B1D                             l33891 37A0  
                           l29067 2C25                             l29083 2990                             l37067 2CF2  
                           l29163 2CD2                             l37059 2CC9                             l37091 006D  
                           l37083 0063                             l37075 0059                             l34579 1ABF  
                           l37307 17C8                             l37251 16A7                             l37243 1683  
                           l37235 1670                             l37227 1653                             l37219 163C  
                           l37171 156C                             l37163 1559                             l37155 1533  
                           l37139 14D5                             l37147 150D                             l37323 239C  
                           l37331 23A2                             l37315 235B                             l37403 29F8  
                           l37411 201B                             l38107 149A                             l38051 1346  
                           l38043 12FE                             l38035 12C7                             l38027 12A0  
                           l38019 1265                             l38123 2315                             l38131 232D  
                           l38115 22FA                             l38211 106A                             l38203 1055  
                           l29068 2C32                             l29076 101E                             l29084 2992  
                           l29164 2CE9                             l29260 209C                             l33869 37EE  
                           l33885 2B3A                             l33877 2B1F                             l29069 2C4C  
                           l29077 1052                             l29093 0984                             l29165 2CF2  
                           l29261 2090                             l37093 006E                             l37085 0066  
                           l37077 005C                             l37069 0053                             l37309 17D5  
                           l37261 16CD                             l37245 169A                             l37237 1678  
                           l37229 1654                             l37253 16A8                             l37181 159C  
                           l37173 1579                             l37165 155F                             l37157 1538  
                           l37149 1518                             l37341 23CC                             l37333 23C6  
                           l37325 239D                             l37317 2363                             l37405 29FD  
                           l37421 204E                             l37413 2028                             l37501 24D2  
                           l38061 1381                             l38053 134E                             l38045 1306  
                           l38037 12D6                             l38029 12B0                             l38133 2342  
                           l38125 2319                             l38117 22FF                             l38109 22EC  
                           l38141 37D4                             l38221 10B3                             l38213 107F  
                           l38205 1059                             l38301 1D7A                             l29078 104F  
                           l29094 095C                             l29262 20A1                             l33879 2B24  
                           l33887 3799                             l29087 2ACE                             l29095 0952  
                           l29263 20A2                             l37095 0074                             l37087 0069  
                           l37079 005F                             l37271 1702                             l37263 16D8  
                           l37247 169B                             l37239 167B                             l37255 16B4  
                           l37191 15C3                             l37183 15A1                             l37175 157D  
                           l37167 1564                             l37159 154E                             l37335 23C8  
                           l37327 239E                             l37319 2388                             l37343 28E0  
                           l37351 28F7                             l37407 37B8                             l37431 2074  
                           l37423 205A                             l37415 2038                             l37511 250E  
                           l37503 24DA                             l38071 13B6                             l38063 1388  
                           l38055 136A                             l38047 1322                             l38039 12DA  
                           l38135 234E                             l38127 2321                             l38119 230C  
                           l38143 37C6                             l38151 1956                             l38231 110E  
                           l38223 10B5                             l38215 1084                             l38207 1060  
                           l38311 1DA5                             l38303 1D82                             l29088 2AD6  
                           l29096 0961                             l29264 20C5                             l33889 379F  
                           l36721 2C65                             l36801 2A23                             l29089 2AE7  
                           l29097 0962                             l29265 20D3                             l37097 0086  
                           l37089 006C                             l37281 172D                             l37265 16DE  
                           l37273 1707                             l37257 16BE                             l37249 169F  
                           l37193 15C9                             l37185 15A5                             l37177 158C  
                           l37169 1567                             l37337 23C9                             l37329 23A0  
                           l37345 28E1                             l37353 28FD                             l37361 20E5  
                           l37409 37BD                             l37425 205B                             l37417 2041  
                           l37433 2B95                             l37441 2550                             l37521 2525  
                           l37513 2513                             l37505 24F1                             l37601 2EB8  
                           l38081 1400                             l38073 13C1                             l38065 139B  
                           l38057 1372                             l38049 132A                             l38129 2324  
                           l38137 28BD                             l38161 1988                             l38153 1966  
                           l38145 1942                             l38241 1152                             l38233 1120  
                           l38225 10BC                             l38217 1099                             l38209 1065  
                           l38321 1DD0                             l38313 1DB6                             l38305 1D86  
                           l38401 21B4                             l29098 0977                             l29266 20DD  
                           l36731 2C79                             l36723 2C6B                             l36803 2A25  
                           l36811 2A2A                             l29099 0983                             l29259 20D4  
                           l37099 0090                             l37283 1733                             l37291 1752  
                           l37275 171A                             l37267 16E4                             l37259 16C3  
                           l37195 15E0                             l37187 15AA                             l37179 1592  
                           l37339 23CA                             l37347 28EC                             l37355 28FE  
                           l37363 20EE                             l37371 287A                             l37427 2067  
                           l37419 204D                             l37451 257D                             l37443 255A  
                           l37435 2537                             l37531 2FB1                             l37523 2532  
                           l37507 24F5                             l37515 2516                             l37611 2ED5  
                           l37603 2EBE                             l38091 1447                             l38083 1401  
                           l38075 13D2                             l38067 13B1                             l38059 1380  
                           l38139 28C2                             l38171 199E                             l38163 1989  
                           l38155 196B                             l38147 1945                             l38251 11B6  
                           l38243 1159                             l38235 1128                             l38227 10BD  
                           l38219 109E                             l38331 1DE1                             l38323 1DD1  
                           l38315 1DBB                             l38307 1D8A                             l38411 21CF  
                           l38403 21BF                             l36733 2C7A                             l36725 2C6D  
                           l36741 2A81                             l36813 2A3D                             l36805 2A26  
                           l36821 2AA8                             l37293 1759                             l37285 1738  
                           l37277 1725                             l37269 16F7                             l37197 15E5  
                           l37189 15BB                             l37357 28FF                             l37349 28F5  
                           l37365 20F8                             l37373 287C                             l37381 23FE  
                           l37429 2068                             l37461 25A5                             l37453 2582  
                           l37445 2562                             l37437 2538                             l37541 2FDE  
                           l37533 2FB7                             l37525 2536                             l37517 251B  
                           l37509 250C                             l37613 2EDD                             l37605 2EC6  
                           l37621 0995                             l37701 1ADF                             l38093 145A  
                           l38085 140C                             l38077 13E5                             l38069 13B5  
                           l38181 19B8                             l38173 19A8                             l38165 198F  
                           l38157 1979                             l38149 1953                             l38261 124E  
                           l38253 11DB                             l38245 1160                             l38237 113C  
                           l38229 10D2                             l38341 1DFD                             l38333 1DE6  
                           l38325 1DD5                             l38317 1DC0                             l38309 1D99  
                           l38421 21EF                             l38413 21D3                             l38405 21C3  
                           l38501 0BB9                             l36735 2C7B                             l36727 2C71  
                           l36719 2C56                             l36743 377A                             l36751 3766  
                           l36815 2A3F                             l36807 2A28                             l36823 2AAA  
                           l36831 2ABD                             l36911 2978                             l37295 175D  
                           l37287 1740                             l37279 1729                             l37199 15E6  
                           l37367 20F9                             l37359 20DE                             l37383 23FF  
                           l37375 23D1                             l37391 2E6B                             l37455 2589  
                           l37447 256D                             l37439 2545                             l37463 25A6  
                           l37471 2712                             l37543 2FE4                             l37535 2FB8  
                           l37527 2FA1                             l37519 2520                             l37551 2CFA  
                           l37615 2EDE                             l37607 2ECC                             l37631 09F0  
                           l37623 099C                             l37711 1B0F                             l37703 1AE4  
                           l38095 1470                             l38087 141D                             l38079 13FC  
                           l38191 19D6                             l38175 19AD                             l38183 19C0  
                           l38167 1994                             l38159 197C                             l38255 1213  
                           l38247 1161                             l38239 114D                             l38271 01F3  
                           l38263 01DE                             l38343 1E00                             l38327 1DD8  
                           l38319 1DC8                             l38351 1E0F                             l38335 1DE7  
                           l38431 2202                             l38423 21F1                             l38415 21D7  
                           l38407 21C7                             l38511 0BE4                             l38503 0BBF  
                           l36737 2C80                             l36729 2C75                             l36745 377F  
                           l36753 376A                             l36761 2890                             l36809 2A29  
                           l36825 2AB0                             l36833 291D                             l36841 376B  
                           l36905 37AD                             l36921 2BE0                             l36913 2BC4  
                           l37297 176A                             l37289 1744                             l37369 2132  
                           l37377 23D5                             l37393 2E6C                             l37385 2E42  
                           l37457 2591                             l37449 2575                             l37473 2723  
                           l37465 26C0                             l37481 2906                             l37545 2FFB  
                           l37537 2FC1                             l37529 2FA4                             l37561 2D1A  
                           l37553 2CFD                             l37609 2ED0                             l37641 0A42  
                           l37633 0A24                             l37625 09A2                             l37617 098C  
                           l37721 1B3B                             l37713 1B14                             l37705 1AEA  
                           l37801 2446                             l38097 1476                             l38089 1430  
                           l38185 19C7                             l38177 19B3                             l38193 19DE  
                           l38169 1998                             l38257 1237                             l38249 1176  
                           l38265 01E6                             l38281 2016                             l38273 2001  
                           l38361 1E42                             l38353 1E2A                             l38345 1E05  
                           l38337 1DF5                             l38329 1DDF                             l38433 2206  
                           l38425 21F2                             l38417 21DF                             l38409 21CB  
                           l38441 221D                             l38601 0D61                             l38521 0C03  
                           l38513 0BE9                             l38505 0BC5                             l36739 2A68  
                           l36747 3780                             l36755 29AF                             l36763 2893  
                           l36771 2A08                             l36827 2AB6                             l36835 2921  
                           l36843 376F                             l36851 3770                             l36907 2961  
                           l36915 2BCD                             l36923 29CB                             l36931 2B77  
                           l37299 1770                             l37379 23E9                             l37387 2E45  
                           l37395 2E71                             l37459 259C                             l37475 2734  
                           l37467 26C1                             l37483 290A                             l37491 285E  
                           l37547 2FFF                             l37539 2FD1                             l37563 2D1C  
                           l37555 2D03                             l37571 2D71                             l37643 0A46  
                           l37635 0A28                             l37627 09B2                             l37651 0A64  
                           l37619 098F                             l37723 1B41                             l37715 1B1E  
                           l37707 1AF8                             l37731 1B67                             l37811 2460  
                           l37803 2449                             l38099 147D                             l38195 19EE  
                           l38187 19D1                             l38179 19B7                             l38259 1249  
                           l38267 01E7                             l38275 2009                             l38371 1E59  
                           l38363 1E47                             l38355 1E38                             l38347 1E08  
                           l38339 1DF8                             l38291 1D49                             l38283 1D2E  
                           l38435 2207                             l38427 21F6                             l38419 21E7  
                           l38451 2239                             l38443 2221                             l38611 0DA0  
                           l38603 0D83                             l38531 0C37                             l38523 0C0A  
                           l38515 0BEE                             l38507 0BCC                             l36749 3785  
                           l36757 29B8                             l36781 2A21                             l36773 2A0A  
                           l36765 2A04                             l36829 2ABC                             l36837 2926  
                           l36845 289D                             l36853 3774                             l36861 2DAA  
                           l36909 2976                             l36917 2BD7                             l36925 29D4  
                           l36933 2B7F                             l36941 2B8A                             l37397 2E87  
                           l37389 2E64                             l37477 273D                             l37469 26F1  
                           l37485 37F3                             l37493 286D                             l37565 2D21  
                           l37557 2D08                             l37549 2CF5                             l37581 2D92  
                           l37573 2D74                             l37661 0AA5                             l37653 0A70  
                           l37645 0A4E                             l37637 0A2F                             l37629 09E5  
                           l39181 1BD2                             l37741 1B8B                             l37733 1B71  
                           l37725 1B46                             l37717 1B29                             l37709 1B0A  
                           l37821 247D                             l37813 2467                             l37805 2450  
                           l37901 18F4                             l38197 19F1                             l38189 19D5  
                           l38269 01ED                             l38277 200A                             l38373 1E5C  
                           l38365 1E4C                             l38357 1E39                             l38381 1E82  
                           l38349 1E0E                             l38293 1D52                             l38285 1D30  
                           l38437 2213                             l38429 21F7                             l38461 2257  
                           l38453 223D                             l38445 2225                             l38701 0FB1  
                           l38621 0DD3                             l38613 0DA6                             l38605 0D8D  
                           l38541 0C66                             l38533 0C41                             l38525 0C10  
                           l38517 0BF7                             l38509 0BD2                             l36759 288C  
                           l39191 2A17                             l36775 2A0B                             l36767 2A05  
                           l36791 2A90                             l36839 2929                             l36847 28A1  
                           l36855 28AE                             l36863 2DB2                             l36871 1BF0  
                           l36919 2BDB                             l36943 2B90                             l36935 2B84  
                           l36927 2B6A                             l37399 2E8D                             l37479 273E  
                           l37487 2840                             l37495 24BD                             l37567 2D25  
                           l37559 2D0D                             l37583 2D98                             l37575 2D7A  
                           l37591 2E96                             l37671 0AD7                             l37663 0AB2  
                           l37655 0A7E                             l37639 0A3B                             l37647 0A58  
                           l39183 1BD7                             l37743 1B94                             l37751 1BE3  
                           l37735 1B7C                             l37727 1B50                             l37719 1B33  
                           l37823 2482                             l37831 249E                             l37815 246C  
                           l37807 2458                             l37911 191A                             l37903 18FE  
                           l38199 19F2                             l38279 2010                             l38383 1E87  
                           l38375 1E62                             l38367 1E4F                             l38359 1E3F  
                           l39175 1E1A                             l38295 1D5A                             l38287 1D37  
                           l38463 2260                             l38455 2244                             l38447 222C  
                           l38439 2217                             l38711 0FD0                             l38703 0FB7  
                           l38631 0E03                             l38623 0DE3                             l38615 0DAC  
                           l38607 0D93                             l38543 0C6A                             l38535 0C4D  
                           l38551 0C93                             l38527 0C16                             l38519 0BFD  
                           l36769 2A07                             l36777 2A0C                             l36793 2A96  
                           l36849 28A4                             l36857 28B2                             l36865 2DB6  
                           l36881 1C25                             l36873 1BF9                             l36945 2B93  
                           l36937 2B86                             l36929 2B70                             l37489 284F  
                           l37497 24CB                             l37585 2D99                             l37577 2D7F  
                           l37569 2D6C                             l37593 2E98                             l37673 0AE4  
                           l37665 0AB9                             l37657 0A8B                             l37649 0A63  
                           l37681 0B0D                             l37745 1B9D                             l37737 1B81  
                           l37729 1B5A                             l37761 2BF2                             l37833 24AF  
                           l37825 2488                             l37817 2472                             l37809 245B  
                           l37841 2153                             l37913 1926                             l37905 1904  
                           l37921 180E                             l39177 1E6E                             l38369 1E54  
                           l38377 1E63                             l38297 1D66                             l38289 1D44  
                           l38465 2265                             l38457 2249                             l38449 2232  
                           l38713 0FDE                             l38705 0FBB                             l38641 0E33  
                           l38633 0E15                             l38625 0DE9                             l38617 0DC8  
                           l38609 0D99                             l38561 0CB4                             l38553 0C98  
                           l38545 0C7B                             l38537 0C56                             l38529 0C32  
                           l38721 0FF7                             l38481 0B67                             l38801 1FAF  
                           l36779 2A1F                             l36795 2A98                             l36787 2A84  
                           l36859 28B5                             l36867 2DD2                             l39187 1D1B  
                           l36891 1CEF                             l36883 1C4E                             l36875 1BFF  
                           l36939 2B88                             l36971 293A                             l37499 24D1  
                           l37587 2DA4                             l37579 2D84                             l37595 2E9D  
                           l37683 0B1D                             l37675 0AF1                             l37667 0AC1  
                           l37659 0A98                             l37739 1B83                             l37747 1BA6  
                           l37763 2BF6                             l39179 2621                             l37771 25B5  
                           l37827 248D                             l37819 2477                             l37835 24B0  
                           l37851 2177                             l37843 2157                             l37907 1907  
                           l37915 1927                             l37931 182D                             l37923 1814  
                           l38379 1E7A                             l38299 1D76                             l38467 2271  
                           l38459 2252                             l38715 0FDF                             l38707 0FC3  
                           l38651 0E76                             l38643 0E39                             l38635 0E1A  
                           l38627 0DF7                             l38619 0DCD                             l38571 0CE8  
                           l38563 0CBA                             l38555 0CA1                             l38539 0C5E  
                           l38547 0C85                             l38491 0B92                             l38483 0B6D  
                           l38475 0B3D                             l38811 1FEA                             l38803 1FB9  
                           l38731 1E91                             l36789 2A86                             l36797 2A99  
                           l39189 2A35                             l36869 2DE0                             l36893 1CF8  
                           l36885 1C82                             l36877 1C03                             l36973 2940  
                           l36981 297D                             l37597 2EAB                             l37589 2E90  
                           l37685 0B22                             l37677 0AFE                             l37669 0AC9  
                           l37749 1BBB                             l37765 2BFA                             l37781 25E1  
                           l37773 25B6                             l37829 2493                             l37861 2195  
                           l37845 215B                             l37853 217E                             l37837 2145  
                           l37909 1910                             l37917 1938                             l37941 184A  
                           l37933 1831                             l37925 181A                             l38397 21AC  
                           l38469 2272                             l38717 0FEB                             l38709 0FC4  
                           l38661 0EB2                             l38653 0E7C                             l38645 0E51  
                           l38637 0E1F                             l38629 0DFD                             l38581 0D0B  
                           l38573 0CEE                             l38565 0CC0                             l38557 0CA7  
                           l38549 0C89                             l38493 0B97                             l38485 0B73  
                           l38477 0B4F                             l38813 1FEF                             l38805 1FD1  
                           l38741 1EB4                             l38733 1E92                             l36799 2A22  
                           l36887 1CAB                             l36879 1C24                             l36895 1CF9  
                           l36975 2944                             l36967 2933                             l36991 2990  
                           l36983 2981                             l37599 2EB2                             l37687 0B2B  
                           l37679 0B0C                             l37695 1AC8                             l37767 2C13  
                           l37791 260F                             l37783 25E9                             l37775 25BE  
                           l37863 2199                             l37855 2186                             l37847 2170  
                           l37839 2152                             l37919 193D                             l37871 188F  
                           l37951 1863                             l37943 184E                             l37927 1820  
                           l37935 1837                             l38399 21B3                             l38671 0EFB  
                           l38663 0EBF                             l38655 0E82                             l38647 0E56  
                           l38639 0E2D                             l38591 0D40                             l38583 0D11  
                           l38575 0CF7                             l38567 0CDC                             l38559 0CAD  
                           l38495 0B9C                             l38479 0B59                             l38487 0B7A  
                           l38719 0FEC                             l38815 1FF3                             l38807 1FDB  
                           l38751 1EDC                             l38743 1EBF                             l38735 1E97  
                           l38831 2768                             l36889 1CE5                             l36897 1D24  
                           l36977 2946                             l36969 2934                             l36993 2992  
                           l36985 2986                             l37689 0B35                             l37697 1AD3  
                           l37769 2C1A                             l37793 2616                             l37785 25F0  
                           l37777 25C7                             l37865 21A0                             l37857 218C  
                           l37849 2171                             l37881 18A6                             l37873 1893  
                           l37961 187D                             l37953 1865                             l37945 1853  
                           l37937 183C                             l37929 1829                             l38681 0F51  
                           l38673 0F21                             l38665 0EC5                             l38657 0E9A  
                           l38649 0E69                             l38593 0D45                             l38585 0D18  
                           l38577 0CFC                             l38569 0CE1                             l38497 0BA1  
                           l38489 0B80                             l38809 1FE1                             l38761 1F0E  
                           l38753 1EE9                             l38745 1EC0                             l38737 1E9F  
                           l38817 1FF4                             l38729 1E8C                             l38841 278C  
                           l38833 276D                             l38825 274E                             l36899 1D2D  
                           l36987 2988                             l36979 297B                             l36995 2ACA  
                           l37699 1AD6                             l37779 25D4                             l37787 25F1  
                           l37795 2617                             l37859 2191                             l37867 21A3  
                           l37891 18C9                             l37883 18B3                             l37875 1896  
                           l37963 187F                             l37955 1869                             l37947 1858  
                           l37939 1843                             l37971 2641                             l38691 0F84  
                           l38683 0F56                             l38675 0F26                             l38667 0ECB  
                           l38659 0E9F                             l38595 0D4A                             l38587 0D1E  
                           l38579 0D05                             l38499 0BAB                             l38771 1F39  
                           l38763 1F16                             l38755 1EF4                             l38739 1EA7  
                           l38747 1ECC                             l38851 27AF                             l38843 2798  
                           l38835 2775                             l38827 2755                             l36989 298A  
                           l36997 2ACE                             l37789 2600                             l37869 21A7  
                           l37893 18DB                             l37885 18B8                             l37877 189C  
                           l37965 1883                             l37949 185E                             l37957 1872  
                           l37981 2658                             l37973 2651                             l38693 0F8A  
                           l38685 0F63                             l38677 0F47                             l38669 0EE3  
                           l38597 0D4F                             l38589 0D24                             l38781 1F5F  
                           l38773 1F42                             l38765 1F1F                             l38757 1EF5  
                           l38749 1ED4                             l38861 27CC                             l38853 27B4  
                           l38845 27A0                             l38837 277C                             l38829 2760  
                           l36999 2AD2                             l37895 18E2                             l37887 18BD  
                           l37879 18A1                             l37959 1879                             l37991 2675  
                           l37983 265B                             l37975 2652                             l37967 2630  
                           l38695 0F9B                             l38687 0F6D                             l38679 0F4C  
                           l38599 0D54                             l38791 1F8D                             l38783 1F64  
                           l38775 1F50                             l38767 1F29                             l38759 1F01  
                           l38871 27DF                             l38863 27D1                             l38855 27BC  
                           l38839 2784                             l38847 27AC                             l37897 18E8  
                           l37889 18C1                             l37993 2684                             l37985 265D  
                           l37977 2653                             l37969 2634                             l38697 0FA5  
                           l38689 0F77                             l38793 1F92                             l38785 1F71  
                           l38777 1F56                             l38769 1F33                             l38881 27F1  
                           l38873 27E4                             l38865 27D4                             l38857 27C1  
                           l38849 27AE                             l37899 18EE                             l37995 2695  
                           l37987 265F                             l37979 2656                             l38699 0FAA  
                           l38795 1F9B                             l38787 1F81                             l38779 1F5A  
                           l38883 27F4                             l38875 27E8                             l38867 27D7  
                           l38859 27C9                             l37997 269D                             l37989 2662  
                           l38797 1FA4                             l38789 1F85                             l38885 27F7  
                           l38877 27EB                             l38869 27DC                             l37999 26B0  
                           l38799 1FA9                             l38887 27FA                             l38879 27EE  
                           ?_main 0072                             _ADRES 009B                             _EEADR 0191  
                           STR_10 0918                             STR_11 0903                             STR_20 0938  
                           STR_12 091E                             STR_13 08A7                             STR_21 07B7  
                           STR_30 0880                             STR_22 0705                             STR_14 05B6  
                           STR_23 07EF                             STR_31 0923                             STR_15 07F1  
                           STR_32 0934                             STR_40 081A                             STR_16 07A8  
                           STR_24 0578                             _BRG16 0CFB                             STR_25 0930  
                           STR_33 08DC                             STR_41 088A                             STR_17 0833  
                           STR_26 0938                             STR_50 092C                             STR_42 08F4  
                           STR_34 089E                             STR_18 07FF                             STR_51 07F0  
                           STR_19 0930                             STR_43 08C2                             STR_35 07E3  
                           STR_27 0749                             STR_52 090A                             STR_60 0894  
                           STR_44 083F                             STR_28 068B                             STR_36 058D  
                           STR_61 0856                             STR_37 0930                             STR_53 08CB  
                           STR_45 08B9                             STR_29 069D                             STR_70 0934  
                           STR_38 0938                             STR_46 08B0                             STR_54 0856  
                           STR_62 0769                             STR_71 07F0                             STR_39 0833  
                           STR_63 0942                             STR_47 0911                             STR_55 07C6  
                           STR_80 07F0                             STR_72 090A                             STR_64 092C  
                           STR_56 0942                             STR_48 0759                             STR_65 07F0  
                           STR_81 090A                             STR_57 092C                             STR_49 0942  
                           STR_73 0727                             STR_74 07F0                             STR_58 07F0  
                           STR_90 07EF                             STR_66 090A                             STR_82 0534  
                           STR_83 07F0                             STR_75 090A                             STR_59 090A  
                           STR_67 062D                             STR_91 05A2                             STR_84 090A  
                           STR_92 0827                             STR_76 05F2                             STR_68 05CA  
                           STR_77 090A                             STR_69 0923                             STR_93 0876  
                           STR_85 0716                             STR_78 07F0                             STR_94 0679  
                           STR_86 061A                             STR_87 08EC                             STR_95 08D4  
                           STR_79 05DE                             STR_96 093F                             STR_88 0562  
                           STR_97 0928                             STR_89 06AF                             STR_98 080D  
                           STR_99 093C                             _CARRY 0018                   ?_interrupt_init 0072  
                           u10000 159C                             u10001 159B                             u10010 15B9  
                 __end_of___lldiv 20DE                             u10011 15B8                             u10100 1681  
                           u10020 15DD                             u10101 1680                             u10021 15DC  
                           u10005 1598                             u10110 1699                             u10030 1611  
                           u10111 1698                             u10031 1610                             u10015 15B5  
                           u10200 1733                             u10120 16A5                             u10040 1620  
                           u11000 2157                             u10201 1732                             u10121 16A4  
                           u10041 161F                             u10025 15D9                             u10210 173F  
                           u10130 16BE                             u10050 163C                             u11010 215B  
                           u10211 173E                             u10131 16BD                             u10115 1695  
                           u10051 163B                             u11011 215A                             u10220 174F  
                           u10140 16CD                             u10060 1642                             u10300 23C6  
                           u11020 2191                             u11100 18C1                             u10221 174E  
                           u10141 16CC                             u10061 1641                             u10301 23C5  
                           u11021 2190                             u10230 1758                             u10150 16D8  
                           u10070 1652                             u10310 20F7                             u11030 2195  
                           u11110 18E2                             u10231 1757                             u10151 16D7  
                           u10071 1651                             u10311 20F6                             u11031 2194  
                           u11111 18E1                             u10240 1768                             u10160 16DE  
                           u10080 166A                             u10320 2132                             u10400 2028  
                           u11040 2199                             u11200 1918                             u11120 18E8  
                           u12000 1E37                             u10241 1767                             u10161 16DD  
                           u10081 1669                             u10305 23C2                             u10321 2131  
                           u10401 2027                             u11041 2198                             u11201 1916  
                           u11121 18E7                             u12001 1E36                             u10250 1770  
                           u10170 16F7                             u10090 1676                             u10330 23D5  
                           u10410 204D                             u11050 21A7                             u11130 18EE  
                           u12010 1E87                             u10251 176F                             u10171 16F6  
                           u10091 1675                             u10411 204C                             u11051 21A6  
                           u11131 18ED                             u10260 17E5                             u10180 171A  
                           u10340 23E9                             u10420 205A                             u10500 24CB  
                           u11220 1922                             u11140 18F4                             u11300 184E  
                           u12020 21B2                             u12100 223D                             u10261 17E4  
                           u10181 1719                             u10085 1666                             u10325 212E  
                           u10341 23E8                             u10421 2059                             u10501 24CA  
                           u11221 1920                             u11141 18F3                             u12021 21B1  
                           u10270 17FD                             u10190 172D                             u10350 23FD  
                           u10430 2067                             u10510 24DA                             u11214 1919  
                           u11150 18FA                             u11070 189C                             u11310 1858  
                           u12030 21F6                             u12110 2249                             u10271 17FC  
                           u10191 172C                             u10175 16F3                             u10351 23FC  
                           u10431 2066                             u10511 24D9                             u11151 18F9  
                           u11071 189B                             u12031 21F5                             u10280 2388  
                           u10360 2E64                             u10440 2074                             u10520 24F1  
                           u10600 2D71                             u11160 18FE                             u11080 18B8  
                           u11320 1869                             u11240 1814                             u11400 2675  
                           u12040 2206                             u12120 2257                             u12200 0C37  
                           u10185 1716                             u10281 2387                             u10361 2E63  
                           u10441 2073                             u10521 24F0                             u10505 24C7  
                           u10601 2D70                             u11161 18FD                             u11065 1893  
                           u11241 1813                             u11401 2674                             u12041 2205  
                           u12201 0C36                             u10290 239A                             u10370 2E86  
                           u10450 2545                             u10530 250C                             u10610 2D7A  
                           u11234 1923                             u11170 1903                             u11090 18BD  
                           u11330 1879                             u11250 181A                             u12130 2265  
                           u12050 221D                             u12210 0C41                             u10291 2399  
                           u10371 2E85                             u10451 2544                             u10531 250B  
                           u10611 2D79                             u11171 1902                             u11091 18BC  
                           u11331 1878                             u11251 1819                             u12051 221C  
                           u12211 0C40                             u10380 29FD                             u10460 255A  
                           u10540 251B                             u10700 0A28                             u11180 190E  
                           u11340 187D                             u11260 1820                             u11420 2695  
                           u11500 137F                             u12060 2221                             u12300 0D8D  
                           u12220 0C4D                             u12140 0B59                             u10285 2384  
                           u10381 29FC                             u10461 2559                             u10541 251A  
                           u10701 0A27                             u11181 190C                             u11261 181F  
                           u11421 2694                             u11501 137E                             u12301 0D8C  
                           u12221 0C4C                             u12141 0B58                             u10390 37BD  
                           u10470 2562                             u10550 2FB1                             u10630 2E96  
                           u10710 0A2F                             u11350 1883                             u11270 1831  
                           u11430 26A3                             u11510 139B                             u12070 222C  
                           u12310 0DA0                             u12230 0C5E                             u12150 0B67  
                           u10295 2396                             u10471 2561                             u10551 2FB0  
                           u10631 2E95                             u10711 0A2E                             u11431 26A1  
                           u11415 2688                             u11511 139A                             u12071 222B  
                           u12311 0D9F                             u12231 0C5D                             u12151 0B66  
                           u10480 2575                             u10560 2FFA                             u10640 2EB2  
                           u10720 0A3B                             u10800 1B06                             u11280 183C  
                           u11440 26AA                             u11432 26A4                             u11360 2634  
                           u11520 13B5                             u11600 2315                             u12080 2232  
                           u12400 0EBF                             u12320 0DCD                             u12240 0CA1  
                           u12160 0BAB                             u10481 2574                             u10561 2FF9  
                           u10625 2DA4                             u10641 2EB1                             u10721 0A3A  
                           u10801 1B05                             u11441 26A8                             u11361 2633  
                           u11521 13B4                             u12081 2231                             u12401 0EBE  
                           u12321 0DCC                             u12241 0CA0                             u12161 0BAA  
                           u10490 2591                             u10570 2CFA                             u10650 2EB8  
                           u10730 0A42                             u10810 1B1E                             u11194 190F  
                           u11290 184A                             u11450 26B0                             u11442 26AB  
                           u11370 2641                             u11530 13E5                             u12090 2238  
                           u12410 0F26                             u12330 0DD3                             u12250 0CB4  
                           u12170 0BB9                             u10491 2590                             u10555 2FAD  
                           u10571 2CF9                             u10651 2EB7                             u10731 0A41  
                           u10811 1B1D                             u11291 1849                             u11451 26AF  
                           u11371 2640                             u11531 13E4                             u11515 1397  
                           u12091 2237                             u12411 0F25                             u12331 0DD2  
                           u12251 0CB3                             u12171 0BB8                             u12155 0B63  
                           u10580 2D03                             u10660 2EBE                             u10740 0A46  
                           u10820 1B28                             u10900 2BFA                             u11380 2667  
                           u11540 1400                             u11620 2342                             u11700 19AD  
                           u12340 0DF7                             u12260 0CE1                             u12180 0BF7  
                           u12500 1F0E                             u12420 1E90                             u10581 2D02  
                           u10661 2EBD                             u10741 0A45                             u10821 1B27  
                           u10901 2BF9                             u11381 2665                             u11541 13FF  
                           u11621 2341                             u12341 0DF6                             u12261 0CE0  
                           u12181 0BF6                             u12501 1F0D                             u12421 1E8F  
                           u10670 2EC4                             u10750 0AB9                             u10830 1B33  
                           u10910 2C12                             u11390 266F                             u11382 2668  
                           u11470 2A5D                             u11550 1430                             u11710 19B3  
                           u12350 0E1A                             u12270 0D05                             u12190 0C0A  
                           u12510 1F42                             u12430 1E97                             u10671 2EC3  
                           u10751 0AB8                             u10831 1B32                             u10911 2C10  
                           u11391 266D                             u11471 2A5C                             u11551 142F  
                           u11535 13E1                             u11615 233E                             u11711 19B2  
                           u12351 0E19                             u12271 0D04                             u12191 0C09  
                           u12175 0BB5                             u12511 1F41                             u10680 2ECC  
                           u10760 0B1D                             u10840 1B50                             u11392 2670  
                           u11560 145A                             u11480 1260                             u11720 19B7  
                           u11640 1952                             u11800 10D2                             u12360 0E2D  
                           u12280 0D18                             u12600 1FEA                             u12520 1F56  
                           u12440 1E9F                             _T2CON 001C                             u10681 2ECB  
                           u10761 0B1C                             u10841 1B4F                             u11465 26B4  
                           u11561 1459                             u11481 125F                             u11721 19B6  
                           u11641 1951                             u11801 10D1                             u12361 0E2C  
                           u12281 0D17                             u12601 1FE9                             u12521 1F55  
                           u12441 1E9E                             u10770 0B22                             u10690 099C  
                           u10850 1B5A                             u10930 2450                             u11490 126A  
                           u11730 19C7                             u11650 1978                             u11810 110E  
                           u12370 0E56                             u12290 0D45                             u12530 1F5A  
                           u12450 1EA7                             u12610 276D                             u10595 2D25  
                           u10691 099B                             u10851 1B59                             u10931 244F  
                           u11555 142C                             u11635 28C2                             u11731 19C6  
                           u11651 1977                             u11811 110D                             u12371 0E55  
                           u12291 0D44                             u12531 1F59                             u12451 1EA6  
                           u12611 276C                             u10860 1B64                             u10780 1AEA  
                           u10924 2C13                             u10940 2467                             u11580 22F5  
                           u11740 19D1                             u11660 1987                             u11820 1158  
                           u11900 2009                             u12380 0E76                             u12540 1F81  
                           u12460 1EB4                             u12620 277C                             u10861 1B63  
                           u10781 1AE9                             u10941 2466                             u11565 1456  
                           u11581 22F4                             u11741 19D0                             u11661 1986  
                           u11821 1157                             u11901 2008                             u12381 0E75  
                           u12541 1F80                             u12461 1EB3                             u12621 277B  
                           u10870 1B70                             u10790 1AF8                             u10950 2472  
                           u11590 2311                             u11750 19D5                             u11670 1994  
                           u11830 115F                             u11910 1D37                             u12390 0E9F  
                           u12550 1F85                             u12470 1ED4                             u12630 278C  
                           u10871 1B6F                             u10791 1AF7                             u10951 2471  
                           u11575 149F                             u11751 19D4                             u11671 1993  
                           u11831 115E                             u11911 1D36                             u12391 0E9E  
                           u12551 1F84                             u12471 1ED3                             u12631 278B  
                           u10880 1B80                             u10960 247D                             u11680 1998  
                           u11840 1176                             u11760 106A                             u11920 1D44  
                           u12560 1F89                             u12480 1EDC                             u12640 2798  
                           u10881 1B7F                             u10961 247C                             u11681 1997  
                           u11841 1175                             u11761 1069                             u11921 1D43  
                           u12561 1F88                             u12481 1EDB                             u12641 2797  
                           u10890 2BF6                             u10970 2488                             u11690 19A8  
                           u11850 11B6                             u11770 1084                             u11930 1D49  
                           u12570 1F8D                             u12490 1EE9                             u12650 27B4  
                           u10891 2BF5                             u10971 2487                             u11691 19A7  
                           u11851 11B5                             u11771 1083                             u12571 1F8C  
                           u12491 1EE8                             u12651 27B3                             u10980 2493  
                           u11860 1213                             u11780 109E                             u11940 1D66  
                           u12580 1F91                             u12660 27C1                             u10981 2492  
                           u11861 1212                             u11781 109D                             u11941 1D65  
                           u12581 1F90                             u12661 27C0                             u10990 2151  
                           u11870 1237                             u11790 10BB                             u11950 1D7A  
                           u12590 1F9B                             u10991 2150                             u11871 1236  
                           u11791 10BA                             u11951 1D79                             u12591 1F9A  
                           u11880 1254                             u11960 1D99                             u11881 1253  
                           u11961 1D98                             u11890 01E6                             u11970 1DA5  
                           u11891 01E5                             u11971 1DA4                             u11980 1DC8  
                           u12677 008B                             u11981 1DC7                             u11990 1DD5  
                           _IOCBF 0396                             u12687 0095                             u11991 1DD4  
                           _IOCBN 0395                             _IOCBP 0394                             _IOCIE 005B  
                           _IOCIF 0058                   __end_of___lwdiv 098C                   __end_of___lwmod 2D6A  
                           _RCREG 0199                             _TMR1H 0017                             _TMR1L 0016  
                           _SPBRG 019B                             _PORTA 000C                             _PORTB 000D  
                           _PORTC 000E                             _PORTD 000F                             _PORTE 0010  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _TRISD 008F                             _TRISE 0090                             _TXREG 019A  
           __end_of_catgenie_init 00F3             __end_of_catgenie_work 1256               ___lmul@multiplicand 0025  
                 __end_of_get_Arm 2A40                             _drain 04AD                   __end_of_isdigit 2947  
                 __end_of_set_LED 2E40                             _state 0066                             _putch 2B68  
     timestampdiff@late_longshort 0033                             fpbase 0102                   __end_of_set_Arm 2ACA  
  __size_of_romwashprogram_getins 001A                   ??_timestampdiff 0025                    __pbitbssCOMMON 0380  
       __end_of_startbutton_event 37E2     __end_of_romwashprogram_getins 2979              update_autotimer@mode 003D  
  __size_of_romwashprogram_reqins 000B                   ??_water_filling 0021     __end_of_romwashprogram_reqins 37B8  
                           status 0003                             wtemp0 007E                   __end_of_strncmp 1053  
               ?_wait_instruction 0072      postponetimeout@tempLongTicks 002B                ??_wait_instruction 0037  
               water_init@channel 0023                      ?_set_LED_Cat 002E                      __end_of_echo 2537  
         litterlanguage_start@wet 0051                      __end_of_help 3000                      __end_of_main 2800  
        ??_litterlanguage_cleanup 004F                   ?_update_display 0072              __end_of_cmdline_init 37C6  
           set_LED_Locked@pattern 0031              __end_of_cmdline_work 2A5F                    ??_gettimestamp 0023  
                          ??_echo 004A                            ??_help 004A                            ??_main 0060  
                 cmdline_work@rxd 005F            _watersensor_event$5929 0050          ??_litterlanguage_running 0021  
        __size_of_req_instruction 0013          litterlanguage_init@flags 0054       litterlanguage_pause@context 0120  
                          STR_100 093C                            STR_101 07D5                            STR_110 092C  
                          STR_102 084B                            STR_103 06F4                            STR_111 06E3  
                          STR_112 0872                            STR_104 0799                            STR_113 06D2  
                          STR_105 054C                            STR_106 0942                            STR_114 08FC  
                          STR_107 092C                            STR_115 06C1                            STR_108 086C  
                          STR_109 0942         timeoutexpired@currentTime 0031                            _EEDATA 0193  
                          _CCPR1L 0291                            _EECON1 0195                            _EECON2 0196  
         __size_of_catsensor_init 000F                            _ANSELA 018C                            ?_putch 0072  
                          _ANSELB 018D                            _ANSELD 018F                            _ANSELE 0190  
         __size_of_catsensor_work 008E                            i1l2100 001B                            i1l2101 0038  
                          i1l2102 0031                            i1l2103 0041                            i1l2104 004A  
                          i1l2105 004A                            i1l2099 0011                            u570_20 0046  
                          u570_21 0045                            u571_20 2B0A                            u571_21 2B09  
                          u571_25 2B06                            u572_20 2997                            u580_20 0163  
                          u572_21 2996                            u580_21 0162                            u581_20 01B1  
                          u565_20 000C                            u581_21 01B0                            u565_21 000B  
                          u573_25 29AD                            u581_25 01AD        __end_of_userinterface_init 2C1E  
                          u574_20 2836                            u582_20 01B8                            u566_20 0016  
                          u574_21 2835                            u582_21 01B7                            u566_21 0015  
                          u575_20 283B                            u583_20 01CD                            u567_20 001F  
                          u575_21 283A                            u583_21 01CC                            u567_21 001E  
                          u576_20 0112                            u568_20 002D                            u576_21 0111  
                          u568_21 002C                            u577_20 0128                            u569_20 003D  
                          u577_21 0127                            u569_21 003C                            u578_20 0150  
                          u578_21 014F                            u579_20 0154                            u579_21 0153  
                          _TMR1IE 0488                            _TMR1IF 0088                            _TMR2IE 0489  
                          _TMR2IF 0089                            _SPBRGH 019C                            _TMR1ON 00C0  
                          _TMR2ON 00E2        __end_of_userinterface_work 1E8C      __size_of_litterlanguage_init 007D  
    __size_of_litterlanguage_stop 0069      __size_of_litterlanguage_work 0174                  __end_of_get_Bowl 2A22  
                __end_of_get_Pump 376B              __size_of_eeprom_read 0023                      ?_serial_init 002F  
                          _nWPUEN 04AF                            ___bmul 2979                            ___lmul 2CBB  
                          ___wmul 2ACA                            _echoed 0384                         ??___lldiv 0029  
                       ??___lwdiv 0025          heatsensor_event@detected 0040                         ??___lwmod 002D  
               _setupbutton_event 37C6                            _pacers 0220                            _memcpy 2BC2  
                          _readch 227E                            _locked 038B                            _paused 038D  
                          _second 014C              __end_of_eeprom_write 2C84                         ??_get_Arm 0021  
                          _printf 14A0                ?_setupbutton_event 0040                            clrloop 378D  
                          _strlen 2C1E                            _uptime 01CA                  __end_of_set_Bowl 2AA6  
                          fptable 0100                  __end_of_set_Pump 28AC                  ??_process_button 003E  
                          fptotal 000B                         ??_isdigit 0021                  __end_of_set_mode 2EE8  
                ??_water_detected 0021                         ??_set_LED 0022                         ??_set_Arm 0021  
                __end_of_rtc_init 2A04                  __end_of_rtc_work 207B                  ??_timeoutexpired 002B  
             ??_setupbutton_event 0041                         ??_strncmp 0029                    water_fill@fill 0022  
                    _cat_detected 0380        __size_of_startbutton_event 000E      romwashprogram_reqins@address 0021  
                    ?_setup_short 0072                   eeprom_read@addr 0024               set_LED_Error@repeat 002E  
              __size_of_cmd2index 004E               ___bmul@multiplicand 0021                        _echo$17754 004A  
                  water_init@mask 0022         __end_of_setupbutton_event 37D4                    __pcstackCOMMON 0072  
                    __pidataBANK0 0002                      __pidataBANK1 28CE                      __pidataBANK2 2947  
                    __pidataBANK3 2B3E                      __pidataBANK4 2C84               _catgenie_work$30512 0045  
 __size_of_litterlanguage_cleanup 0038             __end_of_serial_rx_isr 01DE                     _isdigit$29792 0021  
           __end_of_serial_tx_isr 0100                     __end_of_putch 2B95                 _reflectionquality 00D0  
                 _postponetimeout 2EE8                __size_of_get_Dryer 0005                      ?_start_short 0072  
         set_LED_Cartridge@repeat 002E               fp__heatsensor_event 0109             timeoutexpired@timer_p 0029  
        postponetimeout@longshort 002F   __size_of_litterlanguage_running 0007                 eeprom_write@value 0021  
                     set_LED@mask 0025                __size_of_both_long 0010                        _help$30523 004B  
                         ??_putch 0021                        __pbssBANK0 0062                        __pbssBANK1 00C6  
                      __pbssBANK2 0120                        __pbssBANK3 01CA          __end_of_update_autotimer 274E  
               ??_req_instruction 0025          __end_of_heatsensor_event 28CE              __end_of_gettimestamp 2DF2  
                      _debouncers 01A0                        _cart_level 006E             __size_of_cmdline_init 000E  
          postponetimeout@timer_p 0021             __size_of_cmdline_work 001F                  ??_set_LED_Locked 002F  
                      __pmaintext 274E                           ?___bmul 0021                           ?___lmul 0021  
    timestampdiff@early_longshort 0031                           ?___wmul 0021                  ??_interrupt_init 0021  
        userinterface_work@update 005A                        __pintentry 0004              __size_of_set_LED_Cat 000F  
              __size_of_set_Dryer 0011                           _CCP1CON 0293                           ?_memcpy 0021  
                      __ptext3300 2D2B                        __ptext3301 0945                        __ptext3310 2DF2  
                      __ptext3302 2ACA                        __ptext3311 01FF                        __ptext3303 2979  
                      __ptext3320 3770                        __ptext3312 29CB                        __ptext3304 2931  
                      __ptext3321 289B                        __ptext3313 2BC2                        __ptext3305 1000  
                      __ptext3330 29AF                        __ptext3322 376B                        __ptext3314 295F  
                      __ptext3306 2C1E                        __ptext3250 21AC                        __ptext3331 3766  
                      __ptext3323 291B                        __ptext3315 37AD                        __ptext3307 227E  
                      __ptext3251 1D2E                        __ptext3332 3780                        __ptext3324 2AA6  
                      __ptext3316 3775                        __ptext3308 2B68                        __ptext3260 1256  
                      __ptext3252 2001                        __ptext3341 00FF                        __ptext3333 377A  
                      __ptext3325 2A22                        __ptext3317 1BF0                        __ptext3309 2EE8  
                      __ptext3261 2A40                        __ptext3253 01DE                           ?_readch 0072  
                      __ptext3342 010D                        __ptext3334 2A5F                        __ptext3326 2A82  
                      __ptext3318 2DAA                        __ptext3270 098C                        __ptext3262 2630  
                      __ptext3254 1053                        __ptext3343 2832                        __ptext3335 2C4D  
                      __ptext3327 2A04                        __ptext3319 28AC                        __ptext3271 2E8E  
                      __ptext3263 180C                        __ptext3255 1942                        __ptext3247 1E8C  
                      _get_Dosage 376B                        __ptext3344 2993                        __ptext3336 3799  
                      __ptext3328 3792                        __ptext3280 37F1                        __ptext3272 2D6A  
                      __ptext3264 188D                        __ptext3256 37D4                        __ptext3248 0B3D  
                      __ptext3345 2AEF                        __ptext3337 2B16                        __ptext3329 288A  
                      __ptext3281 2906                        __ptext3273 2CF3                        __ptext3265 2143  
                      __ptext3257 28BD                        __ptext3249 2215                        __ptext3338 37E2  
                      __ptext3290 287A                        __ptext3282 26BE                        __ptext3274 24BD  
                      __ptext3266 2446                        __ptext3258 37C6                        __ptext3339 37A2  
                      __ptext3291 20DE                        __ptext3283 2537                        __ptext3275 2FA1  
                      __ptext3267 25B3                        __ptext3259 22EA                        __ptext3292 28F3  
                      __ptext3284 2B95                        __ptext3276 286B                        __ptext3268 2BF0  
                      __ptext3293 28E0                        __ptext3285 201B                        __ptext3277 285C  
                      __ptext3269 1AC6                        __ptext3294 235B                        __ptext3286 37B8  
                      __ptext3278 284D                        __ptext3295 14A0                        __ptext3287 29E7  
                      __ptext3279 283E                        __ptext3296 19FF                        __ptext3288 2E40  
                      __ptext3297 0053                        __ptext3289 23CF                        __ptext3298 207B  
                      __ptext3299 2CBB                    ___lmul@product 0029                       set_Arm@mode 0022  
  __size_of_litterlanguage_paused 0005      litterlanguage_event@argument 0057     __end_of_litterlanguage_paused 377A  
        __size_of_catsensor_event 00B5                           ?_printf 002F                __size_of_set_pacer 0077  
                         _T1CKPS0 00C4                           _T1CKPS1 00C5                           ?_strlen 0021  
                         _T1OSCEN 00C3           catsensor_event@detected 0051                           i1l13041 29AE  
                         i1l13042 29AE                           i1l13045 283D                           i1l13046 283D  
                         i1l21403 2B15                           i1l21404 2B13                           i1l21405 2B13  
                         i1l21406 2B14                           i1l21407 2B15                           i1l19300 01B3  
                         i1l19301 01B9                           i1l19302 01DD                           i1l19305 00FF  
                         i1l33901 0016                           i1l33911 0028                           i1l33903 0017  
                         i1l33921 003D                           i1l33913 0029                           i1l33905 001B  
                         i1l33931 2993                           i1l19291 0124                           i1l33923 0041  
                         i1l33915 002D                           i1l33907 001F                           i1l19292 01DD  
                         i1l33941 29A1                           i1l33933 2997                           i1l19293 0138  
                         i1l33925 0046                           i1l33917 0031                           i1l33909 0026  
                         i1l19294 01BF                           i1l33927 2AEF                           i1l33943 29A4  
                         i1l33935 2998                           i1l33951 283B                           i1l33919 0038  
                         i1l19296 017E                           i1l33929 2B0A                           i1l33945 29A9  
                         i1l33937 299D                           i1l33961 0120                           i1l33953 010D  
                         i1l19298 01A4                           i1l33939 299F                           i1l33947 2832  
                         i1l19299 01B3                           i1l33971 0135                           i1l33963 0121  
                         i1l33955 0112                           i1l33949 2836                           i1l33981 0150  
                         i1l33973 0137                           i1l33965 0123                           i1l33957 011D  
                         i1l33893 0008                           i1l33991 01B2                           i1l33983 0154  
                         i1l33967 0128                           i1l33975 0138                           i1l33959 011F  
                         i1l33895 000C                           i1l33993 01B9                           i1l33985 0163  
                         i1l33977 0143                           i1l33969 0133                           i1l33897 000D  
                         i1l33995 01BC                           i1l33987 017E                           i1l33979 014C  
                         i1l33899 0011                           i1l33989 01A4                           i1l33997 01BF  
                         i1l33999 01CD                __size_of_proc_char 0081                __size_of_proc_line 012A  
              __size_of_timer_isr 0027                 __end_of_cmd2index 2E8E                   _error_execution 0386  
             settimeout@longshort 003B       __end_of_catsensor_isr_input 283E                __size_of_printtime 002D  
     __end_of_catsensor_isr_timer 29AF                           _TMR1CS0 00C6                           _TMR1CS1 00C7  
                     set_Dryer@on 0022                         ?_get_Bowl 0072                        _both_short 2906  
                       ?_get_Pump 0072            _litterlanguage_cleanup 2CF3                    _catsensor_init 37E2  
                    _detected_dbc 0369                    _catsensor_work 2630                      _detected_cur 0382  
                    _detected_old 0383                        __stringtab 0200            __size_of_set_LED_Error 000F  
                    _cmdline_init 37B8     __size_of_litterlanguage_event 0069            catgenie_work@tempstate 0048  
   __size_of_litterlanguage_pause 024A                      _cmdline_work 2A40     __size_of_litterlanguage_start 0040  
        __size_of_get_instruction 0013                  ??_update_display 0032                 __end_of_get_Dryer 3775  
                       ?_set_Bowl 0072            _litterlanguage_running 3792               timestampdiff@late_p 0023  
                         _nT1SYNC 00C2                         ?_set_Pump 0072                      cmd2index@cmd 002F  
                       ?_set_mode 0072        __size_of_setupbutton_event 000E             __size_of_eeprom_write 0037  
        __size_of_exe_instruction 04C3                         ?_rtc_init 0072                   __size_of___bmul 001A  
               __end_of_both_long 288A           __end_of_postponetimeout 2F43                         ?_rtc_work 0072  
                 __size_of___lmul 0038                           ___lldiv 207B                   __size_of___wmul 0025  
                  _cleanupprogram 04EC                           ___lwdiv 0945                           ___lwmod 2D2B  
            __size_of_serial_init 00C7                 catgenie_init@temp 0029                   __size_of_memcpy 002E  
                 __size_of_readch 006C                        _linebuffer 01CE                        _panel_mode 00D9  
                      _error_fill 0387                           _get_Arm 2A22                   __size_of_printf 0360  
       __size_of_wait_instruction 007C                           _filling 036A               _litterlanguage_init 25B3  
                 __size_of_strlen 002F               _litterlanguage_stop 21AC               _litterlanguage_work 1E8C  
                         _dpowers 0201                           _isdigit 2931                      __size_of_isr 004A  
                         _set_LED 2DF2                           _set_Arm 2AA6            __end_of_catsensor_init 37F1  
                         _pinging 038E       _litterlanguage_cleanup$5941 004F            __end_of_catsensor_work 26BE  
                      ??_get_Bowl 0021                           fp__echo 0105                           fp__help 0103  
                      ??_get_Pump 0021                 set_LED_Cat@repeat 002E                           _surface 0459  
                         _strncmp 1000              end_of_initialization 2F9E                        _set_Beeper 37F1  
               __end_of_set_Dryer 28BD                        _set_Dosage 288A                           memcpy@d 0026  
                         memcpy@n 0022                           memcpy@s 0027                           isr@temp 007D  
                    readch@result 0024                           init_ram 3786                   _proc_line$30517 0055  
           __end_of_timestampdiff 1D2E                      _eeprom_write 2C4D                           initloop 3787  
               __end_of_set_pacer 2446              ?_litterlanguage_init 0072                    set_pacer@pacer 002D  
           _romwashprogram_getins 295F              ?_litterlanguage_stop 0072              ?_litterlanguage_work 0072  
           __end_of_water_filling 3786         process_button@button_mask 003F              __size_of_setup_short 0077  
           _romwashprogram_reqins 37AD                   ___lldiv@divisor 0021                 __end_of_proc_char 188D  
                      ??_set_Bowl 0021                 __end_of_proc_line 1BF0                 __end_of_timer_isr 2B16  
                 ___lldiv@counter 002E                        ??_set_Pump 0021                        ??_set_mode 0047  
          __size_of_catgenie_init 00A0                 __end_of_printtime 2BC2            __size_of_catgenie_work 0203  
                         printf@c 0042                           printf@f 002F                        ??_rtc_init 003D  
                         putch@ch 0022                        ??_rtc_work 0037                      __pstringtext 0200  
              _userinterface_init 2BF0                     _set_LED_Error 283E                        _prg_source 00DA  
                      _hysteresis 0064                  _cartridgetimeout 013A                _userinterface_work 1D2E  
            fp__startbutton_event 010B                       ?_get_Dosage 0072                 catgenie_work@temp 0049  
                         strlen@s 0029     litterlanguage_pause@timer_now 0051                        _timer_fill 00E9  
                       _PORTB_old 00D4                        _timer_init 37A2                        _settimeout 20DE  
                      _water_fill 291B                        _setup_long 01FF                        _timeoutnow 29CB  
                      _water_init 2B16               ?_userinterface_init 0072                        _water_work 1942  
             ?_userinterface_work 0072                     ?_timeoutnever 0025                   ?_catsensor_init 0072  
                 ?_catsensor_work 0072                 ??_catsensor_event 004F             __size_of_gettimestamp 0048  
            __size_of_start_short 0021                       ?_both_short 0072                        _start_long 2001  
            set_LED_Error@pattern 0031             ??_litterlanguage_init 0052             ??_litterlanguage_stop 004F  
           ??_litterlanguage_work 005A                     ??_eeprom_read 0021                       printf@width 003F  
            ??_userinterface_init 004A              ??_userinterface_work 0058        req_instruction@instruction 0023  
      get_instruction@instruction 0025              _exe_instruction$6010 00C4              _exe_instruction$6002 00C0  
            _exe_instruction$6006 00C2              _exe_instruction$5960 00AA              _exe_instruction$5961 00AC  
            _exe_instruction$5954 00A6              _exe_instruction$5955 00A8              _exe_instruction$5967 00AE  
            _exe_instruction$5976 00B2              _exe_instruction$5968 00B0              _exe_instruction$5993 00BA  
            _exe_instruction$5985 00B6              _exe_instruction$5977 00B4              _exe_instruction$5994 00BC  
            _exe_instruction$5986 00B8              _exe_instruction$5998 00BE                 ??_get_instruction 0025  
                  ?_set_LED_Error 002E                  ?_postponetimeout 0021                    __end_of___bmul 2993  
                  __end_of___lmul 2CF3                    __end_of___wmul 2AEF                      _gettimestamp 2DAA  
                  __end_of_memcpy 2BF0                    __end_of_readch 22EA                     __pbitbssBANK0 0368  
               ??_exe_instruction 0059                       ___resetbits 0020                    __end_of_printf 1800  
                  ??_timeoutnever 0027                   _req_instruction 28E0                    __end_of_strlen 2C4D  
             start_initialization 2F43                     _catgenie_init 0053          _litterlanguage_work$5880 005C  
                   _catgenie_work 1053                       __end_of_isr 004E              set_LED_Locked@repeat 002E  
                     ___powerdown 0103                       ?_set_Beeper 002E                       ?_set_Dosage 0072  
          ?_romwashprogram_getins 0072                 ?_update_autotimer 0072                 _set_LED_Cartridge 284D  
             __size_of_get_Dosage 0005          set_LED_Cartridge@pattern 0031            ?_romwashprogram_reqins 0021  
              ??_update_autotimer 003D                ?_set_LED_Cartridge 002E                ??_heatsensor_event 0041  
               settimeout@timer_p 002D                 _watersensor_event 22EA                    cmd2index@index 0030  
                    set_LED@latch 0024                          ??___bmul 0022                          ??___lmul 0029  
                        ??___wmul 0025               __end_of_eeprom_read 2A82                ?_watersensor_event 0072  
             ??_set_LED_Cartridge 002F               __size_of_both_short 0015                       __pdataBANK0 006E  
                     __pdataBANK1 00DD                       __pdataBANK2 0158                       __pdataBANK3 01A0  
                     __pdataBANK4 0220                          ??_memcpy 0024                          ??_readch 0021  
                        ??_printf 0039                       ?_timer_init 0072                  _wait_instruction 2537  
                        ??_strlen 0023                       ?_settimeout 002D               ??_watersensor_event 004F  
                     ?_water_fill 0072                       ?_setup_long 0072                       ?_timeoutnow 0025  
                     ?_water_init 0072                       ?_water_work 0072           ?_litterlanguage_cleanup 0072  
                  ?_catgenie_init 0072             catgenie_init@tempmask 0028                    ?_catgenie_work 0072  
                   __pcstackBANK0 0021                     __pcstackBANK1 00A0              fp__setupbutton_event 0107  
                     _cat_present 0381                         _cmd2index 2E40                         ___timeout 0104  
       __end_of_set_LED_Cartridge 285C                 gettimestamp@bytes 0026                 gettimestamp@ticks 0021  
               __size_of_get_Bowl 001E                       ?_start_long 0072                  eeprom_write@addr 0024  
               __size_of_get_Pump 0005            __size_of_serial_rx_isr 00D1            __size_of_serial_tx_isr 0001  
                      set_LED@led 0023           __size_of_process_button 0069           ?_litterlanguage_running 0072  
         __size_of_water_detected 0006         __end_of_watersensor_event 235B           __size_of_timeoutexpired 0074  
      exe_instruction@ret_address 00D2                         _debouncer 0158           postponetimeout@postpone 0023  
                ___lwdiv@dividend 0023                   ??_set_LED_Error 002F                     ??_set_LED_Cat 002F  
                  _buttonmask_cum 00D5                    _buttonmask_cur 00D6                    _buttonmask_evt 00D7  
                       __pfunctab 0100                 __size_of_set_Bowl 0024                 __size_of_set_Pump 0011  
    __end_of_litterlanguage_event 227E                         _get_Dryer 3770                          ?___lldiv 0021  
    __end_of_litterlanguage_pause 14A0                          ?___lwdiv 0021           __end_of_req_instruction 28F3  
               __size_of_set_mode 005A                          ?___lwmod 0029      __end_of_litterlanguage_start 2DAA  
               __size_of_rtc_init 001D               __size_of_set_Beeper 000F                         _drain_dry 0342  
           _catsensor_event$10723 004F                 __size_of_rtc_work 0060                          ?_get_Arm 0072  
                       _both_long 287A                         __pswtext1 00F3                         __pswtext2 2800  
                       __pswtext3 1800                         __pswtext4 281E               __size_of_set_Dosage 0011  
           catgenie_work@tempmask 0046    __end_of_litterlanguage_cleanup 2D2B             _litterlanguage_paused 3775  
                        ?_isdigit 0072                        set_Pump@on 0022                          ?_set_LED 0021  
                       _auto_mode 0062                          ?_set_Arm 0072                         _autotimer 00DD  
                  _error_overheat 0389                         _hexpowers 020B                  ___lwdiv@quotient 0027  
                       _localecho 006F                        ?_cmd2index 002C                          ?_strncmp 0025  
                       _full_wash 038A                    __size_of_putch 002D    __end_of_litterlanguage_running 3799  
                       _ins_state 0065                      set_Bowl@mode 0022               startbutton_event@up 0040  
       _litterlanguage_start$5890 004F      __size_of_catsensor_isr_input 000C                    ___wmul@product 0025  
    __size_of_catsensor_isr_timer 001C                      set_Dosage@on 0022               __size_of_timer_init 000B  
                     _eeprom_read 2A5F                         _set_Dryer 28AC               __size_of_settimeout 0065  
             __size_of_water_fill 0016               __size_of_setup_long 0001              __end_of_timeoutnever 29CB  
             __size_of_timeoutnow 001C               __size_of_water_init 0028                   _cur_instruction 0068  
             __size_of_water_work 00BD                     ??_serial_init 0033                         _set_pacer 23CF  
       watersensor_event@detected 0052                         _proc_char 180C                        ?_get_Dryer 0072  
                       _proc_line 1AC6                         _timer_isr 2AEF                         help@index 004D  
                    ??_get_Dosage 0021                   _catsensor_event 188D                         _overflows 00CA  
                   _serial_rx_isr 010D                         _printtime 2B95                     _serial_tx_isr 00FF  
             __end_of_set_LED_Cat 286B               __size_of_start_long 001A                  ??_catsensor_init 0021  
                      ?_both_long 0072                        _ADCON0bits 009D                        _ADCON1bits 009E  
                ??_catsensor_work 0052                        water@state 00DC                 ___wmul@multiplier 0021  
                 ??_catgenie_init 0025           __size_of_set_LED_Locked 000F                   ??_catgenie_work 0042  
                      printf@_val 0043                        printf@flag 003E                         main@flags 0061  
                      printf@prec 0041                       _ledalwayson 036B                    _timer_autodose 0164  
            catgenie120@PORTB_old 00DB           __size_of_interrupt_init 0009                      ??_both_short 003D  
              process_button@down 003D                 ___lmul@multiplier 0021        __size_of_set_LED_Cartridge 000F  
                   ??_setup_short 004A                   _get_instruction 28F3                        putch@dummy 0023  
            timestampdiff@early_p 0021                __end_of_get_Dosage 3770        __size_of_watersensor_event 0071  
                      ?_set_Dryer 0072         litterlanguage_cleanup@wet 0051                  settimeout@timout 002F  
                 _exe_instruction 0B3D                        ?_set_pacer 0029               _serial_rx_isr$22342 0079  
                      ?_proc_char 0072                        ?_proc_line 0072                        ?_timer_isr 0072  
                  ?_serial_rx_isr 0072                  ?_req_instruction 0023                    ?_serial_tx_isr 0072  
                __size_of___lldiv 0063                __end_of_both_short 291B                  __size_of___lwdiv 0047  
                      ?_printtime 0072                  __size_of___lwmod 003F               __end_of_serial_init 1AC6  
         __size_of_update_display 01B1                       _holdtimeout 015E            ?_litterlanguage_paused 0072  
                gettimestamp@temp 0028                  __size_of_get_Arm 001E                       _ins_address 00CE  
          __size_of_timestampdiff 013E                  set_pacer@pattern 0029                     ??_start_short 0057  
                       set_LED@on 0021            __size_of_water_filling 0006                       _currenttime 00C6  
                __size_of_isdigit 0016                   ___lwdiv@divisor 0021                       _error_drain 0385  
                __size_of_set_LED 004E                          _cattimer 0140                       _error_flood 0388  
                __size_of_set_Arm 0024                   ___lwdiv@counter 0026                          _detected 0368  
                        _get_Bowl 2A04       __end_of_litterlanguage_init 2630                          _get_Pump 3766  
         ??_romwashprogram_getins 0021       __end_of_litterlanguage_stop 2215       __end_of_litterlanguage_work 2000  
                     ??_cmd2index 002E                          _commands 0510                      ??_set_Beeper 002F  
             exe_instruction@temp 00A4           ??_romwashprogram_reqins 0023              _litterlanguage_event 2215  
                     _ins_pointer 006B              _litterlanguage_pause 1256                  __size_of_strncmp 0053  
                    ??_set_Dosage 0021                    _process_button 2143                 timestampdiff@diff 002D  
            _litterlanguage_start 2D6A                          echo@argc 0047                          echo@argv 0049  
                  _water_detected 377A                     __size_of_echo 007A                     __size_of_help 005F  
                   __size_of_main 00B2          __end_of_wait_instruction 25B3                          _error_nr 0063  
                  _timeoutexpired 235B                        strncmp@len 0027                          _interval 00D8  
     __size_of_userinterface_init 002E       __size_of_userinterface_work 015E                          _set_Bowl 2A82  
                        clear_ram 378C           __end_of_catsensor_event 1942                          _set_Pump 289B  
                        _pingtime 0146               __end_of_setup_short 24BD                          _set_mode 2E8E  
                     _set_LED_Cat 285C                          help@argc 0047                          help@argv 0049  
                        _rtc_init 29E7                          _rtc_work 201B                       ??_get_Dryer 0021  
                    set_mode@mode 0049                set_LED_Cat@pattern 0031         __size_of_update_autotimer 0090  
       __size_of_heatsensor_event 0011                      ??_timer_init 0021                       ??_both_long 0025  
                     _longhandled 038C                __end_of_set_Beeper 3800                      ??_settimeout 0033  
                    ??_water_fill 0021                __end_of_set_Dosage 289B                      ??_setup_long 0021  
                    ??_timeoutnow 0027                      ??_water_init 0021                     _timer_waitins 016A  
                    ??_water_work 0053          __size_of_postponetimeout 005B                          memcpy@d1 0025  
                        memcpy@s1 0021           __end_of_get_instruction 2906                          readch@ch 0023  
                        isdigit@c 0022                 _setup_short$10735 004B            __end_of_process_button 21AC  
          __end_of_water_detected 3780             ?_litterlanguage_event 0057                     ?_cmdline_init 0072  
           ?_litterlanguage_pause 0072               __end_of_start_short 01FF                     ?_cmdline_work 0072  
                    ??_start_long 0052                          intlevel1 0100             ?_litterlanguage_start 0072  
                 set_pacer@repeat 002A            __end_of_timeoutexpired 23CF             __size_of_timeoutnever 001C  
         __end_of_exe_instruction 1000                  ___lwmod@dividend 002B                  ___lldiv@dividend 0025  
                   _timestampdiff 1BF0               catgenie_work@status 0047                       ??_set_Dryer 0021  
       litterlanguage_event@event 0058                __end_of_timer_init 37AD                         strncmp@s1 002B  
                       strncmp@s2 0025                     _water_filling 3780                __end_of_settimeout 2143  
              __end_of_water_fill 2931                __end_of_setup_long 0200                __end_of_timeoutnow 29E7  
                     ??_set_pacer 002B                __end_of_water_init 2B3E                __end_of_water_work 19FF  
                     _serial_init 19FF                   ??_serial_rx_isr 0072                   ??_serial_tx_isr 0072  
                        printf@ap 003D                       ??_proc_char 005D                       ??_proc_line 004F  
                     ??_timer_isr 0072                       ??_printtime 0047               _catsensor_isr_input 2832  
               set_Beeper@pattern 0031           settimeout@tempLongTicks 0037                    _set_LED_Locked 286B  
             _catsensor_isr_timer 2993                __end_of_start_long 201B                  ___lldiv@quotient 002A  
                 ___lwmod@divisor 0029                          strlen@cp 002A                    _interrupt_init 3799  
                 ___lwmod@counter 002E                       _sensortimer 0152                      _timeoutnever 29AF  
             setupbutton_event@up 0040                       _timer_drain 00E3                    ??_cmdline_init 0047  
                 ?_process_button 003D                    ??_cmdline_work 005F                   ?_water_detected 0072  
                set_Beeper@repeat 002E                   ?_timeoutexpired 0029                       _setup_short 2446  
            ?_catsensor_isr_input 0072                     ?_eeprom_write 0021              ?_catsensor_isr_timer 0072  
                  ?_timestampdiff 0021                      proc_char@rxd 005E                      ?_eeprom_read 0072  
                  ?_water_filling 0072                       _washprogram 0213                  ?_catsensor_event 0072  
       litterlanguage_pause@pause 0050  
