

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Mar 10 12:27:37 2023

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1939
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 20 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 20 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    51  8007  C9E1               	dw 0xFFF9 & 0xFFE7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xF9FF & 0xFFFF & 0xEFFF & 0xD
                                 FFF ;#
    52                           # 21 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 21 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    55  8008  DAFF               	dw 0xFFFF & 0xFFFF & 0xFEFF & 0xFFFF & 0xFBFF & 0xDFFF ;#
    56                           	FNCALL	_main,_catgenie_init
    57                           	FNCALL	_main,_serial_init
    58                           	FNCALL	_main,_printf
    59                           	FNCALL	_main,_timer_init
    60                           	FNCALL	_main,_rtc_init
    61                           	FNCALL	_main,_catsensor_init
    62                           	FNCALL	_main,_water_init
    63                           	FNCALL	_main,_userinterface_init
    64                           	FNCALL	_main,_cmdline_init
    65                           	FNCALL	_main,_litterlanguage_init
    66                           	FNCALL	_main,_interrupt_init
    67                           	FNCALL	_main,_rtc_work
    68                           	FNCALL	_main,_catsensor_work
    69                           	FNCALL	_main,_water_work
    70                           	FNCALL	_main,_catgenie_work
    71                           	FNCALL	_main,_userinterface_work
    72                           	FNCALL	_main,_cmdline_work
    73                           	FNCALL	_main,_litterlanguage_work
    74                           	FNCALL	_catgenie_work,_settimeout
    75                           	FNCALL	_catgenie_work,___bmul
    76                           	FNCALL	_catgenie_work,_timeoutexpired
    77                           	FNCALL	_catgenie_work,_setupbutton_event
    78                           	FNCALL	_catgenie_work,_startbutton_event
    79                           	FNCALL	_catgenie_work,_heatsensor_event
    80                           	FNCALL	_catgenie_work,_timeoutnever
    81                           	FNCALL	_setupbutton_event,_process_button
    82                           	FNCALL	_startbutton_event,_process_button
    83                           	FNCALL	_litterlanguage_work,_water_detected
    84                           	FNCALL	_litterlanguage_work,_water_filling
    85                           	FNCALL	_litterlanguage_work,_timeoutexpired
    86                           	FNCALL	_litterlanguage_work,_printtime
    87                           	FNCALL	_litterlanguage_work,_printf
    88                           	FNCALL	_litterlanguage_work,_litterlanguage_event
    89                           	FNCALL	_litterlanguage_work,_get_Pump
    90                           	FNCALL	_litterlanguage_work,_timeoutnever
    91                           	FNCALL	_litterlanguage_work,_set_Dosage
    92                           	FNCALL	_litterlanguage_work,_req_instruction
    93                           	FNCALL	_litterlanguage_work,_get_instruction
    94                           	FNCALL	_litterlanguage_work,_eeprom_read
    95                           	FNCALL	_litterlanguage_work,_eeprom_write
    96                           	FNCALL	_litterlanguage_work,_exe_instruction
    97                           	FNCALL	_litterlanguage_work,_wait_instruction
    98                           	FNCALL	_cmdline_work,_putch
    99                           	FNCALL	_cmdline_work,_proc_char
   100                           	FNCALL	_cmdline_work,_readch
   101                           	FNCALL	_userinterface_work,_timeoutexpired
   102                           	FNCALL	_userinterface_work,_update_autotimer
   103                           	FNCALL	_userinterface_work,_printtime
   104                           	FNCALL	_userinterface_work,_printf
   105                           	FNCALL	_userinterface_work,_litterlanguage_start
   106                           	FNCALL	_userinterface_work,_litterlanguage_running
   107                           	FNCALL	_userinterface_work,_timeoutnow
   108                           	FNCALL	_userinterface_work,_start_short
   109                           	FNCALL	_userinterface_work,_setup_short
   110                           	FNCALL	_userinterface_work,_both_short
   111                           	FNCALL	_userinterface_work,_set_Beeper
   112                           	FNCALL	_userinterface_work,_start_long
   113                           	FNCALL	_userinterface_work,_setup_long
   114                           	FNCALL	_userinterface_work,_both_long
   115                           	FNCALL	_userinterface_work,_timeoutnever
   116                           	FNCALL	_userinterface_work,_update_display
   117                           	FNCALL	_catsensor_work,_timeoutexpired
   118                           	FNCALL	_catsensor_work,_settimeout
   119                           	FNCALL	_catsensor_work,_timeoutnever
   120                           	FNCALL	_catsensor_work,_catsensor_event
   121                           	FNCALL	_proc_char,_putch
   122                           	FNCALL	_proc_char,_proc_line
   123                           	FNCALL	_proc_char,_printf
   124                           	FNCALL	_catsensor_event,_printtime
   125                           	FNCALL	_catsensor_event,_printf
   126                           	FNCALL	_catsensor_event,_timeoutnever
   127                           	FNCALL	_catsensor_event,_settimeout
   128                           	FNCALL	_catsensor_event,_update_display
   129                           	FNCALL	_process_button,_set_Beeper
   130                           	FNCALL	_process_button,_settimeout
   131                           	FNCALL	_process_button,_timeoutnever
   132                           	FNCALL	_process_button,_update_display
   133                           	FNCALL	_start_long,_litterlanguage_running
   134                           	FNCALL	_start_long,_litterlanguage_start
   135                           	FNCALL	_start_long,_litterlanguage_stop
   136                           	FNCALL	_setup_short,_set_mode
   137                           	FNCALL	_setup_short,_settimeout
   138                           	FNCALL	_start_short,_litterlanguage_running
   139                           	FNCALL	_start_short,_litterlanguage_start
   140                           	FNCALL	_start_short,_litterlanguage_paused
   141                           	FNCALL	_start_short,_litterlanguage_pause
   142                           	FNCALL	_exe_instruction,_printtime
   143                           	FNCALL	_exe_instruction,_printf
   144                           	FNCALL	_exe_instruction,_set_Bowl
   145                           	FNCALL	_exe_instruction,_set_Arm
   146                           	FNCALL	_exe_instruction,_eeprom_read
   147                           	FNCALL	_exe_instruction,_eeprom_write
   148                           	FNCALL	_exe_instruction,_water_detected
   149                           	FNCALL	_exe_instruction,_water_fill
   150                           	FNCALL	_exe_instruction,_settimeout
   151                           	FNCALL	_exe_instruction,_timeoutnever
   152                           	FNCALL	_exe_instruction,_set_Pump
   153                           	FNCALL	_exe_instruction,_set_Dryer
   154                           	FNCALL	_exe_instruction,___lmul
   155                           	FNCALL	_exe_instruction,___wmul
   156                           	FNCALL	_exe_instruction,___lwdiv
   157                           	FNCALL	_exe_instruction,___lwmod
   158                           	FNCALL	_exe_instruction,_set_Dosage
   159                           	FNCALL	_exe_instruction,_memcpy
   160                           	FNCALL	_exe_instruction,_litterlanguage_stop
   161                           	FNCALL	_exe_instruction,_litterlanguage_event
   162                           	FNCALL	_water_work,_timeoutexpired
   163                           	FNCALL	_water_work,_settimeout
   164                           	FNCALL	_water_work,_watersensor_event
   165                           	FNCALL	_litterlanguage_init,_printf
   166                           	FNCALL	_litterlanguage_init,_litterlanguage_cleanup
   167                           	FNCALL	_litterlanguage_init,_eeprom_write
   168                           	FNCALL	_litterlanguage_init,_eeprom_read
   169                           	FNCALL	_userinterface_init,_eeprom_write
   170                           	FNCALL	_userinterface_init,_eeprom_read
   171                           	FNCALL	_userinterface_init,_set_mode
   172                           	FNCALL	_userinterface_init,_update_display
   173                           	FNCALL	_proc_line,_strlen
   174                           	FNCALL	_proc_line,_cmd2index
   175                           	FNCALL	_proc_line,_printf
   176                           	FNCALL	_proc_line,___bmul
   177                           	FNCALL	_proc_line,Fake
   178                           	FNCALL	_proc_line,_echo
   179                           	FNCALL	_proc_line,_help
   180                           	FNCALL	_update_display,_set_LED_Error
   181                           	FNCALL	_update_display,_set_LED_Cartridge
   182                           	FNCALL	_update_display,_set_LED
   183                           	FNCALL	_update_display,_set_LED_Cat
   184                           	FNCALL	_update_display,_set_LED_Locked
   185                           	FNCALL	_set_mode,_printf
   186                           	FNCALL	_set_mode,_update_autotimer
   187                           	FNCALL	_set_mode,_timeoutnow
   188                           	FNCALL	_set_mode,_eeprom_write
   189                           	FNCALL	_watersensor_event,_printtime
   190                           	FNCALL	_watersensor_event,_printf
   191                           	FNCALL	_watersensor_event,_water_fill
   192                           	FNCALL	_watersensor_event,_timeoutnever
   193                           	FNCALL	_watersensor_event,_litterlanguage_event
   194                           	FNCALL	_litterlanguage_stop,_printtime
   195                           	FNCALL	_litterlanguage_stop,_printf
   196                           	FNCALL	_litterlanguage_stop,_set_Bowl
   197                           	FNCALL	_litterlanguage_stop,_set_Arm
   198                           	FNCALL	_litterlanguage_stop,_water_fill
   199                           	FNCALL	_litterlanguage_stop,_set_Dosage
   200                           	FNCALL	_litterlanguage_stop,_set_Pump
   201                           	FNCALL	_litterlanguage_stop,_set_Dryer
   202                           	FNCALL	_litterlanguage_stop,_timeoutnever
   203                           	FNCALL	_litterlanguage_stop,_litterlanguage_event
   204                           	FNCALL	_litterlanguage_pause,_printtime
   205                           	FNCALL	_litterlanguage_pause,_get_Bowl
   206                           	FNCALL	_litterlanguage_pause,_set_Bowl
   207                           	FNCALL	_litterlanguage_pause,_get_Arm
   208                           	FNCALL	_litterlanguage_pause,_set_Arm
   209                           	FNCALL	_litterlanguage_pause,_water_filling
   210                           	FNCALL	_litterlanguage_pause,_water_fill
   211                           	FNCALL	_litterlanguage_pause,_get_Dosage
   212                           	FNCALL	_litterlanguage_pause,_set_Dosage
   213                           	FNCALL	_litterlanguage_pause,_get_Pump
   214                           	FNCALL	_litterlanguage_pause,_set_Pump
   215                           	FNCALL	_litterlanguage_pause,_get_Dryer
   216                           	FNCALL	_litterlanguage_pause,_set_Dryer
   217                           	FNCALL	_litterlanguage_pause,_gettimestamp
   218                           	FNCALL	_litterlanguage_pause,_timestampdiff
   219                           	FNCALL	_litterlanguage_pause,_timeoutnever
   220                           	FNCALL	_litterlanguage_pause,_printf
   221                           	FNCALL	_litterlanguage_pause,_settimeout
   222                           	FNCALL	_litterlanguage_pause,_litterlanguage_event
   223                           	FNCALL	_litterlanguage_start,_printtime
   224                           	FNCALL	_litterlanguage_start,_printf
   225                           	FNCALL	_litterlanguage_cleanup,_printtime
   226                           	FNCALL	_litterlanguage_cleanup,_printf
   227                           	FNCALL	_help,_printf
   228                           	FNCALL	_help,___bmul
   229                           	FNCALL	_echo,_strncmp
   230                           	FNCALL	_echo,_printf
   231                           	FNCALL	_set_LED_Locked,_set_pacer
   232                           	FNCALL	_set_LED_Cat,_set_pacer
   233                           	FNCALL	_set_LED_Cartridge,_set_pacer
   234                           	FNCALL	_set_LED_Error,_set_pacer
   235                           	FNCALL	_set_Beeper,_set_pacer
   236                           	FNCALL	_both_short,_settimeout
   237                           	FNCALL	_update_autotimer,_settimeout
   238                           	FNCALL	_update_autotimer,_postponetimeout
   239                           	FNCALL	_update_autotimer,_timeoutnever
   240                           	FNCALL	_wait_instruction,_timeoutexpired
   241                           	FNCALL	_wait_instruction,_water_detected
   242                           	FNCALL	_wait_instruction,_timeoutnever
   243                           	FNCALL	_wait_instruction,_get_Dosage
   244                           	FNCALL	_printtime,_printf
   245                           	FNCALL	_rtc_work,_timeoutexpired
   246                           	FNCALL	_rtc_work,_postponetimeout
   247                           	FNCALL	_cmdline_init,_printf
   248                           	FNCALL	_rtc_init,_settimeout
   249                           	FNCALL	_cmd2index,___bmul
   250                           	FNCALL	_cmd2index,_strncmp
   251                           	FNCALL	_set_pacer,___bmul
   252                           	FNCALL	_set_pacer,_timeoutnow
   253                           	FNCALL	_both_long,_eeprom_write
   254                           	FNCALL	_heatsensor_event,_litterlanguage_event
   255                           	FNCALL	_settimeout,_gettimestamp
   256                           	FNCALL	_get_instruction,_romwashprogram_getins
   257                           	FNCALL	_req_instruction,_romwashprogram_reqins
   258                           	FNCALL	_timeoutexpired,_gettimestamp
   259                           	FNCALL	_printf,_putch
   260                           	FNCALL	_printf,_isdigit
   261                           	FNCALL	_printf,___wmul
   262                           	FNCALL	_printf,___bmul
   263                           	FNCALL	_printf,___lwdiv
   264                           	FNCALL	_printf,___lwmod
   265                           	FNCALL	_serial_init,___lldiv
   266                           	FNCALL	_catgenie_init,___bmul
   267                           	FNROOT	_main
   268                           	FNCALL	_isr,_timer_isr
   269                           	FNCALL	_isr,_catsensor_isr_timer
   270                           	FNCALL	_isr,_catsensor_isr_input
   271                           	FNCALL	_isr,_serial_rx_isr
   272                           	FNCALL	_isr,_serial_tx_isr
   273                           	FNCALL	intlevel1,_isr
   274                           	global	intlevel1
   275                           	FNROOT	intlevel1
   276                           	global	_cart_level
   277                           	global	_localecho
   278                           	global	_debouncer
   279                           	global	_holdtimeout
   280                           	global	_timer_autodose
   281                           	global	_timer_waitins
   282                           	global	_debouncers
   283                           	global	_pacers
   284                           	global	_autotimer
   285                           	global	_timer_drain
   286                           	global	_timer_fill
   287                           psect	idataBANK0,class=CODE,space=0,delta=2
   288                           global __pidataBANK0
   289  0002                     __pidataBANK0:
   290                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   291                           	line	72
   292                           
   293                           ;initializer for _cart_level
   294  0002  3464               	retlw	064h
   295                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
   296                           	line	35
   297                           
   298                           ;initializer for _localecho
   299  0003  3401               	retlw	01h
   300                           psect	idataBANK2,class=CODE,space=0,delta=2
   301                           global __pidataBANK2
   302  29AA                     __pidataBANK2:
   303                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
   304                           	line	36
   305                           
   306                           ;initializer for _debouncer
   307  29AA  34FF               	retlw	0FFh
   308  29AB  34FF               	retlw	0FFh
   309                           
   310  29AC  34FF               	retlw	0FFh
   311  29AD  34FF               	retlw	0FFh
   312  29AE  34FF               	retlw	0FFh
   313  29AF  34FF               	retlw	0FFh
   314                           
   315                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   316                           	line	53
   317                           
   318                           ;initializer for _holdtimeout
   319  29B0  34FF               	retlw	0FFh
   320  29B1  34FF               	retlw	0FFh
   321                           
   322  29B2  34FF               	retlw	0FFh
   323  29B3  34FF               	retlw	0FFh
   324  29B4  34FF               	retlw	0FFh
   325  29B5  34FF               	retlw	0FFh
   326                           
   327                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
   328                           	line	60
   329                           
   330                           ;initializer for _timer_autodose
   331  29B6  34FF               	retlw	0FFh
   332  29B7  34FF               	retlw	0FFh
   333                           
   334  29B8  34FF               	retlw	0FFh
   335  29B9  34FF               	retlw	0FFh
   336  29BA  34FF               	retlw	0FFh
   337  29BB  34FF               	retlw	0FFh
   338                           
   339                           	line	57
   340                           
   341                           ;initializer for _timer_waitins
   342  29BC  34FF               	retlw	0FFh
   343  29BD  34FF               	retlw	0FFh
   344                           
   345  29BE  34FF               	retlw	0FFh
   346  29BF  34FF               	retlw	0FFh
   347  29C0  34FF               	retlw	0FFh
   348  29C1  34FF               	retlw	0FFh
   349                           
   350                           psect	idataBANK3,class=CODE,space=0,delta=2
   351                           global __pidataBANK3
   352  2B96                     __pidataBANK3:
   353                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
   354                           	line	58
   355                           
   356                           ;initializer for _debouncers
   357  2B96  34FF               	retlw	0FFh
   358  2B97  34FF               	retlw	0FFh
   359                           
   360  2B98  34FF               	retlw	0FFh
   361  2B99  34FF               	retlw	0FFh
   362  2B9A  34FF               	retlw	0FFh
   363  2B9B  34FF               	retlw	0FFh
   364                           
   365  2B9C  346A               	retlw	06Ah
   366  2B9D  3418               	retlw	018h
   367  2B9E  3400               	retlw	0
   368  2B9F  3400               	retlw	0
   369                           
   370  2BA0  3400               	retlw	0
   371  2BA1  340D               	retlw	13&0ffh
   372  2BA2  3401               	retlw	01h
   373  2BA3  3409               	retlw	(fp__startbutton_event-fpbase)&0ffh
   374  2BA4  34FF               	retlw	0FFh
   375  2BA5  34FF               	retlw	0FFh
   376                           
   377  2BA6  34FF               	retlw	0FFh
   378  2BA7  34FF               	retlw	0FFh
   379  2BA8  34FF               	retlw	0FFh
   380  2BA9  34FF               	retlw	0FFh
   381                           
   382  2BAA  346A               	retlw	06Ah
   383  2BAB  3418               	retlw	018h
   384  2BAC  3400               	retlw	0
   385  2BAD  3400               	retlw	0
   386                           
   387  2BAE  3400               	retlw	0
   388  2BAF  340D               	retlw	13&0ffh
   389  2BB0  3420               	retlw	020h
   390  2BB1  3405               	retlw	(fp__setupbutton_event-fpbase)&0ffh
   391  2BB2  34FF               	retlw	0FFh
   392  2BB3  34FF               	retlw	0FFh
   393                           
   394  2BB4  34FF               	retlw	0FFh
   395  2BB5  34FF               	retlw	0FFh
   396  2BB6  34FF               	retlw	0FFh
   397  2BB7  34FF               	retlw	0FFh
   398                           
   399  2BB8  346A               	retlw	06Ah
   400  2BB9  3418               	retlw	018h
   401  2BBA  3400               	retlw	0
   402  2BBB  3400               	retlw	0
   403                           
   404  2BBC  3400               	retlw	0
   405  2BBD  340D               	retlw	13&0ffh
   406  2BBE  3402               	retlw	02h
   407  2BBF  3407               	retlw	(fp__heatsensor_event-fpbase)&0ffh
   408                           psect	idataBANK4,class=CODE,space=0,delta=2
   409                           global __pidataBANK4
   410  2CDC                     __pidataBANK4:
   411                           	line	73
   412                           
   413                           ;initializer for _pacers
   414  2CDC  3400               	retlw	0
   415  2CDD  3400               	retlw	0
   416                           
   417  2CDE  3400               	retlw	0
   418  2CDF  3400               	retlw	0
   419  2CE0  3400               	retlw	0
   420  2CE1  3400               	retlw	0
   421                           
   422  2CE2  3401               	retlw	01h
   423  2CE3  3400               	retlw	0
   424  2CE4  3400               	retlw	0
   425  2CE5  340E               	retlw	270&0ffh
   426  2CE6  3402               	retlw	02h
   427  2CE7  3400               	retlw	0
   428  2CE8  3400               	retlw	0
   429                           
   430  2CE9  3400               	retlw	0
   431  2CEA  3400               	retlw	0
   432  2CEB  3400               	retlw	0
   433  2CEC  3400               	retlw	0
   434                           
   435  2CED  3401               	retlw	01h
   436  2CEE  3400               	retlw	0
   437  2CEF  3400               	retlw	0
   438  2CF0  340E               	retlw	270&0ffh
   439  2CF1  3401               	retlw	01h
   440  2CF2  3400               	retlw	0
   441  2CF3  3400               	retlw	0
   442                           
   443  2CF4  3400               	retlw	0
   444  2CF5  3400               	retlw	0
   445  2CF6  3400               	retlw	0
   446  2CF7  3400               	retlw	0
   447                           
   448  2CF8  3401               	retlw	01h
   449  2CF9  3400               	retlw	0
   450  2CFA  3400               	retlw	0
   451  2CFB  3410               	retlw	272&0ffh
   452  2CFC  3404               	retlw	04h
   453  2CFD  3400               	retlw	0
   454  2CFE  3400               	retlw	0
   455                           
   456  2CFF  3400               	retlw	0
   457  2D00  3400               	retlw	0
   458  2D01  3400               	retlw	0
   459  2D02  3400               	retlw	0
   460                           
   461  2D03  3401               	retlw	01h
   462  2D04  3400               	retlw	0
   463  2D05  3400               	retlw	0
   464  2D06  3410               	retlw	272&0ffh
   465  2D07  3401               	retlw	01h
   466  2D08  3400               	retlw	0
   467  2D09  3400               	retlw	0
   468                           
   469  2D0A  3400               	retlw	0
   470  2D0B  3400               	retlw	0
   471  2D0C  3400               	retlw	0
   472  2D0D  3400               	retlw	0
   473                           
   474  2D0E  3401               	retlw	01h
   475  2D0F  3400               	retlw	0
   476  2D10  3400               	retlw	0
   477  2D11  3410               	retlw	272&0ffh
   478  2D12  3402               	retlw	02h
   479                           psect	idataBANK1,class=CODE,space=0,delta=2
   480                           global __pidataBANK1
   481  2931                     __pidataBANK1:
   482                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   483                           	line	54
   484                           
   485                           ;initializer for _autotimer
   486  2931  34FF               	retlw	0FFh
   487  2932  34FF               	retlw	0FFh
   488                           
   489  2933  34FF               	retlw	0FFh
   490  2934  34FF               	retlw	0FFh
   491  2935  34FF               	retlw	0FFh
   492  2936  34FF               	retlw	0FFh
   493                           
   494                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
   495                           	line	59
   496                           
   497                           ;initializer for _timer_drain
   498  2937  34FF               	retlw	0FFh
   499  2938  34FF               	retlw	0FFh
   500                           
   501  2939  34FF               	retlw	0FFh
   502  293A  34FF               	retlw	0FFh
   503  293B  34FF               	retlw	0FFh
   504  293C  34FF               	retlw	0FFh
   505                           
   506                           	line	58
   507                           
   508                           ;initializer for _timer_fill
   509  293D  34FF               	retlw	0FFh
   510  293E  34FF               	retlw	0FFh
   511                           
   512  293F  34FF               	retlw	0FFh
   513  2940  34FF               	retlw	0FFh
   514  2941  34FF               	retlw	0FFh
   515  2942  34FF               	retlw	0FFh
   516                           
   517                           	global	_dpowers
   518                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   519                           global __pstringtext
   520  0200                     __pstringtext:
   521                           	global    __stringtab
   522  0200                     __stringtab:
   523  0200  3400               	retlw	0
   524                           psect	stringtext
   525                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   526                           	line	350
   527  0201                     _dpowers:
   528  0201  3401               	retlw	01h
   529  0202  3400               	retlw	0
   530                           
   531  0203  340A               	retlw	0Ah
   532  0204  3400               	retlw	0
   533                           
   534  0205  3464               	retlw	064h
   535  0206  3400               	retlw	0
   536                           
   537  0207  34E8               	retlw	0E8h
   538  0208  3403               	retlw	03h
   539                           
   540  0209  3410               	retlw	010h
   541  020A  3427               	retlw	027h
   542                           
   543                           	global	_hexpowers
   544                           psect	stringtext
   545                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   546                           	line	358
   547  020B                     _hexpowers:
   548  020B  3401               	retlw	01h
   549  020C  3400               	retlw	0
   550                           
   551  020D  3410               	retlw	010h
   552  020E  3400               	retlw	0
   553                           
   554  020F  3400               	retlw	0
   555  0210  3401               	retlw	01h
   556                           
   557  0211  3400               	retlw	0
   558  0212  3410               	retlw	010h
   559                           
   560                           	global	_washprogram
   561                           psect	stringtext
   562                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
   563                           	line	207
   564  0213                     _washprogram:
   565  0213  3400               	retlw	0
   566  0214  340E               	retlw	0Eh
   567  0215  3406               	retlw	06h
   568                           
   569  0216  3401               	retlw	01h
   570  0217  3402               	retlw	02h
   571  0218  3400               	retlw	0
   572                           
   573  0219  3402               	retlw	02h
   574  021A  3401               	retlw	01h
   575  021B  3400               	retlw	0
   576                           
   577  021C  3407               	retlw	07h
   578  021D  34A1               	retlw	0A1h
   579  021E  3433               	retlw	033h
   580                           
   581  021F  3402               	retlw	02h
   582  0220  3400               	retlw	0
   583  0221  3400               	retlw	0
   584                           
   585  0222  3407               	retlw	07h
   586  0223  34DD               	retlw	0DDh
   587  0224  3446               	retlw	046h
   588                           
   589  0225  3401               	retlw	01h
   590  0226  3401               	retlw	01h
   591  0227  3400               	retlw	0
   592                           
   593  0228  3407               	retlw	07h
   594  0229  3439               	retlw	039h
   595  022A  3418               	retlw	018h
   596                           
   597  022B  3401               	retlw	01h
   598  022C  3402               	retlw	02h
   599  022D  3400               	retlw	0
   600                           
   601  022E  3402               	retlw	02h
   602  022F  3401               	retlw	01h
   603  0230  3400               	retlw	0
   604                           
   605  0231  3407               	retlw	07h
   606  0232  3485               	retlw	085h
   607  0233  3416               	retlw	016h
   608                           
   609  0234  3402               	retlw	02h
   610  0235  3402               	retlw	02h
   611  0236  3400               	retlw	0
   612                           
   613  0237  3407               	retlw	07h
   614  0238  3414               	retlw	014h
   615  0239  3402               	retlw	02h
   616                           
   617  023A  3402               	retlw	02h
   618  023B  3400               	retlw	0
   619  023C  3400               	retlw	0
   620                           
   621  023D  3407               	retlw	07h
   622  023E  3476               	retlw	076h
   623  023F  3462               	retlw	062h
   624                           
   625  0240  3402               	retlw	02h
   626  0241  3402               	retlw	02h
   627  0242  3400               	retlw	0
   628                           
   629  0243  3407               	retlw	07h
   630  0244  34AF               	retlw	0AFh
   631  0245  3429               	retlw	029h
   632                           
   633  0246  3402               	retlw	02h
   634  0247  3401               	retlw	01h
   635  0248  3400               	retlw	0
   636                           
   637  0249  3407               	retlw	07h
   638  024A  34CA               	retlw	0CAh
   639  024B  3419               	retlw	019h
   640                           
   641  024C  3402               	retlw	02h
   642  024D  3402               	retlw	02h
   643  024E  3400               	retlw	0
   644                           
   645  024F  3407               	retlw	07h
   646  0250  3434               	retlw	034h
   647  0251  3443               	retlw	043h
   648                           
   649  0252  3402               	retlw	02h
   650  0253  3401               	retlw	01h
   651  0254  3400               	retlw	0
   652                           
   653  0255  3407               	retlw	07h
   654  0256  349F               	retlw	09Fh
   655  0257  3431               	retlw	031h
   656                           
   657  0258  3402               	retlw	02h
   658  0259  3400               	retlw	0
   659  025A  3400               	retlw	0
   660                           
   661  025B  3407               	retlw	07h
   662  025C  345D               	retlw	05Dh
   663  025D  3412               	retlw	012h
   664                           
   665  025E  3402               	retlw	02h
   666  025F  3401               	retlw	01h
   667  0260  3400               	retlw	0
   668                           
   669  0261  3407               	retlw	07h
   670  0262  34C3               	retlw	0C3h
   671  0263  342B               	retlw	02Bh
   672                           
   673  0264  3402               	retlw	02h
   674  0265  3402               	retlw	02h
   675  0266  3400               	retlw	0
   676                           
   677  0267  3407               	retlw	07h
   678  0268  3414               	retlw	014h
   679  0269  3402               	retlw	02h
   680                           
   681  026A  3402               	retlw	02h
   682  026B  3400               	retlw	0
   683  026C  3400               	retlw	0
   684                           
   685  026D  3407               	retlw	07h
   686  026E  3476               	retlw	076h
   687  026F  3462               	retlw	062h
   688                           
   689  0270  3402               	retlw	02h
   690  0271  3402               	retlw	02h
   691  0272  3400               	retlw	0
   692                           
   693  0273  3407               	retlw	07h
   694  0274  34AF               	retlw	0AFh
   695  0275  3429               	retlw	029h
   696                           
   697  0276  3402               	retlw	02h
   698  0277  3401               	retlw	01h
   699  0278  3400               	retlw	0
   700                           
   701  0279  3407               	retlw	07h
   702  027A  34C9               	retlw	0C9h
   703  027B  3419               	retlw	019h
   704                           
   705  027C  3402               	retlw	02h
   706  027D  3402               	retlw	02h
   707  027E  3400               	retlw	0
   708                           
   709  027F  3407               	retlw	07h
   710  0280  34AD               	retlw	0ADh
   711  0281  344E               	retlw	04Eh
   712                           
   713  0282  3401               	retlw	01h
   714  0283  3401               	retlw	01h
   715  0284  3400               	retlw	0
   716                           
   717  0285  3402               	retlw	02h
   718  0286  3401               	retlw	01h
   719  0287  3400               	retlw	0
   720                           
   721  0288  3407               	retlw	07h
   722  0289  3409               	retlw	09h
   723  028A  3455               	retlw	055h
   724                           
   725  028B  3402               	retlw	02h
   726  028C  3402               	retlw	02h
   727  028D  3400               	retlw	0
   728                           
   729  028E  3407               	retlw	07h
   730  028F  34A4               	retlw	0A4h
   731  0290  3403               	retlw	03h
   732                           
   733  0291  3402               	retlw	02h
   734  0292  3400               	retlw	0
   735  0293  3400               	retlw	0
   736                           
   737  0294  340A               	retlw	0Ah
   738  0295  3436               	retlw	036h
   739  0296  3400               	retlw	0
   740                           
   741  0297  3407               	retlw	07h
   742  0298  344C               	retlw	04Ch
   743  0299  342F               	retlw	02Fh
   744                           
   745  029A  3401               	retlw	01h
   746  029B  3402               	retlw	02h
   747  029C  3400               	retlw	0
   748                           
   749  029D  3402               	retlw	02h
   750  029E  3401               	retlw	01h
   751  029F  3400               	retlw	0
   752                           
   753  02A0  3407               	retlw	07h
   754  02A1  34C0               	retlw	0C0h
   755  02A2  340C               	retlw	0Ch
   756                           
   757  02A3  3402               	retlw	02h
   758  02A4  3402               	retlw	02h
   759  02A5  3400               	retlw	0
   760                           
   761  02A6  3407               	retlw	07h
   762  02A7  3414               	retlw	014h
   763  02A8  3402               	retlw	02h
   764                           
   765  02A9  3402               	retlw	02h
   766  02AA  3400               	retlw	0
   767  02AB  3400               	retlw	0
   768                           
   769  02AC  3407               	retlw	07h
   770  02AD  348E               	retlw	08Eh
   771  02AE  345E               	retlw	05Eh
   772                           
   773  02AF  3402               	retlw	02h
   774  02B0  3402               	retlw	02h
   775  02B1  3400               	retlw	0
   776                           
   777  02B2  3407               	retlw	07h
   778  02B3  344B               	retlw	04Bh
   779  02B4  3429               	retlw	029h
   780                           
   781  02B5  3402               	retlw	02h
   782  02B6  3401               	retlw	01h
   783  02B7  3400               	retlw	0
   784                           
   785  02B8  3407               	retlw	07h
   786  02B9  34CA               	retlw	0CAh
   787  02BA  3419               	retlw	019h
   788                           
   789  02BB  3402               	retlw	02h
   790  02BC  3402               	retlw	02h
   791  02BD  3400               	retlw	0
   792                           
   793  02BE  3407               	retlw	07h
   794  02BF  34F5               	retlw	0F5h
   795  02C0  3442               	retlw	042h
   796                           
   797  02C1  3402               	retlw	02h
   798  02C2  3400               	retlw	0
   799  02C3  3400               	retlw	0
   800                           
   801  02C4  3401               	retlw	01h
   802  02C5  3400               	retlw	0
   803  02C6  3400               	retlw	0
   804                           
   805  02C7  3408               	retlw	08h
   806  02C8  3400               	retlw	0
   807  02C9  3400               	retlw	0
   808                           
   809  02CA  3403               	retlw	03h
   810  02CB  3401               	retlw	01h
   811  02CC  3400               	retlw	0
   812                           
   813  02CD  3401               	retlw	01h
   814  02CE  3401               	retlw	01h
   815  02CF  3400               	retlw	0
   816                           
   817  02D0  3407               	retlw	07h
   818  02D1  3450               	retlw	050h
   819  02D2  3449               	retlw	049h
   820                           
   821  02D3  3402               	retlw	02h
   822  02D4  3401               	retlw	01h
   823  02D5  3400               	retlw	0
   824                           
   825  02D6  3407               	retlw	07h
   826  02D7  3476               	retlw	076h
   827  02D8  3462               	retlw	062h
   828                           
   829  02D9  3402               	retlw	02h
   830  02DA  3402               	retlw	02h
   831  02DB  3400               	retlw	0
   832                           
   833  02DC  3407               	retlw	07h
   834  02DD  346C               	retlw	06Ch
   835  02DE  3404               	retlw	04h
   836                           
   837  02DF  3402               	retlw	02h
   838  02E0  3400               	retlw	0
   839  02E1  3400               	retlw	0
   840                           
   841  02E2  3408               	retlw	08h
   842  02E3  3401               	retlw	01h
   843  02E4  3400               	retlw	0
   844                           
   845  02E5  3407               	retlw	07h
   846  02E6  345E               	retlw	05Eh
   847  02E7  34F8               	retlw	0F8h
   848                           
   849  02E8  340C               	retlw	0Ch
   850  02E9  34B3               	retlw	low(_drain)
   851  02EA  3404               	retlw	high(_drain)
   852                           
   853  02EB  3403               	retlw	03h
   854  02EC  3401               	retlw	01h
   855  02ED  3400               	retlw	0
   856                           
   857  02EE  3407               	retlw	07h
   858  02EF  347A               	retlw	07Ah
   859  02F0  34D8               	retlw	0D8h
   860                           
   861  02F1  3401               	retlw	01h
   862  02F2  3402               	retlw	02h
   863  02F3  3400               	retlw	0
   864                           
   865  02F4  3406               	retlw	06h
   866  02F5  3403               	retlw	03h
   867  02F6  3400               	retlw	0
   868                           
   869  02F7  3409               	retlw	09h
   870  02F8  3400               	retlw	0
   871  02F9  3400               	retlw	0
   872                           
   873  02FA  3401               	retlw	01h
   874  02FB  3401               	retlw	01h
   875  02FC  3400               	retlw	0
   876                           
   877  02FD  3408               	retlw	08h
   878  02FE  3401               	retlw	01h
   879  02FF  3400               	retlw	0
   880                           
   881  0300  3407               	retlw	07h
   882  0301  34E2               	retlw	0E2h
   883  0302  34AB               	retlw	0ABh
   884                           
   885  0303  340C               	retlw	0Ch
   886  0304  34B3               	retlw	low(_drain)
   887  0305  3404               	retlw	high(_drain)
   888                           
   889  0306  3403               	retlw	03h
   890  0307  3401               	retlw	01h
   891  0308  3400               	retlw	0
   892                           
   893  0309  3407               	retlw	07h
   894  030A  349E               	retlw	09Eh
   895  030B  3463               	retlw	063h
   896                           
   897  030C  3402               	retlw	02h
   898  030D  3401               	retlw	01h
   899  030E  3400               	retlw	0
   900                           
   901  030F  3407               	retlw	07h
   902  0310  34D5               	retlw	0D5h
   903  0311  3452               	retlw	052h
   904                           
   905  0312  3402               	retlw	02h
   906  0313  3402               	retlw	02h
   907  0314  3400               	retlw	0
   908                           
   909  0315  3401               	retlw	01h
   910  0316  3400               	retlw	0
   911  0317  3400               	retlw	0
   912                           
   913  0318  3406               	retlw	06h
   914  0319  340B               	retlw	0Bh
   915  031A  3400               	retlw	0
   916                           
   917  031B  3407               	retlw	07h
   918  031C  346C               	retlw	06Ch
   919  031D  3404               	retlw	04h
   920                           
   921  031E  3402               	retlw	02h
   922  031F  3400               	retlw	0
   923  0320  3400               	retlw	0
   924                           
   925  0321  3409               	retlw	09h
   926  0322  3400               	retlw	0
   927  0323  3400               	retlw	0
   928                           
   929  0324  3401               	retlw	01h
   930  0325  3402               	retlw	02h
   931  0326  3400               	retlw	0
   932                           
   933  0327  3407               	retlw	07h
   934  0328  34D1               	retlw	0D1h
   935  0329  3414               	retlw	014h
   936                           
   937  032A  3401               	retlw	01h
   938  032B  3401               	retlw	01h
   939  032C  3400               	retlw	0
   940                           
   941  032D  3407               	retlw	07h
   942  032E  34BA               	retlw	0BAh
   943  032F  34D8               	retlw	0D8h
   944                           
   945  0330  3408               	retlw	08h
   946  0331  3401               	retlw	01h
   947  0332  3400               	retlw	0
   948                           
   949  0333  3407               	retlw	07h
   950  0334  34C3               	retlw	0C3h
   951  0335  3498               	retlw	098h
   952                           
   953  0336  340C               	retlw	0Ch
   954  0337  3442               	retlw	low(_drain_dry)
   955  0338  3403               	retlw	high(_drain_dry)
   956                           
   957  0339  340C               	retlw	0Ch
   958  033A  345F               	retlw	low(_surface)
   959  033B  3404               	retlw	high(_surface)
   960                           
   961  033C  3401               	retlw	01h
   962  033D  3400               	retlw	0
   963  033E  3400               	retlw	0
   964                           
   965  033F  340E               	retlw	0Eh
   966  0340  3400               	retlw	0
   967  0341  3400               	retlw	0
   968                           
   969                           	global	_drain_dry
   970                           psect	stringtext
   971                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
   972                           	line	54
   973  0342                     _drain_dry:
   974  0342  3404               	retlw	04h
   975  0343  3401               	retlw	01h
   976  0344  3400               	retlw	0
   977                           
   978  0345  3401               	retlw	01h
   979  0346  3402               	retlw	02h
   980  0347  3400               	retlw	0
   981                           
   982  0348  3407               	retlw	07h
   983  0349  34FF               	retlw	0FFh
   984  034A  34FF               	retlw	0FFh
   985                           
   986  034B  3401               	retlw	01h
   987  034C  3401               	retlw	01h
   988  034D  3400               	retlw	0
   989                           
   990  034E  3407               	retlw	07h
   991  034F  345B               	retlw	05Bh
   992  0350  3427               	retlw	027h
   993                           
   994  0351  3401               	retlw	01h
   995  0352  3400               	retlw	0
   996  0353  3400               	retlw	0
   997                           
   998  0354  3406               	retlw	06h
   999  0355  340A               	retlw	0Ah
  1000  0356  3400               	retlw	0
  1001                           
  1002  0357  3409               	retlw	09h
  1003  0358  3400               	retlw	0
  1004  0359  3400               	retlw	0
  1005                           
  1006  035A  3401               	retlw	01h
  1007  035B  3401               	retlw	01h
  1008  035C  3400               	retlw	0
  1009                           
  1010  035D  3407               	retlw	07h
  1011  035E  34B6               	retlw	0B6h
  1012  035F  3462               	retlw	062h
  1013                           
  1014  0360  3401               	retlw	01h
  1015  0361  3402               	retlw	02h
  1016  0362  3400               	retlw	0
  1017                           
  1018  0363  3405               	retlw	05h
  1019  0364  3401               	retlw	01h
  1020  0365  3400               	retlw	0
  1021                           
  1022  0366  3407               	retlw	07h
  1023  0367  342C               	retlw	02Ch
  1024  0368  348A               	retlw	08Ah
  1025                           
  1026  0369  3401               	retlw	01h
  1027  036A  3401               	retlw	01h
  1028  036B  3400               	retlw	0
  1029                           
  1030  036C  3407               	retlw	07h
  1031  036D  34D9               	retlw	0D9h
  1032  036E  34D8               	retlw	0D8h
  1033                           
  1034  036F  3401               	retlw	01h
  1035  0370  3402               	retlw	02h
  1036  0371  3400               	retlw	0
  1037                           
  1038  0372  3407               	retlw	07h
  1039  0373  34CD               	retlw	0CDh
  1040  0374  3489               	retlw	089h
  1041                           
  1042  0375  3404               	retlw	04h
  1043  0376  3400               	retlw	0
  1044  0377  3400               	retlw	0
  1045                           
  1046  0378  3407               	retlw	07h
  1047  0379  34C4               	retlw	0C4h
  1048  037A  3406               	retlw	06h
  1049                           
  1050  037B  3401               	retlw	01h
  1051  037C  3401               	retlw	01h
  1052  037D  3400               	retlw	0
  1053                           
  1054  037E  3407               	retlw	07h
  1055  037F  34DA               	retlw	0DAh
  1056  0380  34D8               	retlw	0D8h
  1057                           
  1058  0381  3401               	retlw	01h
  1059  0382  3402               	retlw	02h
  1060  0383  3400               	retlw	0
  1061                           
  1062  0384  3407               	retlw	07h
  1063  0385  34ED               	retlw	0EDh
  1064  0386  3489               	retlw	089h
  1065                           
  1066  0387  3401               	retlw	01h
  1067  0388  3401               	retlw	01h
  1068  0389  3400               	retlw	0
  1069                           
  1070  038A  3407               	retlw	07h
  1071  038B  34DA               	retlw	0DAh
  1072  038C  34D8               	retlw	0D8h
  1073                           
  1074  038D  3401               	retlw	01h
  1075  038E  3402               	retlw	02h
  1076  038F  3400               	retlw	0
  1077                           
  1078  0390  3407               	retlw	07h
  1079  0391  34ED               	retlw	0EDh
  1080  0392  3489               	retlw	089h
  1081                           
  1082  0393  3401               	retlw	01h
  1083  0394  3401               	retlw	01h
  1084  0395  3400               	retlw	0
  1085                           
  1086  0396  3407               	retlw	07h
  1087  0397  3463               	retlw	063h
  1088  0398  34B1               	retlw	0B1h
  1089                           
  1090  0399  3401               	retlw	01h
  1091  039A  3402               	retlw	02h
  1092  039B  3400               	retlw	0
  1093                           
  1094  039C  3407               	retlw	07h
  1095  039D  344C               	retlw	04Ch
  1096  039E  348A               	retlw	08Ah
  1097                           
  1098  039F  3402               	retlw	02h
  1099  03A0  3402               	retlw	02h
  1100  03A1  3400               	retlw	0
  1101                           
  1102  03A2  3407               	retlw	07h
  1103  03A3  34FC               	retlw	0FCh
  1104  03A4  3426               	retlw	026h
  1105                           
  1106  03A5  3402               	retlw	02h
  1107  03A6  3400               	retlw	0
  1108  03A7  3400               	retlw	0
  1109                           
  1110  03A8  3401               	retlw	01h
  1111  03A9  3400               	retlw	0
  1112  03AA  3400               	retlw	0
  1113                           
  1114  03AB  3406               	retlw	06h
  1115  03AC  3403               	retlw	03h
  1116  03AD  3400               	retlw	0
  1117                           
  1118  03AE  3409               	retlw	09h
  1119  03AF  3400               	retlw	0
  1120  03B0  3400               	retlw	0
  1121                           
  1122  03B1  3401               	retlw	01h
  1123  03B2  3402               	retlw	02h
  1124  03B3  3400               	retlw	0
  1125                           
  1126  03B4  3407               	retlw	07h
  1127  03B5  3410               	retlw	010h
  1128  03B6  3415               	retlw	015h
  1129                           
  1130  03B7  3402               	retlw	02h
  1131  03B8  3401               	retlw	01h
  1132  03B9  3400               	retlw	0
  1133                           
  1134  03BA  3407               	retlw	07h
  1135  03BB  343F               	retlw	03Fh
  1136  03BC  3428               	retlw	028h
  1137                           
  1138  03BD  3402               	retlw	02h
  1139  03BE  3400               	retlw	0
  1140  03BF  3400               	retlw	0
  1141                           
  1142  03C0  3407               	retlw	07h
  1143  03C1  34AD               	retlw	0ADh
  1144  03C2  3489               	retlw	089h
  1145                           
  1146  03C3  3401               	retlw	01h
  1147  03C4  3401               	retlw	01h
  1148  03C5  3400               	retlw	0
  1149                           
  1150  03C6  3407               	retlw	07h
  1151  03C7  3463               	retlw	063h
  1152  03C8  34B1               	retlw	0B1h
  1153                           
  1154  03C9  3401               	retlw	01h
  1155  03CA  3402               	retlw	02h
  1156  03CB  3400               	retlw	0
  1157                           
  1158  03CC  3407               	retlw	07h
  1159  03CD  34ED               	retlw	0EDh
  1160  03CE  3489               	retlw	089h
  1161                           
  1162  03CF  3401               	retlw	01h
  1163  03D0  3401               	retlw	01h
  1164  03D1  3400               	retlw	0
  1165                           
  1166  03D2  3407               	retlw	07h
  1167  03D3  3463               	retlw	063h
  1168  03D4  34B1               	retlw	0B1h
  1169                           
  1170  03D5  3401               	retlw	01h
  1171  03D6  3402               	retlw	02h
  1172  03D7  3400               	retlw	0
  1173                           
  1174  03D8  3407               	retlw	07h
  1175  03D9  344C               	retlw	04Ch
  1176  03DA  348A               	retlw	08Ah
  1177                           
  1178  03DB  3402               	retlw	02h
  1179  03DC  3402               	retlw	02h
  1180  03DD  3400               	retlw	0
  1181                           
  1182  03DE  3407               	retlw	07h
  1183  03DF  348C               	retlw	08Ch
  1184  03E0  3428               	retlw	028h
  1185                           
  1186  03E1  3402               	retlw	02h
  1187  03E2  3400               	retlw	0
  1188  03E3  3400               	retlw	0
  1189                           
  1190  03E4  3401               	retlw	01h
  1191  03E5  3400               	retlw	0
  1192  03E6  3400               	retlw	0
  1193                           
  1194  03E7  3403               	retlw	03h
  1195  03E8  3401               	retlw	01h
  1196  03E9  3400               	retlw	0
  1197                           
  1198  03EA  3406               	retlw	06h
  1199  03EB  340B               	retlw	0Bh
  1200  03EC  3400               	retlw	0
  1201                           
  1202  03ED  3409               	retlw	09h
  1203  03EE  3400               	retlw	0
  1204  03EF  3400               	retlw	0
  1205                           
  1206  03F0  3403               	retlw	03h
  1207  03F1  3400               	retlw	0
  1208  03F2  3400               	retlw	0
  1209                           
  1210  03F3  3401               	retlw	01h
  1211  03F4  3402               	retlw	02h
  1212  03F5  3400               	retlw	0
  1213                           
  1214  03F6  3407               	retlw	07h
  1215  03F7  3428               	retlw	028h
  1216  03F8  3411               	retlw	011h
  1217                           
  1218  03F9  3402               	retlw	02h
  1219  03FA  3401               	retlw	01h
  1220  03FB  3400               	retlw	0
  1221                           
  1222  03FC  3407               	retlw	07h
  1223  03FD  3433               	retlw	033h
  1224  03FE  342A               	retlw	02Ah
  1225                           
  1226  03FF  3402               	retlw	02h
  1227  0400  3400               	retlw	0
  1228  0401  3400               	retlw	0
  1229                           
  1230  0402  3407               	retlw	07h
  1231  0403  34AD               	retlw	0ADh
  1232  0404  3489               	retlw	089h
  1233                           
  1234  0405  3401               	retlw	01h
  1235  0406  3401               	retlw	01h
  1236  0407  3400               	retlw	0
  1237                           
  1238  0408  3407               	retlw	07h
  1239  0409  34ED               	retlw	0EDh
  1240  040A  3489               	retlw	089h
  1241                           
  1242  040B  3401               	retlw	01h
  1243  040C  3402               	retlw	02h
  1244  040D  3400               	retlw	0
  1245                           
  1246  040E  3407               	retlw	07h
  1247  040F  34ED               	retlw	0EDh
  1248  0410  3489               	retlw	089h
  1249                           
  1250  0411  3401               	retlw	01h
  1251  0412  3401               	retlw	01h
  1252  0413  3400               	retlw	0
  1253                           
  1254  0414  3407               	retlw	07h
  1255  0415  34EC               	retlw	0ECh
  1256  0416  3489               	retlw	089h
  1257                           
  1258  0417  3401               	retlw	01h
  1259  0418  3402               	retlw	02h
  1260  0419  3400               	retlw	0
  1261                           
  1262  041A  3407               	retlw	07h
  1263  041B  344C               	retlw	04Ch
  1264  041C  348A               	retlw	08Ah
  1265                           
  1266  041D  3402               	retlw	02h
  1267  041E  3402               	retlw	02h
  1268  041F  3400               	retlw	0
  1269                           
  1270  0420  3407               	retlw	07h
  1271  0421  34EF               	retlw	0EFh
  1272  0422  342C               	retlw	02Ch
  1273                           
  1274  0423  3402               	retlw	02h
  1275  0424  3400               	retlw	0
  1276  0425  3400               	retlw	0
  1277                           
  1278  0426  3407               	retlw	07h
  1279  0427  3479               	retlw	079h
  1280  0428  3408               	retlw	08h
  1281                           
  1282  0429  3402               	retlw	02h
  1283  042A  3401               	retlw	01h
  1284  042B  3400               	retlw	0
  1285                           
  1286  042C  3407               	retlw	07h
  1287  042D  34B7               	retlw	0B7h
  1288  042E  342D               	retlw	02Dh
  1289                           
  1290  042F  3402               	retlw	02h
  1291  0430  3400               	retlw	0
  1292  0431  3400               	retlw	0
  1293                           
  1294  0432  3407               	retlw	07h
  1295  0433  3423               	retlw	023h
  1296  0434  34B1               	retlw	0B1h
  1297                           
  1298  0435  3401               	retlw	01h
  1299  0436  3401               	retlw	01h
  1300  0437  3400               	retlw	0
  1301                           
  1302  0438  3407               	retlw	07h
  1303  0439  34ED               	retlw	0EDh
  1304  043A  3489               	retlw	089h
  1305                           
  1306  043B  3401               	retlw	01h
  1307  043C  3402               	retlw	02h
  1308  043D  3400               	retlw	0
  1309                           
  1310  043E  3407               	retlw	07h
  1311  043F  3463               	retlw	063h
  1312  0440  34B1               	retlw	0B1h
  1313                           
  1314  0441  3401               	retlw	01h
  1315  0442  3401               	retlw	01h
  1316  0443  3400               	retlw	0
  1317                           
  1318  0444  3407               	retlw	07h
  1319  0445  34ED               	retlw	0EDh
  1320  0446  3489               	retlw	089h
  1321                           
  1322  0447  3401               	retlw	01h
  1323  0448  3402               	retlw	02h
  1324  0449  3400               	retlw	0
  1325                           
  1326  044A  3407               	retlw	07h
  1327  044B  3463               	retlw	063h
  1328  044C  34B1               	retlw	0B1h
  1329                           
  1330  044D  3401               	retlw	01h
  1331  044E  3401               	retlw	01h
  1332  044F  3400               	retlw	0
  1333                           
  1334  0450  3407               	retlw	07h
  1335  0451  34EC               	retlw	0ECh
  1336  0452  3489               	retlw	089h
  1337                           
  1338  0453  3401               	retlw	01h
  1339  0454  3402               	retlw	02h
  1340  0455  3400               	retlw	0
  1341                           
  1342  0456  3407               	retlw	07h
  1343  0457  3463               	retlw	063h
  1344  0458  34B1               	retlw	0B1h
  1345                           
  1346  0459  3401               	retlw	01h
  1347  045A  3401               	retlw	01h
  1348  045B  3400               	retlw	0
  1349                           
  1350  045C  340D               	retlw	0Dh
  1351  045D  3400               	retlw	0
  1352  045E  3400               	retlw	0
  1353                           
  1354                           	global	_surface
  1355                           psect	stringtext
  1356                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1357                           	line	152
  1358  045F                     _surface:
  1359  045F  3407               	retlw	07h
  1360  0460  344C               	retlw	04Ch
  1361  0461  348A               	retlw	08Ah
  1362                           
  1363  0462  3402               	retlw	02h
  1364  0463  3402               	retlw	02h
  1365  0464  3400               	retlw	0
  1366                           
  1367  0465  3407               	retlw	07h
  1368  0466  342C               	retlw	02Ch
  1369  0467  3401               	retlw	01h
  1370                           
  1371  0468  3402               	retlw	02h
  1372  0469  3400               	retlw	0
  1373  046A  3400               	retlw	0
  1374                           
  1375  046B  3407               	retlw	07h
  1376  046C  34AB               	retlw	0ABh
  1377  046D  342F               	retlw	02Fh
  1378                           
  1379  046E  3402               	retlw	02h
  1380  046F  3402               	retlw	02h
  1381  0470  3400               	retlw	0
  1382                           
  1383  0471  3407               	retlw	07h
  1384  0472  342C               	retlw	02Ch
  1385  0473  3401               	retlw	01h
  1386                           
  1387  0474  3402               	retlw	02h
  1388  0475  3400               	retlw	0
  1389  0476  3400               	retlw	0
  1390                           
  1391  0477  3407               	retlw	07h
  1392  0478  34AB               	retlw	0ABh
  1393  0479  342F               	retlw	02Fh
  1394                           
  1395  047A  3402               	retlw	02h
  1396  047B  3402               	retlw	02h
  1397  047C  3400               	retlw	0
  1398                           
  1399  047D  3407               	retlw	07h
  1400  047E  342C               	retlw	02Ch
  1401  047F  3401               	retlw	01h
  1402                           
  1403  0480  3402               	retlw	02h
  1404  0481  3400               	retlw	0
  1405  0482  3400               	retlw	0
  1406                           
  1407  0483  3407               	retlw	07h
  1408  0484  34DB               	retlw	0DBh
  1409  0485  3427               	retlw	027h
  1410                           
  1411  0486  3402               	retlw	02h
  1412  0487  3402               	retlw	02h
  1413  0488  3400               	retlw	0
  1414                           
  1415  0489  3407               	retlw	07h
  1416  048A  342C               	retlw	02Ch
  1417  048B  3401               	retlw	01h
  1418                           
  1419  048C  3402               	retlw	02h
  1420  048D  3400               	retlw	0
  1421  048E  3400               	retlw	0
  1422                           
  1423  048F  3407               	retlw	07h
  1424  0490  34DA               	retlw	0DAh
  1425  0491  3427               	retlw	027h
  1426                           
  1427  0492  3402               	retlw	02h
  1428  0493  3402               	retlw	02h
  1429  0494  3400               	retlw	0
  1430                           
  1431  0495  3407               	retlw	07h
  1432  0496  34D2               	retlw	0D2h
  1433  0497  3423               	retlw	023h
  1434                           
  1435  0498  3402               	retlw	02h
  1436  0499  3401               	retlw	01h
  1437  049A  3400               	retlw	0
  1438                           
  1439  049B  3407               	retlw	07h
  1440  049C  344A               	retlw	04Ah
  1441  049D  3419               	retlw	019h
  1442                           
  1443  049E  3405               	retlw	05h
  1444  049F  3400               	retlw	0
  1445  04A0  3400               	retlw	0
  1446                           
  1447  04A1  3402               	retlw	02h
  1448  04A2  3402               	retlw	02h
  1449  04A3  3400               	retlw	0
  1450                           
  1451  04A4  3407               	retlw	07h
  1452  04A5  345C               	retlw	05Ch
  1453  04A6  3447               	retlw	047h
  1454                           
  1455  04A7  3402               	retlw	02h
  1456  04A8  3401               	retlw	01h
  1457  04A9  3400               	retlw	0
  1458                           
  1459  04AA  3407               	retlw	07h
  1460  04AB  3410               	retlw	010h
  1461  04AC  340B               	retlw	0Bh
  1462                           
  1463  04AD  3402               	retlw	02h
  1464  04AE  3400               	retlw	0
  1465  04AF  3400               	retlw	0
  1466                           
  1467  04B0  340D               	retlw	0Dh
  1468  04B1  3400               	retlw	0
  1469  04B2  3400               	retlw	0
  1470                           
  1471                           	global	_drain
  1472                           psect	stringtext
  1473                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1474                           	line	30
  1475  04B3                     _drain:
  1476  04B3  3404               	retlw	04h
  1477  04B4  3401               	retlw	01h
  1478  04B5  3400               	retlw	0
  1479                           
  1480  04B6  3407               	retlw	07h
  1481  04B7  3476               	retlw	076h
  1482  04B8  3462               	retlw	062h
  1483                           
  1484  04B9  3404               	retlw	04h
  1485  04BA  3400               	retlw	0
  1486  04BB  3400               	retlw	0
  1487                           
  1488  04BC  3407               	retlw	07h
  1489  04BD  34FF               	retlw	0FFh
  1490  04BE  34FF               	retlw	0FFh
  1491                           
  1492  04BF  3407               	retlw	07h
  1493  04C0  34C7               	retlw	0C7h
  1494  04C1  3427               	retlw	027h
  1495                           
  1496  04C2  3404               	retlw	04h
  1497  04C3  3401               	retlw	01h
  1498  04C4  3400               	retlw	0
  1499                           
  1500  04C5  3407               	retlw	07h
  1501  04C6  348E               	retlw	08Eh
  1502  04C7  345E               	retlw	05Eh
  1503                           
  1504  04C8  3404               	retlw	04h
  1505  04C9  3400               	retlw	0
  1506  04CA  3400               	retlw	0
  1507                           
  1508  04CB  3407               	retlw	07h
  1509  04CC  340A               	retlw	0Ah
  1510  04CD  3420               	retlw	020h
  1511                           
  1512  04CE  3404               	retlw	04h
  1513  04CF  3401               	retlw	01h
  1514  04D0  3400               	retlw	0
  1515                           
  1516  04D1  3407               	retlw	07h
  1517  04D2  348E               	retlw	08Eh
  1518  04D3  345E               	retlw	05Eh
  1519                           
  1520  04D4  3404               	retlw	04h
  1521  04D5  3400               	retlw	0
  1522  04D6  3400               	retlw	0
  1523                           
  1524  04D7  3407               	retlw	07h
  1525  04D8  340A               	retlw	0Ah
  1526  04D9  3420               	retlw	020h
  1527                           
  1528  04DA  3404               	retlw	04h
  1529  04DB  3401               	retlw	01h
  1530  04DC  3400               	retlw	0
  1531                           
  1532  04DD  3407               	retlw	07h
  1533  04DE  34FF               	retlw	0FFh
  1534  04DF  34FF               	retlw	0FFh
  1535                           
  1536  04E0  3407               	retlw	07h
  1537  04E1  34C7               	retlw	0C7h
  1538  04E2  3427               	retlw	027h
  1539                           
  1540  04E3  3404               	retlw	04h
  1541  04E4  3400               	retlw	0
  1542  04E5  3400               	retlw	0
  1543                           
  1544  04E6  3401               	retlw	01h
  1545  04E7  3400               	retlw	0
  1546  04E8  3400               	retlw	0
  1547                           
  1548  04E9  3408               	retlw	08h
  1549  04EA  3400               	retlw	0
  1550  04EB  3400               	retlw	0
  1551                           
  1552  04EC  3401               	retlw	01h
  1553  04ED  3401               	retlw	01h
  1554  04EE  3400               	retlw	0
  1555                           
  1556  04EF  340D               	retlw	0Dh
  1557  04F0  3400               	retlw	0
  1558  04F1  3400               	retlw	0
  1559                           
  1560                           	global	_cleanupprogram
  1561                           psect	stringtext
  1562                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1563                           	line	183
  1564  04F2                     _cleanupprogram:
  1565  04F2  3400               	retlw	0
  1566  04F3  340E               	retlw	0Eh
  1567  04F4  3406               	retlw	06h
  1568                           
  1569  04F5  3401               	retlw	01h
  1570  04F6  3401               	retlw	01h
  1571  04F7  3400               	retlw	0
  1572                           
  1573  04F8  3402               	retlw	02h
  1574  04F9  3401               	retlw	01h
  1575  04FA  3400               	retlw	0
  1576                           
  1577  04FB  3407               	retlw	07h
  1578  04FC  3409               	retlw	09h
  1579  04FD  3455               	retlw	055h
  1580                           
  1581  04FE  3402               	retlw	02h
  1582  04FF  3402               	retlw	02h
  1583  0500  3400               	retlw	0
  1584                           
  1585  0501  3407               	retlw	07h
  1586  0502  34A4               	retlw	0A4h
  1587  0503  3403               	retlw	03h
  1588                           
  1589  0504  3402               	retlw	02h
  1590  0505  3400               	retlw	0
  1591  0506  3400               	retlw	0
  1592                           
  1593  0507  340A               	retlw	0Ah
  1594  0508  3401               	retlw	01h
  1595  0509  3400               	retlw	0
  1596                           
  1597  050A  340C               	retlw	0Ch
  1598  050B  3442               	retlw	low(_drain_dry)
  1599  050C  3403               	retlw	high(_drain_dry)
  1600                           
  1601  050D  340C               	retlw	0Ch
  1602  050E  345F               	retlw	low(_surface)
  1603  050F  3404               	retlw	high(_surface)
  1604                           
  1605  0510  3401               	retlw	01h
  1606  0511  3400               	retlw	0
  1607  0512  3400               	retlw	0
  1608                           
  1609  0513  340E               	retlw	0Eh
  1610  0514  3400               	retlw	0
  1611  0515  3400               	retlw	0
  1612                           
  1613                           	global	_commands
  1614                           psect	stringtext
  1615                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  1616                           	line	53
  1617  0516                     _commands:
  1618  0516  343F               	retlw	03Fh
  1619  0517  3400               	retlw	0
  1620  0518  3400               	retlw	0
  1621  0519  3400               	retlw	0
  1622  051A  3400               	retlw	0
  1623  051B  3400               	retlw	0
  1624  051C  3400               	retlw	0
  1625  051D  3400               	retlw	0
  1626  051E  3401               	retlw	(fp__help-fpbase)&0ffh
  1627  051F  3468               	retlw	068h
  1628  0520  3465               	retlw	065h
  1629  0521  346C               	retlw	06Ch
  1630  0522  3470               	retlw	070h
  1631  0523  3400               	retlw	0
  1632  0524  3400               	retlw	0
  1633  0525  3400               	retlw	0
  1634  0526  3400               	retlw	0
  1635  0527  3401               	retlw	(fp__help-fpbase)&0ffh
  1636  0528  3465               	retlw	065h
  1637  0529  3463               	retlw	063h
  1638  052A  3468               	retlw	068h
  1639  052B  346F               	retlw	06Fh
  1640  052C  3400               	retlw	0
  1641  052D  3400               	retlw	0
  1642  052E  3400               	retlw	0
  1643  052F  3400               	retlw	0
  1644  0530  3403               	retlw	(fp__echo-fpbase)&0ffh
  1645  0531  3400               	retlw	0
  1646  0532  3400               	retlw	0
  1647  0533  3400               	retlw	0
  1648  0534  3400               	retlw	0
  1649  0535  3400               	retlw	0
  1650  0536  3400               	retlw	0
  1651  0537  3400               	retlw	0
  1652  0538  3400               	retlw	0
  1653  0539  3400               	retlw	0
  1654                           	global	_dpowers
  1655                           	global	_hexpowers
  1656                           	global	_washprogram
  1657                           	global	_drain_dry
  1658                           	global	_surface
  1659                           	global	_drain
  1660                           	global	_cleanupprogram
  1661                           	global	_commands
  1662                           	global	_auto_mode
  1663                           	global	_error_nr
  1664                           	global	_hysteresis
  1665                           	global	_ins_state
  1666                           	global	_state
  1667                           	global	proc_char@curcolumn
  1668                           	global	_detected
  1669                           	global	_detected_dbc
  1670                           	global	_filling
  1671                           	global	_ledalwayson
  1672                           	global	_wet_program
  1673                           	global	litterlanguage_pause@context
  1674                           	global	_rx
  1675                           	global	_uptime
  1676                           	global	_cat_detected
  1677                           	global	_cat_present
  1678                           	global	_detected_cur
  1679                           	global	_detected_old
  1680                           	global	_echoed
  1681                           	global	_error_drain
  1682                           	global	_error_execution
  1683                           	global	_error_fill
  1684                           	global	_error_flood
  1685                           	global	_error_overheat
  1686                           	global	_full_wash
  1687                           	global	_locked
  1688                           	global	_longhandled
  1689                           	global	_paused
  1690                           	global	_pinging
  1691                           	global	_currenttime
  1692                           	global	_overflows
  1693                           	global	_ins_address
  1694                           	global	_reflectionquality
  1695                           	global	exe_instruction@ret_address
  1696                           	global	_PORTB_old
  1697                           	global	_buttonmask_cum
  1698                           	global	_buttonmask_cur
  1699                           	global	_buttonmask_evt
  1700                           	global	_interval
  1701                           	global	_panel_mode
  1702                           	global	_prg_source
  1703                           	global	catgenie120@PORTB_old
  1704                           	global	water@state
  1705                           	global	_cur_instruction
  1706                           	global	_ins_pointer
  1707                           	global	_cartridgetimeout
  1708                           	global	_cattimer
  1709                           	global	_pingtime
  1710                           	global	_second
  1711                           	global	_sensortimer
  1712                           	global	_linebuffer
  1713                           	global	___resetbits
  1714  0020                     ___resetbits	set	32
  1715                           	DABS	1,32,1	;___resetbits
  1716                           
  1717                           	global	___powerdown
  1718  0103                     ___powerdown	set	259
  1719                           	DABS	1,32,1	;___powerdown
  1720                           
  1721                           	global	___timeout
  1722  0104                     ___timeout	set	260
  1723                           	DABS	1,32,1	;___timeout
  1724                           
  1725                           	global	_PORTA
  1726  000C                     _PORTA	set	12
  1727                           	global	_PORTC
  1728  000E                     _PORTC	set	14
  1729                           	global	_PORTD
  1730  000F                     _PORTD	set	15
  1731                           	global	_PORTE
  1732  0010                     _PORTE	set	16
  1733                           	global	_PR2
  1734  001B                     _PR2	set	27
  1735                           	global	_T2CON
  1736  001C                     _T2CON	set	28
  1737                           	global	_TMR1H
  1738  0017                     _TMR1H	set	23
  1739                           	global	_TMR1L
  1740  0016                     _TMR1L	set	22
  1741                           	global	_CARRY
  1742  0018                     _CARRY	set	24
  1743                           	global	_GIE
  1744  005F                     _GIE	set	95
  1745                           	global	_IOCIE
  1746  005B                     _IOCIE	set	91
  1747                           	global	_IOCIF
  1748  0058                     _IOCIF	set	88
  1749                           	global	_PEIE
  1750  005E                     _PEIE	set	94
  1751                           	global	_RCIF
  1752  008D                     _RCIF	set	141
  1753                           	global	_T1CKPS0
  1754  00C4                     _T1CKPS0	set	196
  1755                           	global	_T1CKPS1
  1756  00C5                     _T1CKPS1	set	197
  1757                           	global	_T1OSCEN
  1758  00C3                     _T1OSCEN	set	195
  1759                           	global	_TMR1CS0
  1760  00C6                     _TMR1CS0	set	198
  1761                           	global	_TMR1CS1
  1762  00C7                     _TMR1CS1	set	199
  1763                           	global	_TMR1IF
  1764  0088                     _TMR1IF	set	136
  1765                           	global	_TMR1ON
  1766  00C0                     _TMR1ON	set	192
  1767                           	global	_TMR2IF
  1768  0089                     _TMR2IF	set	137
  1769                           	global	_TMR2ON
  1770  00E2                     _TMR2ON	set	226
  1771                           	global	_TXIF
  1772  008C                     _TXIF	set	140
  1773                           	global	_nT1SYNC
  1774  00C2                     _nT1SYNC	set	194
  1775                           	global	_ADRES
  1776  009B                     _ADRES	set	155
  1777                           	global	_ADCON0bits
  1778  009D                     _ADCON0bits	set	157
  1779                           	global	_ADCON1bits
  1780  009E                     _ADCON1bits	set	158
  1781                           	global	_TRISA
  1782  008C                     _TRISA	set	140
  1783                           	global	_TRISB
  1784  008D                     _TRISB	set	141
  1785                           	global	_TRISC
  1786  008E                     _TRISC	set	142
  1787                           	global	_TRISD
  1788  008F                     _TRISD	set	143
  1789                           	global	_TRISE
  1790  0090                     _TRISE	set	144
  1791                           	global	_RCIE
  1792  048D                     _RCIE	set	1165
  1793                           	global	_TMR1IE
  1794  0488                     _TMR1IE	set	1160
  1795                           	global	_TMR2IE
  1796  0489                     _TMR2IE	set	1161
  1797                           	global	_TXIE
  1798  048C                     _TXIE	set	1164
  1799                           	global	_nBOR
  1800  04B0                     _nBOR	set	1200
  1801                           	global	_nPOR
  1802  04B1                     _nPOR	set	1201
  1803                           	global	_nWPUEN
  1804  04AF                     _nWPUEN	set	1199
  1805                           	global	_LATB
  1806  010D                     _LATB	set	269
  1807                           	global	_LATD
  1808  010F                     _LATD	set	271
  1809                           	global	_EEADR
  1810  0191                     _EEADR	set	401
  1811                           	global	_ANSELA
  1812  018C                     _ANSELA	set	396
  1813                           	global	_ANSELB
  1814  018D                     _ANSELB	set	397
  1815                           	global	_ANSELD
  1816  018F                     _ANSELD	set	399
  1817                           	global	_ANSELE
  1818  0190                     _ANSELE	set	400
  1819                           	global	_EECON1
  1820  0195                     _EECON1	set	405
  1821                           	global	_EECON2
  1822  0196                     _EECON2	set	406
  1823                           	global	_EEDATA
  1824  0193                     _EEDATA	set	403
  1825                           	global	_RCREG
  1826  0199                     _RCREG	set	409
  1827                           	global	_SPBRG
  1828  019B                     _SPBRG	set	411
  1829                           	global	_SPBRGH
  1830  019C                     _SPBRGH	set	412
  1831                           	global	_TXREG
  1832  019A                     _TXREG	set	410
  1833                           	global	_BRG16
  1834  0CFB                     _BRG16	set	3323
  1835                           	global	_BRGH
  1836  0CF2                     _BRGH	set	3314
  1837                           	global	_CREN
  1838  0CEC                     _CREN	set	3308
  1839                           	global	_CSRC
  1840  0CF7                     _CSRC	set	3319
  1841                           	global	_FERR
  1842  0CEA                     _FERR	set	3306
  1843                           	global	_OERR
  1844  0CE9                     _OERR	set	3305
  1845                           	global	_RD
  1846  0CA8                     _RD	set	3240
  1847                           	global	_RX9
  1848  0CEE                     _RX9	set	3310
  1849                           	global	_SPEN
  1850  0CEF                     _SPEN	set	3311
  1851                           	global	_SYNC
  1852  0CF4                     _SYNC	set	3316
  1853                           	global	_TX9
  1854  0CF6                     _TX9	set	3318
  1855                           	global	_TXEN
  1856  0CF5                     _TXEN	set	3317
  1857                           	global	_WR
  1858  0CA9                     _WR	set	3241
  1859                           	global	_WREN
  1860  0CAA                     _WREN	set	3242
  1861                           	global	_WPUB
  1862  020D                     _WPUB	set	525
  1863                           	global	_WPUE
  1864  0210                     _WPUE	set	528
  1865                           	global	_CCP1CON
  1866  0293                     _CCP1CON	set	659
  1867                           	global	_CCPR1L
  1868  0291                     _CCPR1L	set	657
  1869                           	global	_IOCBF
  1870  0396                     _IOCBF	set	918
  1871                           	global	_IOCBN
  1872  0395                     _IOCBN	set	917
  1873                           	global	_IOCBP
  1874  0394                     _IOCBP	set	916
  1875                           	global	_PORTB
  1876  000D                     _PORTB	set	13
  1877                           	global	_LATA
  1878  010C                     _LATA	set	268
  1879                           	global	_LATC
  1880  010E                     _LATC	set	270
  1881                           	global	_LATE
  1882  0110                     _LATE	set	272
  1883                           	
  1884  053A                     STR_82:	
  1885  053A  3449               	retlw	73	;'I'
  1886  053B  344E               	retlw	78	;'N'
  1887  053C  3453               	retlw	83	;'S'
  1888  053D  345F               	retlw	95	;'_'
  1889  053E  3441               	retlw	65	;'A'
  1890  053F  3455               	retlw	85	;'U'
  1891  0540  3454               	retlw	84	;'T'
  1892  0541  344F               	retlw	79	;'O'
  1893  0542  3444               	retlw	68	;'D'
  1894  0543  344F               	retlw	79	;'O'
  1895  0544  3453               	retlw	83	;'S'
  1896  0545  3445               	retlw	69	;'E'
  1897  0546  342C               	retlw	44	;','
  1898  0547  3420               	retlw	32	;' '
  1899  0548  3425               	retlw	37	;'%'
  1900  0549  3475               	retlw	117	;'u'
  1901  054A  342E               	retlw	46	;'.'
  1902  054B  3425               	retlw	37	;'%'
  1903  054C  3475               	retlw	117	;'u'
  1904  054D  346D               	retlw	109	;'m'
  1905  054E  346C               	retlw	108	;'l'
  1906  054F  3425               	retlw	37	;'%'
  1907  0550  3473               	retlw	115	;'s'
  1908  0551  3400               	retlw	0
  1909                           psect	stringtext
  1910                           	
  1911  0552                     STR_105:	
  1912  0552  3455               	retlw	85	;'U'
  1913  0553  346E               	retlw	110	;'n'
  1914  0554  346B               	retlw	107	;'k'
  1915  0555  346E               	retlw	110	;'n'
  1916  0556  346F               	retlw	111	;'o'
  1917  0557  3477               	retlw	119	;'w'
  1918  0558  346E               	retlw	110	;'n'
  1919  0559  3420               	retlw	32	;' '
  1920  055A  3463               	retlw	99	;'c'
  1921  055B  346F               	retlw	111	;'o'
  1922  055C  346D               	retlw	109	;'m'
  1923  055D  346D               	retlw	109	;'m'
  1924  055E  3461               	retlw	97	;'a'
  1925  055F  346E               	retlw	110	;'n'
  1926  0560  3464               	retlw	100	;'d'
  1927  0561  3420               	retlw	32	;' '
  1928  0562  3427               	retlw	39	;'''
  1929  0563  3425               	retlw	37	;'%'
  1930  0564  3473               	retlw	115	;'s'
  1931  0565  3427               	retlw	39	;'''
  1932  0566  340A               	retlw	10
  1933  0567  3400               	retlw	0
  1934                           psect	stringtext
  1935                           	
  1936  0568                     STR_88:	
  1937  0568  3449               	retlw	73	;'I'
  1938  0569  344E               	retlw	78	;'N'
  1939  056A  3453               	retlw	83	;'S'
  1940  056B  345F               	retlw	95	;'_'
  1941  056C  3453               	retlw	83	;'S'
  1942  056D  3454               	retlw	84	;'T'
  1943  056E  3441               	retlw	65	;'A'
  1944  056F  3452               	retlw	82	;'R'
  1945  0570  3454               	retlw	84	;'T'
  1946  0571  342C               	retlw	44	;','
  1947  0572  3420               	retlw	32	;' '
  1948  0573  3475               	retlw	117	;'u'
  1949  0574  346E               	retlw	110	;'n'
  1950  0575  3465               	retlw	101	;'e'
  1951  0576  3478               	retlw	120	;'x'
  1952  0577  3470               	retlw	112	;'p'
  1953  0578  3465               	retlw	101	;'e'
  1954  0579  3463               	retlw	99	;'c'
  1955  057A  3474               	retlw	116	;'t'
  1956  057B  3465               	retlw	101	;'e'
  1957  057C  3464               	retlw	100	;'d'
  1958  057D  3400               	retlw	0
  1959                           psect	stringtext
  1960                           	
  1961  057E                     STR_24:	
  1962  057E  3453               	retlw	83	;'S'
  1963  057F  3474               	retlw	116	;'t'
  1964  0580  3461               	retlw	97	;'a'
  1965  0581  3472               	retlw	114	;'r'
  1966  0582  3474               	retlw	116	;'t'
  1967  0583  3469               	retlw	105	;'i'
  1968  0584  346E               	retlw	110	;'n'
  1969  0585  3467               	retlw	103	;'g'
  1970  0586  3420               	retlw	32	;' '
  1971  0587  3425               	retlw	37	;'%'
  1972  0588  3473               	retlw	115	;'s'
  1973  0589  3420               	retlw	32	;' '
  1974  058A  3470               	retlw	112	;'p'
  1975  058B  3472               	retlw	114	;'r'
  1976  058C  346F               	retlw	111	;'o'
  1977  058D  3467               	retlw	103	;'g'
  1978  058E  3472               	retlw	114	;'r'
  1979  058F  3461               	retlw	97	;'a'
  1980  0590  346D               	retlw	109	;'m'
  1981  0591  340A               	retlw	10
  1982  0592  3400               	retlw	0
  1983                           psect	stringtext
  1984                           	
  1985  0593                     STR_36:	
  1986  0593  3453               	retlw	83	;'S'
  1987  0594  3474               	retlw	116	;'t'
  1988  0595  3461               	retlw	97	;'a'
  1989  0596  3472               	retlw	114	;'r'
  1990  0597  3474               	retlw	116	;'t'
  1991  0598  3469               	retlw	105	;'i'
  1992  0599  346E               	retlw	110	;'n'
  1993  059A  3467               	retlw	103	;'g'
  1994  059B  3420               	retlw	32	;' '
  1995  059C  3425               	retlw	37	;'%'
  1996  059D  3473               	retlw	115	;'s'
  1997  059E  3420               	retlw	32	;' '
  1998  059F  3463               	retlw	99	;'c'
  1999  05A0  346C               	retlw	108	;'l'
  2000  05A1  3465               	retlw	101	;'e'
  2001  05A2  3461               	retlw	97	;'a'
  2002  05A3  346E               	retlw	110	;'n'
  2003  05A4  3475               	retlw	117	;'u'
  2004  05A5  3470               	retlw	112	;'p'
  2005  05A6  340A               	retlw	10
  2006  05A7  3400               	retlw	0
  2007                           psect	stringtext
  2008                           	
  2009  05A8                     STR_91:	
  2010  05A8  3441               	retlw	65	;'A'
  2011  05A9  3475               	retlw	117	;'u'
  2012  05AA  3474               	retlw	116	;'t'
  2013  05AB  346F               	retlw	111	;'o'
  2014  05AC  3474               	retlw	116	;'t'
  2015  05AD  3469               	retlw	105	;'i'
  2016  05AE  346D               	retlw	109	;'m'
  2017  05AF  3465               	retlw	101	;'e'
  2018  05B0  3472               	retlw	114	;'r'
  2019  05B1  3420               	retlw	32	;' '
  2020  05B2  3465               	retlw	101	;'e'
  2021  05B3  3478               	retlw	120	;'x'
  2022  05B4  3470               	retlw	112	;'p'
  2023  05B5  3469               	retlw	105	;'i'
  2024  05B6  3472               	retlw	114	;'r'
  2025  05B7  3465               	retlw	101	;'e'
  2026  05B8  3464               	retlw	100	;'d'
  2027  05B9  343A               	retlw	58	;':'
  2028  05BA  3420               	retlw	32	;' '
  2029  05BB  3400               	retlw	0
  2030                           psect	stringtext
  2031                           	
  2032  05BC                     STR_14:	
  2033  05BC  3457               	retlw	87	;'W'
  2034  05BD  3465               	retlw	101	;'e'
  2035  05BE  3474               	retlw	116	;'t'
  2036  05BF  3420               	retlw	32	;' '
  2037  05C0  3463               	retlw	99	;'c'
  2038  05C1  346C               	retlw	108	;'l'
  2039  05C2  3465               	retlw	101	;'e'
  2040  05C3  3461               	retlw	97	;'a'
  2041  05C4  346E               	retlw	110	;'n'
  2042  05C5  3475               	retlw	117	;'u'
  2043  05C6  3470               	retlw	112	;'p'
  2044  05C7  3420               	retlw	32	;' '
  2045  05C8  3466               	retlw	102	;'f'
  2046  05C9  346F               	retlw	111	;'o'
  2047  05CA  3472               	retlw	114	;'r'
  2048  05CB  3463               	retlw	99	;'c'
  2049  05CC  3465               	retlw	101	;'e'
  2050  05CD  3464               	retlw	100	;'d'
  2051  05CE  340A               	retlw	10
  2052  05CF  3400               	retlw	0
  2053                           psect	stringtext
  2054                           	
  2055  05D0                     STR_68:	
  2056  05D0  3449               	retlw	73	;'I'
  2057  05D1  344E               	retlw	78	;'N'
  2058  05D2  3453               	retlw	83	;'S'
  2059  05D3  345F               	retlw	95	;'_'
  2060  05D4  3457               	retlw	87	;'W'
  2061  05D5  3441               	retlw	65	;'A'
  2062  05D6  3449               	retlw	73	;'I'
  2063  05D7  3454               	retlw	84	;'T'
  2064  05D8  3457               	retlw	87	;'W'
  2065  05D9  3441               	retlw	65	;'A'
  2066  05DA  3454               	retlw	84	;'T'
  2067  05DB  3445               	retlw	69	;'E'
  2068  05DC  3452               	retlw	82	;'R'
  2069  05DD  342C               	retlw	44	;','
  2070  05DE  3420               	retlw	32	;' '
  2071  05DF  3425               	retlw	37	;'%'
  2072  05E0  3473               	retlw	115	;'s'
  2073  05E1  3425               	retlw	37	;'%'
  2074  05E2  3473               	retlw	115	;'s'
  2075  05E3  3400               	retlw	0
  2076                           psect	stringtext
  2077                           	
  2078  05E4                     STR_79:	
  2079  05E4  3449               	retlw	73	;'I'
  2080  05E5  344E               	retlw	78	;'N'
  2081  05E6  3453               	retlw	83	;'S'
  2082  05E7  345F               	retlw	95	;'_'
  2083  05E8  3453               	retlw	83	;'S'
  2084  05E9  344B               	retlw	75	;'K'
  2085  05EA  3449               	retlw	73	;'I'
  2086  05EB  3450               	retlw	80	;'P'
  2087  05EC  3449               	retlw	73	;'I'
  2088  05ED  3446               	retlw	70	;'F'
  2089  05EE  3457               	retlw	87	;'W'
  2090  05EF  3445               	retlw	69	;'E'
  2091  05F0  3454               	retlw	84	;'T'
  2092  05F1  342C               	retlw	44	;','
  2093  05F2  3420               	retlw	32	;' '
  2094  05F3  3425               	retlw	37	;'%'
  2095  05F4  3475               	retlw	117	;'u'
  2096  05F5  3425               	retlw	37	;'%'
  2097  05F6  3473               	retlw	115	;'s'
  2098  05F7  3400               	retlw	0
  2099                           psect	stringtext
  2100                           	
  2101  05F8                     STR_76:	
  2102  05F8  3449               	retlw	73	;'I'
  2103  05F9  344E               	retlw	78	;'N'
  2104  05FA  3453               	retlw	83	;'S'
  2105  05FB  345F               	retlw	95	;'_'
  2106  05FC  3453               	retlw	83	;'S'
  2107  05FD  344B               	retlw	75	;'K'
  2108  05FE  3449               	retlw	73	;'I'
  2109  05FF  3450               	retlw	80	;'P'
  2110  0600  3449               	retlw	73	;'I'
  2111  0601  3446               	retlw	70	;'F'
  2112  0602  3444               	retlw	68	;'D'
  2113  0603  3452               	retlw	82	;'R'
  2114  0604  3459               	retlw	89	;'Y'
  2115  0605  342C               	retlw	44	;','
  2116  0606  3420               	retlw	32	;' '
  2117  0607  3425               	retlw	37	;'%'
  2118  0608  3475               	retlw	117	;'u'
  2119  0609  3425               	retlw	37	;'%'
  2120  060A  3473               	retlw	115	;'s'
  2121  060B  3400               	retlw	0
  2122                           psect	stringtext
  2123                           	
  2124  060C                     STR_1:	
  2125  060C  340A               	retlw	10
  2126  060D  342A               	retlw	42	;'*'
  2127  060E  342A               	retlw	42	;'*'
  2128  060F  342A               	retlw	42	;'*'
  2129  0610  3420               	retlw	32	;' '
  2130  0611  3443               	retlw	67	;'C'
  2131  0612  3461               	retlw	97	;'a'
  2132  0613  3474               	retlw	116	;'t'
  2133  0614  3447               	retlw	71	;'G'
  2134  0615  3465               	retlw	101	;'e'
  2135  0616  346E               	retlw	110	;'n'
  2136  0617  3469               	retlw	105	;'i'
  2137  0618  3475               	retlw	117	;'u'
  2138  0619  3473               	retlw	115	;'s'
  2139  061A  3420               	retlw	32	;' '
  2140  061B  342A               	retlw	42	;'*'
  2141  061C  342A               	retlw	42	;'*'
  2142  061D  342A               	retlw	42	;'*'
  2143  061E  340A               	retlw	10
  2144  061F  3400               	retlw	0
  2145                           psect	stringtext
  2146                           	
  2147  0620                     STR_86:	
  2148  0620  3449               	retlw	73	;'I'
  2149  0621  344E               	retlw	78	;'N'
  2150  0622  3453               	retlw	83	;'S'
  2151  0623  345F               	retlw	95	;'_'
  2152  0624  3452               	retlw	82	;'R'
  2153  0625  3445               	retlw	69	;'E'
  2154  0626  3454               	retlw	84	;'T'
  2155  0627  3455               	retlw	85	;'U'
  2156  0628  3452               	retlw	82	;'R'
  2157  0629  344E               	retlw	78	;'N'
  2158  062A  342C               	retlw	44	;','
  2159  062B  3420               	retlw	32	;' '
  2160  062C  3430               	retlw	48	;'0'
  2161  062D  3478               	retlw	120	;'x'
  2162  062E  3425               	retlw	37	;'%'
  2163  062F  3430               	retlw	48	;'0'
  2164  0630  3434               	retlw	52	;'4'
  2165  0631  3458               	retlw	88	;'X'
  2166  0632  3400               	retlw	0
  2167                           psect	stringtext
  2168                           	
  2169  0633                     STR_67:	
  2170  0633  3449               	retlw	73	;'I'
  2171  0634  344E               	retlw	78	;'N'
  2172  0635  3453               	retlw	83	;'S'
  2173  0636  345F               	retlw	95	;'_'
  2174  0637  3457               	retlw	87	;'W'
  2175  0638  3441               	retlw	65	;'A'
  2176  0639  3449               	retlw	73	;'I'
  2177  063A  3454               	retlw	84	;'T'
  2178  063B  3454               	retlw	84	;'T'
  2179  063C  3449               	retlw	73	;'I'
  2180  063D  344D               	retlw	77	;'M'
  2181  063E  3445               	retlw	69	;'E'
  2182  063F  342C               	retlw	44	;','
  2183  0640  3420               	retlw	32	;' '
  2184  0641  3425               	retlw	37	;'%'
  2185  0642  3475               	retlw	117	;'u'
  2186  0643  346D               	retlw	109	;'m'
  2187  0644  3473               	retlw	115	;'s'
  2188  0645  3400               	retlw	0
  2189                           psect	stringtext
  2190                           	
  2191  0646                     STR_5:	
  2192  0646  3450               	retlw	80	;'P'
  2193  0647  3469               	retlw	105	;'i'
  2194  0648  346E               	retlw	110	;'n'
  2195  0649  3420               	retlw	32	;' '
  2196  064A  3472               	retlw	114	;'r'
  2197  064B  3465               	retlw	101	;'e'
  2198  064C  3473               	retlw	115	;'s'
  2199  064D  3465               	retlw	101	;'e'
  2200  064E  3474               	retlw	116	;'t'
  2201  064F  3420               	retlw	32	;' '
  2202  0650  3428               	retlw	40	;'('
  2203  0651  3473               	retlw	115	;'s'
  2204  0652  346C               	retlw	108	;'l'
  2205  0653  3465               	retlw	101	;'e'
  2206  0654  3465               	retlw	101	;'e'
  2207  0655  3470               	retlw	112	;'p'
  2208  0656  3429               	retlw	41	;')'
  2209  0657  340A               	retlw	10
  2210  0658  3400               	retlw	0
  2211                           psect	stringtext
  2212                           	
  2213  0659                     STR_8:	
  2214  0659  3453               	retlw	83	;'S'
  2215  065A  3465               	retlw	101	;'e'
  2216  065B  3474               	retlw	116	;'t'
  2217  065C  3475               	retlw	117	;'u'
  2218  065D  3470               	retlw	112	;'p'
  2219  065E  3420               	retlw	32	;' '
  2220  065F  3462               	retlw	98	;'b'
  2221  0660  3475               	retlw	117	;'u'
  2222  0661  3474               	retlw	116	;'t'
  2223  0662  3474               	retlw	116	;'t'
  2224  0663  346F               	retlw	111	;'o'
  2225  0664  346E               	retlw	110	;'n'
  2226  0665  3420               	retlw	32	;' '
  2227  0666  3468               	retlw	104	;'h'
  2228  0667  3465               	retlw	101	;'e'
  2229  0668  346C               	retlw	108	;'l'
  2230  0669  3464               	retlw	100	;'d'
  2231  066A  340A               	retlw	10
  2232  066B  3400               	retlw	0
  2233                           psect	stringtext
  2234                           	
  2235  066C                     STR_7:	
  2236  066C  3453               	retlw	83	;'S'
  2237  066D  3474               	retlw	116	;'t'
  2238  066E  3461               	retlw	97	;'a'
  2239  066F  3472               	retlw	114	;'r'
  2240  0670  3474               	retlw	116	;'t'
  2241  0671  3420               	retlw	32	;' '
  2242  0672  3462               	retlw	98	;'b'
  2243  0673  3475               	retlw	117	;'u'
  2244  0674  3474               	retlw	116	;'t'
  2245  0675  3474               	retlw	116	;'t'
  2246  0676  346F               	retlw	111	;'o'
  2247  0677  346E               	retlw	110	;'n'
  2248  0678  3420               	retlw	32	;' '
  2249  0679  3468               	retlw	104	;'h'
  2250  067A  3465               	retlw	101	;'e'
  2251  067B  346C               	retlw	108	;'l'
  2252  067C  3464               	retlw	100	;'d'
  2253  067D  340A               	retlw	10
  2254  067E  3400               	retlw	0
  2255                           psect	stringtext
  2256                           	
  2257  067F                     STR_94:	
  2258  067F  3443               	retlw	67	;'C'
  2259  0680  3461               	retlw	97	;'a'
  2260  0681  3474               	retlw	116	;'t'
  2261  0682  3474               	retlw	116	;'t'
  2262  0683  3469               	retlw	105	;'i'
  2263  0684  346D               	retlw	109	;'m'
  2264  0685  3465               	retlw	101	;'e'
  2265  0686  3472               	retlw	114	;'r'
  2266  0687  3420               	retlw	32	;' '
  2267  0688  3465               	retlw	101	;'e'
  2268  0689  3478               	retlw	120	;'x'
  2269  068A  3470               	retlw	112	;'p'
  2270  068B  3469               	retlw	105	;'i'
  2271  068C  3472               	retlw	114	;'r'
  2272  068D  3465               	retlw	101	;'e'
  2273  068E  3464               	retlw	100	;'d'
  2274  068F  340A               	retlw	10
  2275  0690  3400               	retlw	0
  2276                           psect	stringtext
  2277                           	
  2278  0691                     STR_28:	
  2279  0691  3452               	retlw	82	;'R'
  2280  0692  3465               	retlw	101	;'e'
  2281  0693  3473               	retlw	115	;'s'
  2282  0694  3475               	retlw	117	;'u'
  2283  0695  346D               	retlw	109	;'m'
  2284  0696  3469               	retlw	105	;'i'
  2285  0697  346E               	retlw	110	;'n'
  2286  0698  3467               	retlw	103	;'g'
  2287  0699  3420               	retlw	32	;' '
  2288  069A  3470               	retlw	112	;'p'
  2289  069B  3472               	retlw	114	;'r'
  2290  069C  346F               	retlw	111	;'o'
  2291  069D  3467               	retlw	103	;'g'
  2292  069E  3472               	retlw	114	;'r'
  2293  069F  3461               	retlw	97	;'a'
  2294  06A0  346D               	retlw	109	;'m'
  2295  06A1  340A               	retlw	10
  2296  06A2  3400               	retlw	0
  2297                           psect	stringtext
  2298                           	
  2299  06A3                     STR_29:	
  2300  06A3  3453               	retlw	83	;'S'
  2301  06A4  3474               	retlw	116	;'t'
  2302  06A5  346F               	retlw	111	;'o'
  2303  06A6  3470               	retlw	112	;'p'
  2304  06A7  3470               	retlw	112	;'p'
  2305  06A8  3469               	retlw	105	;'i'
  2306  06A9  346E               	retlw	110	;'n'
  2307  06AA  3467               	retlw	103	;'g'
  2308  06AB  3420               	retlw	32	;' '
  2309  06AC  3470               	retlw	112	;'p'
  2310  06AD  3472               	retlw	114	;'r'
  2311  06AE  346F               	retlw	111	;'o'
  2312  06AF  3467               	retlw	103	;'g'
  2313  06B0  3472               	retlw	114	;'r'
  2314  06B1  3461               	retlw	97	;'a'
  2315  06B2  346D               	retlw	109	;'m'
  2316  06B3  340A               	retlw	10
  2317  06B4  3400               	retlw	0
  2318                           psect	stringtext
  2319                           	
  2320  06B5                     STR_89:	
  2321  06B5  3449               	retlw	73	;'I'
  2322  06B6  344E               	retlw	78	;'N'
  2323  06B7  3453               	retlw	83	;'S'
  2324  06B8  345F               	retlw	95	;'_'
  2325  06B9  3475               	retlw	117	;'u'
  2326  06BA  346E               	retlw	110	;'n'
  2327  06BB  346B               	retlw	107	;'k'
  2328  06BC  346E               	retlw	110	;'n'
  2329  06BD  346F               	retlw	111	;'o'
  2330  06BE  3477               	retlw	119	;'w'
  2331  06BF  346E               	retlw	110	;'n'
  2332  06C0  343A               	retlw	58	;':'
  2333  06C1  3420               	retlw	32	;' '
  2334  06C2  3430               	retlw	48	;'0'
  2335  06C3  3478               	retlw	120	;'x'
  2336  06C4  3425               	retlw	37	;'%'
  2337  06C5  3458               	retlw	88	;'X'
  2338  06C6  3400               	retlw	0
  2339                           psect	stringtext
  2340                           	
  2341  06C7                     STR_115:	
  2342  06C7  3430               	retlw	48	;'0'
  2343  06C8  3431               	retlw	49	;'1'
  2344  06C9  3432               	retlw	50	;'2'
  2345  06CA  3433               	retlw	51	;'3'
  2346  06CB  3434               	retlw	52	;'4'
  2347  06CC  3435               	retlw	53	;'5'
  2348  06CD  3436               	retlw	54	;'6'
  2349  06CE  3437               	retlw	55	;'7'
  2350  06CF  3438               	retlw	56	;'8'
  2351  06D0  3439               	retlw	57	;'9'
  2352  06D1  3441               	retlw	65	;'A'
  2353  06D2  3442               	retlw	66	;'B'
  2354  06D3  3443               	retlw	67	;'C'
  2355  06D4  3444               	retlw	68	;'D'
  2356  06D5  3445               	retlw	69	;'E'
  2357  06D6  3446               	retlw	70	;'F'
  2358  06D7  3400               	retlw	0
  2359                           psect	stringtext
  2360                           	
  2361  06D8                     STR_113:	
  2362  06D8  3425               	retlw	37	;'%'
  2363  06D9  3464               	retlw	100	;'d'
  2364  06DA  3420               	retlw	32	;' '
  2365  06DB  3425               	retlw	37	;'%'
  2366  06DC  3464               	retlw	100	;'d'
  2367  06DD  343A               	retlw	58	;':'
  2368  06DE  3425               	retlw	37	;'%'
  2369  06DF  342E               	retlw	46	;'.'
  2370  06E0  3432               	retlw	50	;'2'
  2371  06E1  3464               	retlw	100	;'d'
  2372  06E2  342E               	retlw	46	;'.'
  2373  06E3  3425               	retlw	37	;'%'
  2374  06E4  342E               	retlw	46	;'.'
  2375  06E5  3432               	retlw	50	;'2'
  2376  06E6  3464               	retlw	100	;'d'
  2377  06E7  3420               	retlw	32	;' '
  2378  06E8  3400               	retlw	0
  2379                           psect	stringtext
  2380                           	
  2381  06E9                     STR_111:	
  2382  06E9  344B               	retlw	75	;'K'
  2383  06EA  346E               	retlw	110	;'n'
  2384  06EB  346F               	retlw	111	;'o'
  2385  06EC  3477               	retlw	119	;'w'
  2386  06ED  346E               	retlw	110	;'n'
  2387  06EE  3420               	retlw	32	;' '
  2388  06EF  3463               	retlw	99	;'c'
  2389  06F0  346F               	retlw	111	;'o'
  2390  06F1  346D               	retlw	109	;'m'
  2391  06F2  346D               	retlw	109	;'m'
  2392  06F3  3461               	retlw	97	;'a'
  2393  06F4  346E               	retlw	110	;'n'
  2394  06F5  3464               	retlw	100	;'d'
  2395  06F6  3473               	retlw	115	;'s'
  2396  06F7  343A               	retlw	58	;':'
  2397  06F8  340A               	retlw	10
  2398  06F9  3400               	retlw	0
  2399                           psect	stringtext
  2400                           	
  2401  06FA                     STR_103:	
  2402  06FA  3450               	retlw	80	;'P'
  2403  06FB  3461               	retlw	97	;'a'
  2404  06FC  3472               	retlw	114	;'r'
  2405  06FD  3461               	retlw	97	;'a'
  2406  06FE  346D               	retlw	109	;'m'
  2407  06FF  3465               	retlw	101	;'e'
  2408  0700  3474               	retlw	116	;'t'
  2409  0701  3465               	retlw	101	;'e'
  2410  0702  3472               	retlw	114	;'r'
  2411  0703  3420               	retlw	32	;' '
  2412  0704  3465               	retlw	101	;'e'
  2413  0705  3472               	retlw	114	;'r'
  2414  0706  3472               	retlw	114	;'r'
  2415  0707  346F               	retlw	111	;'o'
  2416  0708  3472               	retlw	114	;'r'
  2417  0709  340A               	retlw	10
  2418  070A  3400               	retlw	0
  2419                           psect	stringtext
  2420                           	
  2421  070B                     STR_22:	
  2422  070B  342C               	retlw	44	;','
  2423  070C  3420               	retlw	32	;' '
  2424  070D  346E               	retlw	110	;'n'
  2425  070E  346F               	retlw	111	;'o'
  2426  070F  3420               	retlw	32	;' '
  2427  0710  3473               	retlw	115	;'s'
  2428  0711  3474               	retlw	116	;'t'
  2429  0712  3461               	retlw	97	;'a'
  2430  0713  3472               	retlw	114	;'r'
  2431  0714  3474               	retlw	116	;'t'
  2432  0715  343A               	retlw	58	;':'
  2433  0716  3420               	retlw	32	;' '
  2434  0717  3430               	retlw	48	;'0'
  2435  0718  3478               	retlw	120	;'x'
  2436  0719  3425               	retlw	37	;'%'
  2437  071A  3458               	retlw	88	;'X'
  2438  071B  3400               	retlw	0
  2439                           psect	stringtext
  2440                           	
  2441  071C                     STR_85:	
  2442  071C  3449               	retlw	73	;'I'
  2443  071D  344E               	retlw	78	;'N'
  2444  071E  3453               	retlw	83	;'S'
  2445  071F  345F               	retlw	95	;'_'
  2446  0720  3443               	retlw	67	;'C'
  2447  0721  3441               	retlw	65	;'A'
  2448  0722  344C               	retlw	76	;'L'
  2449  0723  344C               	retlw	76	;'L'
  2450  0724  342C               	retlw	44	;','
  2451  0725  3420               	retlw	32	;' '
  2452  0726  3430               	retlw	48	;'0'
  2453  0727  3478               	retlw	120	;'x'
  2454  0728  3425               	retlw	37	;'%'
  2455  0729  3430               	retlw	48	;'0'
  2456  072A  3434               	retlw	52	;'4'
  2457  072B  3458               	retlw	88	;'X'
  2458  072C  3400               	retlw	0
  2459                           psect	stringtext
  2460                           	
  2461  072D                     STR_73:	
  2462  072D  3449               	retlw	73	;'I'
  2463  072E  344E               	retlw	78	;'N'
  2464  072F  3453               	retlw	83	;'S'
  2465  0730  345F               	retlw	95	;'_'
  2466  0731  3457               	retlw	87	;'W'
  2467  0732  3441               	retlw	65	;'A'
  2468  0733  3449               	retlw	73	;'I'
  2469  0734  3454               	retlw	84	;'T'
  2470  0735  3444               	retlw	68	;'D'
  2471  0736  344F               	retlw	79	;'O'
  2472  0737  3453               	retlw	83	;'S'
  2473  0738  3441               	retlw	65	;'A'
  2474  0739  3447               	retlw	71	;'G'
  2475  073A  3445               	retlw	69	;'E'
  2476  073B  3425               	retlw	37	;'%'
  2477  073C  3473               	retlw	115	;'s'
  2478  073D  3400               	retlw	0
  2479                           psect	stringtext
  2480                           	
  2481  073E                     STR_3:	
  2482  073E  3442               	retlw	66	;'B'
  2483  073F  3472               	retlw	114	;'r'
  2484  0740  346F               	retlw	111	;'o'
  2485  0741  3477               	retlw	119	;'w'
  2486  0742  346E               	retlw	110	;'n'
  2487  0743  342D               	retlw	45	;'-'
  2488  0744  346F               	retlw	111	;'o'
  2489  0745  3475               	retlw	117	;'u'
  2490  0746  3474               	retlw	116	;'t'
  2491  0747  3420               	retlw	32	;' '
  2492  0748  3472               	retlw	114	;'r'
  2493  0749  3465               	retlw	101	;'e'
  2494  074A  3473               	retlw	115	;'s'
  2495  074B  3465               	retlw	101	;'e'
  2496  074C  3474               	retlw	116	;'t'
  2497  074D  340A               	retlw	10
  2498  074E  3400               	retlw	0
  2499                           psect	stringtext
  2500                           	
  2501  074F                     STR_27:	
  2502  074F  3450               	retlw	80	;'P'
  2503  0750  3461               	retlw	97	;'a'
  2504  0751  3475               	retlw	117	;'u'
  2505  0752  3473               	retlw	115	;'s'
  2506  0753  3465               	retlw	101	;'e'
  2507  0754  3464               	retlw	100	;'d'
  2508  0755  3420               	retlw	32	;' '
  2509  0756  3470               	retlw	112	;'p'
  2510  0757  3472               	retlw	114	;'r'
  2511  0758  346F               	retlw	111	;'o'
  2512  0759  3467               	retlw	103	;'g'
  2513  075A  3472               	retlw	114	;'r'
  2514  075B  3461               	retlw	97	;'a'
  2515  075C  346D               	retlw	109	;'m'
  2516  075D  340A               	retlw	10
  2517  075E  3400               	retlw	0
  2518                           psect	stringtext
  2519                           	
  2520  075F                     STR_48:	
  2521  075F  3449               	retlw	73	;'I'
  2522  0760  344E               	retlw	78	;'N'
  2523  0761  3453               	retlw	83	;'S'
  2524  0762  345F               	retlw	95	;'_'
  2525  0763  3457               	retlw	87	;'W'
  2526  0764  3441               	retlw	65	;'A'
  2527  0765  3454               	retlw	84	;'T'
  2528  0766  3445               	retlw	69	;'E'
  2529  0767  3452               	retlw	82	;'R'
  2530  0768  342C               	retlw	44	;','
  2531  0769  3420               	retlw	32	;' '
  2532  076A  3425               	retlw	37	;'%'
  2533  076B  3473               	retlw	115	;'s'
  2534  076C  3425               	retlw	37	;'%'
  2535  076D  3473               	retlw	115	;'s'
  2536  076E  3400               	retlw	0
  2537                           psect	stringtext
  2538                           	
  2539  076F                     STR_62:	
  2540  076F  3449               	retlw	73	;'I'
  2541  0770  344E               	retlw	78	;'N'
  2542  0771  3453               	retlw	83	;'S'
  2543  0772  345F               	retlw	95	;'_'
  2544  0773  3444               	retlw	68	;'D'
  2545  0774  3452               	retlw	82	;'R'
  2546  0775  3459               	retlw	89	;'Y'
  2547  0776  3445               	retlw	69	;'E'
  2548  0777  3452               	retlw	82	;'R'
  2549  0778  342C               	retlw	44	;','
  2550  0779  3420               	retlw	32	;' '
  2551  077A  3425               	retlw	37	;'%'
  2552  077B  3473               	retlw	115	;'s'
  2553  077C  3425               	retlw	37	;'%'
  2554  077D  3473               	retlw	115	;'s'
  2555  077E  3400               	retlw	0
  2556                           psect	stringtext
  2557                           	
  2558  077F                     STR_4:	
  2559  077F  3457               	retlw	87	;'W'
  2560  0780  3461               	retlw	97	;'a'
  2561  0781  3474               	retlw	116	;'t'
  2562  0782  3463               	retlw	99	;'c'
  2563  0783  3468               	retlw	104	;'h'
  2564  0784  3464               	retlw	100	;'d'
  2565  0785  346F               	retlw	111	;'o'
  2566  0786  3467               	retlw	103	;'g'
  2567  0787  3420               	retlw	32	;' '
  2568  0788  3472               	retlw	114	;'r'
  2569  0789  3465               	retlw	101	;'e'
  2570  078A  3473               	retlw	115	;'s'
  2571  078B  3465               	retlw	101	;'e'
  2572  078C  3474               	retlw	116	;'t'
  2573  078D  340A               	retlw	10
  2574  078E  3400               	retlw	0
  2575                           psect	stringtext
  2576                           	
  2577  078F                     STR_2:	
  2578  078F  3450               	retlw	80	;'P'
  2579  0790  346F               	retlw	111	;'o'
  2580  0791  3477               	retlw	119	;'w'
  2581  0792  3465               	retlw	101	;'e'
  2582  0793  3472               	retlw	114	;'r'
  2583  0794  342D               	retlw	45	;'-'
  2584  0795  346F               	retlw	111	;'o'
  2585  0796  346E               	retlw	110	;'n'
  2586  0797  3420               	retlw	32	;' '
  2587  0798  3472               	retlw	114	;'r'
  2588  0799  3465               	retlw	101	;'e'
  2589  079A  3473               	retlw	115	;'s'
  2590  079B  3465               	retlw	101	;'e'
  2591  079C  3474               	retlw	116	;'t'
  2592  079D  340A               	retlw	10
  2593  079E  3400               	retlw	0
  2594                           psect	stringtext
  2595                           	
  2596  079F                     STR_104:	
  2597  079F  3455               	retlw	85	;'U'
  2598  07A0  346E               	retlw	110	;'n'
  2599  07A1  346B               	retlw	107	;'k'
  2600  07A2  346E               	retlw	110	;'n'
  2601  07A3  346F               	retlw	111	;'o'
  2602  07A4  3477               	retlw	119	;'w'
  2603  07A5  346E               	retlw	110	;'n'
  2604  07A6  3420               	retlw	32	;' '
  2605  07A7  3465               	retlw	101	;'e'
  2606  07A8  3472               	retlw	114	;'r'
  2607  07A9  3472               	retlw	114	;'r'
  2608  07AA  346F               	retlw	111	;'o'
  2609  07AB  3472               	retlw	114	;'r'
  2610  07AC  340A               	retlw	10
  2611  07AD  3400               	retlw	0
  2612                           psect	stringtext
  2613                           	
  2614  07AE                     STR_16:	
  2615  07AE  3444               	retlw	68	;'D'
  2616  07AF  3472               	retlw	114	;'r'
  2617  07B0  3461               	retlw	97	;'a'
  2618  07B1  3469               	retlw	105	;'i'
  2619  07B2  346E               	retlw	110	;'n'
  2620  07B3  3420               	retlw	32	;' '
  2621  07B4  3474               	retlw	116	;'t'
  2622  07B5  3469               	retlw	105	;'i'
  2623  07B6  346D               	retlw	109	;'m'
  2624  07B7  3465               	retlw	101	;'e'
  2625  07B8  346F               	retlw	111	;'o'
  2626  07B9  3475               	retlw	117	;'u'
  2627  07BA  3474               	retlw	116	;'t'
  2628  07BB  340A               	retlw	10
  2629  07BC  3400               	retlw	0
  2630                           psect	stringtext
  2631                           	
  2632  07BD                     STR_21:	
  2633  07BD  342C               	retlw	44	;','
  2634  07BE  3420               	retlw	32	;' '
  2635  07BF  3469               	retlw	105	;'i'
  2636  07C0  346E               	retlw	110	;'n'
  2637  07C1  3463               	retlw	99	;'c'
  2638  07C2  346F               	retlw	111	;'o'
  2639  07C3  346D               	retlw	109	;'m'
  2640  07C4  3470               	retlw	112	;'p'
  2641  07C5  3461               	retlw	97	;'a'
  2642  07C6  3474               	retlw	116	;'t'
  2643  07C7  3469               	retlw	105	;'i'
  2644  07C8  3462               	retlw	98	;'b'
  2645  07C9  346C               	retlw	108	;'l'
  2646  07CA  3465               	retlw	101	;'e'
  2647  07CB  3400               	retlw	0
  2648                           psect	stringtext
  2649                           	
  2650  07CC                     STR_55:	
  2651  07CC  3449               	retlw	73	;'I'
  2652  07CD  344E               	retlw	78	;'N'
  2653  07CE  3453               	retlw	83	;'S'
  2654  07CF  345F               	retlw	95	;'_'
  2655  07D0  3450               	retlw	80	;'P'
  2656  07D1  3455               	retlw	85	;'U'
  2657  07D2  344D               	retlw	77	;'M'
  2658  07D3  3450               	retlw	80	;'P'
  2659  07D4  342C               	retlw	44	;','
  2660  07D5  3420               	retlw	32	;' '
  2661  07D6  3425               	retlw	37	;'%'
  2662  07D7  3473               	retlw	115	;'s'
  2663  07D8  3425               	retlw	37	;'%'
  2664  07D9  3473               	retlw	115	;'s'
  2665  07DA  3400               	retlw	0
  2666                           psect	stringtext
  2667                           	
  2668  07DB                     STR_101:	
  2669  07DB  3453               	retlw	83	;'S'
  2670  07DC  3479               	retlw	121	;'y'
  2671  07DD  346E               	retlw	110	;'n'
  2672  07DE  3474               	retlw	116	;'t'
  2673  07DF  3461               	retlw	97	;'a'
  2674  07E0  3478               	retlw	120	;'x'
  2675  07E1  3420               	retlw	32	;' '
  2676  07E2  3465               	retlw	101	;'e'
  2677  07E3  3472               	retlw	114	;'r'
  2678  07E4  3472               	retlw	114	;'r'
  2679  07E5  346F               	retlw	111	;'o'
  2680  07E6  3472               	retlw	114	;'r'
  2681  07E7  340A               	retlw	10
  2682  07E8  3400               	retlw	0
  2683                           psect	stringtext
  2684                           	
  2685  07E9                     STR_35:	
  2686  07E9  3442               	retlw	66	;'B'
  2687  07EA  346F               	retlw	111	;'o'
  2688  07EB  3478               	retlw	120	;'x'
  2689  07EC  3420               	retlw	32	;' '
  2690  07ED  3466               	retlw	102	;'f'
  2691  07EE  346C               	retlw	108	;'l'
  2692  07EF  346F               	retlw	111	;'o'
  2693  07F0  346F               	retlw	111	;'o'
  2694  07F1  3464               	retlw	100	;'d'
  2695  07F2  3465               	retlw	101	;'e'
  2696  07F3  3464               	retlw	100	;'d'
  2697  07F4  3421               	retlw	33	;'!'
  2698  07F5  340A               	retlw	10
  2699  07F6  3400               	retlw	0
  2700                           psect	stringtext
  2701                           	
  2702  07F7                     STR_15:	
  2703  07F7  3446               	retlw	70	;'F'
  2704  07F8  3469               	retlw	105	;'i'
  2705  07F9  346C               	retlw	108	;'l'
  2706  07FA  346C               	retlw	108	;'l'
  2707  07FB  3420               	retlw	32	;' '
  2708  07FC  3474               	retlw	116	;'t'
  2709  07FD  3469               	retlw	105	;'i'
  2710  07FE  346D               	retlw	109	;'m'
  2711  07FF  3465               	retlw	101	;'e'
  2712  0800  346F               	retlw	111	;'o'
  2713  0801  3475               	retlw	117	;'u'
  2714  0802  3474               	retlw	116	;'t'
  2715  0803  340A               	retlw	10
  2716  0804  3400               	retlw	0
  2717                           psect	stringtext
  2718                           	
  2719  0805                     STR_18:	
  2720  0805  3449               	retlw	73	;'I'
  2721  0806  344E               	retlw	78	;'N'
  2722  0807  3453               	retlw	83	;'S'
  2723  0808  345F               	retlw	95	;'_'
  2724  0809  3453               	retlw	83	;'S'
  2725  080A  3454               	retlw	84	;'T'
  2726  080B  3441               	retlw	65	;'A'
  2727  080C  3452               	retlw	82	;'R'
  2728  080D  3454               	retlw	84	;'T'
  2729  080E  342C               	retlw	44	;','
  2730  080F  3420               	retlw	32	;' '
  2731  0810  3425               	retlw	37	;'%'
  2732  0811  3473               	retlw	115	;'s'
  2733  0812  3400               	retlw	0
  2734                           psect	stringtext
  2735                           	
  2736  0813                     STR_98:	
  2737  0813  3453               	retlw	83	;'S'
  2738  0814  3465               	retlw	101	;'e'
  2739  0815  3474               	retlw	116	;'t'
  2740  0816  3420               	retlw	32	;' '
  2741  0817  346D               	retlw	109	;'m'
  2742  0818  346F               	retlw	111	;'o'
  2743  0819  3464               	retlw	100	;'d'
  2744  081A  3465               	retlw	101	;'e'
  2745  081B  3420               	retlw	32	;' '
  2746  081C  3425               	retlw	37	;'%'
  2747  081D  3475               	retlw	117	;'u'
  2748  081E  340A               	retlw	10
  2749  081F  3400               	retlw	0
  2750                           psect	stringtext
  2751                           	
  2752  0820                     STR_40:	
  2753  0820  3449               	retlw	73	;'I'
  2754  0821  344E               	retlw	78	;'N'
  2755  0822  3453               	retlw	83	;'S'
  2756  0823  345F               	retlw	95	;'_'
  2757  0824  3442               	retlw	66	;'B'
  2758  0825  344F               	retlw	79	;'O'
  2759  0826  3457               	retlw	87	;'W'
  2760  0827  344C               	retlw	76	;'L'
  2761  0828  342C               	retlw	44	;','
  2762  0829  3420               	retlw	32	;' '
  2763  082A  3425               	retlw	37	;'%'
  2764  082B  3473               	retlw	115	;'s'
  2765  082C  3400               	retlw	0
  2766                           psect	stringtext
  2767                           	
  2768  082D                     STR_92:	
  2769  082D  3477               	retlw	119	;'w'
  2770  082E  3461               	retlw	97	;'a'
  2771  082F  3469               	retlw	105	;'i'
  2772  0830  3474               	retlw	116	;'t'
  2773  0831  3469               	retlw	105	;'i'
  2774  0832  346E               	retlw	110	;'n'
  2775  0833  3467               	retlw	103	;'g'
  2776  0834  342E               	retlw	46	;'.'
  2777  0835  342E               	retlw	46	;'.'
  2778  0836  342E               	retlw	46	;'.'
  2779  0837  340A               	retlw	10
  2780  0838  3400               	retlw	0
  2781                           psect	stringtext
  2782                           	
  2783  0839                     STR_17:	
  2784  0839  3449               	retlw	73	;'I'
  2785  083A  3450               	retlw	80	;'P'
  2786  083B  3420               	retlw	32	;' '
  2787  083C  3430               	retlw	48	;'0'
  2788  083D  3478               	retlw	120	;'x'
  2789  083E  3425               	retlw	37	;'%'
  2790  083F  3430               	retlw	48	;'0'
  2791  0840  3434               	retlw	52	;'4'
  2792  0841  3458               	retlw	88	;'X'
  2793  0842  343A               	retlw	58	;':'
  2794  0843  3420               	retlw	32	;' '
  2795  0844  3400               	retlw	0
  2796                           psect	stringtext
  2797                           	
  2798  0845                     STR_44:	
  2799  0845  3449               	retlw	73	;'I'
  2800  0846  344E               	retlw	78	;'N'
  2801  0847  3453               	retlw	83	;'S'
  2802  0848  345F               	retlw	95	;'_'
  2803  0849  3441               	retlw	65	;'A'
  2804  084A  3452               	retlw	82	;'R'
  2805  084B  344D               	retlw	77	;'M'
  2806  084C  342C               	retlw	44	;','
  2807  084D  3420               	retlw	32	;' '
  2808  084E  3425               	retlw	37	;'%'
  2809  084F  3473               	retlw	115	;'s'
  2810  0850  3400               	retlw	0
  2811                           psect	stringtext
  2812                           	
  2813  0851                     STR_102:	
  2814  0851  3449               	retlw	73	;'I'
  2815  0852  342F               	retlw	47	;'/'
  2816  0853  344F               	retlw	79	;'O'
  2817  0854  3420               	retlw	32	;' '
  2818  0855  3465               	retlw	101	;'e'
  2819  0856  3472               	retlw	114	;'r'
  2820  0857  3472               	retlw	114	;'r'
  2821  0858  346F               	retlw	111	;'o'
  2822  0859  3472               	retlw	114	;'r'
  2823  085A  340A               	retlw	10
  2824  085B  3400               	retlw	0
  2825                           psect	stringtext
  2826                           	
  2827  085C                     STR_54:	
  2828  085C  3420               	retlw	32	;' '
  2829  085D  3428               	retlw	40	;'('
  2830  085E  3473               	retlw	115	;'s'
  2831  085F  346B               	retlw	107	;'k'
  2832  0860  3469               	retlw	105	;'i'
  2833  0861  3470               	retlw	112	;'p'
  2834  0862  3470               	retlw	112	;'p'
  2835  0863  3465               	retlw	101	;'e'
  2836  0864  3464               	retlw	100	;'d'
  2837  0865  3429               	retlw	41	;')'
  2838  0866  3400               	retlw	0
  2839                           psect	stringtext
  2840                           	
  2841  0867                     STR_6:	
  2842  0867  3450               	retlw	80	;'P'
  2843  0868  3469               	retlw	105	;'i'
  2844  0869  346E               	retlw	110	;'n'
  2845  086A  3420               	retlw	32	;' '
  2846  086B  3472               	retlw	114	;'r'
  2847  086C  3465               	retlw	101	;'e'
  2848  086D  3473               	retlw	115	;'s'
  2849  086E  3465               	retlw	101	;'e'
  2850  086F  3474               	retlw	116	;'t'
  2851  0870  340A               	retlw	10
  2852  0871  3400               	retlw	0
  2853                           psect	stringtext
  2854                           	
  2855  0872                     STR_108:	
  2856  0872  3445               	retlw	69	;'E'
  2857  0873  3463               	retlw	99	;'c'
  2858  0874  3468               	retlw	104	;'h'
  2859  0875  346F               	retlw	111	;'o'
  2860  0876  343A               	retlw	58	;':'
  2861  0877  3420               	retlw	32	;' '
  2862  0878  3425               	retlw	37	;'%'
  2863  0879  3473               	retlw	115	;'s'
  2864  087A  340A               	retlw	10
  2865  087B  3400               	retlw	0
  2866                           psect	stringtext
  2867                           	
  2868  087C                     STR_93:	
  2869  087C  3473               	retlw	115	;'s'
  2870  087D  346B               	retlw	107	;'k'
  2871  087E  3469               	retlw	105	;'i'
  2872  087F  3470               	retlw	112	;'p'
  2873  0880  3470               	retlw	112	;'p'
  2874  0881  3469               	retlw	105	;'i'
  2875  0882  346E               	retlw	110	;'n'
  2876  0883  3467               	retlw	103	;'g'
  2877  0884  340A               	retlw	10
  2878  0885  3400               	retlw	0
  2879                           psect	stringtext
  2880                           	
  2881  0886                     STR_30:	
  2882  0886  3457               	retlw	87	;'W'
  2883  0887  3461               	retlw	97	;'a'
  2884  0888  3474               	retlw	116	;'t'
  2885  0889  3465               	retlw	101	;'e'
  2886  088A  3472               	retlw	114	;'r'
  2887  088B  3420               	retlw	32	;' '
  2888  088C  3425               	retlw	37	;'%'
  2889  088D  3473               	retlw	115	;'s'
  2890  088E  340A               	retlw	10
  2891  088F  3400               	retlw	0
  2892                           psect	stringtext
  2893                           	
  2894  0890                     STR_41:	
  2895  0890  3442               	retlw	66	;'B'
  2896  0891  344F               	retlw	79	;'O'
  2897  0892  3457               	retlw	87	;'W'
  2898  0893  344C               	retlw	76	;'L'
  2899  0894  345F               	retlw	95	;'_'
  2900  0895  3453               	retlw	83	;'S'
  2901  0896  3454               	retlw	84	;'T'
  2902  0897  344F               	retlw	79	;'O'
  2903  0898  3450               	retlw	80	;'P'
  2904  0899  3400               	retlw	0
  2905                           psect	stringtext
  2906                           	
  2907  089A                     STR_60:	
  2908  089A  3420               	retlw	32	;' '
  2909  089B  3444               	retlw	68	;'D'
  2910  089C  3472               	retlw	114	;'r'
  2911  089D  3461               	retlw	97	;'a'
  2912  089E  3469               	retlw	105	;'i'
  2913  089F  346E               	retlw	110	;'n'
  2914  08A0  3469               	retlw	105	;'i'
  2915  08A1  346E               	retlw	110	;'n'
  2916  08A2  3467               	retlw	103	;'g'
  2917  08A3  3400               	retlw	0
  2918                           psect	stringtext
  2919                           	
  2920  08A4                     STR_34:	
  2921  08A4  3444               	retlw	68	;'D'
  2922  08A5  3472               	retlw	114	;'r'
  2923  08A6  3461               	retlw	97	;'a'
  2924  08A7  3469               	retlw	105	;'i'
  2925  08A8  346E               	retlw	110	;'n'
  2926  08A9  3465               	retlw	101	;'e'
  2927  08AA  3464               	retlw	100	;'d'
  2928  08AB  340A               	retlw	10
  2929  08AC  3400               	retlw	0
  2930                           psect	stringtext
  2931                           	
  2932  08AD                     STR_13:	
  2933  08AD  3475               	retlw	117	;'u'
  2934  08AE  346E               	retlw	110	;'n'
  2935  08AF  346B               	retlw	107	;'k'
  2936  08B0  346E               	retlw	110	;'n'
  2937  08B1  346F               	retlw	111	;'o'
  2938  08B2  3477               	retlw	119	;'w'
  2939  08B3  346E               	retlw	110	;'n'
  2940  08B4  340A               	retlw	10
  2941  08B5  3400               	retlw	0
  2942                           psect	stringtext
  2943                           	
  2944  08B6                     STR_46:	
  2945  08B6  3441               	retlw	65	;'A'
  2946  08B7  3452               	retlw	82	;'R'
  2947  08B8  344D               	retlw	77	;'M'
  2948  08B9  345F               	retlw	95	;'_'
  2949  08BA  3444               	retlw	68	;'D'
  2950  08BB  344F               	retlw	79	;'O'
  2951  08BC  3457               	retlw	87	;'W'
  2952  08BD  344E               	retlw	78	;'N'
  2953  08BE  3400               	retlw	0
  2954                           psect	stringtext
  2955                           	
  2956  08BF                     STR_45:	
  2957  08BF  3441               	retlw	65	;'A'
  2958  08C0  3452               	retlw	82	;'R'
  2959  08C1  344D               	retlw	77	;'M'
  2960  08C2  345F               	retlw	95	;'_'
  2961  08C3  3453               	retlw	83	;'S'
  2962  08C4  3454               	retlw	84	;'T'
  2963  08C5  344F               	retlw	79	;'O'
  2964  08C6  3450               	retlw	80	;'P'
  2965  08C7  3400               	retlw	0
  2966                           psect	stringtext
  2967                           	
  2968  08C8                     STR_43:	
  2969  08C8  3442               	retlw	66	;'B'
  2970  08C9  344F               	retlw	79	;'O'
  2971  08CA  3457               	retlw	87	;'W'
  2972  08CB  344C               	retlw	76	;'L'
  2973  08CC  345F               	retlw	95	;'_'
  2974  08CD  3443               	retlw	67	;'C'
  2975  08CE  3443               	retlw	67	;'C'
  2976  08CF  3457               	retlw	87	;'W'
  2977  08D0  3400               	retlw	0
  2978                           psect	stringtext
  2979                           	
  2980  08D1                     STR_53:	
  2981  08D1  3420               	retlw	32	;' '
  2982  08D2  3446               	retlw	70	;'F'
  2983  08D3  3469               	retlw	105	;'i'
  2984  08D4  346C               	retlw	108	;'l'
  2985  08D5  346C               	retlw	108	;'l'
  2986  08D6  3469               	retlw	105	;'i'
  2987  08D7  346E               	retlw	110	;'n'
  2988  08D8  3467               	retlw	103	;'g'
  2989  08D9  3400               	retlw	0
  2990                           psect	stringtext
  2991                           	
  2992  08DA                     STR_95:	
  2993  08DA  3443               	retlw	67	;'C'
  2994  08DB  3461               	retlw	97	;'a'
  2995  08DC  3474               	retlw	116	;'t'
  2996  08DD  3420               	retlw	32	;' '
  2997  08DE  3425               	retlw	37	;'%'
  2998  08DF  3473               	retlw	115	;'s'
  2999  08E0  340A               	retlw	10
  3000  08E1  3400               	retlw	0
  3001                           psect	stringtext
  3002                           	
  3003  08E2                     STR_33:	
  3004  08E2  3446               	retlw	70	;'F'
  3005  08E3  3469               	retlw	105	;'i'
  3006  08E4  346C               	retlw	108	;'l'
  3007  08E5  346C               	retlw	108	;'l'
  3008  08E6  3465               	retlw	101	;'e'
  3009  08E7  3464               	retlw	100	;'d'
  3010  08E8  340A               	retlw	10
  3011  08E9  3400               	retlw	0
  3012                           psect	stringtext
  3013                           	
  3014  08EA                     STR_9:	
  3015  08EA  3442               	retlw	66	;'B'
  3016  08EB  346F               	retlw	111	;'o'
  3017  08EC  3478               	retlw	120	;'x'
  3018  08ED  3420               	retlw	32	;' '
  3019  08EE  3469               	retlw	105	;'i'
  3020  08EF  3473               	retlw	115	;'s'
  3021  08F0  3420               	retlw	32	;' '
  3022  08F1  3400               	retlw	0
  3023                           psect	stringtext
  3024                           	
  3025  08F2                     STR_87:	
  3026  08F2  3449               	retlw	73	;'I'
  3027  08F3  344E               	retlw	78	;'N'
  3028  08F4  3453               	retlw	83	;'S'
  3029  08F5  345F               	retlw	95	;'_'
  3030  08F6  3445               	retlw	69	;'E'
  3031  08F7  344E               	retlw	78	;'N'
  3032  08F8  3444               	retlw	68	;'D'
  3033  08F9  3400               	retlw	0
  3034                           psect	stringtext
  3035                           	
  3036  08FA                     STR_42:	
  3037  08FA  3442               	retlw	66	;'B'
  3038  08FB  344F               	retlw	79	;'O'
  3039  08FC  3457               	retlw	87	;'W'
  3040  08FD  344C               	retlw	76	;'L'
  3041  08FE  345F               	retlw	95	;'_'
  3042  08FF  3443               	retlw	67	;'C'
  3043  0900  3457               	retlw	87	;'W'
  3044  0901  3400               	retlw	0
  3045                           psect	stringtext
  3046                           	
  3047  0902                     STR_114:	
  3048  0902  3428               	retlw	40	;'('
  3049  0903  346E               	retlw	110	;'n'
  3050  0904  3475               	retlw	117	;'u'
  3051  0905  346C               	retlw	108	;'l'
  3052  0906  346C               	retlw	108	;'l'
  3053  0907  3429               	retlw	41	;')'
  3054  0908  3400               	retlw	0
  3055                           psect	stringtext
  3056                           	
  3057  0909                     STR_11:	
  3058  0909  346D               	retlw	109	;'m'
  3059  090A  3465               	retlw	101	;'e'
  3060  090B  3473               	retlw	115	;'s'
  3061  090C  3473               	retlw	115	;'s'
  3062  090D  3479               	retlw	121	;'y'
  3063  090E  340A               	retlw	10
  3064  090F  3400               	retlw	0
  3065                           psect	stringtext
  3066                           	
  3067  0910                     STR_52:	
  3068  0910  3420               	retlw	32	;' '
  3069  0911  3428               	retlw	40	;'('
  3070  0912  346E               	retlw	110	;'n'
  3071  0913  346F               	retlw	111	;'o'
  3072  0914  3470               	retlw	112	;'p'
  3073  0915  3429               	retlw	41	;')'
  3074  0916  3400               	retlw	0
  3075                           psect	stringtext
  3076                           	
  3077  0917                     STR_47:	
  3078  0917  3441               	retlw	65	;'A'
  3079  0918  3452               	retlw	82	;'R'
  3080  0919  344D               	retlw	77	;'M'
  3081  091A  345F               	retlw	95	;'_'
  3082  091B  3455               	retlw	85	;'U'
  3083  091C  3450               	retlw	80	;'P'
  3084  091D  3400               	retlw	0
  3085                           psect	stringtext
  3086                           	
  3087  091E                     STR_10:	
  3088  091E  3474               	retlw	116	;'t'
  3089  091F  3469               	retlw	105	;'i'
  3090  0920  3464               	retlw	100	;'d'
  3091  0921  3479               	retlw	121	;'y'
  3092  0922  340A               	retlw	10
  3093  0923  3400               	retlw	0
  3094                           psect	stringtext
  3095                           	
  3096  0924                     STR_12:	
  3097  0924  3477               	retlw	119	;'w'
  3098  0925  3465               	retlw	101	;'e'
  3099  0926  3474               	retlw	116	;'t'
  3100  0927  340A               	retlw	10
  3101  0928  3400               	retlw	0
  3102                           psect	stringtext
  3103                           	
  3104  0929                     STR_31:	
  3105  0929  3468               	retlw	104	;'h'
  3106  092A  3469               	retlw	105	;'i'
  3107  092B  3467               	retlw	103	;'g'
  3108  092C  3468               	retlw	104	;'h'
  3109  092D  3400               	retlw	0
  3110                           psect	stringtext
  3111                           	
  3112  092E                     STR_97:	
  3113  092E  346F               	retlw	111	;'o'
  3114  092F  3475               	retlw	117	;'u'
  3115  0930  3474               	retlw	116	;'t'
  3116  0931  3400               	retlw	0
  3117                           psect	stringtext
  3118                           	
  3119  0932                     STR_50:	
  3120  0932  346F               	retlw	111	;'o'
  3121  0933  3466               	retlw	102	;'f'
  3122  0934  3466               	retlw	102	;'f'
  3123  0935  3400               	retlw	0
  3124                           psect	stringtext
  3125                           	
  3126  0936                     STR_19:	
  3127  0936  3477               	retlw	119	;'w'
  3128  0937  3465               	retlw	101	;'e'
  3129  0938  3474               	retlw	116	;'t'
  3130  0939  3400               	retlw	0
  3131                           psect	stringtext
  3132                           	
  3133  093A                     STR_32:	
  3134  093A  346C               	retlw	108	;'l'
  3135  093B  346F               	retlw	111	;'o'
  3136  093C  3477               	retlw	119	;'w'
  3137  093D  3400               	retlw	0
  3138                           psect	stringtext
  3139                           	
  3140  093E                     STR_20:	
  3141  093E  3464               	retlw	100	;'d'
  3142  093F  3472               	retlw	114	;'r'
  3143  0940  3479               	retlw	121	;'y'
  3144  0941  3400               	retlw	0
  3145                           psect	stringtext
  3146                           	
  3147  0942                     STR_99:	
  3148  0942  3423               	retlw	35	;'#'
  3149  0943  3420               	retlw	32	;' '
  3150  0944  3400               	retlw	0
  3151                           psect	stringtext
  3152                           	
  3153  0945                     STR_96:	
  3154  0945  3469               	retlw	105	;'i'
  3155  0946  346E               	retlw	110	;'n'
  3156  0947  3400               	retlw	0
  3157                           psect	stringtext
  3158                           	
  3159  0948                     STR_49:	
  3160  0948  346F               	retlw	111	;'o'
  3161  0949  346E               	retlw	110	;'n'
  3162  094A  3400               	retlw	0
  3163                           psect	stringtext
  3164  093E                     STR_26	equ	STR_20+0
  3165  093E                     STR_38	equ	STR_20+0
  3166  093A                     STR_70	equ	STR_32+0
  3167  0936                     STR_25	equ	STR_19+0
  3168  0936                     STR_37	equ	STR_19+0
  3169  0948                     STR_56	equ	STR_49+0
  3170  0948                     STR_63	equ	STR_49+0
  3171  0948                     STR_106	equ	STR_49+0
  3172  0948                     STR_109	equ	STR_49+0
  3173  0929                     STR_69	equ	STR_31+0
  3174  0932                     STR_57	equ	STR_50+0
  3175  0932                     STR_64	equ	STR_50+0
  3176  0932                     STR_107	equ	STR_50+0
  3177  0932                     STR_110	equ	STR_50+0
  3178  0910                     STR_59	equ	STR_52+0
  3179  0910                     STR_66	equ	STR_52+0
  3180  0910                     STR_72	equ	STR_52+0
  3181  0910                     STR_75	equ	STR_52+0
  3182  0910                     STR_77	equ	STR_52+0
  3183  0910                     STR_81	equ	STR_52+0
  3184  0910                     STR_84	equ	STR_52+0
  3185  085C                     STR_61	equ	STR_54+0
  3186  0839                     STR_39	equ	STR_17+0
  3187  0942                     STR_100	equ	STR_99+0
  3188  0878                     STR_112	equ	STR_108+6
  3189  07F5                     STR_23	equ	STR_35+12
  3190  07F5                     STR_90	equ	STR_35+12
  3191  07F6                     STR_51	equ	STR_35+13
  3192  07F6                     STR_58	equ	STR_35+13
  3193  07F6                     STR_65	equ	STR_35+13
  3194  07F6                     STR_71	equ	STR_35+13
  3195  07F6                     STR_74	equ	STR_35+13
  3196  07F6                     STR_78	equ	STR_35+13
  3197  07F6                     STR_80	equ	STR_35+13
  3198  07F6                     STR_83	equ	STR_35+13
  3199                           	file	"C:\Users\chris\AppData\Local\Temp\sh2c."
  3200                           	line	#
  3201                           psect cinit,class=CODE,delta=2
  3202                           global start_initialization
  3203  2FA2                     start_initialization:
  3204                           
  3205                           psect	bitbssCOMMON,class=COMMON,bit,space=1
  3206                           global __pbitbssCOMMON
  3207  0380                     __pbitbssCOMMON:
  3208  0380                     _cat_detected:
  3209  0380                            ds      1
  3210                           
  3211  0381                     _cat_present:
  3212  0381                            ds      1
  3213                           
  3214  0382                     _detected_cur:
  3215  0382                            ds      1
  3216                           
  3217  0383                     _detected_old:
  3218  0383                            ds      1
  3219                           
  3220  0384                     _echoed:
  3221  0384                            ds      1
  3222                           
  3223  0385                     _error_drain:
  3224  0385                            ds      1
  3225                           
  3226  0386                     _error_execution:
  3227  0386                            ds      1
  3228                           
  3229  0387                     _error_fill:
  3230  0387                            ds      1
  3231                           
  3232  0388                     _error_flood:
  3233  0388                            ds      1
  3234                           
  3235  0389                     _error_overheat:
  3236  0389                            ds      1
  3237                           
  3238  038A                     _full_wash:
  3239  038A                            ds      1
  3240                           
  3241  038B                     _locked:
  3242  038B                            ds      1
  3243                           
  3244  038C                     _longhandled:
  3245  038C                            ds      1
  3246                           
  3247  038D                     _paused:
  3248  038D                            ds      1
  3249                           
  3250  038E                     _pinging:
  3251  038E                            ds      1
  3252                           
  3253                           psect	bitbssBANK0,class=BANK0,bit,space=1
  3254                           global __pbitbssBANK0
  3255  0368                     __pbitbssBANK0:
  3256  0368                     _detected:
  3257  0368                            ds      1
  3258                           
  3259  0369                     _detected_dbc:
  3260  0369                            ds      1
  3261                           
  3262  036A                     _filling:
  3263  036A                            ds      1
  3264                           
  3265  036B                     _ledalwayson:
  3266  036B                            ds      1
  3267                           
  3268  036C                     _wet_program:
  3269  036C                            ds      1
  3270                           
  3271                           psect	bssBANK0,class=BANK0,space=1
  3272                           global __pbssBANK0
  3273  0062                     __pbssBANK0:
  3274  0062                     _auto_mode:
  3275  0062                            ds      1
  3276                           
  3277  0063                     _error_nr:
  3278  0063                            ds      1
  3279                           
  3280  0064                     _hysteresis:
  3281  0064                            ds      1
  3282                           
  3283  0065                     _ins_state:
  3284  0065                            ds      1
  3285                           
  3286  0066                     _state:
  3287  0066                            ds      1
  3288                           
  3289  0067                     proc_char@curcolumn:
  3290  0067                            ds      1
  3291                           
  3292  0068                     _cur_instruction:
  3293  0068                            ds      3
  3294                           
  3295  006B                     _ins_pointer:
  3296  006B                            ds      2
  3297                           
  3298                           psect	dataBANK0,class=BANK0,space=1
  3299                           global __pdataBANK0
  3300  006E                     __pdataBANK0:
  3301                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3302                           	line	72
  3303  006E                     _cart_level:
  3304  006E                            ds      1
  3305                           
  3306                           psect	dataBANK0
  3307                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  3308                           	line	35
  3309  006F                     _localecho:
  3310  006F                            ds      1
  3311                           
  3312                           psect	bssBANK1,class=BANK1,space=1
  3313                           global __pbssBANK1
  3314  00C6                     __pbssBANK1:
  3315  00C6                     _currenttime:
  3316  00C6                            ds      4
  3317                           
  3318  00CA                     _overflows:
  3319  00CA                            ds      4
  3320                           
  3321  00CE                     _ins_address:
  3322  00CE                            ds      2
  3323                           
  3324  00D0                     _reflectionquality:
  3325  00D0                            ds      2
  3326                           
  3327  00D2                     exe_instruction@ret_address:
  3328  00D2                            ds      2
  3329                           
  3330  00D4                     _PORTB_old:
  3331  00D4                            ds      1
  3332                           
  3333  00D5                     _buttonmask_cum:
  3334  00D5                            ds      1
  3335                           
  3336  00D6                     _buttonmask_cur:
  3337  00D6                            ds      1
  3338                           
  3339  00D7                     _buttonmask_evt:
  3340  00D7                            ds      1
  3341                           
  3342  00D8                     _interval:
  3343  00D8                            ds      1
  3344                           
  3345  00D9                     _panel_mode:
  3346  00D9                            ds      1
  3347                           
  3348  00DA                     _prg_source:
  3349  00DA                            ds      1
  3350                           
  3351  00DB                     catgenie120@PORTB_old:
  3352  00DB                            ds      1
  3353                           
  3354  00DC                     water@state:
  3355  00DC                            ds      1
  3356                           
  3357                           psect	dataBANK1,class=BANK1,space=1
  3358                           global __pdataBANK1
  3359  00DD                     __pdataBANK1:
  3360                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3361                           	line	54
  3362  00DD                     _autotimer:
  3363  00DD                            ds      6
  3364                           
  3365                           psect	dataBANK1
  3366                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3367                           	line	59
  3368  00E3                     _timer_drain:
  3369  00E3                            ds      6
  3370                           
  3371                           psect	dataBANK1
  3372                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3373                           	line	58
  3374  00E9                     _timer_fill:
  3375  00E9                            ds      6
  3376                           
  3377                           psect	bssBANK2,class=BANK2,space=1
  3378                           global __pbssBANK2
  3379  0120                     __pbssBANK2:
  3380  0120                     litterlanguage_pause@context:
  3381  0120                            ds      17
  3382                           
  3383  0131                     _rx:
  3384  0131                            ds      9
  3385                           
  3386  013A                     _cartridgetimeout:
  3387  013A                            ds      6
  3388                           
  3389  0140                     _cattimer:
  3390  0140                            ds      6
  3391                           
  3392  0146                     _pingtime:
  3393  0146                            ds      6
  3394                           
  3395  014C                     _second:
  3396  014C                            ds      6
  3397                           
  3398  0152                     _sensortimer:
  3399  0152                            ds      6
  3400                           
  3401                           psect	dataBANK2,class=BANK2,space=1
  3402                           global __pdataBANK2
  3403  0158                     __pdataBANK2:
  3404                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
  3405                           	line	36
  3406  0158                     _debouncer:
  3407  0158                            ds      6
  3408                           
  3409                           psect	dataBANK2
  3410                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3411                           	line	53
  3412  015E                     _holdtimeout:
  3413  015E                            ds      6
  3414                           
  3415                           psect	dataBANK2
  3416                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3417                           	line	60
  3418  0164                     _timer_autodose:
  3419  0164                            ds      6
  3420                           
  3421                           psect	dataBANK2
  3422                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3423                           	line	57
  3424  016A                     _timer_waitins:
  3425  016A                            ds      6
  3426                           
  3427                           psect	bssBANK3,class=BANK3,space=1
  3428                           global __pbssBANK3
  3429  01CA                     __pbssBANK3:
  3430  01CA                     _uptime:
  3431  01CA                            ds      4
  3432                           
  3433  01CE                     _linebuffer:
  3434  01CE                            ds      20
  3435                           
  3436                           psect	dataBANK3,class=BANK3,space=1
  3437                           global __pdataBANK3
  3438  01A0                     __pdataBANK3:
  3439                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3440                           	line	58
  3441  01A0                     _debouncers:
  3442  01A0                            ds      42
  3443                           
  3444                           psect	dataBANK4,class=BANK4,space=1
  3445                           global __pdataBANK4
  3446  0220                     __pdataBANK4:
  3447                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3448                           	line	73
  3449  0220                     _pacers:
  3450  0220                            ds      55
  3451                           
  3452                           psect clrtext,class=CODE,delta=2
  3453                           global clear_ram
  3454                           ;	Called with FSR0 containing the base address, and
  3455                           ;	WREG with the size to clear
  3456  37EA                     clear_ram:
  3457  37EA  0064               	clrwdt			;clear the watchdog before getting into this loop
  3458  37EB                     clrloop:
  3459  37EB  0180               	clrf	indf0		;clear RAM location pointed to by FSR
  3460  37EC  3101               	addfsr	0,1
  3461  37ED  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
  3462  37EE  2FEB               	goto clrloop	;have we reached the end yet?
  3463  37EF  3400               	retlw	0		;all done for this memory range, return
  3464                           ; Clear objects allocated to BITCOMMON
  3465                           psect cinit,class=CODE,delta=2
  3466                           	global __pbitbssCOMMON
  3467  2FA2  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
  3468  2FA3  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
  3469                           ; Clear objects allocated to BITBANK0
  3470                           psect cinit,class=CODE,delta=2
  3471                           	global __pbitbssBANK0
  3472  2FA4  01ED               	clrf	((__pbitbssBANK0/8)+0)&07Fh
  3473                           ; Clear objects allocated to BANK0
  3474                           psect cinit,class=CODE,delta=2
  3475                           	global __pbssBANK0
  3476  2FA5  3062               	movlw	low(__pbssBANK0)
  3477  2FA6  0084               	movwf	fsr0l
  3478  2FA7  3000               	movlw	high(__pbssBANK0)
  3479  2FA8  0085               	movwf	fsr0h
  3480  2FA9  300B               	movlw	0Bh
  3481  2FAA  31B7  27EA  31AF   	fcall	clear_ram
  3482                           ; Clear objects allocated to BANK1
  3483                           psect cinit,class=CODE,delta=2
  3484                           	global __pbssBANK1
  3485  2FAD  30C6               	movlw	low(__pbssBANK1)
  3486  2FAE  0084               	movwf	fsr0l
  3487  2FAF  3000               	movlw	high(__pbssBANK1)
  3488  2FB0  0085               	movwf	fsr0h
  3489  2FB1  3017               	movlw	017h
  3490  2FB2  31B7  27EA  31AF   	fcall	clear_ram
  3491                           ; Clear objects allocated to BANK2
  3492                           psect cinit,class=CODE,delta=2
  3493                           	global __pbssBANK2
  3494  2FB5  3020               	movlw	low(__pbssBANK2)
  3495  2FB6  0084               	movwf	fsr0l
  3496  2FB7  3001               	movlw	high(__pbssBANK2)
  3497  2FB8  0085               	movwf	fsr0h
  3498  2FB9  3038               	movlw	038h
  3499  2FBA  31B7  27EA  31AF   	fcall	clear_ram
  3500                           ; Clear objects allocated to BANK3
  3501                           psect cinit,class=CODE,delta=2
  3502                           	global __pbssBANK3
  3503  2FBD  30CA               	movlw	low(__pbssBANK3)
  3504  2FBE  0084               	movwf	fsr0l
  3505  2FBF  3001               	movlw	high(__pbssBANK3)
  3506  2FC0  0085               	movwf	fsr0h
  3507  2FC1  3018               	movlw	018h
  3508  2FC2  31B7  27EA  31AF   	fcall	clear_ram
  3509                           psect inittext,class=CODE,delta=2
  3510                           global init_ram,btemp
  3511  37E4                     init_ram:
  3512  37E4  00FE               	movwf btemp,f
  3513  37E5                     initloop:
  3514  37E5  0012               	moviw fsr0++
  3515  37E6  001E               	movwi fsr1++
  3516  37E7  0BFE               	decfsz btemp
  3517  37E8  2FE5               	goto initloop
  3518  37E9  3400               	retlw 0
  3519                           ; Initialize objects allocated to BANK0
  3520                           	global __pidataBANK0,__pdataBANK0
  3521                           psect cinit,class=CODE,delta=2
  3522  2FC5  3180  2002  31AF   	fcall	__pidataBANK0+0		;fetch initializer
  3523  2FC8  00EE               	movwf	__pdataBANK0+0&07fh		
  3524  2FC9  3180  2003  31AF   	fcall	__pidataBANK0+1		;fetch initializer
  3525  2FCC  00EF               	movwf	__pdataBANK0+1&07fh		
  3526                           ; Initialize objects allocated to BANK1
  3527                           	global __pidataBANK1,__pdataBANK1
  3528                           psect cinit,class=CODE,delta=2
  3529  2FCD  3031               	movlw low(__pidataBANK1)
  3530  2FCE  0084               	movwf fsr0l
  3531  2FCF  30A9               	movlw high(__pidataBANK1)|80h
  3532  2FD0  0085               	movwf fsr0h
  3533  2FD1  30DD               	movlw low(__pdataBANK1)
  3534  2FD2  0086               	movwf fsr1l
  3535  2FD3  3000               	movlw high(__pdataBANK1)
  3536  2FD4  0087               	movwf fsr1h
  3537  2FD5  3012               	movlw 012h
  3538  2FD6  31B7  27E4  31AF   	fcall init_ram
  3539                           ; Initialize objects allocated to BANK2
  3540                           	global __pidataBANK2,__pdataBANK2
  3541                           psect cinit,class=CODE,delta=2
  3542  2FD9  30AA               	movlw low(__pidataBANK2)
  3543  2FDA  0084               	movwf fsr0l
  3544  2FDB  30A9               	movlw high(__pidataBANK2)|80h
  3545  2FDC  0085               	movwf fsr0h
  3546  2FDD  3058               	movlw low(__pdataBANK2)
  3547  2FDE  0086               	movwf fsr1l
  3548  2FDF  3001               	movlw high(__pdataBANK2)
  3549  2FE0  0087               	movwf fsr1h
  3550  2FE1  3018               	movlw 018h
  3551  2FE2  31B7  27E4  31AF   	fcall init_ram
  3552                           ; Initialize objects allocated to BANK3
  3553                           	global __pidataBANK3,__pdataBANK3
  3554                           psect cinit,class=CODE,delta=2
  3555  2FE5  3096               	movlw low(__pidataBANK3)
  3556  2FE6  0084               	movwf fsr0l
  3557  2FE7  30AB               	movlw high(__pidataBANK3)|80h
  3558  2FE8  0085               	movwf fsr0h
  3559  2FE9  30A0               	movlw low(__pdataBANK3)
  3560  2FEA  0086               	movwf fsr1l
  3561  2FEB  3001               	movlw high(__pdataBANK3)
  3562  2FEC  0087               	movwf fsr1h
  3563  2FED  302A               	movlw 02Ah
  3564  2FEE  31B7  27E4  31AF   	fcall init_ram
  3565                           ; Initialize objects allocated to BANK4
  3566                           	global __pidataBANK4,__pdataBANK4
  3567                           psect cinit,class=CODE,delta=2
  3568  2FF1  30DC               	movlw low(__pidataBANK4)
  3569  2FF2  0084               	movwf fsr0l
  3570  2FF3  30AC               	movlw high(__pidataBANK4)|80h
  3571  2FF4  0085               	movwf fsr0h
  3572  2FF5  3020               	movlw low(__pdataBANK4)
  3573  2FF6  0086               	movwf fsr1l
  3574  2FF7  3002               	movlw high(__pdataBANK4)
  3575  2FF8  0087               	movwf fsr1h
  3576  2FF9  3037               	movlw 037h
  3577  2FFA  31B7  27E4  31AF   	fcall init_ram
  3578                           psect cinit,class=CODE,delta=2
  3579                           global end_of_initialization
  3580                           
  3581                           ;End of C runtime variable initialization code
  3582                           
  3583  2FFD                     end_of_initialization:
  3584  2FFD  0020               movlb 0
  3585  2FFE  31A7  2F4E         ljmp _main	;jump to C main() function
  3586                           psect	cstackBANK1,class=BANK1,space=1
  3587                           global __pcstackBANK1
  3588  00A0                     __pcstackBANK1:
  3589                           	global	_exe_instruction$30234
  3590  00A0                     _exe_instruction$30234:	; 2 bytes @ 0x0
  3591  00A0                     	ds	2
  3592                           	global	_exe_instruction$30235
  3593  00A2                     _exe_instruction$30235:	; 2 bytes @ 0x2
  3594  00A2                     	ds	2
  3595                           	global	exe_instruction@temp
  3596  00A4                     exe_instruction@temp:	; 2 bytes @ 0x4
  3597  00A4                     	ds	2
  3598                           	global	_exe_instruction$5954
  3599  00A6                     _exe_instruction$5954:	; 2 bytes @ 0x6
  3600  00A6                     	ds	2
  3601                           	global	_exe_instruction$5955
  3602  00A8                     _exe_instruction$5955:	; 2 bytes @ 0x8
  3603  00A8                     	ds	2
  3604                           	global	_exe_instruction$5960
  3605  00AA                     _exe_instruction$5960:	; 2 bytes @ 0xA
  3606  00AA                     	ds	2
  3607                           	global	_exe_instruction$5961
  3608  00AC                     _exe_instruction$5961:	; 2 bytes @ 0xC
  3609  00AC                     	ds	2
  3610                           	global	_exe_instruction$5967
  3611  00AE                     _exe_instruction$5967:	; 2 bytes @ 0xE
  3612  00AE                     	ds	2
  3613                           	global	_exe_instruction$5968
  3614  00B0                     _exe_instruction$5968:	; 2 bytes @ 0x10
  3615  00B0                     	ds	2
  3616                           	global	_exe_instruction$5976
  3617  00B2                     _exe_instruction$5976:	; 2 bytes @ 0x12
  3618  00B2                     	ds	2
  3619                           	global	_exe_instruction$5977
  3620  00B4                     _exe_instruction$5977:	; 2 bytes @ 0x14
  3621  00B4                     	ds	2
  3622                           	global	_exe_instruction$5985
  3623  00B6                     _exe_instruction$5985:	; 2 bytes @ 0x16
  3624  00B6                     	ds	2
  3625                           	global	_exe_instruction$5986
  3626  00B8                     _exe_instruction$5986:	; 2 bytes @ 0x18
  3627  00B8                     	ds	2
  3628                           	global	_exe_instruction$5993
  3629  00BA                     _exe_instruction$5993:	; 2 bytes @ 0x1A
  3630  00BA                     	ds	2
  3631                           	global	_exe_instruction$5994
  3632  00BC                     _exe_instruction$5994:	; 2 bytes @ 0x1C
  3633  00BC                     	ds	2
  3634                           	global	_exe_instruction$5998
  3635  00BE                     _exe_instruction$5998:	; 2 bytes @ 0x1E
  3636  00BE                     	ds	2
  3637                           	global	_exe_instruction$6002
  3638  00C0                     _exe_instruction$6002:	; 2 bytes @ 0x20
  3639  00C0                     	ds	2
  3640                           	global	_exe_instruction$6006
  3641  00C2                     _exe_instruction$6006:	; 2 bytes @ 0x22
  3642  00C2                     	ds	2
  3643                           	global	_exe_instruction$6010
  3644  00C4                     _exe_instruction$6010:	; 2 bytes @ 0x24
  3645  00C4                     	ds	2
  3646                           psect	cstackCOMMON,class=COMMON,space=1
  3647                           global __pcstackCOMMON
  3648  0072                     __pcstackCOMMON:
  3649                           	global	?_timer_init
  3650  0072                     ?_timer_init:	; 0 bytes @ 0x0
  3651                           	global	?_rtc_init
  3652  0072                     ?_rtc_init:	; 0 bytes @ 0x0
  3653                           	global	?_catsensor_init
  3654  0072                     ?_catsensor_init:	; 0 bytes @ 0x0
  3655                           	global	?_water_init
  3656  0072                     ?_water_init:	; 0 bytes @ 0x0
  3657                           	global	?_userinterface_init
  3658  0072                     ?_userinterface_init:	; 0 bytes @ 0x0
  3659                           	global	?_cmdline_init
  3660  0072                     ?_cmdline_init:	; 0 bytes @ 0x0
  3661                           	global	?_litterlanguage_init
  3662  0072                     ?_litterlanguage_init:	; 0 bytes @ 0x0
  3663                           	global	?_interrupt_init
  3664  0072                     ?_interrupt_init:	; 0 bytes @ 0x0
  3665                           	global	?_rtc_work
  3666  0072                     ?_rtc_work:	; 0 bytes @ 0x0
  3667                           	global	?_catsensor_work
  3668  0072                     ?_catsensor_work:	; 0 bytes @ 0x0
  3669                           	global	?_water_work
  3670  0072                     ?_water_work:	; 0 bytes @ 0x0
  3671                           	global	?_catgenie_work
  3672  0072                     ?_catgenie_work:	; 0 bytes @ 0x0
  3673                           	global	?_userinterface_work
  3674  0072                     ?_userinterface_work:	; 0 bytes @ 0x0
  3675                           	global	?_cmdline_work
  3676  0072                     ?_cmdline_work:	; 0 bytes @ 0x0
  3677                           	global	?_litterlanguage_work
  3678  0072                     ?_litterlanguage_work:	; 0 bytes @ 0x0
  3679                           	global	?_timer_isr
  3680  0072                     ?_timer_isr:	; 0 bytes @ 0x0
  3681                           	global	??_timer_isr
  3682  0072                     ??_timer_isr:	; 0 bytes @ 0x0
  3683                           	global	?_catsensor_isr_timer
  3684  0072                     ?_catsensor_isr_timer:	; 0 bytes @ 0x0
  3685                           	global	??_catsensor_isr_timer
  3686  0072                     ??_catsensor_isr_timer:	; 0 bytes @ 0x0
  3687                           	global	?_catsensor_isr_input
  3688  0072                     ?_catsensor_isr_input:	; 0 bytes @ 0x0
  3689                           	global	??_catsensor_isr_input
  3690  0072                     ??_catsensor_isr_input:	; 0 bytes @ 0x0
  3691                           	global	?_serial_rx_isr
  3692  0072                     ?_serial_rx_isr:	; 0 bytes @ 0x0
  3693                           	global	??_serial_rx_isr
  3694  0072                     ??_serial_rx_isr:	; 0 bytes @ 0x0
  3695                           	global	?_serial_tx_isr
  3696  0072                     ?_serial_tx_isr:	; 0 bytes @ 0x0
  3697                           	global	??_serial_tx_isr
  3698  0072                     ??_serial_tx_isr:	; 0 bytes @ 0x0
  3699                           	global	?_litterlanguage_cleanup
  3700  0072                     ?_litterlanguage_cleanup:	; 0 bytes @ 0x0
  3701                           	global	?_printtime
  3702  0072                     ?_printtime:	; 0 bytes @ 0x0
  3703                           	global	?_set_Dosage
  3704  0072                     ?_set_Dosage:	; 0 bytes @ 0x0
  3705                           	global	?_exe_instruction
  3706  0072                     ?_exe_instruction:	; 0 bytes @ 0x0
  3707                           	global	?_wait_instruction
  3708  0072                     ?_wait_instruction:	; 0 bytes @ 0x0
  3709                           	global	?_set_Bowl
  3710  0072                     ?_set_Bowl:	; 0 bytes @ 0x0
  3711                           	global	?_set_Arm
  3712  0072                     ?_set_Arm:	; 0 bytes @ 0x0
  3713                           	global	?_water_fill
  3714  0072                     ?_water_fill:	; 0 bytes @ 0x0
  3715                           	global	?_set_Pump
  3716  0072                     ?_set_Pump:	; 0 bytes @ 0x0
  3717                           	global	?_set_Dryer
  3718  0072                     ?_set_Dryer:	; 0 bytes @ 0x0
  3719                           	global	?_set_mode
  3720  0072                     ?_set_mode:	; 0 bytes @ 0x0
  3721                           	global	?_update_display
  3722  0072                     ?_update_display:	; 0 bytes @ 0x0
  3723                           	global	?_update_autotimer
  3724  0072                     ?_update_autotimer:	; 0 bytes @ 0x0
  3725                           	global	?_start_short
  3726  0072                     ?_start_short:	; 0 bytes @ 0x0
  3727                           	global	?_setup_short
  3728  0072                     ?_setup_short:	; 0 bytes @ 0x0
  3729                           	global	?_both_short
  3730  0072                     ?_both_short:	; 0 bytes @ 0x0
  3731                           	global	?_start_long
  3732  0072                     ?_start_long:	; 0 bytes @ 0x0
  3733                           	global	?_setup_long
  3734  0072                     ?_setup_long:	; 0 bytes @ 0x0
  3735                           	global	?_both_long
  3736  0072                     ?_both_long:	; 0 bytes @ 0x0
  3737                           	global	?_putch
  3738  0072                     ?_putch:	; 0 bytes @ 0x0
  3739                           	global	?_proc_char
  3740  0072                     ?_proc_char:	; 0 bytes @ 0x0
  3741                           	global	?_proc_line
  3742  0072                     ?_proc_line:	; 0 bytes @ 0x0
  3743                           	global	?_isdigit
  3744  0072                     ?_isdigit:	; 1 bit 
  3745                           	global	?_main
  3746  0072                     ?_main:	; 0 bytes @ 0x0
  3747                           	global	?_isr
  3748  0072                     ?_isr:	; 0 bytes @ 0x0
  3749                           	global	?_litterlanguage_start
  3750  0072                     ?_litterlanguage_start:	; 0 bytes @ 0x0
  3751                           	global	?_litterlanguage_pause
  3752  0072                     ?_litterlanguage_pause:	; 0 bytes @ 0x0
  3753                           	global	?_litterlanguage_stop
  3754  0072                     ?_litterlanguage_stop:	; 0 bytes @ 0x0
  3755                           	global	?_watersensor_event
  3756  0072                     ?_watersensor_event:	; 0 bytes @ 0x0
  3757                           	global	?_catsensor_event
  3758  0072                     ?_catsensor_event:	; 0 bytes @ 0x0
  3759                           	global	?_catgenie_init
  3760  0072                     ?_catgenie_init:	; 1 bytes @ 0x0
  3761                           	global	?_eeprom_read
  3762  0072                     ?_eeprom_read:	; 1 bytes @ 0x0
  3763                           	global	?_water_detected
  3764  0072                     ?_water_detected:	; 1 bytes @ 0x0
  3765                           	global	?_water_filling
  3766  0072                     ?_water_filling:	; 1 bytes @ 0x0
  3767                           	global	?_get_Pump
  3768  0072                     ?_get_Pump:	; 1 bytes @ 0x0
  3769                           	global	?_get_instruction
  3770  0072                     ?_get_instruction:	; 1 bytes @ 0x0
  3771                           	global	?_get_Bowl
  3772  0072                     ?_get_Bowl:	; 1 bytes @ 0x0
  3773                           	global	?_get_Arm
  3774  0072                     ?_get_Arm:	; 1 bytes @ 0x0
  3775                           	global	?_get_Dosage
  3776  0072                     ?_get_Dosage:	; 1 bytes @ 0x0
  3777                           	global	?_get_Dryer
  3778  0072                     ?_get_Dryer:	; 1 bytes @ 0x0
  3779                           	global	?_romwashprogram_getins
  3780  0072                     ?_romwashprogram_getins:	; 1 bytes @ 0x0
  3781                           	global	?_readch
  3782  0072                     ?_readch:	; 1 bytes @ 0x0
  3783                           	global	?_litterlanguage_running
  3784  0072                     ?_litterlanguage_running:	; 1 bytes @ 0x0
  3785                           	global	?_litterlanguage_paused
  3786  0072                     ?_litterlanguage_paused:	; 1 bytes @ 0x0
  3787  0072                     	ds	7
  3788                           	global	_serial_rx_isr$22342
  3789  0079                     _serial_rx_isr$22342:	; 2 bytes @ 0x7
  3790  0079                     	ds	2
  3791                           	global	??_isr
  3792  007B                     ??_isr:	; 0 bytes @ 0x9
  3793  007B                     	ds	2
  3794                           	global	isr@temp
  3795  007D                     isr@temp:	; 1 bytes @ 0xB
  3796  007D                     	ds	1
  3797                           psect	cstackBANK0,class=BANK0,space=1
  3798                           global __pcstackBANK0
  3799  0021                     __pcstackBANK0:
  3800                           	global	??_timer_init
  3801  0021                     ??_timer_init:	; 0 bytes @ 0x0
  3802                           	global	??_catsensor_init
  3803  0021                     ??_catsensor_init:	; 0 bytes @ 0x0
  3804                           	global	??_water_init
  3805  0021                     ??_water_init:	; 0 bytes @ 0x0
  3806                           	global	??_interrupt_init
  3807  0021                     ??_interrupt_init:	; 0 bytes @ 0x0
  3808                           	global	??_eeprom_read
  3809  0021                     ??_eeprom_read:	; 0 bytes @ 0x0
  3810                           	global	??_water_detected
  3811  0021                     ??_water_detected:	; 0 bytes @ 0x0
  3812                           	global	??_water_filling
  3813  0021                     ??_water_filling:	; 0 bytes @ 0x0
  3814                           	global	?_litterlanguage_event
  3815  0021                     ?_litterlanguage_event:	; 0 bytes @ 0x0
  3816                           	global	??_get_Pump
  3817  0021                     ??_get_Pump:	; 0 bytes @ 0x0
  3818                           	global	??_set_Dosage
  3819  0021                     ??_set_Dosage:	; 0 bytes @ 0x0
  3820                           	global	??_get_Bowl
  3821  0021                     ??_get_Bowl:	; 0 bytes @ 0x0
  3822                           	global	??_set_Bowl
  3823  0021                     ??_set_Bowl:	; 0 bytes @ 0x0
  3824                           	global	??_get_Arm
  3825  0021                     ??_get_Arm:	; 0 bytes @ 0x0
  3826                           	global	??_set_Arm
  3827  0021                     ??_set_Arm:	; 0 bytes @ 0x0
  3828                           	global	??_water_fill
  3829  0021                     ??_water_fill:	; 0 bytes @ 0x0
  3830                           	global	??_get_Dosage
  3831  0021                     ??_get_Dosage:	; 0 bytes @ 0x0
  3832                           	global	??_set_Pump
  3833  0021                     ??_set_Pump:	; 0 bytes @ 0x0
  3834                           	global	??_get_Dryer
  3835  0021                     ??_get_Dryer:	; 0 bytes @ 0x0
  3836                           	global	??_set_Dryer
  3837  0021                     ??_set_Dryer:	; 0 bytes @ 0x0
  3838                           	global	?_gettimestamp
  3839  0021                     ?_gettimestamp:	; 0 bytes @ 0x0
  3840                           	global	?_romwashprogram_reqins
  3841  0021                     ?_romwashprogram_reqins:	; 0 bytes @ 0x0
  3842                           	global	??_romwashprogram_getins
  3843  0021                     ??_romwashprogram_getins:	; 0 bytes @ 0x0
  3844                           	global	??_setup_long
  3845  0021                     ??_setup_long:	; 0 bytes @ 0x0
  3846                           	global	?_set_LED
  3847  0021                     ?_set_LED:	; 0 bytes @ 0x0
  3848                           	global	?_postponetimeout
  3849  0021                     ?_postponetimeout:	; 0 bytes @ 0x0
  3850                           	global	??_putch
  3851  0021                     ??_putch:	; 0 bytes @ 0x0
  3852                           	global	??_readch
  3853  0021                     ??_readch:	; 0 bytes @ 0x0
  3854                           	global	??_isdigit
  3855  0021                     ??_isdigit:	; 0 bytes @ 0x0
  3856                           	global	??_litterlanguage_running
  3857  0021                     ??_litterlanguage_running:	; 0 bytes @ 0x0
  3858                           	global	??_litterlanguage_paused
  3859  0021                     ??_litterlanguage_paused:	; 0 bytes @ 0x0
  3860                           	global	?_eeprom_write
  3861  0021                     ?_eeprom_write:	; 1 bytes @ 0x0
  3862                           	global	?_memcpy
  3863  0021                     ?_memcpy:	; 1 bytes @ 0x0
  3864                           	global	?___bmul
  3865  0021                     ?___bmul:	; 1 bytes @ 0x0
  3866                           	global	?_strlen
  3867  0021                     ?_strlen:	; 2 bytes @ 0x0
  3868                           	global	?___wmul
  3869  0021                     ?___wmul:	; 2 bytes @ 0x0
  3870                           	global	?___lwdiv
  3871  0021                     ?___lwdiv:	; 2 bytes @ 0x0
  3872                           	global	?_timestampdiff
  3873  0021                     ?_timestampdiff:	; 4 bytes @ 0x0
  3874                           	global	?___lmul
  3875  0021                     ?___lmul:	; 4 bytes @ 0x0
  3876                           	global	?___lldiv
  3877  0021                     ?___lldiv:	; 4 bytes @ 0x0
  3878                           	global	litterlanguage_event@argument
  3879  0021                     litterlanguage_event@argument:	; 1 bytes @ 0x0
  3880                           	global	set_LED@on
  3881  0021                     set_LED@on:	; 1 bytes @ 0x0
  3882                           	global	eeprom_write@value
  3883  0021                     eeprom_write@value:	; 1 bytes @ 0x0
  3884                           	global	_isdigit$29792
  3885  0021                     _isdigit$29792:	; 1 bytes @ 0x0
  3886                           	global	memcpy@s1
  3887  0021                     memcpy@s1:	; 1 bytes @ 0x0
  3888                           	global	___bmul@multiplicand
  3889  0021                     ___bmul@multiplicand:	; 1 bytes @ 0x0
  3890                           	global	romwashprogram_reqins@address
  3891  0021                     romwashprogram_reqins@address:	; 2 bytes @ 0x0
  3892                           	global	postponetimeout@timer_p
  3893  0021                     postponetimeout@timer_p:	; 2 bytes @ 0x0
  3894                           	global	gettimestamp@ticks
  3895  0021                     gettimestamp@ticks:	; 2 bytes @ 0x0
  3896                           	global	timestampdiff@early_p
  3897  0021                     timestampdiff@early_p:	; 2 bytes @ 0x0
  3898                           	global	___wmul@multiplier
  3899  0021                     ___wmul@multiplier:	; 2 bytes @ 0x0
  3900                           	global	___lwdiv@divisor
  3901  0021                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  3902                           	global	___lmul@multiplier
  3903  0021                     ___lmul@multiplier:	; 4 bytes @ 0x0
  3904                           	global	___lldiv@divisor
  3905  0021                     ___lldiv@divisor:	; 4 bytes @ 0x0
  3906  0021                     	ds	1
  3907                           	global	??_eeprom_write
  3908  0022                     ??_eeprom_write:	; 0 bytes @ 0x1
  3909                           	global	??_litterlanguage_event
  3910  0022                     ??_litterlanguage_event:	; 0 bytes @ 0x1
  3911                           	global	??_set_LED
  3912  0022                     ??_set_LED:	; 0 bytes @ 0x1
  3913                           	global	??___bmul
  3914  0022                     ??___bmul:	; 0 bytes @ 0x1
  3915                           	global	litterlanguage_event@event
  3916  0022                     litterlanguage_event@event:	; 1 bytes @ 0x1
  3917                           	global	set_Bowl@mode
  3918  0022                     set_Bowl@mode:	; 1 bytes @ 0x1
  3919                           	global	set_Arm@mode
  3920  0022                     set_Arm@mode:	; 1 bytes @ 0x1
  3921                           	global	set_Dosage@on
  3922  0022                     set_Dosage@on:	; 1 bytes @ 0x1
  3923                           	global	set_Pump@on
  3924  0022                     set_Pump@on:	; 1 bytes @ 0x1
  3925                           	global	set_Dryer@on
  3926  0022                     set_Dryer@on:	; 1 bytes @ 0x1
  3927                           	global	putch@ch
  3928  0022                     putch@ch:	; 1 bytes @ 0x1
  3929                           	global	water_init@mask
  3930  0022                     water_init@mask:	; 1 bytes @ 0x1
  3931                           	global	water_fill@fill
  3932  0022                     water_fill@fill:	; 1 bytes @ 0x1
  3933                           	global	isdigit@c
  3934  0022                     isdigit@c:	; 1 bytes @ 0x1
  3935                           	global	memcpy@n
  3936  0022                     memcpy@n:	; 2 bytes @ 0x1
  3937  0022                     	ds	1
  3938                           	global	?_req_instruction
  3939  0023                     ?_req_instruction:	; 0 bytes @ 0x2
  3940                           	global	??_gettimestamp
  3941  0023                     ??_gettimestamp:	; 0 bytes @ 0x2
  3942                           	global	??_romwashprogram_reqins
  3943  0023                     ??_romwashprogram_reqins:	; 0 bytes @ 0x2
  3944                           	global	??_strlen
  3945  0023                     ??_strlen:	; 0 bytes @ 0x2
  3946                           	global	set_LED@led
  3947  0023                     set_LED@led:	; 1 bytes @ 0x2
  3948                           	global	putch@dummy
  3949  0023                     putch@dummy:	; 1 bytes @ 0x2
  3950                           	global	readch@ch
  3951  0023                     readch@ch:	; 1 bytes @ 0x2
  3952                           	global	timestampdiff@late_p
  3953  0023                     timestampdiff@late_p:	; 1 bytes @ 0x2
  3954                           	global	water_init@channel
  3955  0023                     water_init@channel:	; 1 bytes @ 0x2
  3956                           	global	___bmul@product
  3957  0023                     ___bmul@product:	; 1 bytes @ 0x2
  3958                           	global	req_instruction@instruction
  3959  0023                     req_instruction@instruction:	; 2 bytes @ 0x2
  3960                           	global	___wmul@multiplicand
  3961  0023                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  3962                           	global	___lwdiv@dividend
  3963  0023                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  3964                           	global	postponetimeout@postpone
  3965  0023                     postponetimeout@postpone:	; 4 bytes @ 0x2
  3966  0023                     	ds	1
  3967                           	global	??_memcpy
  3968  0024                     ??_memcpy:	; 0 bytes @ 0x3
  3969                           	global	romwashprogram_getins@instruction
  3970  0024                     romwashprogram_getins@instruction:	; 1 bytes @ 0x3
  3971                           	global	set_LED@latch
  3972  0024                     set_LED@latch:	; 1 bytes @ 0x3
  3973                           	global	readch@result
  3974  0024                     readch@result:	; 1 bytes @ 0x3
  3975                           	global	eeprom_read@addr
  3976  0024                     eeprom_read@addr:	; 1 bytes @ 0x3
  3977                           	global	eeprom_write@addr
  3978  0024                     eeprom_write@addr:	; 1 bytes @ 0x3
  3979                           	global	___bmul@multiplier
  3980  0024                     ___bmul@multiplier:	; 1 bytes @ 0x3
  3981  0024                     	ds	1
  3982                           	global	??_catgenie_init
  3983  0025                     ??_catgenie_init:	; 0 bytes @ 0x4
  3984                           	global	?_timeoutnever
  3985  0025                     ?_timeoutnever:	; 0 bytes @ 0x4
  3986                           	global	??_req_instruction
  3987  0025                     ??_req_instruction:	; 0 bytes @ 0x4
  3988                           	global	??_get_instruction
  3989  0025                     ??_get_instruction:	; 0 bytes @ 0x4
  3990                           	global	??_timestampdiff
  3991  0025                     ??_timestampdiff:	; 0 bytes @ 0x4
  3992                           	global	?_timeoutnow
  3993  0025                     ?_timeoutnow:	; 0 bytes @ 0x4
  3994                           	global	??_both_long
  3995  0025                     ??_both_long:	; 0 bytes @ 0x4
  3996                           	global	??___wmul
  3997  0025                     ??___wmul:	; 0 bytes @ 0x4
  3998                           	global	??___lwdiv
  3999  0025                     ??___lwdiv:	; 0 bytes @ 0x4
  4000                           	global	?_strncmp
  4001  0025                     ?_strncmp:	; 2 bytes @ 0x4
  4002                           	global	get_instruction@instruction
  4003  0025                     get_instruction@instruction:	; 1 bytes @ 0x4
  4004                           	global	set_LED@mask
  4005  0025                     set_LED@mask:	; 1 bytes @ 0x4
  4006                           	global	memcpy@d1
  4007  0025                     memcpy@d1:	; 1 bytes @ 0x4
  4008                           	global	timeoutnow@timer_p
  4009  0025                     timeoutnow@timer_p:	; 2 bytes @ 0x4
  4010                           	global	timeoutnever@timer_p
  4011  0025                     timeoutnever@timer_p:	; 2 bytes @ 0x4
  4012                           	global	strncmp@s2
  4013  0025                     strncmp@s2:	; 2 bytes @ 0x4
  4014                           	global	___wmul@product
  4015  0025                     ___wmul@product:	; 2 bytes @ 0x4
  4016                           	global	___lmul@multiplicand
  4017  0025                     ___lmul@multiplicand:	; 4 bytes @ 0x4
  4018                           	global	___lldiv@dividend
  4019  0025                     ___lldiv@dividend:	; 4 bytes @ 0x4
  4020  0025                     	ds	1
  4021                           	global	memcpy@d
  4022  0026                     memcpy@d:	; 1 bytes @ 0x5
  4023                           	global	___lwdiv@counter
  4024  0026                     ___lwdiv@counter:	; 1 bytes @ 0x5
  4025                           	global	gettimestamp@bytes
  4026  0026                     gettimestamp@bytes:	; 2 bytes @ 0x5
  4027  0026                     	ds	1
  4028                           	global	??_timeoutnever
  4029  0027                     ??_timeoutnever:	; 0 bytes @ 0x6
  4030                           	global	??_timeoutnow
  4031  0027                     ??_timeoutnow:	; 0 bytes @ 0x6
  4032                           	global	??_postponetimeout
  4033  0027                     ??_postponetimeout:	; 0 bytes @ 0x6
  4034                           	global	memcpy@s
  4035  0027                     memcpy@s:	; 1 bytes @ 0x6
  4036                           	global	strncmp@len
  4037  0027                     strncmp@len:	; 2 bytes @ 0x6
  4038                           	global	___lwdiv@quotient
  4039  0027                     ___lwdiv@quotient:	; 2 bytes @ 0x6
  4040  0027                     	ds	1
  4041                           	global	catgenie_init@tempmask
  4042  0028                     catgenie_init@tempmask:	; 1 bytes @ 0x7
  4043                           	global	gettimestamp@temp
  4044  0028                     gettimestamp@temp:	; 1 bytes @ 0x7
  4045  0028                     	ds	1
  4046                           	global	?_set_pacer
  4047  0029                     ?_set_pacer:	; 0 bytes @ 0x8
  4048                           	global	??_strncmp
  4049  0029                     ??_strncmp:	; 0 bytes @ 0x8
  4050                           	global	??___lmul
  4051  0029                     ??___lmul:	; 0 bytes @ 0x8
  4052                           	global	??___lldiv
  4053  0029                     ??___lldiv:	; 0 bytes @ 0x8
  4054                           	global	?_timeoutexpired
  4055  0029                     ?_timeoutexpired:	; 1 bytes @ 0x8
  4056                           	global	?___lwmod
  4057  0029                     ?___lwmod:	; 2 bytes @ 0x8
  4058                           	global	catgenie_init@temp
  4059  0029                     catgenie_init@temp:	; 1 bytes @ 0x8
  4060                           	global	set_pacer@pattern
  4061  0029                     set_pacer@pattern:	; 1 bytes @ 0x8
  4062                           	global	strlen@s
  4063  0029                     strlen@s:	; 1 bytes @ 0x8
  4064                           	global	timeoutexpired@timer_p
  4065  0029                     timeoutexpired@timer_p:	; 2 bytes @ 0x8
  4066                           	global	___lwmod@divisor
  4067  0029                     ___lwmod@divisor:	; 2 bytes @ 0x8
  4068                           	global	___lmul@product
  4069  0029                     ___lmul@product:	; 4 bytes @ 0x8
  4070  0029                     	ds	1
  4071                           	global	set_pacer@repeat
  4072  002A                     set_pacer@repeat:	; 1 bytes @ 0x9
  4073                           	global	strlen@cp
  4074  002A                     strlen@cp:	; 1 bytes @ 0x9
  4075                           	global	___lldiv@quotient
  4076  002A                     ___lldiv@quotient:	; 4 bytes @ 0x9
  4077  002A                     	ds	1
  4078                           	global	??_timeoutexpired
  4079  002B                     ??_timeoutexpired:	; 0 bytes @ 0xA
  4080                           	global	??_set_pacer
  4081  002B                     ??_set_pacer:	; 0 bytes @ 0xA
  4082                           	global	strncmp@s1
  4083  002B                     strncmp@s1:	; 1 bytes @ 0xA
  4084                           	global	___lwmod@dividend
  4085  002B                     ___lwmod@dividend:	; 2 bytes @ 0xA
  4086                           	global	postponetimeout@tempLongTicks
  4087  002B                     postponetimeout@tempLongTicks:	; 4 bytes @ 0xA
  4088  002B                     	ds	1
  4089                           	global	?_cmd2index
  4090  002C                     ?_cmd2index:	; 2 bytes @ 0xB
  4091  002C                     	ds	1
  4092                           	global	?_settimeout
  4093  002D                     ?_settimeout:	; 0 bytes @ 0xC
  4094                           	global	??___lwmod
  4095  002D                     ??___lwmod:	; 0 bytes @ 0xC
  4096                           	global	set_pacer@pacer
  4097  002D                     set_pacer@pacer:	; 1 bytes @ 0xC
  4098                           	global	settimeout@timer_p
  4099  002D                     settimeout@timer_p:	; 2 bytes @ 0xC
  4100                           	global	timestampdiff@diff
  4101  002D                     timestampdiff@diff:	; 4 bytes @ 0xC
  4102  002D                     	ds	1
  4103                           	global	?_set_Beeper
  4104  002E                     ?_set_Beeper:	; 0 bytes @ 0xD
  4105                           	global	?_set_LED_Error
  4106  002E                     ?_set_LED_Error:	; 0 bytes @ 0xD
  4107                           	global	?_set_LED_Cartridge
  4108  002E                     ?_set_LED_Cartridge:	; 0 bytes @ 0xD
  4109                           	global	?_set_LED_Cat
  4110  002E                     ?_set_LED_Cat:	; 0 bytes @ 0xD
  4111                           	global	?_set_LED_Locked
  4112  002E                     ?_set_LED_Locked:	; 0 bytes @ 0xD
  4113                           	global	??_cmd2index
  4114  002E                     ??_cmd2index:	; 0 bytes @ 0xD
  4115                           	global	set_LED_Error@repeat
  4116  002E                     set_LED_Error@repeat:	; 1 bytes @ 0xD
  4117                           	global	set_LED_Locked@repeat
  4118  002E                     set_LED_Locked@repeat:	; 1 bytes @ 0xD
  4119                           	global	set_LED_Cartridge@repeat
  4120  002E                     set_LED_Cartridge@repeat:	; 1 bytes @ 0xD
  4121                           	global	set_LED_Cat@repeat
  4122  002E                     set_LED_Cat@repeat:	; 1 bytes @ 0xD
  4123                           	global	set_Beeper@repeat
  4124  002E                     set_Beeper@repeat:	; 1 bytes @ 0xD
  4125                           	global	___lwmod@counter
  4126  002E                     ___lwmod@counter:	; 1 bytes @ 0xD
  4127                           	global	___lldiv@counter
  4128  002E                     ___lldiv@counter:	; 1 bytes @ 0xD
  4129  002E                     	ds	1
  4130                           	global	?_serial_init
  4131  002F                     ?_serial_init:	; 0 bytes @ 0xE
  4132                           	global	??_set_Beeper
  4133  002F                     ??_set_Beeper:	; 0 bytes @ 0xE
  4134                           	global	??_set_LED_Error
  4135  002F                     ??_set_LED_Error:	; 0 bytes @ 0xE
  4136                           	global	??_set_LED_Cartridge
  4137  002F                     ??_set_LED_Cartridge:	; 0 bytes @ 0xE
  4138                           	global	??_set_LED_Cat
  4139  002F                     ??_set_LED_Cat:	; 0 bytes @ 0xE
  4140                           	global	??_set_LED_Locked
  4141  002F                     ??_set_LED_Locked:	; 0 bytes @ 0xE
  4142                           	global	?_printf
  4143  002F                     ?_printf:	; 2 bytes @ 0xE
  4144                           	global	cmd2index@cmd
  4145  002F                     cmd2index@cmd:	; 1 bytes @ 0xE
  4146                           	global	postponetimeout@longshort
  4147  002F                     postponetimeout@longshort:	; 2 bytes @ 0xE
  4148                           	global	printf@f
  4149  002F                     printf@f:	; 2 bytes @ 0xE
  4150                           	global	serial_init@bitrate
  4151  002F                     serial_init@bitrate:	; 4 bytes @ 0xE
  4152                           	global	settimeout@timout
  4153  002F                     settimeout@timout:	; 4 bytes @ 0xE
  4154  002F                     	ds	1
  4155                           	global	cmd2index@index
  4156  0030                     cmd2index@index:	; 2 bytes @ 0xF
  4157  0030                     	ds	1
  4158                           	global	set_LED_Error@pattern
  4159  0031                     set_LED_Error@pattern:	; 1 bytes @ 0x10
  4160                           	global	set_LED_Locked@pattern
  4161  0031                     set_LED_Locked@pattern:	; 1 bytes @ 0x10
  4162                           	global	set_LED_Cartridge@pattern
  4163  0031                     set_LED_Cartridge@pattern:	; 1 bytes @ 0x10
  4164                           	global	set_LED_Cat@pattern
  4165  0031                     set_LED_Cat@pattern:	; 1 bytes @ 0x10
  4166                           	global	set_Beeper@pattern
  4167  0031                     set_Beeper@pattern:	; 1 bytes @ 0x10
  4168                           	global	timestampdiff@early_longshort
  4169  0031                     timestampdiff@early_longshort:	; 2 bytes @ 0x10
  4170                           	global	timeoutexpired@currentTime
  4171  0031                     timeoutexpired@currentTime:	; 6 bytes @ 0x10
  4172  0031                     	ds	1
  4173                           	global	??_update_display
  4174  0032                     ??_update_display:	; 0 bytes @ 0x11
  4175  0032                     	ds	1
  4176                           	global	??_serial_init
  4177  0033                     ??_serial_init:	; 0 bytes @ 0x12
  4178                           	global	??_settimeout
  4179  0033                     ??_settimeout:	; 0 bytes @ 0x12
  4180                           	global	timestampdiff@late_longshort
  4181  0033                     timestampdiff@late_longshort:	; 1 bytes @ 0x12
  4182  0033                     	ds	4
  4183                           	global	??_rtc_work
  4184  0037                     ??_rtc_work:	; 0 bytes @ 0x16
  4185                           	global	??_wait_instruction
  4186  0037                     ??_wait_instruction:	; 0 bytes @ 0x16
  4187                           	global	settimeout@tempLongTicks
  4188  0037                     settimeout@tempLongTicks:	; 4 bytes @ 0x16
  4189  0037                     	ds	2
  4190                           	global	??_printf
  4191  0039                     ??_printf:	; 0 bytes @ 0x18
  4192  0039                     	ds	2
  4193                           	global	settimeout@longshort
  4194  003B                     settimeout@longshort:	; 2 bytes @ 0x1A
  4195  003B                     	ds	2
  4196                           	global	??_rtc_init
  4197  003D                     ??_rtc_init:	; 0 bytes @ 0x1C
  4198                           	global	??_update_autotimer
  4199  003D                     ??_update_autotimer:	; 0 bytes @ 0x1C
  4200                           	global	??_both_short
  4201  003D                     ??_both_short:	; 0 bytes @ 0x1C
  4202                           	global	?_process_button
  4203  003D                     ?_process_button:	; 0 bytes @ 0x1C
  4204                           	global	process_button@down
  4205  003D                     process_button@down:	; 1 bytes @ 0x1C
  4206                           	global	update_autotimer@mode
  4207  003D                     update_autotimer@mode:	; 1 bytes @ 0x1C
  4208                           	global	rtc_init@flags
  4209  003D                     rtc_init@flags:	; 1 bytes @ 0x1C
  4210                           	global	printf@ap
  4211  003D                     printf@ap:	; 1 bytes @ 0x1C
  4212  003D                     	ds	1
  4213                           	global	??_process_button
  4214  003E                     ??_process_button:	; 0 bytes @ 0x1D
  4215                           	global	printf@flag
  4216  003E                     printf@flag:	; 1 bytes @ 0x1D
  4217  003E                     	ds	1
  4218                           	global	process_button@button_mask
  4219  003F                     process_button@button_mask:	; 1 bytes @ 0x1E
  4220                           	global	printf@width
  4221  003F                     printf@width:	; 2 bytes @ 0x1E
  4222                           	global	serial_init@divider
  4223  003F                     serial_init@divider:	; 4 bytes @ 0x1E
  4224  003F                     	ds	1
  4225                           	global	?_setupbutton_event
  4226  0040                     ?_setupbutton_event:	; 0 bytes @ 0x1F
  4227                           	global	heatsensor_event@detected
  4228  0040                     heatsensor_event@detected:	; 1 bytes @ 0x1F
  4229                           	global	startbutton_event@up
  4230  0040                     startbutton_event@up:	; 1 bytes @ 0x1F
  4231                           	global	setupbutton_event@up
  4232  0040                     setupbutton_event@up:	; 1 bytes @ 0x1F
  4233  0040                     	ds	1
  4234                           	global	??_heatsensor_event
  4235  0041                     ??_heatsensor_event:	; 0 bytes @ 0x20
  4236                           	global	??_startbutton_event
  4237  0041                     ??_startbutton_event:	; 0 bytes @ 0x20
  4238                           	global	??_setupbutton_event
  4239  0041                     ??_setupbutton_event:	; 0 bytes @ 0x20
  4240                           	global	printf@prec
  4241  0041                     printf@prec:	; 1 bytes @ 0x20
  4242  0041                     	ds	1
  4243                           	global	??_catgenie_work
  4244  0042                     ??_catgenie_work:	; 0 bytes @ 0x21
  4245                           	global	printf@c
  4246  0042                     printf@c:	; 1 bytes @ 0x21
  4247  0042                     	ds	1
  4248                           	global	printf@_val
  4249  0043                     printf@_val:	; 4 bytes @ 0x22
  4250  0043                     	ds	2
  4251                           	global	_catgenie_work$30512
  4252  0045                     _catgenie_work$30512:	; 1 bytes @ 0x24
  4253  0045                     	ds	1
  4254                           	global	catgenie_work@tempmask
  4255  0046                     catgenie_work@tempmask:	; 1 bytes @ 0x25
  4256  0046                     	ds	1
  4257                           	global	??_cmdline_init
  4258  0047                     ??_cmdline_init:	; 0 bytes @ 0x26
  4259                           	global	??_printtime
  4260  0047                     ??_printtime:	; 0 bytes @ 0x26
  4261                           	global	??_set_mode
  4262  0047                     ??_set_mode:	; 0 bytes @ 0x26
  4263                           	global	?_echo
  4264  0047                     ?_echo:	; 2 bytes @ 0x26
  4265                           	global	catgenie_work@status
  4266  0047                     catgenie_work@status:	; 1 bytes @ 0x26
  4267                           	global	echo@argc
  4268  0047                     echo@argc:	; 2 bytes @ 0x26
  4269                           	global	help@argc
  4270  0047                     help@argc:	; 2 bytes @ 0x26
  4271  0047                     	ds	1
  4272                           	global	catgenie_work@tempstate
  4273  0048                     catgenie_work@tempstate:	; 1 bytes @ 0x27
  4274  0048                     	ds	1
  4275                           	global	set_mode@mode
  4276  0049                     set_mode@mode:	; 1 bytes @ 0x28
  4277                           	global	catgenie_work@temp
  4278  0049                     catgenie_work@temp:	; 1 bytes @ 0x28
  4279                           	global	echo@argv
  4280  0049                     echo@argv:	; 1 bytes @ 0x28
  4281                           	global	help@argv
  4282  0049                     help@argv:	; 1 bytes @ 0x28
  4283  0049                     	ds	1
  4284                           	global	??_help
  4285  004A                     ??_help:	; 0 bytes @ 0x29
  4286                           	global	??_echo
  4287  004A                     ??_echo:	; 0 bytes @ 0x29
  4288                           	global	??_userinterface_init
  4289  004A                     ??_userinterface_init:	; 0 bytes @ 0x29
  4290                           	global	??_setup_short
  4291  004A                     ??_setup_short:	; 0 bytes @ 0x29
  4292                           	global	_echo$17754
  4293  004A                     _echo$17754:	; 2 bytes @ 0x29
  4294  004A                     	ds	1
  4295                           	global	userinterface_init@flags
  4296  004B                     userinterface_init@flags:	; 1 bytes @ 0x2A
  4297                           	global	_setup_short$10735
  4298  004B                     _setup_short$10735:	; 2 bytes @ 0x2A
  4299                           	global	_help$30523
  4300  004B                     _help$30523:	; 2 bytes @ 0x2A
  4301  004B                     	ds	2
  4302                           	global	help@index
  4303  004D                     help@index:	; 2 bytes @ 0x2C
  4304  004D                     	ds	2
  4305                           	global	??_litterlanguage_cleanup
  4306  004F                     ??_litterlanguage_cleanup:	; 0 bytes @ 0x2E
  4307                           	global	??_proc_line
  4308  004F                     ??_proc_line:	; 0 bytes @ 0x2E
  4309                           	global	??_litterlanguage_start
  4310  004F                     ??_litterlanguage_start:	; 0 bytes @ 0x2E
  4311                           	global	??_litterlanguage_pause
  4312  004F                     ??_litterlanguage_pause:	; 0 bytes @ 0x2E
  4313                           	global	??_litterlanguage_stop
  4314  004F                     ??_litterlanguage_stop:	; 0 bytes @ 0x2E
  4315                           	global	??_watersensor_event
  4316  004F                     ??_watersensor_event:	; 0 bytes @ 0x2E
  4317                           	global	??_catsensor_event
  4318  004F                     ??_catsensor_event:	; 0 bytes @ 0x2E
  4319                           	global	_litterlanguage_start$5890
  4320  004F                     _litterlanguage_start$5890:	; 2 bytes @ 0x2E
  4321                           	global	_litterlanguage_cleanup$5941
  4322  004F                     _litterlanguage_cleanup$5941:	; 2 bytes @ 0x2E
  4323                           	global	_catsensor_event$10723
  4324  004F                     _catsensor_event$10723:	; 2 bytes @ 0x2E
  4325  004F                     	ds	1
  4326                           	global	??_exe_instruction
  4327  0050                     ??_exe_instruction:	; 0 bytes @ 0x2F
  4328                           	global	litterlanguage_pause@pause
  4329  0050                     litterlanguage_pause@pause:	; 1 bytes @ 0x2F
  4330                           	global	_watersensor_event$5929
  4331  0050                     _watersensor_event$5929:	; 2 bytes @ 0x2F
  4332  0050                     	ds	1
  4333                           	global	??_litterlanguage_work
  4334  0051                     ??_litterlanguage_work:	; 0 bytes @ 0x30
  4335                           	global	litterlanguage_start@wet
  4336  0051                     litterlanguage_start@wet:	; 1 bytes @ 0x30
  4337                           	global	litterlanguage_cleanup@wet
  4338  0051                     litterlanguage_cleanup@wet:	; 1 bytes @ 0x30
  4339                           	global	catsensor_event@detected
  4340  0051                     catsensor_event@detected:	; 1 bytes @ 0x30
  4341                           	global	proc_line@argv
  4342  0051                     proc_line@argv:	; 4 bytes @ 0x30
  4343                           	global	litterlanguage_pause@timer_now
  4344  0051                     litterlanguage_pause@timer_now:	; 6 bytes @ 0x30
  4345  0051                     	ds	1
  4346                           	global	??_litterlanguage_init
  4347  0052                     ??_litterlanguage_init:	; 0 bytes @ 0x31
  4348                           	global	??_catsensor_work
  4349  0052                     ??_catsensor_work:	; 0 bytes @ 0x31
  4350                           	global	??_start_long
  4351  0052                     ??_start_long:	; 0 bytes @ 0x31
  4352                           	global	watersensor_event@detected
  4353  0052                     watersensor_event@detected:	; 1 bytes @ 0x31
  4354  0052                     	ds	1
  4355                           	global	??_water_work
  4356  0053                     ??_water_work:	; 0 bytes @ 0x32
  4357                           	global	_litterlanguage_work$5880
  4358  0053                     _litterlanguage_work$5880:	; 2 bytes @ 0x32
  4359  0053                     	ds	1
  4360                           	global	litterlanguage_init@flags
  4361  0054                     litterlanguage_init@flags:	; 1 bytes @ 0x33
  4362  0054                     	ds	1
  4363                           	global	_proc_line$30517
  4364  0055                     _proc_line$30517:	; 1 bytes @ 0x34
  4365  0055                     	ds	1
  4366                           	global	proc_line@index
  4367  0056                     proc_line@index:	; 2 bytes @ 0x35
  4368  0056                     	ds	1
  4369                           	global	??_start_short
  4370  0057                     ??_start_short:	; 0 bytes @ 0x36
  4371  0057                     	ds	1
  4372                           	global	??_userinterface_work
  4373  0058                     ??_userinterface_work:	; 0 bytes @ 0x37
  4374                           	global	proc_line@argc
  4375  0058                     proc_line@argc:	; 2 bytes @ 0x37
  4376  0058                     	ds	2
  4377                           	global	userinterface_work@update
  4378  005A                     userinterface_work@update:	; 1 bytes @ 0x39
  4379                           	global	proc_line@len
  4380  005A                     proc_line@len:	; 2 bytes @ 0x39
  4381  005A                     	ds	2
  4382                           	global	proc_line@line
  4383  005C                     proc_line@line:	; 1 bytes @ 0x3B
  4384  005C                     	ds	1
  4385                           	global	??_proc_char
  4386  005D                     ??_proc_char:	; 0 bytes @ 0x3C
  4387  005D                     	ds	1
  4388                           	global	proc_char@rxd
  4389  005E                     proc_char@rxd:	; 1 bytes @ 0x3D
  4390  005E                     	ds	1
  4391                           	global	??_cmdline_work
  4392  005F                     ??_cmdline_work:	; 0 bytes @ 0x3E
  4393                           	global	cmdline_work@rxd
  4394  005F                     cmdline_work@rxd:	; 1 bytes @ 0x3E
  4395  005F                     	ds	1
  4396                           	global	??_main
  4397  0060                     ??_main:	; 0 bytes @ 0x3F
  4398  0060                     	ds	1
  4399                           	global	main@flags
  4400  0061                     main@flags:	; 1 bytes @ 0x40
  4401  0061                     	ds	1
  4402 ;;Data sizes: Strings 1041, constant 825, data 141, bss 114, persistent 0 stack 0
  4403 ;;Auto spaces:   Size  Autos    Used
  4404 ;; COMMON          14     12      14
  4405 ;; BANK0           79     65      79
  4406 ;; BANK1           80     38      79
  4407 ;; BANK2           80      0      80
  4408 ;; BANK3           80      0      66
  4409 ;; BANK4           80      0      55
  4410 ;; BANK5           80      0       0
  4411 ;; BANK6           80      0       0
  4412 ;; BANK7           80      0       0
  4413 ;; BANK8           80      0       0
  4414 ;; BANK9           80      0       0
  4415 ;; BANK10          80      0       0
  4416 ;; BANK11          80      0       0
  4417 ;; BANK12          48      0       0
  4418                           
  4419 ;;
  4420 ;; Pointer list with targets:
  4421                           
  4422 ;; help$30523	PTR const unsigned char [8] size(2) Largest target is 36
  4423 ;;		 -> commands(CODE[36]), 
  4424 ;;
  4425 ;; proc_line$30517	const PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4426 ;;		 -> Absolute function(), echo(), help(), 
  4427 ;;
  4428 ;; catgenie_work$30512	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4429 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4430 ;;
  4431 ;; proc_line$30334	const PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4432 ;;		 -> Absolute function(), echo(), help(), 
  4433 ;;
  4434 ;; catgenie_work$30329	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4435 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4436 ;;
  4437 ;; help@argv	PTR PTR unsigned char  size(1) Largest target is 4
  4438 ;;		 -> proc_line@argv(BANK0[4]), 
  4439 ;;
  4440 ;; Absolute function$1	PTR PTR unsigned char  size(1) Largest target is 4
  4441 ;;		 -> proc_line@argv(BANK0[4]), 
  4442 ;;
  4443 ;; help$30236	PTR const unsigned char [8] size(2) Largest target is 36
  4444 ;;		 -> commands(CODE[36]), 
  4445 ;;
  4446 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  4447 ;;
  4448 ;; ?_strncmp	int  size(1) Largest target is 0
  4449 ;;
  4450 ;; S3275$1$1	PTR PTR unsigned char  size(1) Largest target is 4
  4451 ;;		 -> proc_line@argv(BANK0[4]), 
  4452 ;;
  4453 ;; ?_cmd2index	int  size(1) Largest target is 0
  4454 ;;
  4455 ;; ?_strlen	unsigned int  size(1) Largest target is 20
  4456 ;;		 -> linebuffer(BANK3[20]), 
  4457 ;;
  4458 ;; ?_memcpy	PTR void  size(1) Largest target is 2
  4459 ;;		 -> ins_pointer(BANK0[2]), 
  4460 ;;
  4461 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  4462 ;;
  4463 ;; ?___lwmod	unsigned int  size(2) Largest target is 16384
  4464 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), STR_97(CODE[4]), 
  4465 ;;		 -> STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), STR_81(CODE[7]), 
  4466 ;;		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), STR_75(CODE[7]), 
  4467 ;;		 -> STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), STR_70(CODE[4]), 
  4468 ;;		 -> STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), STR_64(CODE[4]), 
  4469 ;;		 -> STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), STR_57(CODE[4]), 
  4470 ;;		 -> STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), STR_50(CODE[4]), 
  4471 ;;		 -> STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4472 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), cleanupprogram(CODE[36]), 
  4473 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), STR_31(CODE[5]), 
  4474 ;;		 -> washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), STR_20(CODE[4]), 
  4475 ;;		 -> STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), commands(CODE[36]), 
  4476 ;;
  4477 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  4478 ;;
  4479 ;; ?___lmul	unsigned long  size(1) Largest target is 0
  4480 ;;
  4481 ;; ?_timestampdiff	unsigned long  size(1) Largest target is 0
  4482 ;;
  4483 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 36
  4484 ;;		 -> STR_107(CODE[4]), STR_106(CODE[3]), commands(CODE[36]), 
  4485 ;;
  4486 ;; strncmp@s1	PTR const unsigned char  size(1) Largest target is 20
  4487 ;;		 -> linebuffer(BANK3[20]), 
  4488 ;;
  4489 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 20
  4490 ;;		 -> linebuffer(BANK3[20]), 
  4491 ;;
  4492 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 20
  4493 ;;		 -> linebuffer(BANK3[20]), 
  4494 ;;
  4495 ;; memcpy@d1	PTR void  size(1) Largest target is 2
  4496 ;;		 -> ins_pointer(BANK0[2]), 
  4497 ;;
  4498 ;; memcpy@d	PTR unsigned char  size(1) Largest target is 2
  4499 ;;		 -> ins_pointer(BANK0[2]), 
  4500 ;;
  4501 ;; memcpy@s1	PTR const void  size(1) Largest target is 2
  4502 ;;		 -> exe_instruction@temp(BANK1[2]), 
  4503 ;;
  4504 ;; memcpy@s	PTR const unsigned char  size(1) Largest target is 2
  4505 ;;		 -> exe_instruction@temp(BANK1[2]), 
  4506 ;;
  4507 ;; printf@_val._cp	PTR const unsigned char  size(2) Largest target is 16384
  4508 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4509 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4510 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4511 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4512 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4513 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4514 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4515 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4516 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4517 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4518 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4519 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4520 ;;		 -> commands(CODE[36]), 
  4521 ;;
  4522 ;; printf@f	PTR const unsigned char  size(2) Largest target is 24
  4523 ;;		 -> STR_113(CODE[17]), STR_112(CODE[4]), STR_111(CODE[17]), STR_108(CODE[10]), 
  4524 ;;		 -> STR_105(CODE[22]), STR_104(CODE[15]), STR_103(CODE[17]), STR_102(CODE[11]), 
  4525 ;;		 -> STR_101(CODE[14]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[13]), 
  4526 ;;		 -> STR_95(CODE[8]), STR_94(CODE[18]), STR_93(CODE[10]), STR_92(CODE[12]), 
  4527 ;;		 -> STR_91(CODE[20]), STR_90(CODE[2]), STR_89(CODE[18]), STR_88(CODE[22]), 
  4528 ;;		 -> STR_87(CODE[8]), STR_86(CODE[19]), STR_85(CODE[17]), STR_82(CODE[24]), 
  4529 ;;		 -> STR_79(CODE[20]), STR_76(CODE[20]), STR_73(CODE[17]), STR_68(CODE[20]), 
  4530 ;;		 -> STR_67(CODE[19]), STR_62(CODE[16]), STR_61(CODE[11]), STR_60(CODE[10]), 
  4531 ;;		 -> STR_55(CODE[15]), STR_54(CODE[11]), STR_53(CODE[9]), STR_48(CODE[16]), 
  4532 ;;		 -> STR_44(CODE[12]), STR_40(CODE[13]), STR_39(CODE[12]), STR_36(CODE[21]), 
  4533 ;;		 -> STR_35(CODE[14]), STR_34(CODE[9]), STR_33(CODE[8]), STR_30(CODE[10]), 
  4534 ;;		 -> STR_29(CODE[18]), STR_28(CODE[18]), STR_27(CODE[16]), STR_24(CODE[21]), 
  4535 ;;		 -> STR_23(CODE[2]), STR_22(CODE[17]), STR_21(CODE[15]), STR_18(CODE[14]), 
  4536 ;;		 -> STR_17(CODE[12]), STR_16(CODE[15]), STR_15(CODE[14]), STR_14(CODE[20]), 
  4537 ;;		 -> STR_13(CODE[9]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
  4538 ;;		 -> STR_9(CODE[8]), STR_8(CODE[19]), STR_7(CODE[19]), STR_6(CODE[11]), 
  4539 ;;		 -> STR_5(CODE[19]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[16]), 
  4540 ;;		 -> STR_1(CODE[20]), 
  4541 ;;
  4542 ;; ?_printf	int  size(2) Largest target is 16384
  4543 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), STR_97(CODE[4]), 
  4544 ;;		 -> STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), STR_81(CODE[7]), 
  4545 ;;		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), STR_75(CODE[7]), 
  4546 ;;		 -> STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), STR_70(CODE[4]), 
  4547 ;;		 -> STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), STR_64(CODE[4]), 
  4548 ;;		 -> STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), STR_57(CODE[4]), 
  4549 ;;		 -> STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), STR_50(CODE[4]), 
  4550 ;;		 -> STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4551 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), cleanupprogram(CODE[36]), 
  4552 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), STR_31(CODE[5]), 
  4553 ;;		 -> washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), STR_20(CODE[4]), 
  4554 ;;		 -> STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), commands(CODE[36]), 
  4555 ;;
  4556 ;; printf@ap	PTR void [1] size(1) Largest target is 2
  4557 ;;		 -> ?_printf(BANK0[2]), 
  4558 ;;
  4559 ;; S27033$_cp	PTR const unsigned char  size(2) Largest target is 16384
  4560 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4561 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4562 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4563 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4564 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4565 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4566 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4567 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4568 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4569 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4570 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4571 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4572 ;;		 -> commands(CODE[36]), 
  4573 ;;
  4574 ;; _val._str._cp	PTR const unsigned char  size(2) Largest target is 16384
  4575 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4576 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4577 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4578 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4579 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4580 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4581 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4582 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4583 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4584 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4585 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4586 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4587 ;;		 -> commands(CODE[36]), 
  4588 ;;
  4589 ;; timestampdiff@late_p	const PTR const struct timer size(1) Largest target is 6
  4590 ;;		 -> litterlanguage_pause@timer_now(BANK0[6]), 
  4591 ;;
  4592 ;; timestampdiff@late_longshort	PTR struct longshort size(1) Largest target is 6
  4593 ;;		 -> litterlanguage_pause@timer_now(BANK0[6]), 
  4594 ;;
  4595 ;; timestampdiff@early_p	const PTR const struct timer size(2) Largest target is 6
  4596 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4597 ;;
  4598 ;; timestampdiff@early_longshort	PTR struct longshort size(2) Largest target is 6
  4599 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4600 ;;
  4601 ;; gettimestamp@ticks	const PTR struct timer size(2) Largest target is 60
  4602 ;;		 -> sensortimer(BANK2[6]), timeoutexpired@currentTime(BANK0[6]), second(BANK2[6]), pingtime(BANK2[6]), 
  4603 ;;		 -> debouncer(BANK2[6]), pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), 
  4604 ;;		 -> autotimer(BANK1[6]), holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), litterlanguage_pause@timer_now(BANK0[6])
       , 
  4605 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4606 ;;
  4607 ;; gettimestamp@bytes	PTR unsigned char  size(2) Largest target is 60
  4608 ;;		 -> sensortimer(BANK2[6]), timeoutexpired@currentTime(BANK0[6]), second(BANK2[6]), pingtime(BANK2[6]), 
  4609 ;;		 -> debouncer(BANK2[6]), pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), 
  4610 ;;		 -> autotimer(BANK1[6]), holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), litterlanguage_pause@timer_now(BANK0[6])
       , 
  4611 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4612 ;;
  4613 ;; timeoutexpired@timer_p	const PTR const struct timer size(2) Largest target is 60
  4614 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK2[6]), debouncer(BANK2[6]), 
  4615 ;;		 -> pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4616 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4617 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4618 ;;
  4619 ;; timeoutnever@timer_p	const PTR struct timer size(2) Largest target is 45
  4620 ;;		 -> debouncer(BANK2[6]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4621 ;;		 -> holdtimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), 
  4622 ;;		 -> timer_waitins(BANK2[6]), 
  4623 ;;
  4624 ;; timeoutnow@timer_p	const PTR struct timer size(2) Largest target is 60
  4625 ;;		 -> pacers(BANK4[55]), cattimer(BANK2[6]), 
  4626 ;;
  4627 ;; postponetimeout@timer_p	const PTR struct timer size(2) Largest target is 6
  4628 ;;		 -> second(BANK2[6]), autotimer(BANK1[6]), 
  4629 ;;
  4630 ;; postponetimeout@longshort	PTR struct longshort size(2) Largest target is 6
  4631 ;;		 -> second(BANK2[6]), autotimer(BANK1[6]), 
  4632 ;;
  4633 ;; settimeout@timer_p	const PTR struct timer size(2) Largest target is 60
  4634 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK2[6]), debouncer(BANK2[6]), 
  4635 ;;		 -> pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4636 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4637 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4638 ;;
  4639 ;; settimeout@longshort	PTR struct longshort size(2) Largest target is 60
  4640 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK2[6]), debouncer(BANK2[6]), 
  4641 ;;		 -> pacers(BANK4[55]), debouncers(BANK3[42]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4642 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4643 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4644 ;;
  4645 ;; readch@ch	PTR unsigned char  size(1) Largest target is 1
  4646 ;;		 -> cmdline_work@rxd(BANK0[1]), 
  4647 ;;
  4648 ;; echo$17754	PTR const unsigned char  size(2) Largest target is 4
  4649 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), 
  4650 ;;
  4651 ;; echo@argv	PTR PTR unsigned char  size(1) Largest target is 4
  4652 ;;		 -> proc_line@argv(BANK0[4]), 
  4653 ;;
  4654 ;; cmd2index@cmd	PTR unsigned char  size(1) Largest target is 20
  4655 ;;		 -> linebuffer(BANK3[20]), 
  4656 ;;
  4657 ;; proc_line@argv	PTR unsigned char [4] size(1) Largest target is 20
  4658 ;;		 -> linebuffer(BANK3[20]), 
  4659 ;;
  4660 ;; proc_line@line	PTR unsigned char  size(1) Largest target is 20
  4661 ;;		 -> linebuffer(BANK3[20]), 
  4662 ;;
  4663 ;; set_LED@latch	PTR volatile unsigned char  size(1) Largest target is 1
  4664 ;;		 -> LATA(BITSFR2[1]), LATC(BITSFR2[1]), 
  4665 ;;
  4666 ;; S13026pacer$port	PTR volatile unsigned char  size(1) Largest target is 1
  4667 ;;		 -> LATE(BITSFR2[1]), LATC(BITSFR2[1]), 
  4668 ;;
  4669 ;; pacers.port	PTR volatile unsigned char  size(1) Largest target is 1
  4670 ;;		 -> LATE(BITSFR2[1]), LATC(BITSFR2[1]), 
  4671 ;;
  4672 ;; S13011debouncer$handler	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4673 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4674 ;;
  4675 ;; debouncers.handler	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4676 ;;		 -> setupbutton_event(), startbutton_event(), heatsensor_event(), 
  4677 ;;
  4678 ;; S13011debouncer$port	PTR volatile unsigned char  size(1) Largest target is 1
  4679 ;;		 -> PORTB(BITSFR0[1]), 
  4680 ;;
  4681 ;; debouncers.port	PTR volatile unsigned char  size(1) Largest target is 1
  4682 ;;		 -> PORTB(BITSFR0[1]), 
  4683 ;;
  4684 ;; catsensor_event$10723	PTR const unsigned char  size(2) Largest target is 4
  4685 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), 
  4686 ;;
  4687 ;; romwashprogram_getins@instruction	const PTR struct instruction size(1) Largest target is 3
  4688 ;;		 -> cur_instruction(BANK0[3]), 
  4689 ;;
  4690 ;; romwashprogram_reqins@address	PTR const struct instruction size(2) Largest target is 16384
  4691 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4692 ;;
  4693 ;; ins_address	PTR const struct instruction size(2) Largest target is 16384
  4694 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4695 ;;
  4696 ;; sp__memcpy	PTR void  size(1) Largest target is 2
  4697 ;;		 -> ins_pointer(BANK0[2]), 
  4698 ;;
  4699 ;; exe_instruction@ret_address	PTR const struct instruction size(2) Largest target is 16384
  4700 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4701 ;;
  4702 ;; exe_instruction$6010	PTR const unsigned char  size(2) Largest target is 7
  4703 ;;		 -> STR_84(CODE[7]), STR_83(CODE[1]), 
  4704 ;;
  4705 ;; exe_instruction$6006	PTR const unsigned char  size(2) Largest target is 7
  4706 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), 
  4707 ;;
  4708 ;; exe_instruction$6002	PTR const unsigned char  size(2) Largest target is 7
  4709 ;;		 -> STR_78(CODE[1]), STR_77(CODE[7]), 
  4710 ;;
  4711 ;; exe_instruction$5998	PTR const unsigned char  size(2) Largest target is 7
  4712 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), 
  4713 ;;
  4714 ;; exe_instruction$5994	PTR const unsigned char  size(2) Largest target is 5
  4715 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), 
  4716 ;;
  4717 ;; exe_instruction$5993	PTR const unsigned char  size(2) Largest target is 7
  4718 ;;		 -> STR_72(CODE[7]), STR_71(CODE[1]), 
  4719 ;;
  4720 ;; exe_instruction$5986	PTR const unsigned char  size(2) Largest target is 4
  4721 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), 
  4722 ;;
  4723 ;; exe_instruction$5985	PTR const unsigned char  size(2) Largest target is 7
  4724 ;;		 -> STR_66(CODE[7]), STR_65(CODE[1]), 
  4725 ;;
  4726 ;; exe_instruction$5977	PTR const unsigned char  size(2) Largest target is 4
  4727 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), 
  4728 ;;
  4729 ;; exe_instruction$5976	PTR const unsigned char  size(2) Largest target is 7
  4730 ;;		 -> STR_59(CODE[7]), STR_58(CODE[1]), 
  4731 ;;
  4732 ;; exe_instruction$5968	PTR const unsigned char  size(2) Largest target is 4
  4733 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), 
  4734 ;;
  4735 ;; exe_instruction$5967	PTR const unsigned char  size(2) Largest target is 7
  4736 ;;		 -> STR_52(CODE[7]), STR_51(CODE[1]), 
  4737 ;;
  4738 ;; exe_instruction$5961	PTR const unsigned char  size(2) Largest target is 9
  4739 ;;		 -> STR_47(CODE[7]), STR_46(CODE[9]), 
  4740 ;;
  4741 ;; exe_instruction$5960	PTR const unsigned char  size(2) Largest target is 9
  4742 ;;		 -> STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4743 ;;
  4744 ;; exe_instruction$5955	PTR const unsigned char  size(2) Largest target is 9
  4745 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), 
  4746 ;;
  4747 ;; exe_instruction$5954	PTR const unsigned char  size(2) Largest target is 10
  4748 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4749 ;;
  4750 ;; get_instruction@instruction	PTR struct instruction size(1) Largest target is 3
  4751 ;;		 -> cur_instruction(BANK0[3]), 
  4752 ;;
  4753 ;; req_instruction@instruction	PTR const struct instruction size(2) Largest target is 16384
  4754 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4755 ;;
  4756 ;; litterlanguage_cleanup$5941	PTR const unsigned char  size(2) Largest target is 4
  4757 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), 
  4758 ;;
  4759 ;; watersensor_event$5929	PTR const unsigned char  size(2) Largest target is 5
  4760 ;;		 -> STR_32(CODE[4]), STR_31(CODE[5]), 
  4761 ;;
  4762 ;; litterlanguage_start$5890	PTR const unsigned char  size(2) Largest target is 4
  4763 ;;		 -> STR_26(CODE[4]), STR_25(CODE[4]), 
  4764 ;;
  4765 ;; litterlanguage_work$5880	PTR const unsigned char  size(2) Largest target is 4
  4766 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), 
  4767 ;;
  4768 ;; ins_pointer	PTR const struct instruction size(2) Largest target is 16384
  4769 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4770 ;;
  4771 ;; S3275command$function	PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4772 ;;		 -> Absolute function(), echo(), help(), 
  4773 ;;
  4774 ;; commands.function	PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4775 ;;		 -> Absolute function(), echo(), help(), 
  4776 ;;
  4777                           
  4778                           
  4779 ;;
  4780 ;; Critical Paths under _main in COMMON
  4781 ;;
  4782 ;;   None.
  4783 ;;
  4784 ;; Critical Paths under _isr in COMMON
  4785 ;;
  4786 ;;   _isr->_serial_rx_isr
  4787 ;;
  4788 ;; Critical Paths under _main in BANK0
  4789 ;;
  4790 ;;   _main->_cmdline_work
  4791 ;;   _catgenie_work->_setupbutton_event
  4792 ;;   _catgenie_work->_startbutton_event
  4793 ;;   _catgenie_work->_heatsensor_event
  4794 ;;   _setupbutton_event->_process_button
  4795 ;;   _startbutton_event->_process_button
  4796 ;;   _litterlanguage_work->_exe_instruction
  4797 ;;   _cmdline_work->_proc_char
  4798 ;;   _userinterface_work->_start_short
  4799 ;;   _catsensor_work->_catsensor_event
  4800 ;;   _proc_char->_proc_line
  4801 ;;   _catsensor_event->_printtime
  4802 ;;   _process_button->_settimeout
  4803 ;;   _start_long->_litterlanguage_start
  4804 ;;   _setup_short->_set_mode
  4805 ;;   _start_short->_litterlanguage_pause
  4806 ;;   _exe_instruction->_litterlanguage_stop
  4807 ;;   _water_work->_watersensor_event
  4808 ;;   _litterlanguage_init->_litterlanguage_cleanup
  4809 ;;   _userinterface_init->_set_mode
  4810 ;;   _proc_line->_help
  4811 ;;   _update_display->_set_LED_Error
  4812 ;;   _update_display->_set_LED_Cartridge
  4813 ;;   _update_display->_set_LED_Cat
  4814 ;;   _update_display->_set_LED_Locked
  4815 ;;   _set_mode->_printf
  4816 ;;   _watersensor_event->_printtime
  4817 ;;   _litterlanguage_stop->_printtime
  4818 ;;   _litterlanguage_pause->_printtime
  4819 ;;   _litterlanguage_start->_printtime
  4820 ;;   _litterlanguage_cleanup->_printtime
  4821 ;;   _help->_printf
  4822 ;;   _echo->_printf
  4823 ;;   _set_LED_Locked->_set_pacer
  4824 ;;   _set_LED_Cat->_set_pacer
  4825 ;;   _set_LED_Cartridge->_set_pacer
  4826 ;;   _set_LED_Error->_set_pacer
  4827 ;;   _set_Beeper->_set_pacer
  4828 ;;   _both_short->_settimeout
  4829 ;;   _update_autotimer->_settimeout
  4830 ;;   _wait_instruction->_timeoutexpired
  4831 ;;   _printtime->_printf
  4832 ;;   _rtc_work->_timeoutexpired
  4833 ;;   _cmdline_init->_printf
  4834 ;;   _rtc_init->_settimeout
  4835 ;;   _cmd2index->_strncmp
  4836 ;;   _set_pacer->_timeoutnow
  4837 ;;   _both_long->_eeprom_write
  4838 ;;   _settimeout->___lmul
  4839 ;;   _get_instruction->_romwashprogram_getins
  4840 ;;   _req_instruction->_romwashprogram_reqins
  4841 ;;   _timeoutexpired->_gettimestamp
  4842 ;;   _printf->___lwmod
  4843 ;;   _serial_init->___lldiv
  4844 ;;   _catgenie_init->___bmul
  4845 ;;   ___lwmod->___lwdiv
  4846 ;;   _strncmp->___bmul
  4847 ;;   _timeoutnow->___bmul
  4848 ;;   _timeoutnever->___bmul
  4849 ;;
  4850 ;; Critical Paths under _isr in BANK0
  4851 ;;
  4852 ;;   None.
  4853 ;;
  4854 ;; Critical Paths under _main in BANK1
  4855 ;;
  4856 ;;   _litterlanguage_work->_exe_instruction
  4857 ;;
  4858 ;; Critical Paths under _isr in BANK1
  4859 ;;
  4860 ;;   None.
  4861 ;;
  4862 ;; Critical Paths under _main in BANK2
  4863 ;;
  4864 ;;   None.
  4865 ;;
  4866 ;; Critical Paths under _isr in BANK2
  4867 ;;
  4868 ;;   None.
  4869 ;;
  4870 ;; Critical Paths under _main in BANK3
  4871 ;;
  4872 ;;   None.
  4873 ;;
  4874 ;; Critical Paths under _isr in BANK3
  4875 ;;
  4876 ;;   None.
  4877 ;;
  4878 ;; Critical Paths under _main in BANK4
  4879 ;;
  4880 ;;   None.
  4881 ;;
  4882 ;; Critical Paths under _isr in BANK4
  4883 ;;
  4884 ;;   None.
  4885 ;;
  4886 ;; Critical Paths under _main in BANK5
  4887 ;;
  4888 ;;   None.
  4889 ;;
  4890 ;; Critical Paths under _isr in BANK5
  4891 ;;
  4892 ;;   None.
  4893 ;;
  4894 ;; Critical Paths under _main in BANK6
  4895 ;;
  4896 ;;   None.
  4897 ;;
  4898 ;; Critical Paths under _isr in BANK6
  4899 ;;
  4900 ;;   None.
  4901 ;;
  4902 ;; Critical Paths under _main in BANK7
  4903 ;;
  4904 ;;   None.
  4905 ;;
  4906 ;; Critical Paths under _isr in BANK7
  4907 ;;
  4908 ;;   None.
  4909 ;;
  4910 ;; Critical Paths under _main in BANK8
  4911 ;;
  4912 ;;   None.
  4913 ;;
  4914 ;; Critical Paths under _isr in BANK8
  4915 ;;
  4916 ;;   None.
  4917 ;;
  4918 ;; Critical Paths under _main in BANK9
  4919 ;;
  4920 ;;   None.
  4921 ;;
  4922 ;; Critical Paths under _isr in BANK9
  4923 ;;
  4924 ;;   None.
  4925 ;;
  4926 ;; Critical Paths under _main in BANK10
  4927 ;;
  4928 ;;   None.
  4929 ;;
  4930 ;; Critical Paths under _isr in BANK10
  4931 ;;
  4932 ;;   None.
  4933 ;;
  4934 ;; Critical Paths under _main in BANK11
  4935 ;;
  4936 ;;   None.
  4937 ;;
  4938 ;; Critical Paths under _isr in BANK11
  4939 ;;
  4940 ;;   None.
  4941 ;;
  4942 ;; Critical Paths under _main in BANK12
  4943 ;;
  4944 ;;   None.
  4945 ;;
  4946 ;; Critical Paths under _isr in BANK12
  4947 ;;
  4948 ;;   None.
  4949                           
  4950 ;;
  4951 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4952 ;;
  4953                           
  4954 ;;
  4955 ;;Call Graph Tables:
  4956 ;;
  4957 ;; ---------------------------------------------------------------------------------
  4958 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  4959 ;; ---------------------------------------------------------------------------------
  4960 ;; (0) _main                                                 2     2      0  146591
  4961 ;;                                             63 BANK0      2     2      0
  4962 ;;                      _catgenie_init
  4963 ;;                        _serial_init
  4964 ;;                             _printf
  4965 ;;                         _timer_init
  4966 ;;                           _rtc_init
  4967 ;;                     _catsensor_init
  4968 ;;                         _water_init
  4969 ;;                 _userinterface_init
  4970 ;;                       _cmdline_init
  4971 ;;                _litterlanguage_init
  4972 ;;                     _interrupt_init
  4973 ;;                           _rtc_work
  4974 ;;                     _catsensor_work
  4975 ;;                         _water_work
  4976 ;;                      _catgenie_work
  4977 ;;                 _userinterface_work
  4978 ;;                       _cmdline_work
  4979 ;;                _litterlanguage_work
  4980 ;; ---------------------------------------------------------------------------------
  4981 ;; (1) _catgenie_work                                        8     8      0   10024
  4982 ;;                                             33 BANK0      8     8      0
  4983 ;;                         _settimeout
  4984 ;;                             ___bmul
  4985 ;;                     _timeoutexpired
  4986 ;;                  _setupbutton_event
  4987 ;;                  _startbutton_event
  4988 ;;                   _heatsensor_event
  4989 ;;                       _timeoutnever
  4990 ;; ---------------------------------------------------------------------------------
  4991 ;; (2) _setupbutton_event                                    2     1      1    3901
  4992 ;;                                             31 BANK0      2     1      1
  4993 ;;                     _process_button
  4994 ;; ---------------------------------------------------------------------------------
  4995 ;; (2) _startbutton_event                                    2     1      1    3901
  4996 ;;                                             31 BANK0      2     1      1
  4997 ;;                     _process_button
  4998 ;; ---------------------------------------------------------------------------------
  4999 ;; (1) _litterlanguage_work                                  4     4      0   24092
  5000 ;;                                             48 BANK0      4     4      0
  5001 ;;                     _water_detected
  5002 ;;                      _water_filling
  5003 ;;                     _timeoutexpired
  5004 ;;                          _printtime
  5005 ;;                             _printf
  5006 ;;               _litterlanguage_event
  5007 ;;                           _get_Pump
  5008 ;;                       _timeoutnever
  5009 ;;                         _set_Dosage
  5010 ;;                    _req_instruction
  5011 ;;                    _get_instruction
  5012 ;;                        _eeprom_read
  5013 ;;                       _eeprom_write
  5014 ;;                    _exe_instruction
  5015 ;;                   _wait_instruction
  5016 ;; ---------------------------------------------------------------------------------
  5017 ;; (1) _cmdline_work                                         1     1      0   15795
  5018 ;;                                             62 BANK0      1     1      0
  5019 ;;                              _putch
  5020 ;;                          _proc_char
  5021 ;;                             _readch
  5022 ;; ---------------------------------------------------------------------------------
  5023 ;; (1) _userinterface_work                                   3     3      0   52047
  5024 ;;                                             55 BANK0      3     3      0
  5025 ;;                     _timeoutexpired
  5026 ;;                   _update_autotimer
  5027 ;;                          _printtime
  5028 ;;                             _printf
  5029 ;;               _litterlanguage_start
  5030 ;;             _litterlanguage_running
  5031 ;;                         _timeoutnow
  5032 ;;                        _start_short
  5033 ;;                        _setup_short
  5034 ;;                         _both_short
  5035 ;;                         _set_Beeper
  5036 ;;                         _start_long
  5037 ;;                         _setup_long
  5038 ;;                          _both_long
  5039 ;;                       _timeoutnever
  5040 ;;                     _update_display
  5041 ;; ---------------------------------------------------------------------------------
  5042 ;; (1) _catsensor_work                                       1     1      0   10893
  5043 ;;                                             49 BANK0      1     1      0
  5044 ;;                     _timeoutexpired
  5045 ;;                         _settimeout
  5046 ;;                       _timeoutnever
  5047 ;;                    _catsensor_event
  5048 ;; ---------------------------------------------------------------------------------
  5049 ;; (2) _proc_char                                            2     2      0   15616
  5050 ;;                                             60 BANK0      2     2      0
  5051 ;;                              _putch
  5052 ;;                          _proc_line
  5053 ;;                             _printf
  5054 ;; ---------------------------------------------------------------------------------
  5055 ;; (2) _catsensor_event                                      3     3      0    9918
  5056 ;;                                             46 BANK0      3     3      0
  5057 ;;                          _printtime
  5058 ;;                             _printf
  5059 ;;                       _timeoutnever
  5060 ;;                         _settimeout
  5061 ;;                     _update_display
  5062 ;; ---------------------------------------------------------------------------------
  5063 ;; (3) _process_button                                       3     2      1    3870
  5064 ;;                                             28 BANK0      3     2      1
  5065 ;;                         _set_Beeper
  5066 ;;                         _settimeout
  5067 ;;                       _timeoutnever
  5068 ;;                     _update_display
  5069 ;; ---------------------------------------------------------------------------------
  5070 ;; (2) _start_long                                           1     1      0   13726
  5071 ;;                                             49 BANK0      1     1      0
  5072 ;;             _litterlanguage_running
  5073 ;;               _litterlanguage_start
  5074 ;;                _litterlanguage_stop
  5075 ;; ---------------------------------------------------------------------------------
  5076 ;; (2) _setup_short                                          3     3      0    4792
  5077 ;;                                             41 BANK0      3     3      0
  5078 ;;                           _set_mode
  5079 ;;                         _settimeout
  5080 ;; ---------------------------------------------------------------------------------
  5081 ;; (2) _start_short                                          1     1      0   15019
  5082 ;;                                             54 BANK0      1     1      0
  5083 ;;             _litterlanguage_running
  5084 ;;               _litterlanguage_start
  5085 ;;              _litterlanguage_paused
  5086 ;;               _litterlanguage_pause
  5087 ;; ---------------------------------------------------------------------------------
  5088 ;; (2) _exe_instruction                                     39    39      0   16099
  5089 ;;                                             47 BANK0      1     1      0
  5090 ;;                                              0 BANK1     38    38      0
  5091 ;;                          _printtime
  5092 ;;                             _printf
  5093 ;;                           _set_Bowl
  5094 ;;                            _set_Arm
  5095 ;;                        _eeprom_read
  5096 ;;                       _eeprom_write
  5097 ;;                     _water_detected
  5098 ;;                         _water_fill
  5099 ;;                         _settimeout
  5100 ;;                       _timeoutnever
  5101 ;;                           _set_Pump
  5102 ;;                          _set_Dryer
  5103 ;;                             ___lmul
  5104 ;;                             ___wmul
  5105 ;;                            ___lwdiv
  5106 ;;                            ___lwmod
  5107 ;;                         _set_Dosage
  5108 ;;                             _memcpy
  5109 ;;                _litterlanguage_stop
  5110 ;;               _litterlanguage_event
  5111 ;; ---------------------------------------------------------------------------------
  5112 ;; (1) _water_work                                           1     1      0    7841
  5113 ;;                                             50 BANK0      1     1      0
  5114 ;;                     _timeoutexpired
  5115 ;;                         _settimeout
  5116 ;;                  _watersensor_event
  5117 ;; ---------------------------------------------------------------------------------
  5118 ;; (1) _litterlanguage_init                                  3     3      0   10241
  5119 ;;                                             49 BANK0      3     3      0
  5120 ;;                             _printf
  5121 ;;             _litterlanguage_cleanup
  5122 ;;                       _eeprom_write
  5123 ;;                        _eeprom_read
  5124 ;; ---------------------------------------------------------------------------------
  5125 ;; (1) _userinterface_init                                   2     2      0    6984
  5126 ;;                                             41 BANK0      2     2      0
  5127 ;;                       _eeprom_write
  5128 ;;                        _eeprom_read
  5129 ;;                           _set_mode
  5130 ;;                     _update_display
  5131 ;; ---------------------------------------------------------------------------------
  5132 ;; (3) _proc_line                                           14    14      0   12028
  5133 ;;                                             46 BANK0     14    14      0
  5134 ;;                             _strlen
  5135 ;;                          _cmd2index
  5136 ;;                             _printf
  5137 ;;                             ___bmul
  5138 ;;                   Absolute function
  5139 ;;                               _echo
  5140 ;;                               _help
  5141 ;; ---------------------------------------------------------------------------------
  5142 ;; (2) _update_display                                       1     1      0    2544
  5143 ;;                                             17 BANK0      1     1      0
  5144 ;;                      _set_LED_Error
  5145 ;;                  _set_LED_Cartridge
  5146 ;;                            _set_LED
  5147 ;;                        _set_LED_Cat
  5148 ;;                     _set_LED_Locked
  5149 ;; ---------------------------------------------------------------------------------
  5150 ;; (3) _set_mode                                             3     3      0    4278
  5151 ;;                                             38 BANK0      3     3      0
  5152 ;;                             _printf
  5153 ;;                   _update_autotimer
  5154 ;;                         _timeoutnow
  5155 ;;                       _eeprom_write
  5156 ;; ---------------------------------------------------------------------------------
  5157 ;; (2) _watersensor_event                                    4     4      0    6928
  5158 ;;                                             46 BANK0      4     4      0
  5159 ;;                          _printtime
  5160 ;;                             _printf
  5161 ;;                         _water_fill
  5162 ;;                       _timeoutnever
  5163 ;;               _litterlanguage_event
  5164 ;; ---------------------------------------------------------------------------------
  5165 ;; (3) _litterlanguage_stop                                  1     1      0    6953
  5166 ;;                                             46 BANK0      1     1      0
  5167 ;;                          _printtime
  5168 ;;                             _printf
  5169 ;;                           _set_Bowl
  5170 ;;                            _set_Arm
  5171 ;;                         _water_fill
  5172 ;;                         _set_Dosage
  5173 ;;                           _set_Pump
  5174 ;;                          _set_Dryer
  5175 ;;                       _timeoutnever
  5176 ;;               _litterlanguage_event
  5177 ;; ---------------------------------------------------------------------------------
  5178 ;; (3) _litterlanguage_pause                                 8     8      0    8246
  5179 ;;                                             46 BANK0      8     8      0
  5180 ;;                          _printtime
  5181 ;;                           _get_Bowl
  5182 ;;                           _set_Bowl
  5183 ;;                            _get_Arm
  5184 ;;                            _set_Arm
  5185 ;;                      _water_filling
  5186 ;;                         _water_fill
  5187 ;;                         _get_Dosage
  5188 ;;                         _set_Dosage
  5189 ;;                           _get_Pump
  5190 ;;                           _set_Pump
  5191 ;;                          _get_Dryer
  5192 ;;                          _set_Dryer
  5193 ;;                       _gettimestamp
  5194 ;;                      _timestampdiff
  5195 ;;                       _timeoutnever
  5196 ;;                             _printf
  5197 ;;                         _settimeout
  5198 ;;               _litterlanguage_event
  5199 ;; ---------------------------------------------------------------------------------
  5200 ;; (3) _litterlanguage_start                                 3     3      0    6773
  5201 ;;                                             46 BANK0      3     3      0
  5202 ;;                          _printtime
  5203 ;;                             _printf
  5204 ;; ---------------------------------------------------------------------------------
  5205 ;; (2) _litterlanguage_cleanup                               3     3      0    6773
  5206 ;;                                             46 BANK0      3     3      0
  5207 ;;                          _printtime
  5208 ;;                             _printf
  5209 ;; ---------------------------------------------------------------------------------
  5210 ;; (4) _help                                                 8     5      3    3599
  5211 ;;                                             38 BANK0      8     5      3
  5212 ;;                             _printf
  5213 ;;                             ___bmul
  5214 ;; ---------------------------------------------------------------------------------
  5215 ;; (4) _echo                                                 5     2      3    3632
  5216 ;;                                             38 BANK0      5     2      3
  5217 ;;                            _strncmp
  5218 ;;                             _printf
  5219 ;; ---------------------------------------------------------------------------------
  5220 ;; (3) _set_LED_Locked                                       4     3      1     601
  5221 ;;                                             13 BANK0      4     3      1
  5222 ;;                          _set_pacer
  5223 ;; ---------------------------------------------------------------------------------
  5224 ;; (3) _set_LED_Cat                                          4     3      1     601
  5225 ;;                                             13 BANK0      4     3      1
  5226 ;;                          _set_pacer
  5227 ;; ---------------------------------------------------------------------------------
  5228 ;; (3) _set_LED_Cartridge                                    4     3      1     601
  5229 ;;                                             13 BANK0      4     3      1
  5230 ;;                          _set_pacer
  5231 ;; ---------------------------------------------------------------------------------
  5232 ;; (3) _set_LED_Error                                        4     3      1     601
  5233 ;;                                             13 BANK0      4     3      1
  5234 ;;                          _set_pacer
  5235 ;; ---------------------------------------------------------------------------------
  5236 ;; (2) _set_Beeper                                           4     3      1     601
  5237 ;;                                             13 BANK0      4     3      1
  5238 ;;                          _set_pacer
  5239 ;; ---------------------------------------------------------------------------------
  5240 ;; (2) _both_short                                           0     0      0     477
  5241 ;;                         _settimeout
  5242 ;; ---------------------------------------------------------------------------------
  5243 ;; (4) _update_autotimer                                     1     1      0     748
  5244 ;;                                             28 BANK0      1     1      0
  5245 ;;                         _settimeout
  5246 ;;                    _postponetimeout
  5247 ;;                       _timeoutnever
  5248 ;; ---------------------------------------------------------------------------------
  5249 ;; (2) _wait_instruction                                     1     1      0     498
  5250 ;;                                             22 BANK0      1     1      0
  5251 ;;                     _timeoutexpired
  5252 ;;                     _water_detected
  5253 ;;                       _timeoutnever
  5254 ;;                         _get_Dosage
  5255 ;; ---------------------------------------------------------------------------------
  5256 ;; (4) _printtime                                            8     8      0    3337
  5257 ;;                                             38 BANK0      8     8      0
  5258 ;;                             _printf
  5259 ;; ---------------------------------------------------------------------------------
  5260 ;; (1) _rtc_work                                             1     1      0     614
  5261 ;;                                             22 BANK0      1     1      0
  5262 ;;                     _timeoutexpired
  5263 ;;                    _postponetimeout
  5264 ;; ---------------------------------------------------------------------------------
  5265 ;; (1) _cmdline_init                                         0     0      0    3337
  5266 ;;                             _printf
  5267 ;; ---------------------------------------------------------------------------------
  5268 ;; (1) _rtc_init                                             1     1      0     508
  5269 ;;                                             28 BANK0      1     1      0
  5270 ;;                         _settimeout
  5271 ;; ---------------------------------------------------------------------------------
  5272 ;; (4) _cmd2index                                            6     4      2     400
  5273 ;;                                             11 BANK0      6     4      2
  5274 ;;                             ___bmul
  5275 ;;                            _strncmp
  5276 ;; ---------------------------------------------------------------------------------
  5277 ;; (4) _set_pacer                                            5     3      2     539
  5278 ;;                                              8 BANK0      5     3      2
  5279 ;;                             ___bmul
  5280 ;;                         _timeoutnow
  5281 ;; ---------------------------------------------------------------------------------
  5282 ;; (2) _both_long                                            1     1      0      69
  5283 ;;                                              4 BANK0      1     1      0
  5284 ;;                       _eeprom_write
  5285 ;; ---------------------------------------------------------------------------------
  5286 ;; (2) _heatsensor_event                                     2     1      1      62
  5287 ;;                                             31 BANK0      2     1      1
  5288 ;;               _litterlanguage_event
  5289 ;;                             ___bmul (ARG)
  5290 ;; ---------------------------------------------------------------------------------
  5291 ;; (3) _settimeout                                          16    10      6     477
  5292 ;;                                             12 BANK0     16    10      6
  5293 ;;                       _gettimestamp
  5294 ;;                             ___bmul (ARG)
  5295 ;;                             ___lmul (ARG)
  5296 ;; ---------------------------------------------------------------------------------
  5297 ;; (2) _get_instruction                                      1     1      0      62
  5298 ;;                                              4 BANK0      1     1      0
  5299 ;;              _romwashprogram_getins
  5300 ;; ---------------------------------------------------------------------------------
  5301 ;; (2) _req_instruction                                      2     0      2      62
  5302 ;;                                              2 BANK0      2     0      2
  5303 ;;              _romwashprogram_reqins
  5304 ;; ---------------------------------------------------------------------------------
  5305 ;; (3) _timeoutexpired                                      14    12      2     436
  5306 ;;                                              8 BANK0     14    12      2
  5307 ;;                       _gettimestamp
  5308 ;;                             ___bmul (ARG)
  5309 ;; ---------------------------------------------------------------------------------
  5310 ;; (4) _printf                                              24    14     10    3337
  5311 ;;                                             14 BANK0     24    14     10
  5312 ;;                              _putch
  5313 ;;                            _isdigit
  5314 ;;                             ___wmul
  5315 ;;                             ___bmul
  5316 ;;                            ___lwdiv
  5317 ;;                            ___lwmod
  5318 ;; ---------------------------------------------------------------------------------
  5319 ;; (1) _serial_init                                         20    16      4     295
  5320 ;;                                             14 BANK0     20    16      4
  5321 ;;                            ___lldiv
  5322 ;; ---------------------------------------------------------------------------------
  5323 ;; (1) _catgenie_init                                        5     5      0     371
  5324 ;;                                              4 BANK0      5     5      0
  5325 ;;                             ___bmul
  5326 ;; ---------------------------------------------------------------------------------
  5327 ;; (2) ___lldiv                                             14     6      8     162
  5328 ;;                                              0 BANK0     14     6      8
  5329 ;; ---------------------------------------------------------------------------------
  5330 ;; (3) ___lmul                                              12     4      8     136
  5331 ;;                                              0 BANK0     12     4      8
  5332 ;; ---------------------------------------------------------------------------------
  5333 ;; (5) ___lwmod                                              6     2      4     232
  5334 ;;                                              8 BANK0      6     2      4
  5335 ;;                            ___lwdiv (ARG)
  5336 ;; ---------------------------------------------------------------------------------
  5337 ;; (5) ___lwdiv                                              8     4      4     241
  5338 ;;                                              0 BANK0      8     4      4
  5339 ;; ---------------------------------------------------------------------------------
  5340 ;; (5) ___wmul                                               6     2      4     136
  5341 ;;                                              0 BANK0      6     2      4
  5342 ;; ---------------------------------------------------------------------------------
  5343 ;; (5) ___bmul                                               4     3      1     136
  5344 ;;                                              0 BANK0      4     3      1
  5345 ;; ---------------------------------------------------------------------------------
  5346 ;; (5) _isdigit                                              2     2      0      99
  5347 ;;                                              0 BANK0      2     2      0
  5348 ;; ---------------------------------------------------------------------------------
  5349 ;; (5) _strncmp                                              7     3      4     134
  5350 ;;                                              4 BANK0      7     3      4
  5351 ;;                             ___bmul (ARG)
  5352 ;; ---------------------------------------------------------------------------------
  5353 ;; (4) _strlen                                              10     8      2      89
  5354 ;;                                              0 BANK0     10     8      2
  5355 ;; ---------------------------------------------------------------------------------
  5356 ;; (2) _readch                                               4     4      0      46
  5357 ;;                                              0 BANK0      4     4      0
  5358 ;; ---------------------------------------------------------------------------------
  5359 ;; (5) _putch                                                3     3      0      34
  5360 ;;                                              0 BANK0      3     3      0
  5361 ;; ---------------------------------------------------------------------------------
  5362 ;; (5) _postponetimeout                                     16    10      6     178
  5363 ;;                                              0 BANK0     16    10      6
  5364 ;; ---------------------------------------------------------------------------------
  5365 ;; (3) _set_LED                                              5     4      1     140
  5366 ;;                                              0 BANK0      5     4      1
  5367 ;; ---------------------------------------------------------------------------------
  5368 ;; (2) _setup_long                                           0     0      0       0
  5369 ;; ---------------------------------------------------------------------------------
  5370 ;; (5) _timeoutnow                                           4     2      2      62
  5371 ;;                                              4 BANK0      4     2      2
  5372 ;;                             ___bmul (ARG)
  5373 ;; ---------------------------------------------------------------------------------
  5374 ;; (3) _memcpy                                               7     4      3     174
  5375 ;;                                              0 BANK0      7     4      3
  5376 ;; ---------------------------------------------------------------------------------
  5377 ;; (3) _romwashprogram_getins                                4     4      0      31
  5378 ;;                                              0 BANK0      4     4      0
  5379 ;; ---------------------------------------------------------------------------------
  5380 ;; (3) _romwashprogram_reqins                                2     0      2      31
  5381 ;;                                              0 BANK0      2     0      2
  5382 ;; ---------------------------------------------------------------------------------
  5383 ;; (3) _litterlanguage_paused                                0     0      0       0
  5384 ;; ---------------------------------------------------------------------------------
  5385 ;; (4) _timestampdiff                                       19    15      4     337
  5386 ;;                                              0 BANK0     19    15      4
  5387 ;; ---------------------------------------------------------------------------------
  5388 ;; (4) _gettimestamp                                         8     6      2     192
  5389 ;;                                              0 BANK0      8     6      2
  5390 ;; ---------------------------------------------------------------------------------
  5391 ;; (4) _set_Dryer                                            2     2      0      31
  5392 ;;                                              0 BANK0      2     2      0
  5393 ;; ---------------------------------------------------------------------------------
  5394 ;; (4) _get_Dryer                                            0     0      0       0
  5395 ;; ---------------------------------------------------------------------------------
  5396 ;; (4) _set_Pump                                             2     2      0      31
  5397 ;;                                              0 BANK0      2     2      0
  5398 ;; ---------------------------------------------------------------------------------
  5399 ;; (3) _get_Dosage                                           0     0      0       0
  5400 ;; ---------------------------------------------------------------------------------
  5401 ;; (4) _water_fill                                           2     2      0      31
  5402 ;;                                              0 BANK0      2     2      0
  5403 ;; ---------------------------------------------------------------------------------
  5404 ;; (4) _set_Arm                                              2     2      0      31
  5405 ;;                                              0 BANK0      2     2      0
  5406 ;; ---------------------------------------------------------------------------------
  5407 ;; (4) _get_Arm                                              2     2      0       0
  5408 ;;                                              0 BANK0      2     2      0
  5409 ;; ---------------------------------------------------------------------------------
  5410 ;; (4) _set_Bowl                                             2     2      0      31
  5411 ;;                                              0 BANK0      2     2      0
  5412 ;; ---------------------------------------------------------------------------------
  5413 ;; (4) _get_Bowl                                             2     2      0       0
  5414 ;;                                              0 BANK0      2     2      0
  5415 ;; ---------------------------------------------------------------------------------
  5416 ;; (3) _litterlanguage_running                               0     0      0       0
  5417 ;; ---------------------------------------------------------------------------------
  5418 ;; (4) _set_Dosage                                           2     2      0      31
  5419 ;;                                              0 BANK0      2     2      0
  5420 ;; ---------------------------------------------------------------------------------
  5421 ;; (3) _timeoutnever                                         4     2      2      62
  5422 ;;                                              4 BANK0      4     2      2
  5423 ;;                             ___bmul (ARG)
  5424 ;; ---------------------------------------------------------------------------------
  5425 ;; (2) _get_Pump                                             0     0      0       0
  5426 ;; ---------------------------------------------------------------------------------
  5427 ;; (3) _litterlanguage_event                                 2     1      1      31
  5428 ;;                                              0 BANK0      2     1      1
  5429 ;; ---------------------------------------------------------------------------------
  5430 ;; (2) _water_filling                                        0     0      0       0
  5431 ;; ---------------------------------------------------------------------------------
  5432 ;; (3) _water_detected                                       0     0      0       0
  5433 ;; ---------------------------------------------------------------------------------
  5434 ;; (3) _eeprom_read                                          4     4      0      31
  5435 ;;                                              0 BANK0      4     4      0
  5436 ;; ---------------------------------------------------------------------------------
  5437 ;; (3) _eeprom_write                                         4     3      1      69
  5438 ;;                                              0 BANK0      4     3      1
  5439 ;; ---------------------------------------------------------------------------------
  5440 ;; (1) _interrupt_init                                       1     1      0       0
  5441 ;;                                              0 BANK0      1     1      0
  5442 ;; ---------------------------------------------------------------------------------
  5443 ;; (1) _water_init                                           3     3      0      48
  5444 ;;                                              0 BANK0      3     3      0
  5445 ;; ---------------------------------------------------------------------------------
  5446 ;; (1) _catsensor_init                                       0     0      0       0
  5447 ;; ---------------------------------------------------------------------------------
  5448 ;; (1) _timer_init                                           0     0      0       0
  5449 ;; ---------------------------------------------------------------------------------
  5450 ;; (4) Absolute function(Fake)                               3     0      3       0
  5451 ;;                                              0 BANK0      3     0      3
  5452 ;; ---------------------------------------------------------------------------------
  5453 ;; Estimated maximum stack depth 5
  5454 ;; ---------------------------------------------------------------------------------
  5455 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5456 ;; ---------------------------------------------------------------------------------
  5457 ;; (8) _isr                                                  3     3      0      47
  5458 ;;                                              9 COMMON     3     3      0
  5459 ;;                          _timer_isr
  5460 ;;                _catsensor_isr_timer
  5461 ;;                _catsensor_isr_input
  5462 ;;                      _serial_rx_isr
  5463 ;;                      _serial_tx_isr
  5464 ;; ---------------------------------------------------------------------------------
  5465 ;; (9) _serial_tx_isr                                        0     0      0       0
  5466 ;; ---------------------------------------------------------------------------------
  5467 ;; (9) _serial_rx_isr                                        9     9      0      24
  5468 ;;                                              0 COMMON     9     9      0
  5469 ;; ---------------------------------------------------------------------------------
  5470 ;; (9) _catsensor_isr_input                                  0     0      0       0
  5471 ;; ---------------------------------------------------------------------------------
  5472 ;; (9) _catsensor_isr_timer                                  1     1      0       0
  5473 ;;                                              0 COMMON     1     1      0
  5474 ;; ---------------------------------------------------------------------------------
  5475 ;; (9) _timer_isr                                            0     0      0       0
  5476 ;; ---------------------------------------------------------------------------------
  5477 ;; Estimated maximum stack depth 9
  5478 ;; ---------------------------------------------------------------------------------
  5479                           
  5480 ;; Call Graph Graphs:
  5481                           
  5482 ;; _main (ROOT)
  5483 ;;   _catgenie_init
  5484 ;;     ___bmul
  5485 ;;   _serial_init
  5486 ;;     ___lldiv
  5487 ;;   _printf
  5488 ;;     _putch
  5489 ;;     _isdigit
  5490 ;;     ___wmul
  5491 ;;     ___bmul
  5492 ;;     ___lwdiv
  5493 ;;     ___lwmod
  5494 ;;       ___lwdiv (ARG)
  5495 ;;   _timer_init
  5496 ;;   _rtc_init
  5497 ;;     _settimeout
  5498 ;;       _gettimestamp
  5499 ;;       ___bmul (ARG)
  5500 ;;       ___lmul (ARG)
  5501 ;;   _catsensor_init
  5502 ;;   _water_init
  5503 ;;   _userinterface_init
  5504 ;;     _eeprom_write
  5505 ;;     _eeprom_read
  5506 ;;     _set_mode
  5507 ;;       _printf
  5508 ;;         _putch
  5509 ;;         _isdigit
  5510 ;;         ___wmul
  5511 ;;         ___bmul
  5512 ;;         ___lwdiv
  5513 ;;         ___lwmod
  5514 ;;           ___lwdiv (ARG)
  5515 ;;       _update_autotimer
  5516 ;;         _settimeout
  5517 ;;           _gettimestamp
  5518 ;;           ___bmul (ARG)
  5519 ;;           ___lmul (ARG)
  5520 ;;         _postponetimeout
  5521 ;;         _timeoutnever
  5522 ;;           ___bmul (ARG)
  5523 ;;       _timeoutnow
  5524 ;;         ___bmul (ARG)
  5525 ;;       _eeprom_write
  5526 ;;     _update_display
  5527 ;;       _set_LED_Error
  5528 ;;         _set_pacer
  5529 ;;           ___bmul
  5530 ;;           _timeoutnow
  5531 ;;             ___bmul (ARG)
  5532 ;;       _set_LED_Cartridge
  5533 ;;         _set_pacer
  5534 ;;           ___bmul
  5535 ;;           _timeoutnow
  5536 ;;             ___bmul (ARG)
  5537 ;;       _set_LED
  5538 ;;       _set_LED_Cat
  5539 ;;         _set_pacer
  5540 ;;           ___bmul
  5541 ;;           _timeoutnow
  5542 ;;             ___bmul (ARG)
  5543 ;;       _set_LED_Locked
  5544 ;;         _set_pacer
  5545 ;;           ___bmul
  5546 ;;           _timeoutnow
  5547 ;;             ___bmul (ARG)
  5548 ;;   _cmdline_init
  5549 ;;     _printf
  5550 ;;       _putch
  5551 ;;       _isdigit
  5552 ;;       ___wmul
  5553 ;;       ___bmul
  5554 ;;       ___lwdiv
  5555 ;;       ___lwmod
  5556 ;;         ___lwdiv (ARG)
  5557 ;;   _litterlanguage_init
  5558 ;;     _printf
  5559 ;;       _putch
  5560 ;;       _isdigit
  5561 ;;       ___wmul
  5562 ;;       ___bmul
  5563 ;;       ___lwdiv
  5564 ;;       ___lwmod
  5565 ;;         ___lwdiv (ARG)
  5566 ;;     _litterlanguage_cleanup
  5567 ;;       _printtime
  5568 ;;         _printf
  5569 ;;           _putch
  5570 ;;           _isdigit
  5571 ;;           ___wmul
  5572 ;;           ___bmul
  5573 ;;           ___lwdiv
  5574 ;;           ___lwmod
  5575 ;;             ___lwdiv (ARG)
  5576 ;;       _printf
  5577 ;;         _putch
  5578 ;;         _isdigit
  5579 ;;         ___wmul
  5580 ;;         ___bmul
  5581 ;;         ___lwdiv
  5582 ;;         ___lwmod
  5583 ;;           ___lwdiv (ARG)
  5584 ;;     _eeprom_write
  5585 ;;     _eeprom_read
  5586 ;;   _interrupt_init
  5587 ;;   _rtc_work
  5588 ;;     _timeoutexpired
  5589 ;;       _gettimestamp
  5590 ;;       ___bmul (ARG)
  5591 ;;     _postponetimeout
  5592 ;;   _catsensor_work
  5593 ;;     _timeoutexpired
  5594 ;;       _gettimestamp
  5595 ;;       ___bmul (ARG)
  5596 ;;     _settimeout
  5597 ;;       _gettimestamp
  5598 ;;       ___bmul (ARG)
  5599 ;;       ___lmul (ARG)
  5600 ;;     _timeoutnever
  5601 ;;       ___bmul (ARG)
  5602 ;;     _catsensor_event
  5603 ;;       _printtime
  5604 ;;         _printf
  5605 ;;           _putch
  5606 ;;           _isdigit
  5607 ;;           ___wmul
  5608 ;;           ___bmul
  5609 ;;           ___lwdiv
  5610 ;;           ___lwmod
  5611 ;;             ___lwdiv (ARG)
  5612 ;;       _printf
  5613 ;;         _putch
  5614 ;;         _isdigit
  5615 ;;         ___wmul
  5616 ;;         ___bmul
  5617 ;;         ___lwdiv
  5618 ;;         ___lwmod
  5619 ;;           ___lwdiv (ARG)
  5620 ;;       _timeoutnever
  5621 ;;         ___bmul (ARG)
  5622 ;;       _settimeout
  5623 ;;         _gettimestamp
  5624 ;;         ___bmul (ARG)
  5625 ;;         ___lmul (ARG)
  5626 ;;       _update_display
  5627 ;;         _set_LED_Error
  5628 ;;           _set_pacer
  5629 ;;             ___bmul
  5630 ;;             _timeoutnow
  5631 ;;               ___bmul (ARG)
  5632 ;;         _set_LED_Cartridge
  5633 ;;           _set_pacer
  5634 ;;             ___bmul
  5635 ;;             _timeoutnow
  5636 ;;               ___bmul (ARG)
  5637 ;;         _set_LED
  5638 ;;         _set_LED_Cat
  5639 ;;           _set_pacer
  5640 ;;             ___bmul
  5641 ;;             _timeoutnow
  5642 ;;               ___bmul (ARG)
  5643 ;;         _set_LED_Locked
  5644 ;;           _set_pacer
  5645 ;;             ___bmul
  5646 ;;             _timeoutnow
  5647 ;;               ___bmul (ARG)
  5648 ;;   _water_work
  5649 ;;     _timeoutexpired
  5650 ;;       _gettimestamp
  5651 ;;       ___bmul (ARG)
  5652 ;;     _settimeout
  5653 ;;       _gettimestamp
  5654 ;;       ___bmul (ARG)
  5655 ;;       ___lmul (ARG)
  5656 ;;     _watersensor_event
  5657 ;;       _printtime
  5658 ;;         _printf
  5659 ;;           _putch
  5660 ;;           _isdigit
  5661 ;;           ___wmul
  5662 ;;           ___bmul
  5663 ;;           ___lwdiv
  5664 ;;           ___lwmod
  5665 ;;             ___lwdiv (ARG)
  5666 ;;       _printf
  5667 ;;         _putch
  5668 ;;         _isdigit
  5669 ;;         ___wmul
  5670 ;;         ___bmul
  5671 ;;         ___lwdiv
  5672 ;;         ___lwmod
  5673 ;;           ___lwdiv (ARG)
  5674 ;;       _water_fill
  5675 ;;       _timeoutnever
  5676 ;;         ___bmul (ARG)
  5677 ;;       _litterlanguage_event
  5678 ;;   _catgenie_work
  5679 ;;     _settimeout
  5680 ;;       _gettimestamp
  5681 ;;       ___bmul (ARG)
  5682 ;;       ___lmul (ARG)
  5683 ;;     ___bmul
  5684 ;;     _timeoutexpired
  5685 ;;       _gettimestamp
  5686 ;;       ___bmul (ARG)
  5687 ;;     _setupbutton_event
  5688 ;;       _process_button
  5689 ;;         _set_Beeper
  5690 ;;           _set_pacer
  5691 ;;             ___bmul
  5692 ;;             _timeoutnow
  5693 ;;               ___bmul (ARG)
  5694 ;;         _settimeout
  5695 ;;           _gettimestamp
  5696 ;;           ___bmul (ARG)
  5697 ;;           ___lmul (ARG)
  5698 ;;         _timeoutnever
  5699 ;;           ___bmul (ARG)
  5700 ;;         _update_display
  5701 ;;           _set_LED_Error
  5702 ;;             _set_pacer
  5703 ;;               ___bmul
  5704 ;;               _timeoutnow
  5705 ;;                 ___bmul (ARG)
  5706 ;;           _set_LED_Cartridge
  5707 ;;             _set_pacer
  5708 ;;               ___bmul
  5709 ;;               _timeoutnow
  5710 ;;                 ___bmul (ARG)
  5711 ;;           _set_LED
  5712 ;;           _set_LED_Cat
  5713 ;;             _set_pacer
  5714 ;;               ___bmul
  5715 ;;               _timeoutnow
  5716 ;;                 ___bmul (ARG)
  5717 ;;           _set_LED_Locked
  5718 ;;             _set_pacer
  5719 ;;               ___bmul
  5720 ;;               _timeoutnow
  5721 ;;                 ___bmul (ARG)
  5722 ;;     _startbutton_event
  5723 ;;       _process_button
  5724 ;;         _set_Beeper
  5725 ;;           _set_pacer
  5726 ;;             ___bmul
  5727 ;;             _timeoutnow
  5728 ;;               ___bmul (ARG)
  5729 ;;         _settimeout
  5730 ;;           _gettimestamp
  5731 ;;           ___bmul (ARG)
  5732 ;;           ___lmul (ARG)
  5733 ;;         _timeoutnever
  5734 ;;           ___bmul (ARG)
  5735 ;;         _update_display
  5736 ;;           _set_LED_Error
  5737 ;;             _set_pacer
  5738 ;;               ___bmul
  5739 ;;               _timeoutnow
  5740 ;;                 ___bmul (ARG)
  5741 ;;           _set_LED_Cartridge
  5742 ;;             _set_pacer
  5743 ;;               ___bmul
  5744 ;;               _timeoutnow
  5745 ;;                 ___bmul (ARG)
  5746 ;;           _set_LED
  5747 ;;           _set_LED_Cat
  5748 ;;             _set_pacer
  5749 ;;               ___bmul
  5750 ;;               _timeoutnow
  5751 ;;                 ___bmul (ARG)
  5752 ;;           _set_LED_Locked
  5753 ;;             _set_pacer
  5754 ;;               ___bmul
  5755 ;;               _timeoutnow
  5756 ;;                 ___bmul (ARG)
  5757 ;;     _heatsensor_event
  5758 ;;       _litterlanguage_event
  5759 ;;       ___bmul (ARG)
  5760 ;;     _timeoutnever
  5761 ;;       ___bmul (ARG)
  5762 ;;   _userinterface_work
  5763 ;;     _timeoutexpired
  5764 ;;       _gettimestamp
  5765 ;;       ___bmul (ARG)
  5766 ;;     _update_autotimer
  5767 ;;       _settimeout
  5768 ;;         _gettimestamp
  5769 ;;         ___bmul (ARG)
  5770 ;;         ___lmul (ARG)
  5771 ;;       _postponetimeout
  5772 ;;       _timeoutnever
  5773 ;;         ___bmul (ARG)
  5774 ;;     _printtime
  5775 ;;       _printf
  5776 ;;         _putch
  5777 ;;         _isdigit
  5778 ;;         ___wmul
  5779 ;;         ___bmul
  5780 ;;         ___lwdiv
  5781 ;;         ___lwmod
  5782 ;;           ___lwdiv (ARG)
  5783 ;;     _printf
  5784 ;;       _putch
  5785 ;;       _isdigit
  5786 ;;       ___wmul
  5787 ;;       ___bmul
  5788 ;;       ___lwdiv
  5789 ;;       ___lwmod
  5790 ;;         ___lwdiv (ARG)
  5791 ;;     _litterlanguage_start
  5792 ;;       _printtime
  5793 ;;         _printf
  5794 ;;           _putch
  5795 ;;           _isdigit
  5796 ;;           ___wmul
  5797 ;;           ___bmul
  5798 ;;           ___lwdiv
  5799 ;;           ___lwmod
  5800 ;;             ___lwdiv (ARG)
  5801 ;;       _printf
  5802 ;;         _putch
  5803 ;;         _isdigit
  5804 ;;         ___wmul
  5805 ;;         ___bmul
  5806 ;;         ___lwdiv
  5807 ;;         ___lwmod
  5808 ;;           ___lwdiv (ARG)
  5809 ;;     _litterlanguage_running
  5810 ;;     _timeoutnow
  5811 ;;       ___bmul (ARG)
  5812 ;;     _start_short
  5813 ;;       _litterlanguage_running
  5814 ;;       _litterlanguage_start
  5815 ;;         _printtime
  5816 ;;           _printf
  5817 ;;             _putch
  5818 ;;             _isdigit
  5819 ;;             ___wmul
  5820 ;;             ___bmul
  5821 ;;             ___lwdiv
  5822 ;;             ___lwmod
  5823 ;;               ___lwdiv (ARG)
  5824 ;;         _printf
  5825 ;;           _putch
  5826 ;;           _isdigit
  5827 ;;           ___wmul
  5828 ;;           ___bmul
  5829 ;;           ___lwdiv
  5830 ;;           ___lwmod
  5831 ;;             ___lwdiv (ARG)
  5832 ;;       _litterlanguage_paused
  5833 ;;       _litterlanguage_pause
  5834 ;;         _printtime
  5835 ;;           _printf
  5836 ;;             _putch
  5837 ;;             _isdigit
  5838 ;;             ___wmul
  5839 ;;             ___bmul
  5840 ;;             ___lwdiv
  5841 ;;             ___lwmod
  5842 ;;               ___lwdiv (ARG)
  5843 ;;         _get_Bowl
  5844 ;;         _set_Bowl
  5845 ;;         _get_Arm
  5846 ;;         _set_Arm
  5847 ;;         _water_filling
  5848 ;;         _water_fill
  5849 ;;         _get_Dosage
  5850 ;;         _set_Dosage
  5851 ;;         _get_Pump
  5852 ;;         _set_Pump
  5853 ;;         _get_Dryer
  5854 ;;         _set_Dryer
  5855 ;;         _gettimestamp
  5856 ;;         _timestampdiff
  5857 ;;         _timeoutnever
  5858 ;;           ___bmul (ARG)
  5859 ;;         _printf
  5860 ;;           _putch
  5861 ;;           _isdigit
  5862 ;;           ___wmul
  5863 ;;           ___bmul
  5864 ;;           ___lwdiv
  5865 ;;           ___lwmod
  5866 ;;             ___lwdiv (ARG)
  5867 ;;         _settimeout
  5868 ;;           _gettimestamp
  5869 ;;           ___bmul (ARG)
  5870 ;;           ___lmul (ARG)
  5871 ;;         _litterlanguage_event
  5872 ;;     _setup_short
  5873 ;;       _set_mode
  5874 ;;         _printf
  5875 ;;           _putch
  5876 ;;           _isdigit
  5877 ;;           ___wmul
  5878 ;;           ___bmul
  5879 ;;           ___lwdiv
  5880 ;;           ___lwmod
  5881 ;;             ___lwdiv (ARG)
  5882 ;;         _update_autotimer
  5883 ;;           _settimeout
  5884 ;;             _gettimestamp
  5885 ;;             ___bmul (ARG)
  5886 ;;             ___lmul (ARG)
  5887 ;;           _postponetimeout
  5888 ;;           _timeoutnever
  5889 ;;             ___bmul (ARG)
  5890 ;;         _timeoutnow
  5891 ;;           ___bmul (ARG)
  5892 ;;         _eeprom_write
  5893 ;;       _settimeout
  5894 ;;         _gettimestamp
  5895 ;;         ___bmul (ARG)
  5896 ;;         ___lmul (ARG)
  5897 ;;     _both_short
  5898 ;;       _settimeout
  5899 ;;         _gettimestamp
  5900 ;;         ___bmul (ARG)
  5901 ;;         ___lmul (ARG)
  5902 ;;     _set_Beeper
  5903 ;;       _set_pacer
  5904 ;;         ___bmul
  5905 ;;         _timeoutnow
  5906 ;;           ___bmul (ARG)
  5907 ;;     _start_long
  5908 ;;       _litterlanguage_running
  5909 ;;       _litterlanguage_start
  5910 ;;         _printtime
  5911 ;;           _printf
  5912 ;;             _putch
  5913 ;;             _isdigit
  5914 ;;             ___wmul
  5915 ;;             ___bmul
  5916 ;;             ___lwdiv
  5917 ;;             ___lwmod
  5918 ;;               ___lwdiv (ARG)
  5919 ;;         _printf
  5920 ;;           _putch
  5921 ;;           _isdigit
  5922 ;;           ___wmul
  5923 ;;           ___bmul
  5924 ;;           ___lwdiv
  5925 ;;           ___lwmod
  5926 ;;             ___lwdiv (ARG)
  5927 ;;       _litterlanguage_stop
  5928 ;;         _printtime
  5929 ;;           _printf
  5930 ;;             _putch
  5931 ;;             _isdigit
  5932 ;;             ___wmul
  5933 ;;             ___bmul
  5934 ;;             ___lwdiv
  5935 ;;             ___lwmod
  5936 ;;               ___lwdiv (ARG)
  5937 ;;         _printf
  5938 ;;           _putch
  5939 ;;           _isdigit
  5940 ;;           ___wmul
  5941 ;;           ___bmul
  5942 ;;           ___lwdiv
  5943 ;;           ___lwmod
  5944 ;;             ___lwdiv (ARG)
  5945 ;;         _set_Bowl
  5946 ;;         _set_Arm
  5947 ;;         _water_fill
  5948 ;;         _set_Dosage
  5949 ;;         _set_Pump
  5950 ;;         _set_Dryer
  5951 ;;         _timeoutnever
  5952 ;;           ___bmul (ARG)
  5953 ;;         _litterlanguage_event
  5954 ;;     _setup_long
  5955 ;;     _both_long
  5956 ;;       _eeprom_write
  5957 ;;     _timeoutnever
  5958 ;;       ___bmul (ARG)
  5959 ;;     _update_display
  5960 ;;       _set_LED_Error
  5961 ;;         _set_pacer
  5962 ;;           ___bmul
  5963 ;;           _timeoutnow
  5964 ;;             ___bmul (ARG)
  5965 ;;       _set_LED_Cartridge
  5966 ;;         _set_pacer
  5967 ;;           ___bmul
  5968 ;;           _timeoutnow
  5969 ;;             ___bmul (ARG)
  5970 ;;       _set_LED
  5971 ;;       _set_LED_Cat
  5972 ;;         _set_pacer
  5973 ;;           ___bmul
  5974 ;;           _timeoutnow
  5975 ;;             ___bmul (ARG)
  5976 ;;       _set_LED_Locked
  5977 ;;         _set_pacer
  5978 ;;           ___bmul
  5979 ;;           _timeoutnow
  5980 ;;             ___bmul (ARG)
  5981 ;;   _cmdline_work
  5982 ;;     _putch
  5983 ;;     _proc_char
  5984 ;;       _putch
  5985 ;;       _proc_line
  5986 ;;         _strlen
  5987 ;;         _cmd2index
  5988 ;;           ___bmul
  5989 ;;           _strncmp
  5990 ;;             ___bmul (ARG)
  5991 ;;         _printf
  5992 ;;           _putch
  5993 ;;           _isdigit
  5994 ;;           ___wmul
  5995 ;;           ___bmul
  5996 ;;           ___lwdiv
  5997 ;;           ___lwmod
  5998 ;;             ___lwdiv (ARG)
  5999 ;;         ___bmul
  6000 ;;         Absolute function(Fake)
  6001 ;;         _echo
  6002 ;;           _strncmp
  6003 ;;             ___bmul (ARG)
  6004 ;;           _printf
  6005 ;;             _putch
  6006 ;;             _isdigit
  6007 ;;             ___wmul
  6008 ;;             ___bmul
  6009 ;;             ___lwdiv
  6010 ;;             ___lwmod
  6011 ;;               ___lwdiv (ARG)
  6012 ;;         _help
  6013 ;;           _printf
  6014 ;;             _putch
  6015 ;;             _isdigit
  6016 ;;             ___wmul
  6017 ;;             ___bmul
  6018 ;;             ___lwdiv
  6019 ;;             ___lwmod
  6020 ;;               ___lwdiv (ARG)
  6021 ;;           ___bmul
  6022 ;;       _printf
  6023 ;;         _putch
  6024 ;;         _isdigit
  6025 ;;         ___wmul
  6026 ;;         ___bmul
  6027 ;;         ___lwdiv
  6028 ;;         ___lwmod
  6029 ;;           ___lwdiv (ARG)
  6030 ;;     _readch
  6031 ;;   _litterlanguage_work
  6032 ;;     _water_detected
  6033 ;;     _water_filling
  6034 ;;     _timeoutexpired
  6035 ;;       _gettimestamp
  6036 ;;       ___bmul (ARG)
  6037 ;;     _printtime
  6038 ;;       _printf
  6039 ;;         _putch
  6040 ;;         _isdigit
  6041 ;;         ___wmul
  6042 ;;         ___bmul
  6043 ;;         ___lwdiv
  6044 ;;         ___lwmod
  6045 ;;           ___lwdiv (ARG)
  6046 ;;     _printf
  6047 ;;       _putch
  6048 ;;       _isdigit
  6049 ;;       ___wmul
  6050 ;;       ___bmul
  6051 ;;       ___lwdiv
  6052 ;;       ___lwmod
  6053 ;;         ___lwdiv (ARG)
  6054 ;;     _litterlanguage_event
  6055 ;;     _get_Pump
  6056 ;;     _timeoutnever
  6057 ;;       ___bmul (ARG)
  6058 ;;     _set_Dosage
  6059 ;;     _req_instruction
  6060 ;;       _romwashprogram_reqins
  6061 ;;     _get_instruction
  6062 ;;       _romwashprogram_getins
  6063 ;;     _eeprom_read
  6064 ;;     _eeprom_write
  6065 ;;     _exe_instruction
  6066 ;;       _printtime
  6067 ;;         _printf
  6068 ;;           _putch
  6069 ;;           _isdigit
  6070 ;;           ___wmul
  6071 ;;           ___bmul
  6072 ;;           ___lwdiv
  6073 ;;           ___lwmod
  6074 ;;             ___lwdiv (ARG)
  6075 ;;       _printf
  6076 ;;         _putch
  6077 ;;         _isdigit
  6078 ;;         ___wmul
  6079 ;;         ___bmul
  6080 ;;         ___lwdiv
  6081 ;;         ___lwmod
  6082 ;;           ___lwdiv (ARG)
  6083 ;;       _set_Bowl
  6084 ;;       _set_Arm
  6085 ;;       _eeprom_read
  6086 ;;       _eeprom_write
  6087 ;;       _water_detected
  6088 ;;       _water_fill
  6089 ;;       _settimeout
  6090 ;;         _gettimestamp
  6091 ;;         ___bmul (ARG)
  6092 ;;         ___lmul (ARG)
  6093 ;;       _timeoutnever
  6094 ;;         ___bmul (ARG)
  6095 ;;       _set_Pump
  6096 ;;       _set_Dryer
  6097 ;;       ___lmul
  6098 ;;       ___wmul
  6099 ;;       ___lwdiv
  6100 ;;       ___lwmod
  6101 ;;         ___lwdiv (ARG)
  6102 ;;       _set_Dosage
  6103 ;;       _memcpy
  6104 ;;       _litterlanguage_stop
  6105 ;;         _printtime
  6106 ;;           _printf
  6107 ;;             _putch
  6108 ;;             _isdigit
  6109 ;;             ___wmul
  6110 ;;             ___bmul
  6111 ;;             ___lwdiv
  6112 ;;             ___lwmod
  6113 ;;               ___lwdiv (ARG)
  6114 ;;         _printf
  6115 ;;           _putch
  6116 ;;           _isdigit
  6117 ;;           ___wmul
  6118 ;;           ___bmul
  6119 ;;           ___lwdiv
  6120 ;;           ___lwmod
  6121 ;;             ___lwdiv (ARG)
  6122 ;;         _set_Bowl
  6123 ;;         _set_Arm
  6124 ;;         _water_fill
  6125 ;;         _set_Dosage
  6126 ;;         _set_Pump
  6127 ;;         _set_Dryer
  6128 ;;         _timeoutnever
  6129 ;;           ___bmul (ARG)
  6130 ;;         _litterlanguage_event
  6131 ;;       _litterlanguage_event
  6132 ;;     _wait_instruction
  6133 ;;       _timeoutexpired
  6134 ;;         _gettimestamp
  6135 ;;         ___bmul (ARG)
  6136 ;;       _water_detected
  6137 ;;       _timeoutnever
  6138 ;;         ___bmul (ARG)
  6139 ;;       _get_Dosage
  6140 ;;
  6141 ;; _isr (ROOT)
  6142 ;;   _timer_isr
  6143 ;;   _catsensor_isr_timer
  6144 ;;   _catsensor_isr_input
  6145 ;;   _serial_rx_isr
  6146 ;;   _serial_tx_isr
  6147 ;;
  6148                           
  6149 ;; Address spaces:
  6150                           
  6151 ;;Name               Size   Autos  Total    Cost      Usage
  6152 ;;BIGRAM             3F0      0       0       0        0.0%
  6153 ;;EEDATA             100      0       0       0        0.0%
  6154 ;;NULL                 0      0       0       0        0.0%
  6155 ;;CODE                 0      0       0       0        0.0%
  6156 ;;BITCOMMON            E      0       2       1       14.3%
  6157 ;;BITSFR0              0      0       0       1        0.0%
  6158 ;;SFR0                 0      0       0       1        0.0%
  6159 ;;COMMON               E      C       E       2      100.0%
  6160 ;;BITSFR1              0      0       0       2        0.0%
  6161 ;;SFR1                 0      0       0       2        0.0%
  6162 ;;BITSFR2              0      0       0       3        0.0%
  6163 ;;SFR2                 0      0       0       3        0.0%
  6164 ;;STACK                0      0       B       3        0.0%
  6165 ;;BITBANK0            4F      0       1       4        1.3%
  6166 ;;BITSFR3              0      0       0       4        0.0%
  6167 ;;SFR3                 0      0       0       4        0.0%
  6168 ;;BANK0               4F     41      4F       5      100.0%
  6169 ;;BITSFR4              0      0       0       5        0.0%
  6170 ;;SFR4                 0      0       0       5        0.0%
  6171 ;;BITBANK1            50      0       0       6        0.0%
  6172 ;;BITSFR5              0      0       0       6        0.0%
  6173 ;;SFR5                 0      0       0       6        0.0%
  6174 ;;BANK1               50     26      4F       7       98.8%
  6175 ;;BITSFR6              0      0       0       7        0.0%
  6176 ;;SFR6                 0      0       0       7        0.0%
  6177 ;;BITBANK2            50      0       0       8        0.0%
  6178 ;;BITSFR7              0      0       0       8        0.0%
  6179 ;;SFR7                 0      0       0       8        0.0%
  6180 ;;BANK2               50      0      50       9      100.0%
  6181 ;;BITSFR8              0      0       0       9        0.0%
  6182 ;;SFR8                 0      0       0       9        0.0%
  6183 ;;BITBANK3            50      0       0      10        0.0%
  6184 ;;BITSFR9              0      0       0      10        0.0%
  6185 ;;SFR9                 0      0       0      10        0.0%
  6186 ;;BANK3               50      0      42      11       82.5%
  6187 ;;BITSFR10             0      0       0      11        0.0%
  6188 ;;SFR10                0      0       0      11        0.0%
  6189 ;;BITBANK4            50      0       0      12        0.0%
  6190 ;;BITSFR11             0      0       0      12        0.0%
  6191 ;;SFR11                0      0       0      12        0.0%
  6192 ;;BANK4               50      0      37      13       68.8%
  6193 ;;BITSFR12             0      0       0      13        0.0%
  6194 ;;SFR12                0      0       0      13        0.0%
  6195 ;;BITBANK5            50      0       0      14        0.0%
  6196 ;;BITSFR13             0      0       0      14        0.0%
  6197 ;;SFR13                0      0       0      14        0.0%
  6198 ;;BANK5               50      0       0      15        0.0%
  6199 ;;BITSFR14             0      0       0      15        0.0%
  6200 ;;SFR14                0      0       0      15        0.0%
  6201 ;;BITBANK6            50      0       0      16        0.0%
  6202 ;;BITSFR15             0      0       0      16        0.0%
  6203 ;;SFR15                0      0       0      16        0.0%
  6204 ;;BANK6               50      0       0      17        0.0%
  6205 ;;BITSFR16             0      0       0      17        0.0%
  6206 ;;SFR16                0      0       0      17        0.0%
  6207 ;;BITBANK7            50      0       0      18        0.0%
  6208 ;;BITSFR17             0      0       0      18        0.0%
  6209 ;;SFR17                0      0       0      18        0.0%
  6210 ;;BANK7               50      0       0      19        0.0%
  6211 ;;BITSFR18             0      0       0      19        0.0%
  6212 ;;SFR18                0      0       0      19        0.0%
  6213 ;;BITSFR19             0      0       0      20        0.0%
  6214 ;;SFR19                0      0       0      20        0.0%
  6215 ;;ABS                  0      0     175      20        0.0%
  6216 ;;BITBANK8            50      0       0      21        0.0%
  6217 ;;BITSFR20             0      0       0      21        0.0%
  6218 ;;SFR20                0      0       0      21        0.0%
  6219 ;;BANK8               50      0       0      22        0.0%
  6220 ;;BITSFR21             0      0       0      22        0.0%
  6221 ;;SFR21                0      0       0      22        0.0%
  6222 ;;BITBANK9            50      0       0      23        0.0%
  6223 ;;BITSFR22             0      0       0      23        0.0%
  6224 ;;SFR22                0      0       0      23        0.0%
  6225 ;;BANK9               50      0       0      24        0.0%
  6226 ;;BITSFR23             0      0       0      24        0.0%
  6227 ;;SFR23                0      0       0      24        0.0%
  6228 ;;BITBANK10           50      0       0      25        0.0%
  6229 ;;BITSFR24             0      0       0      25        0.0%
  6230 ;;SFR24                0      0       0      25        0.0%
  6231 ;;BANK10              50      0       0      26        0.0%
  6232 ;;BITSFR25             0      0       0      26        0.0%
  6233 ;;SFR25                0      0       0      26        0.0%
  6234 ;;BITBANK11           50      0       0      27        0.0%
  6235 ;;BITSFR26             0      0       0      27        0.0%
  6236 ;;SFR26                0      0       0      27        0.0%
  6237 ;;BANK11              50      0       0      28        0.0%
  6238 ;;BITSFR27             0      0       0      28        0.0%
  6239 ;;SFR27                0      0       0      28        0.0%
  6240 ;;BITBANK12           30      0       0      29        0.0%
  6241 ;;BITSFR28             0      0       0      29        0.0%
  6242 ;;SFR28                0      0       0      29        0.0%
  6243 ;;BANK12              30      0       0      30        0.0%
  6244 ;;BITSFR29             0      0       0      30        0.0%
  6245 ;;SFR29                0      0       0      30        0.0%
  6246 ;;BITSFR30             0      0       0      31        0.0%
  6247 ;;SFR30                0      0       0      31        0.0%
  6248 ;;DATA                 0      0     180      31        0.0%
  6249 ;;BITSFR31             0      0       0      32        0.0%
  6250 ;;SFR31                0      0       0      32        0.0%
  6251                           
  6252                           	global	_main
  6253                           psect	maintext,global,class=CODE,delta=2
  6254                           global __pmaintext
  6255  274E                     __pmaintext:
  6256                           
  6257 ;; *************** function _main *****************
  6258 ;; Defined at:
  6259 ;;		line 76 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  flags           1   64[BANK0 ] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;		None               void
  6266 ;; Registers used:
  6267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 17F/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6277 ;;Total ram usage:        2 bytes
  6278 ;; Hardware stack levels required when called:    9
  6279 ;; This function calls:
  6280 ;;		_catgenie_init
  6281 ;;		_serial_init
  6282 ;;		_printf
  6283 ;;		_timer_init
  6284 ;;		_rtc_init
  6285 ;;		_catsensor_init
  6286 ;;		_water_init
  6287 ;;		_userinterface_init
  6288 ;;		_cmdline_init
  6289 ;;		_litterlanguage_init
  6290 ;;		_interrupt_init
  6291 ;;		_rtc_work
  6292 ;;		_catsensor_work
  6293 ;;		_water_work
  6294 ;;		_catgenie_work
  6295 ;;		_userinterface_work
  6296 ;;		_cmdline_work
  6297 ;;		_litterlanguage_work
  6298 ;; This function is called by:
  6299 ;;		Startup code after reset
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           psect	maintext
  6303                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  6304                           	line	76
  6305                           	global	__size_of_main
  6306  00B2                     	__size_of_main	equ	__end_of_main-_main
  6307                           	
  6308  274E                     _main:	
  6309                           	opt	stack 7
  6310                           ; Regs used in _main: [allreg]
  6311                           	line	80
  6312                           	
  6313  274E                     l38595:	
  6314                           ;catgenius.c: 77: unsigned char flags;
  6315                           ;catgenius.c: 80: flags = catgenie_init();
  6316  274E  3180  2053  31A7   	fcall	_catgenie_init
  6317  2751  0020               	movlb 0	; select bank0
  6318  2752  00E0               	movwf	(??_main+0)+0
  6319  2753  0860               	movf	(??_main+0)+0,w
  6320  2754  00E1               	movwf	(main@flags)
  6321                           	line	89
  6322                           	
  6323  2755                     l38597:	
  6324                           ;catgenius.c: 89: serial_init(19200UL);
  6325  2755  3000               	movlw	0
  6326  2756  00B2               	movwf	(?_serial_init+3)
  6327  2757  3000               	movlw	0
  6328  2758  00B1               	movwf	(?_serial_init+2)
  6329  2759  304B               	movlw	04Bh
  6330  275A  00B0               	movwf	(?_serial_init+1)
  6331  275B  3000               	movlw	0
  6332  275C  00AF               	movwf	(?_serial_init)
  6333                           
  6334  275D  3199  21FF  31A7   	fcall	_serial_init
  6335                           	line	91
  6336                           	
  6337  2760                     l38599:	
  6338                           ;catgenius.c: 91: printf("\n*** CatGenius ***\n");
  6339  2760  300C               	movlw	low(STR_1|8000h)
  6340  2761  0020               	movlb 0	; select bank0
  6341  2762  00AF               	movwf	(?_printf)
  6342  2763  3086               	movlw	high(STR_1|8000h)
  6343  2764  00B0               	movwf	((?_printf))+1
  6344  2765  3194  24A0  31A7   	fcall	_printf
  6345                           	line	92
  6346                           	
  6347  2768                     l38601:	
  6348                           ;catgenius.c: 92: if (!nPOR) {
  6349  2768  0021               	movlb 1	; select bank1
  6350  2769  1896               	btfsc	(1201/8)^080h,(1201)&7
  6351  276A  2F6C               	goto	u12311
  6352  276B  2F6D               	goto	u12310
  6353  276C                     u12311:
  6354  276C  2F78               	goto	l2081
  6355  276D                     u12310:
  6356                           	line	93
  6357                           	
  6358  276D                     l38603:	
  6359                           ;catgenius.c: 93: printf("Power-on reset\n");
  6360  276D  308F               	movlw	low(STR_2|8000h)
  6361  276E  0020               	movlb 0	; select bank0
  6362  276F  00AF               	movwf	(?_printf)
  6363  2770  3087               	movlw	high(STR_2|8000h)
  6364  2771  00B0               	movwf	((?_printf))+1
  6365  2772  3194  24A0  31A7   	fcall	_printf
  6366                           	line	94
  6367                           	
  6368  2775                     l38605:	
  6369                           ;catgenius.c: 94: flags |= (0x01 << 7);
  6370  2775  0020               	movlb 0	; select bank0
  6371  2776  17E1               	bsf	(main@flags)+(7/8),(7)&7
  6372                           	line	95
  6373                           ;catgenius.c: 95: } else if (!nBOR) {
  6374  2777  2FAC               	goto	l38617
  6375                           	
  6376  2778                     l2081:	
  6377  2778  1816               	btfsc	(1200/8)^080h,(1200)&7
  6378  2779  2F7B               	goto	u12321
  6379  277A  2F7C               	goto	u12320
  6380  277B                     u12321:
  6381  277B  2F87               	goto	l2083
  6382  277C                     u12320:
  6383                           	line	96
  6384                           	
  6385  277C                     l38607:	
  6386                           ;catgenius.c: 96: printf("Brown-out reset\n");
  6387  277C  303E               	movlw	low(STR_3|8000h)
  6388  277D  0020               	movlb 0	; select bank0
  6389  277E  00AF               	movwf	(?_printf)
  6390  277F  3087               	movlw	high(STR_3|8000h)
  6391  2780  00B0               	movwf	((?_printf))+1
  6392  2781  3194  24A0  31A7   	fcall	_printf
  6393                           	line	97
  6394                           	
  6395  2784                     l38609:	
  6396                           ;catgenius.c: 97: flags |= (0x01 << 7);
  6397  2784  0020               	movlb 0	; select bank0
  6398  2785  17E1               	bsf	(main@flags)+(7/8),(7)&7
  6399                           	line	98
  6400                           ;catgenius.c: 98: } else if (!__timeout)
  6401  2786  2FAC               	goto	l38617
  6402                           	
  6403  2787                     l2083:	
  6404  2787  0020               	movlb 0	; select bank0
  6405  2788  1A20               	btfsc	(260/8),(260)&7
  6406  2789  2F8B               	goto	u12331
  6407  278A  2F8C               	goto	u12330
  6408  278B                     u12331:
  6409  278B  2F94               	goto	l2085
  6410  278C                     u12330:
  6411                           	line	99
  6412                           	
  6413  278C                     l38611:	
  6414                           ;catgenius.c: 99: printf("Watchdog reset\n");
  6415  278C  307F               	movlw	low(STR_4|8000h)
  6416  278D  00AF               	movwf	(?_printf)
  6417  278E  3087               	movlw	high(STR_4|8000h)
  6418  278F  00B0               	movwf	((?_printf))+1
  6419  2790  3194  24A0  31A7   	fcall	_printf
  6420  2793  2FAC               	goto	l38617
  6421                           	line	100
  6422                           	
  6423  2794                     l2085:	
  6424                           ;catgenius.c: 100: else if (!__powerdown)
  6425  2794  19A0               	btfsc	(259/8),(259)&7
  6426  2795  2F97               	goto	u12341
  6427  2796  2F98               	goto	u12340
  6428  2797                     u12341:
  6429  2797  2FA0               	goto	l38615
  6430  2798                     u12340:
  6431                           	line	101
  6432                           	
  6433  2798                     l38613:	
  6434                           ;catgenius.c: 101: printf("Pin reset (sleep)\n");
  6435  2798  3046               	movlw	low(STR_5|8000h)
  6436  2799  00AF               	movwf	(?_printf)
  6437  279A  3086               	movlw	high(STR_5|8000h)
  6438  279B  00B0               	movwf	((?_printf))+1
  6439  279C  3194  24A0  31A7   	fcall	_printf
  6440  279F  2FAC               	goto	l38617
  6441                           	line	102
  6442                           	
  6443  27A0                     l2087:	
  6444                           	line	103
  6445                           	
  6446  27A0                     l38615:	
  6447                           ;catgenius.c: 102: else
  6448                           ;catgenius.c: 103: printf("Pin reset\n");
  6449  27A0  3067               	movlw	low(STR_6|8000h)
  6450  27A1  0020               	movlb 0	; select bank0
  6451  27A2  00AF               	movwf	(?_printf)
  6452  27A3  3088               	movlw	high(STR_6|8000h)
  6453  27A4  00B0               	movwf	((?_printf))+1
  6454  27A5  3194  24A0  31A7   	fcall	_printf
  6455  27A8  2FAC               	goto	l38617
  6456                           	
  6457  27A9                     l2088:	
  6458  27A9  2FAC               	goto	l38617
  6459                           	
  6460  27AA                     l2086:	
  6461  27AA  2FAC               	goto	l38617
  6462                           	
  6463  27AB                     l2084:	
  6464  27AB  2FAC               	goto	l38617
  6465                           	
  6466  27AC                     l2082:	
  6467                           	line	104
  6468                           	
  6469  27AC                     l38617:	
  6470                           ;catgenius.c: 104: nPOR = 1;
  6471  27AC  0021               	movlb 1	; select bank1
  6472  27AD  1496               	bsf	(1201/8)^080h,(1201)&7
  6473                           	line	105
  6474                           	
  6475  27AE                     l38619:	
  6476                           ;catgenius.c: 105: nBOR = 1;
  6477  27AE  1416               	bsf	(1200/8)^080h,(1200)&7
  6478                           	line	107
  6479                           	
  6480  27AF                     l38621:	
  6481                           ;catgenius.c: 107: if (flags & (0x01 << 0))
  6482  27AF  0020               	movlb 0	; select bank0
  6483  27B0  1C61               	btfss	(main@flags),(0)&7
  6484  27B1  2FB3               	goto	u12351
  6485  27B2  2FB4               	goto	u12350
  6486  27B3                     u12351:
  6487  27B3  2FBC               	goto	l38625
  6488  27B4                     u12350:
  6489                           	line	108
  6490                           	
  6491  27B4                     l38623:	
  6492                           ;catgenius.c: 108: printf("Start button held\n");
  6493  27B4  306C               	movlw	low(STR_7|8000h)
  6494  27B5  00AF               	movwf	(?_printf)
  6495  27B6  3086               	movlw	high(STR_7|8000h)
  6496  27B7  00B0               	movwf	((?_printf))+1
  6497  27B8  3194  24A0  31A7   	fcall	_printf
  6498  27BB  2FBC               	goto	l38625
  6499                           	
  6500  27BC                     l2089:	
  6501                           	line	109
  6502                           	
  6503  27BC                     l38625:	
  6504                           ;catgenius.c: 109: if (flags & (0x01 << 1))
  6505  27BC  0020               	movlb 0	; select bank0
  6506  27BD  1CE1               	btfss	(main@flags),(1)&7
  6507  27BE  2FC0               	goto	u12361
  6508  27BF  2FC1               	goto	u12360
  6509  27C0                     u12361:
  6510  27C0  2FC9               	goto	l38629
  6511  27C1                     u12360:
  6512                           	line	110
  6513                           	
  6514  27C1                     l38627:	
  6515                           ;catgenius.c: 110: printf("Setup button held\n");
  6516  27C1  3059               	movlw	low(STR_8|8000h)
  6517  27C2  00AF               	movwf	(?_printf)
  6518  27C3  3086               	movlw	high(STR_8|8000h)
  6519  27C4  00B0               	movwf	((?_printf))+1
  6520  27C5  3194  24A0  31A7   	fcall	_printf
  6521  27C8  2FC9               	goto	l38629
  6522                           	
  6523  27C9                     l2090:	
  6524                           	line	113
  6525                           	
  6526  27C9                     l38629:	
  6527                           ;catgenius.c: 113: timer_init();
  6528  27C9  31A8  2037  31A7   	fcall	_timer_init
  6529                           	line	116
  6530                           	
  6531  27CC                     l38631:	
  6532                           ;catgenius.c: 116: rtc_init(flags);
  6533  27CC  0020               	movlb 0	; select bank0
  6534  27CD  0861               	movf	(main@flags),w
  6535  27CE  31AA  2264  31A7   	fcall	_rtc_init
  6536                           	line	119
  6537                           	
  6538  27D1                     l38633:	
  6539                           ;catgenius.c: 119: catsensor_init();
  6540  27D1  31A8  2083  31A7   	fcall	_catsensor_init
  6541                           	line	122
  6542                           	
  6543  27D4                     l38635:	
  6544                           ;catgenius.c: 122: water_init();
  6545  27D4  31AB  236E  31A7   	fcall	_water_init
  6546                           	line	125
  6547                           	
  6548  27D7                     l38637:	
  6549                           ;catgenius.c: 125: userinterface_init(flags);
  6550  27D7  0020               	movlb 0	; select bank0
  6551  27D8  0861               	movf	(main@flags),w
  6552  27D9  31AC  2448  31A7   	fcall	_userinterface_init
  6553                           	line	129
  6554                           	
  6555  27DC                     l38639:	
  6556                           ;catgenius.c: 129: cmdline_init();
  6557  27DC  31A8  2059  31A7   	fcall	_cmdline_init
  6558                           	line	133
  6559                           	
  6560  27DF                     l38641:	
  6561                           ;catgenius.c: 133: litterlanguage_init(flags);
  6562  27DF  0020               	movlb 0	; select bank0
  6563  27E0  0861               	movf	(main@flags),w
  6564  27E1  31A5  25B3  31A7   	fcall	_litterlanguage_init
  6565                           	line	136
  6566                           	
  6567  27E4                     l38643:	
  6568                           ;catgenius.c: 136: interrupt_init();
  6569  27E4  31B7  27F7  31A7   	fcall	_interrupt_init
  6570  27E7  2FE8               	goto	l38645
  6571                           	line	139
  6572                           ;catgenius.c: 139: for(;;){
  6573                           	
  6574  27E8                     l2091:	
  6575                           	line	140
  6576                           	
  6577  27E8                     l38645:	
  6578                           ;catgenius.c: 140: rtc_work();
  6579  27E8  31A0  2084  31A7   	fcall	_rtc_work
  6580                           	line	141
  6581                           	
  6582  27EB                     l38647:	
  6583                           ;catgenius.c: 141: catsensor_work();
  6584  27EB  31A6  2630  31A7   	fcall	_catsensor_work
  6585                           	line	142
  6586                           	
  6587  27EE                     l38649:	
  6588                           ;catgenius.c: 142: water_work();
  6589  27EE  3199  2142  31A7   	fcall	_water_work
  6590                           	line	143
  6591                           	
  6592  27F1                     l38651:	
  6593                           ;catgenius.c: 143: catgenie_work();
  6594  27F1  3190  2053  31A7   	fcall	_catgenie_work
  6595                           	line	144
  6596                           	
  6597  27F4                     l38653:	
  6598                           ;catgenius.c: 144: userinterface_work();
  6599  27F4  319D  252E  31A7   	fcall	_userinterface_work
  6600                           	line	146
  6601                           	
  6602  27F7                     l38655:	
  6603                           ;catgenius.c: 146: cmdline_work();
  6604  27F7  31AA  22BD  31A7   	fcall	_cmdline_work
  6605                           	line	148
  6606                           	
  6607  27FA                     l38657:	
  6608                           ;catgenius.c: 148: litterlanguage_work();
  6609  27FA  319E  268C  31A7   	fcall	_litterlanguage_work
  6610                           	line	152
  6611                           ;catgenius.c: 152: }
  6612  27FD  2FE8               	goto	l38645
  6613                           	
  6614  27FE                     l2092:	
  6615                           	line	153
  6616                           	
  6617  27FE                     l2093:	
  6618                           	global	start
  6619  27FE  3180  284E         	ljmp	start
  6620                           	opt stack 0
  6621                           GLOBAL	__end_of_main
  6622  2800                     	__end_of_main:
  6623 ;; =============== function _main ends ============
  6624                           
  6625                           	signat	_main,88
  6626                           	global	_catgenie_work
  6627                           psect	text3221,local,class=CODE,delta=2
  6628                           global __ptext3221
  6629  1053                     __ptext3221:
  6630                           
  6631 ;; *************** function _catgenie_work *****************
  6632 ;; Defined at:
  6633 ;;		line 230 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  tempmask        1   37[BANK0 ] unsigned char 
  6638 ;;  tempstate       1   39[BANK0 ] unsigned char 
  6639 ;;  temp            1   40[BANK0 ] unsigned char 
  6640 ;;  status          1   38[BANK0 ] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;		None               void
  6643 ;; Registers used:
  6644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6651 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  6652 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6653 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
  6654 ;;Total ram usage:        8 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    8
  6657 ;; This function calls:
  6658 ;;		_settimeout
  6659 ;;		___bmul
  6660 ;;		_timeoutexpired
  6661 ;;		_setupbutton_event
  6662 ;;		_startbutton_event
  6663 ;;		_heatsensor_event
  6664 ;;		_timeoutnever
  6665 ;; This function is called by:
  6666 ;;		_main
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           psect	text3221
  6670                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  6671                           	line	230
  6672                           	global	__size_of_catgenie_work
  6673  0203                     	__size_of_catgenie_work	equ	__end_of_catgenie_work-_catgenie_work
  6674                           	
  6675  1053                     _catgenie_work:	
  6676                           	opt	stack 7
  6677                           ; Regs used in _catgenie_work: [wreg-status,0+pclath+cstack]
  6678                           	line	231
  6679                           	
  6680  1053                     l38533:	
  6681                           ;catgenie120.c: 231: unsigned char temp = 0;
  6682  1053  0020               	movlb 0	; select bank0
  6683  1054  01C9               	clrf	(catgenie_work@temp)
  6684                           	line	235
  6685                           	
  6686  1055                     l38535:	
  6687                           ;catgenie120.c: 232: unsigned char status;
  6688                           ;catgenie120.c: 235: status = PORTB;
  6689  1055  080D               	movf	(13),w	;volatile
  6690  1056  00C2               	movwf	(??_catgenie_work+0)+0
  6691  1057  0842               	movf	(??_catgenie_work+0)+0,w
  6692  1058  00C7               	movwf	(catgenie_work@status)
  6693                           	line	236
  6694                           	
  6695  1059                     l38537:	
  6696                           ;catgenie120.c: 236: temp = status ^ PORTB_old;
  6697  1059  0847               	movf	(catgenie_work@status),w
  6698  105A  0021               	movlb 1	; select bank1
  6699  105B  065B               	xorwf	(catgenie120@PORTB_old)^080h,w
  6700  105C  0020               	movlb 0	; select bank0
  6701  105D  00C2               	movwf	(??_catgenie_work+0)+0
  6702  105E  0842               	movf	(??_catgenie_work+0)+0,w
  6703  105F  00C9               	movwf	(catgenie_work@temp)
  6704                           	line	237
  6705                           	
  6706  1060                     l38539:	
  6707                           ;catgenie120.c: 237: PORTB_old = status;
  6708  1060  0847               	movf	(catgenie_work@status),w
  6709  1061  00C2               	movwf	(??_catgenie_work+0)+0
  6710  1062  0842               	movf	(??_catgenie_work+0)+0,w
  6711  1063  0021               	movlb 1	; select bank1
  6712  1064  00DB               	movwf	(catgenie120@PORTB_old)^080h
  6713                           	line	238
  6714                           	
  6715  1065                     l38541:	
  6716                           ;catgenie120.c: 238: if (temp & (1U << (0)))
  6717  1065  0020               	movlb 0	; select bank0
  6718  1066  1C49               	btfss	(catgenie_work@temp),(0)&7
  6719  1067  2869               	goto	u12181
  6720  1068  286A               	goto	u12180
  6721  1069                     u12181:
  6722  1069  287F               	goto	l38545
  6723  106A                     u12180:
  6724                           	line	240
  6725                           	
  6726  106A                     l38543:	
  6727                           ;catgenie120.c: 239: settimeout(&debouncers[0].timer,
  6728                           ;catgenie120.c: 240: debouncers[0].timeout);
  6729  106A  30A0               	movlw	(_debouncers&0ffh)
  6730  106B  00AD               	movwf	(?_settimeout)
  6731  106C  3001               	movlw	0x3/2
  6732  106D  00AE               	movwf	(?_settimeout+1)
  6733  106E  3006               	movlw	(06h)
  6734  106F  3EA0               	addlw	_debouncers&0ffh
  6735  1070  0086               	movwf	fsr1l
  6736  1071  3001               	movlw 1	; select bank3/4
  6737  1072  0087               	movwf fsr1h	
  6738                           	
  6739  1073  3F40               	moviw	[0]fsr1
  6740  1074  00AF               	movwf	0+(?_settimeout)+02h
  6741  1075  3F41               	moviw	[1]fsr1
  6742  1076  00B0               	movwf	1+(?_settimeout)+02h
  6743  1077  3F42               	moviw	[2]fsr1
  6744  1078  00B1               	movwf	2+(?_settimeout)+02h
  6745  1079  3F43               	moviw	[3]fsr1
  6746  107A  00B2               	movwf	3+(?_settimeout)+02h
  6747  107B  31A1  2147  3190   	fcall	_settimeout
  6748  107E  287F               	goto	l38545
  6749                           	
  6750  107F                     l10869:	
  6751                           	line	241
  6752                           	
  6753  107F                     l38545:	
  6754                           ;catgenie120.c: 241: if (temp & (1U << (5)))
  6755  107F  0020               	movlb 0	; select bank0
  6756  1080  1EC9               	btfss	(catgenie_work@temp),(5)&7
  6757  1081  2883               	goto	u12191
  6758  1082  2884               	goto	u12190
  6759  1083                     u12191:
  6760  1083  2899               	goto	l38549
  6761  1084                     u12190:
  6762                           	line	243
  6763                           	
  6764  1084                     l38547:	
  6765                           ;catgenie120.c: 242: settimeout(&debouncers[1].timer,
  6766                           ;catgenie120.c: 243: debouncers[1].timeout);
  6767  1084  30AE               	movlw	(_debouncers+0Eh&0ffh)
  6768  1085  00AD               	movwf	(?_settimeout)
  6769  1086  3001               	movlw	0x3/2
  6770  1087  00AE               	movwf	(?_settimeout+1)
  6771  1088  3014               	movlw	(014h)
  6772  1089  3EA0               	addlw	_debouncers&0ffh
  6773  108A  0086               	movwf	fsr1l
  6774  108B  3001               	movlw 1	; select bank3/4
  6775  108C  0087               	movwf fsr1h	
  6776                           	
  6777  108D  3F40               	moviw	[0]fsr1
  6778  108E  00AF               	movwf	0+(?_settimeout)+02h
  6779  108F  3F41               	moviw	[1]fsr1
  6780  1090  00B0               	movwf	1+(?_settimeout)+02h
  6781  1091  3F42               	moviw	[2]fsr1
  6782  1092  00B1               	movwf	2+(?_settimeout)+02h
  6783  1093  3F43               	moviw	[3]fsr1
  6784  1094  00B2               	movwf	3+(?_settimeout)+02h
  6785  1095  31A1  2147  3190   	fcall	_settimeout
  6786  1098  2899               	goto	l38549
  6787                           	
  6788  1099                     l10870:	
  6789                           	line	244
  6790                           	
  6791  1099                     l38549:	
  6792                           ;catgenie120.c: 244: if (temp & (1U << (1)))
  6793  1099  0020               	movlb 0	; select bank0
  6794  109A  1CC9               	btfss	(catgenie_work@temp),(1)&7
  6795  109B  289D               	goto	u12201
  6796  109C  289E               	goto	u12200
  6797  109D                     u12201:
  6798  109D  28B3               	goto	l38553
  6799  109E                     u12200:
  6800                           	line	247
  6801                           	
  6802  109E                     l38551:	
  6803                           ;catgenie120.c: 246: settimeout(&debouncers[2].timer,
  6804                           ;catgenie120.c: 247: debouncers[2].timeout);
  6805  109E  30BC               	movlw	(_debouncers+01Ch&0ffh)
  6806  109F  00AD               	movwf	(?_settimeout)
  6807  10A0  3001               	movlw	0x3/2
  6808  10A1  00AE               	movwf	(?_settimeout+1)
  6809  10A2  3022               	movlw	(022h)
  6810  10A3  3EA0               	addlw	_debouncers&0ffh
  6811  10A4  0086               	movwf	fsr1l
  6812  10A5  3001               	movlw 1	; select bank3/4
  6813  10A6  0087               	movwf fsr1h	
  6814                           	
  6815  10A7  3F40               	moviw	[0]fsr1
  6816  10A8  00AF               	movwf	0+(?_settimeout)+02h
  6817  10A9  3F41               	moviw	[1]fsr1
  6818  10AA  00B0               	movwf	1+(?_settimeout)+02h
  6819  10AB  3F42               	moviw	[2]fsr1
  6820  10AC  00B1               	movwf	2+(?_settimeout)+02h
  6821  10AD  3F43               	moviw	[3]fsr1
  6822  10AE  00B2               	movwf	3+(?_settimeout)+02h
  6823  10AF  31A1  2147  3190   	fcall	_settimeout
  6824  10B2  28B3               	goto	l38553
  6825                           	
  6826  10B3                     l10871:	
  6827                           	line	250
  6828                           	
  6829  10B3                     l38553:	
  6830                           ;catgenie120.c: 250: for (temp = 0; temp < 3; temp++)
  6831  10B3  0020               	movlb 0	; select bank0
  6832  10B4  01C9               	clrf	(catgenie_work@temp)
  6833                           	
  6834  10B5                     l38555:	
  6835  10B5  3003               	movlw	(03h)
  6836  10B6  0249               	subwf	(catgenie_work@temp),w
  6837  10B7  1C03               	skipc
  6838  10B8  28BA               	goto	u12211
  6839  10B9  28BB               	goto	u12210
  6840  10BA                     u12211:
  6841  10BA  28BD               	goto	l38559
  6842  10BB                     u12210:
  6843  10BB  2958               	goto	l10873
  6844                           	
  6845  10BC                     l38557:	
  6846  10BC  2958               	goto	l10873
  6847                           	line	251
  6848                           	
  6849  10BD                     l10872:	
  6850                           	
  6851  10BD                     l38559:	
  6852                           ;catgenie120.c: 251: if (timeoutexpired(&debouncers[temp].timer)) {
  6853  10BD  300E               	movlw	(0Eh)
  6854  10BE  00C2               	movwf	(??_catgenie_work+0)+0
  6855  10BF  0842               	movf	(??_catgenie_work+0)+0,w
  6856  10C0  00A1               	movwf	(?___bmul)
  6857  10C1  0849               	movf	(catgenie_work@temp),w
  6858  10C2  31A9  21DC  3190   	fcall	___bmul
  6859  10C5  3EA0               	addlw	_debouncers&0ffh
  6860  10C6  0020               	movlb 0	; select bank0
  6861  10C7  00A9               	movwf	(?_timeoutexpired)
  6862  10C8  3001               	movlw	(0x2/2)
  6863  10C9  00AA               	movwf	(?_timeoutexpired+1)
  6864  10CA  31A3  235B  3190   	fcall	_timeoutexpired
  6865  10CD  3A00               	xorlw	0&0ffh
  6866  10CE  1903               	skipnz
  6867  10CF  28D1               	goto	u12221
  6868  10D0  28D2               	goto	u12220
  6869  10D1                     u12221:
  6870  10D1  294D               	goto	l38571
  6871  10D2                     u12220:
  6872                           	line	252
  6873                           	
  6874  10D2                     l38561:	
  6875                           ;catgenie120.c: 252: unsigned char tempstate = *debouncers[temp].port;
  6876  10D2  300E               	movlw	(0Eh)
  6877  10D3  0020               	movlb 0	; select bank0
  6878  10D4  00C2               	movwf	(??_catgenie_work+0)+0
  6879  10D5  0842               	movf	(??_catgenie_work+0)+0,w
  6880  10D6  00A1               	movwf	(?___bmul)
  6881  10D7  0849               	movf	(catgenie_work@temp),w
  6882  10D8  31A9  21DC  3190   	fcall	___bmul
  6883  10DB  3E0B               	addlw	0Bh
  6884  10DC  3EA0               	addlw	_debouncers&0ffh
  6885  10DD  0086               	movwf	fsr1l
  6886  10DE  3001               	movlw 1	; select bank3/4
  6887  10DF  0087               	movwf fsr1h	
  6888                           	
  6889  10E0  0801               	movf	indf1,w
  6890  10E1  0086               	movwf	fsr1l
  6891  10E2  0187               	clrf fsr1h	
  6892                           	
  6893  10E3  0801               	movf	indf1,w
  6894  10E4  0020               	movlb 0	; select bank0
  6895  10E5  00C3               	movwf	(??_catgenie_work+1)+0
  6896  10E6  0843               	movf	(??_catgenie_work+1)+0,w
  6897  10E7  00C8               	movwf	(catgenie_work@tempstate)
  6898                           	line	253
  6899                           ;catgenie120.c: 253: tempstate &= debouncers[temp].port_mask;
  6900  10E8  300E               	movlw	(0Eh)
  6901  10E9  00C2               	movwf	(??_catgenie_work+0)+0
  6902  10EA  0842               	movf	(??_catgenie_work+0)+0,w
  6903  10EB  00A1               	movwf	(?___bmul)
  6904  10EC  0849               	movf	(catgenie_work@temp),w
  6905  10ED  31A9  21DC  3190   	fcall	___bmul
  6906  10F0  3E0C               	addlw	0Ch
  6907  10F1  3EA0               	addlw	_debouncers&0ffh
  6908  10F2  0086               	movwf	fsr1l
  6909  10F3  3001               	movlw 1	; select bank3/4
  6910  10F4  0087               	movwf fsr1h	
  6911                           	
  6912  10F5  0801               	movf	indf1,w
  6913  10F6  0020               	movlb 0	; select bank0
  6914  10F7  00C3               	movwf	(??_catgenie_work+1)+0
  6915  10F8  0843               	movf	(??_catgenie_work+1)+0,w
  6916  10F9  05C8               	andwf	(catgenie_work@tempstate),f
  6917                           	line	255
  6918                           ;catgenie120.c: 255: if (tempstate != debouncers[temp].state) {
  6919  10FA  300E               	movlw	(0Eh)
  6920  10FB  00C2               	movwf	(??_catgenie_work+0)+0
  6921  10FC  0842               	movf	(??_catgenie_work+0)+0,w
  6922  10FD  00A1               	movwf	(?___bmul)
  6923  10FE  0849               	movf	(catgenie_work@temp),w
  6924  10FF  31A9  21DC  3190   	fcall	___bmul
  6925  1102  3E0A               	addlw	0Ah
  6926  1103  3EA0               	addlw	_debouncers&0ffh
  6927  1104  0086               	movwf	fsr1l
  6928  1105  3001               	movlw 1	; select bank3/4
  6929  1106  0087               	movwf fsr1h	
  6930                           	
  6931  1107  0801               	movf	indf1,w
  6932  1108  0020               	movlb 0	; select bank0
  6933  1109  0648               	xorwf	(catgenie_work@tempstate),w
  6934  110A  1903               	skipnz
  6935  110B  290D               	goto	u12231
  6936  110C  290E               	goto	u12230
  6937  110D                     u12231:
  6938  110D  293C               	goto	l38569
  6939  110E                     u12230:
  6940                           	line	257
  6941                           	
  6942  110E                     l38563:	
  6943                           ;catgenie120.c: 257: debouncers[temp].handler(tempstate);
  6944  110E  300E               	movlw	(0Eh)
  6945  110F  00C2               	movwf	(??_catgenie_work+0)+0
  6946  1110  0842               	movf	(??_catgenie_work+0)+0,w
  6947  1111  00A1               	movwf	(?___bmul)
  6948  1112  0849               	movf	(catgenie_work@temp),w
  6949  1113  31A9  21DC  3190   	fcall	___bmul
  6950  1116  3E0D               	addlw	0Dh
  6951  1117  3EA0               	addlw	_debouncers&0ffh
  6952  1118  0086               	movwf	fsr1l
  6953  1119  3001               	movlw 1	; select bank3/4
  6954  111A  0087               	movwf fsr1h	
  6955                           	
  6956  111B  0801               	movf	indf1,w
  6957  111C  0020               	movlb 0	; select bank0
  6958  111D  00C3               	movwf	(??_catgenie_work+1)+0
  6959  111E  0843               	movf	(??_catgenie_work+1)+0,w
  6960  111F  00C5               	movwf	(_catgenie_work$30512)
  6961                           	
  6962  1120                     l38565:	
  6963                           ;catgenie120.c: 257: debouncers[temp].handler(tempstate);
  6964  1120  0848               	movf	(catgenie_work@tempstate),w
  6965  1121  00C2               	movwf	(??_catgenie_work+0)+0
  6966  1122  0842               	movf	(??_catgenie_work+0)+0,w
  6967  1123  00C0               	movwf	(?_setupbutton_event)
  6968  1124  0845               	movf	(_catgenie_work$30512),w
  6969  1125  3181  2100  3190   	fcall	fptable
  6970                           	line	258
  6971                           	
  6972  1128                     l38567:	
  6973                           ;catgenie120.c: 258: debouncers[temp].state = tempstate;
  6974  1128  0020               	movlb 0	; select bank0
  6975  1129  0848               	movf	(catgenie_work@tempstate),w
  6976  112A  00C2               	movwf	(??_catgenie_work+0)+0
  6977  112B  300E               	movlw	(0Eh)
  6978  112C  00C3               	movwf	(??_catgenie_work+1)+0
  6979  112D  0843               	movf	(??_catgenie_work+1)+0,w
  6980  112E  00A1               	movwf	(?___bmul)
  6981  112F  0849               	movf	(catgenie_work@temp),w
  6982  1130  31A9  21DC  3190   	fcall	___bmul
  6983  1133  3E0A               	addlw	0Ah
  6984  1134  3EA0               	addlw	_debouncers&0ffh
  6985  1135  0086               	movwf	fsr1l
  6986  1136  3001               	movlw 1	; select bank3/4
  6987  1137  0087               	movwf fsr1h	
  6988                           	
  6989  1138  0020               	movlb 0	; select bank0
  6990  1139  0842               	movf	(??_catgenie_work+0)+0,w
  6991  113A  0081               	movwf	indf1
  6992  113B  293C               	goto	l38569
  6993                           	line	259
  6994                           	
  6995  113C                     l10875:	
  6996                           	line	260
  6997                           	
  6998  113C                     l38569:	
  6999                           ;catgenie120.c: 259: }
  7000                           ;catgenie120.c: 260: timeoutnever(&debouncers[temp].timer);
  7001  113C  300E               	movlw	(0Eh)
  7002  113D  00C2               	movwf	(??_catgenie_work+0)+0
  7003  113E  0842               	movf	(??_catgenie_work+0)+0,w
  7004  113F  00A1               	movwf	(?___bmul)
  7005  1140  0849               	movf	(catgenie_work@temp),w
  7006  1141  31A9  21DC  3190   	fcall	___bmul
  7007  1144  3EA0               	addlw	_debouncers&0ffh
  7008  1145  0020               	movlb 0	; select bank0
  7009  1146  00A5               	movwf	(?_timeoutnever)
  7010  1147  3001               	movlw	(0x3/2)
  7011  1148  00A6               	movwf	(?_timeoutnever+1)
  7012  1149  31AA  222C  3190   	fcall	_timeoutnever
  7013  114C  294D               	goto	l38571
  7014                           	line	261
  7015                           	
  7016  114D                     l10874:	
  7017                           	line	250
  7018                           	
  7019  114D                     l38571:	
  7020  114D  3001               	movlw	(01h)
  7021  114E  0020               	movlb 0	; select bank0
  7022  114F  00C2               	movwf	(??_catgenie_work+0)+0
  7023  1150  0842               	movf	(??_catgenie_work+0)+0,w
  7024  1151  07C9               	addwf	(catgenie_work@temp),f
  7025                           	
  7026  1152                     l38573:	
  7027  1152  3003               	movlw	(03h)
  7028  1153  0249               	subwf	(catgenie_work@temp),w
  7029  1154  1C03               	skipc
  7030  1155  2957               	goto	u12241
  7031  1156  2958               	goto	u12240
  7032  1157                     u12241:
  7033  1157  28BD               	goto	l38559
  7034  1158                     u12240:
  7035                           	
  7036  1158                     l10873:	
  7037                           	line	264
  7038                           ;catgenie120.c: 261: }
  7039                           ;catgenie120.c: 264: for (temp = 0; temp < 5; temp++)
  7040  1158  01C9               	clrf	(catgenie_work@temp)
  7041                           	
  7042  1159                     l38575:	
  7043  1159  3005               	movlw	(05h)
  7044  115A  0249               	subwf	(catgenie_work@temp),w
  7045  115B  1C03               	skipc
  7046  115C  295E               	goto	u12251
  7047  115D  295F               	goto	u12250
  7048  115E                     u12251:
  7049  115E  2961               	goto	l38579
  7050  115F                     u12250:
  7051  115F  2A55               	goto	l10883
  7052                           	
  7053  1160                     l38577:	
  7054  1160  2A55               	goto	l10883
  7055                           	line	265
  7056                           	
  7057  1161                     l10876:	
  7058                           	
  7059  1161                     l38579:	
  7060                           ;catgenie120.c: 265: if (timeoutexpired(&pacers[temp].timer)) {
  7061  1161  300B               	movlw	(0Bh)
  7062  1162  00C2               	movwf	(??_catgenie_work+0)+0
  7063  1163  0842               	movf	(??_catgenie_work+0)+0,w
  7064  1164  00A1               	movwf	(?___bmul)
  7065  1165  0849               	movf	(catgenie_work@temp),w
  7066  1166  31A9  21DC  3190   	fcall	___bmul
  7067  1169  3E20               	addlw	_pacers&0ffh
  7068  116A  0020               	movlb 0	; select bank0
  7069  116B  00A9               	movwf	(?_timeoutexpired)
  7070  116C  3002               	movlw	(0x4/2)
  7071  116D  00AA               	movwf	(?_timeoutexpired+1)
  7072  116E  31A3  235B  3190   	fcall	_timeoutexpired
  7073  1171  3A00               	xorlw	0&0ffh
  7074  1172  1903               	skipnz
  7075  1173  2975               	goto	u12261
  7076  1174  2976               	goto	u12260
  7077  1175                     u12261:
  7078  1175  2A49               	goto	l38591
  7079  1176                     u12260:
  7080                           	line	266
  7081                           	
  7082  1176                     l38581:	
  7083                           ;catgenie120.c: 266: unsigned char tempmask = pacers[temp].mask;
  7084  1176  300B               	movlw	(0Bh)
  7085  1177  0020               	movlb 0	; select bank0
  7086  1178  00C2               	movwf	(??_catgenie_work+0)+0
  7087  1179  0842               	movf	(??_catgenie_work+0)+0,w
  7088  117A  00A1               	movwf	(?___bmul)
  7089  117B  0849               	movf	(catgenie_work@temp),w
  7090  117C  31A9  21DC  3190   	fcall	___bmul
  7091  117F  3E06               	addlw	06h
  7092  1180  3E20               	addlw	_pacers&0ffh
  7093  1181  0086               	movwf	fsr1l
  7094  1182  3002               	movlw 2	; select bank4/5
  7095  1183  0087               	movwf fsr1h	
  7096                           	
  7097  1184  0801               	movf	indf1,w
  7098  1185  0020               	movlb 0	; select bank0
  7099  1186  00C3               	movwf	(??_catgenie_work+1)+0
  7100  1187  0843               	movf	(??_catgenie_work+1)+0,w
  7101  1188  00C6               	movwf	(catgenie_work@tempmask)
  7102                           	line	269
  7103                           ;catgenie120.c: 269: settimeout(&pacers[temp].timer, (((((4UL * (1000UL * ((1000UL)))))/
                                 4)/8)/8));
  7104  1189  300B               	movlw	(0Bh)
  7105  118A  00C2               	movwf	(??_catgenie_work+0)+0
  7106  118B  0842               	movf	(??_catgenie_work+0)+0,w
  7107  118C  00A1               	movwf	(?___bmul)
  7108  118D  0849               	movf	(catgenie_work@temp),w
  7109  118E  31A9  21DC  3190   	fcall	___bmul
  7110  1191  3E20               	addlw	_pacers&0ffh
  7111  1192  0020               	movlb 0	; select bank0
  7112  1193  00AD               	movwf	(?_settimeout)
  7113  1194  3002               	movlw	(0x4/2)
  7114  1195  00AE               	movwf	(?_settimeout+1)
  7115  1196  3000               	movlw	0
  7116  1197  00B2               	movwf	3+(?_settimeout)+02h
  7117  1198  3000               	movlw	0
  7118  1199  00B1               	movwf	2+(?_settimeout)+02h
  7119  119A  303D               	movlw	03Dh
  7120  119B  00B0               	movwf	1+(?_settimeout)+02h
  7121  119C  3009               	movlw	09h
  7122  119D  00AF               	movwf	0+(?_settimeout)+02h
  7123                           
  7124  119E  31A1  2147  3190   	fcall	_settimeout
  7125                           	line	271
  7126                           ;catgenie120.c: 271: if (pacers[temp].pattern & tempmask)
  7127  11A1  300B               	movlw	(0Bh)
  7128  11A2  0020               	movlb 0	; select bank0
  7129  11A3  00C2               	movwf	(??_catgenie_work+0)+0
  7130  11A4  0842               	movf	(??_catgenie_work+0)+0,w
  7131  11A5  00A1               	movwf	(?___bmul)
  7132  11A6  0849               	movf	(catgenie_work@temp),w
  7133  11A7  31A9  21DC  3190   	fcall	___bmul
  7134  11AA  3E07               	addlw	07h
  7135  11AB  3E20               	addlw	_pacers&0ffh
  7136  11AC  0086               	movwf	fsr1l
  7137  11AD  3002               	movlw 2	; select bank4/5
  7138  11AE  0087               	movwf fsr1h	
  7139                           	
  7140  11AF  0801               	movf	indf1,w
  7141  11B0  0020               	movlb 0	; select bank0
  7142  11B1  0546               	andwf	(catgenie_work@tempmask),w
  7143  11B2  1903               	btfsc	status,2
  7144  11B3  29B5               	goto	u12271
  7145  11B4  29B6               	goto	u12270
  7146  11B5                     u12271:
  7147  11B5  29DB               	goto	l38585
  7148  11B6                     u12270:
  7149                           	line	272
  7150                           	
  7151  11B6                     l38583:	
  7152                           ;catgenie120.c: 272: *pacers[temp].port |= pacers[temp].port_mask;
  7153  11B6  300B               	movlw	(0Bh)
  7154  11B7  00C2               	movwf	(??_catgenie_work+0)+0
  7155  11B8  0842               	movf	(??_catgenie_work+0)+0,w
  7156  11B9  00A1               	movwf	(?___bmul)
  7157  11BA  0849               	movf	(catgenie_work@temp),w
  7158  11BB  31A9  21DC  3190   	fcall	___bmul
  7159  11BE  3E0A               	addlw	0Ah
  7160  11BF  3E20               	addlw	_pacers&0ffh
  7161  11C0  0086               	movwf	fsr1l
  7162  11C1  3002               	movlw 2	; select bank4/5
  7163  11C2  0087               	movwf fsr1h	
  7164                           	
  7165  11C3  0801               	movf	indf1,w
  7166  11C4  0020               	movlb 0	; select bank0
  7167  11C5  00C3               	movwf	(??_catgenie_work+1)+0
  7168  11C6  300B               	movlw	(0Bh)
  7169  11C7  00C4               	movwf	(??_catgenie_work+2)+0
  7170  11C8  0844               	movf	(??_catgenie_work+2)+0,w
  7171  11C9  00A1               	movwf	(?___bmul)
  7172  11CA  0849               	movf	(catgenie_work@temp),w
  7173  11CB  31A9  21DC  3190   	fcall	___bmul
  7174  11CE  3E09               	addlw	09h
  7175  11CF  3E20               	addlw	_pacers&0ffh
  7176  11D0  0086               	movwf	fsr1l
  7177  11D1  3002               	movlw 2	; select bank4/5
  7178  11D2  0087               	movwf fsr1h	
  7179                           	
  7180  11D3  0801               	movf	indf1,w
  7181  11D4  0086               	movwf	fsr1l
  7182  11D5  3001               	movlw 1	; select bank2/3
  7183  11D6  0087               	movwf fsr1h	
  7184                           	
  7185  11D7  0020               	movlb 0	; select bank0
  7186  11D8  0843               	movf	(??_catgenie_work+1)+0,w
  7187  11D9  0481               	iorwf	indf1,f
  7188  11DA  29FF               	goto	l10880
  7189                           	line	273
  7190                           	
  7191  11DB                     l10879:	
  7192                           	line	274
  7193                           	
  7194  11DB                     l38585:	
  7195                           ;catgenie120.c: 273: else
  7196                           ;catgenie120.c: 274: *pacers[temp].port &= ~pacers[temp].port_mask;
  7197  11DB  300B               	movlw	(0Bh)
  7198  11DC  00C2               	movwf	(??_catgenie_work+0)+0
  7199  11DD  0842               	movf	(??_catgenie_work+0)+0,w
  7200  11DE  00A1               	movwf	(?___bmul)
  7201  11DF  0849               	movf	(catgenie_work@temp),w
  7202  11E0  31A9  21DC  3190   	fcall	___bmul
  7203  11E3  3E0A               	addlw	0Ah
  7204  11E4  3E20               	addlw	_pacers&0ffh
  7205  11E5  0086               	movwf	fsr1l
  7206  11E6  3002               	movlw 2	; select bank4/5
  7207  11E7  0087               	movwf fsr1h	
  7208                           	
  7209  11E8  0901               	comf	indf1,w
  7210  11E9  0020               	movlb 0	; select bank0
  7211  11EA  00C3               	movwf	(??_catgenie_work+1)+0
  7212  11EB  300B               	movlw	(0Bh)
  7213  11EC  00C4               	movwf	(??_catgenie_work+2)+0
  7214  11ED  0844               	movf	(??_catgenie_work+2)+0,w
  7215  11EE  00A1               	movwf	(?___bmul)
  7216  11EF  0849               	movf	(catgenie_work@temp),w
  7217  11F0  31A9  21DC  3190   	fcall	___bmul
  7218  11F3  3E09               	addlw	09h
  7219  11F4  3E20               	addlw	_pacers&0ffh
  7220  11F5  0086               	movwf	fsr1l
  7221  11F6  3002               	movlw 2	; select bank4/5
  7222  11F7  0087               	movwf fsr1h	
  7223                           	
  7224  11F8  0801               	movf	indf1,w
  7225  11F9  0086               	movwf	fsr1l
  7226  11FA  3001               	movlw 1	; select bank2/3
  7227  11FB  0087               	movwf fsr1h	
  7228                           	
  7229  11FC  0020               	movlb 0	; select bank0
  7230  11FD  0843               	movf	(??_catgenie_work+1)+0,w
  7231  11FE  0581               	andwf	indf1,f
  7232                           	
  7233  11FF                     l10880:	
  7234                           	line	276
  7235                           ;catgenie120.c: 276: if (!(pacers[temp].mask <<= 1)) {
  7236  11FF  300B               	movlw	(0Bh)
  7237  1200  00C2               	movwf	(??_catgenie_work+0)+0
  7238  1201  0842               	movf	(??_catgenie_work+0)+0,w
  7239  1202  00A1               	movwf	(?___bmul)
  7240  1203  0849               	movf	(catgenie_work@temp),w
  7241  1204  31A9  21DC  3190   	fcall	___bmul
  7242  1207  3E06               	addlw	06h
  7243  1208  3E20               	addlw	_pacers&0ffh
  7244  1209  0086               	movwf	fsr1l
  7245  120A  3002               	movlw 2	; select bank4/5
  7246  120B  0087               	movwf fsr1h	
  7247                           	
  7248  120C  1003               	clrc
  7249  120D  0D81               	rlf	indf1,f
  7250                           
  7251  120E  0881               	movf	(indf1),f
  7252  120F  1D03               	skipz
  7253  1210  2A12               	goto	u12281
  7254  1211  2A13               	goto	u12280
  7255  1212                     u12281:
  7256  1212  2A49               	goto	l38591
  7257  1213                     u12280:
  7258                           	line	277
  7259                           	
  7260  1213                     l38587:	
  7261                           ;catgenie120.c: 277: pacers[temp].mask = 1;
  7262  1213  300B               	movlw	(0Bh)
  7263  1214  0020               	movlb 0	; select bank0
  7264  1215  00C2               	movwf	(??_catgenie_work+0)+0
  7265  1216  0842               	movf	(??_catgenie_work+0)+0,w
  7266  1217  00A1               	movwf	(?___bmul)
  7267  1218  0849               	movf	(catgenie_work@temp),w
  7268  1219  31A9  21DC  3190   	fcall	___bmul
  7269  121C  3E06               	addlw	06h
  7270  121D  3E20               	addlw	_pacers&0ffh
  7271  121E  0086               	movwf	fsr1l
  7272  121F  3002               	movlw 2	; select bank4/5
  7273  1220  0087               	movwf fsr1h	
  7274                           	
  7275  1221  0181               	clrf	indf1
  7276  1222  1403               	bsf	status,0
  7277  1223  0D81               	rlf	indf1,f
  7278                           	line	279
  7279                           ;catgenie120.c: 279: if (!pacers[temp].repeat)
  7280  1224  300B               	movlw	(0Bh)
  7281  1225  0020               	movlb 0	; select bank0
  7282  1226  00C2               	movwf	(??_catgenie_work+0)+0
  7283  1227  0842               	movf	(??_catgenie_work+0)+0,w
  7284  1228  00A1               	movwf	(?___bmul)
  7285  1229  0849               	movf	(catgenie_work@temp),w
  7286  122A  31A9  21DC  3190   	fcall	___bmul
  7287  122D  3E08               	addlw	08h
  7288  122E  3E20               	addlw	_pacers&0ffh
  7289  122F  0086               	movwf	fsr1l
  7290  1230  3002               	movlw 2	; select bank4/5
  7291  1231  0087               	movwf fsr1h	
  7292                           	
  7293  1232  0881               	movf	indf1,f
  7294  1233  1D03               	skipz
  7295  1234  2A36               	goto	u12291
  7296  1235  2A37               	goto	u12290
  7297  1236                     u12291:
  7298  1236  2A49               	goto	l38591
  7299  1237                     u12290:
  7300                           	line	280
  7301                           	
  7302  1237                     l38589:	
  7303                           ;catgenie120.c: 280: pacers[temp].pattern = 0;
  7304  1237  300B               	movlw	(0Bh)
  7305  1238  0020               	movlb 0	; select bank0
  7306  1239  00C2               	movwf	(??_catgenie_work+0)+0
  7307  123A  0842               	movf	(??_catgenie_work+0)+0,w
  7308  123B  00A1               	movwf	(?___bmul)
  7309  123C  0849               	movf	(catgenie_work@temp),w
  7310  123D  31A9  21DC  3190   	fcall	___bmul
  7311  1240  3E07               	addlw	07h
  7312  1241  3E20               	addlw	_pacers&0ffh
  7313  1242  0086               	movwf	fsr1l
  7314  1243  3002               	movlw 2	; select bank4/5
  7315  1244  0087               	movwf fsr1h	
  7316                           	
  7317  1245  0181               	clrf	indf1
  7318  1246  2A49               	goto	l38591
  7319                           	
  7320  1247                     l10882:	
  7321  1247  2A49               	goto	l38591
  7322                           	line	281
  7323                           	
  7324  1248                     l10881:	
  7325  1248  2A49               	goto	l38591
  7326                           	line	282
  7327                           	
  7328  1249                     l10878:	
  7329                           	line	264
  7330                           	
  7331  1249                     l38591:	
  7332  1249  3001               	movlw	(01h)
  7333  124A  0020               	movlb 0	; select bank0
  7334  124B  00C2               	movwf	(??_catgenie_work+0)+0
  7335  124C  0842               	movf	(??_catgenie_work+0)+0,w
  7336  124D  07C9               	addwf	(catgenie_work@temp),f
  7337                           	
  7338  124E                     l38593:	
  7339  124E  3005               	movlw	(05h)
  7340  124F  0249               	subwf	(catgenie_work@temp),w
  7341  1250  1C03               	skipc
  7342  1251  2A53               	goto	u12301
  7343  1252  2A54               	goto	u12300
  7344  1253                     u12301:
  7345  1253  2961               	goto	l38579
  7346  1254                     u12300:
  7347  1254  2A55               	goto	l10883
  7348                           	
  7349  1255                     l10877:	
  7350                           	line	283
  7351                           	
  7352  1255                     l10883:	
  7353  1255  0008               	return
  7354                           	opt stack 0
  7355                           GLOBAL	__end_of_catgenie_work
  7356  1256                     	__end_of_catgenie_work:
  7357 ;; =============== function _catgenie_work ends ============
  7358                           
  7359                           	signat	_catgenie_work,88
  7360                           	global	_setupbutton_event
  7361                           	global	_heatsensor_event
  7362                           	global	_startbutton_event
  7363                           psect	text3222,local,class=CODE,delta=2
  7364                           global __ptext3222
  7365  2875                     __ptext3222:
  7366                           
  7367 ;; *************** function _startbutton_event *****************
  7368 ;; Defined at:
  7369 ;;		line 264 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  up              1   31[BANK0 ] unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;		None               void
  7376 ;; Registers used:
  7377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7383 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7387 ;;Total ram usage:        2 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    7
  7390 ;; This function calls:
  7391 ;;		_process_button
  7392 ;; This function is called by:
  7393 ;;		_catgenie_work
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           psect	text3222
  7397                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  7398                           	line	264
  7399                           	global	__size_of_startbutton_event
  7400  000E                     	__size_of_startbutton_event	equ	__end_of_startbutton_event-_startbutton_event
  7401                           	
  7402  2875                     _startbutton_event:	
  7403                           	opt	stack 7
  7404                           ; Regs used in _startbutton_event: [wreg-status,0+pclath+cstack]
  7405                           	line	265
  7406                           	
  7407  2875                     l38529:	
  7408                           ;userinterface.c: 265: process_button ((0x01 << 0), !up);
  7409  2875  0020               	movlb 0	; select bank0
  7410  2876  0840               	movf	(startbutton_event@up),w
  7411  2877  3A00               	xorlw	0&0ffh
  7412  2878  3000               	movlw	0
  7413  2879  1903               	skipnz
  7414  287A  3001               	movlw	1
  7415  287B  00C1               	movwf	(??_startbutton_event+0)+0
  7416  287C  0841               	movf	(??_startbutton_event+0)+0,w
  7417  287D  00BD               	movwf	(?_process_button)
  7418  287E  3001               	movlw	(01h)
  7419  287F  31A2  2215  31A8   	fcall	_process_button
  7420                           	line	266
  7421                           	
  7422  2882                     l8672:	
  7423  2882  0008               	return
  7424                           	opt stack 0
  7425                           GLOBAL	__end_of_startbutton_event
  7426  2883                     	__end_of_startbutton_event:
  7427 ;; =============== function _startbutton_event ends ============
  7428                           
  7429                           	signat	_startbutton_event,4216
  7430                           psect	text3223,local,class=CODE,delta=2
  7431                           global __ptext3223
  7432  2920                     __ptext3223:
  7433                           
  7434 ;; *************** function _heatsensor_event *****************
  7435 ;; Defined at:
  7436 ;;		line 423 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  detected        1   31[BANK0 ] unsigned char 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;		None
  7441 ;; Return value:  Size  Location     Type
  7442 ;;		None               void
  7443 ;; Registers used:
  7444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7450 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7454 ;;Total ram usage:        2 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    3
  7457 ;; This function calls:
  7458 ;;		_litterlanguage_event
  7459 ;; This function is called by:
  7460 ;;		_catgenie_work
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           psect	text3223
  7464                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7465                           	line	423
  7466                           	global	__size_of_heatsensor_event
  7467  0011                     	__size_of_heatsensor_event	equ	__end_of_heatsensor_event-_heatsensor_event
  7468                           	
  7469  2920                     _heatsensor_event:	
  7470                           	opt	stack 11
  7471                           ; Regs used in _heatsensor_event: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7472                           	line	424
  7473                           	
  7474  2920                     l37179:	
  7475                           ;litterlanguage.c: 424: error_overheat = detected;
  7476  2920  10F1               	bcf	(_error_overheat/8),(_error_overheat)&7
  7477  2921  0020               	movlb 0	; select bank0
  7478  2922  1C40               	btfss	(heatsensor_event@detected),0
  7479  2923  2925               	goto	u10125
  7480  2924  14F1               	bsf	(_error_overheat/8),(_error_overheat)&7
  7481  2925                     u10125:
  7482                           
  7483                           	line	425
  7484                           	
  7485  2925                     l37181:	
  7486                           ;litterlanguage.c: 425: litterlanguage_event(3, error_overheat);
  7487  2925  3000               	movlw	0
  7488  2926  18F1               	btfsc	(_error_overheat/8),(_error_overheat)&7
  7489  2927  3001               	movlw	1
  7490  2928  0020               	movlb 0	; select bank0
  7491  2929  00C1               	movwf	(??_heatsensor_event+0)+0
  7492  292A  0841               	movf	(??_heatsensor_event+0)+0,w
  7493  292B  00A1               	movwf	(?_litterlanguage_event)
  7494  292C  3003               	movlw	(03h)
  7495  292D  3198  2000  31A9   	fcall	_litterlanguage_event
  7496                           	line	426
  7497                           	
  7498  2930                     l4325:	
  7499  2930  0008               	return
  7500                           	opt stack 0
  7501                           GLOBAL	__end_of_heatsensor_event
  7502  2931                     	__end_of_heatsensor_event:
  7503 ;; =============== function _heatsensor_event ends ============
  7504                           
  7505                           	signat	_heatsensor_event,4216
  7506                           psect	text3224,local,class=CODE,delta=2
  7507                           global __ptext3224
  7508  2867                     __ptext3224:
  7509                           
  7510 ;; *************** function _setupbutton_event *****************
  7511 ;; Defined at:
  7512 ;;		line 277 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  up              1   31[BANK0 ] unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;		None               void
  7519 ;; Registers used:
  7520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7530 ;;Total ram usage:        2 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    7
  7533 ;; This function calls:
  7534 ;;		_process_button
  7535 ;; This function is called by:
  7536 ;;		_catgenie_work
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           psect	text3224
  7540                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  7541                           	line	277
  7542                           	global	__size_of_setupbutton_event
  7543  000E                     	__size_of_setupbutton_event	equ	__end_of_setupbutton_event-_setupbutton_event
  7544                           	
  7545  2867                     _setupbutton_event:	
  7546                           	opt	stack 7
  7547                           ; Regs used in _setupbutton_event: [wreg-status,0+pclath+cstack]
  7548                           	line	278
  7549                           	
  7550  2867                     l38531:	
  7551                           ;userinterface.c: 278: process_button ((0x01 << 1), !up);
  7552  2867  0020               	movlb 0	; select bank0
  7553  2868  0840               	movf	(setupbutton_event@up),w
  7554  2869  3A00               	xorlw	0&0ffh
  7555  286A  3000               	movlw	0
  7556  286B  1903               	skipnz
  7557  286C  3001               	movlw	1
  7558  286D  00C1               	movwf	(??_setupbutton_event+0)+0
  7559  286E  0841               	movf	(??_setupbutton_event+0)+0,w
  7560  286F  00BD               	movwf	(?_process_button)
  7561  2870  3002               	movlw	(02h)
  7562  2871  31A2  2215  31A8   	fcall	_process_button
  7563                           	line	279
  7564                           	
  7565  2874                     l8675:	
  7566  2874  0008               	return
  7567                           	opt stack 0
  7568                           GLOBAL	__end_of_setupbutton_event
  7569  2875                     	__end_of_setupbutton_event:
  7570 ;; =============== function _setupbutton_event ends ============
  7571                           
  7572                           	signat	_setupbutton_event,4216
  7573                           	global	_litterlanguage_work
  7574                           psect	text3225,local,class=CODE,delta=2
  7575                           global __ptext3225
  7576  1E8C                     __ptext3225:
  7577                           
  7578 ;; *************** function _litterlanguage_work *****************
  7579 ;; Defined at:
  7580 ;;		line 132 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;		None
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;		None               void
  7587 ;; Registers used:
  7588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7596 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7597 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7598 ;;Total ram usage:        4 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    7
  7601 ;; This function calls:
  7602 ;;		_water_detected
  7603 ;;		_water_filling
  7604 ;;		_timeoutexpired
  7605 ;;		_printtime
  7606 ;;		_printf
  7607 ;;		_litterlanguage_event
  7608 ;;		_get_Pump
  7609 ;;		_timeoutnever
  7610 ;;		_set_Dosage
  7611 ;;		_req_instruction
  7612 ;;		_get_instruction
  7613 ;;		_eeprom_read
  7614 ;;		_eeprom_write
  7615 ;;		_exe_instruction
  7616 ;;		_wait_instruction
  7617 ;; This function is called by:
  7618 ;;		_main
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           psect	text3225
  7622                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7623                           	line	132
  7624                           	global	__size_of_litterlanguage_work
  7625  0174                     	__size_of_litterlanguage_work	equ	__end_of_litterlanguage_work-_litterlanguage_work
  7626                           	
  7627  1E8C                     _litterlanguage_work:	
  7628                           	opt	stack 8
  7629                           ; Regs used in _litterlanguage_work: [wreg-status,0+pclath+cstack]
  7630                           	line	134
  7631                           	
  7632  1E8C                     l38435:	
  7633                           ;litterlanguage.c: 134: if (paused)
  7634  1E8C  1EF1               	btfss	(_paused/8),(_paused)&7
  7635  1E8D  2E8F               	goto	u11991
  7636  1E8E  2E90               	goto	u11990
  7637  1E8F                     u11991:
  7638  1E8F  2E92               	goto	l38439
  7639  1E90                     u11990:
  7640  1E90  2FFF               	goto	l4241
  7641                           	line	135
  7642                           	
  7643  1E91                     l38437:	
  7644                           ;litterlanguage.c: 135: return;
  7645  1E91  2FFF               	goto	l4241
  7646                           	
  7647  1E92                     l4240:	
  7648                           	line	138
  7649                           	
  7650  1E92                     l38439:	
  7651                           ;litterlanguage.c: 138: if (ins_state != 0) {
  7652  1E92  0020               	movlb 0	; select bank0
  7653  1E93  0865               	movf	(_ins_state),w
  7654  1E94  1D03               	skipz
  7655  1E95  2E97               	goto	u12000
  7656  1E96  2FF4               	goto	l38521
  7657  1E97                     u12000:
  7658                           	line	142
  7659                           	
  7660  1E97                     l38441:	
  7661                           ;litterlanguage.c: 140: if( !water_detected() &&
  7662                           ;litterlanguage.c: 141: water_filling() &&
  7663                           ;litterlanguage.c: 142: timeoutexpired(&timer_fill) ){
  7664  1E97  31B7  27D8  319E   	fcall	_water_detected
  7665  1E9A  3800               	iorlw	0
  7666  1E9B  1D03               	skipz
  7667  1E9C  2E9E               	goto	u12011
  7668  1E9D  2E9F               	goto	u12010
  7669  1E9E                     u12011:
  7670  1E9E  2ECC               	goto	l38453
  7671  1E9F                     u12010:
  7672                           	
  7673  1E9F                     l38443:	
  7674  1E9F  31B7  27DE  319E   	fcall	_water_filling
  7675  1EA2  3A00               	xorlw	0&0ffh
  7676  1EA3  1903               	skipnz
  7677  1EA4  2EA6               	goto	u12021
  7678  1EA5  2EA7               	goto	u12020
  7679  1EA6                     u12021:
  7680  1EA6  2ECC               	goto	l38453
  7681  1EA7                     u12020:
  7682                           	
  7683  1EA7                     l38445:	
  7684  1EA7  30E9               	movlw	(_timer_fill&0ffh)
  7685  1EA8  0020               	movlb 0	; select bank0
  7686  1EA9  00A9               	movwf	(?_timeoutexpired)
  7687  1EAA  3000               	movlw	0x1/2
  7688  1EAB  00AA               	movwf	(?_timeoutexpired+1)
  7689  1EAC  31A3  235B  319E   	fcall	_timeoutexpired
  7690  1EAF  3A00               	xorlw	0&0ffh
  7691  1EB0  1903               	skipnz
  7692  1EB1  2EB3               	goto	u12031
  7693  1EB2  2EB4               	goto	u12030
  7694  1EB3                     u12031:
  7695  1EB3  2ECC               	goto	l38453
  7696  1EB4                     u12030:
  7697                           	line	143
  7698                           	
  7699  1EB4                     l38447:	
  7700                           ;litterlanguage.c: 143: printtime();
  7701  1EB4  31AB  23ED  319E   	fcall	_printtime
  7702                           	line	144
  7703                           ;litterlanguage.c: 144: printf("Fill timeout\n");
  7704  1EB7  30F7               	movlw	low(STR_15|8000h)
  7705  1EB8  0020               	movlb 0	; select bank0
  7706  1EB9  00AF               	movwf	(?_printf)
  7707  1EBA  3087               	movlw	high(STR_15|8000h)
  7708  1EBB  00B0               	movwf	((?_printf))+1
  7709  1EBC  3194  24A0  319E   	fcall	_printf
  7710                           	line	146
  7711                           	
  7712  1EBF                     l38449:	
  7713                           ;litterlanguage.c: 146: error_fill = 1;
  7714  1EBF  17F0               	bsf	(_error_fill/8),(_error_fill)&7
  7715                           	line	147
  7716                           	
  7717  1EC0                     l38451:	
  7718                           ;litterlanguage.c: 147: litterlanguage_event(1, error_fill);
  7719  1EC0  3000               	movlw	0
  7720  1EC1  1BF0               	btfsc	(_error_fill/8),(_error_fill)&7
  7721  1EC2  3001               	movlw	1
  7722  1EC3  0020               	movlb 0	; select bank0
  7723  1EC4  00D1               	movwf	(??_litterlanguage_work+0)+0
  7724  1EC5  0851               	movf	(??_litterlanguage_work+0)+0,w
  7725  1EC6  00A1               	movwf	(?_litterlanguage_event)
  7726  1EC7  3001               	movlw	(01h)
  7727  1EC8  3198  2000  319E   	fcall	_litterlanguage_event
  7728  1ECB  2ECC               	goto	l38453
  7729                           	line	148
  7730                           	
  7731  1ECC                     l4243:	
  7732                           	line	153
  7733                           	
  7734  1ECC                     l38453:	
  7735                           ;litterlanguage.c: 148: }
  7736                           ;litterlanguage.c: 151: if( water_detected() &&
  7737                           ;litterlanguage.c: 152: get_Pump() &&
  7738                           ;litterlanguage.c: 153: timeoutexpired(&timer_drain) ){
  7739  1ECC  31B7  27D8  319E   	fcall	_water_detected
  7740  1ECF  3A00               	xorlw	0&0ffh
  7741  1ED0  1903               	skipnz
  7742  1ED1  2ED3               	goto	u12041
  7743  1ED2  2ED4               	goto	u12040
  7744  1ED3                     u12041:
  7745  1ED3  2F01               	goto	l38465
  7746  1ED4                     u12040:
  7747                           	
  7748  1ED4                     l38455:	
  7749  1ED4  31B7  27C9  319E   	fcall	_get_Pump
  7750  1ED7  3A00               	xorlw	0&0ffh
  7751  1ED8  1903               	skipnz
  7752  1ED9  2EDB               	goto	u12051
  7753  1EDA  2EDC               	goto	u12050
  7754  1EDB                     u12051:
  7755  1EDB  2F01               	goto	l38465
  7756  1EDC                     u12050:
  7757                           	
  7758  1EDC                     l38457:	
  7759  1EDC  30E3               	movlw	(_timer_drain&0ffh)
  7760  1EDD  0020               	movlb 0	; select bank0
  7761  1EDE  00A9               	movwf	(?_timeoutexpired)
  7762  1EDF  3000               	movlw	0x1/2
  7763  1EE0  00AA               	movwf	(?_timeoutexpired+1)
  7764  1EE1  31A3  235B  319E   	fcall	_timeoutexpired
  7765  1EE4  3A00               	xorlw	0&0ffh
  7766  1EE5  1903               	skipnz
  7767  1EE6  2EE8               	goto	u12061
  7768  1EE7  2EE9               	goto	u12060
  7769  1EE8                     u12061:
  7770  1EE8  2F01               	goto	l38465
  7771  1EE9                     u12060:
  7772                           	line	154
  7773                           	
  7774  1EE9                     l38459:	
  7775                           ;litterlanguage.c: 154: printtime();
  7776  1EE9  31AB  23ED  319E   	fcall	_printtime
  7777                           	line	155
  7778                           ;litterlanguage.c: 155: printf("Drain timeout\n");
  7779  1EEC  30AE               	movlw	low(STR_16|8000h)
  7780  1EED  0020               	movlb 0	; select bank0
  7781  1EEE  00AF               	movwf	(?_printf)
  7782  1EEF  3087               	movlw	high(STR_16|8000h)
  7783  1EF0  00B0               	movwf	((?_printf))+1
  7784  1EF1  3194  24A0  319E   	fcall	_printf
  7785                           	line	157
  7786                           	
  7787  1EF4                     l38461:	
  7788                           ;litterlanguage.c: 157: error_drain = 1;
  7789  1EF4  16F0               	bsf	(_error_drain/8),(_error_drain)&7
  7790                           	line	158
  7791                           	
  7792  1EF5                     l38463:	
  7793                           ;litterlanguage.c: 158: litterlanguage_event(2, error_drain);
  7794  1EF5  3000               	movlw	0
  7795  1EF6  1AF0               	btfsc	(_error_drain/8),(_error_drain)&7
  7796  1EF7  3001               	movlw	1
  7797  1EF8  0020               	movlb 0	; select bank0
  7798  1EF9  00D1               	movwf	(??_litterlanguage_work+0)+0
  7799  1EFA  0851               	movf	(??_litterlanguage_work+0)+0,w
  7800  1EFB  00A1               	movwf	(?_litterlanguage_event)
  7801  1EFC  3002               	movlw	(02h)
  7802  1EFD  3198  2000  319E   	fcall	_litterlanguage_event
  7803  1F00  2F01               	goto	l38465
  7804                           	line	159
  7805                           	
  7806  1F01                     l4244:	
  7807                           	line	161
  7808                           	
  7809  1F01                     l38465:	
  7810                           ;litterlanguage.c: 159: }
  7811                           ;litterlanguage.c: 161: if (timeoutexpired(&timer_autodose)) {
  7812  1F01  3064               	movlw	(_timer_autodose&0ffh)
  7813  1F02  0020               	movlb 0	; select bank0
  7814  1F03  00A9               	movwf	(?_timeoutexpired)
  7815  1F04  3001               	movlw	0x2/2
  7816  1F05  00AA               	movwf	(?_timeoutexpired+1)
  7817  1F06  31A3  235B  319E   	fcall	_timeoutexpired
  7818  1F09  3A00               	xorlw	0&0ffh
  7819  1F0A  1903               	skipnz
  7820  1F0B  2F0D               	goto	u12071
  7821  1F0C  2F0E               	goto	u12070
  7822  1F0D                     u12071:
  7823  1F0D  2FF4               	goto	l38521
  7824  1F0E                     u12070:
  7825                           	line	162
  7826                           	
  7827  1F0E                     l38467:	
  7828                           ;litterlanguage.c: 162: timeoutnever(&timer_autodose);
  7829  1F0E  3064               	movlw	(_timer_autodose&0ffh)
  7830  1F0F  0020               	movlb 0	; select bank0
  7831  1F10  00A5               	movwf	(?_timeoutnever)
  7832  1F11  3001               	movlw	0x2/2
  7833  1F12  00A6               	movwf	(?_timeoutnever+1)
  7834  1F13  31AA  222C  319E   	fcall	_timeoutnever
  7835                           	line	163
  7836                           	
  7837  1F16                     l38469:	
  7838                           ;litterlanguage.c: 163: set_Dosage(0);
  7839  1F16  3000               	movlw	(0)
  7840  1F17  31A8  20ED  319E   	fcall	_set_Dosage
  7841  1F1A  2FF4               	goto	l38521
  7842                           	line	164
  7843                           	
  7844  1F1B                     l4245:	
  7845  1F1B  2FF4               	goto	l38521
  7846                           	line	165
  7847                           	
  7848  1F1C                     l4242:	
  7849                           	line	168
  7850                           ;litterlanguage.c: 164: }
  7851                           ;litterlanguage.c: 165: }
  7852                           ;litterlanguage.c: 168: switch (ins_state) {
  7853  1F1C  2FF4               	goto	l38521
  7854                           	line	169
  7855                           ;litterlanguage.c: 169: case 0:
  7856                           	
  7857  1F1D                     l4247:	
  7858                           	line	170
  7859                           ;litterlanguage.c: 170: break;
  7860  1F1D  2FFF               	goto	l4241
  7861                           	line	172
  7862                           ;litterlanguage.c: 172: case 1:
  7863                           	
  7864  1F1E                     l4249:	
  7865                           	line	173
  7866                           ;litterlanguage.c: 173: error_execution = 0;
  7867  1F1E  1370               	bcf	(_error_execution/8),(_error_execution)&7
  7868                           	line	174
  7869                           	
  7870  1F1F                     l38471:	
  7871                           ;litterlanguage.c: 174: litterlanguage_event(4, error_execution);
  7872  1F1F  3000               	movlw	0
  7873  1F20  1B70               	btfsc	(_error_execution/8),(_error_execution)&7
  7874  1F21  3001               	movlw	1
  7875  1F22  00D1               	movwf	(??_litterlanguage_work+0)+0
  7876  1F23  0851               	movf	(??_litterlanguage_work+0)+0,w
  7877  1F24  00A1               	movwf	(?_litterlanguage_event)
  7878  1F25  3004               	movlw	(04h)
  7879  1F26  3198  2000  319E   	fcall	_litterlanguage_event
  7880                           	line	175
  7881                           ;litterlanguage.c: 175: req_instruction(ins_pointer);
  7882  1F29  0020               	movlb 0	; select bank0
  7883  1F2A  086C               	movf	(_ins_pointer+1),w
  7884  1F2B  01A4               	clrf	(?_req_instruction+1)
  7885  1F2C  07A4               	addwf	(?_req_instruction+1)
  7886  1F2D  086B               	movf	(_ins_pointer),w
  7887  1F2E  01A3               	clrf	(?_req_instruction)
  7888  1F2F  07A3               	addwf	(?_req_instruction)
  7889                           
  7890  1F30  31A9  2143  319E   	fcall	_req_instruction
  7891                           	line	176
  7892                           	
  7893  1F33                     l38473:	
  7894                           ;litterlanguage.c: 176: ins_state = 2;
  7895  1F33  3002               	movlw	(02h)
  7896  1F34  0020               	movlb 0	; select bank0
  7897  1F35  00D1               	movwf	(??_litterlanguage_work+0)+0
  7898  1F36  0851               	movf	(??_litterlanguage_work+0)+0,w
  7899  1F37  00E5               	movwf	(_ins_state)
  7900  1F38  2F39               	goto	l38475
  7901                           	line	179
  7902                           ;litterlanguage.c: 179: case 2:
  7903                           	
  7904  1F39                     l4250:	
  7905                           	line	180
  7906                           	
  7907  1F39                     l38475:	
  7908                           ;litterlanguage.c: 180: if (get_instruction(&cur_instruction)) {
  7909  1F39  3068               	movlw	(_cur_instruction)&0ffh
  7910  1F3A  31A9  2156  319E   	fcall	_get_instruction
  7911  1F3D  3A00               	xorlw	0&0ffh
  7912  1F3E  1903               	skipnz
  7913  1F3F  2F41               	goto	u12081
  7914  1F40  2F42               	goto	u12080
  7915  1F41                     u12081:
  7916  1F41  2FFF               	goto	l4241
  7917  1F42                     u12080:
  7918                           	line	182
  7919                           	
  7920  1F42                     l38477:	
  7921                           ;litterlanguage.c: 182: printf("IP 0x%04X: ", ins_pointer);
  7922  1F42  3039               	movlw	low(STR_17|8000h)
  7923  1F43  0020               	movlb 0	; select bank0
  7924  1F44  00AF               	movwf	(?_printf)
  7925  1F45  3088               	movlw	high(STR_17|8000h)
  7926  1F46  00B0               	movwf	((?_printf))+1
  7927  1F47  086C               	movf	(_ins_pointer+1),w
  7928  1F48  01B2               	clrf	(1+?_printf+02h)
  7929  1F49  07B2               	addwf	(1+?_printf+02h)
  7930  1F4A  086B               	movf	(_ins_pointer),w
  7931  1F4B  01B1               	clrf	(0+?_printf+02h)
  7932  1F4C  07B1               	addwf	(0+?_printf+02h)
  7933                           
  7934  1F4D  3194  24A0  319E   	fcall	_printf
  7935                           	line	184
  7936                           	
  7937  1F50                     l38479:	
  7938                           ;litterlanguage.c: 184: if (cur_instruction.opcode == 0x00) {
  7939  1F50  0020               	movlb 0	; select bank0
  7940  1F51  08E8               	movf	(_cur_instruction),f
  7941  1F52  1D03               	skipz
  7942  1F53  2F55               	goto	u12091
  7943  1F54  2F56               	goto	u12090
  7944  1F55                     u12091:
  7945  1F55  2FB8               	goto	l4252
  7946  1F56                     u12090:
  7947                           	line	186
  7948                           	
  7949  1F56                     l38481:	
  7950                           ;litterlanguage.c: 186: printf("INS_START, %s", wet_program?"wet":"dry");
  7951  1F56  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  7952  1F57  2F59               	goto	u12101
  7953  1F58  2F5A               	goto	u12100
  7954  1F59                     u12101:
  7955  1F59  2F5F               	goto	l38485
  7956  1F5A                     u12100:
  7957                           	
  7958  1F5A                     l38483:	
  7959  1F5A  303E               	movlw	low(STR_20|8000h)
  7960  1F5B  00D3               	movwf	(_litterlanguage_work$5880)
  7961  1F5C  3089               	movlw	high(STR_20|8000h)
  7962  1F5D  00D4               	movwf	((_litterlanguage_work$5880))+1
  7963  1F5E  2F64               	goto	l38487
  7964                           	
  7965  1F5F                     l4254:	
  7966                           	
  7967  1F5F                     l38485:	
  7968  1F5F  3036               	movlw	low(STR_19|8000h)
  7969  1F60  00D3               	movwf	(_litterlanguage_work$5880)
  7970  1F61  3089               	movlw	high(STR_19|8000h)
  7971  1F62  00D4               	movwf	((_litterlanguage_work$5880))+1
  7972  1F63  2F64               	goto	l38487
  7973                           	
  7974  1F64                     l4256:	
  7975                           	
  7976  1F64                     l38487:	
  7977  1F64  3005               	movlw	low(STR_18|8000h)
  7978  1F65  00AF               	movwf	(?_printf)
  7979  1F66  3088               	movlw	high(STR_18|8000h)
  7980  1F67  00B0               	movwf	((?_printf))+1
  7981  1F68  0854               	movf	(_litterlanguage_work$5880+1),w
  7982  1F69  01B2               	clrf	(1+?_printf+02h)
  7983  1F6A  07B2               	addwf	(1+?_printf+02h)
  7984  1F6B  0853               	movf	(_litterlanguage_work$5880),w
  7985  1F6C  01B1               	clrf	(0+?_printf+02h)
  7986  1F6D  07B1               	addwf	(0+?_printf+02h)
  7987                           
  7988  1F6E  3194  24A0  319E   	fcall	_printf
  7989                           	line	191
  7990                           	
  7991  1F71                     l38489:	
  7992                           ;litterlanguage.c: 189: if( ((cur_instruction.operant & 0x00FF) <= 0x0E) &&
  7993                           ;litterlanguage.c: 190: ( (!wet_program && (cur_instruction.operant & 0x0200)) ||
  7994                           ;litterlanguage.c: 191: (wet_program && (cur_instruction.operant & 0x0400)) ) ) {
  7995  1F71  30FF               	movlw	low(0FFh)
  7996  1F72  0020               	movlb 0	; select bank0
  7997  1F73  0569               	andwf	0+(_cur_instruction)+01h,w
  7998  1F74  00D1               	movwf	(??_litterlanguage_work+0)+0
  7999  1F75  3000               	movlw	high(0FFh)
  8000  1F76  056A               	andwf	1+(_cur_instruction)+01h,w
  8001  1F77  00D2               	movwf	1+(??_litterlanguage_work+0)+0
  8002  1F78  3000               	movlw	high(0Fh)
  8003  1F79  0252               	subwf	1+(??_litterlanguage_work+0)+0,w
  8004  1F7A  300F               	movlw	low(0Fh)
  8005  1F7B  1903               	skipnz
  8006  1F7C  0251               	subwf	0+(??_litterlanguage_work+0)+0,w
  8007  1F7D  1803               	skipnc
  8008  1F7E  2F80               	goto	u12111
  8009  1F7F  2F81               	goto	u12110
  8010  1F80                     u12111:
  8011  1F80  2FAE               	goto	l4257
  8012  1F81                     u12110:
  8013                           	
  8014  1F81                     l38491:	
  8015  1F81  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
  8016  1F82  2F84               	goto	u12121
  8017  1F83  2F85               	goto	u12120
  8018  1F84                     u12121:
  8019  1F84  2F89               	goto	l4261
  8020  1F85                     u12120:
  8021                           	
  8022  1F85                     l38493:	
  8023  1F85  18EA               	btfsc	1+(_cur_instruction)+01h,(9)&7
  8024  1F86  2F88               	goto	u12131
  8025  1F87  2F89               	goto	u12130
  8026  1F88                     u12131:
  8027  1F88  2F92               	goto	l38497
  8028  1F89                     u12130:
  8029                           	
  8030  1F89                     l4261:	
  8031  1F89  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
  8032  1F8A  2F8C               	goto	u12141
  8033  1F8B  2F8D               	goto	u12140
  8034  1F8C                     u12141:
  8035  1F8C  2FAE               	goto	l4257
  8036  1F8D                     u12140:
  8037                           	
  8038  1F8D                     l38495:	
  8039  1F8D  1D6A               	btfss	1+(_cur_instruction)+01h,(10)&7
  8040  1F8E  2F90               	goto	u12151
  8041  1F8F  2F91               	goto	u12150
  8042  1F90                     u12151:
  8043  1F90  2FAE               	goto	l4257
  8044  1F91                     u12150:
  8045  1F91  2F92               	goto	l38497
  8046                           	
  8047  1F92                     l4259:	
  8048                           	line	192
  8049                           	
  8050  1F92                     l38497:	
  8051                           ;litterlanguage.c: 192: if (eeprom_read((3)) < 1)
  8052  1F92  3003               	movlw	(03h)
  8053  1F93  31AA  22DC  319E   	fcall	_eeprom_read
  8054  1F96  3800               	iorlw	0
  8055  1F97  1D03               	skipz
  8056  1F98  2F9A               	goto	u12161
  8057  1F99  2F9B               	goto	u12160
  8058  1F9A                     u12161:
  8059  1F9A  2FA4               	goto	l38501
  8060  1F9B                     u12160:
  8061                           	line	193
  8062                           	
  8063  1F9B                     l38499:	
  8064                           ;litterlanguage.c: 193: eeprom_write((3), 1);
  8065  1F9B  0020               	movlb 0	; select bank0
  8066  1F9C  01A1               	clrf	(?_eeprom_write)
  8067  1F9D  1403               	bsf	status,0
  8068  1F9E  0DA1               	rlf	(?_eeprom_write),f
  8069  1F9F  3003               	movlw	(03h)
  8070  1FA0  31AC  24A5  319E   	fcall	_eeprom_write
  8071  1FA3  2FA4               	goto	l38501
  8072                           	
  8073  1FA4                     l4262:	
  8074                           	line	194
  8075                           	
  8076  1FA4                     l38501:	
  8077                           ;litterlanguage.c: 194: ins_pointer++;
  8078  1FA4  3003               	movlw	low(03h)
  8079  1FA5  0020               	movlb 0	; select bank0
  8080  1FA6  07EB               	addwf	(_ins_pointer),f
  8081  1FA7  3000               	movlw	high(03h)
  8082  1FA8  3DEC               	addwfc	(_ins_pointer+1),f
  8083                           	line	195
  8084                           	
  8085  1FA9                     l38503:	
  8086                           ;litterlanguage.c: 195: ins_state = 3;
  8087  1FA9  3003               	movlw	(03h)
  8088  1FAA  00D1               	movwf	(??_litterlanguage_work+0)+0
  8089  1FAB  0851               	movf	(??_litterlanguage_work+0)+0,w
  8090  1FAC  00E5               	movwf	(_ins_state)
  8091                           	line	196
  8092                           ;litterlanguage.c: 196: } else {
  8093  1FAD  2FC7               	goto	l4264
  8094                           	
  8095  1FAE                     l4257:	
  8096                           	line	197
  8097                           ;litterlanguage.c: 197: ins_state = 0;
  8098  1FAE  01E5               	clrf	(_ins_state)
  8099                           	line	199
  8100                           	
  8101  1FAF                     l38505:	
  8102                           ;litterlanguage.c: 199: printf(", incompatible");
  8103  1FAF  30BD               	movlw	low(STR_21|8000h)
  8104  1FB0  00AF               	movwf	(?_printf)
  8105  1FB1  3087               	movlw	high(STR_21|8000h)
  8106  1FB2  00B0               	movwf	((?_printf))+1
  8107  1FB3  3194  24A0  319E   	fcall	_printf
  8108  1FB6  2FC7               	goto	l4264
  8109                           	line	201
  8110                           	
  8111  1FB7                     l4263:	
  8112                           	line	202
  8113                           ;litterlanguage.c: 201: }
  8114                           ;litterlanguage.c: 202: } else {
  8115  1FB7  2FC7               	goto	l4264
  8116                           	
  8117  1FB8                     l4252:	
  8118                           	line	203
  8119                           ;litterlanguage.c: 203: ins_state = 0;
  8120  1FB8  01E5               	clrf	(_ins_state)
  8121                           	line	205
  8122                           	
  8123  1FB9                     l38507:	
  8124                           ;litterlanguage.c: 205: printf(", no start: 0x%X", cur_instruction.opcode);
  8125  1FB9  300B               	movlw	low(STR_22|8000h)
  8126  1FBA  00AF               	movwf	(?_printf)
  8127  1FBB  3087               	movlw	high(STR_22|8000h)
  8128  1FBC  00B0               	movwf	((?_printf))+1
  8129  1FBD  0868               	movf	(_cur_instruction),w
  8130  1FBE  00D1               	movwf	(??_litterlanguage_work+0)+0
  8131  1FBF  01D2               	clrf	(??_litterlanguage_work+0)+0+1
  8132  1FC0  0851               	movf	0+(??_litterlanguage_work+0)+0,w
  8133  1FC1  00B1               	movwf	0+(?_printf)+02h
  8134  1FC2  0852               	movf	1+(??_litterlanguage_work+0)+0,w
  8135  1FC3  00B2               	movwf	1+(?_printf)+02h
  8136  1FC4  3194  24A0  319E   	fcall	_printf
  8137                           	line	207
  8138                           	
  8139  1FC7                     l4264:	
  8140                           	line	209
  8141                           ;litterlanguage.c: 207: }
  8142                           ;litterlanguage.c: 209: printf("\n");
  8143  1FC7  30F5               	movlw	low(STR_23|8000h)
  8144  1FC8  0020               	movlb 0	; select bank0
  8145  1FC9  00AF               	movwf	(?_printf)
  8146  1FCA  3087               	movlw	high(STR_23|8000h)
  8147  1FCB  00B0               	movwf	((?_printf))+1
  8148  1FCC  3194  24A0  319E   	fcall	_printf
  8149  1FCF  2FFF               	goto	l4241
  8150                           	line	211
  8151                           	
  8152  1FD0                     l4251:	
  8153                           	line	212
  8154                           ;litterlanguage.c: 211: }
  8155                           ;litterlanguage.c: 212: break;
  8156  1FD0  2FFF               	goto	l4241
  8157                           	line	214
  8158                           ;litterlanguage.c: 214: case 3:
  8159                           	
  8160  1FD1                     l4265:	
  8161                           	line	215
  8162                           	
  8163  1FD1                     l38509:	
  8164                           ;litterlanguage.c: 215: req_instruction(ins_pointer);
  8165  1FD1  0020               	movlb 0	; select bank0
  8166  1FD2  086C               	movf	(_ins_pointer+1),w
  8167  1FD3  01A4               	clrf	(?_req_instruction+1)
  8168  1FD4  07A4               	addwf	(?_req_instruction+1)
  8169  1FD5  086B               	movf	(_ins_pointer),w
  8170  1FD6  01A3               	clrf	(?_req_instruction)
  8171  1FD7  07A3               	addwf	(?_req_instruction)
  8172                           
  8173  1FD8  31A9  2143  319E   	fcall	_req_instruction
  8174                           	line	216
  8175                           	
  8176  1FDB                     l38511:	
  8177                           ;litterlanguage.c: 216: ins_state = 4;
  8178  1FDB  3004               	movlw	(04h)
  8179  1FDC  0020               	movlb 0	; select bank0
  8180  1FDD  00D1               	movwf	(??_litterlanguage_work+0)+0
  8181  1FDE  0851               	movf	(??_litterlanguage_work+0)+0,w
  8182  1FDF  00E5               	movwf	(_ins_state)
  8183  1FE0  2FE1               	goto	l38513
  8184                           	line	219
  8185                           ;litterlanguage.c: 219: case 4:
  8186                           	
  8187  1FE1                     l4266:	
  8188                           	line	220
  8189                           	
  8190  1FE1                     l38513:	
  8191                           ;litterlanguage.c: 220: if (get_instruction(&cur_instruction)) {
  8192  1FE1  3068               	movlw	(_cur_instruction)&0ffh
  8193  1FE2  31A9  2156  319E   	fcall	_get_instruction
  8194  1FE5  3A00               	xorlw	0&0ffh
  8195  1FE6  1903               	skipnz
  8196  1FE7  2FE9               	goto	u12171
  8197  1FE8  2FEA               	goto	u12170
  8198  1FE9                     u12171:
  8199  1FE9  2FFF               	goto	l4241
  8200  1FEA                     u12170:
  8201                           	line	222
  8202                           	
  8203  1FEA                     l38515:	
  8204                           ;litterlanguage.c: 222: exe_instruction();
  8205  1FEA  318B  233D  319E   	fcall	_exe_instruction
  8206  1FED  2FFF               	goto	l4241
  8207                           	line	223
  8208                           	
  8209  1FEE                     l4267:	
  8210                           	line	224
  8211                           ;litterlanguage.c: 223: }
  8212                           ;litterlanguage.c: 224: break;
  8213  1FEE  2FFF               	goto	l4241
  8214                           	line	226
  8215                           ;litterlanguage.c: 226: case 5:
  8216                           	
  8217  1FEF                     l4268:	
  8218                           	line	227
  8219                           	
  8220  1FEF                     l38517:	
  8221                           ;litterlanguage.c: 227: wait_instruction();
  8222  1FEF  31A5  2537  319E   	fcall	_wait_instruction
  8223                           	line	228
  8224                           ;litterlanguage.c: 228: break;
  8225  1FF2  2FFF               	goto	l4241
  8226                           	line	229
  8227                           	
  8228  1FF3                     l38519:	
  8229                           ;litterlanguage.c: 229: }
  8230  1FF3  2FFF               	goto	l4241
  8231                           	line	168
  8232                           	
  8233  1FF4                     l4246:	
  8234                           	
  8235  1FF4                     l38521:	
  8236  1FF4  0020               	movlb 0	; select bank0
  8237  1FF5  0865               	movf	(_ins_state),w
  8238                           	; Switch size 1, requested type "space"
  8239                           ; Number of cases is 6, Range of values is 0 to 5
  8240                           ; switch strategies available:
  8241                           ; Name         Instructions Cycles
  8242                           ; direct_byte           18     6 (fixed)
  8243                           ; simple_byte           19    10 (average)
  8244                           ; jumptable            260     6 (fixed)
  8245                           ; rangetable            10     4 (fixed)
  8246                           ; spacedrange           17     6 (fixed)
  8247                           ; locatedrange           6     3 (fixed)
  8248                           ;	Chosen strategy is direct_byte
  8249                           
  8250  1FF6  0084               	movwf fsr0l
  8251  1FF7  3006               	movlw	6
  8252  1FF8  0204               	subwf	fsr0l,w
  8253  1FF9  1803               skipnc
  8254  1FFA  2FFF               goto l4241
  8255  1FFB  3180               movlp high(S38919)
  8256  1FFC  3504               	lslf fsr0l,w
  8257  1FFD  3EF3               	addlw low(S38919)
  8258  1FFE  0082               	movwf pc
  8259                           psect	swtext1,local,class=CONST,delta=2
  8260                           global __pswtext1
  8261  00F3                     __pswtext1:
  8262  00F3                     S38919:
  8263  00F3  319F  2FFF         	ljmp	l4241
  8264  00F5  319F  2F1E         	ljmp	l4249
  8265  00F7  319F  2F39         	ljmp	l38475
  8266  00F9  319F  2FD1         	ljmp	l38509
  8267  00FB  319F  2FE1         	ljmp	l38513
  8268  00FD  319F  2FEF         	ljmp	l38517
  8269                           psect	text3225
  8270                           
  8271                           	line	229
  8272                           	
  8273  1FFF                     l4248:	
  8274                           	line	230
  8275                           	
  8276  1FFF                     l4241:	
  8277  1FFF  0008               	return
  8278                           	opt stack 0
  8279                           GLOBAL	__end_of_litterlanguage_work
  8280  2000                     	__end_of_litterlanguage_work:
  8281 ;; =============== function _litterlanguage_work ends ============
  8282                           
  8283                           	signat	_litterlanguage_work,88
  8284                           	global	_cmdline_work
  8285                           psect	text3226,local,class=CODE,delta=2
  8286                           global __ptext3226
  8287  2ABD                     __ptext3226:
  8288                           
  8289 ;; *************** function _cmdline_work *****************
  8290 ;; Defined at:
  8291 ;;		line 72 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  rxd             1   62[BANK0 ] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;		None               void
  8298 ;; Registers used:
  8299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8308 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8309 ;;Total ram usage:        1 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    7
  8312 ;; This function calls:
  8313 ;;		_putch
  8314 ;;		_proc_char
  8315 ;;		_readch
  8316 ;; This function is called by:
  8317 ;;		_main
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           psect	text3226
  8321                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  8322                           	line	72
  8323                           	global	__size_of_cmdline_work
  8324  001F                     	__size_of_cmdline_work	equ	__end_of_cmdline_work-_cmdline_work
  8325                           	
  8326  2ABD                     _cmdline_work:	
  8327                           	opt	stack 8
  8328                           ; Regs used in _cmdline_work: [allreg]
  8329                           	line	75
  8330                           	
  8331  2ABD                     l38425:	
  8332                           ;cmdline.c: 73: char rxd ;
  8333                           ;cmdline.c: 75: while (readch(&rxd))
  8334  2ABD  2AD1               	goto	l38433
  8335                           	
  8336  2ABE                     l15088:	
  8337                           	line	76
  8338                           ;cmdline.c: 76: switch(rxd) {
  8339  2ABE  2ACA               	goto	l38431
  8340                           	line	77
  8341                           ;cmdline.c: 77: case 0x05:
  8342                           	
  8343  2ABF                     l15090:	
  8344                           	line	78
  8345                           	
  8346  2ABF                     l38427:	
  8347                           ;cmdline.c: 78: putch(0x06);
  8348  2ABF  3006               	movlw	(06h)
  8349  2AC0  31AB  23C0  31AA   	fcall	_putch
  8350                           	line	79
  8351                           ;cmdline.c: 79: break;
  8352  2AC3  2AD1               	goto	l38433
  8353                           	line	80
  8354                           ;cmdline.c: 80: default:
  8355                           	
  8356  2AC4                     l15092:	
  8357                           	line	81
  8358                           	
  8359  2AC4                     l38429:	
  8360                           ;cmdline.c: 81: proc_char(rxd);
  8361  2AC4  0020               	movlb 0	; select bank0
  8362  2AC5  085F               	movf	(cmdline_work@rxd),w
  8363  2AC6  3198  200C  31AA   	fcall	_proc_char
  8364                           	line	82
  8365                           ;cmdline.c: 82: }
  8366  2AC9  2AD1               	goto	l38433
  8367                           	line	76
  8368                           	
  8369  2ACA                     l15089:	
  8370                           	
  8371  2ACA                     l38431:	
  8372  2ACA  0020               	movlb 0	; select bank0
  8373  2ACB  085F               	movf	(cmdline_work@rxd),w
  8374                           	; Switch size 1, requested type "space"
  8375                           ; Number of cases is 1, Range of values is 5 to 5
  8376                           ; switch strategies available:
  8377                           ; Name         Instructions Cycles
  8378                           ; simple_byte            4     3 (average)
  8379                           ; direct_byte           11     9 (fixed)
  8380                           ; jumptable            263     9 (fixed)
  8381                           ;	Chosen strategy is simple_byte
  8382                           
  8383                           	opt asmopt_off
  8384  2ACC  3A05               	xorlw	5^0	; case 5
  8385  2ACD  1903               	skipnz
  8386  2ACE  2ABF               	goto	l38427
  8387  2ACF  2AC4               	goto	l38429
  8388                           	opt asmopt_on
  8389                           
  8390                           	line	82
  8391                           	
  8392  2AD0                     l15091:	
  8393  2AD0  2AD1               	goto	l38433
  8394                           	
  8395  2AD1                     l15087:	
  8396                           	line	75
  8397                           	
  8398  2AD1                     l38433:	
  8399  2AD1  305F               	movlw	(cmdline_work@rxd)&0ffh
  8400  2AD2  31A2  227E  31AA   	fcall	_readch
  8401  2AD5  3800               	iorlw	0
  8402  2AD6  1D03               	skipz
  8403  2AD7  2AD9               	goto	u11981
  8404  2AD8  2ADA               	goto	u11980
  8405  2AD9                     u11981:
  8406  2AD9  2ACA               	goto	l38431
  8407  2ADA                     u11980:
  8408  2ADA  2ADB               	goto	l15094
  8409                           	
  8410  2ADB                     l15093:	
  8411                           	line	83
  8412                           	
  8413  2ADB                     l15094:	
  8414  2ADB  0008               	return
  8415                           	opt stack 0
  8416                           GLOBAL	__end_of_cmdline_work
  8417  2ADC                     	__end_of_cmdline_work:
  8418 ;; =============== function _cmdline_work ends ============
  8419                           
  8420                           	signat	_cmdline_work,88
  8421                           	global	_userinterface_work
  8422                           psect	text3227,local,class=CODE,delta=2
  8423                           global __ptext3227
  8424  1D2E                     __ptext3227:
  8425                           
  8426 ;; *************** function _userinterface_work *****************
  8427 ;; Defined at:
  8428 ;;		line 129 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;  update          1   57[BANK0 ] unsigned char 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;		None               void
  8435 ;; Registers used:
  8436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8445 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8446 ;;Total ram usage:        3 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; Hardware stack levels required when called:    7
  8449 ;; This function calls:
  8450 ;;		_timeoutexpired
  8451 ;;		_update_autotimer
  8452 ;;		_printtime
  8453 ;;		_printf
  8454 ;;		_litterlanguage_start
  8455 ;;		_litterlanguage_running
  8456 ;;		_timeoutnow
  8457 ;;		_start_short
  8458 ;;		_setup_short
  8459 ;;		_both_short
  8460 ;;		_set_Beeper
  8461 ;;		_start_long
  8462 ;;		_setup_long
  8463 ;;		_both_long
  8464 ;;		_timeoutnever
  8465 ;;		_update_display
  8466 ;; This function is called by:
  8467 ;;		_main
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           psect	text3227
  8471                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  8472                           	line	129
  8473                           	global	__size_of_userinterface_work
  8474  015E                     	__size_of_userinterface_work	equ	__end_of_userinterface_work-_userinterface_work
  8475                           	
  8476  1D2E                     _userinterface_work:	
  8477                           	opt	stack 8
  8478                           ; Regs used in _userinterface_work: [wreg-status,0+pclath+cstack]
  8479                           	line	130
  8480                           	
  8481  1D2E                     l38311:	
  8482                           ;userinterface.c: 130: unsigned char update = 0;
  8483  1D2E  0020               	movlb 0	; select bank0
  8484  1D2F  01DA               	clrf	(userinterface_work@update)
  8485                           	line	133
  8486                           	
  8487  1D30                     l38313:	
  8488                           ;userinterface.c: 132: if( (panel_mode == 1) &&
  8489                           ;userinterface.c: 133: (timeoutexpired(&cartridgetimeout)) ) {
  8490  1D30  0021               	movlb 1	; select bank1
  8491  1D31  0859               	movf	(_panel_mode)^080h,w
  8492  1D32  3A01               	xorlw	01h&0ffh
  8493  1D33  1D03               	skipz
  8494  1D34  2D36               	goto	u11871
  8495  1D35  2D37               	goto	u11870
  8496  1D36                     u11871:
  8497  1D36  2DE7               	goto	l38363
  8498  1D37                     u11870:
  8499                           	
  8500  1D37                     l38315:	
  8501  1D37  303A               	movlw	(_cartridgetimeout&0ffh)
  8502  1D38  0020               	movlb 0	; select bank0
  8503  1D39  00A9               	movwf	(?_timeoutexpired)
  8504  1D3A  3001               	movlw	0x2/2
  8505  1D3B  00AA               	movwf	(?_timeoutexpired+1)
  8506  1D3C  31A3  235B  319D   	fcall	_timeoutexpired
  8507  1D3F  3A00               	xorlw	0&0ffh
  8508  1D40  1903               	skipnz
  8509  1D41  2D43               	goto	u11881
  8510  1D42  2D44               	goto	u11880
  8511  1D43                     u11881:
  8512  1D43  2DE7               	goto	l38363
  8513  1D44                     u11880:
  8514                           	line	134
  8515                           	
  8516  1D44                     l38317:	
  8517                           ;userinterface.c: 134: if (error_nr)
  8518  1D44  0020               	movlb 0	; select bank0
  8519  1D45  0863               	movf	(_error_nr),w
  8520  1D46  1D03               	skipz
  8521  1D47  2D49               	goto	u11890
  8522  1D48  2D4F               	goto	l8639
  8523  1D49                     u11890:
  8524                           	line	135
  8525                           	
  8526  1D49                     l38319:	
  8527                           ;userinterface.c: 135: panel_mode = 2;
  8528  1D49  3002               	movlw	(02h)
  8529  1D4A  00D8               	movwf	(??_userinterface_work+0)+0
  8530  1D4B  0858               	movf	(??_userinterface_work+0)+0,w
  8531  1D4C  0021               	movlb 1	; select bank1
  8532  1D4D  00D9               	movwf	(_panel_mode)^080h
  8533  1D4E  2D52               	goto	l38321
  8534                           	line	136
  8535                           	
  8536  1D4F                     l8639:	
  8537                           	line	137
  8538                           ;userinterface.c: 136: else
  8539                           ;userinterface.c: 137: panel_mode = 0;
  8540  1D4F  0021               	movlb 1	; select bank1
  8541  1D50  01D9               	clrf	(_panel_mode)^080h
  8542  1D51  2D52               	goto	l38321
  8543                           	
  8544  1D52                     l8640:	
  8545                           	line	138
  8546                           	
  8547  1D52                     l38321:	
  8548                           ;userinterface.c: 138: update = 1;
  8549  1D52  0020               	movlb 0	; select bank0
  8550  1D53  01DA               	clrf	(userinterface_work@update)
  8551  1D54  1403               	bsf	status,0
  8552  1D55  0DDA               	rlf	(userinterface_work@update),f
  8553  1D56  2DE7               	goto	l38363
  8554                           	line	139
  8555                           	
  8556  1D57                     l8638:	
  8557                           	line	141
  8558                           ;userinterface.c: 139: }
  8559                           ;userinterface.c: 141: switch(state) {
  8560  1D57  2DE7               	goto	l38363
  8561                           	line	142
  8562                           ;userinterface.c: 142: default:
  8563                           	
  8564  1D58                     l8642:	
  8565                           	line	143
  8566                           ;userinterface.c: 143: state = 0;
  8567  1D58  01E6               	clrf	(_state)
  8568  1D59  2D5A               	goto	l38323
  8569                           	line	144
  8570                           ;userinterface.c: 144: case 0:
  8571                           	
  8572  1D5A                     l8643:	
  8573                           	line	146
  8574                           	
  8575  1D5A                     l38323:	
  8576                           ;userinterface.c: 146: if (timeoutexpired(&autotimer)) {
  8577  1D5A  30DD               	movlw	(_autotimer&0ffh)
  8578  1D5B  00A9               	movwf	(?_timeoutexpired)
  8579  1D5C  3000               	movlw	0x1/2
  8580  1D5D  00AA               	movwf	(?_timeoutexpired+1)
  8581  1D5E  31A3  235B  319D   	fcall	_timeoutexpired
  8582  1D61  3A00               	xorlw	0&0ffh
  8583  1D62  1903               	skipnz
  8584  1D63  2D65               	goto	u11901
  8585  1D64  2D66               	goto	u11900
  8586  1D65                     u11901:
  8587  1D65  2E0F               	goto	l38379
  8588  1D66                     u11900:
  8589                           	line	148
  8590                           	
  8591  1D66                     l38325:	
  8592                           ;userinterface.c: 148: update_autotimer(auto_mode);
  8593  1D66  0020               	movlb 0	; select bank0
  8594  1D67  0862               	movf	(_auto_mode),w
  8595  1D68  31A6  26BE  319D   	fcall	_update_autotimer
  8596                           	line	150
  8597                           ;userinterface.c: 150: printtime();
  8598  1D6B  31AB  23ED  319D   	fcall	_printtime
  8599                           	line	151
  8600                           ;userinterface.c: 151: printf("Autotimer expired: ");
  8601  1D6E  30A8               	movlw	low(STR_91|8000h)
  8602  1D6F  0020               	movlb 0	; select bank0
  8603  1D70  00AF               	movwf	(?_printf)
  8604  1D71  3085               	movlw	high(STR_91|8000h)
  8605  1D72  00B0               	movwf	((?_printf))+1
  8606  1D73  3194  24A0  319D   	fcall	_printf
  8607                           	line	154
  8608                           	
  8609  1D76                     l38327:	
  8610                           ;userinterface.c: 154: if (cat_detected) {
  8611  1D76  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
  8612  1D77  2D79               	goto	u11911
  8613  1D78  2D7A               	goto	u11910
  8614  1D79                     u11911:
  8615  1D79  2D8A               	goto	l38335
  8616  1D7A                     u11910:
  8617                           	line	156
  8618                           	
  8619  1D7A                     l38329:	
  8620                           ;userinterface.c: 156: printf("waiting...\n");
  8621  1D7A  302D               	movlw	low(STR_92|8000h)
  8622  1D7B  0020               	movlb 0	; select bank0
  8623  1D7C  00AF               	movwf	(?_printf)
  8624  1D7D  3088               	movlw	high(STR_92|8000h)
  8625  1D7E  00B0               	movwf	((?_printf))+1
  8626  1D7F  3194  24A0  319D   	fcall	_printf
  8627                           	line	158
  8628                           	
  8629  1D82                     l38331:	
  8630                           ;userinterface.c: 158: state = 1;
  8631  1D82  0020               	movlb 0	; select bank0
  8632  1D83  01E6               	clrf	(_state)
  8633  1D84  1403               	bsf	status,0
  8634  1D85  0DE6               	rlf	(_state),f
  8635                           	line	159
  8636                           	
  8637  1D86                     l38333:	
  8638                           ;userinterface.c: 159: update = 1;
  8639  1D86  01DA               	clrf	(userinterface_work@update)
  8640  1D87  1403               	bsf	status,0
  8641  1D88  0DDA               	rlf	(userinterface_work@update),f
  8642                           	line	160
  8643                           ;userinterface.c: 160: }
  8644  1D89  2E0F               	goto	l38379
  8645                           	line	162
  8646                           	
  8647  1D8A                     l8645:	
  8648                           	line	163
  8649                           	
  8650  1D8A                     l38335:	
  8651                           ;userinterface.c: 162: else
  8652                           ;userinterface.c: 163: printf("skipping\n");
  8653  1D8A  307C               	movlw	low(STR_93|8000h)
  8654  1D8B  0020               	movlb 0	; select bank0
  8655  1D8C  00AF               	movwf	(?_printf)
  8656  1D8D  3088               	movlw	high(STR_93|8000h)
  8657  1D8E  00B0               	movwf	((?_printf))+1
  8658  1D8F  3194  24A0  319D   	fcall	_printf
  8659  1D92  2E0F               	goto	l38379
  8660                           	
  8661  1D93                     l8646:	
  8662  1D93  2E0F               	goto	l38379
  8663                           	line	165
  8664                           	
  8665  1D94                     l8644:	
  8666                           	line	166
  8667                           ;userinterface.c: 165: }
  8668                           ;userinterface.c: 166: break;
  8669  1D94  2E0F               	goto	l38379
  8670                           	line	167
  8671                           ;userinterface.c: 167: case 1:
  8672                           	
  8673  1D95                     l8648:	
  8674                           	line	169
  8675                           ;userinterface.c: 169: if (!cat_present && timeoutexpired(&cattimer)) {
  8676  1D95  18F0               	btfsc	(_cat_present/8),(_cat_present)&7
  8677  1D96  2D98               	goto	u11921
  8678  1D97  2D99               	goto	u11920
  8679  1D98                     u11921:
  8680  1D98  2E0F               	goto	l38379
  8681  1D99                     u11920:
  8682                           	
  8683  1D99                     l38337:	
  8684  1D99  3040               	movlw	(_cattimer&0ffh)
  8685  1D9A  00A9               	movwf	(?_timeoutexpired)
  8686  1D9B  3001               	movlw	0x2/2
  8687  1D9C  00AA               	movwf	(?_timeoutexpired+1)
  8688  1D9D  31A3  235B  319D   	fcall	_timeoutexpired
  8689  1DA0  3A00               	xorlw	0&0ffh
  8690  1DA1  1903               	skipnz
  8691  1DA2  2DA4               	goto	u11931
  8692  1DA3  2DA5               	goto	u11930
  8693  1DA4                     u11931:
  8694  1DA4  2E0F               	goto	l38379
  8695  1DA5                     u11930:
  8696                           	line	171
  8697                           	
  8698  1DA5                     l38339:	
  8699                           ;userinterface.c: 171: printtime();
  8700  1DA5  31AB  23ED  319D   	fcall	_printtime
  8701                           	line	172
  8702                           ;userinterface.c: 172: printf("Cattimer expired\n");
  8703  1DA8  307F               	movlw	low(STR_94|8000h)
  8704  1DA9  0020               	movlb 0	; select bank0
  8705  1DAA  00AF               	movwf	(?_printf)
  8706  1DAB  3086               	movlw	high(STR_94|8000h)
  8707  1DAC  00B0               	movwf	((?_printf))+1
  8708  1DAD  3194  24A0  319D   	fcall	_printf
  8709                           	line	174
  8710                           ;userinterface.c: 174: litterlanguage_start(full_wash);
  8711  1DB0  3000               	movlw	0
  8712  1DB1  1971               	btfsc	(_full_wash/8),(_full_wash)&7
  8713  1DB2  3001               	movlw	1
  8714  1DB3  3189  214C  319D   	fcall	_litterlanguage_start
  8715                           	line	175
  8716                           	
  8717  1DB6                     l38341:	
  8718                           ;userinterface.c: 175: state = 2;
  8719  1DB6  3002               	movlw	(02h)
  8720  1DB7  0020               	movlb 0	; select bank0
  8721  1DB8  00D8               	movwf	(??_userinterface_work+0)+0
  8722  1DB9  0858               	movf	(??_userinterface_work+0)+0,w
  8723  1DBA  00E6               	movwf	(_state)
  8724                           	line	178
  8725                           	
  8726  1DBB                     l38343:	
  8727                           ;userinterface.c: 178: update = 1;
  8728  1DBB  01DA               	clrf	(userinterface_work@update)
  8729  1DBC  1403               	bsf	status,0
  8730  1DBD  0DDA               	rlf	(userinterface_work@update),f
  8731  1DBE  2E0F               	goto	l38379
  8732                           	line	179
  8733                           	
  8734  1DBF                     l8649:	
  8735                           	line	180
  8736                           ;userinterface.c: 179: }
  8737                           ;userinterface.c: 180: break;
  8738  1DBF  2E0F               	goto	l38379
  8739                           	line	181
  8740                           ;userinterface.c: 181: case 2:
  8741                           	
  8742  1DC0                     l8650:	
  8743                           	line	183
  8744                           	
  8745  1DC0                     l38345:	
  8746                           ;userinterface.c: 183: if (!litterlanguage_running()) {
  8747  1DC0  31B7  27F0  319D   	fcall	_litterlanguage_running
  8748  1DC3  3800               	iorlw	0
  8749  1DC4  1D03               	skipz
  8750  1DC5  2DC7               	goto	u11941
  8751  1DC6  2DC8               	goto	u11940
  8752  1DC7                     u11941:
  8753  1DC7  2E0F               	goto	l38379
  8754  1DC8                     u11940:
  8755                           	line	184
  8756                           	
  8757  1DC8                     l38347:	
  8758                           ;userinterface.c: 184: timeoutnow(&cattimer);
  8759  1DC8  3040               	movlw	(_cattimer&0ffh)
  8760  1DC9  0020               	movlb 0	; select bank0
  8761  1DCA  00A5               	movwf	(?_timeoutnow)
  8762  1DCB  3001               	movlw	0x2/2
  8763  1DCC  00A6               	movwf	(?_timeoutnow+1)
  8764  1DCD  31AA  2248  319D   	fcall	_timeoutnow
  8765                           	line	185
  8766                           	
  8767  1DD0                     l38349:	
  8768                           ;userinterface.c: 185: cat_detected = 0;
  8769  1DD0  1070               	bcf	(_cat_detected/8),(_cat_detected)&7
  8770                           	line	186
  8771                           	
  8772  1DD1                     l38351:	
  8773                           ;userinterface.c: 186: if (full_wash)
  8774  1DD1  1D71               	btfss	(_full_wash/8),(_full_wash)&7
  8775  1DD2  2DD4               	goto	u11951
  8776  1DD3  2DD5               	goto	u11950
  8777  1DD4                     u11951:
  8778  1DD4  2DD8               	goto	l38355
  8779  1DD5                     u11950:
  8780                           	line	187
  8781                           	
  8782  1DD5                     l38353:	
  8783                           ;userinterface.c: 187: interval = 0;
  8784  1DD5  0021               	movlb 1	; select bank1
  8785  1DD6  01D8               	clrf	(_interval)^080h
  8786  1DD7  2DDF               	goto	l38357
  8787                           	line	188
  8788                           	
  8789  1DD8                     l8652:	
  8790                           	line	189
  8791                           	
  8792  1DD8                     l38355:	
  8793                           ;userinterface.c: 188: else
  8794                           ;userinterface.c: 189: interval ++;
  8795  1DD8  3001               	movlw	(01h)
  8796  1DD9  0020               	movlb 0	; select bank0
  8797  1DDA  00D8               	movwf	(??_userinterface_work+0)+0
  8798  1DDB  0858               	movf	(??_userinterface_work+0)+0,w
  8799  1DDC  0021               	movlb 1	; select bank1
  8800  1DDD  07D8               	addwf	(_interval)^080h,f
  8801  1DDE  2DDF               	goto	l38357
  8802                           	
  8803  1DDF                     l8653:	
  8804                           	line	190
  8805                           	
  8806  1DDF                     l38357:	
  8807                           ;userinterface.c: 190: state = 0;
  8808  1DDF  0020               	movlb 0	; select bank0
  8809  1DE0  01E6               	clrf	(_state)
  8810                           	line	191
  8811                           	
  8812  1DE1                     l38359:	
  8813                           ;userinterface.c: 191: update = 1;
  8814  1DE1  01DA               	clrf	(userinterface_work@update)
  8815  1DE2  1403               	bsf	status,0
  8816  1DE3  0DDA               	rlf	(userinterface_work@update),f
  8817  1DE4  2E0F               	goto	l38379
  8818                           	line	192
  8819                           	
  8820  1DE5                     l8651:	
  8821                           	line	193
  8822                           ;userinterface.c: 192: }
  8823                           ;userinterface.c: 193: break;
  8824  1DE5  2E0F               	goto	l38379
  8825                           	line	194
  8826                           	
  8827  1DE6                     l38361:	
  8828                           ;userinterface.c: 194: }
  8829  1DE6  2E0F               	goto	l38379
  8830                           	line	141
  8831                           	
  8832  1DE7                     l8641:	
  8833                           	
  8834  1DE7                     l38363:	
  8835  1DE7  0020               	movlb 0	; select bank0
  8836  1DE8  0866               	movf	(_state),w
  8837                           	; Switch size 1, requested type "space"
  8838                           ; Number of cases is 3, Range of values is 0 to 2
  8839                           ; switch strategies available:
  8840                           ; Name         Instructions Cycles
  8841                           ; simple_byte           10     6 (average)
  8842                           ; direct_byte           12     6 (fixed)
  8843                           ; jumptable            260     6 (fixed)
  8844                           ; rangetable             7     4 (fixed)
  8845                           ; spacedrange           11     6 (fixed)
  8846                           ; locatedrange           3     3 (fixed)
  8847                           ;	Chosen strategy is simple_byte
  8848                           
  8849                           	opt asmopt_off
  8850  1DE9  3A00               	xorlw	0^0	; case 0
  8851  1DEA  1903               	skipnz
  8852  1DEB  2D5A               	goto	l38323
  8853  1DEC  3A01               	xorlw	1^0	; case 1
  8854  1DED  1903               	skipnz
  8855  1DEE  2D95               	goto	l8648
  8856  1DEF  3A03               	xorlw	2^1	; case 2
  8857  1DF0  1903               	skipnz
  8858  1DF1  2DC0               	goto	l38345
  8859  1DF2  2D58               	goto	l8642
  8860                           	opt asmopt_on
  8861                           
  8862                           	line	194
  8863                           	
  8864  1DF3                     l8647:	
  8865                           	line	197
  8866                           ;userinterface.c: 197: switch (buttonmask_evt & ((0x01 << 0) | (0x01 << 1))) {
  8867  1DF3  2E0F               	goto	l38379
  8868                           	line	198
  8869                           ;userinterface.c: 198: case 0:
  8870                           	
  8871  1DF4                     l8655:	
  8872                           	line	200
  8873                           ;userinterface.c: 200: break;
  8874  1DF4  2E28               	goto	l8656
  8875                           	line	202
  8876                           ;userinterface.c: 202: case (0x01 << 0):
  8877                           	
  8878  1DF5                     l8657:	
  8879                           	line	203
  8880                           	
  8881  1DF5                     l38365:	
  8882                           ;userinterface.c: 203: start_short();
  8883  1DF5  3181  21DE  319D   	fcall	_start_short
  8884                           	line	204
  8885                           	
  8886  1DF8                     l38367:	
  8887                           ;userinterface.c: 204: update = 1;
  8888  1DF8  0020               	movlb 0	; select bank0
  8889  1DF9  01DA               	clrf	(userinterface_work@update)
  8890  1DFA  1403               	bsf	status,0
  8891  1DFB  0DDA               	rlf	(userinterface_work@update),f
  8892                           	line	205
  8893                           ;userinterface.c: 205: break;
  8894  1DFC  2E28               	goto	l8656
  8895                           	line	207
  8896                           ;userinterface.c: 207: case (0x01 << 1):
  8897                           	
  8898  1DFD                     l8658:	
  8899                           	line	208
  8900                           	
  8901  1DFD                     l38369:	
  8902                           ;userinterface.c: 208: setup_short();
  8903  1DFD  31A4  2446  319D   	fcall	_setup_short
  8904                           	line	209
  8905                           	
  8906  1E00                     l38371:	
  8907                           ;userinterface.c: 209: update = 1;
  8908  1E00  0020               	movlb 0	; select bank0
  8909  1E01  01DA               	clrf	(userinterface_work@update)
  8910  1E02  1403               	bsf	status,0
  8911  1E03  0DDA               	rlf	(userinterface_work@update),f
  8912                           	line	210
  8913                           ;userinterface.c: 210: break;
  8914  1E04  2E28               	goto	l8656
  8915                           	line	212
  8916                           ;userinterface.c: 212: case ((0x01 << 0) | (0x01 << 1)):
  8917                           	
  8918  1E05                     l8659:	
  8919                           	line	213
  8920                           	
  8921  1E05                     l38373:	
  8922                           ;userinterface.c: 213: both_short();
  8923  1E05  31A9  2169  319D   	fcall	_both_short
  8924                           	line	214
  8925                           	
  8926  1E08                     l38375:	
  8927                           ;userinterface.c: 214: update = 1;
  8928  1E08  0020               	movlb 0	; select bank0
  8929  1E09  01DA               	clrf	(userinterface_work@update)
  8930  1E0A  1403               	bsf	status,0
  8931  1E0B  0DDA               	rlf	(userinterface_work@update),f
  8932                           	line	215
  8933                           ;userinterface.c: 215: break;
  8934  1E0C  2E28               	goto	l8656
  8935                           	line	217
  8936                           ;userinterface.c: 217: default:
  8937                           	
  8938  1E0D                     l8660:	
  8939                           	line	218
  8940                           ;userinterface.c: 218: break;
  8941  1E0D  2E28               	goto	l8656
  8942                           	line	219
  8943                           	
  8944  1E0E                     l38377:	
  8945                           ;userinterface.c: 219: }
  8946  1E0E  2E28               	goto	l8656
  8947                           	line	197
  8948                           	
  8949  1E0F                     l8654:	
  8950                           	
  8951  1E0F                     l38379:	
  8952  1E0F  0021               	movlb 1	; select bank1
  8953  1E10  0857               	movf	(_buttonmask_evt)^080h,w
  8954  1E11  3903               	andlw	03h
  8955  1E12  0020               	movlb 0	; select bank0
  8956  1E13  00D8               	movwf	(??_userinterface_work+0)+0
  8957  1E14  01D9               	clrf	(??_userinterface_work+0)+0+1
  8958                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8959                           ; Switch size 1, requested type "space"
  8960                           ; Number of cases is 1, Range of values is 0 to 0
  8961                           ; switch strategies available:
  8962                           ; Name         Instructions Cycles
  8963                           ; simple_byte            4     3 (average)
  8964                           ; direct_byte            8     6 (fixed)
  8965                           ; jumptable            260     6 (fixed)
  8966                           ; rangetable             5     4 (fixed)
  8967                           ; spacedrange            7     6 (fixed)
  8968                           ; locatedrange           1     3 (fixed)
  8969                           ;	Chosen strategy is simple_byte
  8970                           
  8971  1E15  0859               	movf 1+(??_userinterface_work+0)+0,w
  8972                           	opt asmopt_off
  8973  1E16  3A00               	xorlw	0^0	; case 0
  8974  1E17  1903               	skipnz
  8975  1E18  2E1A               	goto	l38921
  8976  1E19  2E28               	goto	l8656
  8977                           	opt asmopt_on
  8978                           	
  8979  1E1A                     l38921:	
  8980                           ; Switch size 1, requested type "space"
  8981                           ; Number of cases is 4, Range of values is 0 to 3
  8982                           ; switch strategies available:
  8983                           ; Name         Instructions Cycles
  8984                           ; simple_byte           13     7 (average)
  8985                           ; direct_byte           14     6 (fixed)
  8986                           ; jumptable            260     6 (fixed)
  8987                           ; rangetable             8     4 (fixed)
  8988                           ; spacedrange           13     6 (fixed)
  8989                           ; locatedrange           4     3 (fixed)
  8990                           ;	Chosen strategy is simple_byte
  8991                           
  8992  1E1A  0858               	movf 0+(??_userinterface_work+0)+0,w
  8993                           	opt asmopt_off
  8994  1E1B  3A00               	xorlw	0^0	; case 0
  8995  1E1C  1903               	skipnz
  8996  1E1D  2E28               	goto	l8656
  8997  1E1E  3A01               	xorlw	1^0	; case 1
  8998  1E1F  1903               	skipnz
  8999  1E20  2DF5               	goto	l38365
  9000  1E21  3A03               	xorlw	2^1	; case 2
  9001  1E22  1903               	skipnz
  9002  1E23  2DFD               	goto	l38369
  9003  1E24  3A01               	xorlw	3^2	; case 3
  9004  1E25  1903               	skipnz
  9005  1E26  2E05               	goto	l38373
  9006  1E27  2E28               	goto	l8656
  9007                           	opt asmopt_on
  9008                           
  9009                           	line	219
  9010                           	
  9011  1E28                     l8656:	
  9012                           	line	220
  9013                           ;userinterface.c: 220: buttonmask_evt = 0;
  9014  1E28  0021               	movlb 1	; select bank1
  9015  1E29  01D7               	clrf	(_buttonmask_evt)^080h
  9016                           	line	223
  9017                           	
  9018  1E2A                     l38381:	
  9019                           ;userinterface.c: 223: if (timeoutexpired(&holdtimeout)) {
  9020  1E2A  305E               	movlw	(_holdtimeout&0ffh)
  9021  1E2B  0020               	movlb 0	; select bank0
  9022  1E2C  00A9               	movwf	(?_timeoutexpired)
  9023  1E2D  3001               	movlw	0x2/2
  9024  1E2E  00AA               	movwf	(?_timeoutexpired+1)
  9025  1E2F  31A3  235B  319D   	fcall	_timeoutexpired
  9026  1E32  3A00               	xorlw	0&0ffh
  9027  1E33  1903               	skipnz
  9028  1E34  2E36               	goto	u11961
  9029  1E35  2E37               	goto	u11960
  9030  1E36                     u11961:
  9031  1E36  2E82               	goto	l38409
  9032  1E37                     u11960:
  9033  1E37  2E63               	goto	l38405
  9034                           	line	224
  9035                           	
  9036  1E38                     l38383:	
  9037                           ;userinterface.c: 224: switch (buttonmask_cum & ((0x01 << 0) | (0x01 << 1))) {
  9038  1E38  2E63               	goto	l38405
  9039                           	line	225
  9040                           ;userinterface.c: 225: case (0x01 << 0):
  9041                           	
  9042  1E39                     l8663:	
  9043                           	line	226
  9044                           	
  9045  1E39                     l38385:	
  9046                           ;userinterface.c: 226: set_Beeper(0x05, 0);
  9047  1E39  0020               	movlb 0	; select bank0
  9048  1E3A  01AE               	clrf	(?_set_Beeper)
  9049  1E3B  3005               	movlw	(05h)
  9050  1E3C  31A8  2092  319D   	fcall	_set_Beeper
  9051                           	line	227
  9052                           	
  9053  1E3F                     l38387:	
  9054                           ;userinterface.c: 227: start_long();
  9055  1E3F  31A9  21F6  319D   	fcall	_start_long
  9056                           	line	228
  9057                           	
  9058  1E42                     l38389:	
  9059                           ;userinterface.c: 228: update = 1;
  9060  1E42  0020               	movlb 0	; select bank0
  9061  1E43  01DA               	clrf	(userinterface_work@update)
  9062  1E44  1403               	bsf	status,0
  9063  1E45  0DDA               	rlf	(userinterface_work@update),f
  9064                           	line	229
  9065                           ;userinterface.c: 229: break;
  9066  1E46  2E79               	goto	l8664
  9067                           	line	231
  9068                           ;userinterface.c: 231: case (0x01 << 1):
  9069                           	
  9070  1E47                     l8665:	
  9071                           	line	232
  9072                           	
  9073  1E47                     l38391:	
  9074                           ;userinterface.c: 232: set_Beeper(0x05, 0);
  9075  1E47  01AE               	clrf	(?_set_Beeper)
  9076  1E48  3005               	movlw	(05h)
  9077  1E49  31A8  2092  319D   	fcall	_set_Beeper
  9078                           	line	233
  9079                           	
  9080  1E4C                     l38393:	
  9081                           ;userinterface.c: 233: setup_long();
  9082  1E4C  3181  21FF  319D   	fcall	_setup_long
  9083                           	line	234
  9084                           	
  9085  1E4F                     l38395:	
  9086                           ;userinterface.c: 234: update = 1;
  9087  1E4F  0020               	movlb 0	; select bank0
  9088  1E50  01DA               	clrf	(userinterface_work@update)
  9089  1E51  1403               	bsf	status,0
  9090  1E52  0DDA               	rlf	(userinterface_work@update),f
  9091                           	line	235
  9092                           ;userinterface.c: 235: break;
  9093  1E53  2E79               	goto	l8664
  9094                           	line	237
  9095                           ;userinterface.c: 237: case ((0x01 << 0) | (0x01 << 1)):
  9096                           	
  9097  1E54                     l8666:	
  9098                           	line	238
  9099                           	
  9100  1E54                     l38397:	
  9101                           ;userinterface.c: 238: set_Beeper(0x05, 0);
  9102  1E54  01AE               	clrf	(?_set_Beeper)
  9103  1E55  3005               	movlw	(05h)
  9104  1E56  31A8  2092  319D   	fcall	_set_Beeper
  9105                           	line	239
  9106                           	
  9107  1E59                     l38399:	
  9108                           ;userinterface.c: 239: both_long();
  9109  1E59  31A8  20DD  319D   	fcall	_both_long
  9110                           	line	240
  9111                           	
  9112  1E5C                     l38401:	
  9113                           ;userinterface.c: 240: update = 1;
  9114  1E5C  0020               	movlb 0	; select bank0
  9115  1E5D  01DA               	clrf	(userinterface_work@update)
  9116  1E5E  1403               	bsf	status,0
  9117  1E5F  0DDA               	rlf	(userinterface_work@update),f
  9118                           	line	241
  9119                           ;userinterface.c: 241: break;
  9120  1E60  2E79               	goto	l8664
  9121                           	line	243
  9122                           ;userinterface.c: 243: default:
  9123                           	
  9124  1E61                     l8667:	
  9125                           	line	244
  9126                           ;userinterface.c: 244: break;
  9127  1E61  2E79               	goto	l8664
  9128                           	line	245
  9129                           	
  9130  1E62                     l38403:	
  9131                           ;userinterface.c: 245: }
  9132  1E62  2E79               	goto	l8664
  9133                           	line	224
  9134                           	
  9135  1E63                     l8662:	
  9136                           	
  9137  1E63                     l38405:	
  9138  1E63  0021               	movlb 1	; select bank1
  9139  1E64  0855               	movf	(_buttonmask_cum)^080h,w
  9140  1E65  3903               	andlw	03h
  9141  1E66  0020               	movlb 0	; select bank0
  9142  1E67  00D8               	movwf	(??_userinterface_work+0)+0
  9143  1E68  01D9               	clrf	(??_userinterface_work+0)+0+1
  9144                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9145                           ; Switch size 1, requested type "space"
  9146                           ; Number of cases is 1, Range of values is 0 to 0
  9147                           ; switch strategies available:
  9148                           ; Name         Instructions Cycles
  9149                           ; simple_byte            4     3 (average)
  9150                           ; direct_byte            8     6 (fixed)
  9151                           ; jumptable            260     6 (fixed)
  9152                           ; rangetable             5     4 (fixed)
  9153                           ; spacedrange            7     6 (fixed)
  9154                           ; locatedrange           1     3 (fixed)
  9155                           ;	Chosen strategy is simple_byte
  9156                           
  9157  1E69  0859               	movf 1+(??_userinterface_work+0)+0,w
  9158                           	opt asmopt_off
  9159  1E6A  3A00               	xorlw	0^0	; case 0
  9160  1E6B  1903               	skipnz
  9161  1E6C  2E6E               	goto	l38923
  9162  1E6D  2E79               	goto	l8664
  9163                           	opt asmopt_on
  9164                           	
  9165  1E6E                     l38923:	
  9166                           ; Switch size 1, requested type "space"
  9167                           ; Number of cases is 3, Range of values is 1 to 3
  9168                           ; switch strategies available:
  9169                           ; Name         Instructions Cycles
  9170                           ; simple_byte           10     6 (average)
  9171                           ; direct_byte           15     9 (fixed)
  9172                           ; jumptable            263     9 (fixed)
  9173                           ;	Chosen strategy is simple_byte
  9174                           
  9175  1E6E  0858               	movf 0+(??_userinterface_work+0)+0,w
  9176                           	opt asmopt_off
  9177  1E6F  3A01               	xorlw	1^0	; case 1
  9178  1E70  1903               	skipnz
  9179  1E71  2E39               	goto	l38385
  9180  1E72  3A03               	xorlw	2^1	; case 2
  9181  1E73  1903               	skipnz
  9182  1E74  2E47               	goto	l38391
  9183  1E75  3A01               	xorlw	3^2	; case 3
  9184  1E76  1903               	skipnz
  9185  1E77  2E54               	goto	l38397
  9186  1E78  2E79               	goto	l8664
  9187                           	opt asmopt_on
  9188                           
  9189                           	line	245
  9190                           	
  9191  1E79                     l8664:	
  9192                           	line	246
  9193                           ;userinterface.c: 246: longhandled = 1;
  9194  1E79  1671               	bsf	(_longhandled/8),(_longhandled)&7
  9195                           	line	247
  9196                           	
  9197  1E7A                     l38407:	
  9198                           ;userinterface.c: 247: timeoutnever(&holdtimeout);
  9199  1E7A  305E               	movlw	(_holdtimeout&0ffh)
  9200  1E7B  00A5               	movwf	(?_timeoutnever)
  9201  1E7C  3001               	movlw	0x2/2
  9202  1E7D  00A6               	movwf	(?_timeoutnever+1)
  9203  1E7E  31AA  222C  319D   	fcall	_timeoutnever
  9204  1E81  2E82               	goto	l38409
  9205                           	line	248
  9206                           	
  9207  1E82                     l8661:	
  9208                           	line	250
  9209                           	
  9210  1E82                     l38409:	
  9211                           ;userinterface.c: 248: }
  9212                           ;userinterface.c: 250: if (update)
  9213  1E82  0020               	movlb 0	; select bank0
  9214  1E83  085A               	movf	(userinterface_work@update),w
  9215  1E84  1D03               	skipz
  9216  1E85  2E87               	goto	u11970
  9217  1E86  2E8B               	goto	l8669
  9218  1E87                     u11970:
  9219                           	line	251
  9220                           	
  9221  1E87                     l38411:	
  9222                           ;userinterface.c: 251: update_display();
  9223  1E87  3189  218C  319D   	fcall	_update_display
  9224  1E8A  2E8B               	goto	l8669
  9225                           	
  9226  1E8B                     l8668:	
  9227                           	line	253
  9228                           	
  9229  1E8B                     l8669:	
  9230  1E8B  0008               	return
  9231                           	opt stack 0
  9232                           GLOBAL	__end_of_userinterface_work
  9233  1E8C                     	__end_of_userinterface_work:
  9234 ;; =============== function _userinterface_work ends ============
  9235                           
  9236                           	signat	_userinterface_work,88
  9237                           	global	_catsensor_work
  9238                           psect	text3228,local,class=CODE,delta=2
  9239                           global __ptext3228
  9240  2630                     __ptext3228:
  9241                           
  9242 ;; *************** function _catsensor_work *****************
  9243 ;; Defined at:
  9244 ;;		line 86 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;		None               void
  9251 ;; Registers used:
  9252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9262 ;;Total ram usage:        1 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    7
  9265 ;; This function calls:
  9266 ;;		_timeoutexpired
  9267 ;;		_settimeout
  9268 ;;		_timeoutnever
  9269 ;;		_catsensor_event
  9270 ;; This function is called by:
  9271 ;;		_main
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           psect	text3228
  9275                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
  9276                           	line	86
  9277                           	global	__size_of_catsensor_work
  9278  008E                     	__size_of_catsensor_work	equ	__end_of_catsensor_work-_catsensor_work
  9279                           	
  9280  2630                     _catsensor_work:	
  9281                           	opt	stack 8
  9282                           ; Regs used in _catsensor_work: [wreg-status,0+pclath+cstack]
  9283                           	line	88
  9284                           	
  9285  2630                     l38275:	
  9286                           ;catsensor.c: 87: if (!pinging &&
  9287                           ;catsensor.c: 88: timeoutexpired(&pingtime)) {
  9288  2630  1B71               	btfsc	(_pinging/8),(_pinging)&7
  9289  2631  2E33               	goto	u11761
  9290  2632  2E34               	goto	u11760
  9291  2633                     u11761:
  9292  2633  2E62               	goto	l38297
  9293  2634                     u11760:
  9294                           	
  9295  2634                     l38277:	
  9296  2634  3046               	movlw	(_pingtime&0ffh)
  9297  2635  0020               	movlb 0	; select bank0
  9298  2636  00A9               	movwf	(?_timeoutexpired)
  9299  2637  3001               	movlw	0x2/2
  9300  2638  00AA               	movwf	(?_timeoutexpired+1)
  9301  2639  31A3  235B  31A6   	fcall	_timeoutexpired
  9302  263C  3A00               	xorlw	0&0ffh
  9303  263D  1903               	skipnz
  9304  263E  2E40               	goto	u11771
  9305  263F  2E41               	goto	u11770
  9306  2640                     u11771:
  9307  2640  2E62               	goto	l38297
  9308  2641                     u11770:
  9309                           	line	90
  9310                           	
  9311  2641                     l38279:	
  9312                           ;catsensor.c: 90: settimeout(&pingtime, (((((4UL * (1000UL * ((1000UL)))))/4)/8) / 10));
  9313  2641  3046               	movlw	(_pingtime&0ffh)
  9314  2642  0020               	movlb 0	; select bank0
  9315  2643  00AD               	movwf	(?_settimeout)
  9316  2644  3001               	movlw	0x2/2
  9317  2645  00AE               	movwf	(?_settimeout+1)
  9318  2646  3000               	movlw	0
  9319  2647  00B2               	movwf	3+(?_settimeout)+02h
  9320  2648  3000               	movlw	0
  9321  2649  00B1               	movwf	2+(?_settimeout)+02h
  9322  264A  3030               	movlw	030h
  9323  264B  00B0               	movwf	1+(?_settimeout)+02h
  9324  264C  30D4               	movlw	0D4h
  9325  264D  00AF               	movwf	0+(?_settimeout)+02h
  9326                           
  9327  264E  31A1  2147  31A6   	fcall	_settimeout
  9328                           	line	92
  9329                           	
  9330  2651                     l38281:	
  9331                           ;catsensor.c: 92: echoed = 0;
  9332  2651  1270               	bcf	(_echoed/8),(_echoed)&7
  9333                           	line	94
  9334                           	
  9335  2652                     l38283:	
  9336                           ;catsensor.c: 94: pinging = 1;
  9337  2652  1771               	bsf	(_pinging/8),(_pinging)&7
  9338                           	line	97
  9339                           	
  9340  2653                     l38285:	
  9341                           ;catsensor.c: 97: PR2 = 0x54 ;
  9342  2653  3054               	movlw	(054h)
  9343  2654  0020               	movlb 0	; select bank0
  9344  2655  009B               	movwf	(27)	;volatile
  9345                           	line	101
  9346                           	
  9347  2656                     l38287:	
  9348                           ;catsensor.c: 101: T2CON = 0x7D ;
  9349  2656  307D               	movlw	(07Dh)
  9350  2657  009C               	movwf	(28)	;volatile
  9351                           	line	103
  9352                           	
  9353  2658                     l38289:	
  9354                           ;catsensor.c: 103: CCPR1L = 0x2A ;
  9355  2658  302A               	movlw	(02Ah)
  9356  2659  0025               	movlb 5	; select bank5
  9357  265A  0091               	movwf	(657)^0280h	;volatile
  9358                           	line	106
  9359                           	
  9360  265B                     l38291:	
  9361                           ;catsensor.c: 106: CCP1CON = 0x1F ;
  9362  265B  301F               	movlw	(01Fh)
  9363  265C  0093               	movwf	(659)^0280h	;volatile
  9364                           	line	108
  9365                           	
  9366  265D                     l38293:	
  9367                           ;catsensor.c: 108: TMR2IF = 0;
  9368  265D  0020               	movlb 0	; select bank0
  9369  265E  1091               	bcf	(137/8),(137)&7
  9370                           	line	110
  9371                           	
  9372  265F                     l38295:	
  9373                           ;catsensor.c: 110: TMR2IE = 1;
  9374  265F  0021               	movlb 1	; select bank1
  9375  2660  1491               	bsf	(1161/8)^080h,(1161)&7
  9376  2661  2E62               	goto	l38297
  9377                           	line	111
  9378                           	
  9379  2662                     l13022:	
  9380                           	line	113
  9381                           	
  9382  2662                     l38297:	
  9383                           ;catsensor.c: 111: }
  9384                           ;catsensor.c: 113: if (detected_cur != detected_old) {
  9385  2662  19F0               	btfsc	(_detected_old/8),(_detected_old)&7
  9386  2663  2E65               	goto	u11781
  9387  2664  2E67               	goto	u11780
  9388  2665                     u11781:
  9389  2665  3001               	movlw	1
  9390  2666  2E68               	goto	u11782
  9391  2667                     u11780:
  9392  2667  3000               	movlw	0
  9393  2668                     u11782:
  9394  2668  0020               	movlb 0	; select bank0
  9395  2669  00D2               	movwf	(??_catsensor_work+0)+0
  9396  266A  1970               	btfsc	(_detected_cur/8),(_detected_cur)&7
  9397  266B  2E6D               	goto	u11791
  9398  266C  2E6F               	goto	u11790
  9399  266D                     u11791:
  9400  266D  3001               	movlw	1
  9401  266E  2E70               	goto	u11792
  9402  266F                     u11790:
  9403  266F  3000               	movlw	0
  9404  2670                     u11792:
  9405  2670  0652               	xorwf	(??_catsensor_work+0)+0,w
  9406  2671  1903               	skipnz
  9407  2672  2E74               	goto	u11801
  9408  2673  2E75               	goto	u11800
  9409  2674                     u11801:
  9410  2674  2E88               	goto	l13023
  9411  2675                     u11800:
  9412                           	line	114
  9413                           	
  9414  2675                     l38299:	
  9415                           ;catsensor.c: 114: settimeout(&debouncer, (3 * (((((4UL * (1000UL * ((1000UL)))))/4)/8) 
                                 / 10)));
  9416  2675  3058               	movlw	(_debouncer&0ffh)
  9417  2676  00AD               	movwf	(?_settimeout)
  9418  2677  3001               	movlw	0x2/2
  9419  2678  00AE               	movwf	(?_settimeout+1)
  9420  2679  3000               	movlw	0
  9421  267A  00B2               	movwf	3+(?_settimeout)+02h
  9422  267B  3000               	movlw	0
  9423  267C  00B1               	movwf	2+(?_settimeout)+02h
  9424  267D  3092               	movlw	092h
  9425  267E  00B0               	movwf	1+(?_settimeout)+02h
  9426  267F  307C               	movlw	07Ch
  9427  2680  00AF               	movwf	0+(?_settimeout)+02h
  9428                           
  9429  2681  31A1  2147  31A6   	fcall	_settimeout
  9430                           	line	115
  9431                           	
  9432  2684                     l38301:	
  9433                           ;catsensor.c: 115: detected_old = detected_cur;
  9434  2684  11F0               	bcf	(_detected_old/8),(_detected_old)&7
  9435  2685  1D70               	btfss	(_detected_cur/8),(_detected_cur)&7
  9436  2686  2E88               	goto	u11815
  9437  2687  15F0               	bsf	(_detected_old/8),(_detected_old)&7
  9438  2688                     u11815:
  9439                           
  9440                           	line	116
  9441                           	
  9442  2688                     l13023:	
  9443                           	line	119
  9444                           ;catsensor.c: 116: }
  9445                           ;catsensor.c: 119: if (timeoutexpired(&debouncer)) {
  9446  2688  3058               	movlw	(_debouncer&0ffh)
  9447  2689  0020               	movlb 0	; select bank0
  9448  268A  00A9               	movwf	(?_timeoutexpired)
  9449  268B  3001               	movlw	0x2/2
  9450  268C  00AA               	movwf	(?_timeoutexpired+1)
  9451  268D  31A3  235B  31A6   	fcall	_timeoutexpired
  9452  2690  3A00               	xorlw	0&0ffh
  9453  2691  1903               	skipnz
  9454  2692  2E94               	goto	u11821
  9455  2693  2E95               	goto	u11820
  9456  2694                     u11821:
  9457  2694  2EBD               	goto	l13026
  9458  2695                     u11820:
  9459                           	line	120
  9460                           	
  9461  2695                     l38303:	
  9462                           ;catsensor.c: 120: timeoutnever(&debouncer);
  9463  2695  3058               	movlw	(_debouncer&0ffh)
  9464  2696  0020               	movlb 0	; select bank0
  9465  2697  00A5               	movwf	(?_timeoutnever)
  9466  2698  3001               	movlw	0x2/2
  9467  2699  00A6               	movwf	(?_timeoutnever+1)
  9468  269A  31AA  222C  31A6   	fcall	_timeoutnever
  9469                           	line	121
  9470                           	
  9471  269D                     l38305:	
  9472                           ;catsensor.c: 121: if (detected_cur != detected_dbc) {
  9473  269D  0020               	movlb 0	; select bank0
  9474  269E  18ED               	btfsc	(_detected_dbc/8),(_detected_dbc)&7
  9475  269F  2EA1               	goto	u11831
  9476  26A0  2EA3               	goto	u11830
  9477  26A1                     u11831:
  9478  26A1  3001               	movlw	1
  9479  26A2  2EA4               	goto	u11832
  9480  26A3                     u11830:
  9481  26A3  3000               	movlw	0
  9482  26A4                     u11832:
  9483  26A4  00D2               	movwf	(??_catsensor_work+0)+0
  9484  26A5  1970               	btfsc	(_detected_cur/8),(_detected_cur)&7
  9485  26A6  2EA8               	goto	u11841
  9486  26A7  2EAA               	goto	u11840
  9487  26A8                     u11841:
  9488  26A8  3001               	movlw	1
  9489  26A9  2EAB               	goto	u11842
  9490  26AA                     u11840:
  9491  26AA  3000               	movlw	0
  9492  26AB                     u11842:
  9493  26AB  0652               	xorwf	(??_catsensor_work+0)+0,w
  9494  26AC  1903               	skipnz
  9495  26AD  2EAF               	goto	u11851
  9496  26AE  2EB0               	goto	u11850
  9497  26AF                     u11851:
  9498  26AF  2EBD               	goto	l13026
  9499  26B0                     u11850:
  9500                           	line	122
  9501                           	
  9502  26B0                     l38307:	
  9503                           ;catsensor.c: 122: detected_dbc = detected_cur;
  9504  26B0  10ED               	bcf	(_detected_dbc/8),(_detected_dbc)&7
  9505  26B1  1D70               	btfss	(_detected_cur/8),(_detected_cur)&7
  9506  26B2  2EB4               	goto	u11865
  9507  26B3  14ED               	bsf	(_detected_dbc/8),(_detected_dbc)&7
  9508  26B4                     u11865:
  9509                           
  9510                           	line	123
  9511                           	
  9512  26B4                     l38309:	
  9513                           ;catsensor.c: 123: catsensor_event(detected_dbc);
  9514  26B4  3000               	movlw	0
  9515  26B5  0020               	movlb 0	; select bank0
  9516  26B6  18ED               	btfsc	(_detected_dbc/8),(_detected_dbc)&7
  9517  26B7  3001               	movlw	1
  9518  26B8  3198  208D  31A6   	fcall	_catsensor_event
  9519  26BB  2EBD               	goto	l13026
  9520                           	line	124
  9521                           	
  9522  26BC                     l13025:	
  9523  26BC  2EBD               	goto	l13026
  9524                           	line	125
  9525                           	
  9526  26BD                     l13024:	
  9527                           	line	126
  9528                           	
  9529  26BD                     l13026:	
  9530  26BD  0008               	return
  9531                           	opt stack 0
  9532                           GLOBAL	__end_of_catsensor_work
  9533  26BE                     	__end_of_catsensor_work:
  9534 ;; =============== function _catsensor_work ends ============
  9535                           
  9536                           	signat	_catsensor_work,88
  9537                           	global	_proc_char
  9538                           psect	text3229,local,class=CODE,delta=2
  9539                           global __ptext3229
  9540  180C                     __ptext3229:
  9541                           
  9542 ;; *************** function _proc_char *****************
  9543 ;; Defined at:
  9544 ;;		line 92 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  rxd             1    wreg     unsigned char 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  rxd             1   61[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9562 ;;Total ram usage:        2 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    6
  9565 ;; This function calls:
  9566 ;;		_putch
  9567 ;;		_proc_line
  9568 ;;		_printf
  9569 ;; This function is called by:
  9570 ;;		_cmdline_work
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           psect	text3229
  9574                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  9575                           	line	92
  9576                           	global	__size_of_proc_char
  9577  0081                     	__size_of_proc_char	equ	__end_of_proc_char-_proc_char
  9578                           	
  9579  180C                     _proc_char:	
  9580                           	opt	stack 8
  9581                           ; Regs used in _proc_char: [allreg]
  9582                           ;proc_char@rxd stored from wreg
  9583                           	line	95
  9584  180C  0020               	movlb 0	; select bank0
  9585  180D  00DE               	movwf	(proc_char@rxd)
  9586                           	
  9587  180E                     l38229:	
  9588                           ;cmdline.c: 93: static unsigned char curcolumn = 0;
  9589                           ;cmdline.c: 95: if ((rxd >= ' ') && (rxd <= '~')) {
  9590  180E  3020               	movlw	(020h)
  9591  180F  025E               	subwf	(proc_char@rxd),w
  9592  1810  1C03               	skipc
  9593  1811  2813               	goto	u11641
  9594  1812  2814               	goto	u11640
  9595  1813                     u11641:
  9596  1813  2843               	goto	l38247
  9597  1814                     u11640:
  9598                           	
  9599  1814                     l38231:	
  9600  1814  307F               	movlw	(07Fh)
  9601  1815  025E               	subwf	(proc_char@rxd),w
  9602  1816  1803               	skipnc
  9603  1817  2819               	goto	u11651
  9604  1818  281A               	goto	u11650
  9605  1819                     u11651:
  9606  1819  2843               	goto	l38247
  9607  181A                     u11650:
  9608                           	line	96
  9609                           	
  9610  181A                     l38233:	
  9611                           ;cmdline.c: 96: if (curcolumn < ((20)-1)) {
  9612  181A  3013               	movlw	(013h)
  9613  181B  0267               	subwf	(proc_char@curcolumn),w
  9614  181C  1803               	skipnc
  9615  181D  281F               	goto	u11661
  9616  181E  2820               	goto	u11660
  9617  181F                     u11661:
  9618  181F  2837               	goto	l38243
  9619  1820                     u11660:
  9620                           	line	98
  9621                           	
  9622  1820                     l38235:	
  9623                           ;cmdline.c: 98: linebuffer[curcolumn] = rxd;
  9624  1820  085E               	movf	(proc_char@rxd),w
  9625  1821  00DD               	movwf	(??_proc_char+0)+0
  9626  1822  0867               	movf	(proc_char@curcolumn),w
  9627  1823  3ECE               	addlw	_linebuffer&0ffh
  9628  1824  0086               	movwf	fsr1l
  9629  1825  3001               	movlw 1	; select bank3/4
  9630  1826  0087               	movwf fsr1h	
  9631                           	
  9632  1827  085D               	movf	(??_proc_char+0)+0,w
  9633  1828  0081               	movwf	indf1
  9634                           	line	99
  9635                           	
  9636  1829                     l38237:	
  9637                           ;cmdline.c: 99: curcolumn++;
  9638  1829  3001               	movlw	(01h)
  9639  182A  00DD               	movwf	(??_proc_char+0)+0
  9640  182B  085D               	movf	(??_proc_char+0)+0,w
  9641  182C  07E7               	addwf	(proc_char@curcolumn),f
  9642                           	line	101
  9643                           	
  9644  182D                     l38239:	
  9645                           ;cmdline.c: 101: if (localecho)
  9646  182D  086F               	movf	(_localecho),w
  9647  182E  1D03               	skipz
  9648  182F  2831               	goto	u11670
  9649  1830  288C               	goto	l15113
  9650  1831                     u11670:
  9651                           	line	102
  9652                           	
  9653  1831                     l38241:	
  9654                           ;cmdline.c: 102: putch(rxd);
  9655  1831  085E               	movf	(proc_char@rxd),w
  9656  1832  31AB  23C0  3198   	fcall	_putch
  9657  1835  288C               	goto	l15113
  9658                           	
  9659  1836                     l15101:	
  9660                           	line	103
  9661                           ;cmdline.c: 103: } else
  9662  1836  288C               	goto	l15113
  9663                           	
  9664  1837                     l15100:	
  9665                           	line	105
  9666                           	
  9667  1837                     l38243:	
  9668                           ;cmdline.c: 105: if (localecho)
  9669  1837  0020               	movlb 0	; select bank0
  9670  1838  086F               	movf	(_localecho),w
  9671  1839  1D03               	skipz
  9672  183A  283C               	goto	u11680
  9673  183B  288C               	goto	l15113
  9674  183C                     u11680:
  9675                           	line	106
  9676                           	
  9677  183C                     l38245:	
  9678                           ;cmdline.c: 106: putch('\a');
  9679  183C  3007               	movlw	(07h)
  9680  183D  31AB  23C0  3198   	fcall	_putch
  9681  1840  288C               	goto	l15113
  9682                           	
  9683  1841                     l15103:	
  9684  1841  288C               	goto	l15113
  9685                           	line	107
  9686                           	
  9687  1842                     l15102:	
  9688                           ;cmdline.c: 107: } else if (rxd == '\r') {
  9689  1842  288C               	goto	l15113
  9690                           	
  9691  1843                     l15099:	
  9692                           	
  9693  1843                     l38247:	
  9694  1843  0020               	movlb 0	; select bank0
  9695  1844  085E               	movf	(proc_char@rxd),w
  9696  1845  3A0D               	xorlw	0Dh&0ffh
  9697  1846  1D03               	skipz
  9698  1847  2849               	goto	u11691
  9699  1848  284A               	goto	u11690
  9700  1849                     u11691:
  9701  1849  2872               	goto	l38265
  9702  184A                     u11690:
  9703                           	line	108
  9704                           	
  9705  184A                     l38249:	
  9706                           ;cmdline.c: 108: if (localecho)
  9707  184A  086F               	movf	(_localecho),w
  9708  184B  1D03               	skipz
  9709  184C  284E               	goto	u11700
  9710  184D  2853               	goto	l38253
  9711  184E                     u11700:
  9712                           	line	109
  9713                           	
  9714  184E                     l38251:	
  9715                           ;cmdline.c: 109: putch('\n');
  9716  184E  300A               	movlw	(0Ah)
  9717  184F  31AB  23C0  3198   	fcall	_putch
  9718  1852  2853               	goto	l38253
  9719                           	
  9720  1853                     l15106:	
  9721                           	line	111
  9722                           	
  9723  1853                     l38253:	
  9724                           ;cmdline.c: 111: if (curcolumn) {
  9725  1853  0020               	movlb 0	; select bank0
  9726  1854  0867               	movf	(proc_char@curcolumn),w
  9727  1855  1D03               	skipz
  9728  1856  2858               	goto	u11710
  9729  1857  2863               	goto	l38259
  9730  1858                     u11710:
  9731                           	line	113
  9732                           	
  9733  1858                     l38255:	
  9734                           ;cmdline.c: 113: linebuffer[curcolumn] = 0;
  9735  1858  0867               	movf	(proc_char@curcolumn),w
  9736  1859  3ECE               	addlw	_linebuffer&0ffh
  9737  185A  0086               	movwf	fsr1l
  9738  185B  3001               	movlw 1	; select bank3/4
  9739  185C  0087               	movwf fsr1h	
  9740                           	
  9741  185D  0181               	clrf	indf1
  9742                           	line	115
  9743                           	
  9744  185E                     l38257:	
  9745                           ;cmdline.c: 115: proc_line(linebuffer);
  9746  185E  30CE               	movlw	(_linebuffer)&0ffh
  9747  185F  319A  22C6  3198   	fcall	_proc_line
  9748  1862  2863               	goto	l38259
  9749                           	line	116
  9750                           	
  9751  1863                     l15107:	
  9752                           	line	117
  9753                           	
  9754  1863                     l38259:	
  9755                           ;cmdline.c: 116: }
  9756                           ;cmdline.c: 117: curcolumn = 0;
  9757  1863  0020               	movlb 0	; select bank0
  9758  1864  01E7               	clrf	(proc_char@curcolumn)
  9759                           	line	119
  9760                           	
  9761  1865                     l38261:	
  9762                           ;cmdline.c: 119: if (localecho)
  9763  1865  086F               	movf	(_localecho),w
  9764  1866  1D03               	skipz
  9765  1867  2869               	goto	u11720
  9766  1868  288C               	goto	l15113
  9767  1869                     u11720:
  9768                           	line	120
  9769                           	
  9770  1869                     l38263:	
  9771                           ;cmdline.c: 120: printf("# ");
  9772  1869  3042               	movlw	low(STR_100|8000h)
  9773  186A  00AF               	movwf	(?_printf)
  9774  186B  3089               	movlw	high(STR_100|8000h)
  9775  186C  00B0               	movwf	((?_printf))+1
  9776  186D  3194  24A0  3198   	fcall	_printf
  9777  1870  288C               	goto	l15113
  9778                           	
  9779  1871                     l15108:	
  9780                           	line	121
  9781                           ;cmdline.c: 121: } else if (rxd == 0x7f) {
  9782  1871  288C               	goto	l15113
  9783                           	
  9784  1872                     l15105:	
  9785                           	
  9786  1872                     l38265:	
  9787  1872  0020               	movlb 0	; select bank0
  9788  1873  085E               	movf	(proc_char@rxd),w
  9789  1874  3A7F               	xorlw	07Fh&0ffh
  9790  1875  1D03               	skipz
  9791  1876  2878               	goto	u11731
  9792  1877  2879               	goto	u11730
  9793  1878                     u11731:
  9794  1878  288C               	goto	l15113
  9795  1879                     u11730:
  9796                           	line	123
  9797                           	
  9798  1879                     l38267:	
  9799                           ;cmdline.c: 123: if (curcolumn) {
  9800  1879  0867               	movf	(proc_char@curcolumn),w
  9801  187A  1D03               	skipz
  9802  187B  287D               	goto	u11740
  9803  187C  288C               	goto	l15113
  9804  187D                     u11740:
  9805                           	line	125
  9806                           	
  9807  187D                     l38269:	
  9808                           ;cmdline.c: 125: curcolumn--;
  9809  187D  3001               	movlw	low(01h)
  9810  187E  02E7               	subwf	(proc_char@curcolumn),f
  9811                           	line	127
  9812                           	
  9813  187F                     l38271:	
  9814                           ;cmdline.c: 127: if (localecho)
  9815  187F  086F               	movf	(_localecho),w
  9816  1880  1D03               	skipz
  9817  1881  2883               	goto	u11750
  9818  1882  288C               	goto	l15113
  9819  1883                     u11750:
  9820                           	line	128
  9821                           	
  9822  1883                     l38273:	
  9823                           ;cmdline.c: 128: putch(rxd);
  9824  1883  085E               	movf	(proc_char@rxd),w
  9825  1884  31AB  23C0  3198   	fcall	_putch
  9826  1887  288C               	goto	l15113
  9827                           	
  9828  1888                     l15112:	
  9829  1888  288C               	goto	l15113
  9830                           	line	129
  9831                           	
  9832  1889                     l15111:	
  9833  1889  288C               	goto	l15113
  9834                           	line	130
  9835                           	
  9836  188A                     l15110:	
  9837  188A  288C               	goto	l15113
  9838                           	line	131
  9839                           	
  9840  188B                     l15109:	
  9841  188B  288C               	goto	l15113
  9842                           	
  9843  188C                     l15104:	
  9844                           	
  9845  188C                     l15113:	
  9846  188C  0008               	return
  9847                           	opt stack 0
  9848                           GLOBAL	__end_of_proc_char
  9849  188D                     	__end_of_proc_char:
  9850 ;; =============== function _proc_char ends ============
  9851                           
  9852                           	signat	_proc_char,4216
  9853                           	global	_catsensor_event
  9854                           psect	text3230,local,class=CODE,delta=2
  9855                           global __ptext3230
  9856  188D                     __ptext3230:
  9857                           
  9858 ;; *************** function _catsensor_event *****************
  9859 ;; Defined at:
  9860 ;;		line 290 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  detected        1    wreg     unsigned char 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  detected        1   48[BANK0 ] unsigned char 
  9865 ;; Return value:  Size  Location     Type
  9866 ;;		None               void
  9867 ;; Registers used:
  9868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9875 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9878 ;;Total ram usage:        3 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    6
  9881 ;; This function calls:
  9882 ;;		_printtime
  9883 ;;		_printf
  9884 ;;		_timeoutnever
  9885 ;;		_settimeout
  9886 ;;		_update_display
  9887 ;; This function is called by:
  9888 ;;		_catsensor_work
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           psect	text3230
  9892                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  9893                           	line	290
  9894                           	global	__size_of_catsensor_event
  9895  00B5                     	__size_of_catsensor_event	equ	__end_of_catsensor_event-_catsensor_event
  9896                           	
  9897  188D                     _catsensor_event:	
  9898                           	opt	stack 8
  9899                           ; Regs used in _catsensor_event: [wreg-status,0+pclath+cstack]
  9900                           ;catsensor_event@detected stored from wreg
  9901                           	line	292
  9902  188D  0020               	movlb 0	; select bank0
  9903  188E  00D1               	movwf	(catsensor_event@detected)
  9904                           	
  9905  188F                     l38179:	
  9906                           ;userinterface.c: 292: cat_present = detected;
  9907  188F  10F0               	bcf	(_cat_present/8),(_cat_present)&7
  9908  1890  1C51               	btfss	(catsensor_event@detected),0
  9909  1891  2893               	goto	u11465
  9910  1892  14F0               	bsf	(_cat_present/8),(_cat_present)&7
  9911  1893                     u11465:
  9912                           
  9913                           	line	294
  9914                           	
  9915  1893                     l38181:	
  9916                           ;userinterface.c: 294: printtime();
  9917  1893  31AB  23ED  3198   	fcall	_printtime
  9918                           	line	295
  9919                           	
  9920  1896                     l38183:	
  9921                           ;userinterface.c: 295: printf("Cat %s\n", detected?"in":"out");
  9922  1896  0020               	movlb 0	; select bank0
  9923  1897  08D1               	movf	(catsensor_event@detected),f
  9924  1898  1D03               	skipz
  9925  1899  289B               	goto	u11471
  9926  189A  289C               	goto	u11470
  9927  189B                     u11471:
  9928  189B  28A1               	goto	l38187
  9929  189C                     u11470:
  9930                           	
  9931  189C                     l38185:	
  9932  189C  302E               	movlw	low(STR_97|8000h)
  9933  189D  00CF               	movwf	(_catsensor_event$10723)
  9934  189E  3089               	movlw	high(STR_97|8000h)
  9935  189F  00D0               	movwf	((_catsensor_event$10723))+1
  9936  18A0  28A6               	goto	l38189
  9937                           	
  9938  18A1                     l8679:	
  9939                           	
  9940  18A1                     l38187:	
  9941  18A1  3045               	movlw	low(STR_96|8000h)
  9942  18A2  00CF               	movwf	(_catsensor_event$10723)
  9943  18A3  3089               	movlw	high(STR_96|8000h)
  9944  18A4  00D0               	movwf	((_catsensor_event$10723))+1
  9945  18A5  28A6               	goto	l38189
  9946                           	
  9947  18A6                     l8681:	
  9948                           	
  9949  18A6                     l38189:	
  9950  18A6  30DA               	movlw	low(STR_95|8000h)
  9951  18A7  00AF               	movwf	(?_printf)
  9952  18A8  3088               	movlw	high(STR_95|8000h)
  9953  18A9  00B0               	movwf	((?_printf))+1
  9954  18AA  0850               	movf	(_catsensor_event$10723+1),w
  9955  18AB  01B2               	clrf	(1+?_printf+02h)
  9956  18AC  07B2               	addwf	(1+?_printf+02h)
  9957  18AD  084F               	movf	(_catsensor_event$10723),w
  9958  18AE  01B1               	clrf	(0+?_printf+02h)
  9959  18AF  07B1               	addwf	(0+?_printf+02h)
  9960                           
  9961  18B0  3194  24A0  3198   	fcall	_printf
  9962                           	line	298
  9963                           	
  9964  18B3                     l38191:	
  9965                           ;userinterface.c: 298: if (detected)
  9966  18B3  0020               	movlb 0	; select bank0
  9967  18B4  0851               	movf	(catsensor_event@detected),w
  9968  18B5  1D03               	skipz
  9969  18B6  28B8               	goto	u11480
  9970  18B7  28B9               	goto	l8682
  9971  18B8                     u11480:
  9972                           	line	299
  9973                           	
  9974  18B8                     l38193:	
  9975                           ;userinterface.c: 299: cat_detected = 1;
  9976  18B8  1470               	bsf	(_cat_detected/8),(_cat_detected)&7
  9977                           	
  9978  18B9                     l8682:	
  9979                           	line	302
  9980                           ;userinterface.c: 302: if (cat_detected)
  9981  18B9  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
  9982  18BA  28BC               	goto	u11491
  9983  18BB  28BD               	goto	u11490
  9984  18BC                     u11491:
  9985  18BC  28DB               	goto	l38201
  9986  18BD                     u11490:
  9987                           	line	303
  9988                           	
  9989  18BD                     l38195:	
  9990                           ;userinterface.c: 303: if (detected)
  9991  18BD  0851               	movf	(catsensor_event@detected),w
  9992  18BE  1D03               	skipz
  9993  18BF  28C1               	goto	u11500
  9994  18C0  28C9               	goto	l38199
  9995  18C1                     u11500:
  9996                           	line	304
  9997                           	
  9998  18C1                     l38197:	
  9999                           ;userinterface.c: 304: timeoutnever(&cattimer);
 10000  18C1  3040               	movlw	(_cattimer&0ffh)
 10001  18C2  00A5               	movwf	(?_timeoutnever)
 10002  18C3  3001               	movlw	0x2/2
 10003  18C4  00A6               	movwf	(?_timeoutnever+1)
 10004  18C5  31AA  222C  3198   	fcall	_timeoutnever
 10005  18C8  28DB               	goto	l38201
 10006                           	line	305
 10007                           	
 10008  18C9                     l8684:	
 10009                           	line	306
 10010                           	
 10011  18C9                     l38199:	
 10012                           ;userinterface.c: 305: else
 10013                           ;userinterface.c: 306: settimeout(&cattimer, (1 * 60 * (60 * (((((4UL * (1000UL * ((1000
                                 UL)))))/4)/8)))));
 10014  18C9  3040               	movlw	(_cattimer&0ffh)
 10015  18CA  0020               	movlb 0	; select bank0
 10016  18CB  00AD               	movwf	(?_settimeout)
 10017  18CC  3001               	movlw	0x2/2
 10018  18CD  00AE               	movwf	(?_settimeout+1)
 10019  18CE  301A               	movlw	01Ah
 10020  18CF  00B2               	movwf	3+(?_settimeout)+02h
 10021  18D0  30D2               	movlw	0D2h
 10022  18D1  00B1               	movwf	2+(?_settimeout)+02h
 10023  18D2  3074               	movlw	074h
 10024  18D3  00B0               	movwf	1+(?_settimeout)+02h
 10025  18D4  3080               	movlw	080h
 10026  18D5  00AF               	movwf	0+(?_settimeout)+02h
 10027                           
 10028  18D6  31A1  2147  3198   	fcall	_settimeout
 10029  18D9  28DB               	goto	l38201
 10030                           	
 10031  18DA                     l8685:	
 10032  18DA  28DB               	goto	l38201
 10033                           	
 10034  18DB                     l8683:	
 10035                           	line	312
 10036                           	
 10037  18DB                     l38201:	
 10038                           ;userinterface.c: 308: if ( (auto_mode == 5) ||
 10039                           ;userinterface.c: 309: (auto_mode == 6) ||
 10040                           ;userinterface.c: 310: (auto_mode == 7) ||
 10041                           ;userinterface.c: 311: (auto_mode == 8) ||
 10042                           ;userinterface.c: 312: (auto_mode == 9) ) {
 10043  18DB  0020               	movlb 0	; select bank0
 10044  18DC  0862               	movf	(_auto_mode),w
 10045  18DD  3A05               	xorlw	05h&0ffh
 10046  18DE  1903               	skipnz
 10047  18DF  28E1               	goto	u11511
 10048  18E0  28E2               	goto	u11510
 10049  18E1                     u11511:
 10050  18E1  28FA               	goto	l8688
 10051  18E2                     u11510:
 10052                           	
 10053  18E2                     l38203:	
 10054  18E2  0862               	movf	(_auto_mode),w
 10055  18E3  3A06               	xorlw	06h&0ffh
 10056  18E4  1903               	skipnz
 10057  18E5  28E7               	goto	u11521
 10058  18E6  28E8               	goto	u11520
 10059  18E7                     u11521:
 10060  18E7  28FA               	goto	l8688
 10061  18E8                     u11520:
 10062                           	
 10063  18E8                     l38205:	
 10064  18E8  0862               	movf	(_auto_mode),w
 10065  18E9  3A07               	xorlw	07h&0ffh
 10066  18EA  1903               	skipnz
 10067  18EB  28ED               	goto	u11531
 10068  18EC  28EE               	goto	u11530
 10069  18ED                     u11531:
 10070  18ED  28FA               	goto	l8688
 10071  18EE                     u11530:
 10072                           	
 10073  18EE                     l38207:	
 10074  18EE  0862               	movf	(_auto_mode),w
 10075  18EF  3A08               	xorlw	08h&0ffh
 10076  18F0  1903               	skipnz
 10077  18F1  28F3               	goto	u11541
 10078  18F2  28F4               	goto	u11540
 10079  18F3                     u11541:
 10080  18F3  28FA               	goto	l8688
 10081  18F4                     u11540:
 10082                           	
 10083  18F4                     l38209:	
 10084  18F4  0862               	movf	(_auto_mode),w
 10085  18F5  3A09               	xorlw	09h&0ffh
 10086  18F6  1D03               	skipz
 10087  18F7  28F9               	goto	u11551
 10088  18F8  28FA               	goto	u11550
 10089  18F9                     u11551:
 10090  18F9  2941               	goto	l8697
 10091  18FA                     u11550:
 10092                           	
 10093  18FA                     l8688:	
 10094                           	line	313
 10095                           ;userinterface.c: 313: if (cat_detected && state == 0) {
 10096  18FA  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 10097  18FB  28FD               	goto	u11561
 10098  18FC  28FE               	goto	u11560
 10099  18FD                     u11561:
 10100  18FD  293D               	goto	l38227
 10101  18FE                     u11560:
 10102                           	
 10103  18FE                     l38211:	
 10104  18FE  08E6               	movf	(_state),f
 10105  18FF  1D03               	skipz
 10106  1900  2902               	goto	u11571
 10107  1901  2903               	goto	u11570
 10108  1902                     u11571:
 10109  1902  293D               	goto	l38227
 10110  1903                     u11570:
 10111  1903  2927               	goto	l38223
 10112                           	line	314
 10113                           	
 10114  1904                     l38213:	
 10115                           ;userinterface.c: 314: switch(auto_mode) {
 10116  1904  2927               	goto	l38223
 10117                           	line	315
 10118                           ;userinterface.c: 315: case 5:
 10119                           	
 10120  1905                     l8691:	
 10121                           	line	316
 10122                           ;userinterface.c: 316: full_wash = 1;
 10123  1905  1571               	bsf	(_full_wash/8),(_full_wash)&7
 10124                           	line	317
 10125                           ;userinterface.c: 317: break;
 10126  1906  2938               	goto	l38225
 10127                           	line	318
 10128                           ;userinterface.c: 318: case 6:
 10129                           	
 10130  1907                     l8693:	
 10131                           	line	319
 10132                           	
 10133  1907                     l38215:	
 10134                           ;userinterface.c: 319: full_wash = (interval >= 1);
 10135  1907  0021               	movlb 1	; select bank1
 10136  1908  08D8               	movf	(_interval)^080h,f
 10137  1909  1D03               	skipz
 10138  190A  290C               	goto	u11581
 10139  190B  290E               	goto	u11580
 10140                           	
 10141  190C                     u11581:
 10142  190C  1571               	bsf	(_full_wash/8),(_full_wash)&7
 10143  190D  290F               	goto	u11594
 10144  190E                     u11580:
 10145  190E  1171               	bcf	(_full_wash/8),(_full_wash)&7
 10146  190F                     u11594:
 10147                           	line	320
 10148                           ;userinterface.c: 320: break;
 10149  190F  2938               	goto	l38225
 10150                           	line	321
 10151                           ;userinterface.c: 321: case 7:
 10152                           	
 10153  1910                     l8694:	
 10154                           	line	322
 10155                           	
 10156  1910                     l38217:	
 10157                           ;userinterface.c: 322: full_wash = (interval >= 2);
 10158  1910  3002               	movlw	(02h)
 10159  1911  0021               	movlb 1	; select bank1
 10160  1912  0258               	subwf	(_interval)^080h,w
 10161  1913  1803               	skipnc
 10162  1914  2916               	goto	u11601
 10163  1915  2918               	goto	u11600
 10164                           	
 10165  1916                     u11601:
 10166  1916  1571               	bsf	(_full_wash/8),(_full_wash)&7
 10167  1917  2919               	goto	u11614
 10168  1918                     u11600:
 10169  1918  1171               	bcf	(_full_wash/8),(_full_wash)&7
 10170  1919                     u11614:
 10171                           	line	323
 10172                           ;userinterface.c: 323: break;
 10173  1919  2938               	goto	l38225
 10174                           	line	324
 10175                           ;userinterface.c: 324: case 8:
 10176                           	
 10177  191A                     l8695:	
 10178                           	line	325
 10179                           	
 10180  191A                     l38219:	
 10181                           ;userinterface.c: 325: full_wash = (interval >= 3);
 10182  191A  3003               	movlw	(03h)
 10183  191B  0021               	movlb 1	; select bank1
 10184  191C  0258               	subwf	(_interval)^080h,w
 10185  191D  1803               	skipnc
 10186  191E  2920               	goto	u11621
 10187  191F  2922               	goto	u11620
 10188                           	
 10189  1920                     u11621:
 10190  1920  1571               	bsf	(_full_wash/8),(_full_wash)&7
 10191  1921  2923               	goto	u11634
 10192  1922                     u11620:
 10193  1922  1171               	bcf	(_full_wash/8),(_full_wash)&7
 10194  1923                     u11634:
 10195                           	line	326
 10196                           ;userinterface.c: 326: break;
 10197  1923  2938               	goto	l38225
 10198                           	line	327
 10199                           ;userinterface.c: 327: case 9:
 10200                           	
 10201  1924                     l8696:	
 10202                           	line	328
 10203                           ;userinterface.c: 328: full_wash = 0;
 10204  1924  1171               	bcf	(_full_wash/8),(_full_wash)&7
 10205                           	line	329
 10206                           ;userinterface.c: 329: break;
 10207  1925  2938               	goto	l38225
 10208                           	line	330
 10209                           	
 10210  1926                     l38221:	
 10211                           ;userinterface.c: 330: }
 10212  1926  2938               	goto	l38225
 10213                           	line	314
 10214                           	
 10215  1927                     l8690:	
 10216                           	
 10217  1927                     l38223:	
 10218  1927  0862               	movf	(_auto_mode),w
 10219                           	; Switch size 1, requested type "space"
 10220                           ; Number of cases is 5, Range of values is 5 to 9
 10221                           ; switch strategies available:
 10222                           ; Name         Instructions Cycles
 10223                           ; simple_byte           16     9 (average)
 10224                           ; direct_byte           19     9 (fixed)
 10225                           ; jumptable            263     9 (fixed)
 10226                           ;	Chosen strategy is simple_byte
 10227                           
 10228                           	opt asmopt_off
 10229  1928  3A05               	xorlw	5^0	; case 5
 10230  1929  1903               	skipnz
 10231  192A  2905               	goto	l8691
 10232  192B  3A03               	xorlw	6^5	; case 6
 10233  192C  1903               	skipnz
 10234  192D  2907               	goto	l38215
 10235  192E  3A01               	xorlw	7^6	; case 7
 10236  192F  1903               	skipnz
 10237  1930  2910               	goto	l38217
 10238  1931  3A0F               	xorlw	8^7	; case 8
 10239  1932  1903               	skipnz
 10240  1933  291A               	goto	l38219
 10241  1934  3A01               	xorlw	9^8	; case 9
 10242  1935  1903               	skipnz
 10243  1936  2924               	goto	l8696
 10244  1937  2938               	goto	l38225
 10245                           	opt asmopt_on
 10246                           
 10247                           	line	330
 10248                           	
 10249  1938                     l8692:	
 10250                           	line	331
 10251                           	
 10252  1938                     l38225:	
 10253                           ;userinterface.c: 331: state = 1;
 10254  1938  0020               	movlb 0	; select bank0
 10255  1939  01E6               	clrf	(_state)
 10256  193A  1403               	bsf	status,0
 10257  193B  0DE6               	rlf	(_state),f
 10258  193C  293D               	goto	l38227
 10259                           	line	332
 10260                           	
 10261  193D                     l8689:	
 10262                           	line	334
 10263                           	
 10264  193D                     l38227:	
 10265                           ;userinterface.c: 332: }
 10266                           ;userinterface.c: 334: update_display();
 10267  193D  3189  218C  3198   	fcall	_update_display
 10268  1940  2941               	goto	l8697
 10269                           	line	335
 10270                           	
 10271  1941                     l8686:	
 10272                           	line	336
 10273                           	
 10274  1941                     l8697:	
 10275  1941  0008               	return
 10276                           	opt stack 0
 10277                           GLOBAL	__end_of_catsensor_event
 10278  1942                     	__end_of_catsensor_event:
 10279 ;; =============== function _catsensor_event ends ============
 10280                           
 10281                           	signat	_catsensor_event,4216
 10282                           	global	_process_button
 10283                           psect	text3231,local,class=CODE,delta=2
 10284                           global __ptext3231
 10285  2215                     __ptext3231:
 10286                           
 10287 ;; *************** function _process_button *****************
 10288 ;; Defined at:
 10289 ;;		line 387 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  button_mask     1    wreg     unsigned char 
 10292 ;;  down            1   28[BANK0 ] unsigned char 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  button_mask     1   30[BANK0 ] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;		None               void
 10297 ;; Registers used:
 10298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10304 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10307 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10308 ;;Total ram usage:        3 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    6
 10311 ;; This function calls:
 10312 ;;		_set_Beeper
 10313 ;;		_settimeout
 10314 ;;		_timeoutnever
 10315 ;;		_update_display
 10316 ;; This function is called by:
 10317 ;;		_startbutton_event
 10318 ;;		_setupbutton_event
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           psect	text3231
 10322                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10323                           	line	387
 10324                           	global	__size_of_process_button
 10325  0069                     	__size_of_process_button	equ	__end_of_process_button-_process_button
 10326                           	
 10327  2215                     _process_button:	
 10328                           	opt	stack 7
 10329                           ; Regs used in _process_button: [wreg-status,0+pclath+cstack]
 10330                           ;process_button@button_mask stored from wreg
 10331                           	line	389
 10332  2215  0020               	movlb 0	; select bank0
 10333  2216  00BF               	movwf	(process_button@button_mask)
 10334                           	
 10335  2217                     l38145:	
 10336                           ;userinterface.c: 389: if (((buttonmask_cur & button_mask)?1:0) == down)
 10337  2217  0021               	movlb 1	; select bank1
 10338  2218  0856               	movf	(_buttonmask_cur)^080h,w
 10339  2219  0020               	movlb 0	; select bank0
 10340  221A  053F               	andwf	(process_button@button_mask),w
 10341  221B  3000               	movlw	0
 10342  221C  1D03               	btfss	status,2
 10343  221D  3001               	movlw	1
 10344  221E  063D               	xorwf	(process_button@down),w
 10345  221F  1D03               	skipz
 10346  2220  2A22               	goto	u11391
 10347  2221  2A23               	goto	u11390
 10348  2222                     u11391:
 10349  2222  2A25               	goto	l38149
 10350  2223                     u11390:
 10351  2223  2A7D               	goto	l8708
 10352                           	line	390
 10353                           	
 10354  2224                     l38147:	
 10355                           ;userinterface.c: 390: return;
 10356  2224  2A7D               	goto	l8708
 10357                           	
 10358  2225                     l8707:	
 10359                           	line	392
 10360                           	
 10361  2225                     l38149:	
 10362                           ;userinterface.c: 392: if (down) {
 10363  2225  083D               	movf	(process_button@down),w
 10364  2226  1D03               	skipz
 10365  2227  2A29               	goto	u11400
 10366  2228  2A50               	goto	l38161
 10367  2229                     u11400:
 10368                           	line	393
 10369                           	
 10370  2229                     l38151:	
 10371                           ;userinterface.c: 393: if (!locked)
 10372  2229  19F1               	btfsc	(_locked/8),(_locked)&7
 10373  222A  2A2C               	goto	u11411
 10374  222B  2A2D               	goto	u11410
 10375  222C                     u11411:
 10376  222C  2A32               	goto	l8710
 10377  222D                     u11410:
 10378                           	line	394
 10379                           	
 10380  222D                     l38153:	
 10381                           ;userinterface.c: 394: set_Beeper(0x01, 0);
 10382  222D  01AE               	clrf	(?_set_Beeper)
 10383  222E  3001               	movlw	(01h)
 10384  222F  31A8  2092  31A2   	fcall	_set_Beeper
 10385                           	
 10386  2232                     l8710:	
 10387                           	line	396
 10388                           ;userinterface.c: 396: settimeout(&holdtimeout, (2 * ((((4UL * (1000UL * ((1000UL)))))/4
                                 )/8)));
 10389  2232  305E               	movlw	(_holdtimeout&0ffh)
 10390  2233  0020               	movlb 0	; select bank0
 10391  2234  00AD               	movwf	(?_settimeout)
 10392  2235  3001               	movlw	0x2/2
 10393  2236  00AE               	movwf	(?_settimeout+1)
 10394  2237  3000               	movlw	0
 10395  2238  00B2               	movwf	3+(?_settimeout)+02h
 10396  2239  3003               	movlw	03h
 10397  223A  00B1               	movwf	2+(?_settimeout)+02h
 10398  223B  30D0               	movlw	0D0h
 10399  223C  00B0               	movwf	1+(?_settimeout)+02h
 10400  223D  3090               	movlw	090h
 10401  223E  00AF               	movwf	0+(?_settimeout)+02h
 10402                           
 10403  223F  31A1  2147  31A2   	fcall	_settimeout
 10404                           	line	397
 10405                           	
 10406  2242                     l38155:	
 10407                           ;userinterface.c: 397: longhandled = 0;
 10408  2242  1271               	bcf	(_longhandled/8),(_longhandled)&7
 10409                           	line	399
 10410                           	
 10411  2243                     l38157:	
 10412                           ;userinterface.c: 399: buttonmask_cur |= button_mask;
 10413  2243  0020               	movlb 0	; select bank0
 10414  2244  083F               	movf	(process_button@button_mask),w
 10415  2245  00BE               	movwf	(??_process_button+0)+0
 10416  2246  083E               	movf	(??_process_button+0)+0,w
 10417  2247  0021               	movlb 1	; select bank1
 10418  2248  04D6               	iorwf	(_buttonmask_cur)^080h,f
 10419                           	line	400
 10420                           	
 10421  2249                     l38159:	
 10422                           ;userinterface.c: 400: buttonmask_cum |= button_mask;
 10423  2249  0020               	movlb 0	; select bank0
 10424  224A  083F               	movf	(process_button@button_mask),w
 10425  224B  00BE               	movwf	(??_process_button+0)+0
 10426  224C  083E               	movf	(??_process_button+0)+0,w
 10427  224D  0021               	movlb 1	; select bank1
 10428  224E  04D5               	iorwf	(_buttonmask_cum)^080h,f
 10429                           	line	401
 10430                           ;userinterface.c: 401: } else {
 10431  224F  2A75               	goto	l38175
 10432                           	
 10433  2250                     l8709:	
 10434                           	line	403
 10435                           	
 10436  2250                     l38161:	
 10437                           ;userinterface.c: 403: timeoutnever(&holdtimeout);
 10438  2250  305E               	movlw	(_holdtimeout&0ffh)
 10439  2251  0020               	movlb 0	; select bank0
 10440  2252  00A5               	movwf	(?_timeoutnever)
 10441  2253  3001               	movlw	0x2/2
 10442  2254  00A6               	movwf	(?_timeoutnever+1)
 10443  2255  31AA  222C  31A2   	fcall	_timeoutnever
 10444                           	line	405
 10445                           	
 10446  2258                     l38163:	
 10447                           ;userinterface.c: 405: buttonmask_cur &= ~button_mask;
 10448  2258  0020               	movlb 0	; select bank0
 10449  2259  093F               	comf	(process_button@button_mask),w
 10450  225A  00BE               	movwf	(??_process_button+0)+0
 10451  225B  083E               	movf	(??_process_button+0)+0,w
 10452  225C  0021               	movlb 1	; select bank1
 10453  225D  05D6               	andwf	(_buttonmask_cur)^080h,f
 10454                           	line	406
 10455                           	
 10456  225E                     l38165:	
 10457                           ;userinterface.c: 406: if (!buttonmask_cur) {
 10458  225E  08D6               	movf	(_buttonmask_cur)^080h,f
 10459  225F  1D03               	skipz
 10460  2260  2A62               	goto	u11421
 10461  2261  2A63               	goto	u11420
 10462  2262                     u11421:
 10463  2262  2A75               	goto	l38175
 10464  2263                     u11420:
 10465                           	line	407
 10466                           	
 10467  2263                     l38167:	
 10468                           ;userinterface.c: 407: if( (!locked) && (!longhandled) )
 10469  2263  19F1               	btfsc	(_locked/8),(_locked)&7
 10470  2264  2A66               	goto	u11431
 10471  2265  2A67               	goto	u11430
 10472  2266                     u11431:
 10473  2266  2A72               	goto	l38173
 10474  2267                     u11430:
 10475                           	
 10476  2267                     l38169:	
 10477  2267  1A71               	btfsc	(_longhandled/8),(_longhandled)&7
 10478  2268  2A6A               	goto	u11441
 10479  2269  2A6B               	goto	u11440
 10480  226A                     u11441:
 10481  226A  2A72               	goto	l38173
 10482  226B                     u11440:
 10483                           	line	409
 10484                           	
 10485  226B                     l38171:	
 10486                           ;userinterface.c: 409: buttonmask_evt = buttonmask_cum;
 10487  226B  0855               	movf	(_buttonmask_cum)^080h,w
 10488  226C  0020               	movlb 0	; select bank0
 10489  226D  00BE               	movwf	(??_process_button+0)+0
 10490  226E  083E               	movf	(??_process_button+0)+0,w
 10491  226F  0021               	movlb 1	; select bank1
 10492  2270  00D7               	movwf	(_buttonmask_evt)^080h
 10493  2271  2A72               	goto	l38173
 10494                           	
 10495  2272                     l8713:	
 10496                           	line	411
 10497                           	
 10498  2272                     l38173:	
 10499                           ;userinterface.c: 411: buttonmask_cum = 0;
 10500  2272  01D5               	clrf	(_buttonmask_cum)^080h
 10501  2273  2A75               	goto	l38175
 10502                           	line	412
 10503                           	
 10504  2274                     l8712:	
 10505  2274  2A75               	goto	l38175
 10506                           	line	413
 10507                           	
 10508  2275                     l8711:	
 10509                           	line	414
 10510                           	
 10511  2275                     l38175:	
 10512                           ;userinterface.c: 412: }
 10513                           ;userinterface.c: 413: }
 10514                           ;userinterface.c: 414: if (locked)
 10515  2275  1DF1               	btfss	(_locked/8),(_locked)&7
 10516  2276  2A78               	goto	u11451
 10517  2277  2A79               	goto	u11450
 10518  2278                     u11451:
 10519  2278  2A7D               	goto	l8708
 10520  2279                     u11450:
 10521                           	line	415
 10522                           	
 10523  2279                     l38177:	
 10524                           ;userinterface.c: 415: update_display();
 10525  2279  3189  218C  31A2   	fcall	_update_display
 10526  227C  2A7D               	goto	l8708
 10527                           	
 10528  227D                     l8714:	
 10529                           	line	416
 10530                           	
 10531  227D                     l8708:	
 10532  227D  0008               	return
 10533                           	opt stack 0
 10534                           GLOBAL	__end_of_process_button
 10535  227E                     	__end_of_process_button:
 10536 ;; =============== function _process_button ends ============
 10537                           
 10538                           	signat	_process_button,8312
 10539                           	global	_start_long
 10540                           psect	text3232,local,class=CODE,delta=2
 10541                           global __ptext3232
 10542  29F6                     __ptext3232:
 10543                           
 10544 ;; *************** function _start_long *****************
 10545 ;; Defined at:
 10546 ;;		line 577 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;		None
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;		None
 10551 ;; Return value:  Size  Location     Type
 10552 ;;		None               void
 10553 ;; Registers used:
 10554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10564 ;;Total ram usage:        1 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    6
 10567 ;; This function calls:
 10568 ;;		_litterlanguage_running
 10569 ;;		_litterlanguage_start
 10570 ;;		_litterlanguage_stop
 10571 ;; This function is called by:
 10572 ;;		_userinterface_work
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           psect	text3232
 10576                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10577                           	line	577
 10578                           	global	__size_of_start_long
 10579  001A                     	__size_of_start_long	equ	__end_of_start_long-_start_long
 10580                           	
 10581  29F6                     _start_long:	
 10582                           	opt	stack 8
 10583                           ; Regs used in _start_long: [wreg-status,0+pclath+cstack]
 10584                           	line	578
 10585                           	
 10586  29F6                     l38135:	
 10587                           ;userinterface.c: 578: if (!litterlanguage_running()) {
 10588  29F6  31B7  27F0  31A9   	fcall	_litterlanguage_running
 10589  29F9  3800               	iorlw	0
 10590  29FA  1D03               	skipz
 10591  29FB  29FD               	goto	u11381
 10592  29FC  29FE               	goto	u11380
 10593  29FD                     u11381:
 10594  29FD  2A0B               	goto	l38143
 10595  29FE                     u11380:
 10596                           	line	580
 10597                           	
 10598  29FE                     l38137:	
 10599                           ;userinterface.c: 580: full_wash = 0;
 10600  29FE  1171               	bcf	(_full_wash/8),(_full_wash)&7
 10601                           	line	582
 10602                           	
 10603  29FF                     l38139:	
 10604                           ;userinterface.c: 582: litterlanguage_start(full_wash);
 10605  29FF  3000               	movlw	0
 10606  2A00  1971               	btfsc	(_full_wash/8),(_full_wash)&7
 10607  2A01  3001               	movlw	1
 10608  2A02  3189  214C  31A9   	fcall	_litterlanguage_start
 10609                           	line	584
 10610                           	
 10611  2A05                     l38141:	
 10612                           ;userinterface.c: 584: state = 2;
 10613  2A05  3002               	movlw	(02h)
 10614  2A06  0020               	movlb 0	; select bank0
 10615  2A07  00D2               	movwf	(??_start_long+0)+0
 10616  2A08  0852               	movf	(??_start_long+0)+0,w
 10617  2A09  00E6               	movwf	(_state)
 10618                           	line	585
 10619                           ;userinterface.c: 585: } else
 10620  2A0A  2A0F               	goto	l8795
 10621                           	
 10622  2A0B                     l8793:	
 10623                           	line	587
 10624                           	
 10625  2A0B                     l38143:	
 10626                           ;userinterface.c: 587: litterlanguage_stop();
 10627  2A0B  31A1  21AC  31A9   	fcall	_litterlanguage_stop
 10628  2A0E  2A0F               	goto	l8795
 10629                           	
 10630  2A0F                     l8794:	
 10631                           	line	588
 10632                           	
 10633  2A0F                     l8795:	
 10634  2A0F  0008               	return
 10635                           	opt stack 0
 10636                           GLOBAL	__end_of_start_long
 10637  2A10                     	__end_of_start_long:
 10638 ;; =============== function _start_long ends ============
 10639                           
 10640                           	signat	_start_long,88
 10641                           	global	_setup_short
 10642                           psect	text3233,local,class=CODE,delta=2
 10643                           global __ptext3233
 10644  2446                     __ptext3233:
 10645                           
 10646 ;; *************** function _setup_short *****************
 10647 ;; Defined at:
 10648 ;;		line 528 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;		None               void
 10655 ;; Registers used:
 10656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10663 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10665 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10666 ;;Total ram usage:        3 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:    6
 10669 ;; This function calls:
 10670 ;;		_set_mode
 10671 ;;		_settimeout
 10672 ;; This function is called by:
 10673 ;;		_userinterface_work
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           psect	text3233
 10677                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10678                           	line	528
 10679                           	global	__size_of_setup_short
 10680  0077                     	__size_of_setup_short	equ	__end_of_setup_short-_setup_short
 10681                           	
 10682  2446                     _setup_short:	
 10683                           	opt	stack 8
 10684                           ; Regs used in _setup_short: [wreg-status,0+pclath+cstack]
 10685                           	line	529
 10686                           	
 10687  2446                     l38099:	
 10688                           ;userinterface.c: 529: switch (panel_mode) {
 10689  2446  2CB0               	goto	l38133
 10690                           	line	530
 10691                           ;userinterface.c: 530: default:
 10692                           	
 10693  2447                     l8763:	
 10694                           	line	531
 10695                           ;userinterface.c: 531: panel_mode = 0;
 10696  2447  01D9               	clrf	(_panel_mode)^080h
 10697  2448  2C49               	goto	l38101
 10698                           	line	532
 10699                           ;userinterface.c: 532: case 0:
 10700                           	
 10701  2449                     l8764:	
 10702                           	line	533
 10703                           	
 10704  2449                     l38101:	
 10705                           ;userinterface.c: 533: set_mode((auto_mode==9)?0:auto_mode+1);
 10706  2449  0020               	movlb 0	; select bank0
 10707  244A  0862               	movf	(_auto_mode),w
 10708  244B  3A09               	xorlw	09h&0ffh
 10709  244C  1903               	skipnz
 10710  244D  2C4F               	goto	u11321
 10711  244E  2C50               	goto	u11320
 10712  244F                     u11321:
 10713  244F  2C58               	goto	l38105
 10714  2450                     u11320:
 10715                           	
 10716  2450                     l38103:	
 10717  2450  0862               	movf	(_auto_mode),w
 10718  2451  3E01               	addlw	low(01h)
 10719  2452  00CB               	movwf	(_setup_short$10735)
 10720  2453  3000               	movlw	high(01h)
 10721  2454  1803               	skipnc
 10722  2455  3001               	movlw	(high(01h)+1)&0ffh
 10723  2456  00CC               	movwf	((_setup_short$10735))+1
 10724  2457  2C5B               	goto	l38107
 10725                           	
 10726  2458                     l8766:	
 10727                           	
 10728  2458                     l38105:	
 10729  2458  01CB               	clrf	(_setup_short$10735)
 10730  2459  01CC               	clrf	(_setup_short$10735+1)
 10731  245A  2C5B               	goto	l38107
 10732                           	
 10733  245B                     l8768:	
 10734                           	
 10735  245B                     l38107:	
 10736  245B  084B               	movf	(_setup_short$10735),w
 10737  245C  31AE  26ED  31A4   	fcall	_set_mode
 10738                           	line	534
 10739                           ;userinterface.c: 534: break;
 10740  245F  2CBC               	goto	l8782
 10741                           	line	536
 10742                           ;userinterface.c: 536: case 1:
 10743                           	
 10744  2460                     l8770:	
 10745                           	line	537
 10746                           	
 10747  2460                     l38109:	
 10748                           ;userinterface.c: 537: if (cart_level < 10)
 10749  2460  300A               	movlw	(0Ah)
 10750  2461  0020               	movlb 0	; select bank0
 10751  2462  026E               	subwf	(_cart_level),w
 10752  2463  1803               	skipnc
 10753  2464  2C66               	goto	u11331
 10754  2465  2C67               	goto	u11330
 10755  2466                     u11331:
 10756  2466  2C6C               	goto	l38113
 10757  2467                     u11330:
 10758                           	line	538
 10759                           	
 10760  2467                     l38111:	
 10761                           ;userinterface.c: 538: cart_level = 10;
 10762  2467  300A               	movlw	(0Ah)
 10763  2468  00CA               	movwf	(??_setup_short+0)+0
 10764  2469  084A               	movf	(??_setup_short+0)+0,w
 10765  246A  00EE               	movwf	(_cart_level)
 10766  246B  2C9E               	goto	l38129
 10767                           	line	539
 10768                           	
 10769  246C                     l8771:	
 10770                           	
 10771  246C                     l38113:	
 10772                           ;userinterface.c: 539: else if (cart_level < 25)
 10773  246C  3019               	movlw	(019h)
 10774  246D  026E               	subwf	(_cart_level),w
 10775  246E  1803               	skipnc
 10776  246F  2C71               	goto	u11341
 10777  2470  2C72               	goto	u11340
 10778  2471                     u11341:
 10779  2471  2C77               	goto	l38117
 10780  2472                     u11340:
 10781                           	line	540
 10782                           	
 10783  2472                     l38115:	
 10784                           ;userinterface.c: 540: cart_level = 25;
 10785  2472  3019               	movlw	(019h)
 10786  2473  00CA               	movwf	(??_setup_short+0)+0
 10787  2474  084A               	movf	(??_setup_short+0)+0,w
 10788  2475  00EE               	movwf	(_cart_level)
 10789  2476  2C9E               	goto	l38129
 10790                           	line	541
 10791                           	
 10792  2477                     l8773:	
 10793                           	
 10794  2477                     l38117:	
 10795                           ;userinterface.c: 541: else if (cart_level < 50)
 10796  2477  3032               	movlw	(032h)
 10797  2478  026E               	subwf	(_cart_level),w
 10798  2479  1803               	skipnc
 10799  247A  2C7C               	goto	u11351
 10800  247B  2C7D               	goto	u11350
 10801  247C                     u11351:
 10802  247C  2C82               	goto	l38121
 10803  247D                     u11350:
 10804                           	line	542
 10805                           	
 10806  247D                     l38119:	
 10807                           ;userinterface.c: 542: cart_level = 50;
 10808  247D  3032               	movlw	(032h)
 10809  247E  00CA               	movwf	(??_setup_short+0)+0
 10810  247F  084A               	movf	(??_setup_short+0)+0,w
 10811  2480  00EE               	movwf	(_cart_level)
 10812  2481  2C9E               	goto	l38129
 10813                           	line	543
 10814                           	
 10815  2482                     l8775:	
 10816                           	
 10817  2482                     l38121:	
 10818                           ;userinterface.c: 543: else if (cart_level < 75)
 10819  2482  304B               	movlw	(04Bh)
 10820  2483  026E               	subwf	(_cart_level),w
 10821  2484  1803               	skipnc
 10822  2485  2C87               	goto	u11361
 10823  2486  2C88               	goto	u11360
 10824  2487                     u11361:
 10825  2487  2C8D               	goto	l38125
 10826  2488                     u11360:
 10827                           	line	544
 10828                           	
 10829  2488                     l38123:	
 10830                           ;userinterface.c: 544: cart_level = 75;
 10831  2488  304B               	movlw	(04Bh)
 10832  2489  00CA               	movwf	(??_setup_short+0)+0
 10833  248A  084A               	movf	(??_setup_short+0)+0,w
 10834  248B  00EE               	movwf	(_cart_level)
 10835  248C  2C9E               	goto	l38129
 10836                           	line	545
 10837                           	
 10838  248D                     l8777:	
 10839                           	
 10840  248D                     l38125:	
 10841                           ;userinterface.c: 545: else if (cart_level < 100)
 10842  248D  3064               	movlw	(064h)
 10843  248E  026E               	subwf	(_cart_level),w
 10844  248F  1803               	skipnc
 10845  2490  2C92               	goto	u11371
 10846  2491  2C93               	goto	u11370
 10847  2492                     u11371:
 10848  2492  2C98               	goto	l8779
 10849  2493                     u11370:
 10850                           	line	546
 10851                           	
 10852  2493                     l38127:	
 10853                           ;userinterface.c: 546: cart_level = 100;
 10854  2493  3064               	movlw	(064h)
 10855  2494  00CA               	movwf	(??_setup_short+0)+0
 10856  2495  084A               	movf	(??_setup_short+0)+0,w
 10857  2496  00EE               	movwf	(_cart_level)
 10858  2497  2C9E               	goto	l38129
 10859                           	line	547
 10860                           	
 10861  2498                     l8779:	
 10862                           	line	548
 10863                           ;userinterface.c: 547: else
 10864                           ;userinterface.c: 548: cart_level = 0;
 10865  2498  01EE               	clrf	(_cart_level)
 10866  2499  2C9E               	goto	l38129
 10867                           	
 10868  249A                     l8780:	
 10869  249A  2C9E               	goto	l38129
 10870                           	
 10871  249B                     l8778:	
 10872  249B  2C9E               	goto	l38129
 10873                           	
 10874  249C                     l8776:	
 10875  249C  2C9E               	goto	l38129
 10876                           	
 10877  249D                     l8774:	
 10878  249D  2C9E               	goto	l38129
 10879                           	
 10880  249E                     l8772:	
 10881                           	line	550
 10882                           	
 10883  249E                     l38129:	
 10884                           ;userinterface.c: 550: settimeout(&cartridgetimeout, (5 * ((((4UL * (1000UL * ((1000UL))
                                 )))/4)/8)));
 10885  249E  303A               	movlw	(_cartridgetimeout&0ffh)
 10886  249F  00AD               	movwf	(?_settimeout)
 10887  24A0  3001               	movlw	0x2/2
 10888  24A1  00AE               	movwf	(?_settimeout+1)
 10889  24A2  3000               	movlw	0
 10890  24A3  00B2               	movwf	3+(?_settimeout)+02h
 10891  24A4  3009               	movlw	09h
 10892  24A5  00B1               	movwf	2+(?_settimeout)+02h
 10893  24A6  3089               	movlw	089h
 10894  24A7  00B0               	movwf	1+(?_settimeout)+02h
 10895  24A8  3068               	movlw	068h
 10896  24A9  00AF               	movwf	0+(?_settimeout)+02h
 10897                           
 10898  24AA  31A1  2147  31A4   	fcall	_settimeout
 10899                           	line	551
 10900                           ;userinterface.c: 551: break;
 10901  24AD  2CBC               	goto	l8782
 10902                           	line	553
 10903                           ;userinterface.c: 553: case 2:
 10904                           	
 10905  24AE                     l8781:	
 10906                           	line	554
 10907                           ;userinterface.c: 554: break;
 10908  24AE  2CBC               	goto	l8782
 10909                           	line	555
 10910                           	
 10911  24AF                     l38131:	
 10912                           ;userinterface.c: 555: }
 10913  24AF  2CBC               	goto	l8782
 10914                           	line	529
 10915                           	
 10916  24B0                     l8762:	
 10917                           	
 10918  24B0                     l38133:	
 10919  24B0  0021               	movlb 1	; select bank1
 10920  24B1  0859               	movf	(_panel_mode)^080h,w
 10921                           	; Switch size 1, requested type "space"
 10922                           ; Number of cases is 3, Range of values is 0 to 2
 10923                           ; switch strategies available:
 10924                           ; Name         Instructions Cycles
 10925                           ; simple_byte           10     6 (average)
 10926                           ; direct_byte           12     6 (fixed)
 10927                           ; jumptable            260     6 (fixed)
 10928                           ; rangetable             7     4 (fixed)
 10929                           ; spacedrange           11     6 (fixed)
 10930                           ; locatedrange           3     3 (fixed)
 10931                           ;	Chosen strategy is simple_byte
 10932                           
 10933                           	opt asmopt_off
 10934  24B2  3A00               	xorlw	0^0	; case 0
 10935  24B3  1903               	skipnz
 10936  24B4  2C49               	goto	l38101
 10937  24B5  3A01               	xorlw	1^0	; case 1
 10938  24B6  1903               	skipnz
 10939  24B7  2C60               	goto	l38109
 10940  24B8  3A03               	xorlw	2^1	; case 2
 10941  24B9  1903               	skipnz
 10942  24BA  2CBC               	goto	l8782
 10943  24BB  2C47               	goto	l8763
 10944                           	opt asmopt_on
 10945                           
 10946                           	line	555
 10947                           	
 10948  24BC                     l8769:	
 10949                           	line	556
 10950                           	
 10951  24BC                     l8782:	
 10952  24BC  0008               	return
 10953                           	opt stack 0
 10954                           GLOBAL	__end_of_setup_short
 10955  24BD                     	__end_of_setup_short:
 10956 ;; =============== function _setup_short ends ============
 10957                           
 10958                           	signat	_setup_short,88
 10959                           	global	_start_short
 10960                           psect	text3234,local,class=CODE,delta=2
 10961                           global __ptext3234
 10962  01DE                     __ptext3234:
 10963                           
 10964 ;; *************** function _start_short *****************
 10965 ;; Defined at:
 10966 ;;		line 563 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;		None               void
 10973 ;; Registers used:
 10974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10983 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10984 ;;Total ram usage:        1 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    6
 10987 ;; This function calls:
 10988 ;;		_litterlanguage_running
 10989 ;;		_litterlanguage_start
 10990 ;;		_litterlanguage_paused
 10991 ;;		_litterlanguage_pause
 10992 ;; This function is called by:
 10993 ;;		_userinterface_work
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           psect	text3234
 10997                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10998                           	line	563
 10999                           	global	__size_of_start_short
 11000  0021                     	__size_of_start_short	equ	__end_of_start_short-_start_short
 11001                           	
 11002  01DE                     _start_short:	
 11003                           	opt	stack 8
 11004                           ; Regs used in _start_short: [wreg-status,0+pclath+cstack]
 11005                           	line	564
 11006                           	
 11007  01DE                     l38089:	
 11008                           ;userinterface.c: 564: if (!litterlanguage_running()) {
 11009  01DE  31B7  27F0  3181   	fcall	_litterlanguage_running
 11010  01E1  3800               	iorlw	0
 11011  01E2  1D03               	skipz
 11012  01E3  29E5               	goto	u11311
 11013  01E4  29E6               	goto	u11310
 11014  01E5                     u11311:
 11015  01E5  29F3               	goto	l38097
 11016  01E6                     u11310:
 11017                           	line	566
 11018                           	
 11019  01E6                     l38091:	
 11020                           ;userinterface.c: 566: full_wash = 1;
 11021  01E6  1571               	bsf	(_full_wash/8),(_full_wash)&7
 11022                           	line	568
 11023                           	
 11024  01E7                     l38093:	
 11025                           ;userinterface.c: 568: litterlanguage_start(full_wash);
 11026  01E7  3000               	movlw	0
 11027  01E8  1971               	btfsc	(_full_wash/8),(_full_wash)&7
 11028  01E9  3001               	movlw	1
 11029  01EA  3189  214C  3181   	fcall	_litterlanguage_start
 11030                           	line	570
 11031                           	
 11032  01ED                     l38095:	
 11033                           ;userinterface.c: 570: state = 2;
 11034  01ED  3002               	movlw	(02h)
 11035  01EE  0020               	movlb 0	; select bank0
 11036  01EF  00D7               	movwf	(??_start_short+0)+0
 11037  01F0  0857               	movf	(??_start_short+0)+0,w
 11038  01F1  00E6               	movwf	(_state)
 11039                           	line	571
 11040                           ;userinterface.c: 571: } else
 11041  01F2  29FE               	goto	l8790
 11042                           	
 11043  01F3                     l8788:	
 11044                           	line	573
 11045                           	
 11046  01F3                     l38097:	
 11047                           ;userinterface.c: 573: litterlanguage_pause(!litterlanguage_paused());
 11048  01F3  31A8  2032  3181   	fcall	_litterlanguage_paused
 11049  01F6  3A00               	xorlw	0&0ffh
 11050  01F7  3000               	movlw	0
 11051  01F8  1903               	skipnz
 11052  01F9  3001               	movlw	1
 11053  01FA  3192  2256  3181   	fcall	_litterlanguage_pause
 11054  01FD  29FE               	goto	l8790
 11055                           	
 11056  01FE                     l8789:	
 11057                           	line	574
 11058                           	
 11059  01FE                     l8790:	
 11060  01FE  0008               	return
 11061                           	opt stack 0
 11062                           GLOBAL	__end_of_start_short
 11063  01FF                     	__end_of_start_short:
 11064 ;; =============== function _start_short ends ============
 11065                           
 11066                           	signat	_start_short,88
 11067                           	global	_exe_instruction
 11068                           psect	text3235,local,class=CODE,delta=2
 11069                           global __ptext3235
 11070  0B3D                     __ptext3235:
 11071                           
 11072 ;; *************** function _exe_instruction *****************
 11073 ;; Defined at:
 11074 ;;		line 466 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;		None
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;  temp            2    4[BANK1 ] unsigned int 
 11079 ;; Return value:  Size  Location     Type
 11080 ;;		None               void
 11081 ;; Registers used:
 11082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11089 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
       0       0
 11090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11091 ;;      Totals:         0       1      38       0       0       0       0       0       0       0       0       0       
       0       0
 11092 ;;Total ram usage:       39 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:    6
 11095 ;; This function calls:
 11096 ;;		_printtime
 11097 ;;		_printf
 11098 ;;		_set_Bowl
 11099 ;;		_set_Arm
 11100 ;;		_eeprom_read
 11101 ;;		_eeprom_write
 11102 ;;		_water_detected
 11103 ;;		_water_fill
 11104 ;;		_settimeout
 11105 ;;		_timeoutnever
 11106 ;;		_set_Pump
 11107 ;;		_set_Dryer
 11108 ;;		___lmul
 11109 ;;		___wmul
 11110 ;;		___lwdiv
 11111 ;;		___lwmod
 11112 ;;		_set_Dosage
 11113 ;;		_memcpy
 11114 ;;		_litterlanguage_stop
 11115 ;;		_litterlanguage_event
 11116 ;; This function is called by:
 11117 ;;		_litterlanguage_work
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           psect	text3235
 11121                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 11122                           	line	466
 11123                           	global	__size_of_exe_instruction
 11124  04C3                     	__size_of_exe_instruction	equ	__end_of_exe_instruction-_exe_instruction
 11125                           	
 11126  0B3D                     _exe_instruction:	
 11127                           	opt	stack 8
 11128                           ; Regs used in _exe_instruction: [wreg-status,0+pclath+cstack]
 11129                           	line	471
 11130                           	
 11131  0B3D                     l37835:	
 11132                           ;litterlanguage.c: 467: static struct instruction const * ret_address;
 11133                           ;litterlanguage.c: 468: unsigned int temp;
 11134                           ;litterlanguage.c: 471: printtime();
 11135  0B3D  31AB  23ED  318B   	fcall	_printtime
 11136                           	line	472
 11137                           ;litterlanguage.c: 472: printf("IP 0x%04X: ", ins_pointer);
 11138  0B40  3039               	movlw	low(STR_39|8000h)
 11139  0B41  0020               	movlb 0	; select bank0
 11140  0B42  00AF               	movwf	(?_printf)
 11141  0B43  3088               	movlw	high(STR_39|8000h)
 11142  0B44  00B0               	movwf	((?_printf))+1
 11143  0B45  086C               	movf	(_ins_pointer+1),w
 11144  0B46  01B2               	clrf	(1+?_printf+02h)
 11145  0B47  07B2               	addwf	(1+?_printf+02h)
 11146  0B48  086B               	movf	(_ins_pointer),w
 11147  0B49  01B1               	clrf	(0+?_printf+02h)
 11148  0B4A  07B1               	addwf	(0+?_printf+02h)
 11149                           
 11150  0B4B  3194  24A0  318B   	fcall	_printf
 11151                           	line	474
 11152                           ;litterlanguage.c: 474: switch (cur_instruction.opcode) {
 11153  0B4E  2FEC               	goto	l38079
 11154                           	line	475
 11155                           ;litterlanguage.c: 475: case 0x01:
 11156                           	
 11157  0B4F                     l4354:	
 11158                           	line	477
 11159                           	
 11160  0B4F                     l37837:	
 11161                           ;litterlanguage.c: 477: printf("INS_BOWL, %s", (cur_instruction.operant == 0)?"BOWL_STOP
                                 ":((cur_instruction.operant == 1)?"BOWL_CW":"BOWL_CCW"));
 11162  0B4F  3001               	movlw	(01h)
 11163  0B50  3E68               	addlw	_cur_instruction&0ffh
 11164  0B51  0086               	movwf	fsr1l
 11165  0B52  0187               	clrf fsr1h	
 11166                           	
 11167  0B53  0016               	moviw	fsr1++
 11168  0B54  0401               	iorwf	indf1,w
 11169  0B55  1903               	skipnz
 11170  0B56  2B58               	goto	u11031
 11171  0B57  2B59               	goto	u11030
 11172  0B58                     u11031:
 11173  0B58  2B7A               	goto	l37847
 11174  0B59                     u11030:
 11175                           	
 11176  0B59                     l37839:	
 11177  0B59  3001               	movlw	(01h)
 11178  0B5A  3E68               	addlw	_cur_instruction&0ffh
 11179  0B5B  0086               	movwf	fsr1l
 11180  0B5C  0187               	clrf fsr1h	
 11181                           	
 11182  0B5D  3F40               	moviw	[0]fsr1
 11183  0B5E  3A01               	xorlw	low(01h)
 11184  0B5F  1D03               	skipz
 11185  0B60  2B63               	goto	u11045
 11186  0B61  3F41               	moviw	[1]fsr1
 11187  0B62  3A00               	xorlw	high(01h)
 11188  0B63                     u11045:
 11189  0B63  1903               	skipnz
 11190  0B64  2B66               	goto	u11041
 11191  0B65  2B67               	goto	u11040
 11192  0B66                     u11041:
 11193  0B66  2B6D               	goto	l37843
 11194  0B67                     u11040:
 11195                           	
 11196  0B67                     l37841:	
 11197  0B67  30C8               	movlw	low(STR_43|8000h)
 11198  0B68  0021               	movlb 1	; select bank1
 11199  0B69  00A8               	movwf	(_exe_instruction$5955)^080h
 11200  0B6A  3088               	movlw	high(STR_43|8000h)
 11201  0B6B  00A9               	movwf	((_exe_instruction$5955)^080h)+1
 11202  0B6C  2B73               	goto	l37845
 11203                           	
 11204  0B6D                     l4360:	
 11205                           	
 11206  0B6D                     l37843:	
 11207  0B6D  30FA               	movlw	low(STR_42|8000h)
 11208  0B6E  0021               	movlb 1	; select bank1
 11209  0B6F  00A8               	movwf	(_exe_instruction$5955)^080h
 11210  0B70  3088               	movlw	high(STR_42|8000h)
 11211  0B71  00A9               	movwf	((_exe_instruction$5955)^080h)+1
 11212  0B72  2B73               	goto	l37845
 11213                           	
 11214  0B73                     l4362:	
 11215                           	
 11216  0B73                     l37845:	
 11217  0B73  0829               	movf	(_exe_instruction$5955+1)^080h,w
 11218  0B74  01A7               	clrf	(_exe_instruction$5954+1)^080h
 11219  0B75  07A7               	addwf	(_exe_instruction$5954+1)^080h
 11220  0B76  0828               	movf	(_exe_instruction$5955)^080h,w
 11221  0B77  01A6               	clrf	(_exe_instruction$5954)^080h
 11222  0B78  07A6               	addwf	(_exe_instruction$5954)^080h
 11223                           
 11224  0B79  2B80               	goto	l37849
 11225                           	
 11226  0B7A                     l4356:	
 11227                           	
 11228  0B7A                     l37847:	
 11229  0B7A  3090               	movlw	low(STR_41|8000h)
 11230  0B7B  0021               	movlb 1	; select bank1
 11231  0B7C  00A6               	movwf	(_exe_instruction$5954)^080h
 11232  0B7D  3088               	movlw	high(STR_41|8000h)
 11233  0B7E  00A7               	movwf	((_exe_instruction$5954)^080h)+1
 11234  0B7F  2B80               	goto	l37849
 11235                           	
 11236  0B80                     l4358:	
 11237                           	
 11238  0B80                     l37849:	
 11239  0B80  3020               	movlw	low(STR_40|8000h)
 11240  0B81  0020               	movlb 0	; select bank0
 11241  0B82  00AF               	movwf	(?_printf)
 11242  0B83  3088               	movlw	high(STR_40|8000h)
 11243  0B84  00B0               	movwf	((?_printf))+1
 11244  0B85  0021               	movlb 1	; select bank1
 11245  0B86  0827               	movf	(_exe_instruction$5954+1)^080h,w
 11246  0B87  0020               	movlb 0	; select bank0
 11247  0B88  01B2               	clrf	(1+?_printf+02h)
 11248  0B89  07B2               	addwf	(1+?_printf+02h)
 11249  0B8A  0021               	movlb 1	; select bank1
 11250  0B8B  0826               	movf	(_exe_instruction$5954)^080h,w
 11251  0B8C  0020               	movlb 0	; select bank0
 11252  0B8D  01B1               	clrf	(0+?_printf+02h)
 11253  0B8E  07B1               	addwf	(0+?_printf+02h)
 11254                           
 11255  0B8F  3194  24A0  318B   	fcall	_printf
 11256                           	line	479
 11257                           	
 11258  0B92                     l37851:	
 11259                           ;litterlanguage.c: 479: set_Bowl((unsigned char)cur_instruction.operant);
 11260  0B92  0020               	movlb 0	; select bank0
 11261  0B93  0869               	movf	0+(_cur_instruction)+01h,w
 11262  0B94  31AA  22FF  318B   	fcall	_set_Bowl
 11263                           	line	480
 11264                           	
 11265  0B97                     l37853:	
 11266                           ;litterlanguage.c: 480: ins_pointer++;
 11267  0B97  3003               	movlw	low(03h)
 11268  0B98  0020               	movlb 0	; select bank0
 11269  0B99  07EB               	addwf	(_ins_pointer),f
 11270  0B9A  3000               	movlw	high(03h)
 11271  0B9B  3DEC               	addwfc	(_ins_pointer+1),f
 11272                           	line	481
 11273                           	
 11274  0B9C                     l37855:	
 11275                           ;litterlanguage.c: 481: ins_state = 3;
 11276  0B9C  3003               	movlw	(03h)
 11277  0B9D  00D0               	movwf	(??_exe_instruction+0)+0
 11278  0B9E  0850               	movf	(??_exe_instruction+0)+0,w
 11279  0B9F  00E5               	movwf	(_ins_state)
 11280                           	line	482
 11281                           ;litterlanguage.c: 482: break;
 11282  0BA0  2FF7               	goto	l38081
 11283                           	line	483
 11284                           ;litterlanguage.c: 483: case 0x02:
 11285                           	
 11286  0BA1                     l4364:	
 11287                           	line	485
 11288                           	
 11289  0BA1                     l37857:	
 11290                           ;litterlanguage.c: 485: printf("INS_ARM, %s", (cur_instruction.operant == 0)?"ARM_STOP":
                                 ((cur_instruction.operant == 1)?"ARM_DOWN":"ARM_UP"));
 11291  0BA1  3001               	movlw	(01h)
 11292  0BA2  3E68               	addlw	_cur_instruction&0ffh
 11293  0BA3  0086               	movwf	fsr1l
 11294  0BA4  0187               	clrf fsr1h	
 11295                           	
 11296  0BA5  0016               	moviw	fsr1++
 11297  0BA6  0401               	iorwf	indf1,w
 11298  0BA7  1903               	skipnz
 11299  0BA8  2BAA               	goto	u11051
 11300  0BA9  2BAB               	goto	u11050
 11301  0BAA                     u11051:
 11302  0BAA  2BCC               	goto	l37867
 11303  0BAB                     u11050:
 11304                           	
 11305  0BAB                     l37859:	
 11306  0BAB  3001               	movlw	(01h)
 11307  0BAC  3E68               	addlw	_cur_instruction&0ffh
 11308  0BAD  0086               	movwf	fsr1l
 11309  0BAE  0187               	clrf fsr1h	
 11310                           	
 11311  0BAF  3F40               	moviw	[0]fsr1
 11312  0BB0  3A01               	xorlw	low(01h)
 11313  0BB1  1D03               	skipz
 11314  0BB2  2BB5               	goto	u11065
 11315  0BB3  3F41               	moviw	[1]fsr1
 11316  0BB4  3A00               	xorlw	high(01h)
 11317  0BB5                     u11065:
 11318  0BB5  1903               	skipnz
 11319  0BB6  2BB8               	goto	u11061
 11320  0BB7  2BB9               	goto	u11060
 11321  0BB8                     u11061:
 11322  0BB8  2BBF               	goto	l37863
 11323  0BB9                     u11060:
 11324                           	
 11325  0BB9                     l37861:	
 11326  0BB9  3017               	movlw	low(STR_47|8000h)
 11327  0BBA  0021               	movlb 1	; select bank1
 11328  0BBB  00AC               	movwf	(_exe_instruction$5961)^080h
 11329  0BBC  3089               	movlw	high(STR_47|8000h)
 11330  0BBD  00AD               	movwf	((_exe_instruction$5961)^080h)+1
 11331  0BBE  2BC5               	goto	l37865
 11332                           	
 11333  0BBF                     l4370:	
 11334                           	
 11335  0BBF                     l37863:	
 11336  0BBF  30B6               	movlw	low(STR_46|8000h)
 11337  0BC0  0021               	movlb 1	; select bank1
 11338  0BC1  00AC               	movwf	(_exe_instruction$5961)^080h
 11339  0BC2  3088               	movlw	high(STR_46|8000h)
 11340  0BC3  00AD               	movwf	((_exe_instruction$5961)^080h)+1
 11341  0BC4  2BC5               	goto	l37865
 11342                           	
 11343  0BC5                     l4372:	
 11344                           	
 11345  0BC5                     l37865:	
 11346  0BC5  082D               	movf	(_exe_instruction$5961+1)^080h,w
 11347  0BC6  01AB               	clrf	(_exe_instruction$5960+1)^080h
 11348  0BC7  07AB               	addwf	(_exe_instruction$5960+1)^080h
 11349  0BC8  082C               	movf	(_exe_instruction$5961)^080h,w
 11350  0BC9  01AA               	clrf	(_exe_instruction$5960)^080h
 11351  0BCA  07AA               	addwf	(_exe_instruction$5960)^080h
 11352                           
 11353  0BCB  2BD2               	goto	l37869
 11354                           	
 11355  0BCC                     l4366:	
 11356                           	
 11357  0BCC                     l37867:	
 11358  0BCC  30BF               	movlw	low(STR_45|8000h)
 11359  0BCD  0021               	movlb 1	; select bank1
 11360  0BCE  00AA               	movwf	(_exe_instruction$5960)^080h
 11361  0BCF  3088               	movlw	high(STR_45|8000h)
 11362  0BD0  00AB               	movwf	((_exe_instruction$5960)^080h)+1
 11363  0BD1  2BD2               	goto	l37869
 11364                           	
 11365  0BD2                     l4368:	
 11366                           	
 11367  0BD2                     l37869:	
 11368  0BD2  3045               	movlw	low(STR_44|8000h)
 11369  0BD3  0020               	movlb 0	; select bank0
 11370  0BD4  00AF               	movwf	(?_printf)
 11371  0BD5  3088               	movlw	high(STR_44|8000h)
 11372  0BD6  00B0               	movwf	((?_printf))+1
 11373  0BD7  0021               	movlb 1	; select bank1
 11374  0BD8  082B               	movf	(_exe_instruction$5960+1)^080h,w
 11375  0BD9  0020               	movlb 0	; select bank0
 11376  0BDA  01B2               	clrf	(1+?_printf+02h)
 11377  0BDB  07B2               	addwf	(1+?_printf+02h)
 11378  0BDC  0021               	movlb 1	; select bank1
 11379  0BDD  082A               	movf	(_exe_instruction$5960)^080h,w
 11380  0BDE  0020               	movlb 0	; select bank0
 11381  0BDF  01B1               	clrf	(0+?_printf+02h)
 11382  0BE0  07B1               	addwf	(0+?_printf+02h)
 11383                           
 11384  0BE1  3194  24A0  318B   	fcall	_printf
 11385                           	line	487
 11386                           	
 11387  0BE4                     l37871:	
 11388                           ;litterlanguage.c: 487: set_Arm((unsigned char)cur_instruction.operant);
 11389  0BE4  0020               	movlb 0	; select bank0
 11390  0BE5  0869               	movf	0+(_cur_instruction)+01h,w
 11391  0BE6  31AB  2323  318B   	fcall	_set_Arm
 11392                           	line	488
 11393                           	
 11394  0BE9                     l37873:	
 11395                           ;litterlanguage.c: 488: ins_pointer++;
 11396  0BE9  3003               	movlw	low(03h)
 11397  0BEA  0020               	movlb 0	; select bank0
 11398  0BEB  07EB               	addwf	(_ins_pointer),f
 11399  0BEC  3000               	movlw	high(03h)
 11400  0BED  3DEC               	addwfc	(_ins_pointer+1),f
 11401                           	line	489
 11402                           	
 11403  0BEE                     l37875:	
 11404                           ;litterlanguage.c: 489: ins_state = 3;
 11405  0BEE  3003               	movlw	(03h)
 11406  0BEF  00D0               	movwf	(??_exe_instruction+0)+0
 11407  0BF0  0850               	movf	(??_exe_instruction+0)+0,w
 11408  0BF1  00E5               	movwf	(_ins_state)
 11409                           	line	490
 11410                           ;litterlanguage.c: 490: break;
 11411  0BF2  2FF7               	goto	l38081
 11412                           	line	491
 11413                           ;litterlanguage.c: 491: case 0x03:
 11414                           	
 11415  0BF3                     l4373:	
 11416                           	line	493
 11417                           ;litterlanguage.c: 493: printf("INS_WATER, %s%s", cur_instruction.operant?"on":"off", we
                                 t_program?"":" (nop)");
 11418  0BF3  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 11419  0BF4  2BF6               	goto	u11071
 11420  0BF5  2BF7               	goto	u11070
 11421  0BF6                     u11071:
 11422  0BF6  2BFD               	goto	l37879
 11423  0BF7                     u11070:
 11424                           	
 11425  0BF7                     l37877:	
 11426  0BF7  3010               	movlw	low(STR_52|8000h)
 11427  0BF8  0021               	movlb 1	; select bank1
 11428  0BF9  00AE               	movwf	(_exe_instruction$5967)^080h
 11429  0BFA  3089               	movlw	high(STR_52|8000h)
 11430  0BFB  00AF               	movwf	((_exe_instruction$5967)^080h)+1
 11431  0BFC  2C03               	goto	l37881
 11432                           	
 11433  0BFD                     l4375:	
 11434                           	
 11435  0BFD                     l37879:	
 11436  0BFD  30F6               	movlw	low(STR_51|8000h)
 11437  0BFE  0021               	movlb 1	; select bank1
 11438  0BFF  00AE               	movwf	(_exe_instruction$5967)^080h
 11439  0C00  3087               	movlw	high(STR_51|8000h)
 11440  0C01  00AF               	movwf	((_exe_instruction$5967)^080h)+1
 11441  0C02  2C03               	goto	l37881
 11442                           	
 11443  0C03                     l4377:	
 11444                           	
 11445  0C03                     l37881:	
 11446  0C03  0020               	movlb 0	; select bank0
 11447  0C04  086A               	movf	(1+(_cur_instruction)+01h),w
 11448  0C05  0469               	iorwf	(0+(_cur_instruction)+01h),w
 11449  0C06  1D03               	skipz
 11450  0C07  2C09               	goto	u11081
 11451  0C08  2C0A               	goto	u11080
 11452  0C09                     u11081:
 11453  0C09  2C10               	goto	l37885
 11454  0C0A                     u11080:
 11455                           	
 11456  0C0A                     l37883:	
 11457  0C0A  3032               	movlw	low(STR_50|8000h)
 11458  0C0B  0021               	movlb 1	; select bank1
 11459  0C0C  00B0               	movwf	(_exe_instruction$5968)^080h
 11460  0C0D  3089               	movlw	high(STR_50|8000h)
 11461  0C0E  00B1               	movwf	((_exe_instruction$5968)^080h)+1
 11462  0C0F  2C16               	goto	l37887
 11463                           	
 11464  0C10                     l4379:	
 11465                           	
 11466  0C10                     l37885:	
 11467  0C10  3048               	movlw	low(STR_49|8000h)
 11468  0C11  0021               	movlb 1	; select bank1
 11469  0C12  00B0               	movwf	(_exe_instruction$5968)^080h
 11470  0C13  3089               	movlw	high(STR_49|8000h)
 11471  0C14  00B1               	movwf	((_exe_instruction$5968)^080h)+1
 11472  0C15  2C16               	goto	l37887
 11473                           	
 11474  0C16                     l4381:	
 11475                           	
 11476  0C16                     l37887:	
 11477  0C16  305F               	movlw	low(STR_48|8000h)
 11478  0C17  0020               	movlb 0	; select bank0
 11479  0C18  00AF               	movwf	(?_printf)
 11480  0C19  3087               	movlw	high(STR_48|8000h)
 11481  0C1A  00B0               	movwf	((?_printf))+1
 11482  0C1B  0021               	movlb 1	; select bank1
 11483  0C1C  0831               	movf	(_exe_instruction$5968+1)^080h,w
 11484  0C1D  0020               	movlb 0	; select bank0
 11485  0C1E  01B2               	clrf	(1+?_printf+02h)
 11486  0C1F  07B2               	addwf	(1+?_printf+02h)
 11487  0C20  0021               	movlb 1	; select bank1
 11488  0C21  0830               	movf	(_exe_instruction$5968)^080h,w
 11489  0C22  0020               	movlb 0	; select bank0
 11490  0C23  01B1               	clrf	(0+?_printf+02h)
 11491  0C24  07B1               	addwf	(0+?_printf+02h)
 11492                           
 11493  0C25  0021               	movlb 1	; select bank1
 11494  0C26  082F               	movf	(_exe_instruction$5967+1)^080h,w
 11495  0C27  0020               	movlb 0	; select bank0
 11496  0C28  01B4               	clrf	(1+?_printf+04h)
 11497  0C29  07B4               	addwf	(1+?_printf+04h)
 11498  0C2A  0021               	movlb 1	; select bank1
 11499  0C2B  082E               	movf	(_exe_instruction$5967)^080h,w
 11500  0C2C  0020               	movlb 0	; select bank0
 11501  0C2D  01B3               	clrf	(0+?_printf+04h)
 11502  0C2E  07B3               	addwf	(0+?_printf+04h)
 11503                           
 11504  0C2F  3194  24A0  318B   	fcall	_printf
 11505                           	line	495
 11506                           	
 11507  0C32                     l37889:	
 11508                           ;litterlanguage.c: 495: if (wet_program)
 11509  0C32  0020               	movlb 0	; select bank0
 11510  0C33  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 11511  0C34  2C36               	goto	u11091
 11512  0C35  2C37               	goto	u11090
 11513  0C36                     u11091:
 11514  0C36  2C93               	goto	l37911
 11515  0C37                     u11090:
 11516                           	line	496
 11517                           	
 11518  0C37                     l37891:	
 11519                           ;litterlanguage.c: 496: if (cur_instruction.operant) {
 11520  0C37  3001               	movlw	(01h)
 11521  0C38  3E68               	addlw	_cur_instruction&0ffh
 11522  0C39  0086               	movwf	fsr1l
 11523  0C3A  0187               	clrf fsr1h	
 11524                           	
 11525  0C3B  0016               	moviw	fsr1++
 11526  0C3C  0401               	iorwf	indf1,w
 11527  0C3D  1903               	skipnz
 11528  0C3E  2C40               	goto	u11101
 11529  0C3F  2C41               	goto	u11100
 11530  0C40                     u11101:
 11531  0C40  2C85               	goto	l37907
 11532  0C41                     u11100:
 11533                           	line	497
 11534                           	
 11535  0C41                     l37893:	
 11536                           ;litterlanguage.c: 497: if (eeprom_read((3)) < 2)
 11537  0C41  3003               	movlw	(03h)
 11538  0C42  31AA  22DC  318B   	fcall	_eeprom_read
 11539  0C45  0020               	movlb 0	; select bank0
 11540  0C46  00D0               	movwf	(??_exe_instruction+0)+0
 11541  0C47  3002               	movlw	(02h)
 11542  0C48  0250               	subwf	0+(??_exe_instruction+0)+0,w
 11543  0C49  1803               	skipnc
 11544  0C4A  2C4C               	goto	u11111
 11545  0C4B  2C4D               	goto	u11110
 11546  0C4C                     u11111:
 11547  0C4C  2C56               	goto	l37897
 11548  0C4D                     u11110:
 11549                           	line	498
 11550                           	
 11551  0C4D                     l37895:	
 11552                           ;litterlanguage.c: 498: eeprom_write((3), 2);
 11553  0C4D  3002               	movlw	(02h)
 11554  0C4E  00D0               	movwf	(??_exe_instruction+0)+0
 11555  0C4F  0850               	movf	(??_exe_instruction+0)+0,w
 11556  0C50  00A1               	movwf	(?_eeprom_write)
 11557  0C51  3003               	movlw	(03h)
 11558  0C52  31AC  24A5  318B   	fcall	_eeprom_write
 11559  0C55  2C56               	goto	l37897
 11560                           	
 11561  0C56                     l4384:	
 11562                           	line	500
 11563                           	
 11564  0C56                     l37897:	
 11565                           ;litterlanguage.c: 500: if (!water_detected()) {
 11566  0C56  31B7  27D8  318B   	fcall	_water_detected
 11567  0C59  3800               	iorlw	0
 11568  0C5A  1D03               	skipz
 11569  0C5B  2C5D               	goto	u11121
 11570  0C5C  2C5E               	goto	u11120
 11571  0C5D                     u11121:
 11572  0C5D  2C7B               	goto	l37905
 11573  0C5E                     u11120:
 11574                           	line	502
 11575                           	
 11576  0C5E                     l37899:	
 11577                           ;litterlanguage.c: 502: printf(" Filling");
 11578  0C5E  30D1               	movlw	low(STR_53|8000h)
 11579  0C5F  0020               	movlb 0	; select bank0
 11580  0C60  00AF               	movwf	(?_printf)
 11581  0C61  3088               	movlw	high(STR_53|8000h)
 11582  0C62  00B0               	movwf	((?_printf))+1
 11583  0C63  3194  24A0  318B   	fcall	_printf
 11584                           	line	504
 11585                           	
 11586  0C66                     l37901:	
 11587                           ;litterlanguage.c: 504: water_fill(1);
 11588  0C66  3001               	movlw	(01h)
 11589  0C67  31A9  217E  318B   	fcall	_water_fill
 11590                           	line	505
 11591                           	
 11592  0C6A                     l37903:	
 11593                           ;litterlanguage.c: 505: settimeout(&timer_fill, ((3*60+15)*((((4UL * (1000UL * ((1000UL)
                                 ))))/4)/8)));
 11594  0C6A  30E9               	movlw	(_timer_fill&0ffh)
 11595  0C6B  0020               	movlb 0	; select bank0
 11596  0C6C  00AD               	movwf	(?_settimeout)
 11597  0C6D  3000               	movlw	0x1/2
 11598  0C6E  00AE               	movwf	(?_settimeout+1)
 11599  0C6F  3001               	movlw	01h
 11600  0C70  00B2               	movwf	3+(?_settimeout)+02h
 11601  0C71  3073               	movlw	073h
 11602  0C72  00B1               	movwf	2+(?_settimeout)+02h
 11603  0C73  30EE               	movlw	0EEh
 11604  0C74  00B0               	movwf	1+(?_settimeout)+02h
 11605  0C75  30D8               	movlw	0D8h
 11606  0C76  00AF               	movwf	0+(?_settimeout)+02h
 11607                           
 11608  0C77  31A1  2147  318B   	fcall	_settimeout
 11609                           	line	507
 11610                           ;litterlanguage.c: 507: }
 11611  0C7A  2C93               	goto	l37911
 11612                           	line	509
 11613                           	
 11614  0C7B                     l4385:	
 11615                           	line	510
 11616                           	
 11617  0C7B                     l37905:	
 11618                           ;litterlanguage.c: 509: else
 11619                           ;litterlanguage.c: 510: printf(" (skipped)");
 11620  0C7B  305C               	movlw	low(STR_54|8000h)
 11621  0C7C  0020               	movlb 0	; select bank0
 11622  0C7D  00AF               	movwf	(?_printf)
 11623  0C7E  3088               	movlw	high(STR_54|8000h)
 11624  0C7F  00B0               	movwf	((?_printf))+1
 11625  0C80  3194  24A0  318B   	fcall	_printf
 11626  0C83  2C93               	goto	l37911
 11627                           	
 11628  0C84                     l4386:	
 11629                           	line	512
 11630                           ;litterlanguage.c: 512: } else {
 11631  0C84  2C93               	goto	l37911
 11632                           	
 11633  0C85                     l4383:	
 11634                           	line	514
 11635                           	
 11636  0C85                     l37907:	
 11637                           ;litterlanguage.c: 514: water_fill(0);
 11638  0C85  3000               	movlw	(0)
 11639  0C86  31A9  217E  318B   	fcall	_water_fill
 11640                           	line	515
 11641                           	
 11642  0C89                     l37909:	
 11643                           ;litterlanguage.c: 515: timeoutnever(&timer_fill);
 11644  0C89  30E9               	movlw	(_timer_fill&0ffh)
 11645  0C8A  0020               	movlb 0	; select bank0
 11646  0C8B  00A5               	movwf	(?_timeoutnever)
 11647  0C8C  3000               	movlw	0x1/2
 11648  0C8D  00A6               	movwf	(?_timeoutnever+1)
 11649  0C8E  31AA  222C  318B   	fcall	_timeoutnever
 11650  0C91  2C93               	goto	l37911
 11651                           	line	516
 11652                           	
 11653  0C92                     l4387:	
 11654  0C92  2C93               	goto	l37911
 11655                           	
 11656  0C93                     l4382:	
 11657                           	line	517
 11658                           	
 11659  0C93                     l37911:	
 11660                           ;litterlanguage.c: 516: }
 11661                           ;litterlanguage.c: 517: ins_pointer++;
 11662  0C93  3003               	movlw	low(03h)
 11663  0C94  0020               	movlb 0	; select bank0
 11664  0C95  07EB               	addwf	(_ins_pointer),f
 11665  0C96  3000               	movlw	high(03h)
 11666  0C97  3DEC               	addwfc	(_ins_pointer+1),f
 11667                           	line	518
 11668                           	
 11669  0C98                     l37913:	
 11670                           ;litterlanguage.c: 518: ins_state = 3;
 11671  0C98  3003               	movlw	(03h)
 11672  0C99  00D0               	movwf	(??_exe_instruction+0)+0
 11673  0C9A  0850               	movf	(??_exe_instruction+0)+0,w
 11674  0C9B  00E5               	movwf	(_ins_state)
 11675                           	line	519
 11676                           ;litterlanguage.c: 519: break;
 11677  0C9C  2FF7               	goto	l38081
 11678                           	line	520
 11679                           ;litterlanguage.c: 520: case 0x04:
 11680                           	
 11681  0C9D                     l4388:	
 11682                           	line	522
 11683                           ;litterlanguage.c: 522: printf("INS_PUMP, %s%s", cur_instruction.operant?"on":"off", wet
                                 _program?"":" (nop)");
 11684  0C9D  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 11685  0C9E  2CA0               	goto	u11131
 11686  0C9F  2CA1               	goto	u11130
 11687  0CA0                     u11131:
 11688  0CA0  2CA7               	goto	l37917
 11689  0CA1                     u11130:
 11690                           	
 11691  0CA1                     l37915:	
 11692  0CA1  3010               	movlw	low(STR_59|8000h)
 11693  0CA2  0021               	movlb 1	; select bank1
 11694  0CA3  00B2               	movwf	(_exe_instruction$5976)^080h
 11695  0CA4  3089               	movlw	high(STR_59|8000h)
 11696  0CA5  00B3               	movwf	((_exe_instruction$5976)^080h)+1
 11697  0CA6  2CAD               	goto	l37919
 11698                           	
 11699  0CA7                     l4390:	
 11700                           	
 11701  0CA7                     l37917:	
 11702  0CA7  30F6               	movlw	low(STR_58|8000h)
 11703  0CA8  0021               	movlb 1	; select bank1
 11704  0CA9  00B2               	movwf	(_exe_instruction$5976)^080h
 11705  0CAA  3087               	movlw	high(STR_58|8000h)
 11706  0CAB  00B3               	movwf	((_exe_instruction$5976)^080h)+1
 11707  0CAC  2CAD               	goto	l37919
 11708                           	
 11709  0CAD                     l4392:	
 11710                           	
 11711  0CAD                     l37919:	
 11712  0CAD  0020               	movlb 0	; select bank0
 11713  0CAE  086A               	movf	(1+(_cur_instruction)+01h),w
 11714  0CAF  0469               	iorwf	(0+(_cur_instruction)+01h),w
 11715  0CB0  1D03               	skipz
 11716  0CB1  2CB3               	goto	u11141
 11717  0CB2  2CB4               	goto	u11140
 11718  0CB3                     u11141:
 11719  0CB3  2CBA               	goto	l37923
 11720  0CB4                     u11140:
 11721                           	
 11722  0CB4                     l37921:	
 11723  0CB4  3032               	movlw	low(STR_57|8000h)
 11724  0CB5  0021               	movlb 1	; select bank1
 11725  0CB6  00B4               	movwf	(_exe_instruction$5977)^080h
 11726  0CB7  3089               	movlw	high(STR_57|8000h)
 11727  0CB8  00B5               	movwf	((_exe_instruction$5977)^080h)+1
 11728  0CB9  2CC0               	goto	l37925
 11729                           	
 11730  0CBA                     l4394:	
 11731                           	
 11732  0CBA                     l37923:	
 11733  0CBA  3048               	movlw	low(STR_56|8000h)
 11734  0CBB  0021               	movlb 1	; select bank1
 11735  0CBC  00B4               	movwf	(_exe_instruction$5977)^080h
 11736  0CBD  3089               	movlw	high(STR_56|8000h)
 11737  0CBE  00B5               	movwf	((_exe_instruction$5977)^080h)+1
 11738  0CBF  2CC0               	goto	l37925
 11739                           	
 11740  0CC0                     l4396:	
 11741                           	
 11742  0CC0                     l37925:	
 11743  0CC0  30CC               	movlw	low(STR_55|8000h)
 11744  0CC1  0020               	movlb 0	; select bank0
 11745  0CC2  00AF               	movwf	(?_printf)
 11746  0CC3  3087               	movlw	high(STR_55|8000h)
 11747  0CC4  00B0               	movwf	((?_printf))+1
 11748  0CC5  0021               	movlb 1	; select bank1
 11749  0CC6  0835               	movf	(_exe_instruction$5977+1)^080h,w
 11750  0CC7  0020               	movlb 0	; select bank0
 11751  0CC8  01B2               	clrf	(1+?_printf+02h)
 11752  0CC9  07B2               	addwf	(1+?_printf+02h)
 11753  0CCA  0021               	movlb 1	; select bank1
 11754  0CCB  0834               	movf	(_exe_instruction$5977)^080h,w
 11755  0CCC  0020               	movlb 0	; select bank0
 11756  0CCD  01B1               	clrf	(0+?_printf+02h)
 11757  0CCE  07B1               	addwf	(0+?_printf+02h)
 11758                           
 11759  0CCF  0021               	movlb 1	; select bank1
 11760  0CD0  0833               	movf	(_exe_instruction$5976+1)^080h,w
 11761  0CD1  0020               	movlb 0	; select bank0
 11762  0CD2  01B4               	clrf	(1+?_printf+04h)
 11763  0CD3  07B4               	addwf	(1+?_printf+04h)
 11764  0CD4  0021               	movlb 1	; select bank1
 11765  0CD5  0832               	movf	(_exe_instruction$5976)^080h,w
 11766  0CD6  0020               	movlb 0	; select bank0
 11767  0CD7  01B3               	clrf	(0+?_printf+04h)
 11768  0CD8  07B3               	addwf	(0+?_printf+04h)
 11769                           
 11770  0CD9  3194  24A0  318B   	fcall	_printf
 11771                           	line	524
 11772                           	
 11773  0CDC                     l37927:	
 11774                           ;litterlanguage.c: 524: if (wet_program) {
 11775  0CDC  0020               	movlb 0	; select bank0
 11776  0CDD  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 11777  0CDE  2CE0               	goto	u11151
 11778  0CDF  2CE1               	goto	u11150
 11779  0CE0                     u11151:
 11780  0CE0  2CEE               	goto	l37933
 11781  0CE1                     u11150:
 11782                           	line	526
 11783                           	
 11784  0CE1                     l37929:	
 11785                           ;litterlanguage.c: 526: printf(" Draining");
 11786  0CE1  309A               	movlw	low(STR_60|8000h)
 11787  0CE2  00AF               	movwf	(?_printf)
 11788  0CE3  3088               	movlw	high(STR_60|8000h)
 11789  0CE4  00B0               	movwf	((?_printf))+1
 11790  0CE5  3194  24A0  318B   	fcall	_printf
 11791                           	line	528
 11792                           	
 11793  0CE8                     l37931:	
 11794                           ;litterlanguage.c: 528: set_Pump((unsigned char)cur_instruction.operant);
 11795  0CE8  0020               	movlb 0	; select bank0
 11796  0CE9  0869               	movf	0+(_cur_instruction)+01h,w
 11797  0CEA  31A8  20FE  318B   	fcall	_set_Pump
 11798                           	line	529
 11799                           ;litterlanguage.c: 529: }
 11800  0CED  2CF7               	goto	l37935
 11801                           	line	531
 11802                           	
 11803  0CEE                     l4397:	
 11804                           	line	532
 11805                           	
 11806  0CEE                     l37933:	
 11807                           ;litterlanguage.c: 531: else
 11808                           ;litterlanguage.c: 532: printf(" (skipped)");
 11809  0CEE  305C               	movlw	low(STR_61|8000h)
 11810  0CEF  0020               	movlb 0	; select bank0
 11811  0CF0  00AF               	movwf	(?_printf)
 11812  0CF1  3088               	movlw	high(STR_61|8000h)
 11813  0CF2  00B0               	movwf	((?_printf))+1
 11814  0CF3  3194  24A0  318B   	fcall	_printf
 11815  0CF6  2CF7               	goto	l37935
 11816                           	
 11817  0CF7                     l4398:	
 11818                           	line	534
 11819                           	
 11820  0CF7                     l37935:	
 11821                           ;litterlanguage.c: 534: ins_pointer++;
 11822  0CF7  3003               	movlw	low(03h)
 11823  0CF8  0020               	movlb 0	; select bank0
 11824  0CF9  07EB               	addwf	(_ins_pointer),f
 11825  0CFA  3000               	movlw	high(03h)
 11826  0CFB  3DEC               	addwfc	(_ins_pointer+1),f
 11827                           	line	535
 11828                           	
 11829  0CFC                     l37937:	
 11830                           ;litterlanguage.c: 535: ins_state = 3;
 11831  0CFC  3003               	movlw	(03h)
 11832  0CFD  00D0               	movwf	(??_exe_instruction+0)+0
 11833  0CFE  0850               	movf	(??_exe_instruction+0)+0,w
 11834  0CFF  00E5               	movwf	(_ins_state)
 11835                           	line	536
 11836                           ;litterlanguage.c: 536: break;
 11837  0D00  2FF7               	goto	l38081
 11838                           	line	537
 11839                           ;litterlanguage.c: 537: case 0x05:
 11840                           	
 11841  0D01                     l4399:	
 11842                           	line	539
 11843                           ;litterlanguage.c: 539: printf("INS_DRYER, %s%s", cur_instruction.operant?"on":"off", we
                                 t_program?"":" (nop)");
 11844  0D01  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 11845  0D02  2D04               	goto	u11161
 11846  0D03  2D05               	goto	u11160
 11847  0D04                     u11161:
 11848  0D04  2D0B               	goto	l37941
 11849  0D05                     u11160:
 11850                           	
 11851  0D05                     l37939:	
 11852  0D05  3010               	movlw	low(STR_66|8000h)
 11853  0D06  0021               	movlb 1	; select bank1
 11854  0D07  00B6               	movwf	(_exe_instruction$5985)^080h
 11855  0D08  3089               	movlw	high(STR_66|8000h)
 11856  0D09  00B7               	movwf	((_exe_instruction$5985)^080h)+1
 11857  0D0A  2D11               	goto	l37943
 11858                           	
 11859  0D0B                     l4401:	
 11860                           	
 11861  0D0B                     l37941:	
 11862  0D0B  30F6               	movlw	low(STR_65|8000h)
 11863  0D0C  0021               	movlb 1	; select bank1
 11864  0D0D  00B6               	movwf	(_exe_instruction$5985)^080h
 11865  0D0E  3087               	movlw	high(STR_65|8000h)
 11866  0D0F  00B7               	movwf	((_exe_instruction$5985)^080h)+1
 11867  0D10  2D11               	goto	l37943
 11868                           	
 11869  0D11                     l4403:	
 11870                           	
 11871  0D11                     l37943:	
 11872  0D11  0020               	movlb 0	; select bank0
 11873  0D12  086A               	movf	(1+(_cur_instruction)+01h),w
 11874  0D13  0469               	iorwf	(0+(_cur_instruction)+01h),w
 11875  0D14  1D03               	skipz
 11876  0D15  2D17               	goto	u11171
 11877  0D16  2D18               	goto	u11170
 11878  0D17                     u11171:
 11879  0D17  2D1E               	goto	l37947
 11880  0D18                     u11170:
 11881                           	
 11882  0D18                     l37945:	
 11883  0D18  3032               	movlw	low(STR_64|8000h)
 11884  0D19  0021               	movlb 1	; select bank1
 11885  0D1A  00B8               	movwf	(_exe_instruction$5986)^080h
 11886  0D1B  3089               	movlw	high(STR_64|8000h)
 11887  0D1C  00B9               	movwf	((_exe_instruction$5986)^080h)+1
 11888  0D1D  2D24               	goto	l37949
 11889                           	
 11890  0D1E                     l4405:	
 11891                           	
 11892  0D1E                     l37947:	
 11893  0D1E  3048               	movlw	low(STR_63|8000h)
 11894  0D1F  0021               	movlb 1	; select bank1
 11895  0D20  00B8               	movwf	(_exe_instruction$5986)^080h
 11896  0D21  3089               	movlw	high(STR_63|8000h)
 11897  0D22  00B9               	movwf	((_exe_instruction$5986)^080h)+1
 11898  0D23  2D24               	goto	l37949
 11899                           	
 11900  0D24                     l4407:	
 11901                           	
 11902  0D24                     l37949:	
 11903  0D24  306F               	movlw	low(STR_62|8000h)
 11904  0D25  0020               	movlb 0	; select bank0
 11905  0D26  00AF               	movwf	(?_printf)
 11906  0D27  3087               	movlw	high(STR_62|8000h)
 11907  0D28  00B0               	movwf	((?_printf))+1
 11908  0D29  0021               	movlb 1	; select bank1
 11909  0D2A  0839               	movf	(_exe_instruction$5986+1)^080h,w
 11910  0D2B  0020               	movlb 0	; select bank0
 11911  0D2C  01B2               	clrf	(1+?_printf+02h)
 11912  0D2D  07B2               	addwf	(1+?_printf+02h)
 11913  0D2E  0021               	movlb 1	; select bank1
 11914  0D2F  0838               	movf	(_exe_instruction$5986)^080h,w
 11915  0D30  0020               	movlb 0	; select bank0
 11916  0D31  01B1               	clrf	(0+?_printf+02h)
 11917  0D32  07B1               	addwf	(0+?_printf+02h)
 11918                           
 11919  0D33  0021               	movlb 1	; select bank1
 11920  0D34  0837               	movf	(_exe_instruction$5985+1)^080h,w
 11921  0D35  0020               	movlb 0	; select bank0
 11922  0D36  01B4               	clrf	(1+?_printf+04h)
 11923  0D37  07B4               	addwf	(1+?_printf+04h)
 11924  0D38  0021               	movlb 1	; select bank1
 11925  0D39  0836               	movf	(_exe_instruction$5985)^080h,w
 11926  0D3A  0020               	movlb 0	; select bank0
 11927  0D3B  01B3               	clrf	(0+?_printf+04h)
 11928  0D3C  07B3               	addwf	(0+?_printf+04h)
 11929                           
 11930  0D3D  3194  24A0  318B   	fcall	_printf
 11931                           	line	541
 11932                           	
 11933  0D40                     l37951:	
 11934                           ;litterlanguage.c: 541: if (wet_program)
 11935  0D40  0020               	movlb 0	; select bank0
 11936  0D41  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 11937  0D42  2D44               	goto	u11181
 11938  0D43  2D45               	goto	u11180
 11939  0D44                     u11181:
 11940  0D44  2D4A               	goto	l37955
 11941  0D45                     u11180:
 11942                           	line	542
 11943                           	
 11944  0D45                     l37953:	
 11945                           ;litterlanguage.c: 542: set_Dryer((unsigned char)cur_instruction.operant);
 11946  0D45  0869               	movf	0+(_cur_instruction)+01h,w
 11947  0D46  31A9  210F  318B   	fcall	_set_Dryer
 11948  0D49  2D4A               	goto	l37955
 11949                           	
 11950  0D4A                     l4408:	
 11951                           	line	543
 11952                           	
 11953  0D4A                     l37955:	
 11954                           ;litterlanguage.c: 543: ins_pointer++;
 11955  0D4A  3003               	movlw	low(03h)
 11956  0D4B  0020               	movlb 0	; select bank0
 11957  0D4C  07EB               	addwf	(_ins_pointer),f
 11958  0D4D  3000               	movlw	high(03h)
 11959  0D4E  3DEC               	addwfc	(_ins_pointer+1),f
 11960                           	line	544
 11961                           	
 11962  0D4F                     l37957:	
 11963                           ;litterlanguage.c: 544: ins_state = 3;
 11964  0D4F  3003               	movlw	(03h)
 11965  0D50  00D0               	movwf	(??_exe_instruction+0)+0
 11966  0D51  0850               	movf	(??_exe_instruction+0)+0,w
 11967  0D52  00E5               	movwf	(_ins_state)
 11968                           	line	545
 11969                           ;litterlanguage.c: 545: break;
 11970  0D53  2FF7               	goto	l38081
 11971                           	line	546
 11972                           ;litterlanguage.c: 546: case 0x07:
 11973                           	
 11974  0D54                     l4409:	
 11975                           	line	548
 11976                           	
 11977  0D54                     l37959:	
 11978                           ;litterlanguage.c: 548: printf("INS_WAITTIME, %ums", cur_instruction.operant);
 11979  0D54  3033               	movlw	low(STR_67|8000h)
 11980  0D55  00AF               	movwf	(?_printf)
 11981  0D56  3086               	movlw	high(STR_67|8000h)
 11982  0D57  00B0               	movwf	((?_printf))+1
 11983  0D58  086A               	movf	1+(_cur_instruction)+01h,w
 11984  0D59  01B2               	clrf	1+(?_printf)+02h
 11985  0D5A  07B2               	addwf	1+(?_printf)+02h
 11986  0D5B  0869               	movf	0+(_cur_instruction)+01h,w
 11987  0D5C  01B1               	clrf	0+(?_printf)+02h
 11988  0D5D  07B1               	addwf	0+(?_printf)+02h
 11989                           
 11990  0D5E  3194  24A0  318B   	fcall	_printf
 11991                           	line	551
 11992                           	
 11993  0D61                     l37961:	
 11994                           ;litterlanguage.c: 550: settimeout( &timer_waitins,
 11995                           ;litterlanguage.c: 551: (unsigned long)cur_instruction.operant * (((((4UL * (1000UL * ((
                                 1000UL)))))/4)/8)/1000) );
 11996  0D61  306A               	movlw	(_timer_waitins&0ffh)
 11997  0D62  0020               	movlb 0	; select bank0
 11998  0D63  00AD               	movwf	(?_settimeout)
 11999  0D64  3001               	movlw	0x2/2
 12000  0D65  00AE               	movwf	(?_settimeout+1)
 12001  0D66  0869               	movf	0+(_cur_instruction)+01h,w
 12002  0D67  00A1               	movwf	(?___lmul)
 12003  0D68  086A               	movf	1+(_cur_instruction)+01h,w
 12004  0D69  00A2               	movwf	((?___lmul))+1
 12005  0D6A  01A3               	clrf	2+((?___lmul))
 12006  0D6B  01A4               	clrf	3+((?___lmul))
 12007  0D6C  3000               	movlw	0
 12008  0D6D  00A8               	movwf	3+(?___lmul)+04h
 12009  0D6E  3000               	movlw	0
 12010  0D6F  00A7               	movwf	2+(?___lmul)+04h
 12011  0D70  3000               	movlw	0
 12012  0D71  00A6               	movwf	1+(?___lmul)+04h
 12013  0D72  307D               	movlw	07Dh
 12014  0D73  00A5               	movwf	0+(?___lmul)+04h
 12015                           
 12016  0D74  31AD  2513  318B   	fcall	___lmul
 12017  0D77  0020               	movlb 0	; select bank0
 12018  0D78  0824               	movf	(3+(?___lmul)),w
 12019  0D79  00B2               	movwf	3+(?_settimeout)+02h
 12020  0D7A  0823               	movf	(2+(?___lmul)),w
 12021  0D7B  00B1               	movwf	2+(?_settimeout)+02h
 12022  0D7C  0822               	movf	(1+(?___lmul)),w
 12023  0D7D  00B0               	movwf	1+(?_settimeout)+02h
 12024  0D7E  0821               	movf	(0+(?___lmul)),w
 12025  0D7F  00AF               	movwf	0+(?_settimeout)+02h
 12026                           
 12027  0D80  31A1  2147  318B   	fcall	_settimeout
 12028                           	line	552
 12029                           	
 12030  0D83                     l37963:	
 12031                           ;litterlanguage.c: 552: ins_state = 5;
 12032  0D83  3005               	movlw	(05h)
 12033  0D84  0020               	movlb 0	; select bank0
 12034  0D85  00D0               	movwf	(??_exe_instruction+0)+0
 12035  0D86  0850               	movf	(??_exe_instruction+0)+0,w
 12036  0D87  00E5               	movwf	(_ins_state)
 12037                           	line	553
 12038                           ;litterlanguage.c: 553: break;
 12039  0D88  2FF7               	goto	l38081
 12040                           	line	554
 12041                           ;litterlanguage.c: 554: case 0x08:
 12042                           	
 12043  0D89                     l4410:	
 12044                           	line	556
 12045                           ;litterlanguage.c: 556: printf("INS_WAITWATER, %s%s", cur_instruction.operant?"high":"lo
                                 w", wet_program?"":" (nop)");
 12046  0D89  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 12047  0D8A  2D8C               	goto	u11191
 12048  0D8B  2D8D               	goto	u11190
 12049  0D8C                     u11191:
 12050  0D8C  2D93               	goto	l37967
 12051  0D8D                     u11190:
 12052                           	
 12053  0D8D                     l37965:	
 12054  0D8D  3010               	movlw	low(STR_72|8000h)
 12055  0D8E  0021               	movlb 1	; select bank1
 12056  0D8F  00BA               	movwf	(_exe_instruction$5993)^080h
 12057  0D90  3089               	movlw	high(STR_72|8000h)
 12058  0D91  00BB               	movwf	((_exe_instruction$5993)^080h)+1
 12059  0D92  2D99               	goto	l37969
 12060                           	
 12061  0D93                     l4412:	
 12062                           	
 12063  0D93                     l37967:	
 12064  0D93  30F6               	movlw	low(STR_71|8000h)
 12065  0D94  0021               	movlb 1	; select bank1
 12066  0D95  00BA               	movwf	(_exe_instruction$5993)^080h
 12067  0D96  3087               	movlw	high(STR_71|8000h)
 12068  0D97  00BB               	movwf	((_exe_instruction$5993)^080h)+1
 12069  0D98  2D99               	goto	l37969
 12070                           	
 12071  0D99                     l4414:	
 12072                           	
 12073  0D99                     l37969:	
 12074  0D99  0020               	movlb 0	; select bank0
 12075  0D9A  086A               	movf	(1+(_cur_instruction)+01h),w
 12076  0D9B  0469               	iorwf	(0+(_cur_instruction)+01h),w
 12077  0D9C  1D03               	skipz
 12078  0D9D  2D9F               	goto	u11201
 12079  0D9E  2DA0               	goto	u11200
 12080  0D9F                     u11201:
 12081  0D9F  2DA6               	goto	l37973
 12082  0DA0                     u11200:
 12083                           	
 12084  0DA0                     l37971:	
 12085  0DA0  303A               	movlw	low(STR_70|8000h)
 12086  0DA1  0021               	movlb 1	; select bank1
 12087  0DA2  00BC               	movwf	(_exe_instruction$5994)^080h
 12088  0DA3  3089               	movlw	high(STR_70|8000h)
 12089  0DA4  00BD               	movwf	((_exe_instruction$5994)^080h)+1
 12090  0DA5  2DAC               	goto	l37975
 12091                           	
 12092  0DA6                     l4416:	
 12093                           	
 12094  0DA6                     l37973:	
 12095  0DA6  3029               	movlw	low(STR_69|8000h)
 12096  0DA7  0021               	movlb 1	; select bank1
 12097  0DA8  00BC               	movwf	(_exe_instruction$5994)^080h
 12098  0DA9  3089               	movlw	high(STR_69|8000h)
 12099  0DAA  00BD               	movwf	((_exe_instruction$5994)^080h)+1
 12100  0DAB  2DAC               	goto	l37975
 12101                           	
 12102  0DAC                     l4418:	
 12103                           	
 12104  0DAC                     l37975:	
 12105  0DAC  30D0               	movlw	low(STR_68|8000h)
 12106  0DAD  0020               	movlb 0	; select bank0
 12107  0DAE  00AF               	movwf	(?_printf)
 12108  0DAF  3085               	movlw	high(STR_68|8000h)
 12109  0DB0  00B0               	movwf	((?_printf))+1
 12110  0DB1  0021               	movlb 1	; select bank1
 12111  0DB2  083D               	movf	(_exe_instruction$5994+1)^080h,w
 12112  0DB3  0020               	movlb 0	; select bank0
 12113  0DB4  01B2               	clrf	(1+?_printf+02h)
 12114  0DB5  07B2               	addwf	(1+?_printf+02h)
 12115  0DB6  0021               	movlb 1	; select bank1
 12116  0DB7  083C               	movf	(_exe_instruction$5994)^080h,w
 12117  0DB8  0020               	movlb 0	; select bank0
 12118  0DB9  01B1               	clrf	(0+?_printf+02h)
 12119  0DBA  07B1               	addwf	(0+?_printf+02h)
 12120                           
 12121  0DBB  0021               	movlb 1	; select bank1
 12122  0DBC  083B               	movf	(_exe_instruction$5993+1)^080h,w
 12123  0DBD  0020               	movlb 0	; select bank0
 12124  0DBE  01B4               	clrf	(1+?_printf+04h)
 12125  0DBF  07B4               	addwf	(1+?_printf+04h)
 12126  0DC0  0021               	movlb 1	; select bank1
 12127  0DC1  083A               	movf	(_exe_instruction$5993)^080h,w
 12128  0DC2  0020               	movlb 0	; select bank0
 12129  0DC3  01B3               	clrf	(0+?_printf+04h)
 12130  0DC4  07B3               	addwf	(0+?_printf+04h)
 12131                           
 12132  0DC5  3194  24A0  318B   	fcall	_printf
 12133                           	line	558
 12134                           	
 12135  0DC8                     l37977:	
 12136                           ;litterlanguage.c: 558: if (wet_program) {
 12137  0DC8  0020               	movlb 0	; select bank0
 12138  0DC9  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 12139  0DCA  2DCC               	goto	u11211
 12140  0DCB  2DCD               	goto	u11210
 12141  0DCC                     u11211:
 12142  0DCC  2DE9               	goto	l37985
 12143  0DCD                     u11210:
 12144                           	line	559
 12145                           	
 12146  0DCD                     l37979:	
 12147                           ;litterlanguage.c: 559: if (!cur_instruction.operant)
 12148  0DCD  086A               	movf	(1+(_cur_instruction)+01h),w
 12149  0DCE  0469               	iorwf	(0+(_cur_instruction)+01h),w
 12150  0DCF  1D03               	skipz
 12151  0DD0  2DD2               	goto	u11221
 12152  0DD1  2DD3               	goto	u11220
 12153  0DD2                     u11221:
 12154  0DD2  2DE3               	goto	l37983
 12155  0DD3                     u11220:
 12156                           	line	561
 12157                           	
 12158  0DD3                     l37981:	
 12159                           ;litterlanguage.c: 561: settimeout(&timer_drain, ((0*60+10)*((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8)));
 12160  0DD3  30E3               	movlw	(_timer_drain&0ffh)
 12161  0DD4  00AD               	movwf	(?_settimeout)
 12162  0DD5  3000               	movlw	0x1/2
 12163  0DD6  00AE               	movwf	(?_settimeout+1)
 12164  0DD7  3000               	movlw	0
 12165  0DD8  00B2               	movwf	3+(?_settimeout)+02h
 12166  0DD9  3013               	movlw	013h
 12167  0DDA  00B1               	movwf	2+(?_settimeout)+02h
 12168  0DDB  3012               	movlw	012h
 12169  0DDC  00B0               	movwf	1+(?_settimeout)+02h
 12170  0DDD  30D0               	movlw	0D0h
 12171  0DDE  00AF               	movwf	0+(?_settimeout)+02h
 12172                           
 12173  0DDF  31A1  2147  318B   	fcall	_settimeout
 12174  0DE2  2DE3               	goto	l37983
 12175                           	
 12176  0DE3                     l4420:	
 12177                           	line	562
 12178                           	
 12179  0DE3                     l37983:	
 12180                           ;litterlanguage.c: 562: ins_state = 5;
 12181  0DE3  3005               	movlw	(05h)
 12182  0DE4  0020               	movlb 0	; select bank0
 12183  0DE5  00D0               	movwf	(??_exe_instruction+0)+0
 12184  0DE6  0850               	movf	(??_exe_instruction+0)+0,w
 12185  0DE7  00E5               	movwf	(_ins_state)
 12186                           	line	563
 12187                           ;litterlanguage.c: 563: } else {
 12188  0DE8  2FF7               	goto	l38081
 12189                           	
 12190  0DE9                     l4419:	
 12191                           	line	564
 12192                           	
 12193  0DE9                     l37985:	
 12194                           ;litterlanguage.c: 564: ins_pointer++;
 12195  0DE9  3003               	movlw	low(03h)
 12196  0DEA  07EB               	addwf	(_ins_pointer),f
 12197  0DEB  3000               	movlw	high(03h)
 12198  0DEC  3DEC               	addwfc	(_ins_pointer+1),f
 12199                           	line	565
 12200                           ;litterlanguage.c: 565: ins_state = 3;
 12201  0DED  3003               	movlw	(03h)
 12202  0DEE  00D0               	movwf	(??_exe_instruction+0)+0
 12203  0DEF  0850               	movf	(??_exe_instruction+0)+0,w
 12204  0DF0  00E5               	movwf	(_ins_state)
 12205  0DF1  2FF7               	goto	l38081
 12206                           	line	566
 12207                           	
 12208  0DF2                     l4421:	
 12209                           	line	567
 12210                           ;litterlanguage.c: 566: }
 12211                           ;litterlanguage.c: 567: break;
 12212  0DF2  2FF7               	goto	l38081
 12213                           	line	568
 12214                           ;litterlanguage.c: 568: case 0x09:
 12215                           	
 12216  0DF3                     l4422:	
 12217                           	line	570
 12218                           ;litterlanguage.c: 570: printf("INS_WAITDOSAGE%s", wet_program?"":" (nop)");
 12219  0DF3  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 12220  0DF4  2DF6               	goto	u11231
 12221  0DF5  2DF7               	goto	u11230
 12222  0DF6                     u11231:
 12223  0DF6  2DFD               	goto	l37989
 12224  0DF7                     u11230:
 12225                           	
 12226  0DF7                     l37987:	
 12227  0DF7  3010               	movlw	low(STR_75|8000h)
 12228  0DF8  0021               	movlb 1	; select bank1
 12229  0DF9  00BE               	movwf	(_exe_instruction$5998)^080h
 12230  0DFA  3089               	movlw	high(STR_75|8000h)
 12231  0DFB  00BF               	movwf	((_exe_instruction$5998)^080h)+1
 12232  0DFC  2E03               	goto	l37991
 12233                           	
 12234  0DFD                     l4424:	
 12235                           	
 12236  0DFD                     l37989:	
 12237  0DFD  30F6               	movlw	low(STR_74|8000h)
 12238  0DFE  0021               	movlb 1	; select bank1
 12239  0DFF  00BE               	movwf	(_exe_instruction$5998)^080h
 12240  0E00  3087               	movlw	high(STR_74|8000h)
 12241  0E01  00BF               	movwf	((_exe_instruction$5998)^080h)+1
 12242  0E02  2E03               	goto	l37991
 12243                           	
 12244  0E03                     l4426:	
 12245                           	
 12246  0E03                     l37991:	
 12247  0E03  302D               	movlw	low(STR_73|8000h)
 12248  0E04  0020               	movlb 0	; select bank0
 12249  0E05  00AF               	movwf	(?_printf)
 12250  0E06  3087               	movlw	high(STR_73|8000h)
 12251  0E07  00B0               	movwf	((?_printf))+1
 12252  0E08  0021               	movlb 1	; select bank1
 12253  0E09  083F               	movf	(_exe_instruction$5998+1)^080h,w
 12254  0E0A  0020               	movlb 0	; select bank0
 12255  0E0B  01B2               	clrf	(1+?_printf+02h)
 12256  0E0C  07B2               	addwf	(1+?_printf+02h)
 12257  0E0D  0021               	movlb 1	; select bank1
 12258  0E0E  083E               	movf	(_exe_instruction$5998)^080h,w
 12259  0E0F  0020               	movlb 0	; select bank0
 12260  0E10  01B1               	clrf	(0+?_printf+02h)
 12261  0E11  07B1               	addwf	(0+?_printf+02h)
 12262                           
 12263  0E12  3194  24A0  318B   	fcall	_printf
 12264                           	line	572
 12265                           	
 12266  0E15                     l37993:	
 12267                           ;litterlanguage.c: 572: if (wet_program)
 12268  0E15  0020               	movlb 0	; select bank0
 12269  0E16  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 12270  0E17  2E19               	goto	u11241
 12271  0E18  2E1A               	goto	u11240
 12272  0E19                     u11241:
 12273  0E19  2E1F               	goto	l37997
 12274  0E1A                     u11240:
 12275                           	line	573
 12276                           	
 12277  0E1A                     l37995:	
 12278                           ;litterlanguage.c: 573: ins_state = 5;
 12279  0E1A  3005               	movlw	(05h)
 12280  0E1B  00D0               	movwf	(??_exe_instruction+0)+0
 12281  0E1C  0850               	movf	(??_exe_instruction+0)+0,w
 12282  0E1D  00E5               	movwf	(_ins_state)
 12283  0E1E  2FF7               	goto	l38081
 12284                           	line	574
 12285                           	
 12286  0E1F                     l4427:	
 12287                           	line	575
 12288                           	
 12289  0E1F                     l37997:	
 12290                           ;litterlanguage.c: 574: else {
 12291                           ;litterlanguage.c: 575: ins_pointer++;
 12292  0E1F  3003               	movlw	low(03h)
 12293  0E20  07EB               	addwf	(_ins_pointer),f
 12294  0E21  3000               	movlw	high(03h)
 12295  0E22  3DEC               	addwfc	(_ins_pointer+1),f
 12296                           	line	576
 12297                           ;litterlanguage.c: 576: ins_state = 3;
 12298  0E23  3003               	movlw	(03h)
 12299  0E24  00D0               	movwf	(??_exe_instruction+0)+0
 12300  0E25  0850               	movf	(??_exe_instruction+0)+0,w
 12301  0E26  00E5               	movwf	(_ins_state)
 12302  0E27  2FF7               	goto	l38081
 12303                           	line	577
 12304                           	
 12305  0E28                     l4428:	
 12306                           	line	578
 12307                           ;litterlanguage.c: 577: }
 12308                           ;litterlanguage.c: 578: break;
 12309  0E28  2FF7               	goto	l38081
 12310                           	line	579
 12311                           ;litterlanguage.c: 579: case 0x0A:
 12312                           	
 12313  0E29                     l4429:	
 12314                           	line	581
 12315                           ;litterlanguage.c: 581: printf("INS_SKIPIFDRY, %u%s", cur_instruction.operant, wet_progr
                                 am?" (nop)":"");
 12316  0E29  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 12317  0E2A  2E2C               	goto	u11251
 12318  0E2B  2E2D               	goto	u11250
 12319  0E2C                     u11251:
 12320  0E2C  2E33               	goto	l38001
 12321  0E2D                     u11250:
 12322                           	
 12323  0E2D                     l37999:	
 12324  0E2D  30F6               	movlw	low(STR_78|8000h)
 12325  0E2E  0021               	movlb 1	; select bank1
 12326  0E2F  00C0               	movwf	(_exe_instruction$6002)^080h
 12327  0E30  3087               	movlw	high(STR_78|8000h)
 12328  0E31  00C1               	movwf	((_exe_instruction$6002)^080h)+1
 12329  0E32  2E39               	goto	l38003
 12330                           	
 12331  0E33                     l4431:	
 12332                           	
 12333  0E33                     l38001:	
 12334  0E33  3010               	movlw	low(STR_77|8000h)
 12335  0E34  0021               	movlb 1	; select bank1
 12336  0E35  00C0               	movwf	(_exe_instruction$6002)^080h
 12337  0E36  3089               	movlw	high(STR_77|8000h)
 12338  0E37  00C1               	movwf	((_exe_instruction$6002)^080h)+1
 12339  0E38  2E39               	goto	l38003
 12340                           	
 12341  0E39                     l4433:	
 12342                           	
 12343  0E39                     l38003:	
 12344  0E39  30F8               	movlw	low(STR_76|8000h)
 12345  0E3A  0020               	movlb 0	; select bank0
 12346  0E3B  00AF               	movwf	(?_printf)
 12347  0E3C  3085               	movlw	high(STR_76|8000h)
 12348  0E3D  00B0               	movwf	((?_printf))+1
 12349  0E3E  086A               	movf	1+(_cur_instruction)+01h,w
 12350  0E3F  01B2               	clrf	1+(?_printf)+02h
 12351  0E40  07B2               	addwf	1+(?_printf)+02h
 12352  0E41  0869               	movf	0+(_cur_instruction)+01h,w
 12353  0E42  01B1               	clrf	0+(?_printf)+02h
 12354  0E43  07B1               	addwf	0+(?_printf)+02h
 12355                           
 12356  0E44  0021               	movlb 1	; select bank1
 12357  0E45  0841               	movf	(_exe_instruction$6002+1)^080h,w
 12358  0E46  0020               	movlb 0	; select bank0
 12359  0E47  01B4               	clrf	(1+?_printf+04h)
 12360  0E48  07B4               	addwf	(1+?_printf+04h)
 12361  0E49  0021               	movlb 1	; select bank1
 12362  0E4A  0840               	movf	(_exe_instruction$6002)^080h,w
 12363  0E4B  0020               	movlb 0	; select bank0
 12364  0E4C  01B3               	clrf	(0+?_printf+04h)
 12365  0E4D  07B3               	addwf	(0+?_printf+04h)
 12366                           
 12367  0E4E  3194  24A0  318B   	fcall	_printf
 12368                           	line	583
 12369                           	
 12370  0E51                     l38005:	
 12371                           ;litterlanguage.c: 583: if (!wet_program)
 12372  0E51  0020               	movlb 0	; select bank0
 12373  0E52  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 12374  0E53  2E55               	goto	u11261
 12375  0E54  2E56               	goto	u11260
 12376  0E55                     u11261:
 12377  0E55  2E69               	goto	l38009
 12378  0E56                     u11260:
 12379                           	line	584
 12380                           	
 12381  0E56                     l38007:	
 12382                           ;litterlanguage.c: 584: ins_pointer += cur_instruction.operant + 1;
 12383  0E56  0869               	movf	0+(_cur_instruction)+01h,w
 12384  0E57  3E01               	addlw	low(01h)
 12385  0E58  00A1               	movwf	(?___wmul)
 12386  0E59  3000               	movlw	high(01h)
 12387  0E5A  3D6A               	addwfc	1+(_cur_instruction)+01h,w
 12388  0E5B  00A2               	movwf	1+(?___wmul)
 12389  0E5C  3003               	movlw	low(03h)
 12390  0E5D  00A3               	movwf	0+(?___wmul)+02h
 12391  0E5E  3000               	movlw	high(03h)
 12392  0E5F  00A4               	movwf	(0+(?___wmul)+02h)+1
 12393  0E60  31A0  2000  318B   	fcall	___wmul
 12394  0E63  0020               	movlb 0	; select bank0
 12395  0E64  0821               	movf	(0+(?___wmul)),w
 12396  0E65  07EB               	addwf	(_ins_pointer),f
 12397  0E66  0822               	movf	(1+(?___wmul)),w
 12398  0E67  3DEC               	addwfc	(_ins_pointer+1),f
 12399  0E68  2E6D               	goto	l4435
 12400                           	line	585
 12401                           	
 12402  0E69                     l4434:	
 12403                           	line	586
 12404                           	
 12405  0E69                     l38009:	
 12406                           ;litterlanguage.c: 585: else
 12407                           ;litterlanguage.c: 586: ins_pointer++;
 12408  0E69  3003               	movlw	low(03h)
 12409  0E6A  07EB               	addwf	(_ins_pointer),f
 12410  0E6B  3000               	movlw	high(03h)
 12411  0E6C  3DEC               	addwfc	(_ins_pointer+1),f
 12412                           	
 12413  0E6D                     l4435:	
 12414                           	line	587
 12415                           ;litterlanguage.c: 587: ins_state = 3;
 12416  0E6D  3003               	movlw	(03h)
 12417  0E6E  00D0               	movwf	(??_exe_instruction+0)+0
 12418  0E6F  0850               	movf	(??_exe_instruction+0)+0,w
 12419  0E70  00E5               	movwf	(_ins_state)
 12420                           	line	588
 12421                           ;litterlanguage.c: 588: break;
 12422  0E71  2FF7               	goto	l38081
 12423                           	line	589
 12424                           ;litterlanguage.c: 589: case 0x0B:
 12425                           	
 12426  0E72                     l4436:	
 12427                           	line	591
 12428                           ;litterlanguage.c: 591: printf("INS_SKIPIFWET, %u%s", cur_instruction.operant, wet_progr
                                 am?"":" (nop)");
 12429  0E72  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 12430  0E73  2E75               	goto	u11271
 12431  0E74  2E76               	goto	u11270
 12432  0E75                     u11271:
 12433  0E75  2E7C               	goto	l38013
 12434  0E76                     u11270:
 12435                           	
 12436  0E76                     l38011:	
 12437  0E76  3010               	movlw	low(STR_81|8000h)
 12438  0E77  0021               	movlb 1	; select bank1
 12439  0E78  00C2               	movwf	(_exe_instruction$6006)^080h
 12440  0E79  3089               	movlw	high(STR_81|8000h)
 12441  0E7A  00C3               	movwf	((_exe_instruction$6006)^080h)+1
 12442  0E7B  2E82               	goto	l38015
 12443                           	
 12444  0E7C                     l4438:	
 12445                           	
 12446  0E7C                     l38013:	
 12447  0E7C  30F6               	movlw	low(STR_80|8000h)
 12448  0E7D  0021               	movlb 1	; select bank1
 12449  0E7E  00C2               	movwf	(_exe_instruction$6006)^080h
 12450  0E7F  3087               	movlw	high(STR_80|8000h)
 12451  0E80  00C3               	movwf	((_exe_instruction$6006)^080h)+1
 12452  0E81  2E82               	goto	l38015
 12453                           	
 12454  0E82                     l4440:	
 12455                           	
 12456  0E82                     l38015:	
 12457  0E82  30E4               	movlw	low(STR_79|8000h)
 12458  0E83  0020               	movlb 0	; select bank0
 12459  0E84  00AF               	movwf	(?_printf)
 12460  0E85  3085               	movlw	high(STR_79|8000h)
 12461  0E86  00B0               	movwf	((?_printf))+1
 12462  0E87  086A               	movf	1+(_cur_instruction)+01h,w
 12463  0E88  01B2               	clrf	1+(?_printf)+02h
 12464  0E89  07B2               	addwf	1+(?_printf)+02h
 12465  0E8A  0869               	movf	0+(_cur_instruction)+01h,w
 12466  0E8B  01B1               	clrf	0+(?_printf)+02h
 12467  0E8C  07B1               	addwf	0+(?_printf)+02h
 12468                           
 12469  0E8D  0021               	movlb 1	; select bank1
 12470  0E8E  0843               	movf	(_exe_instruction$6006+1)^080h,w
 12471  0E8F  0020               	movlb 0	; select bank0
 12472  0E90  01B4               	clrf	(1+?_printf+04h)
 12473  0E91  07B4               	addwf	(1+?_printf+04h)
 12474  0E92  0021               	movlb 1	; select bank1
 12475  0E93  0842               	movf	(_exe_instruction$6006)^080h,w
 12476  0E94  0020               	movlb 0	; select bank0
 12477  0E95  01B3               	clrf	(0+?_printf+04h)
 12478  0E96  07B3               	addwf	(0+?_printf+04h)
 12479                           
 12480  0E97  3194  24A0  318B   	fcall	_printf
 12481                           	line	593
 12482                           	
 12483  0E9A                     l38017:	
 12484                           ;litterlanguage.c: 593: if (wet_program)
 12485  0E9A  0020               	movlb 0	; select bank0
 12486  0E9B  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 12487  0E9C  2E9E               	goto	u11281
 12488  0E9D  2E9F               	goto	u11280
 12489  0E9E                     u11281:
 12490  0E9E  2EB2               	goto	l38021
 12491  0E9F                     u11280:
 12492                           	line	594
 12493                           	
 12494  0E9F                     l38019:	
 12495                           ;litterlanguage.c: 594: ins_pointer += cur_instruction.operant + 1;
 12496  0E9F  0869               	movf	0+(_cur_instruction)+01h,w
 12497  0EA0  3E01               	addlw	low(01h)
 12498  0EA1  00A1               	movwf	(?___wmul)
 12499  0EA2  3000               	movlw	high(01h)
 12500  0EA3  3D6A               	addwfc	1+(_cur_instruction)+01h,w
 12501  0EA4  00A2               	movwf	1+(?___wmul)
 12502  0EA5  3003               	movlw	low(03h)
 12503  0EA6  00A3               	movwf	0+(?___wmul)+02h
 12504  0EA7  3000               	movlw	high(03h)
 12505  0EA8  00A4               	movwf	(0+(?___wmul)+02h)+1
 12506  0EA9  31A0  2000  318B   	fcall	___wmul
 12507  0EAC  0020               	movlb 0	; select bank0
 12508  0EAD  0821               	movf	(0+(?___wmul)),w
 12509  0EAE  07EB               	addwf	(_ins_pointer),f
 12510  0EAF  0822               	movf	(1+(?___wmul)),w
 12511  0EB0  3DEC               	addwfc	(_ins_pointer+1),f
 12512  0EB1  2EB6               	goto	l4442
 12513                           	line	595
 12514                           	
 12515  0EB2                     l4441:	
 12516                           	line	596
 12517                           	
 12518  0EB2                     l38021:	
 12519                           ;litterlanguage.c: 595: else
 12520                           ;litterlanguage.c: 596: ins_pointer++;
 12521  0EB2  3003               	movlw	low(03h)
 12522  0EB3  07EB               	addwf	(_ins_pointer),f
 12523  0EB4  3000               	movlw	high(03h)
 12524  0EB5  3DEC               	addwfc	(_ins_pointer+1),f
 12525                           	
 12526  0EB6                     l4442:	
 12527                           	line	597
 12528                           ;litterlanguage.c: 597: ins_state = 3;
 12529  0EB6  3003               	movlw	(03h)
 12530  0EB7  00D0               	movwf	(??_exe_instruction+0)+0
 12531  0EB8  0850               	movf	(??_exe_instruction+0)+0,w
 12532  0EB9  00E5               	movwf	(_ins_state)
 12533                           	line	598
 12534                           ;litterlanguage.c: 598: break;
 12535  0EBA  2FF7               	goto	l38081
 12536                           	line	599
 12537                           ;litterlanguage.c: 599: case 0x06:
 12538                           	
 12539  0EBB                     l4443:	
 12540                           	line	601
 12541                           ;litterlanguage.c: 601: printf("INS_AUTODOSE, %u.%uml%s", cur_instruction.operant/10, cu
                                 r_instruction.operant%10, wet_program?"":" (nop)");
 12542  0EBB  1A6D               	btfsc	(_wet_program/8),(_wet_program)&7
 12543  0EBC  2EBE               	goto	u11291
 12544  0EBD  2EBF               	goto	u11290
 12545  0EBE                     u11291:
 12546  0EBE  2EC5               	goto	l38025
 12547  0EBF                     u11290:
 12548                           	
 12549  0EBF                     l38023:	
 12550  0EBF  3010               	movlw	low(STR_84|8000h)
 12551  0EC0  0021               	movlb 1	; select bank1
 12552  0EC1  00C4               	movwf	(_exe_instruction$6010)^080h
 12553  0EC2  3089               	movlw	high(STR_84|8000h)
 12554  0EC3  00C5               	movwf	((_exe_instruction$6010)^080h)+1
 12555  0EC4  2ECB               	goto	l38027
 12556                           	
 12557  0EC5                     l4445:	
 12558                           	
 12559  0EC5                     l38025:	
 12560  0EC5  30F6               	movlw	low(STR_83|8000h)
 12561  0EC6  0021               	movlb 1	; select bank1
 12562  0EC7  00C4               	movwf	(_exe_instruction$6010)^080h
 12563  0EC8  3087               	movlw	high(STR_83|8000h)
 12564  0EC9  00C5               	movwf	((_exe_instruction$6010)^080h)+1
 12565  0ECA  2ECB               	goto	l38027
 12566                           	
 12567  0ECB                     l4447:	
 12568                           	
 12569  0ECB                     l38027:	
 12570  0ECB  300A               	movlw	low(0Ah)
 12571  0ECC  0020               	movlb 0	; select bank0
 12572  0ECD  00A1               	movwf	(?___lwdiv)
 12573  0ECE  3000               	movlw	high(0Ah)
 12574  0ECF  00A2               	movwf	((?___lwdiv))+1
 12575  0ED0  086A               	movf	1+(_cur_instruction)+01h,w
 12576  0ED1  01A4               	clrf	1+(?___lwdiv)+02h
 12577  0ED2  07A4               	addwf	1+(?___lwdiv)+02h
 12578  0ED3  0869               	movf	0+(_cur_instruction)+01h,w
 12579  0ED4  01A3               	clrf	0+(?___lwdiv)+02h
 12580  0ED5  07A3               	addwf	0+(?___lwdiv)+02h
 12581                           
 12582  0ED6  31AD  25C2  318B   	fcall	___lwdiv
 12583  0ED9  0020               	movlb 0	; select bank0
 12584  0EDA  0822               	movf	(1+(?___lwdiv)),w
 12585  0EDB  0021               	movlb 1	; select bank1
 12586  0EDC  01A1               	clrf	(_exe_instruction$30234+1)^080h
 12587  0EDD  07A1               	addwf	(_exe_instruction$30234+1)^080h
 12588  0EDE  0020               	movlb 0	; select bank0
 12589  0EDF  0821               	movf	(0+(?___lwdiv)),w
 12590  0EE0  0021               	movlb 1	; select bank1
 12591  0EE1  01A0               	clrf	(_exe_instruction$30234)^080h
 12592  0EE2  07A0               	addwf	(_exe_instruction$30234)^080h
 12593                           
 12594                           	
 12595  0EE3                     l38029:	
 12596  0EE3  300A               	movlw	low(0Ah)
 12597  0EE4  0020               	movlb 0	; select bank0
 12598  0EE5  00A9               	movwf	(?___lwmod)
 12599  0EE6  3000               	movlw	high(0Ah)
 12600  0EE7  00AA               	movwf	((?___lwmod))+1
 12601  0EE8  086A               	movf	1+(_cur_instruction)+01h,w
 12602  0EE9  01AC               	clrf	1+(?___lwmod)+02h
 12603  0EEA  07AC               	addwf	1+(?___lwmod)+02h
 12604  0EEB  0869               	movf	0+(_cur_instruction)+01h,w
 12605  0EEC  01AB               	clrf	0+(?___lwmod)+02h
 12606  0EED  07AB               	addwf	0+(?___lwmod)+02h
 12607                           
 12608  0EEE  31AD  2583  318B   	fcall	___lwmod
 12609  0EF1  0020               	movlb 0	; select bank0
 12610  0EF2  082A               	movf	(1+(?___lwmod)),w
 12611  0EF3  0021               	movlb 1	; select bank1
 12612  0EF4  01A3               	clrf	(_exe_instruction$30235+1)^080h
 12613  0EF5  07A3               	addwf	(_exe_instruction$30235+1)^080h
 12614  0EF6  0020               	movlb 0	; select bank0
 12615  0EF7  0829               	movf	(0+(?___lwmod)),w
 12616  0EF8  0021               	movlb 1	; select bank1
 12617  0EF9  01A2               	clrf	(_exe_instruction$30235)^080h
 12618  0EFA  07A2               	addwf	(_exe_instruction$30235)^080h
 12619                           
 12620                           	
 12621  0EFB                     l38031:	
 12622  0EFB  303A               	movlw	low(STR_82|8000h)
 12623  0EFC  0020               	movlb 0	; select bank0
 12624  0EFD  00AF               	movwf	(?_printf)
 12625  0EFE  3085               	movlw	high(STR_82|8000h)
 12626  0EFF  00B0               	movwf	((?_printf))+1
 12627  0F00  0021               	movlb 1	; select bank1
 12628  0F01  0821               	movf	(_exe_instruction$30234+1)^080h,w
 12629  0F02  0020               	movlb 0	; select bank0
 12630  0F03  01B2               	clrf	1+(?_printf)+02h
 12631  0F04  07B2               	addwf	1+(?_printf)+02h
 12632  0F05  0021               	movlb 1	; select bank1
 12633  0F06  0820               	movf	(_exe_instruction$30234)^080h,w
 12634  0F07  0020               	movlb 0	; select bank0
 12635  0F08  01B1               	clrf	0+(?_printf)+02h
 12636  0F09  07B1               	addwf	0+(?_printf)+02h
 12637                           
 12638  0F0A  0021               	movlb 1	; select bank1
 12639  0F0B  0823               	movf	(_exe_instruction$30235+1)^080h,w
 12640  0F0C  0020               	movlb 0	; select bank0
 12641  0F0D  01B4               	clrf	1+(?_printf)+04h
 12642  0F0E  07B4               	addwf	1+(?_printf)+04h
 12643  0F0F  0021               	movlb 1	; select bank1
 12644  0F10  0822               	movf	(_exe_instruction$30235)^080h,w
 12645  0F11  0020               	movlb 0	; select bank0
 12646  0F12  01B3               	clrf	0+(?_printf)+04h
 12647  0F13  07B3               	addwf	0+(?_printf)+04h
 12648                           
 12649  0F14  0021               	movlb 1	; select bank1
 12650  0F15  0845               	movf	(_exe_instruction$6010+1)^080h,w
 12651  0F16  0020               	movlb 0	; select bank0
 12652  0F17  01B6               	clrf	(1+?_printf+06h)
 12653  0F18  07B6               	addwf	(1+?_printf+06h)
 12654  0F19  0021               	movlb 1	; select bank1
 12655  0F1A  0844               	movf	(_exe_instruction$6010)^080h,w
 12656  0F1B  0020               	movlb 0	; select bank0
 12657  0F1C  01B5               	clrf	(0+?_printf+06h)
 12658  0F1D  07B5               	addwf	(0+?_printf+06h)
 12659                           
 12660  0F1E  3194  24A0  318B   	fcall	_printf
 12661                           	line	603
 12662                           	
 12663  0F21                     l38033:	
 12664                           ;litterlanguage.c: 603: if (wet_program) {
 12665  0F21  0020               	movlb 0	; select bank0
 12666  0F22  1E6D               	btfss	(_wet_program/8),(_wet_program)&7
 12667  0F23  2F25               	goto	u11301
 12668  0F24  2F26               	goto	u11300
 12669  0F25                     u11301:
 12670  0F25  2F4C               	goto	l38039
 12671  0F26                     u11300:
 12672                           	line	605
 12673                           	
 12674  0F26                     l38035:	
 12675                           ;litterlanguage.c: 604: settimeout(&timer_autodose,
 12676                           ;litterlanguage.c: 605: (unsigned long)cur_instruction.operant * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8) * (10 / 10));
 12677  0F26  3064               	movlw	(_timer_autodose&0ffh)
 12678  0F27  00AD               	movwf	(?_settimeout)
 12679  0F28  3001               	movlw	0x2/2
 12680  0F29  00AE               	movwf	(?_settimeout+1)
 12681  0F2A  0869               	movf	0+(_cur_instruction)+01h,w
 12682  0F2B  00A1               	movwf	(?___lmul)
 12683  0F2C  086A               	movf	1+(_cur_instruction)+01h,w
 12684  0F2D  00A2               	movwf	((?___lmul))+1
 12685  0F2E  01A3               	clrf	2+((?___lmul))
 12686  0F2F  01A4               	clrf	3+((?___lmul))
 12687  0F30  3000               	movlw	0
 12688  0F31  00A8               	movwf	3+(?___lmul)+04h
 12689  0F32  3001               	movlw	01h
 12690  0F33  00A7               	movwf	2+(?___lmul)+04h
 12691  0F34  30E8               	movlw	0E8h
 12692  0F35  00A6               	movwf	1+(?___lmul)+04h
 12693  0F36  3048               	movlw	048h
 12694  0F37  00A5               	movwf	0+(?___lmul)+04h
 12695                           
 12696  0F38  31AD  2513  318B   	fcall	___lmul
 12697  0F3B  0020               	movlb 0	; select bank0
 12698  0F3C  0824               	movf	(3+(?___lmul)),w
 12699  0F3D  00B2               	movwf	3+(?_settimeout)+02h
 12700  0F3E  0823               	movf	(2+(?___lmul)),w
 12701  0F3F  00B1               	movwf	2+(?_settimeout)+02h
 12702  0F40  0822               	movf	(1+(?___lmul)),w
 12703  0F41  00B0               	movwf	1+(?_settimeout)+02h
 12704  0F42  0821               	movf	(0+(?___lmul)),w
 12705  0F43  00AF               	movwf	0+(?_settimeout)+02h
 12706                           
 12707  0F44  31A1  2147  318B   	fcall	_settimeout
 12708                           	line	606
 12709                           	
 12710  0F47                     l38037:	
 12711                           ;litterlanguage.c: 606: set_Dosage(1);
 12712  0F47  3001               	movlw	(01h)
 12713  0F48  31A8  20ED  318B   	fcall	_set_Dosage
 12714  0F4B  2F4C               	goto	l38039
 12715                           	line	607
 12716                           	
 12717  0F4C                     l4448:	
 12718                           	line	608
 12719                           	
 12720  0F4C                     l38039:	
 12721                           ;litterlanguage.c: 607: }
 12722                           ;litterlanguage.c: 608: ins_pointer++;
 12723  0F4C  3003               	movlw	low(03h)
 12724  0F4D  0020               	movlb 0	; select bank0
 12725  0F4E  07EB               	addwf	(_ins_pointer),f
 12726  0F4F  3000               	movlw	high(03h)
 12727  0F50  3DEC               	addwfc	(_ins_pointer+1),f
 12728                           	line	609
 12729                           	
 12730  0F51                     l38041:	
 12731                           ;litterlanguage.c: 609: ins_state = 3;
 12732  0F51  3003               	movlw	(03h)
 12733  0F52  00D0               	movwf	(??_exe_instruction+0)+0
 12734  0F53  0850               	movf	(??_exe_instruction+0)+0,w
 12735  0F54  00E5               	movwf	(_ins_state)
 12736                           	line	610
 12737                           ;litterlanguage.c: 610: break;
 12738  0F55  2FF7               	goto	l38081
 12739                           	line	611
 12740                           ;litterlanguage.c: 611: case 0x0C:
 12741                           	
 12742  0F56                     l4449:	
 12743                           	line	613
 12744                           	
 12745  0F56                     l38043:	
 12746                           ;litterlanguage.c: 613: printf("INS_CALL, 0x%04X", cur_instruction.operant);
 12747  0F56  301C               	movlw	low(STR_85|8000h)
 12748  0F57  00AF               	movwf	(?_printf)
 12749  0F58  3087               	movlw	high(STR_85|8000h)
 12750  0F59  00B0               	movwf	((?_printf))+1
 12751  0F5A  086A               	movf	1+(_cur_instruction)+01h,w
 12752  0F5B  01B2               	clrf	1+(?_printf)+02h
 12753  0F5C  07B2               	addwf	1+(?_printf)+02h
 12754  0F5D  0869               	movf	0+(_cur_instruction)+01h,w
 12755  0F5E  01B1               	clrf	0+(?_printf)+02h
 12756  0F5F  07B1               	addwf	0+(?_printf)+02h
 12757                           
 12758  0F60  3194  24A0  318B   	fcall	_printf
 12759                           	line	615
 12760                           	
 12761  0F63                     l38045:	
 12762                           ;litterlanguage.c: 615: ret_address = ins_pointer + 1;
 12763  0F63  0020               	movlb 0	; select bank0
 12764  0F64  086B               	movf	(_ins_pointer),w
 12765  0F65  3E03               	addlw	low(03h)
 12766  0F66  0021               	movlb 1	; select bank1
 12767  0F67  00D2               	movwf	(exe_instruction@ret_address)^080h
 12768  0F68  3000               	movlw	high(03h)
 12769  0F69  0020               	movlb 0	; select bank0
 12770  0F6A  3D6C               	addwfc	(_ins_pointer+1),w
 12771  0F6B  0021               	movlb 1	; select bank1
 12772  0F6C  00D3               	movwf	1+(exe_instruction@ret_address)^080h
 12773                           	line	617
 12774                           	
 12775  0F6D                     l38047:	
 12776                           ;litterlanguage.c: 617: temp = 0x8000 | cur_instruction.operant;
 12777  0F6D  3000               	movlw	low(08000h)
 12778  0F6E  0020               	movlb 0	; select bank0
 12779  0F6F  0469               	iorwf	0+(_cur_instruction)+01h,w
 12780  0F70  0021               	movlb 1	; select bank1
 12781  0F71  00A4               	movwf	(exe_instruction@temp)^080h
 12782  0F72  3080               	movlw	high(08000h)
 12783  0F73  0020               	movlb 0	; select bank0
 12784  0F74  046A               	iorwf	1+(_cur_instruction)+01h,w
 12785  0F75  0021               	movlb 1	; select bank1
 12786  0F76  00A5               	movwf	1+(exe_instruction@temp)^080h
 12787                           	line	619
 12788                           	
 12789  0F77                     l38049:	
 12790                           ;litterlanguage.c: 619: memcpy(&ins_pointer, &temp, sizeof(ins_pointer));
 12791  0F77  30A4               	movlw	(exe_instruction@temp)&0ffh
 12792  0F78  0020               	movlb 0	; select bank0
 12793  0F79  00D0               	movwf	(??_exe_instruction+0)+0
 12794  0F7A  0850               	movf	(??_exe_instruction+0)+0,w
 12795  0F7B  00A1               	movwf	(?_memcpy)
 12796  0F7C  3002               	movlw	low(02h)
 12797  0F7D  00A2               	movwf	0+(?_memcpy)+01h
 12798  0F7E  3000               	movlw	high(02h)
 12799  0F7F  00A3               	movwf	(0+(?_memcpy)+01h)+1
 12800  0F80  306B               	movlw	(_ins_pointer)&0ffh
 12801  0F81  31AC  241A  318B   	fcall	_memcpy
 12802                           	line	620
 12803                           	
 12804  0F84                     l38051:	
 12805                           ;litterlanguage.c: 620: ins_state = 3;
 12806  0F84  3003               	movlw	(03h)
 12807  0F85  0020               	movlb 0	; select bank0
 12808  0F86  00D0               	movwf	(??_exe_instruction+0)+0
 12809  0F87  0850               	movf	(??_exe_instruction+0)+0,w
 12810  0F88  00E5               	movwf	(_ins_state)
 12811                           	line	621
 12812                           ;litterlanguage.c: 621: break;
 12813  0F89  2FF7               	goto	l38081
 12814                           	line	622
 12815                           ;litterlanguage.c: 622: case 0x0D:
 12816                           	
 12817  0F8A                     l4450:	
 12818                           	line	624
 12819                           	
 12820  0F8A                     l38053:	
 12821                           ;litterlanguage.c: 624: printf("INS_RETURN, 0x%04X", ret_address);
 12822  0F8A  3020               	movlw	low(STR_86|8000h)
 12823  0F8B  00AF               	movwf	(?_printf)
 12824  0F8C  3086               	movlw	high(STR_86|8000h)
 12825  0F8D  00B0               	movwf	((?_printf))+1
 12826  0F8E  0021               	movlb 1	; select bank1
 12827  0F8F  0853               	movf	(exe_instruction@ret_address+1)^080h,w
 12828  0F90  0020               	movlb 0	; select bank0
 12829  0F91  01B2               	clrf	(1+?_printf+02h)
 12830  0F92  07B2               	addwf	(1+?_printf+02h)
 12831  0F93  0021               	movlb 1	; select bank1
 12832  0F94  0852               	movf	(exe_instruction@ret_address)^080h,w
 12833  0F95  0020               	movlb 0	; select bank0
 12834  0F96  01B1               	clrf	(0+?_printf+02h)
 12835  0F97  07B1               	addwf	(0+?_printf+02h)
 12836                           
 12837  0F98  3194  24A0  318B   	fcall	_printf
 12838                           	line	626
 12839                           	
 12840  0F9B                     l38055:	
 12841                           ;litterlanguage.c: 626: ins_pointer = ret_address;
 12842  0F9B  0021               	movlb 1	; select bank1
 12843  0F9C  0853               	movf	(exe_instruction@ret_address+1)^080h,w
 12844  0F9D  0020               	movlb 0	; select bank0
 12845  0F9E  01EC               	clrf	(_ins_pointer+1)
 12846  0F9F  07EC               	addwf	(_ins_pointer+1)
 12847  0FA0  0021               	movlb 1	; select bank1
 12848  0FA1  0852               	movf	(exe_instruction@ret_address)^080h,w
 12849  0FA2  0020               	movlb 0	; select bank0
 12850  0FA3  01EB               	clrf	(_ins_pointer)
 12851  0FA4  07EB               	addwf	(_ins_pointer)
 12852                           
 12853                           	line	627
 12854                           	
 12855  0FA5                     l38057:	
 12856                           ;litterlanguage.c: 627: ins_state = 3;
 12857  0FA5  3003               	movlw	(03h)
 12858  0FA6  00D0               	movwf	(??_exe_instruction+0)+0
 12859  0FA7  0850               	movf	(??_exe_instruction+0)+0,w
 12860  0FA8  00E5               	movwf	(_ins_state)
 12861                           	line	628
 12862                           ;litterlanguage.c: 628: break;
 12863  0FA9  2FF7               	goto	l38081
 12864                           	line	629
 12865                           ;litterlanguage.c: 629: case 0x0E:
 12866                           	
 12867  0FAA                     l4451:	
 12868                           	line	631
 12869                           	
 12870  0FAA                     l38059:	
 12871                           ;litterlanguage.c: 631: printf("INS_END");
 12872  0FAA  30F2               	movlw	low(STR_87|8000h)
 12873  0FAB  00AF               	movwf	(?_printf)
 12874  0FAC  3088               	movlw	high(STR_87|8000h)
 12875  0FAD  00B0               	movwf	((?_printf))+1
 12876  0FAE  3194  24A0  318B   	fcall	_printf
 12877                           	line	633
 12878                           	
 12879  0FB1                     l38061:	
 12880                           ;litterlanguage.c: 633: eeprom_write((3), 0);
 12881  0FB1  0020               	movlb 0	; select bank0
 12882  0FB2  01A1               	clrf	(?_eeprom_write)
 12883  0FB3  3003               	movlw	(03h)
 12884  0FB4  31AC  24A5  318B   	fcall	_eeprom_write
 12885                           	line	634
 12886                           	
 12887  0FB7                     l38063:	
 12888                           ;litterlanguage.c: 634: litterlanguage_stop();
 12889  0FB7  31A1  21AC  318B   	fcall	_litterlanguage_stop
 12890                           	line	635
 12891                           ;litterlanguage.c: 635: break;
 12892  0FBA  2FF7               	goto	l38081
 12893                           	line	636
 12894                           ;litterlanguage.c: 636: case 0x00:
 12895                           	
 12896  0FBB                     l4452:	
 12897                           	line	638
 12898                           	
 12899  0FBB                     l38065:	
 12900                           ;litterlanguage.c: 638: printf("INS_START, unexpected");
 12901  0FBB  3068               	movlw	low(STR_88|8000h)
 12902  0FBC  0020               	movlb 0	; select bank0
 12903  0FBD  00AF               	movwf	(?_printf)
 12904  0FBE  3085               	movlw	high(STR_88|8000h)
 12905  0FBF  00B0               	movwf	((?_printf))+1
 12906  0FC0  3194  24A0  318B   	fcall	_printf
 12907                           	line	640
 12908                           	
 12909  0FC3                     l38067:	
 12910                           ;litterlanguage.c: 640: error_execution = 1;
 12911  0FC3  1770               	bsf	(_error_execution/8),(_error_execution)&7
 12912                           	line	641
 12913                           	
 12914  0FC4                     l38069:	
 12915                           ;litterlanguage.c: 641: litterlanguage_event(4, error_execution);
 12916  0FC4  3000               	movlw	0
 12917  0FC5  1B70               	btfsc	(_error_execution/8),(_error_execution)&7
 12918  0FC6  3001               	movlw	1
 12919  0FC7  0020               	movlb 0	; select bank0
 12920  0FC8  00D0               	movwf	(??_exe_instruction+0)+0
 12921  0FC9  0850               	movf	(??_exe_instruction+0)+0,w
 12922  0FCA  00A1               	movwf	(?_litterlanguage_event)
 12923  0FCB  3004               	movlw	(04h)
 12924  0FCC  3198  2000  318B   	fcall	_litterlanguage_event
 12925                           	line	642
 12926                           ;litterlanguage.c: 642: break;
 12927  0FCF  2FF7               	goto	l38081
 12928                           	line	643
 12929                           ;litterlanguage.c: 643: default:
 12930                           	
 12931  0FD0                     l4453:	
 12932                           	line	646
 12933                           	
 12934  0FD0                     l38071:	
 12935                           ;litterlanguage.c: 646: printf("INS_unknown: 0x%X", cur_instruction.operant);
 12936  0FD0  30B5               	movlw	low(STR_89|8000h)
 12937  0FD1  0020               	movlb 0	; select bank0
 12938  0FD2  00AF               	movwf	(?_printf)
 12939  0FD3  3086               	movlw	high(STR_89|8000h)
 12940  0FD4  00B0               	movwf	((?_printf))+1
 12941  0FD5  086A               	movf	1+(_cur_instruction)+01h,w
 12942  0FD6  01B2               	clrf	1+(?_printf)+02h
 12943  0FD7  07B2               	addwf	1+(?_printf)+02h
 12944  0FD8  0869               	movf	0+(_cur_instruction)+01h,w
 12945  0FD9  01B1               	clrf	0+(?_printf)+02h
 12946  0FDA  07B1               	addwf	0+(?_printf)+02h
 12947                           
 12948  0FDB  3194  24A0  318B   	fcall	_printf
 12949                           	line	648
 12950                           	
 12951  0FDE                     l38073:	
 12952                           ;litterlanguage.c: 648: error_execution = 1;
 12953  0FDE  1770               	bsf	(_error_execution/8),(_error_execution)&7
 12954                           	line	649
 12955                           	
 12956  0FDF                     l38075:	
 12957                           ;litterlanguage.c: 649: litterlanguage_event(4, error_execution);
 12958  0FDF  3000               	movlw	0
 12959  0FE0  1B70               	btfsc	(_error_execution/8),(_error_execution)&7
 12960  0FE1  3001               	movlw	1
 12961  0FE2  0020               	movlb 0	; select bank0
 12962  0FE3  00D0               	movwf	(??_exe_instruction+0)+0
 12963  0FE4  0850               	movf	(??_exe_instruction+0)+0,w
 12964  0FE5  00A1               	movwf	(?_litterlanguage_event)
 12965  0FE6  3004               	movlw	(04h)
 12966  0FE7  3198  2000  318B   	fcall	_litterlanguage_event
 12967                           	line	650
 12968                           ;litterlanguage.c: 650: break;
 12969  0FEA  2FF7               	goto	l38081
 12970                           	line	651
 12971                           	
 12972  0FEB                     l38077:	
 12973                           ;litterlanguage.c: 651: }
 12974  0FEB  2FF7               	goto	l38081
 12975                           	line	474
 12976                           	
 12977  0FEC                     l4353:	
 12978                           	
 12979  0FEC                     l38079:	
 12980  0FEC  0020               	movlb 0	; select bank0
 12981  0FED  0868               	movf	(_cur_instruction),w
 12982                           	; Switch size 1, requested type "space"
 12983                           ; Number of cases is 15, Range of values is 0 to 14
 12984                           ; switch strategies available:
 12985                           ; Name         Instructions Cycles
 12986                           ; direct_byte           36     6 (fixed)
 12987                           ; simple_byte           46    24 (average)
 12988                           ; jumptable            260     6 (fixed)
 12989                           ; rangetable            19     4 (fixed)
 12990                           ; spacedrange           35     6 (fixed)
 12991                           ; locatedrange          15     3 (fixed)
 12992                           ;	Chosen strategy is direct_byte
 12993                           
 12994  0FEE  0084               	movwf fsr0l
 12995  0FEF  300F               	movlw	15
 12996  0FF0  0204               	subwf	fsr0l,w
 12997  0FF1  1803               skipnc
 12998  0FF2  2FD0               goto l38071
 12999  0FF3  31A8               movlp high(S38925)
 13000  0FF4  3504               	lslf fsr0l,w
 13001  0FF5  3E00               	addlw low(S38925)
 13002  0FF6  0082               	movwf pc
 13003                           psect	swtext2,local,class=CONST,delta=2
 13004                           global __pswtext2
 13005  2800                     __pswtext2:
 13006  2800                     S38925:
 13007  2800  318F  2FBB         	ljmp	l38065
 13008  2802  318B  2B4F         	ljmp	l37837
 13009  2804  318B  2BA1         	ljmp	l37857
 13010  2806  318B  2BF3         	ljmp	l4373
 13011  2808  318C  2C9D         	ljmp	l4388
 13012  280A  318D  2D01         	ljmp	l4399
 13013  280C  318E  2EBB         	ljmp	l4443
 13014  280E  318D  2D54         	ljmp	l37959
 13015  2810  318D  2D89         	ljmp	l4410
 13016  2812  318D  2DF3         	ljmp	l4422
 13017  2814  318E  2E29         	ljmp	l4429
 13018  2816  318E  2E72         	ljmp	l4436
 13019  2818  318F  2F56         	ljmp	l38043
 13020  281A  318F  2F8A         	ljmp	l38053
 13021  281C  318F  2FAA         	ljmp	l38059
 13022                           psect	text3235
 13023                           
 13024                           	line	651
 13025                           	
 13026  0FF7                     l4363:	
 13027                           	line	653
 13028                           	
 13029  0FF7                     l38081:	
 13030                           ;litterlanguage.c: 653: printf("\n");
 13031  0FF7  30F5               	movlw	low(STR_90|8000h)
 13032  0FF8  0020               	movlb 0	; select bank0
 13033  0FF9  00AF               	movwf	(?_printf)
 13034  0FFA  3087               	movlw	high(STR_90|8000h)
 13035  0FFB  00B0               	movwf	((?_printf))+1
 13036  0FFC  3194  24A0  318B   	fcall	_printf
 13037                           	line	655
 13038                           	
 13039  0FFF                     l4454:	
 13040  0FFF  0008               	return
 13041                           	opt stack 0
 13042                           GLOBAL	__end_of_exe_instruction
 13043  1000                     	__end_of_exe_instruction:
 13044 ;; =============== function _exe_instruction ends ============
 13045                           
 13046                           	signat	_exe_instruction,88
 13047                           	global	_water_work
 13048                           psect	text3236,local,class=CODE,delta=2
 13049                           global __ptext3236
 13050  1942                     __ptext3236:
 13051                           
 13052 ;; *************** function _water_work *****************
 13053 ;; Defined at:
 13054 ;;		line 140 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 13055 ;; Parameters:    Size  Location     Type
 13056 ;;		None
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;		None
 13059 ;; Return value:  Size  Location     Type
 13060 ;;		None               void
 13061 ;; Registers used:
 13062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13063 ;; Tracked objects:
 13064 ;;		On entry : 0/0
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13072 ;;Total ram usage:        1 bytes
 13073 ;; Hardware stack levels used:    1
 13074 ;; Hardware stack levels required when called:    6
 13075 ;; This function calls:
 13076 ;;		_timeoutexpired
 13077 ;;		_settimeout
 13078 ;;		_watersensor_event
 13079 ;; This function is called by:
 13080 ;;		_main
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           psect	text3236
 13084                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 13085                           	line	140
 13086                           	global	__size_of_water_work
 13087  00BD                     	__size_of_water_work	equ	__end_of_water_work-_water_work
 13088                           	
 13089  1942                     _water_work:	
 13090                           	opt	stack 9
 13091                           ; Regs used in _water_work: [wreg-status,0+pclath+cstack]
 13092                           	line	141
 13093                           	
 13094  1942                     l37779:	
 13095                           ;water.c: 141: switch (state) {
 13096  1942  29F2               	goto	l37833
 13097                           	line	142
 13098                           ;water.c: 142: default:
 13099                           	
 13100  1943                     l23449:	
 13101                           	line	143
 13102                           ;water.c: 143: state = 0;
 13103  1943  01DC               	clrf	(water@state)^080h
 13104  1944  2945               	goto	l37781
 13105                           	line	144
 13106                           ;water.c: 144: case 0:
 13107                           	
 13108  1945                     l23450:	
 13109                           	line	145
 13110                           	
 13111  1945                     l37781:	
 13112                           ;water.c: 145: if (!timeoutexpired(&sensortimer))
 13113  1945  3052               	movlw	(_sensortimer&0ffh)
 13114  1946  0020               	movlb 0	; select bank0
 13115  1947  00A9               	movwf	(?_timeoutexpired)
 13116  1948  3001               	movlw	0x2/2
 13117  1949  00AA               	movwf	(?_timeoutexpired+1)
 13118  194A  31A3  235B  3199   	fcall	_timeoutexpired
 13119  194D  3800               	iorlw	0
 13120  194E  1D03               	skipz
 13121  194F  2951               	goto	u10911
 13122  1950  2952               	goto	u10910
 13123  1951                     u10911:
 13124  1951  2954               	goto	l23451
 13125  1952                     u10910:
 13126  1952  29FE               	goto	l23462
 13127                           	line	146
 13128                           	
 13129  1953                     l37783:	
 13130                           ;water.c: 146: break;
 13131  1953  29FE               	goto	l23462
 13132                           	
 13133  1954                     l23451:	
 13134                           	line	148
 13135                           ;water.c: 148: LATB |= (1U << (2));
 13136  1954  0022               	movlb 2	; select bank2
 13137  1955  150D               	bsf	(269)^0100h+(2/8),(2)&7	;volatile
 13138                           	line	150
 13139                           	
 13140  1956                     l37785:	
 13141                           ;water.c: 150: settimeout(&sensortimer, (((((4UL * (1000UL * ((1000UL)))))/4)/8)/1000));
 13142  1956  3052               	movlw	(_sensortimer&0ffh)
 13143  1957  0020               	movlb 0	; select bank0
 13144  1958  00AD               	movwf	(?_settimeout)
 13145  1959  3001               	movlw	0x2/2
 13146  195A  00AE               	movwf	(?_settimeout+1)
 13147  195B  3000               	movlw	0
 13148  195C  00B2               	movwf	3+(?_settimeout)+02h
 13149  195D  3000               	movlw	0
 13150  195E  00B1               	movwf	2+(?_settimeout)+02h
 13151  195F  3000               	movlw	0
 13152  1960  00B0               	movwf	1+(?_settimeout)+02h
 13153  1961  307D               	movlw	07Dh
 13154  1962  00AF               	movwf	0+(?_settimeout)+02h
 13155                           
 13156  1963  31A1  2147  3199   	fcall	_settimeout
 13157                           	line	152
 13158                           	
 13159  1966                     l37787:	
 13160                           ;water.c: 152: state = 1;
 13161  1966  0021               	movlb 1	; select bank1
 13162  1967  01DC               	clrf	(water@state)^080h
 13163  1968  1403               	bsf	status,0
 13164  1969  0DDC               	rlf	(water@state)^080h,f
 13165                           	line	156
 13166                           ;water.c: 156: break;
 13167  196A  29FE               	goto	l23462
 13168                           	line	157
 13169                           ;water.c: 157: case 1:
 13170                           	
 13171  196B                     l23453:	
 13172                           	line	158
 13173                           	
 13174  196B                     l37789:	
 13175                           ;water.c: 158: if (!timeoutexpired(&sensortimer))
 13176  196B  3052               	movlw	(_sensortimer&0ffh)
 13177  196C  0020               	movlb 0	; select bank0
 13178  196D  00A9               	movwf	(?_timeoutexpired)
 13179  196E  3001               	movlw	0x2/2
 13180  196F  00AA               	movwf	(?_timeoutexpired+1)
 13181  1970  31A3  235B  3199   	fcall	_timeoutexpired
 13182  1973  3800               	iorlw	0
 13183  1974  1D03               	skipz
 13184  1975  2977               	goto	u10921
 13185  1976  2978               	goto	u10920
 13186  1977                     u10921:
 13187  1977  297A               	goto	l23454
 13188  1978                     u10920:
 13189  1978  29FE               	goto	l23462
 13190                           	line	159
 13191                           	
 13192  1979                     l37791:	
 13193                           ;water.c: 159: break;
 13194  1979  29FE               	goto	l23462
 13195                           	
 13196  197A                     l23454:	
 13197                           	line	161
 13198                           ;water.c: 161: ADCON0bits.GO = 1;
 13199  197A  0021               	movlb 1	; select bank1
 13200  197B  149D               	bsf	(157)^080h,1	;volatile
 13201                           	line	162
 13202                           	
 13203  197C                     l37793:	
 13204                           ;water.c: 162: state = 2;
 13205  197C  3002               	movlw	(02h)
 13206  197D  0020               	movlb 0	; select bank0
 13207  197E  00D3               	movwf	(??_water_work+0)+0
 13208  197F  0853               	movf	(??_water_work+0)+0,w
 13209  1980  0021               	movlb 1	; select bank1
 13210  1981  00DC               	movwf	(water@state)^080h
 13211                           	line	163
 13212                           ;water.c: 163: break;
 13213  1982  29FE               	goto	l23462
 13214                           	line	164
 13215                           ;water.c: 164: case 2:
 13216                           	
 13217  1983                     l23455:	
 13218                           	line	166
 13219                           ;water.c: 166: if (ADCON0bits.nDONE)
 13220  1983  1C9D               	btfss	(157)^080h,1	;volatile
 13221  1984  2986               	goto	u10931
 13222  1985  2987               	goto	u10930
 13223  1986                     u10931:
 13224  1986  2989               	goto	l37797
 13225  1987                     u10930:
 13226  1987  29FE               	goto	l23462
 13227                           	line	167
 13228                           	
 13229  1988                     l37795:	
 13230                           ;water.c: 167: break;
 13231  1988  29FE               	goto	l23462
 13232                           	
 13233  1989                     l23456:	
 13234                           	line	169
 13235                           	
 13236  1989                     l37797:	
 13237                           ;water.c: 169: reflectionquality = ADRES;
 13238  1989  081C               	movf	(155+1)^080h,w	;volatile
 13239  198A  01D1               	clrf	(_reflectionquality+1)^080h
 13240  198B  07D1               	addwf	(_reflectionquality+1)^080h
 13241  198C  081B               	movf	(155)^080h,w	;volatile
 13242  198D  01D0               	clrf	(_reflectionquality)^080h
 13243  198E  07D0               	addwf	(_reflectionquality)^080h
 13244                           
 13245                           	line	177
 13246                           	
 13247  198F                     l37799:	
 13248                           ;water.c: 177: if (!filling && !ledalwayson)
 13249  198F  0020               	movlb 0	; select bank0
 13250  1990  196D               	btfsc	(_filling/8),(_filling)&7
 13251  1991  2993               	goto	u10941
 13252  1992  2994               	goto	u10940
 13253  1993                     u10941:
 13254  1993  299E               	goto	l37805
 13255  1994                     u10940:
 13256                           	
 13257  1994                     l37801:	
 13258  1994  19ED               	btfsc	(_ledalwayson/8),(_ledalwayson)&7
 13259  1995  2997               	goto	u10951
 13260  1996  2998               	goto	u10950
 13261  1997                     u10951:
 13262  1997  299E               	goto	l37805
 13263  1998                     u10950:
 13264                           	line	178
 13265                           	
 13266  1998                     l37803:	
 13267                           ;water.c: 178: LATB &= ~(1U << (2));
 13268  1998  30FB               	movlw	(0FBh)
 13269  1999  00D3               	movwf	(??_water_work+0)+0
 13270  199A  0853               	movf	(??_water_work+0)+0,w
 13271  199B  0022               	movlb 2	; select bank2
 13272  199C  058D               	andwf	(269)^0100h,f	;volatile
 13273  199D  299E               	goto	l37805
 13274                           	
 13275  199E                     l23457:	
 13276                           	line	180
 13277                           	
 13278  199E                     l37805:	
 13279                           ;water.c: 180: if (reflectionquality <= (503 - ((520)-(503)))) {
 13280  199E  3001               	movlw	high(01E7h)
 13281  199F  0021               	movlb 1	; select bank1
 13282  19A0  0251               	subwf	(_reflectionquality+1)^080h,w
 13283  19A1  30E7               	movlw	low(01E7h)
 13284  19A2  1903               	skipnz
 13285  19A3  0250               	subwf	(_reflectionquality)^080h,w
 13286  19A4  1803               	skipnc
 13287  19A5  29A7               	goto	u10961
 13288  19A6  29A8               	goto	u10960
 13289  19A7                     u10961:
 13290  19A7  29C0               	goto	l37817
 13291  19A8                     u10960:
 13292                           	line	182
 13293                           	
 13294  19A8                     l37807:	
 13295                           ;water.c: 181: if ((hysteresis > 0) &&
 13296                           ;water.c: 182: (!--hysteresis && detected)) {
 13297  19A8  0020               	movlb 0	; select bank0
 13298  19A9  0864               	movf	(_hysteresis),w
 13299  19AA  1D03               	skipz
 13300  19AB  29AD               	goto	u10970
 13301  19AC  29DE               	goto	l37827
 13302  19AD                     u10970:
 13303                           	
 13304  19AD                     l37809:	
 13305  19AD  3001               	movlw	low(01h)
 13306  19AE  02E4               	subwf	(_hysteresis),f
 13307  19AF  1D03               	btfss	status,2
 13308  19B0  29B2               	goto	u10981
 13309  19B1  29B3               	goto	u10980
 13310  19B2                     u10981:
 13311  19B2  29DE               	goto	l37827
 13312  19B3                     u10980:
 13313                           	
 13314  19B3                     l37811:	
 13315  19B3  1C6D               	btfss	(_detected/8),(_detected)&7
 13316  19B4  29B6               	goto	u10991
 13317  19B5  29B7               	goto	u10990
 13318  19B6                     u10991:
 13319  19B6  29DE               	goto	l37827
 13320  19B7                     u10990:
 13321                           	line	183
 13322                           	
 13323  19B7                     l37813:	
 13324                           ;water.c: 183: detected = 0;
 13325  19B7  106D               	bcf	(_detected/8),(_detected)&7
 13326                           	line	184
 13327                           	
 13328  19B8                     l37815:	
 13329                           ;water.c: 184: watersensor_event(detected);
 13330  19B8  3000               	movlw	0
 13331  19B9  186D               	btfsc	(_detected/8),(_detected)&7
 13332  19BA  3001               	movlw	1
 13333  19BB  31A2  22EA  3199   	fcall	_watersensor_event
 13334  19BE  29DE               	goto	l37827
 13335                           	line	185
 13336                           	
 13337  19BF                     l23459:	
 13338                           	line	186
 13339                           ;water.c: 185: }
 13340                           ;water.c: 186: } else {
 13341  19BF  29DE               	goto	l37827
 13342                           	
 13343  19C0                     l23458:	
 13344                           	line	188
 13345                           	
 13346  19C0                     l37817:	
 13347                           ;water.c: 187: if ((hysteresis < 8) &&
 13348                           ;water.c: 188: (++hysteresis >= 8) && !detected) {
 13349  19C0  3008               	movlw	(08h)
 13350  19C1  0020               	movlb 0	; select bank0
 13351  19C2  0264               	subwf	(_hysteresis),w
 13352  19C3  1803               	skipnc
 13353  19C4  29C6               	goto	u11001
 13354  19C5  29C7               	goto	u11000
 13355  19C6                     u11001:
 13356  19C6  29DE               	goto	l37827
 13357  19C7                     u11000:
 13358                           	
 13359  19C7                     l37819:	
 13360  19C7  3001               	movlw	(01h)
 13361  19C8  00D3               	movwf	(??_water_work+0)+0
 13362  19C9  0853               	movf	(??_water_work+0)+0,w
 13363  19CA  07E4               	addwf	(_hysteresis),f
 13364  19CB  3008               	movlw	(08h)
 13365  19CC  0264               	subwf	((_hysteresis)),w
 13366  19CD  1C03               	skipc
 13367  19CE  29D0               	goto	u11011
 13368  19CF  29D1               	goto	u11010
 13369  19D0                     u11011:
 13370  19D0  29DE               	goto	l37827
 13371  19D1                     u11010:
 13372                           	
 13373  19D1                     l37821:	
 13374  19D1  186D               	btfsc	(_detected/8),(_detected)&7
 13375  19D2  29D4               	goto	u11021
 13376  19D3  29D5               	goto	u11020
 13377  19D4                     u11021:
 13378  19D4  29DE               	goto	l37827
 13379  19D5                     u11020:
 13380                           	line	189
 13381                           	
 13382  19D5                     l37823:	
 13383                           ;water.c: 189: detected = 1;
 13384  19D5  146D               	bsf	(_detected/8),(_detected)&7
 13385                           	line	190
 13386                           	
 13387  19D6                     l37825:	
 13388                           ;water.c: 190: watersensor_event(detected);
 13389  19D6  3000               	movlw	0
 13390  19D7  186D               	btfsc	(_detected/8),(_detected)&7
 13391  19D8  3001               	movlw	1
 13392  19D9  31A2  22EA  3199   	fcall	_watersensor_event
 13393  19DC  29DE               	goto	l37827
 13394                           	line	191
 13395                           	
 13396  19DD                     l23461:	
 13397  19DD  29DE               	goto	l37827
 13398                           	line	192
 13399                           	
 13400  19DE                     l23460:	
 13401                           	line	194
 13402                           	
 13403  19DE                     l37827:	
 13404                           ;water.c: 191: }
 13405                           ;water.c: 192: }
 13406                           ;water.c: 194: settimeout(&sensortimer, (((((4UL * (1000UL * ((1000UL)))))/4)/8)/4));
 13407  19DE  3052               	movlw	(_sensortimer&0ffh)
 13408  19DF  0020               	movlb 0	; select bank0
 13409  19E0  00AD               	movwf	(?_settimeout)
 13410  19E1  3001               	movlw	0x2/2
 13411  19E2  00AE               	movwf	(?_settimeout+1)
 13412  19E3  3000               	movlw	0
 13413  19E4  00B2               	movwf	3+(?_settimeout)+02h
 13414  19E5  3000               	movlw	0
 13415  19E6  00B1               	movwf	2+(?_settimeout)+02h
 13416  19E7  307A               	movlw	07Ah
 13417  19E8  00B0               	movwf	1+(?_settimeout)+02h
 13418  19E9  3012               	movlw	012h
 13419  19EA  00AF               	movwf	0+(?_settimeout)+02h
 13420                           
 13421  19EB  31A1  2147  3199   	fcall	_settimeout
 13422                           	line	195
 13423                           	
 13424  19EE                     l37829:	
 13425                           ;water.c: 195: state = 0;
 13426  19EE  0021               	movlb 1	; select bank1
 13427  19EF  01DC               	clrf	(water@state)^080h
 13428                           	line	196
 13429                           ;water.c: 196: break;
 13430  19F0  29FE               	goto	l23462
 13431                           	line	197
 13432                           	
 13433  19F1                     l37831:	
 13434                           ;water.c: 197: }
 13435  19F1  29FE               	goto	l23462
 13436                           	line	141
 13437                           	
 13438  19F2                     l23448:	
 13439                           	
 13440  19F2                     l37833:	
 13441  19F2  0021               	movlb 1	; select bank1
 13442  19F3  085C               	movf	(water@state)^080h,w
 13443                           	; Switch size 1, requested type "space"
 13444                           ; Number of cases is 3, Range of values is 0 to 2
 13445                           ; switch strategies available:
 13446                           ; Name         Instructions Cycles
 13447                           ; simple_byte           10     6 (average)
 13448                           ; direct_byte           12     6 (fixed)
 13449                           ; jumptable            260     6 (fixed)
 13450                           ; rangetable             7     4 (fixed)
 13451                           ; spacedrange           11     6 (fixed)
 13452                           ; locatedrange           3     3 (fixed)
 13453                           ;	Chosen strategy is simple_byte
 13454                           
 13455                           	opt asmopt_off
 13456  19F4  3A00               	xorlw	0^0	; case 0
 13457  19F5  1903               	skipnz
 13458  19F6  2945               	goto	l37781
 13459  19F7  3A01               	xorlw	1^0	; case 1
 13460  19F8  1903               	skipnz
 13461  19F9  296B               	goto	l37789
 13462  19FA  3A03               	xorlw	2^1	; case 2
 13463  19FB  1903               	skipnz
 13464  19FC  2983               	goto	l23455
 13465  19FD  2943               	goto	l23449
 13466                           	opt asmopt_on
 13467                           
 13468                           	line	197
 13469                           	
 13470  19FE                     l23452:	
 13471                           	line	198
 13472                           	
 13473  19FE                     l23462:	
 13474  19FE  0008               	return
 13475                           	opt stack 0
 13476                           GLOBAL	__end_of_water_work
 13477  19FF                     	__end_of_water_work:
 13478 ;; =============== function _water_work ends ============
 13479                           
 13480                           	signat	_water_work,88
 13481                           	global	_litterlanguage_init
 13482                           psect	text3237,local,class=CODE,delta=2
 13483                           global __ptext3237
 13484  25B3                     __ptext3237:
 13485                           
 13486 ;; *************** function _litterlanguage_init *****************
 13487 ;; Defined at:
 13488 ;;		line 85 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  flags           1    wreg     unsigned char 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  flags           1   51[BANK0 ] unsigned char 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;		None               void
 13495 ;; Registers used:
 13496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13505 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 13506 ;;Total ram usage:        3 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; Hardware stack levels required when called:    6
 13509 ;; This function calls:
 13510 ;;		_printf
 13511 ;;		_litterlanguage_cleanup
 13512 ;;		_eeprom_write
 13513 ;;		_eeprom_read
 13514 ;; This function is called by:
 13515 ;;		_main
 13516 ;; This function uses a non-reentrant model
 13517 ;;
 13518                           psect	text3237
 13519                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 13520                           	line	85
 13521                           	global	__size_of_litterlanguage_init
 13522  007D                     	__size_of_litterlanguage_init	equ	__end_of_litterlanguage_init-_litterlanguage_init
 13523                           	
 13524  25B3                     _litterlanguage_init:	
 13525                           	opt	stack 9
 13526                           ; Regs used in _litterlanguage_init: [wreg-status,0+pclath+cstack]
 13527                           ;litterlanguage_init@flags stored from wreg
 13528  25B3  0020               	movlb 0	; select bank0
 13529  25B4  00D4               	movwf	(litterlanguage_init@flags)
 13530                           	line	86
 13531                           	
 13532  25B5                     l37749:	
 13533                           ;litterlanguage.c: 86: switch(flags & ((0x01 << 0) | (0x01 << 1))) {
 13534  25B5  2E17               	goto	l37773
 13535                           	line	87
 13536                           ;litterlanguage.c: 87: case 0:
 13537                           	
 13538  25B6                     l4225:	
 13539                           	line	88
 13540                           	
 13541  25B6                     l37751:	
 13542                           ;litterlanguage.c: 88: printf("Box is ");
 13543  25B6  30EA               	movlw	low(STR_9|8000h)
 13544  25B7  00AF               	movwf	(?_printf)
 13545  25B8  3088               	movlw	high(STR_9|8000h)
 13546  25B9  00B0               	movwf	((?_printf))+1
 13547  25BA  3194  24A0  31A5   	fcall	_printf
 13548                           	line	89
 13549                           ;litterlanguage.c: 89: switch (eeprom_read((3))){
 13550  25BD  2DF1               	goto	l37765
 13551                           	line	90
 13552                           ;litterlanguage.c: 90: case 0:
 13553                           	
 13554  25BE                     l4227:	
 13555                           	line	91
 13556                           	
 13557  25BE                     l37753:	
 13558                           ;litterlanguage.c: 91: printf("tidy\n");
 13559  25BE  301E               	movlw	low(STR_10|8000h)
 13560  25BF  0020               	movlb 0	; select bank0
 13561  25C0  00AF               	movwf	(?_printf)
 13562  25C1  3089               	movlw	high(STR_10|8000h)
 13563  25C2  00B0               	movwf	((?_printf))+1
 13564  25C3  3194  24A0  31A5   	fcall	_printf
 13565                           	line	92
 13566                           ;litterlanguage.c: 92: break;
 13567  25C6  2E2F               	goto	l4237
 13568                           	line	93
 13569                           ;litterlanguage.c: 93: case 1:
 13570                           	
 13571  25C7                     l4229:	
 13572                           	line	94
 13573                           	
 13574  25C7                     l37755:	
 13575                           ;litterlanguage.c: 94: printf("messy\n");
 13576  25C7  3009               	movlw	low(STR_11|8000h)
 13577  25C8  0020               	movlb 0	; select bank0
 13578  25C9  00AF               	movwf	(?_printf)
 13579  25CA  3089               	movlw	high(STR_11|8000h)
 13580  25CB  00B0               	movwf	((?_printf))+1
 13581  25CC  3194  24A0  31A5   	fcall	_printf
 13582                           	line	95
 13583                           ;litterlanguage.c: 95: litterlanguage_cleanup(0);
 13584  25CF  3000               	movlw	(0)
 13585  25D0  31AD  254B  31A5   	fcall	_litterlanguage_cleanup
 13586                           	line	96
 13587                           ;litterlanguage.c: 96: break;
 13588  25D3  2E2F               	goto	l4237
 13589                           	line	97
 13590                           ;litterlanguage.c: 97: case 2:
 13591                           	
 13592  25D4                     l4230:	
 13593                           	line	98
 13594                           	
 13595  25D4                     l37757:	
 13596                           ;litterlanguage.c: 98: printf("wet\n");
 13597  25D4  3024               	movlw	low(STR_12|8000h)
 13598  25D5  0020               	movlb 0	; select bank0
 13599  25D6  00AF               	movwf	(?_printf)
 13600  25D7  3089               	movlw	high(STR_12|8000h)
 13601  25D8  00B0               	movwf	((?_printf))+1
 13602  25D9  3194  24A0  31A5   	fcall	_printf
 13603                           	line	99
 13604                           ;litterlanguage.c: 99: litterlanguage_cleanup(1);
 13605  25DC  3001               	movlw	(01h)
 13606  25DD  31AD  254B  31A5   	fcall	_litterlanguage_cleanup
 13607                           	line	100
 13608                           ;litterlanguage.c: 100: break;
 13609  25E0  2E2F               	goto	l4237
 13610                           	line	101
 13611                           ;litterlanguage.c: 101: default:
 13612                           	
 13613  25E1                     l4231:	
 13614                           	line	102
 13615                           	
 13616  25E1                     l37759:	
 13617                           ;litterlanguage.c: 102: printf("unknown\n");
 13618  25E1  30AD               	movlw	low(STR_13|8000h)
 13619  25E2  0020               	movlb 0	; select bank0
 13620  25E3  00AF               	movwf	(?_printf)
 13621  25E4  3088               	movlw	high(STR_13|8000h)
 13622  25E5  00B0               	movwf	((?_printf))+1
 13623  25E6  3194  24A0  31A5   	fcall	_printf
 13624                           	line	103
 13625                           	
 13626  25E9                     l37761:	
 13627                           ;litterlanguage.c: 103: eeprom_write((3), 0);
 13628  25E9  0020               	movlb 0	; select bank0
 13629  25EA  01A1               	clrf	(?_eeprom_write)
 13630  25EB  3003               	movlw	(03h)
 13631  25EC  31AC  24A5  31A5   	fcall	_eeprom_write
 13632                           	line	104
 13633                           ;litterlanguage.c: 104: break;
 13634  25EF  2E2F               	goto	l4237
 13635                           	line	105
 13636                           	
 13637  25F0                     l37763:	
 13638                           ;litterlanguage.c: 105: }
 13639  25F0  2E2F               	goto	l4237
 13640                           	line	89
 13641                           	
 13642  25F1                     l4226:	
 13643                           	
 13644  25F1                     l37765:	
 13645  25F1  3003               	movlw	(03h)
 13646  25F2  31AA  22DC  31A5   	fcall	_eeprom_read
 13647                           	; Switch size 1, requested type "space"
 13648                           ; Number of cases is 3, Range of values is 0 to 2
 13649                           ; switch strategies available:
 13650                           ; Name         Instructions Cycles
 13651                           ; simple_byte           10     6 (average)
 13652                           ; direct_byte           12     6 (fixed)
 13653                           ; jumptable            260     6 (fixed)
 13654                           ; rangetable             7     4 (fixed)
 13655                           ; spacedrange           11     6 (fixed)
 13656                           ; locatedrange           3     3 (fixed)
 13657                           ;	Chosen strategy is simple_byte
 13658                           
 13659                           	opt asmopt_off
 13660  25F5  3A00               	xorlw	0^0	; case 0
 13661  25F6  1903               	skipnz
 13662  25F7  2DBE               	goto	l37753
 13663  25F8  3A01               	xorlw	1^0	; case 1
 13664  25F9  1903               	skipnz
 13665  25FA  2DC7               	goto	l37755
 13666  25FB  3A03               	xorlw	2^1	; case 2
 13667  25FC  1903               	skipnz
 13668  25FD  2DD4               	goto	l37757
 13669  25FE  2DE1               	goto	l37759
 13670                           	opt asmopt_on
 13671                           
 13672                           	line	105
 13673                           	
 13674  25FF                     l4228:	
 13675                           	line	106
 13676                           ;litterlanguage.c: 106: break;
 13677  25FF  2E2F               	goto	l4237
 13678                           	line	107
 13679                           ;litterlanguage.c: 107: case (0x01 << 0):
 13680                           	
 13681  2600                     l4233:	
 13682                           	line	109
 13683                           	
 13684  2600                     l37767:	
 13685                           ;litterlanguage.c: 109: printf("Wet cleanup forced\n");
 13686  2600  30BC               	movlw	low(STR_14|8000h)
 13687  2601  0020               	movlb 0	; select bank0
 13688  2602  00AF               	movwf	(?_printf)
 13689  2603  3085               	movlw	high(STR_14|8000h)
 13690  2604  00B0               	movwf	((?_printf))+1
 13691  2605  3194  24A0  31A5   	fcall	_printf
 13692                           	line	110
 13693                           ;litterlanguage.c: 110: litterlanguage_cleanup(1);
 13694  2608  3001               	movlw	(01h)
 13695  2609  31AD  254B  31A5   	fcall	_litterlanguage_cleanup
 13696                           	line	111
 13697                           ;litterlanguage.c: 111: break;
 13698  260C  2E2F               	goto	l4237
 13699                           	line	112
 13700                           ;litterlanguage.c: 112: case (0x01 << 1):
 13701                           	
 13702  260D                     l4234:	
 13703                           	line	114
 13704                           ;litterlanguage.c: 114: break;
 13705  260D  2E2F               	goto	l4237
 13706                           	line	115
 13707                           ;litterlanguage.c: 115: case (0x01 << 0) | (0x01 << 1):
 13708                           	
 13709  260E                     l4235:	
 13710  260E  2E0F               	goto	l37769
 13711                           	line	116
 13712                           ;litterlanguage.c: 116: default:
 13713                           	
 13714  260F                     l4236:	
 13715                           	line	118
 13716                           	
 13717  260F                     l37769:	
 13718                           ;litterlanguage.c: 118: eeprom_write((3), 0);
 13719  260F  0020               	movlb 0	; select bank0
 13720  2610  01A1               	clrf	(?_eeprom_write)
 13721  2611  3003               	movlw	(03h)
 13722  2612  31AC  24A5  31A5   	fcall	_eeprom_write
 13723                           	line	119
 13724                           ;litterlanguage.c: 119: break;
 13725  2615  2E2F               	goto	l4237
 13726                           	line	120
 13727                           	
 13728  2616                     l37771:	
 13729                           ;litterlanguage.c: 120: }
 13730  2616  2E2F               	goto	l4237
 13731                           	line	86
 13732                           	
 13733  2617                     l4224:	
 13734                           	
 13735  2617                     l37773:	
 13736  2617  0020               	movlb 0	; select bank0
 13737  2618  0854               	movf	(litterlanguage_init@flags),w
 13738  2619  3903               	andlw	03h
 13739  261A  00D2               	movwf	(??_litterlanguage_init+0)+0
 13740  261B  01D3               	clrf	(??_litterlanguage_init+0)+0+1
 13741                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13742                           ; Switch size 1, requested type "space"
 13743                           ; Number of cases is 1, Range of values is 0 to 0
 13744                           ; switch strategies available:
 13745                           ; Name         Instructions Cycles
 13746                           ; simple_byte            4     3 (average)
 13747                           ; direct_byte            8     6 (fixed)
 13748                           ; jumptable            260     6 (fixed)
 13749                           ; rangetable             5     4 (fixed)
 13750                           ; spacedrange            7     6 (fixed)
 13751                           ; locatedrange           1     3 (fixed)
 13752                           ;	Chosen strategy is simple_byte
 13753                           
 13754  261C  0853               	movf 1+(??_litterlanguage_init+0)+0,w
 13755                           	opt asmopt_off
 13756  261D  3A00               	xorlw	0^0	; case 0
 13757  261E  1903               	skipnz
 13758  261F  2E21               	goto	l38927
 13759  2620  2E0F               	goto	l37769
 13760                           	opt asmopt_on
 13761                           	
 13762  2621                     l38927:	
 13763                           ; Switch size 1, requested type "space"
 13764                           ; Number of cases is 4, Range of values is 0 to 3
 13765                           ; switch strategies available:
 13766                           ; Name         Instructions Cycles
 13767                           ; simple_byte           13     7 (average)
 13768                           ; direct_byte           14     6 (fixed)
 13769                           ; jumptable            260     6 (fixed)
 13770                           ; rangetable             8     4 (fixed)
 13771                           ; spacedrange           13     6 (fixed)
 13772                           ; locatedrange           4     3 (fixed)
 13773                           ;	Chosen strategy is simple_byte
 13774                           
 13775  2621  0852               	movf 0+(??_litterlanguage_init+0)+0,w
 13776                           	opt asmopt_off
 13777  2622  3A00               	xorlw	0^0	; case 0
 13778  2623  1903               	skipnz
 13779  2624  2DB6               	goto	l37751
 13780  2625  3A01               	xorlw	1^0	; case 1
 13781  2626  1903               	skipnz
 13782  2627  2E00               	goto	l37767
 13783  2628  3A03               	xorlw	2^1	; case 2
 13784  2629  1903               	skipnz
 13785  262A  2E2F               	goto	l4237
 13786  262B  3A01               	xorlw	3^2	; case 3
 13787  262C  1903               	skipnz
 13788  262D  2E0F               	goto	l37769
 13789  262E  2E0F               	goto	l37769
 13790                           	opt asmopt_on
 13791                           
 13792                           	line	120
 13793                           	
 13794  262F                     l4232:	
 13795                           	line	121
 13796                           	
 13797  262F                     l4237:	
 13798  262F  0008               	return
 13799                           	opt stack 0
 13800                           GLOBAL	__end_of_litterlanguage_init
 13801  2630                     	__end_of_litterlanguage_init:
 13802 ;; =============== function _litterlanguage_init ends ============
 13803                           
 13804                           	signat	_litterlanguage_init,4216
 13805                           	global	_userinterface_init
 13806                           psect	text3238,local,class=CODE,delta=2
 13807                           global __ptext3238
 13808  2C48                     __ptext3238:
 13809                           
 13810 ;; *************** function _userinterface_init *****************
 13811 ;; Defined at:
 13812 ;;		line 104 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;  flags           1    wreg     unsigned char 
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;  flags           1   42[BANK0 ] unsigned char 
 13817 ;; Return value:  Size  Location     Type
 13818 ;;		None               void
 13819 ;; Registers used:
 13820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13829 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13830 ;;Total ram usage:        2 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    6
 13833 ;; This function calls:
 13834 ;;		_eeprom_write
 13835 ;;		_eeprom_read
 13836 ;;		_set_mode
 13837 ;;		_update_display
 13838 ;; This function is called by:
 13839 ;;		_main
 13840 ;; This function uses a non-reentrant model
 13841 ;;
 13842                           psect	text3238
 13843                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 13844                           	line	104
 13845                           	global	__size_of_userinterface_init
 13846  002E                     	__size_of_userinterface_init	equ	__end_of_userinterface_init-_userinterface_init
 13847                           	
 13848  2C48                     _userinterface_init:	
 13849                           	opt	stack 9
 13850                           ; Regs used in _userinterface_init: [wreg-status,0+pclath+cstack]
 13851                           ;userinterface_init@flags stored from wreg
 13852                           	line	106
 13853  2C48  0020               	movlb 0	; select bank0
 13854  2C49  00CB               	movwf	(userinterface_init@flags)
 13855                           	
 13856  2C4A                     l37739:	
 13857                           ;userinterface.c: 105: if ((flags & (0x01 << 0)) &&
 13858                           ;userinterface.c: 106: (flags & (0x01 << 1))) {
 13859  2C4A  1C4B               	btfss	(userinterface_init@flags),(0)&7
 13860  2C4B  2C4D               	goto	u10871
 13861  2C4C  2C4E               	goto	u10870
 13862  2C4D                     u10871:
 13863  2C4D  2C60               	goto	l8634
 13864  2C4E                     u10870:
 13865                           	
 13866  2C4E                     l37741:	
 13867  2C4E  1CCB               	btfss	(userinterface_init@flags),(1)&7
 13868  2C4F  2C51               	goto	u10881
 13869  2C50  2C52               	goto	u10880
 13870  2C51                     u10881:
 13871  2C51  2C60               	goto	l8634
 13872  2C52                     u10880:
 13873                           	line	108
 13874                           	
 13875  2C52                     l37743:	
 13876                           ;userinterface.c: 108: eeprom_write((1), 0);
 13877  2C52  01A1               	clrf	(?_eeprom_write)
 13878  2C53  3001               	movlw	(01h)
 13879  2C54  31AC  24A5  31AC   	fcall	_eeprom_write
 13880                           	line	109
 13881                           ;userinterface.c: 109: eeprom_write((2), 0xFF);
 13882  2C57  30FF               	movlw	(0FFh)
 13883  2C58  0020               	movlb 0	; select bank0
 13884  2C59  00CA               	movwf	(??_userinterface_init+0)+0
 13885  2C5A  084A               	movf	(??_userinterface_init+0)+0,w
 13886  2C5B  00A1               	movwf	(?_eeprom_write)
 13887  2C5C  3002               	movlw	(02h)
 13888  2C5D  31AC  24A5  31AC   	fcall	_eeprom_write
 13889                           	line	110
 13890                           	
 13891  2C60                     l8634:	
 13892                           	line	113
 13893                           ;userinterface.c: 110: }
 13894                           ;userinterface.c: 113: locked = !eeprom_read((2));
 13895  2C60  3002               	movlw	(02h)
 13896  2C61  31AA  22DC  31AC   	fcall	_eeprom_read
 13897  2C64  3A00               	xorlw	0&0ffh
 13898  2C65  1903               	skipnz
 13899  2C66  2C68               	goto	u10891
 13900  2C67  2C6A               	goto	u10890
 13901                           	
 13902  2C68                     u10891:
 13903  2C68  15F1               	bsf	(_locked/8),(_locked)&7
 13904  2C69  2C6B               	goto	u10904
 13905  2C6A                     u10890:
 13906  2C6A  11F1               	bcf	(_locked/8),(_locked)&7
 13907  2C6B                     u10904:
 13908                           	line	115
 13909                           	
 13910  2C6B                     l37745:	
 13911                           ;userinterface.c: 115: set_mode(eeprom_read((1)));
 13912  2C6B  3001               	movlw	(01h)
 13913  2C6C  31AA  22DC  31AC   	fcall	_eeprom_read
 13914  2C6F  31AE  26ED  31AC   	fcall	_set_mode
 13915                           	line	117
 13916                           	
 13917  2C72                     l37747:	
 13918                           ;userinterface.c: 117: update_display();
 13919  2C72  3189  218C  31AC   	fcall	_update_display
 13920                           	line	118
 13921                           	
 13922  2C75                     l8635:	
 13923  2C75  0008               	return
 13924                           	opt stack 0
 13925                           GLOBAL	__end_of_userinterface_init
 13926  2C76                     	__end_of_userinterface_init:
 13927 ;; =============== function _userinterface_init ends ============
 13928                           
 13929                           	signat	_userinterface_init,4216
 13930                           	global	_proc_line
 13931                           psect	text3239,local,class=CODE,delta=2
 13932                           global __ptext3239
 13933  1AC6                     __ptext3239:
 13934                           
 13935 ;; *************** function _proc_line *****************
 13936 ;; Defined at:
 13937 ;;		line 135 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 13938 ;; Parameters:    Size  Location     Type
 13939 ;;  line            1    wreg     PTR unsigned char 
 13940 ;;		 -> linebuffer(20), 
 13941 ;; Auto vars:     Size  Location     Type
 13942 ;;  line            1   59[BANK0 ] PTR unsigned char 
 13943 ;;		 -> linebuffer(20), 
 13944 ;;  argv            4   48[BANK0 ] PTR unsigned char [4]
 13945 ;;		 -> linebuffer(20), 
 13946 ;;  len             2   57[BANK0 ] unsigned int 
 13947 ;;  argc            2   55[BANK0 ] int 
 13948 ;;  index           2   53[BANK0 ] int 
 13949 ;; Return value:  Size  Location     Type
 13950 ;;		None               void
 13951 ;; Registers used:
 13952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13953 ;; Tracked objects:
 13954 ;;		On entry : 0/0
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13959 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 13960 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13961 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 13962 ;;Total ram usage:       14 bytes
 13963 ;; Hardware stack levels used:    1
 13964 ;; Hardware stack levels required when called:    5
 13965 ;; This function calls:
 13966 ;;		_strlen
 13967 ;;		_cmd2index
 13968 ;;		_printf
 13969 ;;		___bmul
 13970 ;;		Absolute function
 13971 ;;		_echo
 13972 ;;		_help
 13973 ;; This function is called by:
 13974 ;;		_proc_char
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           psect	text3239
 13978                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 13979                           	line	135
 13980                           	global	__size_of_proc_line
 13981  012A                     	__size_of_proc_line	equ	__end_of_proc_line-_proc_line
 13982                           	
 13983  1AC6                     _proc_line:	
 13984                           	opt	stack 8
 13985                           ; Regs used in _proc_line: [allreg]
 13986                           ;proc_line@line stored from wreg
 13987  1AC6  0020               	movlb 0	; select bank0
 13988  1AC7  00DC               	movwf	(proc_line@line)
 13989                           	line	136
 13990                           	
 13991  1AC8                     l37673:	
 13992                           ;cmdline.c: 136: unsigned int len = strlen(line);
 13993  1AC8  085C               	movf	(proc_line@line),w
 13994  1AC9  31AC  2476  319A   	fcall	_strlen
 13995  1ACC  0020               	movlb 0	; select bank0
 13996  1ACD  0822               	movf	(1+(?_strlen)),w
 13997  1ACE  01DB               	clrf	(proc_line@len+1)
 13998  1ACF  07DB               	addwf	(proc_line@len+1)
 13999  1AD0  0821               	movf	(0+(?_strlen)),w
 14000  1AD1  01DA               	clrf	(proc_line@len)
 14001  1AD2  07DA               	addwf	(proc_line@len)
 14002                           
 14003                           	line	137
 14004                           	
 14005  1AD3                     l37675:	
 14006                           ;cmdline.c: 137: int argc = 0;
 14007  1AD3  01D8               	clrf	(proc_line@argc)
 14008  1AD4  01D9               	clrf	(proc_line@argc+1)
 14009                           	line	142
 14010                           ;cmdline.c: 138: char* argv[(4)];
 14011                           ;cmdline.c: 139: int index;
 14012                           ;cmdline.c: 142: while (len && (line[len-1] == ' ' || line[len-1] == '\t')) {
 14013  1AD5  2AE4               	goto	l37681
 14014                           	
 14015  1AD6                     l15117:	
 14016                           	line	143
 14017                           	
 14018  1AD6                     l37677:	
 14019                           ;cmdline.c: 143: line[len-1] = 0;
 14020  1AD6  085A               	movf	(proc_line@len),w
 14021  1AD7  3EFF               	addlw	0FFh
 14022  1AD8  075C               	addwf	(proc_line@line),w
 14023  1AD9  00CF               	movwf	(??_proc_line+0)+0
 14024  1ADA  084F               	movf	0+(??_proc_line+0)+0,w
 14025  1ADB  0086               	movwf	fsr1l
 14026  1ADC  3001               	movlw 1	; select bank2/3
 14027  1ADD  0087               	movwf fsr1h	
 14028                           	
 14029  1ADE  0181               	clrf	indf1
 14030                           	line	144
 14031                           	
 14032  1ADF                     l37679:	
 14033                           ;cmdline.c: 144: len--;
 14034  1ADF  3001               	movlw	low(01h)
 14035  1AE0  02DA               	subwf	(proc_line@len),f
 14036  1AE1  3000               	movlw	high(01h)
 14037  1AE2  3BDB               	subwfb	(proc_line@len+1),f
 14038  1AE3  2AE4               	goto	l37681
 14039                           	line	145
 14040                           	
 14041  1AE4                     l15116:	
 14042                           	line	142
 14043                           	
 14044  1AE4                     l37681:	
 14045  1AE4  085B               	movf	(proc_line@len+1),w
 14046  1AE5  045A               	iorwf	(proc_line@len),w
 14047  1AE6  1903               	skipnz
 14048  1AE7  2AE9               	goto	u10761
 14049  1AE8  2AEA               	goto	u10760
 14050  1AE9                     u10761:
 14051  1AE9  2B67               	goto	l37709
 14052  1AEA                     u10760:
 14053                           	
 14054  1AEA                     l37683:	
 14055  1AEA  085A               	movf	(proc_line@len),w
 14056  1AEB  3EFF               	addlw	0FFh
 14057  1AEC  075C               	addwf	(proc_line@line),w
 14058  1AED  00CF               	movwf	(??_proc_line+0)+0
 14059  1AEE  084F               	movf	0+(??_proc_line+0)+0,w
 14060  1AEF  0086               	movwf	fsr1l
 14061  1AF0  3001               	movlw 1	; select bank2/3
 14062  1AF1  0087               	movwf fsr1h	
 14063                           	
 14064  1AF2  0801               	movf	indf1,w
 14065  1AF3  3A20               	xorlw	020h&0ffh
 14066  1AF4  1903               	skipnz
 14067  1AF5  2AF7               	goto	u10771
 14068  1AF6  2AF8               	goto	u10770
 14069  1AF7                     u10771:
 14070  1AF7  2AD6               	goto	l37677
 14071  1AF8                     u10770:
 14072                           	
 14073  1AF8                     l37685:	
 14074  1AF8  085A               	movf	(proc_line@len),w
 14075  1AF9  3EFF               	addlw	0FFh
 14076  1AFA  075C               	addwf	(proc_line@line),w
 14077  1AFB  00CF               	movwf	(??_proc_line+0)+0
 14078  1AFC  084F               	movf	0+(??_proc_line+0)+0,w
 14079  1AFD  0086               	movwf	fsr1l
 14080  1AFE  3001               	movlw 1	; select bank2/3
 14081  1AFF  0087               	movwf fsr1h	
 14082                           	
 14083  1B00  0801               	movf	indf1,w
 14084  1B01  3A09               	xorlw	09h&0ffh
 14085  1B02  1903               	skipnz
 14086  1B03  2B05               	goto	u10781
 14087  1B04  2B06               	goto	u10780
 14088  1B05                     u10781:
 14089  1B05  2AD6               	goto	l37677
 14090  1B06                     u10780:
 14091  1B06  2B67               	goto	l37709
 14092                           	
 14093  1B07                     l15119:	
 14094  1B07  2B67               	goto	l37709
 14095                           	
 14096  1B08                     l15120:	
 14097                           	line	148
 14098                           ;cmdline.c: 145: }
 14099                           ;cmdline.c: 148: while (*line) {
 14100  1B08  2B67               	goto	l37709
 14101                           	
 14102  1B09                     l15122:	
 14103                           	line	150
 14104                           ;cmdline.c: 150: while ((*line == ' ') || (*line == '\t')) {
 14105  1B09  2B14               	goto	l37691
 14106                           	
 14107  1B0A                     l15124:	
 14108                           	line	151
 14109                           	
 14110  1B0A                     l37687:	
 14111                           ;cmdline.c: 151: *line = 0;
 14112  1B0A  085C               	movf	(proc_line@line),w
 14113  1B0B  0086               	movwf	fsr1l
 14114  1B0C  3001               	movlw 1	; select bank2/3
 14115  1B0D  0087               	movwf fsr1h	
 14116                           	
 14117  1B0E  0181               	clrf	indf1
 14118                           	line	152
 14119                           	
 14120  1B0F                     l37689:	
 14121                           ;cmdline.c: 152: line++;
 14122  1B0F  3001               	movlw	(01h)
 14123  1B10  00CF               	movwf	(??_proc_line+0)+0
 14124  1B11  084F               	movf	(??_proc_line+0)+0,w
 14125  1B12  07DC               	addwf	(proc_line@line),f
 14126  1B13  2B14               	goto	l37691
 14127                           	line	153
 14128                           	
 14129  1B14                     l15123:	
 14130                           	line	150
 14131                           	
 14132  1B14                     l37691:	
 14133  1B14  085C               	movf	(proc_line@line),w
 14134  1B15  0086               	movwf	fsr1l
 14135  1B16  3001               	movlw 1	; select bank2/3
 14136  1B17  0087               	movwf fsr1h	
 14137                           	
 14138  1B18  0801               	movf	indf1,w
 14139  1B19  3A20               	xorlw	020h&0ffh
 14140  1B1A  1903               	skipnz
 14141  1B1B  2B1D               	goto	u10791
 14142  1B1C  2B1E               	goto	u10790
 14143  1B1D                     u10791:
 14144  1B1D  2B0A               	goto	l37687
 14145  1B1E                     u10790:
 14146                           	
 14147  1B1E                     l37693:	
 14148  1B1E  085C               	movf	(proc_line@line),w
 14149  1B1F  0086               	movwf	fsr1l
 14150  1B20  3001               	movlw 1	; select bank2/3
 14151  1B21  0087               	movwf fsr1h	
 14152                           	
 14153  1B22  0801               	movf	indf1,w
 14154  1B23  3A09               	xorlw	09h&0ffh
 14155  1B24  1903               	skipnz
 14156  1B25  2B27               	goto	u10801
 14157  1B26  2B28               	goto	u10800
 14158  1B27                     u10801:
 14159  1B27  2B0A               	goto	l37687
 14160  1B28                     u10800:
 14161  1B28  2B29               	goto	l37695
 14162                           	
 14163  1B29                     l15125:	
 14164                           	line	156
 14165                           	
 14166  1B29                     l37695:	
 14167                           ;cmdline.c: 153: }
 14168                           ;cmdline.c: 156: if (*line) {
 14169  1B29  085C               	movf	(proc_line@line),w
 14170  1B2A  0086               	movwf	fsr1l
 14171  1B2B  3001               	movlw 1	; select bank2/3
 14172  1B2C  0087               	movwf fsr1h	
 14173                           	
 14174  1B2D  0801               	movf	indf1,w
 14175  1B2E  3A00               	xorlw	0&0ffh
 14176  1B2F  1903               	skipnz
 14177  1B30  2B32               	goto	u10811
 14178  1B31  2B33               	goto	u10810
 14179  1B32                     u10811:
 14180  1B32  2B46               	goto	l37703
 14181  1B33                     u10810:
 14182                           	line	157
 14183                           	
 14184  1B33                     l37697:	
 14185                           ;cmdline.c: 157: argv[argc] = line;
 14186  1B33  085C               	movf	(proc_line@line),w
 14187  1B34  00CF               	movwf	(??_proc_line+0)+0
 14188  1B35  0858               	movf	(proc_line@argc),w
 14189  1B36  3E51               	addlw	proc_line@argv&0ffh
 14190  1B37  0086               	movwf	fsr1l
 14191  1B38  0187               	clrf fsr1h	
 14192                           	
 14193  1B39  084F               	movf	(??_proc_line+0)+0,w
 14194  1B3A  0081               	movwf	indf1
 14195                           	line	158
 14196                           	
 14197  1B3B                     l37699:	
 14198                           ;cmdline.c: 158: argc++;
 14199  1B3B  3001               	movlw	low(01h)
 14200  1B3C  07D8               	addwf	(proc_line@argc),f
 14201  1B3D  3000               	movlw	high(01h)
 14202  1B3E  3DD9               	addwfc	(proc_line@argc+1),f
 14203  1B3F  2B46               	goto	l37703
 14204                           	line	159
 14205                           	
 14206  1B40                     l15126:	
 14207                           	line	162
 14208                           ;cmdline.c: 159: }
 14209                           ;cmdline.c: 162: while (*line && *line != ' ' && *line != '\t')
 14210  1B40  2B46               	goto	l37703
 14211                           	
 14212  1B41                     l15128:	
 14213                           	line	163
 14214                           	
 14215  1B41                     l37701:	
 14216                           ;cmdline.c: 163: line++;
 14217  1B41  3001               	movlw	(01h)
 14218  1B42  00CF               	movwf	(??_proc_line+0)+0
 14219  1B43  084F               	movf	(??_proc_line+0)+0,w
 14220  1B44  07DC               	addwf	(proc_line@line),f
 14221  1B45  2B46               	goto	l37703
 14222                           	
 14223  1B46                     l15127:	
 14224                           	line	162
 14225                           	
 14226  1B46                     l37703:	
 14227  1B46  085C               	movf	(proc_line@line),w
 14228  1B47  0086               	movwf	fsr1l
 14229  1B48  3001               	movlw 1	; select bank2/3
 14230  1B49  0087               	movwf fsr1h	
 14231                           	
 14232  1B4A  0801               	movf	indf1,w
 14233  1B4B  3A00               	xorlw	0&0ffh
 14234  1B4C  1903               	skipnz
 14235  1B4D  2B4F               	goto	u10821
 14236  1B4E  2B50               	goto	u10820
 14237  1B4F                     u10821:
 14238  1B4F  2B67               	goto	l37709
 14239  1B50                     u10820:
 14240                           	
 14241  1B50                     l37705:	
 14242  1B50  085C               	movf	(proc_line@line),w
 14243  1B51  0086               	movwf	fsr1l
 14244  1B52  3001               	movlw 1	; select bank2/3
 14245  1B53  0087               	movwf fsr1h	
 14246                           	
 14247  1B54  0801               	movf	indf1,w
 14248  1B55  3A20               	xorlw	020h&0ffh
 14249  1B56  1903               	skipnz
 14250  1B57  2B59               	goto	u10831
 14251  1B58  2B5A               	goto	u10830
 14252  1B59                     u10831:
 14253  1B59  2B67               	goto	l37709
 14254  1B5A                     u10830:
 14255                           	
 14256  1B5A                     l37707:	
 14257  1B5A  085C               	movf	(proc_line@line),w
 14258  1B5B  0086               	movwf	fsr1l
 14259  1B5C  3001               	movlw 1	; select bank2/3
 14260  1B5D  0087               	movwf fsr1h	
 14261                           	
 14262  1B5E  0801               	movf	indf1,w
 14263  1B5F  3A09               	xorlw	09h&0ffh
 14264  1B60  1D03               	skipz
 14265  1B61  2B63               	goto	u10841
 14266  1B62  2B64               	goto	u10840
 14267  1B63                     u10841:
 14268  1B63  2B41               	goto	l37701
 14269  1B64                     u10840:
 14270  1B64  2B67               	goto	l37709
 14271                           	
 14272  1B65                     l15130:	
 14273  1B65  2B67               	goto	l37709
 14274                           	
 14275  1B66                     l15131:	
 14276  1B66  2B67               	goto	l37709
 14277                           	line	164
 14278                           	
 14279  1B67                     l15121:	
 14280                           	line	148
 14281                           	
 14282  1B67                     l37709:	
 14283  1B67  085C               	movf	(proc_line@line),w
 14284  1B68  0086               	movwf	fsr1l
 14285  1B69  3001               	movlw 1	; select bank2/3
 14286  1B6A  0087               	movwf fsr1h	
 14287                           	
 14288  1B6B  0881               	movf	indf1,f
 14289  1B6C  1D03               	skipz
 14290  1B6D  2B6F               	goto	u10851
 14291  1B6E  2B70               	goto	u10850
 14292  1B6F                     u10851:
 14293  1B6F  2B14               	goto	l37691
 14294  1B70                     u10850:
 14295  1B70  2B71               	goto	l37711
 14296                           	
 14297  1B71                     l15132:	
 14298                           	line	166
 14299                           	
 14300  1B71                     l37711:	
 14301                           ;cmdline.c: 164: }
 14302                           ;cmdline.c: 166: index = cmd2index(argv[0]);
 14303  1B71  0851               	movf	(proc_line@argv),w
 14304  1B72  31AE  269F  319A   	fcall	_cmd2index
 14305  1B75  0020               	movlb 0	; select bank0
 14306  1B76  082D               	movf	(1+(?_cmd2index)),w
 14307  1B77  01D7               	clrf	(proc_line@index+1)
 14308  1B78  07D7               	addwf	(proc_line@index+1)
 14309  1B79  082C               	movf	(0+(?_cmd2index)),w
 14310  1B7A  01D6               	clrf	(proc_line@index)
 14311  1B7B  07D6               	addwf	(proc_line@index)
 14312                           
 14313                           	line	167
 14314                           	
 14315  1B7C                     l37713:	
 14316                           ;cmdline.c: 167: if (index >= 0) {
 14317  1B7C  1BD7               	btfsc	(proc_line@index+1),7
 14318  1B7D  2B7F               	goto	u10861
 14319  1B7E  2B80               	goto	u10860
 14320  1B7F                     u10861:
 14321  1B7F  2BE3               	goto	l37729
 14322  1B80                     u10860:
 14323  1B80  2BA6               	goto	l37725
 14324                           	line	168
 14325                           	
 14326  1B81                     l37715:	
 14327                           ;cmdline.c: 168: switch (commands[index].function(argc, argv)) {
 14328  1B81  2BA6               	goto	l37725
 14329                           	line	169
 14330                           ;cmdline.c: 169: case (0):
 14331                           	
 14332  1B82                     l15135:	
 14333                           	line	170
 14334                           ;cmdline.c: 170: break;
 14335  1B82  2BEF               	goto	l15142
 14336                           	line	171
 14337                           ;cmdline.c: 171: case (-1):
 14338                           	
 14339  1B83                     l15137:	
 14340                           	line	172
 14341                           	
 14342  1B83                     l37717:	
 14343                           ;cmdline.c: 172: printf("Syntax error\n");
 14344  1B83  30DB               	movlw	low(STR_101|8000h)
 14345  1B84  00AF               	movwf	(?_printf)
 14346  1B85  3087               	movlw	high(STR_101|8000h)
 14347  1B86  00B0               	movwf	((?_printf))+1
 14348  1B87  3194  24A0  319A   	fcall	_printf
 14349                           	line	173
 14350                           ;cmdline.c: 173: break;
 14351  1B8A  2BEF               	goto	l15142
 14352                           	line	174
 14353                           ;cmdline.c: 174: case (-2):
 14354                           	
 14355  1B8B                     l15138:	
 14356                           	line	175
 14357                           	
 14358  1B8B                     l37719:	
 14359                           ;cmdline.c: 175: printf("I/O error\n");
 14360  1B8B  3051               	movlw	low(STR_102|8000h)
 14361  1B8C  0020               	movlb 0	; select bank0
 14362  1B8D  00AF               	movwf	(?_printf)
 14363  1B8E  3088               	movlw	high(STR_102|8000h)
 14364  1B8F  00B0               	movwf	((?_printf))+1
 14365  1B90  3194  24A0  319A   	fcall	_printf
 14366                           	line	176
 14367                           ;cmdline.c: 176: break;
 14368  1B93  2BEF               	goto	l15142
 14369                           	line	177
 14370                           ;cmdline.c: 177: case (-3):
 14371                           	
 14372  1B94                     l15139:	
 14373                           	line	178
 14374                           	
 14375  1B94                     l37721:	
 14376                           ;cmdline.c: 178: printf("Parameter error\n");
 14377  1B94  30FA               	movlw	low(STR_103|8000h)
 14378  1B95  0020               	movlb 0	; select bank0
 14379  1B96  00AF               	movwf	(?_printf)
 14380  1B97  3086               	movlw	high(STR_103|8000h)
 14381  1B98  00B0               	movwf	((?_printf))+1
 14382  1B99  3194  24A0  319A   	fcall	_printf
 14383                           	line	179
 14384                           ;cmdline.c: 179: break;
 14385  1B9C  2BEF               	goto	l15142
 14386                           	line	180
 14387                           ;cmdline.c: 180: default:
 14388                           	
 14389  1B9D                     l15140:	
 14390                           	line	181
 14391                           	
 14392  1B9D                     l37723:	
 14393                           ;cmdline.c: 181: printf("Unknown error\n");
 14394  1B9D  309F               	movlw	low(STR_104|8000h)
 14395  1B9E  0020               	movlb 0	; select bank0
 14396  1B9F  00AF               	movwf	(?_printf)
 14397  1BA0  3087               	movlw	high(STR_104|8000h)
 14398  1BA1  00B0               	movwf	((?_printf))+1
 14399  1BA2  3194  24A0  319A   	fcall	_printf
 14400                           	line	182
 14401                           ;cmdline.c: 182: }
 14402  1BA5  2BEF               	goto	l15142
 14403                           	line	168
 14404                           	
 14405  1BA6                     l15134:	
 14406                           	
 14407  1BA6                     l37725:	
 14408  1BA6  3009               	movlw	(09h)
 14409  1BA7  0020               	movlb 0	; select bank0
 14410  1BA8  00CF               	movwf	(??_proc_line+0)+0
 14411  1BA9  084F               	movf	(??_proc_line+0)+0,w
 14412  1BAA  00A1               	movwf	(?___bmul)
 14413  1BAB  0856               	movf	(proc_line@index),w
 14414  1BAC  31A9  21DC  319A   	fcall	___bmul
 14415  1BAF  3E08               	addlw	08h
 14416  1BB0  3E16               	addlw	low(_commands|8000h)
 14417  1BB1  0084               	movwf	fsr0l
 14418  1BB2  3085               	movlw	high(_commands|8000h)
 14419  1BB3  1803               	skipnc
 14420  1BB4  3E01               	addlw	1
 14421  1BB5  0085               	movwf	fsr0h
 14422  1BB6  0800               	movf	indf0,w ;code access
 14423  1BB7  0020               	movlb 0	; select bank0
 14424  1BB8  00D0               	movwf	(??_proc_line+1)+0
 14425  1BB9  0850               	movf	(??_proc_line+1)+0,w
 14426  1BBA  00D5               	movwf	(_proc_line$30517)
 14427                           	
 14428  1BBB                     l37727:	
 14429  1BBB  0859               	movf	(proc_line@argc+1),w
 14430  1BBC  01C8               	clrf	(?_echo+1)
 14431  1BBD  07C8               	addwf	(?_echo+1)
 14432  1BBE  0858               	movf	(proc_line@argc),w
 14433  1BBF  01C7               	clrf	(?_echo)
 14434  1BC0  07C7               	addwf	(?_echo)
 14435                           
 14436  1BC1  3051               	movlw	(proc_line@argv)&0ffh
 14437  1BC2  00CF               	movwf	(??_proc_line+0)+0
 14438  1BC3  084F               	movf	(??_proc_line+0)+0,w
 14439  1BC4  00C9               	movwf	(0+?_echo+02h)
 14440  1BC5  0855               	movf	(_proc_line$30517),w
 14441  1BC6  3181  2100  319A   	fcall	fptable
 14442                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
 14443                           ; Switch size 1, requested type "space"
 14444                           ; Number of cases is 2, Range of values is 0 to 255
 14445                           ; switch strategies available:
 14446                           ; Name         Instructions Cycles
 14447                           ; simple_byte            7     4 (average)
 14448                           ; jumptable            260     6 (fixed)
 14449                           ; rangetable           260     6 (fixed)
 14450                           ; spacedrange          517     8 (fixed)
 14451                           ; locatedrange         256     3 (fixed)
 14452                           ;	Chosen strategy is simple_byte
 14453                           
 14454  1BC9  0020               	movlb 0	; select bank0
 14455  1BCA  0848               	movf (1+(?_echo)),w
 14456                           	opt asmopt_off
 14457  1BCB  3A00               	xorlw	0^0	; case 0
 14458  1BCC  1903               	skipnz
 14459  1BCD  2BD2               	goto	l38929
 14460  1BCE  3AFF               	xorlw	255^0	; case 255
 14461  1BCF  1903               	skipnz
 14462  1BD0  2BD7               	goto	l38931
 14463  1BD1  2B9D               	goto	l37723
 14464                           	opt asmopt_on
 14465                           	
 14466  1BD2                     l38929:	
 14467                           ; Switch size 1, requested type "space"
 14468                           ; Number of cases is 1, Range of values is 0 to 0
 14469                           ; switch strategies available:
 14470                           ; Name         Instructions Cycles
 14471                           ; simple_byte            4     3 (average)
 14472                           ; direct_byte            8     6 (fixed)
 14473                           ; jumptable            260     6 (fixed)
 14474                           ; rangetable             5     4 (fixed)
 14475                           ; spacedrange            7     6 (fixed)
 14476                           ; locatedrange           1     3 (fixed)
 14477                           ;	Chosen strategy is simple_byte
 14478                           
 14479  1BD2  0847               	movf (0+(?_echo)),w
 14480                           	opt asmopt_off
 14481  1BD3  3A00               	xorlw	0^0	; case 0
 14482  1BD4  1903               	skipnz
 14483  1BD5  2BEF               	goto	l15142
 14484  1BD6  2B9D               	goto	l37723
 14485                           	opt asmopt_on
 14486                           	
 14487  1BD7                     l38931:	
 14488                           ; Switch size 1, requested type "space"
 14489                           ; Number of cases is 3, Range of values is 253 to 255
 14490                           ; switch strategies available:
 14491                           ; Name         Instructions Cycles
 14492                           ; simple_byte           10     6 (average)
 14493                           ; direct_byte           11     5 (fixed)
 14494                           ; jumptable            263     9 (fixed)
 14495                           ;	Chosen strategy is simple_byte
 14496                           
 14497  1BD7  0847               	movf (0+(?_echo)),w
 14498                           	opt asmopt_off
 14499  1BD8  3AFD               	xorlw	253^0	; case 253
 14500  1BD9  1903               	skipnz
 14501  1BDA  2B94               	goto	l37721
 14502  1BDB  3A03               	xorlw	254^253	; case 254
 14503  1BDC  1903               	skipnz
 14504  1BDD  2B8B               	goto	l37719
 14505  1BDE  3A01               	xorlw	255^254	; case 255
 14506  1BDF  1903               	skipnz
 14507  1BE0  2B83               	goto	l37717
 14508  1BE1  2B9D               	goto	l37723
 14509                           	opt asmopt_on
 14510                           
 14511                           	line	182
 14512                           	
 14513  1BE2                     l15136:	
 14514                           	line	183
 14515                           ;cmdline.c: 183: } else
 14516  1BE2  2BEF               	goto	l15142
 14517                           	
 14518  1BE3                     l15133:	
 14519                           	line	184
 14520                           	
 14521  1BE3                     l37729:	
 14522                           ;cmdline.c: 184: printf("Unknown command '%s'\n", argv[0]);
 14523  1BE3  3052               	movlw	low(STR_105|8000h)
 14524  1BE4  00AF               	movwf	(?_printf)
 14525  1BE5  3085               	movlw	high(STR_105|8000h)
 14526  1BE6  00B0               	movwf	((?_printf))+1
 14527  1BE7  0851               	movf	(proc_line@argv),w
 14528  1BE8  00B1               	movwf	(0+?_printf+02h)
 14529  1BE9  3001               	movlw	(0x2/2)
 14530  1BEA  00B2               	movwf	(1+?_printf+02h)
 14531  1BEB  3194  24A0  319A   	fcall	_printf
 14532  1BEE  2BEF               	goto	l15142
 14533                           	
 14534  1BEF                     l15141:	
 14535                           	line	185
 14536                           	
 14537  1BEF                     l15142:	
 14538  1BEF  0008               	return
 14539                           	opt stack 0
 14540                           GLOBAL	__end_of_proc_line
 14541  1BF0                     	__end_of_proc_line:
 14542 ;; =============== function _proc_line ends ============
 14543                           
 14544                           	signat	_proc_line,4216
 14545                           	global	_update_display
 14546                           psect	text3240,local,class=CODE,delta=2
 14547                           global __ptext3240
 14548  098C                     __ptext3240:
 14549                           
 14550 ;; *************** function _update_display *****************
 14551 ;; Defined at:
 14552 ;;		line 450 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14553 ;; Parameters:    Size  Location     Type
 14554 ;;		None
 14555 ;; Auto vars:     Size  Location     Type
 14556 ;;		None
 14557 ;; Return value:  Size  Location     Type
 14558 ;;		None               void
 14559 ;; Registers used:
 14560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14561 ;; Tracked objects:
 14562 ;;		On entry : 0/0
 14563 ;;		On exit  : 0/0
 14564 ;;		Unchanged: 0/0
 14565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14569 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14570 ;;Total ram usage:        1 bytes
 14571 ;; Hardware stack levels used:    1
 14572 ;; Hardware stack levels required when called:    5
 14573 ;; This function calls:
 14574 ;;		_set_LED_Error
 14575 ;;		_set_LED_Cartridge
 14576 ;;		_set_LED
 14577 ;;		_set_LED_Cat
 14578 ;;		_set_LED_Locked
 14579 ;; This function is called by:
 14580 ;;		_userinterface_init
 14581 ;;		_userinterface_work
 14582 ;;		_catsensor_event
 14583 ;;		_process_button
 14584 ;; This function uses a non-reentrant model
 14585 ;;
 14586                           psect	text3240
 14587                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14588                           	line	450
 14589                           	global	__size_of_update_display
 14590  01B1                     	__size_of_update_display	equ	__end_of_update_display-_update_display
 14591                           	
 14592  098C                     _update_display:	
 14593                           	opt	stack 9
 14594                           ; Regs used in _update_display: [wreg-status,0+pclath+cstack]
 14595                           	line	451
 14596                           	
 14597  098C                     l37595:	
 14598                           ;userinterface.c: 451: switch (panel_mode) {
 14599  098C  2B0D               	goto	l37659
 14600                           	line	452
 14601                           ;userinterface.c: 452: default:
 14602                           	
 14603  098D                     l8727:	
 14604                           	line	453
 14605                           ;userinterface.c: 453: panel_mode = 0;
 14606  098D  01D9               	clrf	(_panel_mode)^080h
 14607  098E  298F               	goto	l37597
 14608                           	line	454
 14609                           ;userinterface.c: 454: case 0:
 14610                           	
 14611  098F                     l8728:	
 14612                           	line	455
 14613                           	
 14614  098F                     l37597:	
 14615                           ;userinterface.c: 455: set_LED_Error(0x00, 0);
 14616  098F  0020               	movlb 0	; select bank0
 14617  0990  01AE               	clrf	(?_set_LED_Error)
 14618  0991  3000               	movlw	(0)
 14619  0992  31A8  20A1  3189   	fcall	_set_LED_Error
 14620                           	line	456
 14621                           	
 14622  0995                     l37599:	
 14623                           ;userinterface.c: 456: if (cart_level >= 10)
 14624  0995  300A               	movlw	(0Ah)
 14625  0996  0020               	movlb 0	; select bank0
 14626  0997  026E               	subwf	(_cart_level),w
 14627  0998  1C03               	skipc
 14628  0999  299B               	goto	u10671
 14629  099A  299C               	goto	u10670
 14630  099B                     u10671:
 14631  099B  29A2               	goto	l37603
 14632  099C                     u10670:
 14633                           	line	457
 14634                           	
 14635  099C                     l37601:	
 14636                           ;userinterface.c: 457: set_LED_Cartridge(0x00, 0);
 14637  099C  01AE               	clrf	(?_set_LED_Cartridge)
 14638  099D  3000               	movlw	(0)
 14639  099E  31A8  20B0  3189   	fcall	_set_LED_Cartridge
 14640  09A1  2A64               	goto	l37629
 14641                           	line	458
 14642                           	
 14643  09A2                     l8729:	
 14644                           	line	459
 14645                           	
 14646  09A2                     l37603:	
 14647                           ;userinterface.c: 458: else
 14648                           ;userinterface.c: 459: set_LED_Cartridge(0x55, 1);
 14649  09A2  0020               	movlb 0	; select bank0
 14650  09A3  01AE               	clrf	(?_set_LED_Cartridge)
 14651  09A4  1403               	bsf	status,0
 14652  09A5  0DAE               	rlf	(?_set_LED_Cartridge),f
 14653  09A6  3055               	movlw	(055h)
 14654  09A7  31A8  20B0  3189   	fcall	_set_LED_Cartridge
 14655  09AA  2A64               	goto	l37629
 14656                           	
 14657  09AB                     l8730:	
 14658                           	line	460
 14659                           ;userinterface.c: 460: switch (auto_mode) {
 14660  09AB  2A64               	goto	l37629
 14661                           	line	461
 14662                           ;userinterface.c: 461: default:
 14663                           	
 14664  09AC                     l8732:	
 14665                           	line	462
 14666                           ;userinterface.c: 462: auto_mode = 0;
 14667  09AC  01E2               	clrf	(_auto_mode)
 14668  09AD  29B2               	goto	l37605
 14669                           	line	463
 14670                           ;userinterface.c: 463: case 0:
 14671                           	
 14672  09AE                     l8733:	
 14673  09AE  29B2               	goto	l37605
 14674                           	line	464
 14675                           	
 14676  09AF                     l8734:	
 14677  09AF  29B2               	goto	l37605
 14678                           	line	465
 14679                           	
 14680  09B0                     l8735:	
 14681  09B0  29B2               	goto	l37605
 14682                           	line	466
 14683                           	
 14684  09B1                     l8736:	
 14685  09B1  29B2               	goto	l37605
 14686                           	line	467
 14687                           	
 14688  09B2                     l8737:	
 14689                           	line	468
 14690                           	
 14691  09B2                     l37605:	
 14692                           ;userinterface.c: 464: case 1:
 14693                           ;userinterface.c: 465: case 2:
 14694                           ;userinterface.c: 466: case 3:
 14695                           ;userinterface.c: 467: case 4:
 14696                           ;userinterface.c: 468: set_LED(1, auto_mode == 1);
 14697  09B2  0862               	movf	(_auto_mode),w
 14698  09B3  3A01               	xorlw	01h&0ffh
 14699  09B4  3000               	movlw	0
 14700  09B5  1903               	skipnz
 14701  09B6  3001               	movlw	1
 14702  09B7  00B2               	movwf	(??_update_display+0)+0
 14703  09B8  0832               	movf	(??_update_display+0)+0,w
 14704  09B9  00A1               	movwf	(?_set_LED)
 14705  09BA  3001               	movlw	(01h)
 14706  09BB  31AE  2651  3189   	fcall	_set_LED
 14707                           	line	469
 14708                           ;userinterface.c: 469: set_LED(2, auto_mode == 2);
 14709  09BE  0020               	movlb 0	; select bank0
 14710  09BF  0862               	movf	(_auto_mode),w
 14711  09C0  3A02               	xorlw	02h&0ffh
 14712  09C1  3000               	movlw	0
 14713  09C2  1903               	skipnz
 14714  09C3  3001               	movlw	1
 14715  09C4  00B2               	movwf	(??_update_display+0)+0
 14716  09C5  0832               	movf	(??_update_display+0)+0,w
 14717  09C6  00A1               	movwf	(?_set_LED)
 14718  09C7  3002               	movlw	(02h)
 14719  09C8  31AE  2651  3189   	fcall	_set_LED
 14720                           	line	470
 14721                           ;userinterface.c: 470: set_LED(3, auto_mode == 3);
 14722  09CB  0020               	movlb 0	; select bank0
 14723  09CC  0862               	movf	(_auto_mode),w
 14724  09CD  3A03               	xorlw	03h&0ffh
 14725  09CE  3000               	movlw	0
 14726  09CF  1903               	skipnz
 14727  09D0  3001               	movlw	1
 14728  09D1  00B2               	movwf	(??_update_display+0)+0
 14729  09D2  0832               	movf	(??_update_display+0)+0,w
 14730  09D3  00A1               	movwf	(?_set_LED)
 14731  09D4  3003               	movlw	(03h)
 14732  09D5  31AE  2651  3189   	fcall	_set_LED
 14733                           	line	471
 14734                           ;userinterface.c: 471: set_LED(4, auto_mode == 4);
 14735  09D8  0020               	movlb 0	; select bank0
 14736  09D9  0862               	movf	(_auto_mode),w
 14737  09DA  3A04               	xorlw	04h&0ffh
 14738  09DB  3000               	movlw	0
 14739  09DC  1903               	skipnz
 14740  09DD  3001               	movlw	1
 14741  09DE  00B2               	movwf	(??_update_display+0)+0
 14742  09DF  0832               	movf	(??_update_display+0)+0,w
 14743  09E0  00A1               	movwf	(?_set_LED)
 14744  09E1  3004               	movlw	(04h)
 14745  09E2  31AE  2651  3189   	fcall	_set_LED
 14746                           	line	472
 14747                           	
 14748  09E5                     l37607:	
 14749                           ;userinterface.c: 472: set_LED_Cat(0x00, 0);
 14750  09E5  0020               	movlb 0	; select bank0
 14751  09E6  01AE               	clrf	(?_set_LED_Cat)
 14752  09E7  3000               	movlw	(0)
 14753  09E8  31A8  20BF  3189   	fcall	_set_LED_Cat
 14754                           	line	473
 14755                           ;userinterface.c: 473: break;
 14756  09EB  2B19               	goto	l8750
 14757                           	line	474
 14758                           ;userinterface.c: 474: case 5:
 14759                           	
 14760  09EC                     l8739:	
 14761  09EC  29F0               	goto	l37609
 14762                           	line	475
 14763                           	
 14764  09ED                     l8740:	
 14765  09ED  29F0               	goto	l37609
 14766                           	line	476
 14767                           	
 14768  09EE                     l8741:	
 14769  09EE  29F0               	goto	l37609
 14770                           	line	477
 14771                           	
 14772  09EF                     l8742:	
 14773  09EF  29F0               	goto	l37609
 14774                           	line	478
 14775                           	
 14776  09F0                     l8743:	
 14777                           	line	479
 14778                           	
 14779  09F0                     l37609:	
 14780                           ;userinterface.c: 475: case 6:
 14781                           ;userinterface.c: 476: case 7:
 14782                           ;userinterface.c: 477: case 8:
 14783                           ;userinterface.c: 478: case 9:
 14784                           ;userinterface.c: 479: set_LED(1, auto_mode != 9);
 14785  09F0  0020               	movlb 0	; select bank0
 14786  09F1  0862               	movf	(_auto_mode),w
 14787  09F2  3A09               	xorlw	09h&0ffh
 14788  09F3  3000               	movlw	0
 14789  09F4  1D03               	skipz
 14790  09F5  3001               	movlw	1
 14791  09F6  00B2               	movwf	(??_update_display+0)+0
 14792  09F7  0832               	movf	(??_update_display+0)+0,w
 14793  09F8  00A1               	movwf	(?_set_LED)
 14794  09F9  3001               	movlw	(01h)
 14795  09FA  31AE  2651  3189   	fcall	_set_LED
 14796                           	line	480
 14797                           ;userinterface.c: 480: set_LED(2, auto_mode == 6);
 14798  09FD  0020               	movlb 0	; select bank0
 14799  09FE  0862               	movf	(_auto_mode),w
 14800  09FF  3A06               	xorlw	06h&0ffh
 14801  0A00  3000               	movlw	0
 14802  0A01  1903               	skipnz
 14803  0A02  3001               	movlw	1
 14804  0A03  00B2               	movwf	(??_update_display+0)+0
 14805  0A04  0832               	movf	(??_update_display+0)+0,w
 14806  0A05  00A1               	movwf	(?_set_LED)
 14807  0A06  3002               	movlw	(02h)
 14808  0A07  31AE  2651  3189   	fcall	_set_LED
 14809                           	line	481
 14810                           ;userinterface.c: 481: set_LED(3, auto_mode == 7);
 14811  0A0A  0020               	movlb 0	; select bank0
 14812  0A0B  0862               	movf	(_auto_mode),w
 14813  0A0C  3A07               	xorlw	07h&0ffh
 14814  0A0D  3000               	movlw	0
 14815  0A0E  1903               	skipnz
 14816  0A0F  3001               	movlw	1
 14817  0A10  00B2               	movwf	(??_update_display+0)+0
 14818  0A11  0832               	movf	(??_update_display+0)+0,w
 14819  0A12  00A1               	movwf	(?_set_LED)
 14820  0A13  3003               	movlw	(03h)
 14821  0A14  31AE  2651  3189   	fcall	_set_LED
 14822                           	line	482
 14823                           ;userinterface.c: 482: set_LED(4, auto_mode == 8);
 14824  0A17  0020               	movlb 0	; select bank0
 14825  0A18  0862               	movf	(_auto_mode),w
 14826  0A19  3A08               	xorlw	08h&0ffh
 14827  0A1A  3000               	movlw	0
 14828  0A1B  1903               	skipnz
 14829  0A1C  3001               	movlw	1
 14830  0A1D  00B2               	movwf	(??_update_display+0)+0
 14831  0A1E  0832               	movf	(??_update_display+0)+0,w
 14832  0A1F  00A1               	movwf	(?_set_LED)
 14833  0A20  3004               	movlw	(04h)
 14834  0A21  31AE  2651  3189   	fcall	_set_LED
 14835                           	line	483
 14836                           	
 14837  0A24                     l37611:	
 14838                           ;userinterface.c: 483: if ((cat_present) && (state != 2))
 14839  0A24  1CF0               	btfss	(_cat_present/8),(_cat_present)&7
 14840  0A25  2A27               	goto	u10681
 14841  0A26  2A28               	goto	u10680
 14842  0A27                     u10681:
 14843  0A27  2A37               	goto	l8744
 14844  0A28                     u10680:
 14845                           	
 14846  0A28                     l37613:	
 14847  0A28  0020               	movlb 0	; select bank0
 14848  0A29  0866               	movf	(_state),w
 14849  0A2A  3A02               	xorlw	02h&0ffh
 14850  0A2B  1903               	skipnz
 14851  0A2C  2A2E               	goto	u10691
 14852  0A2D  2A2F               	goto	u10690
 14853  0A2E                     u10691:
 14854  0A2E  2A37               	goto	l8744
 14855  0A2F                     u10690:
 14856                           	line	484
 14857                           	
 14858  0A2F                     l37615:	
 14859                           ;userinterface.c: 484: set_LED_Cat(0x55, 1);
 14860  0A2F  01AE               	clrf	(?_set_LED_Cat)
 14861  0A30  1403               	bsf	status,0
 14862  0A31  0DAE               	rlf	(?_set_LED_Cat),f
 14863  0A32  3055               	movlw	(055h)
 14864  0A33  31A8  20BF  3189   	fcall	_set_LED_Cat
 14865  0A36  2B19               	goto	l8750
 14866                           	line	485
 14867                           	
 14868  0A37                     l8744:	
 14869                           ;userinterface.c: 485: else if ((cat_detected) && (state != 2))
 14870  0A37  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 14871  0A38  2A3A               	goto	u10701
 14872  0A39  2A3B               	goto	u10700
 14873  0A3A                     u10701:
 14874  0A3A  2A58               	goto	l37625
 14875  0A3B                     u10700:
 14876                           	
 14877  0A3B                     l37617:	
 14878  0A3B  0020               	movlb 0	; select bank0
 14879  0A3C  0866               	movf	(_state),w
 14880  0A3D  3A02               	xorlw	02h&0ffh
 14881  0A3E  1903               	skipnz
 14882  0A3F  2A41               	goto	u10711
 14883  0A40  2A42               	goto	u10710
 14884  0A41                     u10711:
 14885  0A41  2A58               	goto	l37625
 14886  0A42                     u10710:
 14887                           	line	486
 14888                           	
 14889  0A42                     l37619:	
 14890                           ;userinterface.c: 486: if (full_wash)
 14891  0A42  1D71               	btfss	(_full_wash/8),(_full_wash)&7
 14892  0A43  2A45               	goto	u10721
 14893  0A44  2A46               	goto	u10720
 14894  0A45                     u10721:
 14895  0A45  2A4E               	goto	l37623
 14896  0A46                     u10720:
 14897                           	line	487
 14898                           	
 14899  0A46                     l37621:	
 14900                           ;userinterface.c: 487: set_LED_Cat(0xFA, 1);
 14901  0A46  01AE               	clrf	(?_set_LED_Cat)
 14902  0A47  1403               	bsf	status,0
 14903  0A48  0DAE               	rlf	(?_set_LED_Cat),f
 14904  0A49  30FA               	movlw	(0FAh)
 14905  0A4A  31A8  20BF  3189   	fcall	_set_LED_Cat
 14906  0A4D  2B19               	goto	l8750
 14907                           	line	488
 14908                           	
 14909  0A4E                     l8747:	
 14910                           	line	489
 14911                           	
 14912  0A4E                     l37623:	
 14913                           ;userinterface.c: 488: else
 14914                           ;userinterface.c: 489: set_LED_Cat(0xFE, 1);
 14915  0A4E  0020               	movlb 0	; select bank0
 14916  0A4F  01AE               	clrf	(?_set_LED_Cat)
 14917  0A50  1403               	bsf	status,0
 14918  0A51  0DAE               	rlf	(?_set_LED_Cat),f
 14919  0A52  30FE               	movlw	(0FEh)
 14920  0A53  31A8  20BF  3189   	fcall	_set_LED_Cat
 14921  0A56  2B19               	goto	l8750
 14922                           	
 14923  0A57                     l8748:	
 14924  0A57  2B19               	goto	l8750
 14925                           	line	490
 14926                           	
 14927  0A58                     l8746:	
 14928                           	line	491
 14929                           	
 14930  0A58                     l37625:	
 14931                           ;userinterface.c: 490: else
 14932                           ;userinterface.c: 491: set_LED_Cat(0xFF, 1);
 14933  0A58  0020               	movlb 0	; select bank0
 14934  0A59  01AE               	clrf	(?_set_LED_Cat)
 14935  0A5A  1403               	bsf	status,0
 14936  0A5B  0DAE               	rlf	(?_set_LED_Cat),f
 14937  0A5C  30FF               	movlw	(0FFh)
 14938  0A5D  31A8  20BF  3189   	fcall	_set_LED_Cat
 14939  0A60  2B19               	goto	l8750
 14940                           	
 14941  0A61                     l8749:	
 14942  0A61  2B19               	goto	l8750
 14943                           	
 14944  0A62                     l8745:	
 14945                           	line	492
 14946                           ;userinterface.c: 492: break;
 14947  0A62  2B19               	goto	l8750
 14948                           	line	493
 14949                           	
 14950  0A63                     l37627:	
 14951                           ;userinterface.c: 493: }
 14952  0A63  2B19               	goto	l8750
 14953                           	line	460
 14954                           	
 14955  0A64                     l8731:	
 14956                           	
 14957  0A64                     l37629:	
 14958  0A64  0020               	movlb 0	; select bank0
 14959  0A65  0862               	movf	(_auto_mode),w
 14960                           	; Switch size 1, requested type "space"
 14961                           ; Number of cases is 10, Range of values is 0 to 9
 14962                           ; switch strategies available:
 14963                           ; Name         Instructions Cycles
 14964                           ; direct_byte           26     6 (fixed)
 14965                           ; simple_byte           31    16 (average)
 14966                           ; jumptable            260     6 (fixed)
 14967                           ; rangetable            14     4 (fixed)
 14968                           ; spacedrange           25     6 (fixed)
 14969                           ; locatedrange          10     3 (fixed)
 14970                           ;	Chosen strategy is direct_byte
 14971                           
 14972  0A66  0084               	movwf fsr0l
 14973  0A67  300A               	movlw	10
 14974  0A68  0204               	subwf	fsr0l,w
 14975  0A69  1803               skipnc
 14976  0A6A  29AC               goto l8732
 14977  0A6B  31A8               movlp high(S38933)
 14978  0A6C  3504               	lslf fsr0l,w
 14979  0A6D  3E1E               	addlw low(S38933)
 14980  0A6E  0082               	movwf pc
 14981                           psect	swtext3,local,class=CONST,delta=2
 14982                           global __pswtext3
 14983  281E                     __pswtext3:
 14984  281E                     S38933:
 14985  281E  3189  29B2         	ljmp	l37605
 14986  2820  3189  29B2         	ljmp	l37605
 14987  2822  3189  29B2         	ljmp	l37605
 14988  2824  3189  29B2         	ljmp	l37605
 14989  2826  3189  29B2         	ljmp	l37605
 14990  2828  3189  29F0         	ljmp	l37609
 14991  282A  3189  29F0         	ljmp	l37609
 14992  282C  3189  29F0         	ljmp	l37609
 14993  282E  3189  29F0         	ljmp	l37609
 14994  2830  3189  29F0         	ljmp	l37609
 14995                           psect	text3240
 14996                           
 14997                           	line	493
 14998                           	
 14999  0A6F                     l8738:	
 15000                           	line	494
 15001                           ;userinterface.c: 494: break;
 15002  0A6F  2B19               	goto	l8750
 15003                           	line	495
 15004                           ;userinterface.c: 495: case 1:
 15005                           	
 15006  0A70                     l8751:	
 15007                           	line	496
 15008                           	
 15009  0A70                     l37631:	
 15010                           ;userinterface.c: 496: set_LED_Error(0x00, 0);
 15011  0A70  0020               	movlb 0	; select bank0
 15012  0A71  01AE               	clrf	(?_set_LED_Error)
 15013  0A72  3000               	movlw	(0)
 15014  0A73  31A8  20A1  3189   	fcall	_set_LED_Error
 15015                           	line	497
 15016                           ;userinterface.c: 497: set_LED_Cartridge(0xFF, 1);
 15017  0A76  0020               	movlb 0	; select bank0
 15018  0A77  01AE               	clrf	(?_set_LED_Cartridge)
 15019  0A78  1403               	bsf	status,0
 15020  0A79  0DAE               	rlf	(?_set_LED_Cartridge),f
 15021  0A7A  30FF               	movlw	(0FFh)
 15022  0A7B  31A8  20B0  3189   	fcall	_set_LED_Cartridge
 15023                           	line	498
 15024                           	
 15025  0A7E                     l37633:	
 15026                           ;userinterface.c: 498: set_LED(1, cart_level >= 10);
 15027  0A7E  300A               	movlw	(0Ah)
 15028  0A7F  0020               	movlb 0	; select bank0
 15029  0A80  026E               	subwf	(_cart_level),w
 15030  0A81  3000               	movlw	0
 15031  0A82  1803               	skipnc
 15032  0A83  3001               	movlw	1
 15033  0A84  00B2               	movwf	(??_update_display+0)+0
 15034  0A85  0832               	movf	(??_update_display+0)+0,w
 15035  0A86  00A1               	movwf	(?_set_LED)
 15036  0A87  3001               	movlw	(01h)
 15037  0A88  31AE  2651  3189   	fcall	_set_LED
 15038                           	line	499
 15039                           	
 15040  0A8B                     l37635:	
 15041                           ;userinterface.c: 499: set_LED(2, cart_level >= 25);
 15042  0A8B  3019               	movlw	(019h)
 15043  0A8C  0020               	movlb 0	; select bank0
 15044  0A8D  026E               	subwf	(_cart_level),w
 15045  0A8E  3000               	movlw	0
 15046  0A8F  1803               	skipnc
 15047  0A90  3001               	movlw	1
 15048  0A91  00B2               	movwf	(??_update_display+0)+0
 15049  0A92  0832               	movf	(??_update_display+0)+0,w
 15050  0A93  00A1               	movwf	(?_set_LED)
 15051  0A94  3002               	movlw	(02h)
 15052  0A95  31AE  2651  3189   	fcall	_set_LED
 15053                           	line	500
 15054                           	
 15055  0A98                     l37637:	
 15056                           ;userinterface.c: 500: set_LED(3, cart_level >= 50);
 15057  0A98  3032               	movlw	(032h)
 15058  0A99  0020               	movlb 0	; select bank0
 15059  0A9A  026E               	subwf	(_cart_level),w
 15060  0A9B  3000               	movlw	0
 15061  0A9C  1803               	skipnc
 15062  0A9D  3001               	movlw	1
 15063  0A9E  00B2               	movwf	(??_update_display+0)+0
 15064  0A9F  0832               	movf	(??_update_display+0)+0,w
 15065  0AA0  00A1               	movwf	(?_set_LED)
 15066  0AA1  3003               	movlw	(03h)
 15067  0AA2  31AE  2651  3189   	fcall	_set_LED
 15068                           	line	501
 15069                           	
 15070  0AA5                     l37639:	
 15071                           ;userinterface.c: 501: set_LED(4, cart_level >= 75);
 15072  0AA5  304B               	movlw	(04Bh)
 15073  0AA6  0020               	movlb 0	; select bank0
 15074  0AA7  026E               	subwf	(_cart_level),w
 15075  0AA8  3000               	movlw	0
 15076  0AA9  1803               	skipnc
 15077  0AAA  3001               	movlw	1
 15078  0AAB  00B2               	movwf	(??_update_display+0)+0
 15079  0AAC  0832               	movf	(??_update_display+0)+0,w
 15080  0AAD  00A1               	movwf	(?_set_LED)
 15081  0AAE  3004               	movlw	(04h)
 15082  0AAF  31AE  2651  3189   	fcall	_set_LED
 15083                           	line	502
 15084                           	
 15085  0AB2                     l37641:	
 15086                           ;userinterface.c: 502: if (cart_level >= 100)
 15087  0AB2  3064               	movlw	(064h)
 15088  0AB3  0020               	movlb 0	; select bank0
 15089  0AB4  026E               	subwf	(_cart_level),w
 15090  0AB5  1C03               	skipc
 15091  0AB6  2AB8               	goto	u10731
 15092  0AB7  2AB9               	goto	u10730
 15093  0AB8                     u10731:
 15094  0AB8  2AC1               	goto	l37645
 15095  0AB9                     u10730:
 15096                           	line	503
 15097                           	
 15098  0AB9                     l37643:	
 15099                           ;userinterface.c: 503: set_LED_Cat(0xFF, 1);
 15100  0AB9  01AE               	clrf	(?_set_LED_Cat)
 15101  0ABA  1403               	bsf	status,0
 15102  0ABB  0DAE               	rlf	(?_set_LED_Cat),f
 15103  0ABC  30FF               	movlw	(0FFh)
 15104  0ABD  31A8  20BF  3189   	fcall	_set_LED_Cat
 15105  0AC0  2B19               	goto	l8750
 15106                           	line	504
 15107                           	
 15108  0AC1                     l8752:	
 15109                           	line	505
 15110                           	
 15111  0AC1                     l37645:	
 15112                           ;userinterface.c: 504: else
 15113                           ;userinterface.c: 505: set_LED_Cat(0x00, 0);
 15114  0AC1  0020               	movlb 0	; select bank0
 15115  0AC2  01AE               	clrf	(?_set_LED_Cat)
 15116  0AC3  3000               	movlw	(0)
 15117  0AC4  31A8  20BF  3189   	fcall	_set_LED_Cat
 15118  0AC7  2B19               	goto	l8750
 15119                           	
 15120  0AC8                     l8753:	
 15121                           	line	506
 15122                           ;userinterface.c: 506: break;
 15123  0AC8  2B19               	goto	l8750
 15124                           	line	507
 15125                           ;userinterface.c: 507: case 2:
 15126                           	
 15127  0AC9                     l8754:	
 15128                           	line	508
 15129                           	
 15130  0AC9                     l37647:	
 15131                           ;userinterface.c: 508: set_LED_Error(0x55, 1);
 15132  0AC9  0020               	movlb 0	; select bank0
 15133  0ACA  01AE               	clrf	(?_set_LED_Error)
 15134  0ACB  1403               	bsf	status,0
 15135  0ACC  0DAE               	rlf	(?_set_LED_Error),f
 15136  0ACD  3055               	movlw	(055h)
 15137  0ACE  31A8  20A1  3189   	fcall	_set_LED_Error
 15138                           	line	509
 15139                           ;userinterface.c: 509: set_LED_Cartridge(0x00, 0);
 15140  0AD1  0020               	movlb 0	; select bank0
 15141  0AD2  01AE               	clrf	(?_set_LED_Cartridge)
 15142  0AD3  3000               	movlw	(0)
 15143  0AD4  31A8  20B0  3189   	fcall	_set_LED_Cartridge
 15144                           	line	510
 15145                           	
 15146  0AD7                     l37649:	
 15147                           ;userinterface.c: 510: set_LED(1, error_nr == 1);
 15148  0AD7  0020               	movlb 0	; select bank0
 15149  0AD8  0863               	movf	(_error_nr),w
 15150  0AD9  3A01               	xorlw	01h&0ffh
 15151  0ADA  3000               	movlw	0
 15152  0ADB  1903               	skipnz
 15153  0ADC  3001               	movlw	1
 15154  0ADD  00B2               	movwf	(??_update_display+0)+0
 15155  0ADE  0832               	movf	(??_update_display+0)+0,w
 15156  0ADF  00A1               	movwf	(?_set_LED)
 15157  0AE0  3001               	movlw	(01h)
 15158  0AE1  31AE  2651  3189   	fcall	_set_LED
 15159                           	line	511
 15160                           	
 15161  0AE4                     l37651:	
 15162                           ;userinterface.c: 511: set_LED(2, error_nr == 2);
 15163  0AE4  0020               	movlb 0	; select bank0
 15164  0AE5  0863               	movf	(_error_nr),w
 15165  0AE6  3A02               	xorlw	02h&0ffh
 15166  0AE7  3000               	movlw	0
 15167  0AE8  1903               	skipnz
 15168  0AE9  3001               	movlw	1
 15169  0AEA  00B2               	movwf	(??_update_display+0)+0
 15170  0AEB  0832               	movf	(??_update_display+0)+0,w
 15171  0AEC  00A1               	movwf	(?_set_LED)
 15172  0AED  3002               	movlw	(02h)
 15173  0AEE  31AE  2651  3189   	fcall	_set_LED
 15174                           	line	512
 15175                           	
 15176  0AF1                     l37653:	
 15177                           ;userinterface.c: 512: set_LED(3, error_nr == 3);
 15178  0AF1  0020               	movlb 0	; select bank0
 15179  0AF2  0863               	movf	(_error_nr),w
 15180  0AF3  3A03               	xorlw	03h&0ffh
 15181  0AF4  3000               	movlw	0
 15182  0AF5  1903               	skipnz
 15183  0AF6  3001               	movlw	1
 15184  0AF7  00B2               	movwf	(??_update_display+0)+0
 15185  0AF8  0832               	movf	(??_update_display+0)+0,w
 15186  0AF9  00A1               	movwf	(?_set_LED)
 15187  0AFA  3003               	movlw	(03h)
 15188  0AFB  31AE  2651  3189   	fcall	_set_LED
 15189                           	line	513
 15190                           	
 15191  0AFE                     l37655:	
 15192                           ;userinterface.c: 513: set_LED(4, error_nr == 4);
 15193  0AFE  0020               	movlb 0	; select bank0
 15194  0AFF  0863               	movf	(_error_nr),w
 15195  0B00  3A04               	xorlw	04h&0ffh
 15196  0B01  3000               	movlw	0
 15197  0B02  1903               	skipnz
 15198  0B03  3001               	movlw	1
 15199  0B04  00B2               	movwf	(??_update_display+0)+0
 15200  0B05  0832               	movf	(??_update_display+0)+0,w
 15201  0B06  00A1               	movwf	(?_set_LED)
 15202  0B07  3004               	movlw	(04h)
 15203  0B08  31AE  2651  3189   	fcall	_set_LED
 15204                           	line	514
 15205                           ;userinterface.c: 514: break;
 15206  0B0B  2B19               	goto	l8750
 15207                           	line	515
 15208                           	
 15209  0B0C                     l37657:	
 15210                           ;userinterface.c: 515: }
 15211  0B0C  2B19               	goto	l8750
 15212                           	line	451
 15213                           	
 15214  0B0D                     l8726:	
 15215                           	
 15216  0B0D                     l37659:	
 15217  0B0D  0021               	movlb 1	; select bank1
 15218  0B0E  0859               	movf	(_panel_mode)^080h,w
 15219                           	; Switch size 1, requested type "space"
 15220                           ; Number of cases is 3, Range of values is 0 to 2
 15221                           ; switch strategies available:
 15222                           ; Name         Instructions Cycles
 15223                           ; simple_byte           10     6 (average)
 15224                           ; direct_byte           12     6 (fixed)
 15225                           ; jumptable            260     6 (fixed)
 15226                           ; rangetable             7     4 (fixed)
 15227                           ; spacedrange           11     6 (fixed)
 15228                           ; locatedrange           3     3 (fixed)
 15229                           ;	Chosen strategy is simple_byte
 15230                           
 15231                           	opt asmopt_off
 15232  0B0F  3A00               	xorlw	0^0	; case 0
 15233  0B10  1903               	skipnz
 15234  0B11  298F               	goto	l37597
 15235  0B12  3A01               	xorlw	1^0	; case 1
 15236  0B13  1903               	skipnz
 15237  0B14  2A70               	goto	l37631
 15238  0B15  3A03               	xorlw	2^1	; case 2
 15239  0B16  1903               	skipnz
 15240  0B17  2AC9               	goto	l37647
 15241  0B18  298D               	goto	l8727
 15242                           	opt asmopt_on
 15243                           
 15244                           	line	515
 15245                           	
 15246  0B19                     l8750:	
 15247                           	line	518
 15248                           ;userinterface.c: 518: if (locked) {
 15249  0B19  1DF1               	btfss	(_locked/8),(_locked)&7
 15250  0B1A  2B1C               	goto	u10741
 15251  0B1B  2B1D               	goto	u10740
 15252  0B1C                     u10741:
 15253  0B1C  2B35               	goto	l37667
 15254  0B1D                     u10740:
 15255                           	line	519
 15256                           	
 15257  0B1D                     l37661:	
 15258                           ;userinterface.c: 519: if (buttonmask_cur)
 15259  0B1D  0021               	movlb 1	; select bank1
 15260  0B1E  0856               	movf	(_buttonmask_cur)^080h,w
 15261  0B1F  1D03               	skipz
 15262  0B20  2B22               	goto	u10750
 15263  0B21  2B2B               	goto	l37665
 15264  0B22                     u10750:
 15265                           	line	520
 15266                           	
 15267  0B22                     l37663:	
 15268                           ;userinterface.c: 520: set_LED_Locked(0xAA, 1);
 15269  0B22  0020               	movlb 0	; select bank0
 15270  0B23  01AE               	clrf	(?_set_LED_Locked)
 15271  0B24  1403               	bsf	status,0
 15272  0B25  0DAE               	rlf	(?_set_LED_Locked),f
 15273  0B26  30AA               	movlw	(0AAh)
 15274  0B27  31A8  20CE  3189   	fcall	_set_LED_Locked
 15275  0B2A  2B3C               	goto	l8759
 15276                           	line	521
 15277                           	
 15278  0B2B                     l8756:	
 15279                           	line	522
 15280                           	
 15281  0B2B                     l37665:	
 15282                           ;userinterface.c: 521: else
 15283                           ;userinterface.c: 522: set_LED_Locked(0xFF, 1);
 15284  0B2B  0020               	movlb 0	; select bank0
 15285  0B2C  01AE               	clrf	(?_set_LED_Locked)
 15286  0B2D  1403               	bsf	status,0
 15287  0B2E  0DAE               	rlf	(?_set_LED_Locked),f
 15288  0B2F  30FF               	movlw	(0FFh)
 15289  0B30  31A8  20CE  3189   	fcall	_set_LED_Locked
 15290  0B33  2B3C               	goto	l8759
 15291                           	
 15292  0B34                     l8757:	
 15293                           	line	523
 15294                           ;userinterface.c: 523: } else
 15295  0B34  2B3C               	goto	l8759
 15296                           	
 15297  0B35                     l8755:	
 15298                           	line	524
 15299                           	
 15300  0B35                     l37667:	
 15301                           ;userinterface.c: 524: set_LED_Locked(0x00, 0);
 15302  0B35  0020               	movlb 0	; select bank0
 15303  0B36  01AE               	clrf	(?_set_LED_Locked)
 15304  0B37  3000               	movlw	(0)
 15305  0B38  31A8  20CE  3189   	fcall	_set_LED_Locked
 15306  0B3B  2B3C               	goto	l8759
 15307                           	
 15308  0B3C                     l8758:	
 15309                           	line	525
 15310                           	
 15311  0B3C                     l8759:	
 15312  0B3C  0008               	return
 15313                           	opt stack 0
 15314                           GLOBAL	__end_of_update_display
 15315  0B3D                     	__end_of_update_display:
 15316 ;; =============== function _update_display ends ============
 15317                           
 15318                           	signat	_update_display,88
 15319                           	global	_set_mode
 15320                           psect	text3241,local,class=CODE,delta=2
 15321                           global __ptext3241
 15322  2EED                     __ptext3241:
 15323                           
 15324 ;; *************** function _set_mode *****************
 15325 ;; Defined at:
 15326 ;;		line 419 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15327 ;; Parameters:    Size  Location     Type
 15328 ;;  mode            1    wreg     unsigned char 
 15329 ;; Auto vars:     Size  Location     Type
 15330 ;;  mode            1   40[BANK0 ] unsigned char 
 15331 ;; Return value:  Size  Location     Type
 15332 ;;		None               void
 15333 ;; Registers used:
 15334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15335 ;; Tracked objects:
 15336 ;;		On entry : 0/0
 15337 ;;		On exit  : 0/0
 15338 ;;		Unchanged: 0/0
 15339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15344 ;;Total ram usage:        3 bytes
 15345 ;; Hardware stack levels used:    1
 15346 ;; Hardware stack levels required when called:    5
 15347 ;; This function calls:
 15348 ;;		_printf
 15349 ;;		_update_autotimer
 15350 ;;		_timeoutnow
 15351 ;;		_eeprom_write
 15352 ;; This function is called by:
 15353 ;;		_userinterface_init
 15354 ;;		_setup_short
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           psect	text3241
 15358                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15359                           	line	419
 15360                           	global	__size_of_set_mode
 15361  005A                     	__size_of_set_mode	equ	__end_of_set_mode-_set_mode
 15362                           	
 15363  2EED                     _set_mode:	
 15364                           	opt	stack 8
 15365                           ; Regs used in _set_mode: [wreg-status,0+pclath+cstack]
 15366                           ;set_mode@mode stored from wreg
 15367  2EED  0020               	movlb 0	; select bank0
 15368  2EEE  00C9               	movwf	(set_mode@mode)
 15369                           	line	420
 15370                           	
 15371  2EEF                     l37567:	
 15372                           ;userinterface.c: 420: if (mode > 9)
 15373  2EEF  300A               	movlw	(0Ah)
 15374  2EF0  0249               	subwf	(set_mode@mode),w
 15375  2EF1  1C03               	skipc
 15376  2EF2  2EF4               	goto	u10611
 15377  2EF3  2EF5               	goto	u10610
 15378  2EF4                     u10611:
 15379  2EF4  2EF7               	goto	l37571
 15380  2EF5                     u10610:
 15381                           	line	421
 15382                           	
 15383  2EF5                     l37569:	
 15384                           ;userinterface.c: 421: auto_mode = 0;
 15385  2EF5  01E2               	clrf	(_auto_mode)
 15386  2EF6  2EFC               	goto	l37573
 15387                           	line	422
 15388                           	
 15389  2EF7                     l8717:	
 15390                           	line	423
 15391                           	
 15392  2EF7                     l37571:	
 15393                           ;userinterface.c: 422: else
 15394                           ;userinterface.c: 423: auto_mode = mode;
 15395  2EF7  0849               	movf	(set_mode@mode),w
 15396  2EF8  00C7               	movwf	(??_set_mode+0)+0
 15397  2EF9  0847               	movf	(??_set_mode+0)+0,w
 15398  2EFA  00E2               	movwf	(_auto_mode)
 15399  2EFB  2EFC               	goto	l37573
 15400                           	
 15401  2EFC                     l8718:	
 15402                           	line	425
 15403                           	
 15404  2EFC                     l37573:	
 15405                           ;userinterface.c: 425: printf("Set mode %u\n", auto_mode);
 15406  2EFC  3013               	movlw	low(STR_98|8000h)
 15407  2EFD  00AF               	movwf	(?_printf)
 15408  2EFE  3088               	movlw	high(STR_98|8000h)
 15409  2EFF  00B0               	movwf	((?_printf))+1
 15410  2F00  0862               	movf	(_auto_mode),w
 15411  2F01  00C7               	movwf	(??_set_mode+0)+0
 15412  2F02  01C8               	clrf	(??_set_mode+0)+0+1
 15413  2F03  0847               	movf	0+(??_set_mode+0)+0,w
 15414  2F04  00B1               	movwf	0+(?_printf)+02h
 15415  2F05  0848               	movf	1+(??_set_mode+0)+0,w
 15416  2F06  00B2               	movwf	1+(?_printf)+02h
 15417  2F07  3194  24A0  31AE   	fcall	_printf
 15418                           	line	431
 15419                           	
 15420  2F0A                     l37575:	
 15421                           ;userinterface.c: 428: if ( (auto_mode == 1) ||
 15422                           ;userinterface.c: 429: (auto_mode == 2) ||
 15423                           ;userinterface.c: 430: (auto_mode == 3) ||
 15424                           ;userinterface.c: 431: (auto_mode == 4) ) {
 15425  2F0A  0020               	movlb 0	; select bank0
 15426  2F0B  0862               	movf	(_auto_mode),w
 15427  2F0C  3A01               	xorlw	01h&0ffh
 15428  2F0D  1903               	skipnz
 15429  2F0E  2F10               	goto	u10621
 15430  2F0F  2F11               	goto	u10620
 15431  2F10                     u10621:
 15432  2F10  2F23               	goto	l8721
 15433  2F11                     u10620:
 15434                           	
 15435  2F11                     l37577:	
 15436  2F11  0862               	movf	(_auto_mode),w
 15437  2F12  3A02               	xorlw	02h&0ffh
 15438  2F13  1903               	skipnz
 15439  2F14  2F16               	goto	u10631
 15440  2F15  2F17               	goto	u10630
 15441  2F16                     u10631:
 15442  2F16  2F23               	goto	l8721
 15443  2F17                     u10630:
 15444                           	
 15445  2F17                     l37579:	
 15446  2F17  0862               	movf	(_auto_mode),w
 15447  2F18  3A03               	xorlw	03h&0ffh
 15448  2F19  1903               	skipnz
 15449  2F1A  2F1C               	goto	u10641
 15450  2F1B  2F1D               	goto	u10640
 15451  2F1C                     u10641:
 15452  2F1C  2F23               	goto	l8721
 15453  2F1D                     u10640:
 15454                           	
 15455  2F1D                     l37581:	
 15456  2F1D  0862               	movf	(_auto_mode),w
 15457  2F1E  3A04               	xorlw	04h&0ffh
 15458  2F1F  1D03               	skipz
 15459  2F20  2F22               	goto	u10651
 15460  2F21  2F23               	goto	u10650
 15461  2F22                     u10651:
 15462  2F22  2F25               	goto	l37583
 15463  2F23                     u10650:
 15464                           	
 15465  2F23                     l8721:	
 15466                           	line	432
 15467                           ;userinterface.c: 432: full_wash = 1;
 15468  2F23  1571               	bsf	(_full_wash/8),(_full_wash)&7
 15469  2F24  2F25               	goto	l37583
 15470                           	line	433
 15471                           	
 15472  2F25                     l8719:	
 15473                           	line	435
 15474                           	
 15475  2F25                     l37583:	
 15476                           ;userinterface.c: 433: }
 15477                           ;userinterface.c: 435: if (state != 2) {
 15478  2F25  0866               	movf	(_state),w
 15479  2F26  3A02               	xorlw	02h&0ffh
 15480  2F27  1903               	skipnz
 15481  2F28  2F2A               	goto	u10661
 15482  2F29  2F2B               	goto	u10660
 15483  2F2A                     u10661:
 15484  2F2A  2F2F               	goto	l37587
 15485  2F2B                     u10660:
 15486                           	line	437
 15487                           	
 15488  2F2B                     l37585:	
 15489                           ;userinterface.c: 437: state = 0;
 15490  2F2B  01E6               	clrf	(_state)
 15491                           	line	438
 15492                           ;userinterface.c: 438: interval = 0;
 15493  2F2C  0021               	movlb 1	; select bank1
 15494  2F2D  01D8               	clrf	(_interval)^080h
 15495  2F2E  2F2F               	goto	l37587
 15496                           	line	439
 15497                           	
 15498  2F2F                     l8722:	
 15499                           	line	441
 15500                           	
 15501  2F2F                     l37587:	
 15502                           ;userinterface.c: 439: }
 15503                           ;userinterface.c: 441: update_autotimer(auto_mode);
 15504  2F2F  0020               	movlb 0	; select bank0
 15505  2F30  0862               	movf	(_auto_mode),w
 15506  2F31  31A6  26BE  31AE   	fcall	_update_autotimer
 15507                           	line	442
 15508                           	
 15509  2F34                     l37589:	
 15510                           ;userinterface.c: 442: timeoutnow(&cattimer);
 15511  2F34  3040               	movlw	(_cattimer&0ffh)
 15512  2F35  0020               	movlb 0	; select bank0
 15513  2F36  00A5               	movwf	(?_timeoutnow)
 15514  2F37  3001               	movlw	0x2/2
 15515  2F38  00A6               	movwf	(?_timeoutnow+1)
 15516  2F39  31AA  2248  31AE   	fcall	_timeoutnow
 15517                           	line	443
 15518                           	
 15519  2F3C                     l37591:	
 15520                           ;userinterface.c: 443: cat_detected = 0;
 15521  2F3C  1070               	bcf	(_cat_detected/8),(_cat_detected)&7
 15522                           	line	446
 15523                           	
 15524  2F3D                     l37593:	
 15525                           ;userinterface.c: 446: eeprom_write((1), auto_mode);
 15526  2F3D  0020               	movlb 0	; select bank0
 15527  2F3E  0862               	movf	(_auto_mode),w
 15528  2F3F  00C7               	movwf	(??_set_mode+0)+0
 15529  2F40  0847               	movf	(??_set_mode+0)+0,w
 15530  2F41  00A1               	movwf	(?_eeprom_write)
 15531  2F42  3001               	movlw	(01h)
 15532  2F43  31AC  24A5  31AE   	fcall	_eeprom_write
 15533                           	line	447
 15534                           	
 15535  2F46                     l8723:	
 15536  2F46  0008               	return
 15537                           	opt stack 0
 15538                           GLOBAL	__end_of_set_mode
 15539  2F47                     	__end_of_set_mode:
 15540 ;; =============== function _set_mode ends ============
 15541                           
 15542                           	signat	_set_mode,4216
 15543                           	global	_watersensor_event
 15544                           psect	text3242,local,class=CODE,delta=2
 15545                           global __ptext3242
 15546  22EA                     __ptext3242:
 15547                           
 15548 ;; *************** function _watersensor_event *****************
 15549 ;; Defined at:
 15550 ;;		line 388 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15551 ;; Parameters:    Size  Location     Type
 15552 ;;  detected        1    wreg     unsigned char 
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;  detected        1   49[BANK0 ] unsigned char 
 15555 ;; Return value:  Size  Location     Type
 15556 ;;		None               void
 15557 ;; Registers used:
 15558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15559 ;; Tracked objects:
 15560 ;;		On entry : 0/0
 15561 ;;		On exit  : 0/0
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15565 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15567 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 15568 ;;Total ram usage:        4 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; Hardware stack levels required when called:    5
 15571 ;; This function calls:
 15572 ;;		_printtime
 15573 ;;		_printf
 15574 ;;		_water_fill
 15575 ;;		_timeoutnever
 15576 ;;		_litterlanguage_event
 15577 ;; This function is called by:
 15578 ;;		_water_work
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           psect	text3242
 15582                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15583                           	line	388
 15584                           	global	__size_of_watersensor_event
 15585  0071                     	__size_of_watersensor_event	equ	__end_of_watersensor_event-_watersensor_event
 15586                           	
 15587  22EA                     _watersensor_event:	
 15588                           	opt	stack 9
 15589                           ; Regs used in _watersensor_event: [wreg-status,0+pclath+cstack]
 15590                           ;watersensor_event@detected stored from wreg
 15591  22EA  0020               	movlb 0	; select bank0
 15592  22EB  00D2               	movwf	(watersensor_event@detected)
 15593                           	line	389
 15594                           	
 15595  22EC                     l37539:	
 15596                           ;litterlanguage.c: 389: printtime();
 15597  22EC  31AB  23ED  31A2   	fcall	_printtime
 15598                           	line	390
 15599                           	
 15600  22EF                     l37541:	
 15601                           ;litterlanguage.c: 390: printf("Water %s\n", detected?"high":"low");
 15602  22EF  0020               	movlb 0	; select bank0
 15603  22F0  08D2               	movf	(watersensor_event@detected),f
 15604  22F1  1D03               	skipz
 15605  22F2  2AF4               	goto	u10561
 15606  22F3  2AF5               	goto	u10560
 15607  22F4                     u10561:
 15608  22F4  2AFA               	goto	l37545
 15609  22F5                     u10560:
 15610                           	
 15611  22F5                     l37543:	
 15612  22F5  303A               	movlw	low(STR_32|8000h)
 15613  22F6  00D0               	movwf	(_watersensor_event$5929)
 15614  22F7  3089               	movlw	high(STR_32|8000h)
 15615  22F8  00D1               	movwf	((_watersensor_event$5929))+1
 15616  22F9  2AFF               	goto	l37547
 15617                           	
 15618  22FA                     l4314:	
 15619                           	
 15620  22FA                     l37545:	
 15621  22FA  3029               	movlw	low(STR_31|8000h)
 15622  22FB  00D0               	movwf	(_watersensor_event$5929)
 15623  22FC  3089               	movlw	high(STR_31|8000h)
 15624  22FD  00D1               	movwf	((_watersensor_event$5929))+1
 15625  22FE  2AFF               	goto	l37547
 15626                           	
 15627  22FF                     l4316:	
 15628                           	
 15629  22FF                     l37547:	
 15630  22FF  3086               	movlw	low(STR_30|8000h)
 15631  2300  00AF               	movwf	(?_printf)
 15632  2301  3088               	movlw	high(STR_30|8000h)
 15633  2302  00B0               	movwf	((?_printf))+1
 15634  2303  0851               	movf	(_watersensor_event$5929+1),w
 15635  2304  01B2               	clrf	(1+?_printf+02h)
 15636  2305  07B2               	addwf	(1+?_printf+02h)
 15637  2306  0850               	movf	(_watersensor_event$5929),w
 15638  2307  01B1               	clrf	(0+?_printf+02h)
 15639  2308  07B1               	addwf	(0+?_printf+02h)
 15640                           
 15641  2309  3194  24A0  31A2   	fcall	_printf
 15642                           	line	391
 15643                           	
 15644  230C                     l37549:	
 15645                           ;litterlanguage.c: 391: if (ins_state != 0) {
 15646  230C  0020               	movlb 0	; select bank0
 15647  230D  0865               	movf	(_ins_state),w
 15648  230E  1D03               	skipz
 15649  230F  2B11               	goto	u10570
 15650  2310  2B3A               	goto	l4317
 15651  2311                     u10570:
 15652                           	line	393
 15653                           	
 15654  2311                     l37551:	
 15655                           ;litterlanguage.c: 393: if (detected) {
 15656  2311  0852               	movf	(watersensor_event@detected),w
 15657  2312  1D03               	skipz
 15658  2313  2B15               	goto	u10580
 15659  2314  2B2D               	goto	l37561
 15660  2315                     u10580:
 15661                           	line	395
 15662                           	
 15663  2315                     l37553:	
 15664                           ;litterlanguage.c: 395: water_fill(0);
 15665  2315  3000               	movlw	(0)
 15666  2316  31A9  217E  31A2   	fcall	_water_fill
 15667                           	line	396
 15668                           	
 15669  2319                     l37555:	
 15670                           ;litterlanguage.c: 396: timeoutnever(&timer_fill);
 15671  2319  30E9               	movlw	(_timer_fill&0ffh)
 15672  231A  0020               	movlb 0	; select bank0
 15673  231B  00A5               	movwf	(?_timeoutnever)
 15674  231C  3000               	movlw	0x1/2
 15675  231D  00A6               	movwf	(?_timeoutnever+1)
 15676  231E  31AA  222C  31A2   	fcall	_timeoutnever
 15677                           	line	397
 15678                           	
 15679  2321                     l37557:	
 15680                           ;litterlanguage.c: 397: printtime();
 15681  2321  31AB  23ED  31A2   	fcall	_printtime
 15682                           	line	398
 15683                           	
 15684  2324                     l37559:	
 15685                           ;litterlanguage.c: 398: printf("Filled\n");
 15686  2324  30E2               	movlw	low(STR_33|8000h)
 15687  2325  0020               	movlb 0	; select bank0
 15688  2326  00AF               	movwf	(?_printf)
 15689  2327  3088               	movlw	high(STR_33|8000h)
 15690  2328  00B0               	movwf	((?_printf))+1
 15691  2329  3194  24A0  31A2   	fcall	_printf
 15692                           	line	399
 15693                           ;litterlanguage.c: 399: } else {
 15694  232C  2B5A               	goto	l4322
 15695                           	
 15696  232D                     l4318:	
 15697                           	line	400
 15698                           	
 15699  232D                     l37561:	
 15700                           ;litterlanguage.c: 400: printtime();
 15701  232D  31AB  23ED  31A2   	fcall	_printtime
 15702                           	line	401
 15703                           ;litterlanguage.c: 401: printf("Drained\n");
 15704  2330  30A4               	movlw	low(STR_34|8000h)
 15705  2331  0020               	movlb 0	; select bank0
 15706  2332  00AF               	movwf	(?_printf)
 15707  2333  3088               	movlw	high(STR_34|8000h)
 15708  2334  00B0               	movwf	((?_printf))+1
 15709  2335  3194  24A0  31A2   	fcall	_printf
 15710  2338  2B5A               	goto	l4322
 15711                           	line	402
 15712                           	
 15713  2339                     l4319:	
 15714                           	line	403
 15715                           ;litterlanguage.c: 402: }
 15716                           ;litterlanguage.c: 403: } else {
 15717  2339  2B5A               	goto	l4322
 15718                           	
 15719  233A                     l4317:	
 15720                           	line	404
 15721                           ;litterlanguage.c: 404: error_flood = detected;
 15722  233A  1071               	bcf	(_error_flood/8),(_error_flood)&7
 15723  233B  1C52               	btfss	(watersensor_event@detected),0
 15724  233C  2B3E               	goto	u10595
 15725  233D  1471               	bsf	(_error_flood/8),(_error_flood)&7
 15726  233E                     u10595:
 15727                           
 15728                           	line	405
 15729                           ;litterlanguage.c: 405: if (error_flood) {
 15730  233E  1C71               	btfss	(_error_flood/8),(_error_flood)&7
 15731  233F  2B41               	goto	u10601
 15732  2340  2B42               	goto	u10600
 15733  2341                     u10601:
 15734  2341  2B4E               	goto	l37565
 15735  2342                     u10600:
 15736                           	line	406
 15737                           	
 15738  2342                     l37563:	
 15739                           ;litterlanguage.c: 406: printtime();
 15740  2342  31AB  23ED  31A2   	fcall	_printtime
 15741                           	line	407
 15742                           ;litterlanguage.c: 407: printf("Box flooded!\n");
 15743  2345  30E9               	movlw	low(STR_35|8000h)
 15744  2346  0020               	movlb 0	; select bank0
 15745  2347  00AF               	movwf	(?_printf)
 15746  2348  3087               	movlw	high(STR_35|8000h)
 15747  2349  00B0               	movwf	((?_printf))+1
 15748  234A  3194  24A0  31A2   	fcall	_printf
 15749  234D  2B4E               	goto	l37565
 15750                           	line	408
 15751                           	
 15752  234E                     l4321:	
 15753                           	line	409
 15754                           	
 15755  234E                     l37565:	
 15756                           ;litterlanguage.c: 408: }
 15757                           ;litterlanguage.c: 409: litterlanguage_event(5, error_flood);
 15758  234E  3000               	movlw	0
 15759  234F  1871               	btfsc	(_error_flood/8),(_error_flood)&7
 15760  2350  3001               	movlw	1
 15761  2351  0020               	movlb 0	; select bank0
 15762  2352  00CF               	movwf	(??_watersensor_event+0)+0
 15763  2353  084F               	movf	(??_watersensor_event+0)+0,w
 15764  2354  00A1               	movwf	(?_litterlanguage_event)
 15765  2355  3005               	movlw	(05h)
 15766  2356  3198  2000  31A2   	fcall	_litterlanguage_event
 15767  2359  2B5A               	goto	l4322
 15768                           	line	410
 15769                           	
 15770  235A                     l4320:	
 15771                           	line	412
 15772                           	
 15773  235A                     l4322:	
 15774  235A  0008               	return
 15775                           	opt stack 0
 15776                           GLOBAL	__end_of_watersensor_event
 15777  235B                     	__end_of_watersensor_event:
 15778 ;; =============== function _watersensor_event ends ============
 15779                           
 15780                           	signat	_watersensor_event,4216
 15781                           	global	_litterlanguage_stop
 15782                           psect	text3243,local,class=CODE,delta=2
 15783                           global __ptext3243
 15784  21AC                     __ptext3243:
 15785                           
 15786 ;; *************** function _litterlanguage_stop *****************
 15787 ;; Defined at:
 15788 ;;		line 347 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;		None               void
 15795 ;; Registers used:
 15796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15806 ;;Total ram usage:        1 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:    5
 15809 ;; This function calls:
 15810 ;;		_printtime
 15811 ;;		_printf
 15812 ;;		_set_Bowl
 15813 ;;		_set_Arm
 15814 ;;		_water_fill
 15815 ;;		_set_Dosage
 15816 ;;		_set_Pump
 15817 ;;		_set_Dryer
 15818 ;;		_timeoutnever
 15819 ;;		_litterlanguage_event
 15820 ;; This function is called by:
 15821 ;;		_exe_instruction
 15822 ;;		_start_long
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           psect	text3243
 15826                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15827                           	line	347
 15828                           	global	__size_of_litterlanguage_stop
 15829  0069                     	__size_of_litterlanguage_stop	equ	__end_of_litterlanguage_stop-_litterlanguage_stop
 15830                           	
 15831  21AC                     _litterlanguage_stop:	
 15832                           	opt	stack 8
 15833                           ; Regs used in _litterlanguage_stop: [wreg-status,0+pclath+cstack]
 15834                           	line	348
 15835                           	
 15836  21AC                     l37497:	
 15837                           ;litterlanguage.c: 348: if (ins_state == 0)
 15838  21AC  0020               	movlb 0	; select bank0
 15839  21AD  08E5               	movf	(_ins_state),f
 15840  21AE  1D03               	skipz
 15841  21AF  29B1               	goto	u10531
 15842  21B0  29B2               	goto	u10530
 15843  21B1                     u10531:
 15844  21B1  29B4               	goto	l37501
 15845  21B2                     u10530:
 15846  21B2  2A14               	goto	l4308
 15847                           	line	349
 15848                           	
 15849  21B3                     l37499:	
 15850                           ;litterlanguage.c: 349: return;
 15851  21B3  2A14               	goto	l4308
 15852                           	
 15853  21B4                     l4307:	
 15854                           	line	351
 15855                           	
 15856  21B4                     l37501:	
 15857                           ;litterlanguage.c: 351: printtime();
 15858  21B4  31AB  23ED  31A1   	fcall	_printtime
 15859                           	line	352
 15860                           ;litterlanguage.c: 352: printf("Stopping program\n");
 15861  21B7  30A3               	movlw	low(STR_29|8000h)
 15862  21B8  0020               	movlb 0	; select bank0
 15863  21B9  00AF               	movwf	(?_printf)
 15864  21BA  3086               	movlw	high(STR_29|8000h)
 15865  21BB  00B0               	movwf	((?_printf))+1
 15866  21BC  3194  24A0  31A1   	fcall	_printf
 15867                           	line	354
 15868                           	
 15869  21BF                     l37503:	
 15870                           ;litterlanguage.c: 354: set_Bowl(0);
 15871  21BF  3000               	movlw	(0)
 15872  21C0  31AA  22FF  31A1   	fcall	_set_Bowl
 15873                           	line	355
 15874                           	
 15875  21C3                     l37505:	
 15876                           ;litterlanguage.c: 355: set_Arm(0);
 15877  21C3  3000               	movlw	(0)
 15878  21C4  31AB  2323  31A1   	fcall	_set_Arm
 15879                           	line	356
 15880                           	
 15881  21C7                     l37507:	
 15882                           ;litterlanguage.c: 356: water_fill(0);
 15883  21C7  3000               	movlw	(0)
 15884  21C8  31A9  217E  31A1   	fcall	_water_fill
 15885                           	line	357
 15886                           	
 15887  21CB                     l37509:	
 15888                           ;litterlanguage.c: 357: set_Dosage(0);
 15889  21CB  3000               	movlw	(0)
 15890  21CC  31A8  20ED  31A1   	fcall	_set_Dosage
 15891                           	line	358
 15892                           	
 15893  21CF                     l37511:	
 15894                           ;litterlanguage.c: 358: set_Pump(0);
 15895  21CF  3000               	movlw	(0)
 15896  21D0  31A8  20FE  31A1   	fcall	_set_Pump
 15897                           	line	359
 15898                           	
 15899  21D3                     l37513:	
 15900                           ;litterlanguage.c: 359: set_Dryer(0);
 15901  21D3  3000               	movlw	(0)
 15902  21D4  31A9  210F  31A1   	fcall	_set_Dryer
 15903                           	line	361
 15904                           	
 15905  21D7                     l37515:	
 15906                           ;litterlanguage.c: 361: timeoutnever(&timer_fill);
 15907  21D7  30E9               	movlw	(_timer_fill&0ffh)
 15908  21D8  0020               	movlb 0	; select bank0
 15909  21D9  00A5               	movwf	(?_timeoutnever)
 15910  21DA  3000               	movlw	0x1/2
 15911  21DB  00A6               	movwf	(?_timeoutnever+1)
 15912  21DC  31AA  222C  31A1   	fcall	_timeoutnever
 15913                           	line	362
 15914                           	
 15915  21DF                     l37517:	
 15916                           ;litterlanguage.c: 362: timeoutnever(&timer_drain);
 15917  21DF  30E3               	movlw	(_timer_drain&0ffh)
 15918  21E0  0020               	movlb 0	; select bank0
 15919  21E1  00A5               	movwf	(?_timeoutnever)
 15920  21E2  3000               	movlw	0x1/2
 15921  21E3  00A6               	movwf	(?_timeoutnever+1)
 15922  21E4  31AA  222C  31A1   	fcall	_timeoutnever
 15923                           	line	363
 15924                           	
 15925  21E7                     l37519:	
 15926                           ;litterlanguage.c: 363: timeoutnever(&timer_autodose);
 15927  21E7  3064               	movlw	(_timer_autodose&0ffh)
 15928  21E8  0020               	movlb 0	; select bank0
 15929  21E9  00A5               	movwf	(?_timeoutnever)
 15930  21EA  3001               	movlw	0x2/2
 15931  21EB  00A6               	movwf	(?_timeoutnever+1)
 15932  21EC  31AA  222C  31A1   	fcall	_timeoutnever
 15933                           	line	365
 15934                           	
 15935  21EF                     l37521:	
 15936                           ;litterlanguage.c: 365: ins_state = 0;
 15937  21EF  0020               	movlb 0	; select bank0
 15938  21F0  01E5               	clrf	(_ins_state)
 15939                           	line	367
 15940                           	
 15941  21F1                     l37523:	
 15942                           ;litterlanguage.c: 367: paused = 0;
 15943  21F1  12F1               	bcf	(_paused/8),(_paused)&7
 15944                           	line	369
 15945                           	
 15946  21F2                     l37525:	
 15947                           ;litterlanguage.c: 369: if (error_fill) {
 15948  21F2  1FF0               	btfss	(_error_fill/8),(_error_fill)&7
 15949  21F3  29F5               	goto	u10541
 15950  21F4  29F6               	goto	u10540
 15951  21F5                     u10541:
 15952  21F5  2A02               	goto	l37531
 15953  21F6                     u10540:
 15954                           	line	370
 15955                           	
 15956  21F6                     l37527:	
 15957                           ;litterlanguage.c: 370: error_fill = 0;
 15958  21F6  13F0               	bcf	(_error_fill/8),(_error_fill)&7
 15959                           	line	371
 15960                           	
 15961  21F7                     l37529:	
 15962                           ;litterlanguage.c: 371: litterlanguage_event(1, error_fill);
 15963  21F7  3000               	movlw	0
 15964  21F8  1BF0               	btfsc	(_error_fill/8),(_error_fill)&7
 15965  21F9  3001               	movlw	1
 15966  21FA  00CF               	movwf	(??_litterlanguage_stop+0)+0
 15967  21FB  084F               	movf	(??_litterlanguage_stop+0)+0,w
 15968  21FC  00A1               	movwf	(?_litterlanguage_event)
 15969  21FD  3001               	movlw	(01h)
 15970  21FE  3198  2000  31A1   	fcall	_litterlanguage_event
 15971  2201  2A02               	goto	l37531
 15972                           	line	372
 15973                           	
 15974  2202                     l4309:	
 15975                           	line	373
 15976                           	
 15977  2202                     l37531:	
 15978                           ;litterlanguage.c: 372: }
 15979                           ;litterlanguage.c: 373: if (error_drain) {
 15980  2202  1EF0               	btfss	(_error_drain/8),(_error_drain)&7
 15981  2203  2A05               	goto	u10551
 15982  2204  2A06               	goto	u10550
 15983  2205                     u10551:
 15984  2205  2A13               	goto	l37537
 15985  2206                     u10550:
 15986                           	line	374
 15987                           	
 15988  2206                     l37533:	
 15989                           ;litterlanguage.c: 374: error_drain = 0;
 15990  2206  12F0               	bcf	(_error_drain/8),(_error_drain)&7
 15991                           	line	375
 15992                           	
 15993  2207                     l37535:	
 15994                           ;litterlanguage.c: 375: litterlanguage_event(2, error_drain);
 15995  2207  3000               	movlw	0
 15996  2208  1AF0               	btfsc	(_error_drain/8),(_error_drain)&7
 15997  2209  3001               	movlw	1
 15998  220A  0020               	movlb 0	; select bank0
 15999  220B  00CF               	movwf	(??_litterlanguage_stop+0)+0
 16000  220C  084F               	movf	(??_litterlanguage_stop+0)+0,w
 16001  220D  00A1               	movwf	(?_litterlanguage_event)
 16002  220E  3002               	movlw	(02h)
 16003  220F  3198  2000  31A1   	fcall	_litterlanguage_event
 16004  2212  2A13               	goto	l37537
 16005                           	line	376
 16006                           	
 16007  2213                     l4310:	
 16008                           	line	377
 16009                           	
 16010  2213                     l37537:	
 16011                           ;litterlanguage.c: 376: }
 16012                           ;litterlanguage.c: 377: error_flood = 0;
 16013  2213  1071               	bcf	(_error_flood/8),(_error_flood)&7
 16014                           	line	378
 16015                           	
 16016  2214                     l4308:	
 16017  2214  0008               	return
 16018                           	opt stack 0
 16019                           GLOBAL	__end_of_litterlanguage_stop
 16020  2215                     	__end_of_litterlanguage_stop:
 16021 ;; =============== function _litterlanguage_stop ends ============
 16022                           
 16023                           	signat	_litterlanguage_stop,88
 16024                           	global	_litterlanguage_pause
 16025                           psect	text3244,local,class=CODE,delta=2
 16026                           global __ptext3244
 16027  1256                     __ptext3244:
 16028                           
 16029 ;; *************** function _litterlanguage_pause *****************
 16030 ;; Defined at:
 16031 ;;		line 258 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;  pause           1    wreg     unsigned char 
 16034 ;; Auto vars:     Size  Location     Type
 16035 ;;  pause           1   47[BANK0 ] unsigned char 
 16036 ;;  timer_now       6   48[BANK0 ] struct timer
 16037 ;; Return value:  Size  Location     Type
 16038 ;;		None               void
 16039 ;; Registers used:
 16040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16041 ;; Tracked objects:
 16042 ;;		On entry : 0/0
 16043 ;;		On exit  : 0/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16047 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 16048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16049 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 16050 ;;Total ram usage:        8 bytes
 16051 ;; Hardware stack levels used:    1
 16052 ;; Hardware stack levels required when called:    5
 16053 ;; This function calls:
 16054 ;;		_printtime
 16055 ;;		_get_Bowl
 16056 ;;		_set_Bowl
 16057 ;;		_get_Arm
 16058 ;;		_set_Arm
 16059 ;;		_water_filling
 16060 ;;		_water_fill
 16061 ;;		_get_Dosage
 16062 ;;		_set_Dosage
 16063 ;;		_get_Pump
 16064 ;;		_set_Pump
 16065 ;;		_get_Dryer
 16066 ;;		_set_Dryer
 16067 ;;		_gettimestamp
 16068 ;;		_timestampdiff
 16069 ;;		_timeoutnever
 16070 ;;		_printf
 16071 ;;		_settimeout
 16072 ;;		_litterlanguage_event
 16073 ;; This function is called by:
 16074 ;;		_start_short
 16075 ;; This function uses a non-reentrant model
 16076 ;;
 16077                           psect	text3244
 16078                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 16079                           	line	258
 16080                           	global	__size_of_litterlanguage_pause
 16081  024A                     	__size_of_litterlanguage_pause	equ	__end_of_litterlanguage_pause-_litterlanguage_pause
 16082                           	
 16083  1256                     _litterlanguage_pause:	
 16084                           	opt	stack 8
 16085                           ; Regs used in _litterlanguage_pause: [wreg-status,0+pclath+cstack]
 16086                           ;litterlanguage_pause@pause stored from wreg
 16087                           	line	272
 16088  1256  0020               	movlb 0	; select bank0
 16089  1257  00D0               	movwf	(litterlanguage_pause@pause)
 16090                           	
 16091  1258                     l37401:	
 16092                           ;litterlanguage.c: 259: static struct {
 16093                           ;litterlanguage.c: 260: unsigned bowl : 2;
 16094                           ;litterlanguage.c: 261: unsigned arm : 2;
 16095                           ;litterlanguage.c: 262: unsigned water : 1;
 16096                           ;litterlanguage.c: 263: unsigned pump : 1;
 16097                           ;litterlanguage.c: 264: unsigned dosage : 1;
 16098                           ;litterlanguage.c: 265: unsigned dryer : 1;
 16099                           ;litterlanguage.c: 266: unsigned long wait;
 16100                           ;litterlanguage.c: 267: unsigned long fill;
 16101                           ;litterlanguage.c: 268: unsigned long drain;
 16102                           ;litterlanguage.c: 269: unsigned long autodose;
 16103                           ;litterlanguage.c: 270: } context;
 16104  1258  3000               	movlw	0
 16105  1259  1AF1               	btfsc	(_paused/8),(_paused)&7
 16106  125A  3001               	movlw	1
 16107  125B  0650               	xorwf	(litterlanguage_pause@pause),w
 16108  125C  1D03               	skipz
 16109  125D  2A5F               	goto	u10431
 16110  125E  2A60               	goto	u10430
 16111  125F                     u10431:
 16112  125F  2A62               	goto	l37405
 16113  1260                     u10430:
 16114  1260  2C9F               	goto	l4290
 16115                           	line	273
 16116                           	
 16117  1261                     l37403:	
 16118                           ;litterlanguage.c: 273: return;
 16119  1261  2C9F               	goto	l4290
 16120                           	
 16121  1262                     l4289:	
 16122                           	line	275
 16123                           	
 16124  1262                     l37405:	
 16125                           ;litterlanguage.c: 275: printtime();
 16126  1262  31AB  23ED  3192   	fcall	_printtime
 16127                           	line	276
 16128                           	
 16129  1265                     l37407:	
 16130                           ;litterlanguage.c: 276: if (pause) {
 16131  1265  0020               	movlb 0	; select bank0
 16132  1266  0850               	movf	(litterlanguage_pause@pause),w
 16133  1267  1D03               	skipz
 16134  1268  2A6A               	goto	u10440
 16135  1269  2B7B               	goto	l4291
 16136  126A                     u10440:
 16137                           	line	280
 16138                           	
 16139  126A                     l37409:	
 16140                           ;litterlanguage.c: 277: struct timer timer_now;
 16141                           ;litterlanguage.c: 280: context.bowl = get_Bowl();
 16142  126A  31AA  2281  3192   	fcall	_get_Bowl
 16143  126D  0020               	movlb 0	; select bank0
 16144  126E  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16145  126F  0022               	movlb 2	; select bank2
 16146  1270  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16147  1271  0020               	movlb 0	; select bank0
 16148  1272  064F               	xorwf	0+(??_litterlanguage_pause+0)+0,w
 16149  1273  39FC               	andlw	not ((1<<2)-1)
 16150  1274  064F               	xorwf	0+(??_litterlanguage_pause+0)+0,w
 16151  1275  0022               	movlb 2	; select bank2
 16152  1276  00A0               	movwf	(litterlanguage_pause@context)^0100h
 16153                           	line	281
 16154                           ;litterlanguage.c: 281: set_Bowl(0);
 16155  1277  3000               	movlw	(0)
 16156  1278  31AA  22FF  3192   	fcall	_set_Bowl
 16157                           	line	282
 16158                           ;litterlanguage.c: 282: context.arm = get_Arm();
 16159  127B  31AA  229F  3192   	fcall	_get_Arm
 16160  127E  0020               	movlb 0	; select bank0
 16161  127F  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16162  1280  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 16163  1281  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 16164  1282  0022               	movlb 2	; select bank2
 16165  1283  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16166  1284  0020               	movlb 0	; select bank0
 16167  1285  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16168  1286  39F3               	andlw	not (((1<<2)-1)<<2)
 16169  1287  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16170  1288  0022               	movlb 2	; select bank2
 16171  1289  00A0               	movwf	(litterlanguage_pause@context)^0100h
 16172                           	line	283
 16173                           ;litterlanguage.c: 283: set_Arm(0);
 16174  128A  3000               	movlw	(0)
 16175  128B  31AB  2323  3192   	fcall	_set_Arm
 16176                           	line	284
 16177                           	
 16178  128E                     l37411:	
 16179                           ;litterlanguage.c: 284: context.water = water_filling();
 16180  128E  31B7  27DE  3192   	fcall	_water_filling
 16181  1291  0020               	movlb 0	; select bank0
 16182  1292  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16183  1293  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 16184  1294  0022               	movlb 2	; select bank2
 16185  1295  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16186  1296  0020               	movlb 0	; select bank0
 16187  1297  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16188  1298  39EF               	andlw	not (((1<<1)-1)<<4)
 16189  1299  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16190  129A  0022               	movlb 2	; select bank2
 16191  129B  00A0               	movwf	(litterlanguage_pause@context)^0100h
 16192                           	line	285
 16193                           	
 16194  129C                     l37413:	
 16195                           ;litterlanguage.c: 285: water_fill(0);
 16196  129C  3000               	movlw	(0)
 16197  129D  31A9  217E  3192   	fcall	_water_fill
 16198                           	line	286
 16199                           	
 16200  12A0                     l37415:	
 16201                           ;litterlanguage.c: 286: context.dosage = get_Dosage();
 16202  12A0  31B7  27CE  3192   	fcall	_get_Dosage
 16203  12A3  0020               	movlb 0	; select bank0
 16204  12A4  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16205  12A5  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 16206  12A6  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 16207  12A7  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 16208  12A8  0022               	movlb 2	; select bank2
 16209  12A9  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16210  12AA  0020               	movlb 0	; select bank0
 16211  12AB  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16212  12AC  39BF               	andlw	not (((1<<1)-1)<<6)
 16213  12AD  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16214  12AE  0022               	movlb 2	; select bank2
 16215  12AF  00A0               	movwf	(litterlanguage_pause@context)^0100h
 16216                           	line	287
 16217                           	
 16218  12B0                     l37417:	
 16219                           ;litterlanguage.c: 287: set_Dosage(0);
 16220  12B0  3000               	movlw	(0)
 16221  12B1  31A8  20ED  3192   	fcall	_set_Dosage
 16222                           	line	288
 16223                           	
 16224  12B4                     l37419:	
 16225                           ;litterlanguage.c: 288: context.pump = get_Pump();
 16226  12B4  31B7  27C9  3192   	fcall	_get_Pump
 16227  12B7  0020               	movlb 0	; select bank0
 16228  12B8  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16229  12B9  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 16230  12BA  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 16231  12BB  0022               	movlb 2	; select bank2
 16232  12BC  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16233  12BD  0020               	movlb 0	; select bank0
 16234  12BE  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16235  12BF  39DF               	andlw	not (((1<<1)-1)<<5)
 16236  12C0  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16237  12C1  0022               	movlb 2	; select bank2
 16238  12C2  00A0               	movwf	(litterlanguage_pause@context)^0100h
 16239                           	line	289
 16240                           	
 16241  12C3                     l37421:	
 16242                           ;litterlanguage.c: 289: set_Pump(0);
 16243  12C3  3000               	movlw	(0)
 16244  12C4  31A8  20FE  3192   	fcall	_set_Pump
 16245                           	line	290
 16246                           	
 16247  12C7                     l37423:	
 16248                           ;litterlanguage.c: 290: context.dryer = get_Dryer();
 16249  12C7  31B7  27D3  3192   	fcall	_get_Dryer
 16250  12CA  0020               	movlb 0	; select bank0
 16251  12CB  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16252  12CC  0CCF               	rrf	(??_litterlanguage_pause+0)+0,f
 16253  12CD  0CCF               	rrf	(??_litterlanguage_pause+0)+0,f
 16254  12CE  0022               	movlb 2	; select bank2
 16255  12CF  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16256  12D0  0020               	movlb 0	; select bank0
 16257  12D1  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16258  12D2  397F               	andlw	not (((1<<1)-1)<<7)
 16259  12D3  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 16260  12D4  0022               	movlb 2	; select bank2
 16261  12D5  00A0               	movwf	(litterlanguage_pause@context)^0100h
 16262                           	line	291
 16263                           	
 16264  12D6                     l37425:	
 16265                           ;litterlanguage.c: 291: set_Dryer(0);
 16266  12D6  3000               	movlw	(0)
 16267  12D7  31A9  210F  3192   	fcall	_set_Dryer
 16268                           	line	293
 16269                           	
 16270  12DA                     l37427:	
 16271                           ;litterlanguage.c: 293: gettimestamp(&timer_now);
 16272  12DA  3051               	movlw	(litterlanguage_pause@timer_now&0ffh)
 16273  12DB  0020               	movlb 0	; select bank0
 16274  12DC  00A1               	movwf	(?_gettimestamp)
 16275  12DD  3000               	movlw	0x0/2
 16276  12DE  00A2               	movwf	(?_gettimestamp+1)
 16277  12DF  31AE  2609  3192   	fcall	_gettimestamp
 16278                           	line	297
 16279                           	
 16280  12E2                     l37429:	
 16281                           ;litterlanguage.c: 297: context.wait = timestampdiff(&timer_waitins, &timer_now);
 16282  12E2  306A               	movlw	(_timer_waitins&0ffh)
 16283  12E3  0020               	movlb 0	; select bank0
 16284  12E4  00A1               	movwf	(?_timestampdiff)
 16285  12E5  3001               	movlw	0x2/2
 16286  12E6  00A2               	movwf	(?_timestampdiff+1)
 16287  12E7  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 16288  12E8  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16289  12E9  084F               	movf	(??_litterlanguage_pause+0)+0,w
 16290  12EA  00A3               	movwf	(0+?_timestampdiff+02h)
 16291  12EB  319B  23F0  3192   	fcall	_timestampdiff
 16292  12EE  0020               	movlb 0	; select bank0
 16293  12EF  0824               	movf	(3+(?_timestampdiff)),w
 16294  12F0  0022               	movlb 2	; select bank2
 16295  12F1  00A4               	movwf	3+(litterlanguage_pause@context)^0100h+01h
 16296  12F2  0020               	movlb 0	; select bank0
 16297  12F3  0823               	movf	(2+(?_timestampdiff)),w
 16298  12F4  0022               	movlb 2	; select bank2
 16299  12F5  00A3               	movwf	2+(litterlanguage_pause@context)^0100h+01h
 16300  12F6  0020               	movlb 0	; select bank0
 16301  12F7  0822               	movf	(1+(?_timestampdiff)),w
 16302  12F8  0022               	movlb 2	; select bank2
 16303  12F9  00A2               	movwf	1+(litterlanguage_pause@context)^0100h+01h
 16304  12FA  0020               	movlb 0	; select bank0
 16305  12FB  0821               	movf	(0+(?_timestampdiff)),w
 16306  12FC  0022               	movlb 2	; select bank2
 16307  12FD  00A1               	movwf	0+(litterlanguage_pause@context)^0100h+01h
 16308                           
 16309                           	line	298
 16310                           	
 16311  12FE                     l37431:	
 16312                           ;litterlanguage.c: 298: timeoutnever(&timer_waitins);
 16313  12FE  306A               	movlw	(_timer_waitins&0ffh)
 16314  12FF  0020               	movlb 0	; select bank0
 16315  1300  00A5               	movwf	(?_timeoutnever)
 16316  1301  3001               	movlw	0x2/2
 16317  1302  00A6               	movwf	(?_timeoutnever+1)
 16318  1303  31AA  222C  3192   	fcall	_timeoutnever
 16319                           	line	299
 16320                           	
 16321  1306                     l37433:	
 16322                           ;litterlanguage.c: 299: context.fill = timestampdiff(&timer_fill, &timer_now);
 16323  1306  30E9               	movlw	(_timer_fill&0ffh)
 16324  1307  0020               	movlb 0	; select bank0
 16325  1308  00A1               	movwf	(?_timestampdiff)
 16326  1309  3000               	movlw	0x1/2
 16327  130A  00A2               	movwf	(?_timestampdiff+1)
 16328  130B  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 16329  130C  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16330  130D  084F               	movf	(??_litterlanguage_pause+0)+0,w
 16331  130E  00A3               	movwf	(0+?_timestampdiff+02h)
 16332  130F  319B  23F0  3192   	fcall	_timestampdiff
 16333  1312  0020               	movlb 0	; select bank0
 16334  1313  0824               	movf	(3+(?_timestampdiff)),w
 16335  1314  0022               	movlb 2	; select bank2
 16336  1315  00A8               	movwf	3+(litterlanguage_pause@context)^0100h+05h
 16337  1316  0020               	movlb 0	; select bank0
 16338  1317  0823               	movf	(2+(?_timestampdiff)),w
 16339  1318  0022               	movlb 2	; select bank2
 16340  1319  00A7               	movwf	2+(litterlanguage_pause@context)^0100h+05h
 16341  131A  0020               	movlb 0	; select bank0
 16342  131B  0822               	movf	(1+(?_timestampdiff)),w
 16343  131C  0022               	movlb 2	; select bank2
 16344  131D  00A6               	movwf	1+(litterlanguage_pause@context)^0100h+05h
 16345  131E  0020               	movlb 0	; select bank0
 16346  131F  0821               	movf	(0+(?_timestampdiff)),w
 16347  1320  0022               	movlb 2	; select bank2
 16348  1321  00A5               	movwf	0+(litterlanguage_pause@context)^0100h+05h
 16349                           
 16350                           	line	300
 16351                           	
 16352  1322                     l37435:	
 16353                           ;litterlanguage.c: 300: timeoutnever(&timer_fill);
 16354  1322  30E9               	movlw	(_timer_fill&0ffh)
 16355  1323  0020               	movlb 0	; select bank0
 16356  1324  00A5               	movwf	(?_timeoutnever)
 16357  1325  3000               	movlw	0x1/2
 16358  1326  00A6               	movwf	(?_timeoutnever+1)
 16359  1327  31AA  222C  3192   	fcall	_timeoutnever
 16360                           	line	301
 16361                           	
 16362  132A                     l37437:	
 16363                           ;litterlanguage.c: 301: context.drain = timestampdiff(&timer_drain, &timer_now);
 16364  132A  30E3               	movlw	(_timer_drain&0ffh)
 16365  132B  0020               	movlb 0	; select bank0
 16366  132C  00A1               	movwf	(?_timestampdiff)
 16367  132D  3000               	movlw	0x1/2
 16368  132E  00A2               	movwf	(?_timestampdiff+1)
 16369  132F  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 16370  1330  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16371  1331  084F               	movf	(??_litterlanguage_pause+0)+0,w
 16372  1332  00A3               	movwf	(0+?_timestampdiff+02h)
 16373  1333  319B  23F0  3192   	fcall	_timestampdiff
 16374  1336  0020               	movlb 0	; select bank0
 16375  1337  0824               	movf	(3+(?_timestampdiff)),w
 16376  1338  0022               	movlb 2	; select bank2
 16377  1339  00AC               	movwf	3+(litterlanguage_pause@context)^0100h+09h
 16378  133A  0020               	movlb 0	; select bank0
 16379  133B  0823               	movf	(2+(?_timestampdiff)),w
 16380  133C  0022               	movlb 2	; select bank2
 16381  133D  00AB               	movwf	2+(litterlanguage_pause@context)^0100h+09h
 16382  133E  0020               	movlb 0	; select bank0
 16383  133F  0822               	movf	(1+(?_timestampdiff)),w
 16384  1340  0022               	movlb 2	; select bank2
 16385  1341  00AA               	movwf	1+(litterlanguage_pause@context)^0100h+09h
 16386  1342  0020               	movlb 0	; select bank0
 16387  1343  0821               	movf	(0+(?_timestampdiff)),w
 16388  1344  0022               	movlb 2	; select bank2
 16389  1345  00A9               	movwf	0+(litterlanguage_pause@context)^0100h+09h
 16390                           
 16391                           	line	302
 16392                           	
 16393  1346                     l37439:	
 16394                           ;litterlanguage.c: 302: timeoutnever(&timer_drain);
 16395  1346  30E3               	movlw	(_timer_drain&0ffh)
 16396  1347  0020               	movlb 0	; select bank0
 16397  1348  00A5               	movwf	(?_timeoutnever)
 16398  1349  3000               	movlw	0x1/2
 16399  134A  00A6               	movwf	(?_timeoutnever+1)
 16400  134B  31AA  222C  3192   	fcall	_timeoutnever
 16401                           	line	303
 16402                           	
 16403  134E                     l37441:	
 16404                           ;litterlanguage.c: 303: context.autodose = timestampdiff(&timer_autodose, &timer_now);
 16405  134E  3064               	movlw	(_timer_autodose&0ffh)
 16406  134F  0020               	movlb 0	; select bank0
 16407  1350  00A1               	movwf	(?_timestampdiff)
 16408  1351  3001               	movlw	0x2/2
 16409  1352  00A2               	movwf	(?_timestampdiff+1)
 16410  1353  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 16411  1354  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16412  1355  084F               	movf	(??_litterlanguage_pause+0)+0,w
 16413  1356  00A3               	movwf	(0+?_timestampdiff+02h)
 16414  1357  319B  23F0  3192   	fcall	_timestampdiff
 16415  135A  0020               	movlb 0	; select bank0
 16416  135B  0824               	movf	(3+(?_timestampdiff)),w
 16417  135C  0022               	movlb 2	; select bank2
 16418  135D  00B0               	movwf	3+(litterlanguage_pause@context)^0100h+0Dh
 16419  135E  0020               	movlb 0	; select bank0
 16420  135F  0823               	movf	(2+(?_timestampdiff)),w
 16421  1360  0022               	movlb 2	; select bank2
 16422  1361  00AF               	movwf	2+(litterlanguage_pause@context)^0100h+0Dh
 16423  1362  0020               	movlb 0	; select bank0
 16424  1363  0822               	movf	(1+(?_timestampdiff)),w
 16425  1364  0022               	movlb 2	; select bank2
 16426  1365  00AE               	movwf	1+(litterlanguage_pause@context)^0100h+0Dh
 16427  1366  0020               	movlb 0	; select bank0
 16428  1367  0821               	movf	(0+(?_timestampdiff)),w
 16429  1368  0022               	movlb 2	; select bank2
 16430  1369  00AD               	movwf	0+(litterlanguage_pause@context)^0100h+0Dh
 16431                           
 16432                           	line	304
 16433                           	
 16434  136A                     l37443:	
 16435                           ;litterlanguage.c: 304: timeoutnever(&timer_autodose);
 16436  136A  3064               	movlw	(_timer_autodose&0ffh)
 16437  136B  0020               	movlb 0	; select bank0
 16438  136C  00A5               	movwf	(?_timeoutnever)
 16439  136D  3001               	movlw	0x2/2
 16440  136E  00A6               	movwf	(?_timeoutnever+1)
 16441  136F  31AA  222C  3192   	fcall	_timeoutnever
 16442                           	line	305
 16443                           	
 16444  1372                     l37445:	
 16445                           ;litterlanguage.c: 305: printf("Paused program\n");
 16446  1372  304F               	movlw	low(STR_27|8000h)
 16447  1373  0020               	movlb 0	; select bank0
 16448  1374  00AF               	movwf	(?_printf)
 16449  1375  3087               	movlw	high(STR_27|8000h)
 16450  1376  00B0               	movwf	((?_printf))+1
 16451  1377  3194  24A0  3192   	fcall	_printf
 16452                           	line	306
 16453                           ;litterlanguage.c: 306: } else {
 16454  137A  2C9A               	goto	l37495
 16455                           	
 16456  137B                     l4291:	
 16457                           	line	308
 16458                           ;litterlanguage.c: 308: if (error_overheat)
 16459  137B  1CF1               	btfss	(_error_overheat/8),(_error_overheat)&7
 16460  137C  2B7E               	goto	u10451
 16461  137D  2B7F               	goto	u10450
 16462  137E                     u10451:
 16463  137E  2B81               	goto	l37449
 16464  137F                     u10450:
 16465  137F  2C9F               	goto	l4290
 16466                           	line	309
 16467                           	
 16468  1380                     l37447:	
 16469                           ;litterlanguage.c: 309: return;
 16470  1380  2C9F               	goto	l4290
 16471                           	
 16472  1381                     l4293:	
 16473                           	line	310
 16474                           	
 16475  1381                     l37449:	
 16476                           ;litterlanguage.c: 310: printf("Resuming program\n");
 16477  1381  3091               	movlw	low(STR_28|8000h)
 16478  1382  00AF               	movwf	(?_printf)
 16479  1383  3086               	movlw	high(STR_28|8000h)
 16480  1384  00B0               	movwf	((?_printf))+1
 16481  1385  3194  24A0  3192   	fcall	_printf
 16482                           	line	312
 16483                           	
 16484  1388                     l37451:	
 16485                           ;litterlanguage.c: 312: if (context.wait != 0xFFFFFFFF)
 16486  1388  30FF               	movlw	0FFh
 16487  1389  0022               	movlb 2	; select bank2
 16488  138A  0624               	xorwf	3+(litterlanguage_pause@context)^0100h+01h,w
 16489  138B  1D03               	skipz
 16490  138C  2B97               	goto	u10465
 16491  138D  30FF               	movlw	0FFh
 16492  138E  0623               	xorwf	2+(litterlanguage_pause@context)^0100h+01h,w
 16493  138F  1D03               	skipz
 16494  1390  2B97               	goto	u10465
 16495  1391  30FF               	movlw	0FFh
 16496  1392  0622               	xorwf	1+(litterlanguage_pause@context)^0100h+01h,w
 16497  1393  1D03               	skipz
 16498  1394  2B97               	goto	u10465
 16499  1395  30FF               	movlw	0FFh
 16500  1396  0621               	xorwf	0+(litterlanguage_pause@context)^0100h+01h,w
 16501  1397                     u10465:
 16502  1397  1903               	skipnz
 16503  1398  2B9A               	goto	u10461
 16504  1399  2B9B               	goto	u10460
 16505  139A                     u10461:
 16506  139A  2BB1               	goto	l37455
 16507  139B                     u10460:
 16508                           	line	313
 16509                           	
 16510  139B                     l37453:	
 16511                           ;litterlanguage.c: 313: settimeout(&timer_waitins, context.wait);
 16512  139B  306A               	movlw	(_timer_waitins&0ffh)
 16513  139C  0020               	movlb 0	; select bank0
 16514  139D  00AD               	movwf	(?_settimeout)
 16515  139E  3001               	movlw	0x2/2
 16516  139F  00AE               	movwf	(?_settimeout+1)
 16517  13A0  3001               	movlw	(01h)
 16518  13A1  3E20               	addlw	litterlanguage_pause@context&0ffh
 16519  13A2  0086               	movwf	fsr1l
 16520  13A3  3001               	movlw 1	; select bank2/3
 16521  13A4  0087               	movwf fsr1h	
 16522                           	
 16523  13A5  3F40               	moviw	[0]fsr1
 16524  13A6  00AF               	movwf	0+(?_settimeout)+02h
 16525  13A7  3F41               	moviw	[1]fsr1
 16526  13A8  00B0               	movwf	1+(?_settimeout)+02h
 16527  13A9  3F42               	moviw	[2]fsr1
 16528  13AA  00B1               	movwf	2+(?_settimeout)+02h
 16529  13AB  3F43               	moviw	[3]fsr1
 16530  13AC  00B2               	movwf	3+(?_settimeout)+02h
 16531  13AD  31A1  2147  3192   	fcall	_settimeout
 16532  13B0  2BB1               	goto	l37455
 16533                           	
 16534  13B1                     l4294:	
 16535                           	line	314
 16536                           	
 16537  13B1                     l37455:	
 16538                           ;litterlanguage.c: 314: if (error_fill) {
 16539  13B1  1FF0               	btfss	(_error_fill/8),(_error_fill)&7
 16540  13B2  2BB4               	goto	u10471
 16541  13B3  2BB5               	goto	u10470
 16542  13B4                     u10471:
 16543  13B4  2BD2               	goto	l37463
 16544  13B5                     u10470:
 16545                           	line	315
 16546                           	
 16547  13B5                     l37457:	
 16548                           ;litterlanguage.c: 315: error_fill = 0;
 16549  13B5  13F0               	bcf	(_error_fill/8),(_error_fill)&7
 16550                           	line	316
 16551                           	
 16552  13B6                     l37459:	
 16553                           ;litterlanguage.c: 316: litterlanguage_event(1, error_fill);
 16554  13B6  3000               	movlw	0
 16555  13B7  1BF0               	btfsc	(_error_fill/8),(_error_fill)&7
 16556  13B8  3001               	movlw	1
 16557  13B9  0020               	movlb 0	; select bank0
 16558  13BA  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16559  13BB  084F               	movf	(??_litterlanguage_pause+0)+0,w
 16560  13BC  00A1               	movwf	(?_litterlanguage_event)
 16561  13BD  3001               	movlw	(01h)
 16562  13BE  3198  2000  3192   	fcall	_litterlanguage_event
 16563                           	line	317
 16564                           	
 16565  13C1                     l37461:	
 16566                           ;litterlanguage.c: 317: settimeout(&timer_fill, ((3*60+15)*((((4UL * (1000UL * ((1000UL)
                                 ))))/4)/8)));
 16567  13C1  30E9               	movlw	(_timer_fill&0ffh)
 16568  13C2  0020               	movlb 0	; select bank0
 16569  13C3  00AD               	movwf	(?_settimeout)
 16570  13C4  3000               	movlw	0x1/2
 16571  13C5  00AE               	movwf	(?_settimeout+1)
 16572  13C6  3001               	movlw	01h
 16573  13C7  00B2               	movwf	3+(?_settimeout)+02h
 16574  13C8  3073               	movlw	073h
 16575  13C9  00B1               	movwf	2+(?_settimeout)+02h
 16576  13CA  30EE               	movlw	0EEh
 16577  13CB  00B0               	movwf	1+(?_settimeout)+02h
 16578  13CC  30D8               	movlw	0D8h
 16579  13CD  00AF               	movwf	0+(?_settimeout)+02h
 16580                           
 16581  13CE  31A1  2147  3192   	fcall	_settimeout
 16582                           	line	318
 16583                           ;litterlanguage.c: 318: } else if (context.fill != 0xFFFFFFFF)
 16584  13D1  2BFC               	goto	l37467
 16585                           	
 16586  13D2                     l4295:	
 16587                           	
 16588  13D2                     l37463:	
 16589  13D2  30FF               	movlw	0FFh
 16590  13D3  0022               	movlb 2	; select bank2
 16591  13D4  0628               	xorwf	3+(litterlanguage_pause@context)^0100h+05h,w
 16592  13D5  1D03               	skipz
 16593  13D6  2BE1               	goto	u10485
 16594  13D7  30FF               	movlw	0FFh
 16595  13D8  0627               	xorwf	2+(litterlanguage_pause@context)^0100h+05h,w
 16596  13D9  1D03               	skipz
 16597  13DA  2BE1               	goto	u10485
 16598  13DB  30FF               	movlw	0FFh
 16599  13DC  0626               	xorwf	1+(litterlanguage_pause@context)^0100h+05h,w
 16600  13DD  1D03               	skipz
 16601  13DE  2BE1               	goto	u10485
 16602  13DF  30FF               	movlw	0FFh
 16603  13E0  0625               	xorwf	0+(litterlanguage_pause@context)^0100h+05h,w
 16604  13E1                     u10485:
 16605  13E1  1903               	skipnz
 16606  13E2  2BE4               	goto	u10481
 16607  13E3  2BE5               	goto	u10480
 16608  13E4                     u10481:
 16609  13E4  2BFC               	goto	l37467
 16610  13E5                     u10480:
 16611                           	line	319
 16612                           	
 16613  13E5                     l37465:	
 16614                           ;litterlanguage.c: 319: settimeout(&timer_fill, context.fill);
 16615  13E5  30E9               	movlw	(_timer_fill&0ffh)
 16616  13E6  0020               	movlb 0	; select bank0
 16617  13E7  00AD               	movwf	(?_settimeout)
 16618  13E8  3000               	movlw	0x1/2
 16619  13E9  00AE               	movwf	(?_settimeout+1)
 16620  13EA  3005               	movlw	(05h)
 16621  13EB  3E20               	addlw	litterlanguage_pause@context&0ffh
 16622  13EC  0086               	movwf	fsr1l
 16623  13ED  3001               	movlw 1	; select bank2/3
 16624  13EE  0087               	movwf fsr1h	
 16625                           	
 16626  13EF  3F40               	moviw	[0]fsr1
 16627  13F0  00AF               	movwf	0+(?_settimeout)+02h
 16628  13F1  3F41               	moviw	[1]fsr1
 16629  13F2  00B0               	movwf	1+(?_settimeout)+02h
 16630  13F3  3F42               	moviw	[2]fsr1
 16631  13F4  00B1               	movwf	2+(?_settimeout)+02h
 16632  13F5  3F43               	moviw	[3]fsr1
 16633  13F6  00B2               	movwf	3+(?_settimeout)+02h
 16634  13F7  31A1  2147  3192   	fcall	_settimeout
 16635  13FA  2BFC               	goto	l37467
 16636                           	
 16637  13FB                     l4297:	
 16638  13FB  2BFC               	goto	l37467
 16639                           	line	320
 16640                           	
 16641  13FC                     l4296:	
 16642                           	
 16643  13FC                     l37467:	
 16644                           ;litterlanguage.c: 320: if (error_drain) {
 16645  13FC  1EF0               	btfss	(_error_drain/8),(_error_drain)&7
 16646  13FD  2BFF               	goto	u10491
 16647  13FE  2C00               	goto	u10490
 16648  13FF                     u10491:
 16649  13FF  2C1D               	goto	l37475
 16650  1400                     u10490:
 16651                           	line	321
 16652                           	
 16653  1400                     l37469:	
 16654                           ;litterlanguage.c: 321: error_drain = 0;
 16655  1400  12F0               	bcf	(_error_drain/8),(_error_drain)&7
 16656                           	line	322
 16657                           	
 16658  1401                     l37471:	
 16659                           ;litterlanguage.c: 322: litterlanguage_event(2, error_drain);
 16660  1401  3000               	movlw	0
 16661  1402  1AF0               	btfsc	(_error_drain/8),(_error_drain)&7
 16662  1403  3001               	movlw	1
 16663  1404  0020               	movlb 0	; select bank0
 16664  1405  00CF               	movwf	(??_litterlanguage_pause+0)+0
 16665  1406  084F               	movf	(??_litterlanguage_pause+0)+0,w
 16666  1407  00A1               	movwf	(?_litterlanguage_event)
 16667  1408  3002               	movlw	(02h)
 16668  1409  3198  2000  3192   	fcall	_litterlanguage_event
 16669                           	line	323
 16670                           	
 16671  140C                     l37473:	
 16672                           ;litterlanguage.c: 323: settimeout(&timer_drain, ((0*60+10)*((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8)));
 16673  140C  30E3               	movlw	(_timer_drain&0ffh)
 16674  140D  0020               	movlb 0	; select bank0
 16675  140E  00AD               	movwf	(?_settimeout)
 16676  140F  3000               	movlw	0x1/2
 16677  1410  00AE               	movwf	(?_settimeout+1)
 16678  1411  3000               	movlw	0
 16679  1412  00B2               	movwf	3+(?_settimeout)+02h
 16680  1413  3013               	movlw	013h
 16681  1414  00B1               	movwf	2+(?_settimeout)+02h
 16682  1415  3012               	movlw	012h
 16683  1416  00B0               	movwf	1+(?_settimeout)+02h
 16684  1417  30D0               	movlw	0D0h
 16685  1418  00AF               	movwf	0+(?_settimeout)+02h
 16686                           
 16687  1419  31A1  2147  3192   	fcall	_settimeout
 16688                           	line	324
 16689                           ;litterlanguage.c: 324: } else if (context.drain != 0xFFFFFFFF)
 16690  141C  2C47               	goto	l37479
 16691                           	
 16692  141D                     l4298:	
 16693                           	
 16694  141D                     l37475:	
 16695  141D  30FF               	movlw	0FFh
 16696  141E  0022               	movlb 2	; select bank2
 16697  141F  062C               	xorwf	3+(litterlanguage_pause@context)^0100h+09h,w
 16698  1420  1D03               	skipz
 16699  1421  2C2C               	goto	u10505
 16700  1422  30FF               	movlw	0FFh
 16701  1423  062B               	xorwf	2+(litterlanguage_pause@context)^0100h+09h,w
 16702  1424  1D03               	skipz
 16703  1425  2C2C               	goto	u10505
 16704  1426  30FF               	movlw	0FFh
 16705  1427  062A               	xorwf	1+(litterlanguage_pause@context)^0100h+09h,w
 16706  1428  1D03               	skipz
 16707  1429  2C2C               	goto	u10505
 16708  142A  30FF               	movlw	0FFh
 16709  142B  0629               	xorwf	0+(litterlanguage_pause@context)^0100h+09h,w
 16710  142C                     u10505:
 16711  142C  1903               	skipnz
 16712  142D  2C2F               	goto	u10501
 16713  142E  2C30               	goto	u10500
 16714  142F                     u10501:
 16715  142F  2C47               	goto	l37479
 16716  1430                     u10500:
 16717                           	line	325
 16718                           	
 16719  1430                     l37477:	
 16720                           ;litterlanguage.c: 325: settimeout(&timer_drain, context.drain);
 16721  1430  30E3               	movlw	(_timer_drain&0ffh)
 16722  1431  0020               	movlb 0	; select bank0
 16723  1432  00AD               	movwf	(?_settimeout)
 16724  1433  3000               	movlw	0x1/2
 16725  1434  00AE               	movwf	(?_settimeout+1)
 16726  1435  3009               	movlw	(09h)
 16727  1436  3E20               	addlw	litterlanguage_pause@context&0ffh
 16728  1437  0086               	movwf	fsr1l
 16729  1438  3001               	movlw 1	; select bank2/3
 16730  1439  0087               	movwf fsr1h	
 16731                           	
 16732  143A  3F40               	moviw	[0]fsr1
 16733  143B  00AF               	movwf	0+(?_settimeout)+02h
 16734  143C  3F41               	moviw	[1]fsr1
 16735  143D  00B0               	movwf	1+(?_settimeout)+02h
 16736  143E  3F42               	moviw	[2]fsr1
 16737  143F  00B1               	movwf	2+(?_settimeout)+02h
 16738  1440  3F43               	moviw	[3]fsr1
 16739  1441  00B2               	movwf	3+(?_settimeout)+02h
 16740  1442  31A1  2147  3192   	fcall	_settimeout
 16741  1445  2C47               	goto	l37479
 16742                           	
 16743  1446                     l4300:	
 16744  1446  2C47               	goto	l37479
 16745                           	line	326
 16746                           	
 16747  1447                     l4299:	
 16748                           	
 16749  1447                     l37479:	
 16750                           ;litterlanguage.c: 326: if (context.autodose != 0xFFFFFFFF)
 16751  1447  30FF               	movlw	0FFh
 16752  1448  0022               	movlb 2	; select bank2
 16753  1449  0630               	xorwf	3+(litterlanguage_pause@context)^0100h+0Dh,w
 16754  144A  1D03               	skipz
 16755  144B  2C56               	goto	u10515
 16756  144C  30FF               	movlw	0FFh
 16757  144D  062F               	xorwf	2+(litterlanguage_pause@context)^0100h+0Dh,w
 16758  144E  1D03               	skipz
 16759  144F  2C56               	goto	u10515
 16760  1450  30FF               	movlw	0FFh
 16761  1451  062E               	xorwf	1+(litterlanguage_pause@context)^0100h+0Dh,w
 16762  1452  1D03               	skipz
 16763  1453  2C56               	goto	u10515
 16764  1454  30FF               	movlw	0FFh
 16765  1455  062D               	xorwf	0+(litterlanguage_pause@context)^0100h+0Dh,w
 16766  1456                     u10515:
 16767  1456  1903               	skipnz
 16768  1457  2C59               	goto	u10511
 16769  1458  2C5A               	goto	u10510
 16770  1459                     u10511:
 16771  1459  2C70               	goto	l37483
 16772  145A                     u10510:
 16773                           	line	327
 16774                           	
 16775  145A                     l37481:	
 16776                           ;litterlanguage.c: 327: settimeout(&timer_autodose, context.autodose);
 16777  145A  3064               	movlw	(_timer_autodose&0ffh)
 16778  145B  0020               	movlb 0	; select bank0
 16779  145C  00AD               	movwf	(?_settimeout)
 16780  145D  3001               	movlw	0x2/2
 16781  145E  00AE               	movwf	(?_settimeout+1)
 16782  145F  300D               	movlw	(0Dh)
 16783  1460  3E20               	addlw	litterlanguage_pause@context&0ffh
 16784  1461  0086               	movwf	fsr1l
 16785  1462  3001               	movlw 1	; select bank2/3
 16786  1463  0087               	movwf fsr1h	
 16787                           	
 16788  1464  3F40               	moviw	[0]fsr1
 16789  1465  00AF               	movwf	0+(?_settimeout)+02h
 16790  1466  3F41               	moviw	[1]fsr1
 16791  1467  00B0               	movwf	1+(?_settimeout)+02h
 16792  1468  3F42               	moviw	[2]fsr1
 16793  1469  00B1               	movwf	2+(?_settimeout)+02h
 16794  146A  3F43               	moviw	[3]fsr1
 16795  146B  00B2               	movwf	3+(?_settimeout)+02h
 16796  146C  31A1  2147  3192   	fcall	_settimeout
 16797  146F  2C70               	goto	l37483
 16798                           	
 16799  1470                     l4301:	
 16800                           	line	329
 16801                           	
 16802  1470                     l37483:	
 16803                           ;litterlanguage.c: 329: set_Bowl(context.bowl);
 16804  1470  0022               	movlb 2	; select bank2
 16805  1471  0820               	movf	(litterlanguage_pause@context)^0100h,w
 16806  1472  3903               	andlw	(1<<2)-1
 16807  1473  31AA  22FF  3192   	fcall	_set_Bowl
 16808                           	line	330
 16809                           	
 16810  1476                     l37485:	
 16811                           ;litterlanguage.c: 330: set_Arm(context.arm);
 16812  1476  0022               	movlb 2	; select bank2
 16813  1477  0C20               	rrf	(litterlanguage_pause@context)^0100h,w
 16814  1478  0C89               	rrf	wreg,f
 16815  1479  3903               	andlw	(1<<2)-1
 16816  147A  31AB  2323  3192   	fcall	_set_Arm
 16817                           	line	331
 16818                           	
 16819  147D                     l37487:	
 16820                           ;litterlanguage.c: 331: water_fill(context.water);
 16821  147D  0022               	movlb 2	; select bank2
 16822  147E  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 16823  147F  3901               	andlw	(1<<1)-1
 16824  1480  31A9  217E  3192   	fcall	_water_fill
 16825                           	line	332
 16826                           	
 16827  1483                     l37489:	
 16828                           ;litterlanguage.c: 332: set_Dosage(context.dosage);
 16829  1483  0022               	movlb 2	; select bank2
 16830  1484  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 16831  1485  0C89               	rrf	wreg,f
 16832  1486  0C89               	rrf	wreg,f
 16833  1487  3901               	andlw	(1<<1)-1
 16834  1488  31A8  20ED  3192   	fcall	_set_Dosage
 16835                           	line	333
 16836                           	
 16837  148B                     l37491:	
 16838                           ;litterlanguage.c: 333: set_Pump(context.pump);
 16839  148B  0022               	movlb 2	; select bank2
 16840  148C  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 16841  148D  0C89               	rrf	wreg,f
 16842  148E  3901               	andlw	(1<<1)-1
 16843  148F  31A8  20FE  3192   	fcall	_set_Pump
 16844                           	line	334
 16845                           	
 16846  1492                     l37493:	
 16847                           ;litterlanguage.c: 334: set_Dryer(context.dryer);
 16848  1492  0022               	movlb 2	; select bank2
 16849  1493  0D20               	rlf	(litterlanguage_pause@context)^0100h,w
 16850  1494  0D20               	rlf	(litterlanguage_pause@context)^0100h,w
 16851  1495  3901               	andlw	1
 16852  1496  31A9  210F  3192   	fcall	_set_Dryer
 16853  1499  2C9A               	goto	l37495
 16854                           	line	335
 16855                           	
 16856  149A                     l4292:	
 16857                           	line	336
 16858                           	
 16859  149A                     l37495:	
 16860                           ;litterlanguage.c: 335: }
 16861                           ;litterlanguage.c: 336: paused = pause;
 16862  149A  12F1               	bcf	(_paused/8),(_paused)&7
 16863  149B  0020               	movlb 0	; select bank0
 16864  149C  1C50               	btfss	(litterlanguage_pause@pause),0
 16865  149D  2C9F               	goto	u10525
 16866  149E  16F1               	bsf	(_paused/8),(_paused)&7
 16867  149F                     u10525:
 16868                           
 16869                           	line	337
 16870                           	
 16871  149F                     l4290:	
 16872  149F  0008               	return
 16873                           	opt stack 0
 16874                           GLOBAL	__end_of_litterlanguage_pause
 16875  14A0                     	__end_of_litterlanguage_pause:
 16876 ;; =============== function _litterlanguage_pause ends ============
 16877                           
 16878                           	signat	_litterlanguage_pause,4216
 16879                           	global	_litterlanguage_start
 16880                           psect	text3245,local,class=CODE,delta=2
 16881                           global __ptext3245
 16882  094C                     __ptext3245:
 16883                           
 16884 ;; *************** function _litterlanguage_start *****************
 16885 ;; Defined at:
 16886 ;;		line 235 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 16887 ;; Parameters:    Size  Location     Type
 16888 ;;  wet             1    wreg     unsigned char 
 16889 ;; Auto vars:     Size  Location     Type
 16890 ;;  wet             1   48[BANK0 ] unsigned char 
 16891 ;; Return value:  Size  Location     Type
 16892 ;;		None               void
 16893 ;; Registers used:
 16894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16895 ;; Tracked objects:
 16896 ;;		On entry : 0/0
 16897 ;;		On exit  : 0/0
 16898 ;;		Unchanged: 0/0
 16899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16901 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16903 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16904 ;;Total ram usage:        3 bytes
 16905 ;; Hardware stack levels used:    1
 16906 ;; Hardware stack levels required when called:    5
 16907 ;; This function calls:
 16908 ;;		_printtime
 16909 ;;		_printf
 16910 ;; This function is called by:
 16911 ;;		_userinterface_work
 16912 ;;		_start_short
 16913 ;;		_start_long
 16914 ;; This function uses a non-reentrant model
 16915 ;;
 16916                           psect	text3245
 16917                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 16918                           	line	235
 16919                           	global	__size_of_litterlanguage_start
 16920  0040                     	__size_of_litterlanguage_start	equ	__end_of_litterlanguage_start-_litterlanguage_start
 16921                           	
 16922  094C                     _litterlanguage_start:	
 16923                           	opt	stack 8
 16924                           ; Regs used in _litterlanguage_start: [wreg-status,0+pclath+cstack]
 16925                           ;litterlanguage_start@wet stored from wreg
 16926                           	line	237
 16927  094C  0020               	movlb 0	; select bank0
 16928  094D  00D1               	movwf	(litterlanguage_start@wet)
 16929                           	
 16930  094E                     l37381:	
 16931                           ;litterlanguage.c: 236: extern const struct instruction washprogram[];
 16932                           ;litterlanguage.c: 237: if (ins_state == 0) {
 16933  094E  08E5               	movf	(_ins_state),f
 16934  094F  1D03               	skipz
 16935  0950  2952               	goto	u10401
 16936  0951  2953               	goto	u10400
 16937  0952                     u10401:
 16938  0952  298B               	goto	l4281
 16939  0953                     u10400:
 16940                           	line	238
 16941                           	
 16942  0953                     l37383:	
 16943                           ;litterlanguage.c: 238: printtime();
 16944  0953  31AB  23ED  3189   	fcall	_printtime
 16945                           	line	239
 16946                           	
 16947  0956                     l37385:	
 16948                           ;litterlanguage.c: 239: printf("Starting %s program\n", wet?"wet":"dry");
 16949  0956  0020               	movlb 0	; select bank0
 16950  0957  08D1               	movf	(litterlanguage_start@wet),f
 16951  0958  1D03               	skipz
 16952  0959  295B               	goto	u10411
 16953  095A  295C               	goto	u10410
 16954  095B                     u10411:
 16955  095B  2961               	goto	l37389
 16956  095C                     u10410:
 16957                           	
 16958  095C                     l37387:	
 16959  095C  303E               	movlw	low(STR_26|8000h)
 16960  095D  00CF               	movwf	(_litterlanguage_start$5890)
 16961  095E  3089               	movlw	high(STR_26|8000h)
 16962  095F  00D0               	movwf	((_litterlanguage_start$5890))+1
 16963  0960  2966               	goto	l37391
 16964                           	
 16965  0961                     l4275:	
 16966                           	
 16967  0961                     l37389:	
 16968  0961  3036               	movlw	low(STR_25|8000h)
 16969  0962  00CF               	movwf	(_litterlanguage_start$5890)
 16970  0963  3089               	movlw	high(STR_25|8000h)
 16971  0964  00D0               	movwf	((_litterlanguage_start$5890))+1
 16972  0965  2966               	goto	l37391
 16973                           	
 16974  0966                     l4277:	
 16975                           	
 16976  0966                     l37391:	
 16977  0966  307E               	movlw	low(STR_24|8000h)
 16978  0967  00AF               	movwf	(?_printf)
 16979  0968  3085               	movlw	high(STR_24|8000h)
 16980  0969  00B0               	movwf	((?_printf))+1
 16981  096A  0850               	movf	(_litterlanguage_start$5890+1),w
 16982  096B  01B2               	clrf	(1+?_printf+02h)
 16983  096C  07B2               	addwf	(1+?_printf+02h)
 16984  096D  084F               	movf	(_litterlanguage_start$5890),w
 16985  096E  01B1               	clrf	(0+?_printf+02h)
 16986  096F  07B1               	addwf	(0+?_printf+02h)
 16987                           
 16988  0970  3194  24A0  3189   	fcall	_printf
 16989                           	line	240
 16990                           ;litterlanguage.c: 240: switch (prg_source) {
 16991  0973  297B               	goto	l37397
 16992                           	line	241
 16993                           ;litterlanguage.c: 241: case 0:
 16994                           	
 16995  0974                     l4279:	
 16996                           	line	242
 16997                           	
 16998  0974                     l37393:	
 16999                           ;litterlanguage.c: 242: ins_pointer = &washprogram[0];
 17000  0974  3013               	movlw	low(_washprogram|8000h)
 17001  0975  0020               	movlb 0	; select bank0
 17002  0976  00EB               	movwf	(_ins_pointer)
 17003  0977  3082               	movlw	high(_washprogram|8000h)
 17004  0978  00EC               	movwf	((_ins_pointer))+1
 17005                           	line	243
 17006                           ;litterlanguage.c: 243: break;
 17007  0979  2981               	goto	l4280
 17008                           	line	244
 17009                           	
 17010  097A                     l37395:	
 17011                           ;litterlanguage.c: 244: }
 17012  097A  2981               	goto	l4280
 17013                           	line	240
 17014                           	
 17015  097B                     l4278:	
 17016                           	
 17017  097B                     l37397:	
 17018  097B  0021               	movlb 1	; select bank1
 17019  097C  085A               	movf	(_prg_source)^080h,w
 17020                           	; Switch size 1, requested type "space"
 17021                           ; Number of cases is 1, Range of values is 0 to 0
 17022                           ; switch strategies available:
 17023                           ; Name         Instructions Cycles
 17024                           ; simple_byte            4     3 (average)
 17025                           ; direct_byte            8     6 (fixed)
 17026                           ; jumptable            260     6 (fixed)
 17027                           ; rangetable             5     4 (fixed)
 17028                           ; spacedrange            7     6 (fixed)
 17029                           ; locatedrange           1     3 (fixed)
 17030                           ;	Chosen strategy is simple_byte
 17031                           
 17032                           	opt asmopt_off
 17033  097D  3A00               	xorlw	0^0	; case 0
 17034  097E  1903               	skipnz
 17035  097F  2974               	goto	l37393
 17036  0980  2981               	goto	l4280
 17037                           	opt asmopt_on
 17038                           
 17039                           	line	244
 17040                           	
 17041  0981                     l4280:	
 17042                           	line	245
 17043                           ;litterlanguage.c: 245: wet_program = wet;
 17044  0981  0020               	movlb 0	; select bank0
 17045  0982  126D               	bcf	(_wet_program/8),(_wet_program)&7
 17046  0983  1C51               	btfss	(litterlanguage_start@wet),0
 17047  0984  2986               	goto	u10425
 17048  0985  166D               	bsf	(_wet_program/8),(_wet_program)&7
 17049  0986                     u10425:
 17050                           
 17051                           	line	246
 17052                           	
 17053  0986                     l37399:	
 17054                           ;litterlanguage.c: 246: ins_state = 1 ;
 17055  0986  0020               	movlb 0	; select bank0
 17056  0987  01E5               	clrf	(_ins_state)
 17057  0988  1403               	bsf	status,0
 17058  0989  0DE5               	rlf	(_ins_state),f
 17059  098A  298B               	goto	l4281
 17060                           	line	247
 17061                           	
 17062  098B                     l4273:	
 17063                           	line	248
 17064                           	
 17065  098B                     l4281:	
 17066  098B  0008               	return
 17067                           	opt stack 0
 17068                           GLOBAL	__end_of_litterlanguage_start
 17069  098C                     	__end_of_litterlanguage_start:
 17070 ;; =============== function _litterlanguage_start ends ============
 17071                           
 17072                           	signat	_litterlanguage_start,4216
 17073                           	global	_litterlanguage_cleanup
 17074                           psect	text3246,local,class=CODE,delta=2
 17075                           global __ptext3246
 17076  2D4B                     __ptext3246:
 17077                           
 17078 ;; *************** function _litterlanguage_cleanup *****************
 17079 ;; Defined at:
 17080 ;;		line 435 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17081 ;; Parameters:    Size  Location     Type
 17082 ;;  wet             1    wreg     unsigned char 
 17083 ;; Auto vars:     Size  Location     Type
 17084 ;;  wet             1   48[BANK0 ] unsigned char 
 17085 ;; Return value:  Size  Location     Type
 17086 ;;		None               void
 17087 ;; Registers used:
 17088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17089 ;; Tracked objects:
 17090 ;;		On entry : 0/0
 17091 ;;		On exit  : 0/0
 17092 ;;		Unchanged: 0/0
 17093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17095 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17097 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17098 ;;Total ram usage:        3 bytes
 17099 ;; Hardware stack levels used:    1
 17100 ;; Hardware stack levels required when called:    5
 17101 ;; This function calls:
 17102 ;;		_printtime
 17103 ;;		_printf
 17104 ;; This function is called by:
 17105 ;;		_litterlanguage_init
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           psect	text3246
 17109                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17110                           	line	435
 17111                           	global	__size_of_litterlanguage_cleanup
 17112  0038                     	__size_of_litterlanguage_cleanup	equ	__end_of_litterlanguage_cleanup-_litterlanguage_cl
                                 eanup
 17113                           	
 17114  2D4B                     _litterlanguage_cleanup:	
 17115                           	opt	stack 9
 17116                           ; Regs used in _litterlanguage_cleanup: [wreg-status,0+pclath+cstack]
 17117                           ;litterlanguage_cleanup@wet stored from wreg
 17118                           	line	437
 17119  2D4B  0020               	movlb 0	; select bank0
 17120  2D4C  00D1               	movwf	(litterlanguage_cleanup@wet)
 17121                           	
 17122  2D4D                     l37361:	
 17123                           ;litterlanguage.c: 436: extern const struct instruction cleanupprogram[];
 17124                           ;litterlanguage.c: 437: if (ins_state == 0) {
 17125  2D4D  08E5               	movf	(_ins_state),f
 17126  2D4E  1D03               	skipz
 17127  2D4F  2D51               	goto	u10371
 17128  2D50  2D52               	goto	u10370
 17129  2D51                     u10371:
 17130  2D51  2D82               	goto	l4335
 17131  2D52                     u10370:
 17132                           	line	438
 17133                           	
 17134  2D52                     l37363:	
 17135                           ;litterlanguage.c: 438: printtime();
 17136  2D52  31AB  23ED  31AD   	fcall	_printtime
 17137                           	line	439
 17138                           	
 17139  2D55                     l37365:	
 17140                           ;litterlanguage.c: 439: printf("Starting %s cleanup\n", wet?"wet":"dry");
 17141  2D55  0020               	movlb 0	; select bank0
 17142  2D56  08D1               	movf	(litterlanguage_cleanup@wet),f
 17143  2D57  1D03               	skipz
 17144  2D58  2D5A               	goto	u10381
 17145  2D59  2D5B               	goto	u10380
 17146  2D5A                     u10381:
 17147  2D5A  2D60               	goto	l37369
 17148  2D5B                     u10380:
 17149                           	
 17150  2D5B                     l37367:	
 17151  2D5B  303E               	movlw	low(STR_38|8000h)
 17152  2D5C  00CF               	movwf	(_litterlanguage_cleanup$5941)
 17153  2D5D  3089               	movlw	high(STR_38|8000h)
 17154  2D5E  00D0               	movwf	((_litterlanguage_cleanup$5941))+1
 17155  2D5F  2D65               	goto	l37371
 17156                           	
 17157  2D60                     l4332:	
 17158                           	
 17159  2D60                     l37369:	
 17160  2D60  3036               	movlw	low(STR_37|8000h)
 17161  2D61  00CF               	movwf	(_litterlanguage_cleanup$5941)
 17162  2D62  3089               	movlw	high(STR_37|8000h)
 17163  2D63  00D0               	movwf	((_litterlanguage_cleanup$5941))+1
 17164  2D64  2D65               	goto	l37371
 17165                           	
 17166  2D65                     l4334:	
 17167                           	
 17168  2D65                     l37371:	
 17169  2D65  3093               	movlw	low(STR_36|8000h)
 17170  2D66  00AF               	movwf	(?_printf)
 17171  2D67  3085               	movlw	high(STR_36|8000h)
 17172  2D68  00B0               	movwf	((?_printf))+1
 17173  2D69  0850               	movf	(_litterlanguage_cleanup$5941+1),w
 17174  2D6A  01B2               	clrf	(1+?_printf+02h)
 17175  2D6B  07B2               	addwf	(1+?_printf+02h)
 17176  2D6C  084F               	movf	(_litterlanguage_cleanup$5941),w
 17177  2D6D  01B1               	clrf	(0+?_printf+02h)
 17178  2D6E  07B1               	addwf	(0+?_printf+02h)
 17179                           
 17180  2D6F  3194  24A0  31AD   	fcall	_printf
 17181                           	line	440
 17182                           	
 17183  2D72                     l37373:	
 17184                           ;litterlanguage.c: 440: prg_source = 0;
 17185  2D72  0021               	movlb 1	; select bank1
 17186  2D73  01DA               	clrf	(_prg_source)^080h
 17187                           	line	441
 17188                           	
 17189  2D74                     l37375:	
 17190                           ;litterlanguage.c: 441: ins_pointer = &cleanupprogram[0];
 17191  2D74  30F2               	movlw	low(_cleanupprogram|8000h)
 17192  2D75  0020               	movlb 0	; select bank0
 17193  2D76  00EB               	movwf	(_ins_pointer)
 17194  2D77  3084               	movlw	high(_cleanupprogram|8000h)
 17195  2D78  00EC               	movwf	((_ins_pointer))+1
 17196                           	line	442
 17197                           	
 17198  2D79                     l37377:	
 17199                           ;litterlanguage.c: 442: wet_program = wet;
 17200  2D79  126D               	bcf	(_wet_program/8),(_wet_program)&7
 17201  2D7A  1C51               	btfss	(litterlanguage_cleanup@wet),0
 17202  2D7B  2D7D               	goto	u10395
 17203  2D7C  166D               	bsf	(_wet_program/8),(_wet_program)&7
 17204  2D7D                     u10395:
 17205                           
 17206                           	line	443
 17207                           	
 17208  2D7D                     l37379:	
 17209                           ;litterlanguage.c: 443: ins_state = 1 ;
 17210  2D7D  0020               	movlb 0	; select bank0
 17211  2D7E  01E5               	clrf	(_ins_state)
 17212  2D7F  1403               	bsf	status,0
 17213  2D80  0DE5               	rlf	(_ins_state),f
 17214  2D81  2D82               	goto	l4335
 17215                           	line	444
 17216                           	
 17217  2D82                     l4330:	
 17218                           	line	445
 17219                           	
 17220  2D82                     l4335:	
 17221  2D82  0008               	return
 17222                           	opt stack 0
 17223                           GLOBAL	__end_of_litterlanguage_cleanup
 17224  2D83                     	__end_of_litterlanguage_cleanup:
 17225 ;; =============== function _litterlanguage_cleanup ends ============
 17226                           
 17227                           	signat	_litterlanguage_cleanup,4216
 17228                           	global	_help
 17229                           	global	_echo
 17230                           psect	text3247,local,class=CODE,delta=2
 17231                           global __ptext3247
 17232  24BD                     __ptext3247:
 17233                           
 17234 ;; *************** function _echo *****************
 17235 ;; Defined at:
 17236 ;;		line 203 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;  argc            2   38[BANK0 ] int 
 17239 ;;  argv            1   40[BANK0 ] PTR PTR unsigned char 
 17240 ;;		 -> proc_line@argv(4), 
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;		None
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  2   38[BANK0 ] int 
 17245 ;; Registers used:
 17246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 0/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17252 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17255 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 17256 ;;Total ram usage:        5 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    4
 17259 ;; This function calls:
 17260 ;;		_strncmp
 17261 ;;		_printf
 17262 ;; This function is called by:
 17263 ;;		_proc_line
 17264 ;; This function uses a non-reentrant model
 17265 ;;
 17266                           psect	text3247
 17267                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 17268                           	line	203
 17269                           	global	__size_of_echo
 17270  007A                     	__size_of_echo	equ	__end_of_echo-_echo
 17271                           	
 17272  24BD                     _echo:	
 17273                           	opt	stack 8
 17274                           ; Regs used in _echo: [allreg]
 17275                           	line	204
 17276                           	
 17277  24BD                     l37307:	
 17278                           ;cmdline.c: 204: if (argc > 2)
 17279  24BD  0020               	movlb 0	; select bank0
 17280  24BE  0848               	movf	(echo@argc+1),w
 17281  24BF  3A80               	xorlw	80h
 17282  24C0  00FF               	movwf	btemp+1
 17283  24C1  3080               	movlw	(high(03h))^80h
 17284  24C2  027F               	subwf	btemp+1,w
 17285  24C3  1D03               	skipz
 17286  24C4  2CC7               	goto	u10305
 17287  24C5  3003               	movlw	low(03h)
 17288  24C6  0247               	subwf	(echo@argc),w
 17289  24C7                     u10305:
 17290                           
 17291  24C7  1C03               	skipc
 17292  24C8  2CCA               	goto	u10301
 17293  24C9  2CCB               	goto	u10300
 17294  24CA                     u10301:
 17295  24CA  2CD2               	goto	l37313
 17296  24CB                     u10300:
 17297                           	line	205
 17298                           	
 17299  24CB                     l37309:	
 17300                           ;cmdline.c: 205: return (-1);
 17301  24CB  30FF               	movlw	low(-1)
 17302  24CC  0020               	movlb 0	; select bank0
 17303  24CD  00C7               	movwf	(?_echo)
 17304  24CE  30FF               	movlw	high(-1)
 17305  24CF  00C8               	movwf	((?_echo))+1
 17306  24D0  2D36               	goto	l15153
 17307                           	
 17308  24D1                     l37311:	
 17309  24D1  2D36               	goto	l15153
 17310                           	
 17311  24D2                     l15152:	
 17312                           	line	207
 17313                           	
 17314  24D2                     l37313:	
 17315                           ;cmdline.c: 207: if (argc == 2) {
 17316  24D2  3002               	movlw	02h
 17317  24D3  0020               	movlb 0	; select bank0
 17318  24D4  0647               	xorwf	(echo@argc),w
 17319  24D5  0448               	iorwf	(echo@argc+1),w
 17320  24D6  1D03               	skipz
 17321  24D7  2CD9               	goto	u10311
 17322  24D8  2CDA               	goto	u10310
 17323  24D9                     u10311:
 17324  24D9  2D16               	goto	l37327
 17325  24DA                     u10310:
 17326                           	line	208
 17327                           	
 17328  24DA                     l37315:	
 17329                           ;cmdline.c: 208: if (!strncmp (argv[1], "on", (20)))
 17330  24DA  3048               	movlw	low(STR_106|8000h)
 17331  24DB  00A5               	movwf	(?_strncmp)
 17332  24DC  3089               	movlw	high(STR_106|8000h)
 17333  24DD  00A6               	movwf	((?_strncmp))+1
 17334  24DE  3014               	movlw	low(014h)
 17335  24DF  00A7               	movwf	0+(?_strncmp)+02h
 17336  24E0  3000               	movlw	high(014h)
 17337  24E1  00A8               	movwf	(0+(?_strncmp)+02h)+1
 17338  24E2  0849               	movf	(echo@argv),w
 17339  24E3  3E01               	addlw	01h
 17340  24E4  0086               	movwf	fsr1l
 17341  24E5  0187               	clrf fsr1h	
 17342                           	
 17343  24E6  0801               	movf	indf1,w
 17344  24E7  3190  2000  31A4   	fcall	_strncmp
 17345  24EA  0020               	movlb 0	; select bank0
 17346  24EB  0826               	movf	((1+(?_strncmp))),w
 17347  24EC  0425               	iorwf	((0+(?_strncmp))),w
 17348  24ED  1D03               	skipz
 17349  24EE  2CF0               	goto	u10321
 17350  24EF  2CF1               	goto	u10320
 17351  24F0                     u10321:
 17352  24F0  2CF5               	goto	l37319
 17353  24F1                     u10320:
 17354                           	line	209
 17355                           	
 17356  24F1                     l37317:	
 17357                           ;cmdline.c: 209: localecho = 1;
 17358  24F1  01EF               	clrf	(_localecho)
 17359  24F2  1403               	bsf	status,0
 17360  24F3  0DEF               	rlf	(_localecho),f
 17361  24F4  2D16               	goto	l37327
 17362                           	line	210
 17363                           	
 17364  24F5                     l15155:	
 17365                           	
 17366  24F5                     l37319:	
 17367                           ;cmdline.c: 210: else if (!strncmp (argv[1], "off", (20)))
 17368  24F5  3032               	movlw	low(STR_107|8000h)
 17369  24F6  00A5               	movwf	(?_strncmp)
 17370  24F7  3089               	movlw	high(STR_107|8000h)
 17371  24F8  00A6               	movwf	((?_strncmp))+1
 17372  24F9  3014               	movlw	low(014h)
 17373  24FA  00A7               	movwf	0+(?_strncmp)+02h
 17374  24FB  3000               	movlw	high(014h)
 17375  24FC  00A8               	movwf	(0+(?_strncmp)+02h)+1
 17376  24FD  0849               	movf	(echo@argv),w
 17377  24FE  3E01               	addlw	01h
 17378  24FF  0086               	movwf	fsr1l
 17379  2500  0187               	clrf fsr1h	
 17380                           	
 17381  2501  0801               	movf	indf1,w
 17382  2502  3190  2000  31A4   	fcall	_strncmp
 17383  2505  0020               	movlb 0	; select bank0
 17384  2506  0826               	movf	((1+(?_strncmp))),w
 17385  2507  0425               	iorwf	((0+(?_strncmp))),w
 17386  2508  1D03               	skipz
 17387  2509  2D0B               	goto	u10331
 17388  250A  2D0C               	goto	u10330
 17389  250B                     u10331:
 17390  250B  2D0E               	goto	l37323
 17391  250C                     u10330:
 17392                           	line	211
 17393                           	
 17394  250C                     l37321:	
 17395                           ;cmdline.c: 211: localecho = 0;
 17396  250C  01EF               	clrf	(_localecho)
 17397  250D  2D16               	goto	l37327
 17398                           	line	212
 17399                           	
 17400  250E                     l15157:	
 17401                           	line	213
 17402                           	
 17403  250E                     l37323:	
 17404                           ;cmdline.c: 212: else
 17405                           ;cmdline.c: 213: return (-1);
 17406  250E  30FF               	movlw	low(-1)
 17407  250F  00C7               	movwf	(?_echo)
 17408  2510  30FF               	movlw	high(-1)
 17409  2511  00C8               	movwf	((?_echo))+1
 17410  2512  2D36               	goto	l15153
 17411                           	
 17412  2513                     l37325:	
 17413  2513  2D36               	goto	l15153
 17414                           	
 17415  2514                     l15158:	
 17416  2514  2D16               	goto	l37327
 17417                           	
 17418  2515                     l15156:	
 17419  2515  2D16               	goto	l37327
 17420                           	line	214
 17421                           	
 17422  2516                     l15154:	
 17423                           	line	215
 17424                           	
 17425  2516                     l37327:	
 17426                           ;cmdline.c: 214: }
 17427                           ;cmdline.c: 215: printf("Echo: %s\n", localecho?"on":"off");
 17428  2516  08EF               	movf	(_localecho),f
 17429  2517  1D03               	skipz
 17430  2518  2D1A               	goto	u10341
 17431  2519  2D1B               	goto	u10340
 17432  251A                     u10341:
 17433  251A  2D20               	goto	l37331
 17434  251B                     u10340:
 17435                           	
 17436  251B                     l37329:	
 17437  251B  3032               	movlw	low(STR_110|8000h)
 17438  251C  00CA               	movwf	(_echo$17754)
 17439  251D  3089               	movlw	high(STR_110|8000h)
 17440  251E  00CB               	movwf	((_echo$17754))+1
 17441  251F  2D25               	goto	l37333
 17442                           	
 17443  2520                     l15160:	
 17444                           	
 17445  2520                     l37331:	
 17446  2520  3048               	movlw	low(STR_109|8000h)
 17447  2521  00CA               	movwf	(_echo$17754)
 17448  2522  3089               	movlw	high(STR_109|8000h)
 17449  2523  00CB               	movwf	((_echo$17754))+1
 17450  2524  2D25               	goto	l37333
 17451                           	
 17452  2525                     l15162:	
 17453                           	
 17454  2525                     l37333:	
 17455  2525  3072               	movlw	low(STR_108|8000h)
 17456  2526  00AF               	movwf	(?_printf)
 17457  2527  3088               	movlw	high(STR_108|8000h)
 17458  2528  00B0               	movwf	((?_printf))+1
 17459  2529  084B               	movf	(_echo$17754+1),w
 17460  252A  01B2               	clrf	(1+?_printf+02h)
 17461  252B  07B2               	addwf	(1+?_printf+02h)
 17462  252C  084A               	movf	(_echo$17754),w
 17463  252D  01B1               	clrf	(0+?_printf+02h)
 17464  252E  07B1               	addwf	(0+?_printf+02h)
 17465                           
 17466  252F  3194  24A0  31A4   	fcall	_printf
 17467                           	line	217
 17468                           	
 17469  2532                     l37335:	
 17470                           ;cmdline.c: 217: return (0);
 17471  2532  0020               	movlb 0	; select bank0
 17472  2533  01C7               	clrf	(?_echo)
 17473  2534  01C8               	clrf	(?_echo+1)
 17474  2535  2D36               	goto	l15153
 17475                           	
 17476  2536                     l37337:	
 17477                           	line	218
 17478                           	
 17479  2536                     l15153:	
 17480  2536  0008               	return
 17481                           	opt stack 0
 17482                           GLOBAL	__end_of_echo
 17483  2537                     	__end_of_echo:
 17484 ;; =============== function _echo ends ============
 17485                           
 17486                           	signat	_echo,8314
 17487                           psect	text3248,local,class=CODE,delta=2
 17488                           global __ptext3248
 17489  2025                     __ptext3248:
 17490                           
 17491 ;; *************** function _help *****************
 17492 ;; Defined at:
 17493 ;;		line 222 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;  argc            2   38[BANK0 ] int 
 17496 ;;  argv            1   40[BANK0 ] PTR PTR unsigned char 
 17497 ;;		 -> proc_line@argv(4), 
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;  index           2   44[BANK0 ] int 
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  2   38[BANK0 ] int 
 17502 ;; Registers used:
 17503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17509 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17510 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17512 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 17513 ;;Total ram usage:        8 bytes
 17514 ;; Hardware stack levels used:    1
 17515 ;; Hardware stack levels required when called:    4
 17516 ;; This function calls:
 17517 ;;		_printf
 17518 ;;		___bmul
 17519 ;; This function is called by:
 17520 ;;		_proc_line
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           psect	text3248
 17524                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 17525                           	line	222
 17526                           	global	__size_of_help
 17527  005F                     	__size_of_help	equ	__end_of_help-_help
 17528                           	
 17529  2025                     _help:	
 17530                           	opt	stack 8
 17531                           ; Regs used in _help: [allreg]
 17532                           	line	223
 17533                           	
 17534  2025                     l37339:	
 17535                           ;cmdline.c: 223: int index = 0;
 17536  2025  0020               	movlb 0	; select bank0
 17537  2026  01CD               	clrf	(help@index)
 17538  2027  01CE               	clrf	(help@index+1)
 17539                           	line	225
 17540                           	
 17541  2028                     l37341:	
 17542                           ;cmdline.c: 225: if (argc > 1)
 17543  2028  0848               	movf	(help@argc+1),w
 17544  2029  3A80               	xorlw	80h
 17545  202A  00FF               	movwf	btemp+1
 17546  202B  3080               	movlw	(high(02h))^80h
 17547  202C  027F               	subwf	btemp+1,w
 17548  202D  1D03               	skipz
 17549  202E  2831               	goto	u10355
 17550  202F  3002               	movlw	low(02h)
 17551  2030  0247               	subwf	(help@argc),w
 17552  2031                     u10355:
 17553                           
 17554  2031  1C03               	skipc
 17555  2032  2834               	goto	u10351
 17556  2033  2835               	goto	u10350
 17557  2034                     u10351:
 17558  2034  283C               	goto	l37347
 17559  2035                     u10350:
 17560                           	line	226
 17561                           	
 17562  2035                     l37343:	
 17563                           ;cmdline.c: 226: return (-1);
 17564  2035  30FF               	movlw	low(-1)
 17565  2036  0020               	movlb 0	; select bank0
 17566  2037  00C7               	movwf	(?_echo)
 17567  2038  30FF               	movlw	high(-1)
 17568  2039  00C8               	movwf	((?_echo))+1
 17569  203A  2883               	goto	l15166
 17570                           	
 17571  203B                     l37345:	
 17572  203B  2883               	goto	l15166
 17573                           	
 17574  203C                     l15165:	
 17575                           	line	228
 17576                           	
 17577  203C                     l37347:	
 17578                           ;cmdline.c: 228: printf("Known commands:\n");
 17579  203C  30E9               	movlw	low(STR_111|8000h)
 17580  203D  0020               	movlb 0	; select bank0
 17581  203E  00AF               	movwf	(?_printf)
 17582  203F  3086               	movlw	high(STR_111|8000h)
 17583  2040  00B0               	movwf	((?_printf))+1
 17584  2041  3194  24A0  31A0   	fcall	_printf
 17585                           	line	229
 17586                           ;cmdline.c: 229: while (commands[index].function) {
 17587  2044  2868               	goto	l37355
 17588                           	
 17589  2045                     l15168:	
 17590                           	line	230
 17591                           	
 17592  2045                     l37349:	
 17593                           ;cmdline.c: 230: printf("%s\n", (char*)commands[index].cmd);
 17594  2045  3009               	movlw	(09h)
 17595  2046  0020               	movlb 0	; select bank0
 17596  2047  00CA               	movwf	(??_help+0)+0
 17597  2048  084A               	movf	(??_help+0)+0,w
 17598  2049  00A1               	movwf	(?___bmul)
 17599  204A  084D               	movf	(help@index),w
 17600  204B  31A9  21DC  31A0   	fcall	___bmul
 17601  204E  3E16               	addlw	low(_commands|8000h)
 17602  204F  0020               	movlb 0	; select bank0
 17603  2050  00CB               	movwf	(_help$30523)
 17604  2051  3085               	movlw	high(_commands|8000h)
 17605  2052  1803               	skipnc
 17606  2053  0A89               	incf	wreg,f
 17607  2054  00CC               	movwf	1+(_help$30523)
 17608                           	
 17609  2055                     l37351:	
 17610                           ;cmdline.c: 230: printf("%s\n", (char*)commands[index].cmd);
 17611  2055  3078               	movlw	low(STR_112|8000h)
 17612  2056  00AF               	movwf	(?_printf)
 17613  2057  3088               	movlw	high(STR_112|8000h)
 17614  2058  00B0               	movwf	((?_printf))+1
 17615  2059  084C               	movf	(_help$30523+1),w
 17616  205A  01B2               	clrf	(1+?_printf+02h)
 17617  205B  07B2               	addwf	(1+?_printf+02h)
 17618  205C  084B               	movf	(_help$30523),w
 17619  205D  01B1               	clrf	(0+?_printf+02h)
 17620  205E  07B1               	addwf	(0+?_printf+02h)
 17621                           
 17622  205F  3194  24A0  31A0   	fcall	_printf
 17623                           	line	231
 17624                           	
 17625  2062                     l37353:	
 17626                           ;cmdline.c: 231: index++;
 17627  2062  3001               	movlw	low(01h)
 17628  2063  0020               	movlb 0	; select bank0
 17629  2064  07CD               	addwf	(help@index),f
 17630  2065  3000               	movlw	high(01h)
 17631  2066  3DCE               	addwfc	(help@index+1),f
 17632  2067  2868               	goto	l37355
 17633                           	line	232
 17634                           	
 17635  2068                     l15167:	
 17636                           	line	229
 17637                           	
 17638  2068                     l37355:	
 17639  2068  3009               	movlw	(09h)
 17640  2069  0020               	movlb 0	; select bank0
 17641  206A  00CA               	movwf	(??_help+0)+0
 17642  206B  084A               	movf	(??_help+0)+0,w
 17643  206C  00A1               	movwf	(?___bmul)
 17644  206D  084D               	movf	(help@index),w
 17645  206E  31A9  21DC  31A0   	fcall	___bmul
 17646  2071  3E08               	addlw	08h
 17647  2072  3E16               	addlw	low(_commands|8000h)
 17648  2073  0084               	movwf	fsr0l
 17649  2074  3085               	movlw	high(_commands|8000h)
 17650  2075  1803               	skipnc
 17651  2076  3E01               	addlw	1
 17652  2077  0085               	movwf	fsr0h
 17653  2078  0800               	movf	indf0,w ;code access
 17654  2079  3800               	iorlw	0
 17655  207A  1D03               	skipz
 17656  207B  287D               	goto	u10361
 17657  207C  287E               	goto	u10360
 17658  207D                     u10361:
 17659  207D  2845               	goto	l37349
 17660  207E                     u10360:
 17661  207E  287F               	goto	l37357
 17662                           	
 17663  207F                     l15169:	
 17664                           	line	234
 17665                           	
 17666  207F                     l37357:	
 17667                           ;cmdline.c: 232: }
 17668                           ;cmdline.c: 234: return (0);
 17669  207F  0020               	movlb 0	; select bank0
 17670  2080  01C7               	clrf	(?_echo)
 17671  2081  01C8               	clrf	(?_echo+1)
 17672  2082  2883               	goto	l15166
 17673                           	
 17674  2083                     l37359:	
 17675                           	line	235
 17676                           	
 17677  2083                     l15166:	
 17678  2083  0008               	return
 17679                           	opt stack 0
 17680                           GLOBAL	__end_of_help
 17681  2084                     	__end_of_help:
 17682 ;; =============== function _help ends ============
 17683                           
 17684                           	signat	_help,8314
 17685                           	global	_set_LED_Locked
 17686                           psect	text3249,local,class=CODE,delta=2
 17687                           global __ptext3249
 17688  28CE                     __ptext3249:
 17689                           
 17690 ;; *************** function _set_LED_Locked *****************
 17691 ;; Defined at:
 17692 ;;		line 325 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17693 ;; Parameters:    Size  Location     Type
 17694 ;;  pattern         1    wreg     unsigned char 
 17695 ;;  repeat          1   13[BANK0 ] unsigned char 
 17696 ;; Auto vars:     Size  Location     Type
 17697 ;;  pattern         1   16[BANK0 ] unsigned char 
 17698 ;; Return value:  Size  Location     Type
 17699 ;;		None               void
 17700 ;; Registers used:
 17701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17707 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17709 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17710 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17711 ;;Total ram usage:        4 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:    4
 17714 ;; This function calls:
 17715 ;;		_set_pacer
 17716 ;; This function is called by:
 17717 ;;		_update_display
 17718 ;; This function uses a non-reentrant model
 17719 ;;
 17720                           psect	text3249
 17721                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17722                           	line	325
 17723                           	global	__size_of_set_LED_Locked
 17724  000F                     	__size_of_set_LED_Locked	equ	__end_of_set_LED_Locked-_set_LED_Locked
 17725                           	
 17726  28CE                     _set_LED_Locked:	
 17727                           	opt	stack 9
 17728                           ; Regs used in _set_LED_Locked: [wreg+fsr1l-status,0+pclath+cstack]
 17729                           ;set_LED_Locked@pattern stored from wreg
 17730  28CE  0020               	movlb 0	; select bank0
 17731  28CF  00B1               	movwf	(set_LED_Locked@pattern)
 17732                           	line	326
 17733                           	
 17734  28D0                     l37305:	
 17735                           ;catgenie120.c: 326: set_pacer(2, pattern, repeat);
 17736  28D0  0831               	movf	(set_LED_Locked@pattern),w
 17737  28D1  00AF               	movwf	(??_set_LED_Locked+0)+0
 17738  28D2  082F               	movf	(??_set_LED_Locked+0)+0,w
 17739  28D3  00A9               	movwf	(?_set_pacer)
 17740  28D4  082E               	movf	(set_LED_Locked@repeat),w
 17741  28D5  00B0               	movwf	(??_set_LED_Locked+1)+0
 17742  28D6  0830               	movf	(??_set_LED_Locked+1)+0,w
 17743  28D7  00AA               	movwf	0+(?_set_pacer)+01h
 17744  28D8  3002               	movlw	(02h)
 17745  28D9  31A3  23CF  31A8   	fcall	_set_pacer
 17746                           	line	327
 17747                           	
 17748  28DC                     l10901:	
 17749  28DC  0008               	return
 17750                           	opt stack 0
 17751                           GLOBAL	__end_of_set_LED_Locked
 17752  28DD                     	__end_of_set_LED_Locked:
 17753 ;; =============== function _set_LED_Locked ends ============
 17754                           
 17755                           	signat	_set_LED_Locked,8312
 17756                           	global	_set_LED_Cat
 17757                           psect	text3250,local,class=CODE,delta=2
 17758                           global __ptext3250
 17759  28BF                     __ptext3250:
 17760                           
 17761 ;; *************** function _set_LED_Cat *****************
 17762 ;; Defined at:
 17763 ;;		line 337 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17764 ;; Parameters:    Size  Location     Type
 17765 ;;  pattern         1    wreg     unsigned char 
 17766 ;;  repeat          1   13[BANK0 ] unsigned char 
 17767 ;; Auto vars:     Size  Location     Type
 17768 ;;  pattern         1   16[BANK0 ] unsigned char 
 17769 ;; Return value:  Size  Location     Type
 17770 ;;		None               void
 17771 ;; Registers used:
 17772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17773 ;; Tracked objects:
 17774 ;;		On entry : 0/0
 17775 ;;		On exit  : 0/0
 17776 ;;		Unchanged: 0/0
 17777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17778 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17782 ;;Total ram usage:        4 bytes
 17783 ;; Hardware stack levels used:    1
 17784 ;; Hardware stack levels required when called:    4
 17785 ;; This function calls:
 17786 ;;		_set_pacer
 17787 ;; This function is called by:
 17788 ;;		_update_display
 17789 ;; This function uses a non-reentrant model
 17790 ;;
 17791                           psect	text3250
 17792                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17793                           	line	337
 17794                           	global	__size_of_set_LED_Cat
 17795  000F                     	__size_of_set_LED_Cat	equ	__end_of_set_LED_Cat-_set_LED_Cat
 17796                           	
 17797  28BF                     _set_LED_Cat:	
 17798                           	opt	stack 9
 17799                           ; Regs used in _set_LED_Cat: [wreg+fsr1l-status,0+pclath+cstack]
 17800                           ;set_LED_Cat@pattern stored from wreg
 17801  28BF  0020               	movlb 0	; select bank0
 17802  28C0  00B1               	movwf	(set_LED_Cat@pattern)
 17803                           	line	338
 17804                           	
 17805  28C1                     l37303:	
 17806                           ;catgenie120.c: 338: set_pacer(4, pattern, repeat);
 17807  28C1  0831               	movf	(set_LED_Cat@pattern),w
 17808  28C2  00AF               	movwf	(??_set_LED_Cat+0)+0
 17809  28C3  082F               	movf	(??_set_LED_Cat+0)+0,w
 17810  28C4  00A9               	movwf	(?_set_pacer)
 17811  28C5  082E               	movf	(set_LED_Cat@repeat),w
 17812  28C6  00B0               	movwf	(??_set_LED_Cat+1)+0
 17813  28C7  0830               	movf	(??_set_LED_Cat+1)+0,w
 17814  28C8  00AA               	movwf	0+(?_set_pacer)+01h
 17815  28C9  3004               	movlw	(04h)
 17816  28CA  31A3  23CF  31A8   	fcall	_set_pacer
 17817                           	line	339
 17818                           	
 17819  28CD                     l10907:	
 17820  28CD  0008               	return
 17821                           	opt stack 0
 17822                           GLOBAL	__end_of_set_LED_Cat
 17823  28CE                     	__end_of_set_LED_Cat:
 17824 ;; =============== function _set_LED_Cat ends ============
 17825                           
 17826                           	signat	_set_LED_Cat,8312
 17827                           	global	_set_LED_Cartridge
 17828                           psect	text3251,local,class=CODE,delta=2
 17829                           global __ptext3251
 17830  28B0                     __ptext3251:
 17831                           
 17832 ;; *************** function _set_LED_Cartridge *****************
 17833 ;; Defined at:
 17834 ;;		line 331 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;  pattern         1    wreg     unsigned char 
 17837 ;;  repeat          1   13[BANK0 ] unsigned char 
 17838 ;; Auto vars:     Size  Location     Type
 17839 ;;  pattern         1   16[BANK0 ] unsigned char 
 17840 ;; Return value:  Size  Location     Type
 17841 ;;		None               void
 17842 ;; Registers used:
 17843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/0
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17849 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17851 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17852 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17853 ;;Total ram usage:        4 bytes
 17854 ;; Hardware stack levels used:    1
 17855 ;; Hardware stack levels required when called:    4
 17856 ;; This function calls:
 17857 ;;		_set_pacer
 17858 ;; This function is called by:
 17859 ;;		_update_display
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           psect	text3251
 17863                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17864                           	line	331
 17865                           	global	__size_of_set_LED_Cartridge
 17866  000F                     	__size_of_set_LED_Cartridge	equ	__end_of_set_LED_Cartridge-_set_LED_Cartridge
 17867                           	
 17868  28B0                     _set_LED_Cartridge:	
 17869                           	opt	stack 9
 17870                           ; Regs used in _set_LED_Cartridge: [wreg+fsr1l-status,0+pclath+cstack]
 17871                           ;set_LED_Cartridge@pattern stored from wreg
 17872  28B0  0020               	movlb 0	; select bank0
 17873  28B1  00B1               	movwf	(set_LED_Cartridge@pattern)
 17874                           	line	332
 17875                           	
 17876  28B2                     l37301:	
 17877                           ;catgenie120.c: 332: set_pacer(3, pattern, repeat);
 17878  28B2  0831               	movf	(set_LED_Cartridge@pattern),w
 17879  28B3  00AF               	movwf	(??_set_LED_Cartridge+0)+0
 17880  28B4  082F               	movf	(??_set_LED_Cartridge+0)+0,w
 17881  28B5  00A9               	movwf	(?_set_pacer)
 17882  28B6  082E               	movf	(set_LED_Cartridge@repeat),w
 17883  28B7  00B0               	movwf	(??_set_LED_Cartridge+1)+0
 17884  28B8  0830               	movf	(??_set_LED_Cartridge+1)+0,w
 17885  28B9  00AA               	movwf	0+(?_set_pacer)+01h
 17886  28BA  3003               	movlw	(03h)
 17887  28BB  31A3  23CF  31A8   	fcall	_set_pacer
 17888                           	line	333
 17889                           	
 17890  28BE                     l10904:	
 17891  28BE  0008               	return
 17892                           	opt stack 0
 17893                           GLOBAL	__end_of_set_LED_Cartridge
 17894  28BF                     	__end_of_set_LED_Cartridge:
 17895 ;; =============== function _set_LED_Cartridge ends ============
 17896                           
 17897                           	signat	_set_LED_Cartridge,8312
 17898                           	global	_set_LED_Error
 17899                           psect	text3252,local,class=CODE,delta=2
 17900                           global __ptext3252
 17901  28A1                     __ptext3252:
 17902                           
 17903 ;; *************** function _set_LED_Error *****************
 17904 ;; Defined at:
 17905 ;;		line 319 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;  pattern         1    wreg     unsigned char 
 17908 ;;  repeat          1   13[BANK0 ] unsigned char 
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;  pattern         1   16[BANK0 ] unsigned char 
 17911 ;; Return value:  Size  Location     Type
 17912 ;;		None               void
 17913 ;; Registers used:
 17914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17915 ;; Tracked objects:
 17916 ;;		On entry : 0/0
 17917 ;;		On exit  : 0/0
 17918 ;;		Unchanged: 0/0
 17919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17920 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17922 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17924 ;;Total ram usage:        4 bytes
 17925 ;; Hardware stack levels used:    1
 17926 ;; Hardware stack levels required when called:    4
 17927 ;; This function calls:
 17928 ;;		_set_pacer
 17929 ;; This function is called by:
 17930 ;;		_update_display
 17931 ;; This function uses a non-reentrant model
 17932 ;;
 17933                           psect	text3252
 17934                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17935                           	line	319
 17936                           	global	__size_of_set_LED_Error
 17937  000F                     	__size_of_set_LED_Error	equ	__end_of_set_LED_Error-_set_LED_Error
 17938                           	
 17939  28A1                     _set_LED_Error:	
 17940                           	opt	stack 9
 17941                           ; Regs used in _set_LED_Error: [wreg+fsr1l-status,0+pclath+cstack]
 17942                           ;set_LED_Error@pattern stored from wreg
 17943  28A1  0020               	movlb 0	; select bank0
 17944  28A2  00B1               	movwf	(set_LED_Error@pattern)
 17945                           	line	320
 17946                           	
 17947  28A3                     l37299:	
 17948                           ;catgenie120.c: 320: set_pacer(1, pattern, repeat);
 17949  28A3  0831               	movf	(set_LED_Error@pattern),w
 17950  28A4  00AF               	movwf	(??_set_LED_Error+0)+0
 17951  28A5  082F               	movf	(??_set_LED_Error+0)+0,w
 17952  28A6  00A9               	movwf	(?_set_pacer)
 17953  28A7  082E               	movf	(set_LED_Error@repeat),w
 17954  28A8  00B0               	movwf	(??_set_LED_Error+1)+0
 17955  28A9  0830               	movf	(??_set_LED_Error+1)+0,w
 17956  28AA  00AA               	movwf	0+(?_set_pacer)+01h
 17957  28AB  3001               	movlw	(01h)
 17958  28AC  31A3  23CF  31A8   	fcall	_set_pacer
 17959                           	line	321
 17960                           	
 17961  28AF                     l10898:	
 17962  28AF  0008               	return
 17963                           	opt stack 0
 17964                           GLOBAL	__end_of_set_LED_Error
 17965  28B0                     	__end_of_set_LED_Error:
 17966 ;; =============== function _set_LED_Error ends ============
 17967                           
 17968                           	signat	_set_LED_Error,8312
 17969                           	global	_set_Beeper
 17970                           psect	text3253,local,class=CODE,delta=2
 17971                           global __ptext3253
 17972  2892                     __ptext3253:
 17973                           
 17974 ;; *************** function _set_Beeper *****************
 17975 ;; Defined at:
 17976 ;;		line 343 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;  pattern         1    wreg     unsigned char 
 17979 ;;  repeat          1   13[BANK0 ] unsigned char 
 17980 ;; Auto vars:     Size  Location     Type
 17981 ;;  pattern         1   16[BANK0 ] unsigned char 
 17982 ;; Return value:  Size  Location     Type
 17983 ;;		None               void
 17984 ;; Registers used:
 17985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17991 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17993 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17994 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17995 ;;Total ram usage:        4 bytes
 17996 ;; Hardware stack levels used:    1
 17997 ;; Hardware stack levels required when called:    4
 17998 ;; This function calls:
 17999 ;;		_set_pacer
 18000 ;; This function is called by:
 18001 ;;		_userinterface_work
 18002 ;;		_process_button
 18003 ;; This function uses a non-reentrant model
 18004 ;;
 18005                           psect	text3253
 18006                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18007                           	line	343
 18008                           	global	__size_of_set_Beeper
 18009  000F                     	__size_of_set_Beeper	equ	__end_of_set_Beeper-_set_Beeper
 18010                           	
 18011  2892                     _set_Beeper:	
 18012                           	opt	stack 10
 18013                           ; Regs used in _set_Beeper: [wreg+fsr1l-status,0+pclath+cstack]
 18014                           ;set_Beeper@pattern stored from wreg
 18015  2892  0020               	movlb 0	; select bank0
 18016  2893  00B1               	movwf	(set_Beeper@pattern)
 18017                           	line	344
 18018                           	
 18019  2894                     l37297:	
 18020                           ;catgenie120.c: 344: set_pacer(0, pattern, repeat);
 18021  2894  0831               	movf	(set_Beeper@pattern),w
 18022  2895  00AF               	movwf	(??_set_Beeper+0)+0
 18023  2896  082F               	movf	(??_set_Beeper+0)+0,w
 18024  2897  00A9               	movwf	(?_set_pacer)
 18025  2898  082E               	movf	(set_Beeper@repeat),w
 18026  2899  00B0               	movwf	(??_set_Beeper+1)+0
 18027  289A  0830               	movf	(??_set_Beeper+1)+0,w
 18028  289B  00AA               	movwf	0+(?_set_pacer)+01h
 18029  289C  3000               	movlw	(0)
 18030  289D  31A3  23CF  31A8   	fcall	_set_pacer
 18031                           	line	345
 18032                           	
 18033  28A0                     l10910:	
 18034  28A0  0008               	return
 18035                           	opt stack 0
 18036                           GLOBAL	__end_of_set_Beeper
 18037  28A1                     	__end_of_set_Beeper:
 18038 ;; =============== function _set_Beeper ends ============
 18039                           
 18040                           	signat	_set_Beeper,8312
 18041                           	global	_both_short
 18042                           psect	text3254,local,class=CODE,delta=2
 18043                           global __ptext3254
 18044  2969                     __ptext3254:
 18045                           
 18046 ;; *************** function _both_short *****************
 18047 ;; Defined at:
 18048 ;;		line 591 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18049 ;; Parameters:    Size  Location     Type
 18050 ;;		None
 18051 ;; Auto vars:     Size  Location     Type
 18052 ;;		None
 18053 ;; Return value:  Size  Location     Type
 18054 ;;		None               void
 18055 ;; Registers used:
 18056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18057 ;; Tracked objects:
 18058 ;;		On entry : 0/0
 18059 ;;		On exit  : 0/0
 18060 ;;		Unchanged: 0/0
 18061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18066 ;;Total ram usage:        0 bytes
 18067 ;; Hardware stack levels used:    1
 18068 ;; Hardware stack levels required when called:    4
 18069 ;; This function calls:
 18070 ;;		_settimeout
 18071 ;; This function is called by:
 18072 ;;		_userinterface_work
 18073 ;; This function uses a non-reentrant model
 18074 ;;
 18075                           psect	text3254
 18076                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18077                           	line	591
 18078                           	global	__size_of_both_short
 18079  0015                     	__size_of_both_short	equ	__end_of_both_short-_both_short
 18080                           	
 18081  2969                     _both_short:	
 18082                           	opt	stack 10
 18083                           ; Regs used in _both_short: [wreg+fsr1l-status,0+pclath+cstack]
 18084                           	line	593
 18085                           	
 18086  2969                     l37293:	
 18087                           ;userinterface.c: 593: panel_mode = 1;
 18088  2969  0021               	movlb 1	; select bank1
 18089  296A  01D9               	clrf	(_panel_mode)^080h
 18090  296B  1403               	bsf	status,0
 18091  296C  0DD9               	rlf	(_panel_mode)^080h,f
 18092                           	line	595
 18093                           	
 18094  296D                     l37295:	
 18095                           ;userinterface.c: 595: settimeout(&cartridgetimeout, (5 * ((((4UL * (1000UL * ((1000UL))
                                 )))/4)/8)));
 18096  296D  303A               	movlw	(_cartridgetimeout&0ffh)
 18097  296E  0020               	movlb 0	; select bank0
 18098  296F  00AD               	movwf	(?_settimeout)
 18099  2970  3001               	movlw	0x2/2
 18100  2971  00AE               	movwf	(?_settimeout+1)
 18101  2972  3000               	movlw	0
 18102  2973  00B2               	movwf	3+(?_settimeout)+02h
 18103  2974  3009               	movlw	09h
 18104  2975  00B1               	movwf	2+(?_settimeout)+02h
 18105  2976  3089               	movlw	089h
 18106  2977  00B0               	movwf	1+(?_settimeout)+02h
 18107  2978  3068               	movlw	068h
 18108  2979  00AF               	movwf	0+(?_settimeout)+02h
 18109                           
 18110  297A  31A1  2147  31A9   	fcall	_settimeout
 18111                           	line	596
 18112                           	
 18113  297D                     l8798:	
 18114  297D  0008               	return
 18115                           	opt stack 0
 18116                           GLOBAL	__end_of_both_short
 18117  297E                     	__end_of_both_short:
 18118 ;; =============== function _both_short ends ============
 18119                           
 18120                           	signat	_both_short,88
 18121                           	global	_update_autotimer
 18122                           psect	text3255,local,class=CODE,delta=2
 18123                           global __ptext3255
 18124  26BE                     __ptext3255:
 18125                           
 18126 ;; *************** function _update_autotimer *****************
 18127 ;; Defined at:
 18128 ;;		line 607 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18129 ;; Parameters:    Size  Location     Type
 18130 ;;  mode            1    wreg     unsigned char 
 18131 ;; Auto vars:     Size  Location     Type
 18132 ;;  mode            1   28[BANK0 ] unsigned char 
 18133 ;; Return value:  Size  Location     Type
 18134 ;;		None               void
 18135 ;; Registers used:
 18136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18145 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18146 ;;Total ram usage:        1 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:    4
 18149 ;; This function calls:
 18150 ;;		_settimeout
 18151 ;;		_postponetimeout
 18152 ;;		_timeoutnever
 18153 ;; This function is called by:
 18154 ;;		_userinterface_work
 18155 ;;		_set_mode
 18156 ;; This function uses a non-reentrant model
 18157 ;;
 18158                           psect	text3255
 18159                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 18160                           	line	607
 18161                           	global	__size_of_update_autotimer
 18162  0090                     	__size_of_update_autotimer	equ	__end_of_update_autotimer-_update_autotimer
 18163                           	
 18164  26BE                     _update_autotimer:	
 18165                           	opt	stack 8
 18166                           ; Regs used in _update_autotimer: [wreg-status,0+pclath+cstack]
 18167                           ;update_autotimer@mode stored from wreg
 18168  26BE  0020               	movlb 0	; select bank0
 18169  26BF  00BD               	movwf	(update_autotimer@mode)
 18170                           	line	614
 18171                           	
 18172  26C0                     l37277:	
 18173                           ;userinterface.c: 614: switch (mode) {
 18174  26C0  2F3E               	goto	l37291
 18175                           	line	615
 18176                           ;userinterface.c: 615: case 1:
 18177                           	
 18178  26C1                     l8805:	
 18179                           	line	616
 18180                           	
 18181  26C1                     l37279:	
 18182                           ;userinterface.c: 616: settimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18183  26C1  30DD               	movlw	(_autotimer&0ffh)
 18184  26C2  00AD               	movwf	(?_settimeout)
 18185  26C3  3000               	movlw	0x1/2
 18186  26C4  00AE               	movwf	(?_settimeout+1)
 18187  26C5  30F1               	movlw	0F1h
 18188  26C6  00B2               	movwf	3+(?_settimeout)+02h
 18189  26C7  3066               	movlw	066h
 18190  26C8  00B1               	movwf	2+(?_settimeout)+02h
 18191  26C9  3018               	movlw	018h
 18192  26CA  00B0               	movwf	1+(?_settimeout)+02h
 18193  26CB  3080               	movlw	080h
 18194  26CC  00AF               	movwf	0+(?_settimeout)+02h
 18195                           
 18196  26CD  31A1  2147  31A6   	fcall	_settimeout
 18197                           	line	617
 18198                           ;userinterface.c: 617: postponetimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 18199  26D0  30DD               	movlw	(_autotimer&0ffh)
 18200  26D1  0020               	movlb 0	; select bank0
 18201  26D2  00A1               	movwf	(?_postponetimeout)
 18202  26D3  3000               	movlw	0x1/2
 18203  26D4  00A2               	movwf	(?_postponetimeout+1)
 18204  26D5  30F1               	movlw	0F1h
 18205  26D6  00A6               	movwf	3+(?_postponetimeout)+02h
 18206  26D7  3066               	movlw	066h
 18207  26D8  00A5               	movwf	2+(?_postponetimeout)+02h
 18208  26D9  3018               	movlw	018h
 18209  26DA  00A4               	movwf	1+(?_postponetimeout)+02h
 18210  26DB  3080               	movlw	080h
 18211  26DC  00A3               	movwf	0+(?_postponetimeout)+02h
 18212                           
 18213  26DD  31AF  2747  31A6   	fcall	_postponetimeout
 18214                           	line	618
 18215                           ;userinterface.c: 618: postponetimeout(&autotimer, 6 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 18216  26E0  30DD               	movlw	(_autotimer&0ffh)
 18217  26E1  0020               	movlb 0	; select bank0
 18218  26E2  00A1               	movwf	(?_postponetimeout)
 18219  26E3  3000               	movlw	0x1/2
 18220  26E4  00A2               	movwf	(?_postponetimeout+1)
 18221  26E5  30A0               	movlw	0A0h
 18222  26E6  00A6               	movwf	3+(?_postponetimeout)+02h
 18223  26E7  30EE               	movlw	0EEh
 18224  26E8  00A5               	movwf	2+(?_postponetimeout)+02h
 18225  26E9  30BB               	movlw	0BBh
 18226  26EA  00A4               	movwf	1+(?_postponetimeout)+02h
 18227  26EB  3000               	movlw	0
 18228  26EC  00A3               	movwf	0+(?_postponetimeout)+02h
 18229                           
 18230  26ED  31AF  2747  31A6   	fcall	_postponetimeout
 18231                           	line	619
 18232                           ;userinterface.c: 619: break;
 18233  26F0  2F4D               	goto	l8811
 18234                           	line	620
 18235                           ;userinterface.c: 620: case 2:
 18236                           	
 18237  26F1                     l8807:	
 18238                           	line	621
 18239                           	
 18240  26F1                     l37281:	
 18241                           ;userinterface.c: 621: settimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18242  26F1  30DD               	movlw	(_autotimer&0ffh)
 18243  26F2  0020               	movlb 0	; select bank0
 18244  26F3  00AD               	movwf	(?_settimeout)
 18245  26F4  3000               	movlw	0x1/2
 18246  26F5  00AE               	movwf	(?_settimeout+1)
 18247  26F6  30F1               	movlw	0F1h
 18248  26F7  00B2               	movwf	3+(?_settimeout)+02h
 18249  26F8  3066               	movlw	066h
 18250  26F9  00B1               	movwf	2+(?_settimeout)+02h
 18251  26FA  3018               	movlw	018h
 18252  26FB  00B0               	movwf	1+(?_settimeout)+02h
 18253  26FC  3080               	movlw	080h
 18254  26FD  00AF               	movwf	0+(?_settimeout)+02h
 18255                           
 18256  26FE  31A1  2147  31A6   	fcall	_settimeout
 18257                           	line	622
 18258                           ;userinterface.c: 622: postponetimeout(&autotimer, 3 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 18259  2701  30DD               	movlw	(_autotimer&0ffh)
 18260  2702  0020               	movlb 0	; select bank0
 18261  2703  00A1               	movwf	(?_postponetimeout)
 18262  2704  3000               	movlw	0x1/2
 18263  2705  00A2               	movwf	(?_postponetimeout+1)
 18264  2706  3050               	movlw	050h
 18265  2707  00A6               	movwf	3+(?_postponetimeout)+02h
 18266  2708  3077               	movlw	077h
 18267  2709  00A5               	movwf	2+(?_postponetimeout)+02h
 18268  270A  305D               	movlw	05Dh
 18269  270B  00A4               	movwf	1+(?_postponetimeout)+02h
 18270  270C  3080               	movlw	080h
 18271  270D  00A3               	movwf	0+(?_postponetimeout)+02h
 18272                           
 18273  270E  31AF  2747  31A6   	fcall	_postponetimeout
 18274                           	line	623
 18275                           ;userinterface.c: 623: break;
 18276  2711  2F4D               	goto	l8811
 18277                           	line	624
 18278                           ;userinterface.c: 624: case 3:
 18279                           	
 18280  2712                     l8808:	
 18281                           	line	625
 18282                           	
 18283  2712                     l37283:	
 18284                           ;userinterface.c: 625: settimeout(&autotimer, 8 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18285  2712  30DD               	movlw	(_autotimer&0ffh)
 18286  2713  0020               	movlb 0	; select bank0
 18287  2714  00AD               	movwf	(?_settimeout)
 18288  2715  3000               	movlw	0x1/2
 18289  2716  00AE               	movwf	(?_settimeout+1)
 18290  2717  30D6               	movlw	0D6h
 18291  2718  00B2               	movwf	3+(?_settimeout)+02h
 18292  2719  3093               	movlw	093h
 18293  271A  00B1               	movwf	2+(?_settimeout)+02h
 18294  271B  30A4               	movlw	0A4h
 18295  271C  00B0               	movwf	1+(?_settimeout)+02h
 18296  271D  3000               	movlw	0
 18297  271E  00AF               	movwf	0+(?_settimeout)+02h
 18298                           
 18299  271F  31A1  2147  31A6   	fcall	_settimeout
 18300                           	line	626
 18301                           ;userinterface.c: 626: break;
 18302  2722  2F4D               	goto	l8811
 18303                           	line	627
 18304                           ;userinterface.c: 627: case 4:
 18305                           	
 18306  2723                     l8809:	
 18307                           	line	628
 18308                           	
 18309  2723                     l37285:	
 18310                           ;userinterface.c: 628: settimeout(&autotimer, 6 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 18311  2723  30DD               	movlw	(_autotimer&0ffh)
 18312  2724  0020               	movlb 0	; select bank0
 18313  2725  00AD               	movwf	(?_settimeout)
 18314  2726  3000               	movlw	0x1/2
 18315  2727  00AE               	movwf	(?_settimeout+1)
 18316  2728  30A0               	movlw	0A0h
 18317  2729  00B2               	movwf	3+(?_settimeout)+02h
 18318  272A  30EE               	movlw	0EEh
 18319  272B  00B1               	movwf	2+(?_settimeout)+02h
 18320  272C  30BB               	movlw	0BBh
 18321  272D  00B0               	movwf	1+(?_settimeout)+02h
 18322  272E  3000               	movlw	0
 18323  272F  00AF               	movwf	0+(?_settimeout)+02h
 18324                           
 18325  2730  31A1  2147  31A6   	fcall	_settimeout
 18326                           	line	629
 18327                           ;userinterface.c: 629: break;
 18328  2733  2F4D               	goto	l8811
 18329                           	line	630
 18330                           ;userinterface.c: 630: default:
 18331                           	
 18332  2734                     l8810:	
 18333                           	line	631
 18334                           	
 18335  2734                     l37287:	
 18336                           ;userinterface.c: 631: timeoutnever(&autotimer);
 18337  2734  30DD               	movlw	(_autotimer&0ffh)
 18338  2735  0020               	movlb 0	; select bank0
 18339  2736  00A5               	movwf	(?_timeoutnever)
 18340  2737  3000               	movlw	0x1/2
 18341  2738  00A6               	movwf	(?_timeoutnever+1)
 18342  2739  31AA  222C  31A6   	fcall	_timeoutnever
 18343                           	line	632
 18344                           ;userinterface.c: 632: break;
 18345  273C  2F4D               	goto	l8811
 18346                           	line	633
 18347                           	
 18348  273D                     l37289:	
 18349                           ;userinterface.c: 633: }
 18350  273D  2F4D               	goto	l8811
 18351                           	line	614
 18352                           	
 18353  273E                     l8804:	
 18354                           	
 18355  273E                     l37291:	
 18356  273E  0020               	movlb 0	; select bank0
 18357  273F  083D               	movf	(update_autotimer@mode),w
 18358                           	; Switch size 1, requested type "space"
 18359                           ; Number of cases is 4, Range of values is 1 to 4
 18360                           ; switch strategies available:
 18361                           ; Name         Instructions Cycles
 18362                           ; simple_byte           13     7 (average)
 18363                           ; direct_byte           17     9 (fixed)
 18364                           ; jumptable            263     9 (fixed)
 18365                           ;	Chosen strategy is simple_byte
 18366                           
 18367                           	opt asmopt_off
 18368  2740  3A01               	xorlw	1^0	; case 1
 18369  2741  1903               	skipnz
 18370  2742  2EC1               	goto	l37279
 18371  2743  3A03               	xorlw	2^1	; case 2
 18372  2744  1903               	skipnz
 18373  2745  2EF1               	goto	l37281
 18374  2746  3A01               	xorlw	3^2	; case 3
 18375  2747  1903               	skipnz
 18376  2748  2F12               	goto	l37283
 18377  2749  3A07               	xorlw	4^3	; case 4
 18378  274A  1903               	skipnz
 18379  274B  2F23               	goto	l37285
 18380  274C  2F34               	goto	l37287
 18381                           	opt asmopt_on
 18382                           
 18383                           	line	633
 18384                           	
 18385  274D                     l8806:	
 18386                           	line	634
 18387                           	
 18388  274D                     l8811:	
 18389  274D  0008               	return
 18390                           	opt stack 0
 18391                           GLOBAL	__end_of_update_autotimer
 18392  274E                     	__end_of_update_autotimer:
 18393 ;; =============== function _update_autotimer ends ============
 18394                           
 18395                           	signat	_update_autotimer,4216
 18396                           	global	_wait_instruction
 18397                           psect	text3256,local,class=CODE,delta=2
 18398                           global __ptext3256
 18399  2537                     __ptext3256:
 18400                           
 18401 ;; *************** function _wait_instruction *****************
 18402 ;; Defined at:
 18403 ;;		line 658 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 18404 ;; Parameters:    Size  Location     Type
 18405 ;;		None
 18406 ;; Auto vars:     Size  Location     Type
 18407 ;;		None
 18408 ;; Return value:  Size  Location     Type
 18409 ;;		None               void
 18410 ;; Registers used:
 18411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18412 ;; Tracked objects:
 18413 ;;		On entry : 0/0
 18414 ;;		On exit  : 0/0
 18415 ;;		Unchanged: 0/0
 18416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18420 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18421 ;;Total ram usage:        1 bytes
 18422 ;; Hardware stack levels used:    1
 18423 ;; Hardware stack levels required when called:    4
 18424 ;; This function calls:
 18425 ;;		_timeoutexpired
 18426 ;;		_water_detected
 18427 ;;		_timeoutnever
 18428 ;;		_get_Dosage
 18429 ;; This function is called by:
 18430 ;;		_litterlanguage_work
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           psect	text3256
 18434                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 18435                           	line	658
 18436                           	global	__size_of_wait_instruction
 18437  007C                     	__size_of_wait_instruction	equ	__end_of_wait_instruction-_wait_instruction
 18438                           	
 18439  2537                     _wait_instruction:	
 18440                           	opt	stack 10
 18441                           ; Regs used in _wait_instruction: [wreg-status,0+pclath+cstack]
 18442                           	line	659
 18443                           	
 18444  2537                     l37247:	
 18445                           ;litterlanguage.c: 659: switch (cur_instruction.opcode) {
 18446  2537  2DA6               	goto	l37275
 18447                           	line	660
 18448                           ;litterlanguage.c: 660: case 0x07:
 18449                           	
 18450  2538                     l4458:	
 18451                           	line	661
 18452                           	
 18453  2538                     l37249:	
 18454                           ;litterlanguage.c: 661: if (timeoutexpired(&timer_waitins)) {
 18455  2538  306A               	movlw	(_timer_waitins&0ffh)
 18456  2539  0020               	movlb 0	; select bank0
 18457  253A  00A9               	movwf	(?_timeoutexpired)
 18458  253B  3001               	movlw	0x2/2
 18459  253C  00AA               	movwf	(?_timeoutexpired+1)
 18460  253D  31A3  235B  31A5   	fcall	_timeoutexpired
 18461  2540  3A00               	xorlw	0&0ffh
 18462  2541  1903               	skipnz
 18463  2542  2D44               	goto	u10251
 18464  2543  2D45               	goto	u10250
 18465  2544                     u10251:
 18466  2544  2DB2               	goto	l4469
 18467  2545                     u10250:
 18468                           	line	662
 18469                           	
 18470  2545                     l37251:	
 18471                           ;litterlanguage.c: 662: ins_pointer++;
 18472  2545  3003               	movlw	low(03h)
 18473  2546  0020               	movlb 0	; select bank0
 18474  2547  07EB               	addwf	(_ins_pointer),f
 18475  2548  3000               	movlw	high(03h)
 18476  2549  3DEC               	addwfc	(_ins_pointer+1),f
 18477                           	line	663
 18478                           ;litterlanguage.c: 663: ins_state = 3;
 18479  254A  3003               	movlw	(03h)
 18480  254B  00B7               	movwf	(??_wait_instruction+0)+0
 18481  254C  0837               	movf	(??_wait_instruction+0)+0,w
 18482  254D  00E5               	movwf	(_ins_state)
 18483  254E  2DB2               	goto	l4469
 18484                           	line	664
 18485                           	
 18486  254F                     l4459:	
 18487                           	line	665
 18488                           ;litterlanguage.c: 664: }
 18489                           ;litterlanguage.c: 665: break;
 18490  254F  2DB2               	goto	l4469
 18491                           	line	666
 18492                           ;litterlanguage.c: 666: case 0x08:
 18493                           	
 18494  2550                     l4461:	
 18495                           	line	667
 18496                           	
 18497  2550                     l37253:	
 18498                           ;litterlanguage.c: 667: if (cur_instruction.operant) {
 18499  2550  3001               	movlw	(01h)
 18500  2551  3E68               	addlw	_cur_instruction&0ffh
 18501  2552  0086               	movwf	fsr1l
 18502  2553  0187               	clrf fsr1h	
 18503                           	
 18504  2554  0016               	moviw	fsr1++
 18505  2555  0401               	iorwf	indf1,w
 18506  2556  1903               	skipnz
 18507  2557  2D59               	goto	u10261
 18508  2558  2D5A               	goto	u10260
 18509  2559                     u10261:
 18510  2559  2D6D               	goto	l37259
 18511  255A                     u10260:
 18512                           	line	668
 18513                           	
 18514  255A                     l37255:	
 18515                           ;litterlanguage.c: 668: if (water_detected()) {
 18516  255A  31B7  27D8  31A5   	fcall	_water_detected
 18517  255D  3A00               	xorlw	0&0ffh
 18518  255E  1903               	skipnz
 18519  255F  2D61               	goto	u10271
 18520  2560  2D62               	goto	u10270
 18521  2561                     u10271:
 18522  2561  2DB2               	goto	l4469
 18523  2562                     u10270:
 18524                           	line	669
 18525                           	
 18526  2562                     l37257:	
 18527                           ;litterlanguage.c: 669: ins_pointer++;
 18528  2562  3003               	movlw	low(03h)
 18529  2563  0020               	movlb 0	; select bank0
 18530  2564  07EB               	addwf	(_ins_pointer),f
 18531  2565  3000               	movlw	high(03h)
 18532  2566  3DEC               	addwfc	(_ins_pointer+1),f
 18533                           	line	670
 18534                           ;litterlanguage.c: 670: ins_state = 3;
 18535  2567  3003               	movlw	(03h)
 18536  2568  00B7               	movwf	(??_wait_instruction+0)+0
 18537  2569  0837               	movf	(??_wait_instruction+0)+0,w
 18538  256A  00E5               	movwf	(_ins_state)
 18539  256B  2DB2               	goto	l4469
 18540                           	line	671
 18541                           	
 18542  256C                     l4463:	
 18543                           	line	672
 18544                           ;litterlanguage.c: 671: }
 18545                           ;litterlanguage.c: 672: } else {
 18546  256C  2DB2               	goto	l4469
 18547                           	
 18548  256D                     l4462:	
 18549                           	line	673
 18550                           	
 18551  256D                     l37259:	
 18552                           ;litterlanguage.c: 673: if (!water_detected()) {
 18553  256D  31B7  27D8  31A5   	fcall	_water_detected
 18554  2570  3800               	iorlw	0
 18555  2571  1D03               	skipz
 18556  2572  2D74               	goto	u10281
 18557  2573  2D75               	goto	u10280
 18558  2574                     u10281:
 18559  2574  2DB2               	goto	l4469
 18560  2575                     u10280:
 18561                           	line	675
 18562                           	
 18563  2575                     l37261:	
 18564                           ;litterlanguage.c: 675: timeoutnever(&timer_drain);
 18565  2575  30E3               	movlw	(_timer_drain&0ffh)
 18566  2576  0020               	movlb 0	; select bank0
 18567  2577  00A5               	movwf	(?_timeoutnever)
 18568  2578  3000               	movlw	0x1/2
 18569  2579  00A6               	movwf	(?_timeoutnever+1)
 18570  257A  31AA  222C  31A5   	fcall	_timeoutnever
 18571                           	line	676
 18572                           	
 18573  257D                     l37263:	
 18574                           ;litterlanguage.c: 676: ins_pointer++;
 18575  257D  3003               	movlw	low(03h)
 18576  257E  0020               	movlb 0	; select bank0
 18577  257F  07EB               	addwf	(_ins_pointer),f
 18578  2580  3000               	movlw	high(03h)
 18579  2581  3DEC               	addwfc	(_ins_pointer+1),f
 18580                           	line	677
 18581                           	
 18582  2582                     l37265:	
 18583                           ;litterlanguage.c: 677: ins_state = 3;
 18584  2582  3003               	movlw	(03h)
 18585  2583  00B7               	movwf	(??_wait_instruction+0)+0
 18586  2584  0837               	movf	(??_wait_instruction+0)+0,w
 18587  2585  00E5               	movwf	(_ins_state)
 18588  2586  2DB2               	goto	l4469
 18589                           	line	678
 18590                           	
 18591  2587                     l4465:	
 18592  2587  2DB2               	goto	l4469
 18593                           	line	679
 18594                           	
 18595  2588                     l4464:	
 18596                           	line	680
 18597                           ;litterlanguage.c: 678: }
 18598                           ;litterlanguage.c: 679: }
 18599                           ;litterlanguage.c: 680: break;
 18600  2588  2DB2               	goto	l4469
 18601                           	line	681
 18602                           ;litterlanguage.c: 681: case 0x09:
 18603                           	
 18604  2589                     l4466:	
 18605                           	line	682
 18606                           	
 18607  2589                     l37267:	
 18608                           ;litterlanguage.c: 682: if (!get_Dosage()) {
 18609  2589  31B7  27CE  31A5   	fcall	_get_Dosage
 18610  258C  3800               	iorlw	0
 18611  258D  1D03               	skipz
 18612  258E  2D90               	goto	u10291
 18613  258F  2D91               	goto	u10290
 18614  2590                     u10291:
 18615  2590  2DB2               	goto	l4469
 18616  2591                     u10290:
 18617                           	line	683
 18618                           	
 18619  2591                     l37269:	
 18620                           ;litterlanguage.c: 683: ins_pointer++;
 18621  2591  3003               	movlw	low(03h)
 18622  2592  0020               	movlb 0	; select bank0
 18623  2593  07EB               	addwf	(_ins_pointer),f
 18624  2594  3000               	movlw	high(03h)
 18625  2595  3DEC               	addwfc	(_ins_pointer+1),f
 18626                           	line	684
 18627                           ;litterlanguage.c: 684: ins_state = 3;
 18628  2596  3003               	movlw	(03h)
 18629  2597  00B7               	movwf	(??_wait_instruction+0)+0
 18630  2598  0837               	movf	(??_wait_instruction+0)+0,w
 18631  2599  00E5               	movwf	(_ins_state)
 18632  259A  2DB2               	goto	l4469
 18633                           	line	685
 18634                           	
 18635  259B                     l4467:	
 18636                           	line	686
 18637                           ;litterlanguage.c: 685: }
 18638                           ;litterlanguage.c: 686: break;
 18639  259B  2DB2               	goto	l4469
 18640                           	line	687
 18641                           ;litterlanguage.c: 687: default:
 18642                           	
 18643  259C                     l4468:	
 18644                           	line	688
 18645                           	
 18646  259C                     l37271:	
 18647                           ;litterlanguage.c: 688: ins_pointer++;
 18648  259C  3003               	movlw	low(03h)
 18649  259D  07EB               	addwf	(_ins_pointer),f
 18650  259E  3000               	movlw	high(03h)
 18651  259F  3DEC               	addwfc	(_ins_pointer+1),f
 18652                           	line	689
 18653                           ;litterlanguage.c: 689: ins_state = 3;
 18654  25A0  3003               	movlw	(03h)
 18655  25A1  00B7               	movwf	(??_wait_instruction+0)+0
 18656  25A2  0837               	movf	(??_wait_instruction+0)+0,w
 18657  25A3  00E5               	movwf	(_ins_state)
 18658                           	line	690
 18659                           ;litterlanguage.c: 690: break;
 18660  25A4  2DB2               	goto	l4469
 18661                           	line	691
 18662                           	
 18663  25A5                     l37273:	
 18664                           ;litterlanguage.c: 691: }
 18665  25A5  2DB2               	goto	l4469
 18666                           	line	659
 18667                           	
 18668  25A6                     l4457:	
 18669                           	
 18670  25A6                     l37275:	
 18671  25A6  0020               	movlb 0	; select bank0
 18672  25A7  0868               	movf	(_cur_instruction),w
 18673                           	; Switch size 1, requested type "space"
 18674                           ; Number of cases is 3, Range of values is 7 to 9
 18675                           ; switch strategies available:
 18676                           ; Name         Instructions Cycles
 18677                           ; simple_byte           10     6 (average)
 18678                           ; direct_byte           15     9 (fixed)
 18679                           ; jumptable            263     9 (fixed)
 18680                           ;	Chosen strategy is simple_byte
 18681                           
 18682                           	opt asmopt_off
 18683  25A8  3A07               	xorlw	7^0	; case 7
 18684  25A9  1903               	skipnz
 18685  25AA  2D38               	goto	l37249
 18686  25AB  3A0F               	xorlw	8^7	; case 8
 18687  25AC  1903               	skipnz
 18688  25AD  2D50               	goto	l37253
 18689  25AE  3A01               	xorlw	9^8	; case 9
 18690  25AF  1903               	skipnz
 18691  25B0  2D89               	goto	l37267
 18692  25B1  2D9C               	goto	l37271
 18693                           	opt asmopt_on
 18694                           
 18695                           	line	691
 18696                           	
 18697  25B2                     l4460:	
 18698                           	line	692
 18699                           	
 18700  25B2                     l4469:	
 18701  25B2  0008               	return
 18702                           	opt stack 0
 18703                           GLOBAL	__end_of_wait_instruction
 18704  25B3                     	__end_of_wait_instruction:
 18705 ;; =============== function _wait_instruction ends ============
 18706                           
 18707                           	signat	_wait_instruction,88
 18708                           	global	_printtime
 18709                           psect	text3257,local,class=CODE,delta=2
 18710                           global __ptext3257
 18711  2BED                     __ptext3257:
 18712                           
 18713 ;; *************** function _printtime *****************
 18714 ;; Defined at:
 18715 ;;		line 89 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 18716 ;; Parameters:    Size  Location     Type
 18717 ;;		None
 18718 ;; Auto vars:     Size  Location     Type
 18719 ;;		None
 18720 ;; Return value:  Size  Location     Type
 18721 ;;		None               void
 18722 ;; Registers used:
 18723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18724 ;; Tracked objects:
 18725 ;;		On entry : 0/0
 18726 ;;		On exit  : 0/0
 18727 ;;		Unchanged: 0/0
 18728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18731 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 18732 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 18733 ;;Total ram usage:        8 bytes
 18734 ;; Hardware stack levels used:    1
 18735 ;; Hardware stack levels required when called:    4
 18736 ;; This function calls:
 18737 ;;		_printf
 18738 ;; This function is called by:
 18739 ;;		_litterlanguage_work
 18740 ;;		_litterlanguage_start
 18741 ;;		_litterlanguage_pause
 18742 ;;		_litterlanguage_stop
 18743 ;;		_watersensor_event
 18744 ;;		_litterlanguage_cleanup
 18745 ;;		_exe_instruction
 18746 ;;		_userinterface_work
 18747 ;;		_catsensor_event
 18748 ;;		_incminutes
 18749 ;; This function uses a non-reentrant model
 18750 ;;
 18751                           psect	text3257
 18752                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 18753                           	line	89
 18754                           	global	__size_of_printtime
 18755  002D                     	__size_of_printtime	equ	__end_of_printtime-_printtime
 18756                           	
 18757  2BED                     _printtime:	
 18758                           	opt	stack 8
 18759                           ; Regs used in _printtime: [wreg-status,0+pclath+cstack]
 18760                           	line	92
 18761                           	
 18762  2BED                     l37245:	
 18763                           ;rtc.c: 90: printf( "%d %d:%.2d.%.2d ",
 18764                           ;rtc.c: 91: currenttime.weekday, currenttime.hours,
 18765                           ;rtc.c: 92: currenttime.minutes, currenttime.seconds );
 18766  2BED  30D8               	movlw	low(STR_113|8000h)
 18767  2BEE  0020               	movlb 0	; select bank0
 18768  2BEF  00AF               	movwf	(?_printf)
 18769  2BF0  3086               	movlw	high(STR_113|8000h)
 18770  2BF1  00B0               	movwf	((?_printf))+1
 18771  2BF2  0021               	movlb 1	; select bank1
 18772  2BF3  0849               	movf	0+(_currenttime)^080h+03h,w
 18773  2BF4  0020               	movlb 0	; select bank0
 18774  2BF5  00C7               	movwf	(??_printtime+0)+0
 18775  2BF6  01C8               	clrf	(??_printtime+0)+0+1
 18776  2BF7  0847               	movf	0+(??_printtime+0)+0,w
 18777  2BF8  00B1               	movwf	0+(?_printf)+02h
 18778  2BF9  0848               	movf	1+(??_printtime+0)+0,w
 18779  2BFA  00B2               	movwf	1+(?_printf)+02h
 18780  2BFB  0021               	movlb 1	; select bank1
 18781  2BFC  0848               	movf	0+(_currenttime)^080h+02h,w
 18782  2BFD  0020               	movlb 0	; select bank0
 18783  2BFE  00C9               	movwf	(??_printtime+2)+0
 18784  2BFF  01CA               	clrf	(??_printtime+2)+0+1
 18785  2C00  0849               	movf	0+(??_printtime+2)+0,w
 18786  2C01  00B3               	movwf	0+(?_printf)+04h
 18787  2C02  084A               	movf	1+(??_printtime+2)+0,w
 18788  2C03  00B4               	movwf	1+(?_printf)+04h
 18789  2C04  0021               	movlb 1	; select bank1
 18790  2C05  0847               	movf	0+(_currenttime)^080h+01h,w
 18791  2C06  0020               	movlb 0	; select bank0
 18792  2C07  00CB               	movwf	(??_printtime+4)+0
 18793  2C08  01CC               	clrf	(??_printtime+4)+0+1
 18794  2C09  084B               	movf	0+(??_printtime+4)+0,w
 18795  2C0A  00B5               	movwf	0+(?_printf)+06h
 18796  2C0B  084C               	movf	1+(??_printtime+4)+0,w
 18797  2C0C  00B6               	movwf	1+(?_printf)+06h
 18798  2C0D  0021               	movlb 1	; select bank1
 18799  2C0E  0846               	movf	(_currenttime)^080h,w
 18800  2C0F  0020               	movlb 0	; select bank0
 18801  2C10  00CD               	movwf	(??_printtime+6)+0
 18802  2C11  01CE               	clrf	(??_printtime+6)+0+1
 18803  2C12  084D               	movf	0+(??_printtime+6)+0,w
 18804  2C13  00B7               	movwf	0+(?_printf)+08h
 18805  2C14  084E               	movf	1+(??_printtime+6)+0,w
 18806  2C15  00B8               	movwf	1+(?_printf)+08h
 18807  2C16  3194  24A0  31AB   	fcall	_printf
 18808                           	line	93
 18809                           	
 18810  2C19                     l17222:	
 18811  2C19  0008               	return
 18812                           	opt stack 0
 18813                           GLOBAL	__end_of_printtime
 18814  2C1A                     	__end_of_printtime:
 18815 ;; =============== function _printtime ends ============
 18816                           
 18817                           	signat	_printtime,88
 18818                           	global	_rtc_work
 18819                           psect	text3258,local,class=CODE,delta=2
 18820                           global __ptext3258
 18821  2084                     __ptext3258:
 18822                           
 18823 ;; *************** function _rtc_work *****************
 18824 ;; Defined at:
 18825 ;;		line 68 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;		None
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;		None
 18830 ;; Return value:  Size  Location     Type
 18831 ;;		None               void
 18832 ;; Registers used:
 18833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18834 ;; Tracked objects:
 18835 ;;		On entry : 0/0
 18836 ;;		On exit  : 0/0
 18837 ;;		Unchanged: 0/0
 18838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18843 ;;Total ram usage:        1 bytes
 18844 ;; Hardware stack levels used:    1
 18845 ;; Hardware stack levels required when called:    4
 18846 ;; This function calls:
 18847 ;;		_timeoutexpired
 18848 ;;		_postponetimeout
 18849 ;; This function is called by:
 18850 ;;		_main
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           psect	text3258
 18854                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 18855                           	line	68
 18856                           	global	__size_of_rtc_work
 18857  0060                     	__size_of_rtc_work	equ	__end_of_rtc_work-_rtc_work
 18858                           	
 18859  2084                     _rtc_work:	
 18860                           	opt	stack 11
 18861                           ; Regs used in _rtc_work: [wreg+fsr1l-status,0+pclath+cstack]
 18862                           	line	69
 18863                           	
 18864  2084                     l37223:	
 18865                           ;rtc.c: 69: if (timeoutexpired(&second)) {
 18866  2084  304C               	movlw	(_second&0ffh)
 18867  2085  0020               	movlb 0	; select bank0
 18868  2086  00A9               	movwf	(?_timeoutexpired)
 18869  2087  3001               	movlw	0x2/2
 18870  2088  00AA               	movwf	(?_timeoutexpired+1)
 18871  2089  31A3  235B  31A0   	fcall	_timeoutexpired
 18872  208C  3A00               	xorlw	0&0ffh
 18873  208D  1903               	skipnz
 18874  208E  2890               	goto	u10201
 18875  208F  2891               	goto	u10200
 18876  2090                     u10201:
 18877  2090  28E3               	goto	l17219
 18878  2091                     u10200:
 18879                           	line	70
 18880                           	
 18881  2091                     l37225:	
 18882                           ;rtc.c: 70: postponetimeout(&second, ((((4UL * (1000UL * ((1000UL)))))/4)/8));
 18883  2091  304C               	movlw	(_second&0ffh)
 18884  2092  0020               	movlb 0	; select bank0
 18885  2093  00A1               	movwf	(?_postponetimeout)
 18886  2094  3001               	movlw	0x2/2
 18887  2095  00A2               	movwf	(?_postponetimeout+1)
 18888  2096  3000               	movlw	0
 18889  2097  00A6               	movwf	3+(?_postponetimeout)+02h
 18890  2098  3001               	movlw	01h
 18891  2099  00A5               	movwf	2+(?_postponetimeout)+02h
 18892  209A  30E8               	movlw	0E8h
 18893  209B  00A4               	movwf	1+(?_postponetimeout)+02h
 18894  209C  3048               	movlw	048h
 18895  209D  00A3               	movwf	0+(?_postponetimeout)+02h
 18896                           
 18897  209E  31AF  2747  31A0   	fcall	_postponetimeout
 18898                           	line	71
 18899                           	
 18900  20A1                     l37227:	
 18901                           ;rtc.c: 71: uptime++;
 18902  20A1  3001               	movlw	01h
 18903  20A2  0023               	movlb 3	; select bank3
 18904  20A3  07CA               	addwf	(_uptime)^0180h,f
 18905  20A4  3000               	movlw	0
 18906  20A5  3DCB               	addwfc	(_uptime+1)^0180h,f
 18907  20A6  3000               	movlw	0
 18908  20A7  3DCC               	addwfc	(_uptime+2)^0180h,f
 18909  20A8  3000               	movlw	0
 18910  20A9  3DCD               	addwfc	(_uptime+3)^0180h,f
 18911                           	line	72
 18912                           	
 18913  20AA                     l37229:	
 18914                           ;rtc.c: 72: if (++currenttime.seconds >= 60) {
 18915  20AA  3001               	movlw	(01h)
 18916  20AB  0020               	movlb 0	; select bank0
 18917  20AC  00B7               	movwf	(??_rtc_work+0)+0
 18918  20AD  0837               	movf	(??_rtc_work+0)+0,w
 18919  20AE  0021               	movlb 1	; select bank1
 18920  20AF  07C6               	addwf	(_currenttime)^080h,f
 18921  20B0  303C               	movlw	(03Ch)
 18922  20B1  0246               	subwf	((_currenttime)^080h),w
 18923  20B2  1C03               	skipc
 18924  20B3  28B5               	goto	u10211
 18925  20B4  28B6               	goto	u10210
 18926  20B5                     u10211:
 18927  20B5  28E3               	goto	l17219
 18928  20B6                     u10210:
 18929                           	line	73
 18930                           	
 18931  20B6                     l37231:	
 18932                           ;rtc.c: 73: currenttime.seconds = 0;
 18933  20B6  01C6               	clrf	(_currenttime)^080h
 18934                           	line	74
 18935                           	
 18936  20B7                     l37233:	
 18937                           ;rtc.c: 74: if (++currenttime.minutes >=60) {
 18938  20B7  3001               	movlw	(01h)
 18939  20B8  0020               	movlb 0	; select bank0
 18940  20B9  00B7               	movwf	(??_rtc_work+0)+0
 18941  20BA  0837               	movf	(??_rtc_work+0)+0,w
 18942  20BB  0021               	movlb 1	; select bank1
 18943  20BC  07C7               	addwf	0+(_currenttime)^080h+01h,f
 18944  20BD  303C               	movlw	(03Ch)
 18945  20BE  0247               	subwf	(0+(_currenttime)^080h+01h),w
 18946  20BF  1C03               	skipc
 18947  20C0  28C2               	goto	u10221
 18948  20C1  28C3               	goto	u10220
 18949  20C2                     u10221:
 18950  20C2  28E3               	goto	l17219
 18951  20C3                     u10220:
 18952                           	line	75
 18953                           	
 18954  20C3                     l37235:	
 18955                           ;rtc.c: 75: currenttime.minutes = 0;
 18956  20C3  01C7               	clrf	0+(_currenttime)^080h+01h
 18957                           	line	76
 18958                           	
 18959  20C4                     l37237:	
 18960                           ;rtc.c: 76: if (++currenttime.hours >=24) {
 18961  20C4  3001               	movlw	(01h)
 18962  20C5  0020               	movlb 0	; select bank0
 18963  20C6  00B7               	movwf	(??_rtc_work+0)+0
 18964  20C7  0837               	movf	(??_rtc_work+0)+0,w
 18965  20C8  0021               	movlb 1	; select bank1
 18966  20C9  07C8               	addwf	0+(_currenttime)^080h+02h,f
 18967  20CA  3018               	movlw	(018h)
 18968  20CB  0248               	subwf	(0+(_currenttime)^080h+02h),w
 18969  20CC  1C03               	skipc
 18970  20CD  28CF               	goto	u10231
 18971  20CE  28D0               	goto	u10230
 18972  20CF                     u10231:
 18973  20CF  28E3               	goto	l17219
 18974  20D0                     u10230:
 18975                           	line	77
 18976                           	
 18977  20D0                     l37239:	
 18978                           ;rtc.c: 77: currenttime.hours = 0;
 18979  20D0  01C8               	clrf	0+(_currenttime)^080h+02h
 18980                           	line	78
 18981                           	
 18982  20D1                     l37241:	
 18983                           ;rtc.c: 78: if (++currenttime.weekday >=7)
 18984  20D1  3001               	movlw	(01h)
 18985  20D2  0020               	movlb 0	; select bank0
 18986  20D3  00B7               	movwf	(??_rtc_work+0)+0
 18987  20D4  0837               	movf	(??_rtc_work+0)+0,w
 18988  20D5  0021               	movlb 1	; select bank1
 18989  20D6  07C9               	addwf	0+(_currenttime)^080h+03h,f
 18990  20D7  3007               	movlw	(07h)
 18991  20D8  0249               	subwf	(0+(_currenttime)^080h+03h),w
 18992  20D9  1C03               	skipc
 18993  20DA  28DC               	goto	u10241
 18994  20DB  28DD               	goto	u10240
 18995  20DC                     u10241:
 18996  20DC  28E3               	goto	l17219
 18997  20DD                     u10240:
 18998                           	line	79
 18999                           	
 19000  20DD                     l37243:	
 19001                           ;rtc.c: 79: currenttime.weekday = 0;
 19002  20DD  01C9               	clrf	0+(_currenttime)^080h+03h
 19003  20DE  28E3               	goto	l17219
 19004                           	
 19005  20DF                     l17218:	
 19006  20DF  28E3               	goto	l17219
 19007                           	line	80
 19008                           	
 19009  20E0                     l17217:	
 19010  20E0  28E3               	goto	l17219
 19011                           	line	81
 19012                           	
 19013  20E1                     l17216:	
 19014  20E1  28E3               	goto	l17219
 19015                           	line	82
 19016                           	
 19017  20E2                     l17215:	
 19018  20E2  28E3               	goto	l17219
 19019                           	line	83
 19020                           	
 19021  20E3                     l17214:	
 19022                           	line	84
 19023                           	
 19024  20E3                     l17219:	
 19025  20E3  0008               	return
 19026                           	opt stack 0
 19027                           GLOBAL	__end_of_rtc_work
 19028  20E4                     	__end_of_rtc_work:
 19029 ;; =============== function _rtc_work ends ============
 19030                           
 19031                           	signat	_rtc_work,88
 19032                           	global	_cmdline_init
 19033                           psect	text3259,local,class=CODE,delta=2
 19034                           global __ptext3259
 19035  2859                     __ptext3259:
 19036                           
 19037 ;; *************** function _cmdline_init *****************
 19038 ;; Defined at:
 19039 ;;		line 58 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19040 ;; Parameters:    Size  Location     Type
 19041 ;;		None
 19042 ;; Auto vars:     Size  Location     Type
 19043 ;;		None
 19044 ;; Return value:  Size  Location     Type
 19045 ;;		None               void
 19046 ;; Registers used:
 19047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19048 ;; Tracked objects:
 19049 ;;		On entry : 0/0
 19050 ;;		On exit  : 0/0
 19051 ;;		Unchanged: 0/0
 19052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19057 ;;Total ram usage:        0 bytes
 19058 ;; Hardware stack levels used:    1
 19059 ;; Hardware stack levels required when called:    4
 19060 ;; This function calls:
 19061 ;;		_printf
 19062 ;; This function is called by:
 19063 ;;		_main
 19064 ;; This function uses a non-reentrant model
 19065 ;;
 19066                           psect	text3259
 19067                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19068                           	line	58
 19069                           	global	__size_of_cmdline_init
 19070  000E                     	__size_of_cmdline_init	equ	__end_of_cmdline_init-_cmdline_init
 19071                           	
 19072  2859                     _cmdline_init:	
 19073                           	opt	stack 11
 19074                           ; Regs used in _cmdline_init: [wreg-status,0+pclath+cstack]
 19075                           	line	59
 19076                           	
 19077  2859                     l37219:	
 19078                           ;cmdline.c: 59: if (localecho)
 19079  2859  0020               	movlb 0	; select bank0
 19080  285A  086F               	movf	(_localecho),w
 19081  285B  1D03               	skipz
 19082  285C  285E               	goto	u10190
 19083  285D  2866               	goto	l15084
 19084  285E                     u10190:
 19085                           	line	60
 19086                           	
 19087  285E                     l37221:	
 19088                           ;cmdline.c: 60: printf("# ");
 19089  285E  3042               	movlw	low(STR_99|8000h)
 19090  285F  00AF               	movwf	(?_printf)
 19091  2860  3089               	movlw	high(STR_99|8000h)
 19092  2861  00B0               	movwf	((?_printf))+1
 19093  2862  3194  24A0  31A8   	fcall	_printf
 19094  2865  2866               	goto	l15084
 19095                           	
 19096  2866                     l15083:	
 19097                           	line	61
 19098                           	
 19099  2866                     l15084:	
 19100  2866  0008               	return
 19101                           	opt stack 0
 19102                           GLOBAL	__end_of_cmdline_init
 19103  2867                     	__end_of_cmdline_init:
 19104 ;; =============== function _cmdline_init ends ============
 19105                           
 19106                           	signat	_cmdline_init,88
 19107                           	global	_rtc_init
 19108                           psect	text3260,local,class=CODE,delta=2
 19109                           global __ptext3260
 19110  2A64                     __ptext3260:
 19111                           
 19112 ;; *************** function _rtc_init *****************
 19113 ;; Defined at:
 19114 ;;		line 48 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19115 ;; Parameters:    Size  Location     Type
 19116 ;;  flags           1    wreg     unsigned char 
 19117 ;; Auto vars:     Size  Location     Type
 19118 ;;  flags           1   28[BANK0 ] unsigned char 
 19119 ;; Return value:  Size  Location     Type
 19120 ;;		None               void
 19121 ;; Registers used:
 19122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19123 ;; Tracked objects:
 19124 ;;		On entry : 0/0
 19125 ;;		On exit  : 0/0
 19126 ;;		Unchanged: 0/0
 19127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19131 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19132 ;;Total ram usage:        1 bytes
 19133 ;; Hardware stack levels used:    1
 19134 ;; Hardware stack levels required when called:    4
 19135 ;; This function calls:
 19136 ;;		_settimeout
 19137 ;; This function is called by:
 19138 ;;		_main
 19139 ;; This function uses a non-reentrant model
 19140 ;;
 19141                           psect	text3260
 19142                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19143                           	line	48
 19144                           	global	__size_of_rtc_init
 19145  001D                     	__size_of_rtc_init	equ	__end_of_rtc_init-_rtc_init
 19146                           	
 19147  2A64                     _rtc_init:	
 19148                           	opt	stack 11
 19149                           ; Regs used in _rtc_init: [wreg+fsr1l-status,0+pclath+cstack]
 19150                           ;rtc_init@flags stored from wreg
 19151  2A64  0020               	movlb 0	; select bank0
 19152  2A65  00BD               	movwf	(rtc_init@flags)
 19153                           	line	49
 19154                           	
 19155  2A66                     l37213:	
 19156                           ;rtc.c: 49: settimeout(&second, ((((4UL * (1000UL * ((1000UL)))))/4)/8));
 19157  2A66  304C               	movlw	(_second&0ffh)
 19158  2A67  00AD               	movwf	(?_settimeout)
 19159  2A68  3001               	movlw	0x2/2
 19160  2A69  00AE               	movwf	(?_settimeout+1)
 19161  2A6A  3000               	movlw	0
 19162  2A6B  00B2               	movwf	3+(?_settimeout)+02h
 19163  2A6C  3001               	movlw	01h
 19164  2A6D  00B1               	movwf	2+(?_settimeout)+02h
 19165  2A6E  30E8               	movlw	0E8h
 19166  2A6F  00B0               	movwf	1+(?_settimeout)+02h
 19167  2A70  3048               	movlw	048h
 19168  2A71  00AF               	movwf	0+(?_settimeout)+02h
 19169                           
 19170  2A72  31A1  2147  31AA   	fcall	_settimeout
 19171                           	line	51
 19172                           	
 19173  2A75                     l37215:	
 19174                           ;rtc.c: 51: if (flags & (0x01 << 7)) {
 19175  2A75  0020               	movlb 0	; select bank0
 19176  2A76  1FBD               	btfss	(rtc_init@flags),(7)&7
 19177  2A77  2A79               	goto	u10181
 19178  2A78  2A7A               	goto	u10180
 19179  2A79                     u10181:
 19180  2A79  2A80               	goto	l17211
 19181  2A7A                     u10180:
 19182                           	line	52
 19183                           	
 19184  2A7A                     l37217:	
 19185                           ;rtc.c: 52: currenttime.seconds = 0;
 19186  2A7A  0021               	movlb 1	; select bank1
 19187  2A7B  01C6               	clrf	(_currenttime)^080h
 19188                           	line	53
 19189                           ;rtc.c: 53: currenttime.minutes = 0;
 19190  2A7C  01C7               	clrf	0+(_currenttime)^080h+01h
 19191                           	line	54
 19192                           ;rtc.c: 54: currenttime.hours = 0;
 19193  2A7D  01C8               	clrf	0+(_currenttime)^080h+02h
 19194                           	line	55
 19195                           ;rtc.c: 55: currenttime.weekday = 0;
 19196  2A7E  01C9               	clrf	0+(_currenttime)^080h+03h
 19197  2A7F  2A80               	goto	l17211
 19198                           	line	56
 19199                           	
 19200  2A80                     l17210:	
 19201                           	line	57
 19202                           	
 19203  2A80                     l17211:	
 19204  2A80  0008               	return
 19205                           	opt stack 0
 19206                           GLOBAL	__end_of_rtc_init
 19207  2A81                     	__end_of_rtc_init:
 19208 ;; =============== function _rtc_init ends ============
 19209                           
 19210                           	signat	_rtc_init,4216
 19211                           	global	_cmd2index
 19212                           psect	text3261,local,class=CODE,delta=2
 19213                           global __ptext3261
 19214  2E9F                     __ptext3261:
 19215                           
 19216 ;; *************** function _cmd2index *****************
 19217 ;; Defined at:
 19218 ;;		line 189 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19219 ;; Parameters:    Size  Location     Type
 19220 ;;  cmd             1    wreg     PTR unsigned char 
 19221 ;;		 -> linebuffer(20), 
 19222 ;; Auto vars:     Size  Location     Type
 19223 ;;  cmd             1   14[BANK0 ] PTR unsigned char 
 19224 ;;		 -> linebuffer(20), 
 19225 ;;  index           2   15[BANK0 ] int 
 19226 ;; Return value:  Size  Location     Type
 19227 ;;                  2   11[BANK0 ] int 
 19228 ;; Registers used:
 19229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19230 ;; Tracked objects:
 19231 ;;		On entry : 0/0
 19232 ;;		On exit  : 0/0
 19233 ;;		Unchanged: 0/0
 19234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19236 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 19237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19239 ;;Total ram usage:        6 bytes
 19240 ;; Hardware stack levels used:    1
 19241 ;; Hardware stack levels required when called:    3
 19242 ;; This function calls:
 19243 ;;		___bmul
 19244 ;;		_strncmp
 19245 ;; This function is called by:
 19246 ;;		_proc_line
 19247 ;; This function uses a non-reentrant model
 19248 ;;
 19249                           psect	text3261
 19250                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 19251                           	line	189
 19252                           	global	__size_of_cmd2index
 19253  004E                     	__size_of_cmd2index	equ	__end_of_cmd2index-_cmd2index
 19254                           	
 19255  2E9F                     _cmd2index:	
 19256                           	opt	stack 9
 19257                           ; Regs used in _cmd2index: [wreg-status,0+pclath+cstack]
 19258                           ;cmd2index@cmd stored from wreg
 19259  2E9F  0020               	movlb 0	; select bank0
 19260  2EA0  00AF               	movwf	(cmd2index@cmd)
 19261                           	line	190
 19262                           	
 19263  2EA1                     l37197:	
 19264                           ;cmdline.c: 190: int index = 0;
 19265  2EA1  01B0               	clrf	(cmd2index@index)
 19266  2EA2  01B1               	clrf	(cmd2index@index+1)
 19267                           	line	192
 19268                           ;cmdline.c: 192: while (commands[index].function) {
 19269  2EA3  2ED0               	goto	l37207
 19270                           	
 19271  2EA4                     l15146:	
 19272                           	line	193
 19273                           	
 19274  2EA4                     l37199:	
 19275                           ;cmdline.c: 193: if (!strncmp (cmd, commands[index].cmd, (8)))
 19276  2EA4  3009               	movlw	(09h)
 19277  2EA5  0020               	movlb 0	; select bank0
 19278  2EA6  00AE               	movwf	(??_cmd2index+0)+0
 19279  2EA7  082E               	movf	(??_cmd2index+0)+0,w
 19280  2EA8  00A1               	movwf	(?___bmul)
 19281  2EA9  0830               	movf	(cmd2index@index),w
 19282  2EAA  31A9  21DC  31AE   	fcall	___bmul
 19283  2EAD  3E16               	addlw	low(_commands|8000h)
 19284  2EAE  0020               	movlb 0	; select bank0
 19285  2EAF  00A5               	movwf	(?_strncmp)
 19286  2EB0  3085               	movlw	high(_commands|8000h)
 19287  2EB1  1803               	skipnc
 19288  2EB2  0A89               	incf	wreg,f
 19289  2EB3  00A6               	movwf	1+(?_strncmp)
 19290  2EB4  3008               	movlw	low(08h)
 19291  2EB5  00A7               	movwf	0+(?_strncmp)+02h
 19292  2EB6  3000               	movlw	high(08h)
 19293  2EB7  00A8               	movwf	(0+(?_strncmp)+02h)+1
 19294  2EB8  082F               	movf	(cmd2index@cmd),w
 19295  2EB9  3190  2000  31AE   	fcall	_strncmp
 19296  2EBC  0020               	movlb 0	; select bank0
 19297  2EBD  0826               	movf	((1+(?_strncmp))),w
 19298  2EBE  0425               	iorwf	((0+(?_strncmp))),w
 19299  2EBF  1D03               	skipz
 19300  2EC0  2EC2               	goto	u10161
 19301  2EC1  2EC3               	goto	u10160
 19302  2EC2                     u10161:
 19303  2EC2  2ECB               	goto	l37205
 19304  2EC3                     u10160:
 19305                           	line	194
 19306                           	
 19307  2EC3                     l37201:	
 19308                           ;cmdline.c: 194: return index;
 19309  2EC3  0831               	movf	(cmd2index@index+1),w
 19310  2EC4  01AD               	clrf	(?_cmd2index+1)
 19311  2EC5  07AD               	addwf	(?_cmd2index+1)
 19312  2EC6  0830               	movf	(cmd2index@index),w
 19313  2EC7  01AC               	clrf	(?_cmd2index)
 19314  2EC8  07AC               	addwf	(?_cmd2index)
 19315                           
 19316  2EC9  2EEC               	goto	l15148
 19317                           	
 19318  2ECA                     l37203:	
 19319  2ECA  2EEC               	goto	l15148
 19320                           	
 19321  2ECB                     l15147:	
 19322                           	line	195
 19323                           	
 19324  2ECB                     l37205:	
 19325                           ;cmdline.c: 195: index++;
 19326  2ECB  3001               	movlw	low(01h)
 19327  2ECC  07B0               	addwf	(cmd2index@index),f
 19328  2ECD  3000               	movlw	high(01h)
 19329  2ECE  3DB1               	addwfc	(cmd2index@index+1),f
 19330  2ECF  2ED0               	goto	l37207
 19331                           	line	196
 19332                           	
 19333  2ED0                     l15145:	
 19334                           	line	192
 19335                           	
 19336  2ED0                     l37207:	
 19337  2ED0  3009               	movlw	(09h)
 19338  2ED1  00AE               	movwf	(??_cmd2index+0)+0
 19339  2ED2  082E               	movf	(??_cmd2index+0)+0,w
 19340  2ED3  00A1               	movwf	(?___bmul)
 19341  2ED4  0830               	movf	(cmd2index@index),w
 19342  2ED5  31A9  21DC  31AE   	fcall	___bmul
 19343  2ED8  3E08               	addlw	08h
 19344  2ED9  3E16               	addlw	low(_commands|8000h)
 19345  2EDA  0084               	movwf	fsr0l
 19346  2EDB  3085               	movlw	high(_commands|8000h)
 19347  2EDC  1803               	skipnc
 19348  2EDD  3E01               	addlw	1
 19349  2EDE  0085               	movwf	fsr0h
 19350  2EDF  0800               	movf	indf0,w ;code access
 19351  2EE0  3800               	iorlw	0
 19352  2EE1  1D03               	skipz
 19353  2EE2  2EE4               	goto	u10171
 19354  2EE3  2EE5               	goto	u10170
 19355  2EE4                     u10171:
 19356  2EE4  2EA4               	goto	l37199
 19357  2EE5                     u10170:
 19358  2EE5  2EE6               	goto	l37209
 19359                           	
 19360  2EE6                     l15149:	
 19361                           	line	198
 19362                           	
 19363  2EE6                     l37209:	
 19364                           ;cmdline.c: 196: }
 19365                           ;cmdline.c: 198: return (-1);
 19366  2EE6  30FF               	movlw	low(-1)
 19367  2EE7  0020               	movlb 0	; select bank0
 19368  2EE8  00AC               	movwf	(?_cmd2index)
 19369  2EE9  30FF               	movlw	high(-1)
 19370  2EEA  00AD               	movwf	((?_cmd2index))+1
 19371  2EEB  2EEC               	goto	l15148
 19372                           	
 19373  2EEC                     l37211:	
 19374                           	line	199
 19375                           	
 19376  2EEC                     l15148:	
 19377  2EEC  0008               	return
 19378                           	opt stack 0
 19379                           GLOBAL	__end_of_cmd2index
 19380  2EED                     	__end_of_cmd2index:
 19381 ;; =============== function _cmd2index ends ============
 19382                           
 19383                           	signat	_cmd2index,4218
 19384                           	global	_set_pacer
 19385                           psect	text3262,local,class=CODE,delta=2
 19386                           global __ptext3262
 19387  23CF                     __ptext3262:
 19388                           
 19389 ;; *************** function _set_pacer *****************
 19390 ;; Defined at:
 19391 ;;		line 460 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 19392 ;; Parameters:    Size  Location     Type
 19393 ;;  pacer           1    wreg     unsigned char 
 19394 ;;  pattern         1    8[BANK0 ] unsigned char 
 19395 ;;  repeat          1    9[BANK0 ] unsigned char 
 19396 ;; Auto vars:     Size  Location     Type
 19397 ;;  pacer           1   12[BANK0 ] unsigned char 
 19398 ;; Return value:  Size  Location     Type
 19399 ;;		None               void
 19400 ;; Registers used:
 19401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19402 ;; Tracked objects:
 19403 ;;		On entry : 0/0
 19404 ;;		On exit  : 0/0
 19405 ;;		Unchanged: 0/0
 19406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19410 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 19411 ;;Total ram usage:        5 bytes
 19412 ;; Hardware stack levels used:    1
 19413 ;; Hardware stack levels required when called:    3
 19414 ;; This function calls:
 19415 ;;		___bmul
 19416 ;;		_timeoutnow
 19417 ;; This function is called by:
 19418 ;;		_set_LED_Error
 19419 ;;		_set_LED_Locked
 19420 ;;		_set_LED_Cartridge
 19421 ;;		_set_LED_Cat
 19422 ;;		_set_Beeper
 19423 ;; This function uses a non-reentrant model
 19424 ;;
 19425                           psect	text3262
 19426                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 19427                           	line	460
 19428                           	global	__size_of_set_pacer
 19429  0077                     	__size_of_set_pacer	equ	__end_of_set_pacer-_set_pacer
 19430                           	
 19431  23CF                     _set_pacer:	
 19432                           	opt	stack 9
 19433                           ; Regs used in _set_pacer: [wreg+fsr1l-status,0+pclath+cstack]
 19434                           ;set_pacer@pacer stored from wreg
 19435                           	line	463
 19436  23CF  0020               	movlb 0	; select bank0
 19437  23D0  00AD               	movwf	(set_pacer@pacer)
 19438                           	
 19439  23D1                     l37187:	
 19440                           ;catgenie120.c: 461: if( repeat &&
 19441                           ;catgenie120.c: 462: (pacers[pacer].pattern == pattern) &&
 19442                           ;catgenie120.c: 463: (pacers[pacer].repeat == repeat) )
 19443  23D1  082A               	movf	(set_pacer@repeat),w
 19444  23D2  1D03               	skipz
 19445  23D3  2BD5               	goto	u10130
 19446  23D4  2BFF               	goto	l37195
 19447  23D5                     u10130:
 19448                           	
 19449  23D5                     l37189:	
 19450  23D5  300B               	movlw	(0Bh)
 19451  23D6  00AB               	movwf	(??_set_pacer+0)+0
 19452  23D7  082B               	movf	(??_set_pacer+0)+0,w
 19453  23D8  00A1               	movwf	(?___bmul)
 19454  23D9  082D               	movf	(set_pacer@pacer),w
 19455  23DA  31A9  21DC  31A3   	fcall	___bmul
 19456  23DD  3E07               	addlw	07h
 19457  23DE  3E20               	addlw	_pacers&0ffh
 19458  23DF  0086               	movwf	fsr1l
 19459  23E0  3002               	movlw 2	; select bank4/5
 19460  23E1  0087               	movwf fsr1h	
 19461                           	
 19462  23E2  0801               	movf	indf1,w
 19463  23E3  0020               	movlb 0	; select bank0
 19464  23E4  0629               	xorwf	(set_pacer@pattern),w
 19465  23E5  1D03               	skipz
 19466  23E6  2BE8               	goto	u10141
 19467  23E7  2BE9               	goto	u10140
 19468  23E8                     u10141:
 19469  23E8  2BFF               	goto	l37195
 19470  23E9                     u10140:
 19471                           	
 19472  23E9                     l37191:	
 19473  23E9  300B               	movlw	(0Bh)
 19474  23EA  00AB               	movwf	(??_set_pacer+0)+0
 19475  23EB  082B               	movf	(??_set_pacer+0)+0,w
 19476  23EC  00A1               	movwf	(?___bmul)
 19477  23ED  082D               	movf	(set_pacer@pacer),w
 19478  23EE  31A9  21DC  31A3   	fcall	___bmul
 19479  23F1  3E08               	addlw	08h
 19480  23F2  3E20               	addlw	_pacers&0ffh
 19481  23F3  0086               	movwf	fsr1l
 19482  23F4  3002               	movlw 2	; select bank4/5
 19483  23F5  0087               	movwf fsr1h	
 19484                           	
 19485  23F6  0801               	movf	indf1,w
 19486  23F7  0020               	movlb 0	; select bank0
 19487  23F8  062A               	xorwf	(set_pacer@repeat),w
 19488  23F9  1D03               	skipz
 19489  23FA  2BFC               	goto	u10151
 19490  23FB  2BFD               	goto	u10150
 19491  23FC                     u10151:
 19492  23FC  2BFF               	goto	l37195
 19493  23FD                     u10150:
 19494  23FD  2C45               	goto	l10970
 19495                           	line	464
 19496                           	
 19497  23FE                     l37193:	
 19498                           ;catgenie120.c: 464: return;
 19499  23FE  2C45               	goto	l10970
 19500                           	
 19501  23FF                     l10969:	
 19502                           	line	467
 19503                           	
 19504  23FF                     l37195:	
 19505                           ;catgenie120.c: 467: timeoutnow(&pacers[pacer].timer);
 19506  23FF  300B               	movlw	(0Bh)
 19507  2400  00AB               	movwf	(??_set_pacer+0)+0
 19508  2401  082B               	movf	(??_set_pacer+0)+0,w
 19509  2402  00A1               	movwf	(?___bmul)
 19510  2403  082D               	movf	(set_pacer@pacer),w
 19511  2404  31A9  21DC  31A3   	fcall	___bmul
 19512  2407  3E20               	addlw	_pacers&0ffh
 19513  2408  0020               	movlb 0	; select bank0
 19514  2409  00A5               	movwf	(?_timeoutnow)
 19515  240A  3002               	movlw	(0x4/2)
 19516  240B  00A6               	movwf	(?_timeoutnow+1)
 19517  240C  31AA  2248  31A3   	fcall	_timeoutnow
 19518                           	line	469
 19519                           ;catgenie120.c: 469: pacers[pacer].mask = 0x01;
 19520  240F  300B               	movlw	(0Bh)
 19521  2410  0020               	movlb 0	; select bank0
 19522  2411  00AB               	movwf	(??_set_pacer+0)+0
 19523  2412  082B               	movf	(??_set_pacer+0)+0,w
 19524  2413  00A1               	movwf	(?___bmul)
 19525  2414  082D               	movf	(set_pacer@pacer),w
 19526  2415  31A9  21DC  31A3   	fcall	___bmul
 19527  2418  3E06               	addlw	06h
 19528  2419  3E20               	addlw	_pacers&0ffh
 19529  241A  0086               	movwf	fsr1l
 19530  241B  3002               	movlw 2	; select bank4/5
 19531  241C  0087               	movwf fsr1h	
 19532                           	
 19533  241D  0181               	clrf	indf1
 19534  241E  1403               	bsf	status,0
 19535  241F  0D81               	rlf	indf1,f
 19536                           	line	471
 19537                           ;catgenie120.c: 471: pacers[pacer].pattern = pattern;
 19538  2420  0020               	movlb 0	; select bank0
 19539  2421  0829               	movf	(set_pacer@pattern),w
 19540  2422  00AB               	movwf	(??_set_pacer+0)+0
 19541  2423  300B               	movlw	(0Bh)
 19542  2424  00AC               	movwf	(??_set_pacer+1)+0
 19543  2425  082C               	movf	(??_set_pacer+1)+0,w
 19544  2426  00A1               	movwf	(?___bmul)
 19545  2427  082D               	movf	(set_pacer@pacer),w
 19546  2428  31A9  21DC  31A3   	fcall	___bmul
 19547  242B  3E07               	addlw	07h
 19548  242C  3E20               	addlw	_pacers&0ffh
 19549  242D  0086               	movwf	fsr1l
 19550  242E  3002               	movlw 2	; select bank4/5
 19551  242F  0087               	movwf fsr1h	
 19552                           	
 19553  2430  0020               	movlb 0	; select bank0
 19554  2431  082B               	movf	(??_set_pacer+0)+0,w
 19555  2432  0081               	movwf	indf1
 19556                           	line	473
 19557                           ;catgenie120.c: 473: pacers[pacer].repeat = repeat;
 19558  2433  082A               	movf	(set_pacer@repeat),w
 19559  2434  00AB               	movwf	(??_set_pacer+0)+0
 19560  2435  300B               	movlw	(0Bh)
 19561  2436  00AC               	movwf	(??_set_pacer+1)+0
 19562  2437  082C               	movf	(??_set_pacer+1)+0,w
 19563  2438  00A1               	movwf	(?___bmul)
 19564  2439  082D               	movf	(set_pacer@pacer),w
 19565  243A  31A9  21DC  31A3   	fcall	___bmul
 19566  243D  3E08               	addlw	08h
 19567  243E  3E20               	addlw	_pacers&0ffh
 19568  243F  0086               	movwf	fsr1l
 19569  2440  3002               	movlw 2	; select bank4/5
 19570  2441  0087               	movwf fsr1h	
 19571                           	
 19572  2442  0020               	movlb 0	; select bank0
 19573  2443  082B               	movf	(??_set_pacer+0)+0,w
 19574  2444  0081               	movwf	indf1
 19575                           	line	474
 19576                           	
 19577  2445                     l10970:	
 19578  2445  0008               	return
 19579                           	opt stack 0
 19580                           GLOBAL	__end_of_set_pacer
 19581  2446                     	__end_of_set_pacer:
 19582 ;; =============== function _set_pacer ends ============
 19583                           
 19584                           	signat	_set_pacer,12408
 19585                           	global	_both_long
 19586                           psect	text3263,local,class=CODE,delta=2
 19587                           global __ptext3263
 19588  28DD                     __ptext3263:
 19589                           
 19590 ;; *************** function _both_long *****************
 19591 ;; Defined at:
 19592 ;;		line 600 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 19593 ;; Parameters:    Size  Location     Type
 19594 ;;		None
 19595 ;; Auto vars:     Size  Location     Type
 19596 ;;		None
 19597 ;; Return value:  Size  Location     Type
 19598 ;;		None               void
 19599 ;; Registers used:
 19600 ;;		wreg, status,2, status,0, pclath, cstack
 19601 ;; Tracked objects:
 19602 ;;		On entry : 0/0
 19603 ;;		On exit  : 0/0
 19604 ;;		Unchanged: 0/0
 19605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19608 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19609 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19610 ;;Total ram usage:        1 bytes
 19611 ;; Hardware stack levels used:    1
 19612 ;; Hardware stack levels required when called:    3
 19613 ;; This function calls:
 19614 ;;		_eeprom_write
 19615 ;; This function is called by:
 19616 ;;		_userinterface_work
 19617 ;; This function uses a non-reentrant model
 19618 ;;
 19619                           psect	text3263
 19620                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 19621                           	line	600
 19622                           	global	__size_of_both_long
 19623  0010                     	__size_of_both_long	equ	__end_of_both_long-_both_long
 19624                           	
 19625  28DD                     _both_long:	
 19626                           	opt	stack 11
 19627                           ; Regs used in _both_long: [wreg+status,2+status,0+pclath+cstack]
 19628                           	line	601
 19629                           	
 19630  28DD                     l37183:	
 19631                           ;userinterface.c: 601: locked = !locked;
 19632  28DD  3008               	movlw	1<<((_locked)&7)
 19633  28DE  06F1               	xorwf	((_locked)/8),f
 19634                           	line	602
 19635                           	
 19636  28DF                     l37185:	
 19637                           ;userinterface.c: 602: eeprom_write((2), !locked);
 19638  28DF  1003               	clrc
 19639  28E0  1DF1               	btfss	(_locked/8),(_locked)&7
 19640  28E1  1403               	setc
 19641  28E2  3000               	movlw	0
 19642  28E3  3D09               	addwfc	wreg,w
 19643  28E4  0020               	movlb 0	; select bank0
 19644  28E5  00A5               	movwf	(??_both_long+0)+0
 19645  28E6  0825               	movf	(??_both_long+0)+0,w
 19646  28E7  00A1               	movwf	(?_eeprom_write)
 19647  28E8  3002               	movlw	(02h)
 19648  28E9  31AC  24A5  31A8   	fcall	_eeprom_write
 19649                           	line	603
 19650                           	
 19651  28EC                     l8801:	
 19652  28EC  0008               	return
 19653                           	opt stack 0
 19654                           GLOBAL	__end_of_both_long
 19655  28ED                     	__end_of_both_long:
 19656 ;; =============== function _both_long ends ============
 19657                           
 19658                           	signat	_both_long,88
 19659                           	global	_settimeout
 19660                           psect	text3264,local,class=CODE,delta=2
 19661                           global __ptext3264
 19662  2147                     __ptext3264:
 19663                           
 19664 ;; *************** function _settimeout *****************
 19665 ;; Defined at:
 19666 ;;		line 82 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;  timer_p         2   12[BANK0 ] const PTR struct timer
 19669 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 19670 ;;		 -> pacers(55), debouncers(42), cattimer(6), autotimer(6), 
 19671 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 19672 ;;		 -> timer_fill(6), timer_waitins(6), 
 19673 ;;  timout          4   14[BANK0 ] const unsigned long 
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;  tempLongTick    4   22[BANK0 ] unsigned long 
 19676 ;;  longshort       2   26[BANK0 ] PTR struct longshort
 19677 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 19678 ;;		 -> pacers(55), debouncers(42), cattimer(6), autotimer(6), 
 19679 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 19680 ;;		 -> timer_fill(6), timer_waitins(6), 
 19681 ;; Return value:  Size  Location     Type
 19682 ;;		None               void
 19683 ;; Registers used:
 19684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19685 ;; Tracked objects:
 19686 ;;		On entry : 0/0
 19687 ;;		On exit  : 0/0
 19688 ;;		Unchanged: 0/0
 19689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19690 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19691 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 19693 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 19694 ;;Total ram usage:       16 bytes
 19695 ;; Hardware stack levels used:    1
 19696 ;; Hardware stack levels required when called:    3
 19697 ;; This function calls:
 19698 ;;		_gettimestamp
 19699 ;; This function is called by:
 19700 ;;		_litterlanguage_pause
 19701 ;;		_exe_instruction
 19702 ;;		_catsensor_event
 19703 ;;		_process_button
 19704 ;;		_setup_short
 19705 ;;		_both_short
 19706 ;;		_update_autotimer
 19707 ;;		_catgenie_work
 19708 ;;		_catsensor_work
 19709 ;;		_rtc_init
 19710 ;;		_water_work
 19711 ;;		_incminutes
 19712 ;;		_inchours
 19713 ;;		_incweekday
 19714 ;; This function uses a non-reentrant model
 19715 ;;
 19716                           psect	text3264
 19717                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 19718                           	line	82
 19719                           	global	__size_of_settimeout
 19720  0065                     	__size_of_settimeout	equ	__end_of_settimeout-_settimeout
 19721                           	
 19722  2147                     _settimeout:	
 19723                           	opt	stack 10
 19724                           ; Regs used in _settimeout: [wreg+fsr1l-status,0+pclath+cstack]
 19725                           	line	84
 19726                           	
 19727  2147                     l37167:	
 19728                           ;timer.c: 83: unsigned long tempLongTicks;
 19729                           ;timer.c: 84: struct longshort *longshort = (struct longshort*)timer_p;
 19730  2147  0020               	movlb 0	; select bank0
 19731  2148  082E               	movf	(settimeout@timer_p+1),w
 19732  2149  01BC               	clrf	(settimeout@longshort+1)
 19733  214A  07BC               	addwf	(settimeout@longshort+1)
 19734  214B  082D               	movf	(settimeout@timer_p),w
 19735  214C  01BB               	clrf	(settimeout@longshort)
 19736  214D  07BB               	addwf	(settimeout@longshort)
 19737                           
 19738                           	line	87
 19739                           	
 19740  214E                     l37169:	
 19741                           ;timer.c: 87: gettimestamp(timer_p);
 19742  214E  082E               	movf	(settimeout@timer_p+1),w
 19743  214F  01A2               	clrf	(?_gettimestamp+1)
 19744  2150  07A2               	addwf	(?_gettimestamp+1)
 19745  2151  082D               	movf	(settimeout@timer_p),w
 19746  2152  01A1               	clrf	(?_gettimestamp)
 19747  2153  07A1               	addwf	(?_gettimestamp)
 19748                           
 19749  2154  31AE  2609  31A1   	fcall	_gettimestamp
 19750                           	line	90
 19751                           	
 19752  2157                     l37171:	
 19753                           ;timer.c: 90: if (!timout)
 19754  2157  0020               	movlb 0	; select bank0
 19755  2158  0832               	movf	(settimeout@timout+3),w
 19756  2159  0431               	iorwf	(settimeout@timout+2),w
 19757  215A  0430               	iorwf	(settimeout@timout+1),w
 19758  215B  042F               	iorwf	(settimeout@timout),w
 19759  215C  1D03               	skipz
 19760  215D  295F               	goto	u10101
 19761  215E  2960               	goto	u10100
 19762  215F                     u10101:
 19763  215F  2962               	goto	l37175
 19764  2160                     u10100:
 19765  2160  29AB               	goto	l21345
 19766                           	line	91
 19767                           	
 19768  2161                     l37173:	
 19769                           ;timer.c: 91: return;
 19770  2161  29AB               	goto	l21345
 19771                           	
 19772  2162                     l21344:	
 19773                           	line	94
 19774                           	
 19775  2162                     l37175:	
 19776                           ;timer.c: 94: tempLongTicks = longshort->ls_longTicks;
 19777  2162  083B               	movf	(settimeout@longshort),w
 19778  2163  0086               	movwf	fsr1l
 19779  2164  083C               	movf	(settimeout@longshort+1),w
 19780  2165  0087               	movwf	fsr1h
 19781                           
 19782  2166  3F40               	moviw	[0]fsr1
 19783  2167  00B7               	movwf	(settimeout@tempLongTicks)
 19784  2168  3F41               	moviw	[1]fsr1
 19785  2169  00B8               	movwf	(settimeout@tempLongTicks+1)
 19786  216A  3F42               	moviw	[2]fsr1
 19787  216B  00B9               	movwf	(settimeout@tempLongTicks+2)
 19788  216C  3F43               	moviw	[3]fsr1
 19789  216D  00BA               	movwf	(settimeout@tempLongTicks+3)
 19790                           	line	97
 19791                           ;timer.c: 97: longshort->ls_longTicks += timout;
 19792  216E  083B               	movf	(settimeout@longshort),w
 19793  216F  0086               	movwf	fsr1l
 19794  2170  083C               	movf	(settimeout@longshort+1),w
 19795  2171  0087               	movwf	fsr1h
 19796                           
 19797  2172  082F               	movf	(settimeout@timout),w
 19798  2173  0781               	addwf	indf1,f
 19799  2174  3141               	addfsr	fsr1,1
 19800  2175  0830               	movf	(settimeout@timout+1),w
 19801  2176  3D81               	addwfc	indf1,f
 19802  2177  3141               	addfsr	fsr1,1
 19803  2178  0831               	movf	(settimeout@timout+2),w
 19804  2179  3D81               	addwfc	indf1,f
 19805  217A  3141               	addfsr	fsr1,1
 19806  217B  0832               	movf	(settimeout@timout+3),w
 19807  217C  3D81               	addwfc	indf1,f
 19808                           
 19809                           	line	100
 19810                           ;timer.c: 100: if (longshort->ls_longTicks <= tempLongTicks)
 19811  217D  083B               	movf	(settimeout@longshort),w
 19812  217E  0086               	movwf	fsr1l
 19813  217F  083C               	movf	(settimeout@longshort+1),w
 19814  2180  0087               	movwf	fsr1h
 19815                           
 19816  2181  3F40               	moviw	[0]fsr1
 19817  2182  00B3               	movwf	((??_settimeout+0)+0+0)
 19818  2183  3F41               	moviw	[1]fsr1
 19819  2184  00B4               	movwf	((??_settimeout+0)+0+1)
 19820  2185  3F42               	moviw	[2]fsr1
 19821  2186  00B5               	movwf	((??_settimeout+0)+0+2)
 19822  2187  3F43               	moviw	[3]fsr1
 19823  2188  00B6               	movwf	((??_settimeout+0)+0+3)
 19824  2189  0836               	movf	3+(??_settimeout+0)+0,w
 19825  218A  023A               	subwf	(settimeout@tempLongTicks+3),w
 19826  218B  1D03               	skipz
 19827  218C  2997               	goto	u10115
 19828  218D  0835               	movf	2+(??_settimeout+0)+0,w
 19829  218E  0239               	subwf	(settimeout@tempLongTicks+2),w
 19830  218F  1D03               	skipz
 19831  2190  2997               	goto	u10115
 19832  2191  0834               	movf	1+(??_settimeout+0)+0,w
 19833  2192  0238               	subwf	(settimeout@tempLongTicks+1),w
 19834  2193  1D03               	skipz
 19835  2194  2997               	goto	u10115
 19836  2195  0833               	movf	0+(??_settimeout+0)+0,w
 19837  2196  0237               	subwf	(settimeout@tempLongTicks),w
 19838  2197                     u10115:
 19839  2197  1C03               	skipc
 19840  2198  299A               	goto	u10111
 19841  2199  299B               	goto	u10110
 19842  219A                     u10111:
 19843  219A  29AB               	goto	l21345
 19844  219B                     u10110:
 19845                           	line	101
 19846                           	
 19847  219B                     l37177:	
 19848                           ;timer.c: 101: longshort->ms_shortTicks++;
 19849  219B  083B               	movf	(settimeout@longshort),w
 19850  219C  3E04               	addlw	low(04h)
 19851  219D  00B3               	movwf	(??_settimeout+0)+0
 19852  219E  3000               	movlw	high(04h)
 19853  219F  3D3C               	addwfc	(settimeout@longshort+1),w
 19854  21A0  00B4               	movwf	1+(??_settimeout+0)+0
 19855  21A1  0833               	movf	0+(??_settimeout+0)+0,w
 19856  21A2  0086               	movwf	fsr1l
 19857  21A3  0834               	movf	1+(??_settimeout+0)+0,w
 19858  21A4  0087               	movwf	fsr1h
 19859                           
 19860  21A5  3001               	movlw	01h
 19861  21A6  0781               	addwf	indf1,f
 19862  21A7  3141               	addfsr	fsr1,1
 19863  21A8  1803               	skipnc
 19864  21A9  0A81               	incf	indf1,f
 19865  21AA  29AB               	goto	l21345
 19866                           	
 19867  21AB                     l21346:	
 19868                           	line	102
 19869                           	
 19870  21AB                     l21345:	
 19871  21AB  0008               	return
 19872                           	opt stack 0
 19873                           GLOBAL	__end_of_settimeout
 19874  21AC                     	__end_of_settimeout:
 19875 ;; =============== function _settimeout ends ============
 19876                           
 19877                           	signat	_settimeout,8312
 19878                           	global	_get_instruction
 19879                           psect	text3265,local,class=CODE,delta=2
 19880                           global __ptext3265
 19881  2956                     __ptext3265:
 19882                           
 19883 ;; *************** function _get_instruction *****************
 19884 ;; Defined at:
 19885 ;;		line 457 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;  instruction     1    wreg     PTR struct instruction
 19888 ;;		 -> cur_instruction(3), 
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;  instruction     1    4[BANK0 ] PTR struct instruction
 19891 ;;		 -> cur_instruction(3), 
 19892 ;; Return value:  Size  Location     Type
 19893 ;;                  1    wreg      unsigned char 
 19894 ;; Registers used:
 19895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19896 ;; Tracked objects:
 19897 ;;		On entry : 0/0
 19898 ;;		On exit  : 0/0
 19899 ;;		Unchanged: 0/0
 19900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19904 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19905 ;;Total ram usage:        1 bytes
 19906 ;; Hardware stack levels used:    1
 19907 ;; Hardware stack levels required when called:    3
 19908 ;; This function calls:
 19909 ;;		_romwashprogram_getins
 19910 ;; This function is called by:
 19911 ;;		_litterlanguage_work
 19912 ;; This function uses a non-reentrant model
 19913 ;;
 19914                           psect	text3265
 19915                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 19916                           	line	457
 19917                           	global	__size_of_get_instruction
 19918  0013                     	__size_of_get_instruction	equ	__end_of_get_instruction-_get_instruction
 19919                           	
 19920  2956                     _get_instruction:	
 19921                           	opt	stack 11
 19922                           ; Regs used in _get_instruction: [wreg-status,0+pclath+cstack]
 19923                           ;get_instruction@instruction stored from wreg
 19924  2956  0020               	movlb 0	; select bank0
 19925  2957  00A5               	movwf	(get_instruction@instruction)
 19926                           	line	458
 19927                           	
 19928  2958                     l37157:	
 19929                           ;litterlanguage.c: 458: switch (prg_source) {
 19930  2958  2962               	goto	l37165
 19931                           	line	459
 19932                           ;litterlanguage.c: 459: default:
 19933                           	
 19934  2959                     l4345:	
 19935  2959  295A               	goto	l37159
 19936                           	line	460
 19937                           ;litterlanguage.c: 460: case 0:
 19938                           	
 19939  295A                     l4346:	
 19940                           	line	461
 19941                           	
 19942  295A                     l37159:	
 19943                           ;litterlanguage.c: 461: return romwashprogram_getins(instruction);
 19944  295A  0020               	movlb 0	; select bank0
 19945  295B  0825               	movf	(get_instruction@instruction),w
 19946  295C  31A9  21C2  31A9   	fcall	_romwashprogram_getins
 19947  295F  2968               	goto	l4347
 19948                           	
 19949  2960                     l37161:	
 19950  2960  2968               	goto	l4347
 19951                           	line	462
 19952                           	
 19953  2961                     l37163:	
 19954                           ;litterlanguage.c: 462: }
 19955  2961  2968               	goto	l4347
 19956                           	line	458
 19957                           	
 19958  2962                     l4344:	
 19959                           	
 19960  2962                     l37165:	
 19961  2962  0021               	movlb 1	; select bank1
 19962  2963  085A               	movf	(_prg_source)^080h,w
 19963                           	; Switch size 1, requested type "space"
 19964                           ; Number of cases is 1, Range of values is 0 to 0
 19965                           ; switch strategies available:
 19966                           ; Name         Instructions Cycles
 19967                           ; simple_byte            4     3 (average)
 19968                           ; direct_byte            8     6 (fixed)
 19969                           ; jumptable            260     6 (fixed)
 19970                           ; rangetable             5     4 (fixed)
 19971                           ; spacedrange            7     6 (fixed)
 19972                           ; locatedrange           1     3 (fixed)
 19973                           ;	Chosen strategy is simple_byte
 19974                           
 19975                           	opt asmopt_off
 19976  2964  3A00               	xorlw	0^0	; case 0
 19977  2965  1903               	skipnz
 19978  2966  295A               	goto	l37159
 19979  2967  295A               	goto	l37159
 19980                           	opt asmopt_on
 19981                           
 19982                           	line	462
 19983                           	
 19984  2968                     l4348:	
 19985                           	line	463
 19986                           	
 19987  2968                     l4347:	
 19988  2968  0008               	return
 19989                           	opt stack 0
 19990                           GLOBAL	__end_of_get_instruction
 19991  2969                     	__end_of_get_instruction:
 19992 ;; =============== function _get_instruction ends ============
 19993                           
 19994                           	signat	_get_instruction,4217
 19995                           	global	_req_instruction
 19996                           psect	text3266,local,class=CODE,delta=2
 19997                           global __ptext3266
 19998  2943                     __ptext3266:
 19999                           
 20000 ;; *************** function _req_instruction *****************
 20001 ;; Defined at:
 20002 ;;		line 449 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  instruction     2    2[BANK0 ] PTR const struct instruc
 20005 ;;		 -> cleanupprogram(36), washprogram(303), cur_instruction(3), ROM(16384), 
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;		None               void
 20010 ;; Registers used:
 20011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20021 ;;Total ram usage:        2 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; Hardware stack levels required when called:    3
 20024 ;; This function calls:
 20025 ;;		_romwashprogram_reqins
 20026 ;; This function is called by:
 20027 ;;		_litterlanguage_work
 20028 ;; This function uses a non-reentrant model
 20029 ;;
 20030                           psect	text3266
 20031                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20032                           	line	449
 20033                           	global	__size_of_req_instruction
 20034  0013                     	__size_of_req_instruction	equ	__end_of_req_instruction-_req_instruction
 20035                           	
 20036  2943                     _req_instruction:	
 20037                           	opt	stack 11
 20038                           ; Regs used in _req_instruction: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20039                           	line	450
 20040                           	
 20041  2943                     l37151:	
 20042                           ;litterlanguage.c: 450: switch (prg_source) {
 20043  2943  294F               	goto	l37155
 20044                           	line	451
 20045                           ;litterlanguage.c: 451: case 0:
 20046                           	
 20047  2944                     l4339:	
 20048                           	line	452
 20049                           	
 20050  2944                     l37153:	
 20051                           ;litterlanguage.c: 452: romwashprogram_reqins(instruction);
 20052  2944  0020               	movlb 0	; select bank0
 20053  2945  0824               	movf	(req_instruction@instruction+1),w
 20054  2946  01A2               	clrf	(?_romwashprogram_reqins+1)
 20055  2947  07A2               	addwf	(?_romwashprogram_reqins+1)
 20056  2948  0823               	movf	(req_instruction@instruction),w
 20057  2949  01A1               	clrf	(?_romwashprogram_reqins)
 20058  294A  07A1               	addwf	(?_romwashprogram_reqins)
 20059                           
 20060  294B  31A8  2042  31A9   	fcall	_romwashprogram_reqins
 20061                           	line	453
 20062                           ;litterlanguage.c: 453: }
 20063  294E  2955               	goto	l4341
 20064                           	line	450
 20065                           	
 20066  294F                     l4338:	
 20067                           	
 20068  294F                     l37155:	
 20069  294F  0021               	movlb 1	; select bank1
 20070  2950  085A               	movf	(_prg_source)^080h,w
 20071                           	; Switch size 1, requested type "space"
 20072                           ; Number of cases is 1, Range of values is 0 to 0
 20073                           ; switch strategies available:
 20074                           ; Name         Instructions Cycles
 20075                           ; simple_byte            4     3 (average)
 20076                           ; direct_byte            8     6 (fixed)
 20077                           ; jumptable            260     6 (fixed)
 20078                           ; rangetable             5     4 (fixed)
 20079                           ; spacedrange            7     6 (fixed)
 20080                           ; locatedrange           1     3 (fixed)
 20081                           ;	Chosen strategy is simple_byte
 20082                           
 20083                           	opt asmopt_off
 20084  2951  3A00               	xorlw	0^0	; case 0
 20085  2952  1903               	skipnz
 20086  2953  2944               	goto	l37153
 20087  2954  2955               	goto	l4341
 20088                           	opt asmopt_on
 20089                           
 20090                           	line	453
 20091                           	
 20092  2955                     l4340:	
 20093                           	line	454
 20094                           	
 20095  2955                     l4341:	
 20096  2955  0008               	return
 20097                           	opt stack 0
 20098                           GLOBAL	__end_of_req_instruction
 20099  2956                     	__end_of_req_instruction:
 20100 ;; =============== function _req_instruction ends ============
 20101                           
 20102                           	signat	_req_instruction,4216
 20103                           	global	_timeoutexpired
 20104                           psect	text3267,local,class=CODE,delta=2
 20105                           global __ptext3267
 20106  235B                     __ptext3267:
 20107                           
 20108 ;; *************** function _timeoutexpired *****************
 20109 ;; Defined at:
 20110 ;;		line 170 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20111 ;; Parameters:    Size  Location     Type
 20112 ;;  timer_p         2    8[BANK0 ] const PTR const struct t
 20113 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 20114 ;;		 -> pacers(55), debouncers(42), cattimer(6), autotimer(6), 
 20115 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 20116 ;;		 -> timer_fill(6), timer_waitins(6), 
 20117 ;; Auto vars:     Size  Location     Type
 20118 ;;  currentTime     6   16[BANK0 ] struct timer
 20119 ;; Return value:  Size  Location     Type
 20120 ;;                  1    wreg      unsigned char 
 20121 ;; Registers used:
 20122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20123 ;; Tracked objects:
 20124 ;;		On entry : 0/0
 20125 ;;		On exit  : 0/0
 20126 ;;		Unchanged: 0/0
 20127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20129 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20130 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20131 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 20132 ;;Total ram usage:       14 bytes
 20133 ;; Hardware stack levels used:    1
 20134 ;; Hardware stack levels required when called:    3
 20135 ;; This function calls:
 20136 ;;		_gettimestamp
 20137 ;; This function is called by:
 20138 ;;		_litterlanguage_work
 20139 ;;		_wait_instruction
 20140 ;;		_userinterface_work
 20141 ;;		_catgenie_work
 20142 ;;		_catsensor_work
 20143 ;;		_rtc_work
 20144 ;;		_water_work
 20145 ;; This function uses a non-reentrant model
 20146 ;;
 20147                           psect	text3267
 20148                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20149                           	line	170
 20150                           	global	__size_of_timeoutexpired
 20151  0074                     	__size_of_timeoutexpired	equ	__end_of_timeoutexpired-_timeoutexpired
 20152                           	
 20153  235B                     _timeoutexpired:	
 20154                           	opt	stack 10
 20155                           ; Regs used in _timeoutexpired: [wreg+fsr1l-status,0+pclath+cstack]
 20156                           	line	174
 20157                           	
 20158  235B                     l37123:	
 20159                           ;timer.c: 171: struct timer currentTime;
 20160                           ;timer.c: 174: gettimestamp (&currentTime);
 20161  235B  3031               	movlw	(timeoutexpired@currentTime&0ffh)
 20162  235C  0020               	movlb 0	; select bank0
 20163  235D  00A1               	movwf	(?_gettimestamp)
 20164  235E  3000               	movlw	0x0/2
 20165  235F  00A2               	movwf	(?_gettimestamp+1)
 20166  2360  31AE  2609  31A3   	fcall	_gettimestamp
 20167                           	line	176
 20168                           	
 20169  2363                     l37125:	
 20170                           ;timer.c: 176: if (currentTime.overflows == timer_p->overflows) {
 20171  2363  0020               	movlb 0	; select bank0
 20172  2364  0829               	movf	(timeoutexpired@timer_p),w
 20173  2365  3E02               	addlw	low(02h)
 20174  2366  00AB               	movwf	(??_timeoutexpired+0)+0
 20175  2367  3000               	movlw	high(02h)
 20176  2368  3D2A               	addwfc	(timeoutexpired@timer_p+1),w
 20177  2369  00AC               	movwf	1+(??_timeoutexpired+0)+0
 20178  236A  082B               	movf	0+(??_timeoutexpired+0)+0,w
 20179  236B  0086               	movwf	fsr1l
 20180  236C  082C               	movf	1+(??_timeoutexpired+0)+0,w
 20181  236D  0087               	movwf	fsr1h
 20182                           
 20183  236E  3F40               	moviw	[0]fsr1
 20184  236F  00AD               	movwf	((??_timeoutexpired+2)+0+0)
 20185  2370  3F41               	moviw	[1]fsr1
 20186  2371  00AE               	movwf	((??_timeoutexpired+2)+0+1)
 20187  2372  3F42               	moviw	[2]fsr1
 20188  2373  00AF               	movwf	((??_timeoutexpired+2)+0+2)
 20189  2374  3F43               	moviw	[3]fsr1
 20190  2375  00B0               	movwf	((??_timeoutexpired+2)+0+3)
 20191  2376  0830               	movf	3+(??_timeoutexpired+2)+0,w
 20192  2377  0636               	xorwf	3+(timeoutexpired@currentTime)+02h,w
 20193  2378  1D03               	skipz
 20194  2379  2B84               	goto	u10075
 20195  237A  082F               	movf	2+(??_timeoutexpired+2)+0,w
 20196  237B  0635               	xorwf	2+(timeoutexpired@currentTime)+02h,w
 20197  237C  1D03               	skipz
 20198  237D  2B84               	goto	u10075
 20199  237E  082E               	movf	1+(??_timeoutexpired+2)+0,w
 20200  237F  0634               	xorwf	1+(timeoutexpired@currentTime)+02h,w
 20201  2380  1D03               	skipz
 20202  2381  2B84               	goto	u10075
 20203  2382  082D               	movf	0+(??_timeoutexpired+2)+0,w
 20204  2383  0633               	xorwf	0+(timeoutexpired@currentTime)+02h,w
 20205  2384                     u10075:
 20206  2384  1D03               	skipz
 20207  2385  2B87               	goto	u10071
 20208  2386  2B88               	goto	u10070
 20209  2387                     u10071:
 20210  2387  2BA2               	goto	l37139
 20211  2388                     u10070:
 20212                           	line	177
 20213                           	
 20214  2388                     l37127:	
 20215                           ;timer.c: 177: if (currentTime.timer1 >= timer_p->timer1)
 20216  2388  0829               	movf	(timeoutexpired@timer_p),w
 20217  2389  0086               	movwf	fsr1l
 20218  238A  082A               	movf	(timeoutexpired@timer_p+1),w
 20219  238B  0087               	movwf	fsr1h
 20220                           
 20221  238C  3F40               	moviw	[0]fsr1
 20222  238D  00AB               	movwf	(??_timeoutexpired+0)+0
 20223  238E  3F41               	moviw	[1]fsr1
 20224  238F  00AC               	movwf	(??_timeoutexpired+0)+0+1
 20225  2390  082C               	movf	1+(??_timeoutexpired+0)+0,w
 20226  2391  0232               	subwf	(timeoutexpired@currentTime+1),w
 20227  2392  1D03               	skipz
 20228  2393  2B96               	goto	u10085
 20229  2394  082B               	movf	0+(??_timeoutexpired+0)+0,w
 20230  2395  0231               	subwf	(timeoutexpired@currentTime),w
 20231  2396                     u10085:
 20232  2396  1C03               	skipc
 20233  2397  2B99               	goto	u10081
 20234  2398  2B9A               	goto	u10080
 20235  2399                     u10081:
 20236  2399  2B9E               	goto	l37135
 20237  239A                     u10080:
 20238                           	line	178
 20239                           	
 20240  239A                     l37129:	
 20241                           ;timer.c: 178: return 1;
 20242  239A  3001               	movlw	(01h)
 20243  239B  2BCE               	goto	l21362
 20244                           	
 20245  239C                     l37131:	
 20246  239C  2BCE               	goto	l21362
 20247                           	
 20248  239D                     l37133:	
 20249  239D  2BCE               	goto	l21362
 20250                           	line	179
 20251                           	
 20252  239E                     l21361:	
 20253                           	line	180
 20254                           	
 20255  239E                     l37135:	
 20256                           ;timer.c: 179: else
 20257                           ;timer.c: 180: return 0;
 20258  239E  3000               	movlw	(0)
 20259  239F  2BCE               	goto	l21362
 20260                           	
 20261  23A0                     l37137:	
 20262  23A0  2BCE               	goto	l21362
 20263                           	
 20264  23A1                     l21363:	
 20265                           	line	181
 20266                           ;timer.c: 181: } else {
 20267  23A1  2BCE               	goto	l21362
 20268                           	
 20269  23A2                     l21360:	
 20270                           	line	182
 20271                           	
 20272  23A2                     l37139:	
 20273                           ;timer.c: 182: if (currentTime.overflows > timer_p->overflows)
 20274  23A2  0829               	movf	(timeoutexpired@timer_p),w
 20275  23A3  3E02               	addlw	low(02h)
 20276  23A4  00AB               	movwf	(??_timeoutexpired+0)+0
 20277  23A5  3000               	movlw	high(02h)
 20278  23A6  3D2A               	addwfc	(timeoutexpired@timer_p+1),w
 20279  23A7  00AC               	movwf	1+(??_timeoutexpired+0)+0
 20280  23A8  082B               	movf	0+(??_timeoutexpired+0)+0,w
 20281  23A9  0086               	movwf	fsr1l
 20282  23AA  082C               	movf	1+(??_timeoutexpired+0)+0,w
 20283  23AB  0087               	movwf	fsr1h
 20284                           
 20285  23AC  3F40               	moviw	[0]fsr1
 20286  23AD  00AD               	movwf	((??_timeoutexpired+2)+0+0)
 20287  23AE  3F41               	moviw	[1]fsr1
 20288  23AF  00AE               	movwf	((??_timeoutexpired+2)+0+1)
 20289  23B0  3F42               	moviw	[2]fsr1
 20290  23B1  00AF               	movwf	((??_timeoutexpired+2)+0+2)
 20291  23B2  3F43               	moviw	[3]fsr1
 20292  23B3  00B0               	movwf	((??_timeoutexpired+2)+0+3)
 20293  23B4  0836               	movf	3+(timeoutexpired@currentTime)+02h,w
 20294  23B5  0230               	subwf	3+(??_timeoutexpired+2)+0,w
 20295  23B6  1D03               	skipz
 20296  23B7  2BC2               	goto	u10095
 20297  23B8  0835               	movf	2+(timeoutexpired@currentTime)+02h,w
 20298  23B9  022F               	subwf	2+(??_timeoutexpired+2)+0,w
 20299  23BA  1D03               	skipz
 20300  23BB  2BC2               	goto	u10095
 20301  23BC  0834               	movf	1+(timeoutexpired@currentTime)+02h,w
 20302  23BD  022E               	subwf	1+(??_timeoutexpired+2)+0,w
 20303  23BE  1D03               	skipz
 20304  23BF  2BC2               	goto	u10095
 20305  23C0  0833               	movf	0+(timeoutexpired@currentTime)+02h,w
 20306  23C1  022D               	subwf	0+(??_timeoutexpired+2)+0,w
 20307  23C2                     u10095:
 20308  23C2  1803               	skipnc
 20309  23C3  2BC5               	goto	u10091
 20310  23C4  2BC6               	goto	u10090
 20311  23C5                     u10091:
 20312  23C5  2BCA               	goto	l37147
 20313  23C6                     u10090:
 20314                           	line	183
 20315                           	
 20316  23C6                     l37141:	
 20317                           ;timer.c: 183: return 1;
 20318  23C6  3001               	movlw	(01h)
 20319  23C7  2BCE               	goto	l21362
 20320                           	
 20321  23C8                     l37143:	
 20322  23C8  2BCE               	goto	l21362
 20323                           	
 20324  23C9                     l37145:	
 20325  23C9  2BCE               	goto	l21362
 20326                           	line	184
 20327                           	
 20328  23CA                     l21365:	
 20329                           	line	185
 20330                           	
 20331  23CA                     l37147:	
 20332                           ;timer.c: 184: else
 20333                           ;timer.c: 185: return 0;
 20334  23CA  3000               	movlw	(0)
 20335  23CB  2BCE               	goto	l21362
 20336                           	
 20337  23CC                     l37149:	
 20338  23CC  2BCE               	goto	l21362
 20339                           	
 20340  23CD                     l21366:	
 20341  23CD  2BCE               	goto	l21362
 20342                           	line	186
 20343                           	
 20344  23CE                     l21364:	
 20345                           	line	187
 20346                           	
 20347  23CE                     l21362:	
 20348  23CE  0008               	return
 20349                           	opt stack 0
 20350                           GLOBAL	__end_of_timeoutexpired
 20351  23CF                     	__end_of_timeoutexpired:
 20352 ;; =============== function _timeoutexpired ends ============
 20353                           
 20354                           	signat	_timeoutexpired,4217
 20355                           	global	_printf
 20356                           psect	text3268,local,class=CODE,delta=2
 20357                           global __ptext3268
 20358  14A0                     __ptext3268:
 20359                           
 20360 ;; *************** function _printf *****************
 20361 ;; Defined at:
 20362 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
 20363 ;; Parameters:    Size  Location     Type
 20364 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 20365 ;;		 -> STR_113(17), STR_112(4), STR_111(17), STR_108(10), 
 20366 ;;		 -> STR_105(22), STR_104(15), STR_103(17), STR_102(11), 
 20367 ;;		 -> STR_101(14), STR_100(3), STR_99(3), STR_98(13), 
 20368 ;;		 -> STR_95(8), STR_94(18), STR_93(10), STR_92(12), 
 20369 ;;		 -> STR_91(20), STR_90(2), STR_89(18), STR_88(22), 
 20370 ;;		 -> STR_87(8), STR_86(19), STR_85(17), STR_82(24), 
 20371 ;;		 -> STR_79(20), STR_76(20), STR_73(17), STR_68(20), 
 20372 ;;		 -> STR_67(19), STR_62(16), STR_61(11), STR_60(10), 
 20373 ;;		 -> STR_55(15), STR_54(11), STR_53(9), STR_48(16), 
 20374 ;;		 -> STR_44(12), STR_40(13), STR_39(12), STR_36(21), 
 20375 ;;		 -> STR_35(14), STR_34(9), STR_33(8), STR_30(10), 
 20376 ;;		 -> STR_29(18), STR_28(18), STR_27(16), STR_24(21), 
 20377 ;;		 -> STR_23(2), STR_22(17), STR_21(15), STR_18(14), 
 20378 ;;		 -> STR_17(12), STR_16(15), STR_15(14), STR_14(20), 
 20379 ;;		 -> STR_13(9), STR_12(5), STR_11(7), STR_10(6), 
 20380 ;;		 -> STR_9(8), STR_8(19), STR_7(19), STR_6(11), 
 20381 ;;		 -> STR_5(19), STR_4(16), STR_3(17), STR_2(16), 
 20382 ;;		 -> STR_1(20), 
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;  _val            4   34[BANK0 ] struct .
 20385 ;;  width           2   30[BANK0 ] int 
 20386 ;;  c               1   33[BANK0 ] char 
 20387 ;;  prec            1   32[BANK0 ] char 
 20388 ;;  flag            1   29[BANK0 ] unsigned char 
 20389 ;;  ap              1   28[BANK0 ] PTR void [1]
 20390 ;;		 -> ?_printf(2), 
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  2   14[BANK0 ] int 
 20393 ;; Registers used:
 20394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20395 ;; Tracked objects:
 20396 ;;		On entry : 0/0
 20397 ;;		On exit  : 0/0
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20400 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 20401 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 20402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 20403 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0
 20404 ;;Total ram usage:       24 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:    3
 20407 ;; This function calls:
 20408 ;;		_putch
 20409 ;;		_isdigit
 20410 ;;		___wmul
 20411 ;;		___bmul
 20412 ;;		___lwdiv
 20413 ;;		___lwmod
 20414 ;; This function is called by:
 20415 ;;		_main
 20416 ;;		_litterlanguage_init
 20417 ;;		_litterlanguage_work
 20418 ;;		_litterlanguage_start
 20419 ;;		_litterlanguage_pause
 20420 ;;		_litterlanguage_stop
 20421 ;;		_watersensor_event
 20422 ;;		_litterlanguage_cleanup
 20423 ;;		_exe_instruction
 20424 ;;		_userinterface_work
 20425 ;;		_catsensor_event
 20426 ;;		_set_mode
 20427 ;;		_cmdline_init
 20428 ;;		_proc_char
 20429 ;;		_proc_line
 20430 ;;		_echo
 20431 ;;		_help
 20432 ;;		_printtime
 20433 ;; This function uses a non-reentrant model
 20434 ;;
 20435                           psect	text3268
 20436                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
 20437                           	line	461
 20438                           	global	__size_of_printf
 20439  0360                     	__size_of_printf	equ	__end_of_printf-_printf
 20440                           	
 20441  14A0                     _printf:	
 20442                           	opt	stack 9
 20443                           ; Regs used in _printf: [wreg-status,0+pclath+cstack]
 20444                           	line	537
 20445                           	
 20446  14A0                     l36929:	
 20447  14A0  3031               	movlw	(?_printf+02h)&0ffh
 20448  14A1  0020               	movlb 0	; select bank0
 20449  14A2  00B9               	movwf	(??_printf+0)+0
 20450  14A3  0839               	movf	(??_printf+0)+0,w
 20451  14A4  00BD               	movwf	(printf@ap)
 20452                           	line	540
 20453  14A5  2FE7               	goto	l37121
 20454                           	
 20455  14A6                     l23498:	
 20456                           	line	542
 20457                           	
 20458  14A6                     l36931:	
 20459  14A6  0842               	movf	(printf@c),w
 20460  14A7  3A25               	xorlw	025h&0ffh
 20461  14A8  1903               	skipnz
 20462  14A9  2CAB               	goto	u9701
 20463  14AA  2CAC               	goto	u9700
 20464  14AB                     u9701:
 20465  14AB  2CB1               	goto	l36935
 20466  14AC                     u9700:
 20467                           	line	545
 20468                           	
 20469  14AC                     l36933:	
 20470  14AC  0842               	movf	(printf@c),w
 20471  14AD  31AB  23C0  3194   	fcall	_putch
 20472                           	line	546
 20473  14B0  2FE7               	goto	l37121
 20474                           	line	547
 20475                           	
 20476  14B1                     l23499:	
 20477                           	line	550
 20478                           	
 20479  14B1                     l36935:	
 20480  14B1  0020               	movlb 0	; select bank0
 20481  14B2  01BF               	clrf	(printf@width)
 20482  14B3  01C0               	clrf	(printf@width+1)
 20483                           	line	552
 20484                           	
 20485  14B4                     l36937:	
 20486  14B4  01BE               	clrf	(printf@flag)
 20487  14B5  2CBE               	goto	l36943
 20488                           	line	554
 20489                           	
 20490  14B6                     l23500:	
 20491                           	line	555
 20492  14B6  2CBE               	goto	l36943
 20493                           	line	583
 20494                           	
 20495  14B7                     l23502:	
 20496                           	line	584
 20497  14B7  153E               	bsf	(printf@flag)+(2/8),(2)&7
 20498                           	line	585
 20499                           	
 20500  14B8                     l36939:	
 20501  14B8  3001               	movlw	low(01h)
 20502  14B9  07AF               	addwf	(printf@f),f
 20503  14BA  3000               	movlw	high(01h)
 20504  14BB  3DB0               	addwfc	(printf@f+1),f
 20505                           	line	586
 20506  14BC  2CBE               	goto	l36943
 20507                           	line	588
 20508                           	
 20509  14BD                     l36941:	
 20510  14BD  2CC9               	goto	l36945
 20511                           	line	555
 20512                           	
 20513  14BE                     l23501:	
 20514                           	
 20515  14BE                     l36943:	
 20516  14BE  082F               	movf	(printf@f),w
 20517  14BF  0084               	movwf	fsr0l
 20518  14C0  0830               	movf	((printf@f+1)),w
 20519  14C1  0085               	movwf	fsr0h
 20520  14C2  0800               	movf	indf0,w ;code access
 20521                           	; Switch size 1, requested type "space"
 20522                           ; Number of cases is 1, Range of values is 48 to 48
 20523                           ; switch strategies available:
 20524                           ; Name         Instructions Cycles
 20525                           ; simple_byte            4     3 (average)
 20526                           ; direct_byte           11     9 (fixed)
 20527                           ; jumptable            263     9 (fixed)
 20528                           ;	Chosen strategy is simple_byte
 20529                           
 20530                           	opt asmopt_off
 20531  14C3  3A30               	xorlw	48^0	; case 48
 20532  14C4  1903               	skipnz
 20533  14C5  2CB7               	goto	l23502
 20534  14C6  2CC9               	goto	l36945
 20535                           	opt asmopt_on
 20536                           
 20537                           	line	588
 20538                           	
 20539  14C7                     l23504:	
 20540                           	line	589
 20541  14C7  2CC9               	goto	l36945
 20542                           	line	590
 20543                           	
 20544  14C8                     l23503:	
 20545  14C8  2CBE               	goto	l36943
 20546                           	
 20547  14C9                     l23505:	
 20548                           	line	601
 20549                           	
 20550  14C9                     l36945:	
 20551  14C9  082F               	movf	(printf@f),w
 20552  14CA  0084               	movwf	fsr0l
 20553  14CB  0830               	movf	((printf@f+1)),w
 20554  14CC  0085               	movwf	fsr0h
 20555  14CD  0800               	movf	indf0,w ;code access
 20556  14CE  31A9  2194  3194   	fcall	_isdigit
 20557  14D1  1C03               	btfss	status,0
 20558  14D2  2CD4               	goto	u9711
 20559  14D3  2CD5               	goto	u9710
 20560  14D4                     u9711:
 20561  14D4  2D0D               	goto	l36955
 20562  14D5                     u9710:
 20563                           	line	602
 20564                           	
 20565  14D5                     l36947:	
 20566  14D5  0020               	movlb 0	; select bank0
 20567  14D6  01BF               	clrf	(printf@width)
 20568  14D7  01C0               	clrf	(printf@width+1)
 20569  14D8  2CD9               	goto	l36949
 20570                           	line	603
 20571                           	
 20572  14D9                     l23507:	
 20573                           	line	604
 20574                           	
 20575  14D9                     l36949:	
 20576  14D9  0020               	movlb 0	; select bank0
 20577  14DA  082F               	movf	(printf@f),w
 20578  14DB  0084               	movwf	fsr0l
 20579  14DC  0830               	movf	((printf@f+1)),w
 20580  14DD  0085               	movwf	fsr0h
 20581  14DE  0800               	movf	indf0,w ;code access
 20582  14DF  00B9               	movwf	(??_printf+0)+0
 20583  14E0  01BA               	clrf	(??_printf+0)+0+1
 20584  14E1  0840               	movf	(printf@width+1),w
 20585  14E2  01A2               	clrf	(?___wmul+1)
 20586  14E3  07A2               	addwf	(?___wmul+1)
 20587  14E4  083F               	movf	(printf@width),w
 20588  14E5  01A1               	clrf	(?___wmul)
 20589  14E6  07A1               	addwf	(?___wmul)
 20590                           
 20591  14E7  300A               	movlw	low(0Ah)
 20592  14E8  00A3               	movwf	0+(?___wmul)+02h
 20593  14E9  3000               	movlw	high(0Ah)
 20594  14EA  00A4               	movwf	(0+(?___wmul)+02h)+1
 20595  14EB  31A0  2000  3194   	fcall	___wmul
 20596  14EE  0020               	movlb 0	; select bank0
 20597  14EF  0839               	movf	0+(??_printf+0)+0,w
 20598  14F0  0721               	addwf	(0+(?___wmul)),w
 20599  14F1  00BB               	movwf	(??_printf+2)+0
 20600  14F2  083A               	movf	1+(??_printf+0)+0,w
 20601  14F3  3D22               	addwfc	(1+(?___wmul)),w
 20602  14F4  00BC               	movwf	1+(??_printf+2)+0
 20603  14F5  083B               	movf	0+(??_printf+2)+0,w
 20604  14F6  3ED0               	addlw	low(0FFD0h)
 20605  14F7  00BF               	movwf	(printf@width)
 20606  14F8  30FF               	movlw	high(0FFD0h)
 20607  14F9  3D3C               	addwfc	1+(??_printf+2)+0,w
 20608  14FA  00C0               	movwf	1+(printf@width)
 20609                           	
 20610  14FB                     l36951:	
 20611  14FB  3001               	movlw	low(01h)
 20612  14FC  07AF               	addwf	(printf@f),f
 20613  14FD  3000               	movlw	high(01h)
 20614  14FE  3DB0               	addwfc	(printf@f+1),f
 20615                           	line	605
 20616                           	
 20617  14FF                     l36953:	
 20618  14FF  082F               	movf	(printf@f),w
 20619  1500  0084               	movwf	fsr0l
 20620  1501  0830               	movf	((printf@f+1)),w
 20621  1502  0085               	movwf	fsr0h
 20622  1503  0800               	movf	indf0,w ;code access
 20623  1504  31A9  2194  3194   	fcall	_isdigit
 20624  1507  1803               	btfsc	status,0
 20625  1508  2D0A               	goto	u9721
 20626  1509  2D0B               	goto	u9720
 20627  150A                     u9721:
 20628  150A  2CD9               	goto	l36949
 20629  150B                     u9720:
 20630  150B  2D0D               	goto	l36955
 20631                           	
 20632  150C                     l23508:	
 20633  150C  2D0D               	goto	l36955
 20634                           	line	611
 20635                           	
 20636  150D                     l23506:	
 20637                           	line	614
 20638                           	
 20639  150D                     l36955:	
 20640  150D  0020               	movlb 0	; select bank0
 20641  150E  082F               	movf	(printf@f),w
 20642  150F  0084               	movwf	fsr0l
 20643  1510  0830               	movf	((printf@f+1)),w
 20644  1511  0085               	movwf	fsr0h
 20645  1512  0800               	movf	indf0,w ;code access
 20646  1513  3A2E               	xorlw	02Eh
 20647  1514  1D03               	skipz
 20648  1515  2D17               	goto	u9731
 20649  1516  2D18               	goto	u9730
 20650  1517                     u9731:
 20651  1517  2D46               	goto	l23509
 20652  1518                     u9730:
 20653                           	line	616
 20654                           	
 20655  1518                     l36957:	
 20656  1518  3001               	movlw	low(01h)
 20657  1519  07AF               	addwf	(printf@f),f
 20658  151A  3000               	movlw	high(01h)
 20659  151B  3DB0               	addwfc	(printf@f+1),f
 20660                           	line	624
 20661                           	
 20662  151C                     l36959:	
 20663  151C  01C1               	clrf	(printf@prec)
 20664                           	line	625
 20665  151D  2D38               	goto	l36965
 20666                           	
 20667  151E                     l23511:	
 20668                           	line	626
 20669                           	
 20670  151E                     l36961:	
 20671  151E  300A               	movlw	(0Ah)
 20672  151F  0020               	movlb 0	; select bank0
 20673  1520  00B9               	movwf	(??_printf+0)+0
 20674  1521  0839               	movf	(??_printf+0)+0,w
 20675  1522  00A1               	movwf	(?___bmul)
 20676  1523  0841               	movf	(printf@prec),w
 20677  1524  31A9  21DC  3194   	fcall	___bmul
 20678  1527  0020               	movlb 0	; select bank0
 20679  1528  00BA               	movwf	(??_printf+1)+0
 20680  1529  082F               	movf	(printf@f),w
 20681  152A  0084               	movwf	fsr0l
 20682  152B  0830               	movf	((printf@f+1)),w
 20683  152C  0085               	movwf	fsr0h
 20684  152D  0800               	movf	indf0,w ;code access
 20685  152E  073A               	addwf	0+(??_printf+1)+0,w
 20686  152F  3ED0               	addlw	-48
 20687  1530  00BB               	movwf	(??_printf+2)+0
 20688  1531  083B               	movf	(??_printf+2)+0,w
 20689  1532  00C1               	movwf	(printf@prec)
 20690                           	
 20691  1533                     l36963:	
 20692  1533  3001               	movlw	low(01h)
 20693  1534  07AF               	addwf	(printf@f),f
 20694  1535  3000               	movlw	high(01h)
 20695  1536  3DB0               	addwfc	(printf@f+1),f
 20696  1537  2D38               	goto	l36965
 20697                           	
 20698  1538                     l23510:	
 20699                           	line	625
 20700                           	
 20701  1538                     l36965:	
 20702  1538  082F               	movf	(printf@f),w
 20703  1539  0084               	movwf	fsr0l
 20704  153A  0830               	movf	((printf@f+1)),w
 20705  153B  0085               	movwf	fsr0h
 20706  153C  0800               	movf	indf0,w ;code access
 20707  153D  31A9  2194  3194   	fcall	_isdigit
 20708  1540  1803               	btfsc	status,0
 20709  1541  2D43               	goto	u9741
 20710  1542  2D44               	goto	u9740
 20711  1543                     u9741:
 20712  1543  2D1E               	goto	l36961
 20713  1544                     u9740:
 20714  1544  2DE6               	goto	l37007
 20715                           	
 20716  1545                     l23512:	
 20717                           	line	628
 20718  1545  2DE6               	goto	l37007
 20719                           	
 20720  1546                     l23509:	
 20721                           	line	629
 20722  1546  01C1               	clrf	(printf@prec)
 20723  1547  2DE6               	goto	l37007
 20724                           	line	633
 20725                           	
 20726  1548                     l23513:	
 20727                           	line	638
 20728  1548  2DE6               	goto	l37007
 20729                           	line	640
 20730                           	
 20731  1549                     l23515:	
 20732                           	line	641
 20733  1549  2FFF               	goto	l23581
 20734                           	line	700
 20735                           	
 20736  154A                     l23517:	
 20737  154A  2E0B               	goto	l37009
 20738                           	line	701
 20739                           	
 20740  154B                     l23518:	
 20741                           	line	702
 20742  154B  2E0B               	goto	l37009
 20743                           	line	715
 20744                           	
 20745  154C                     l23520:	
 20746                           	line	721
 20747                           	
 20748  154C                     l23521:	
 20749                           	line	724
 20750  154C  17BE               	bsf	(printf@flag)+(7/8),(7)&7
 20751                           	line	726
 20752  154D  2E0B               	goto	l37009
 20753                           	line	731
 20754                           	
 20755  154E                     l23522:	
 20756                           	line	737
 20757                           	
 20758  154E                     l36967:	
 20759  154E  083D               	movf	(printf@ap),w
 20760  154F  0086               	movwf	fsr1l
 20761  1550  0187               	clrf fsr1h	
 20762                           	
 20763  1551  3F40               	moviw	[0]fsr1
 20764  1552  00C3               	movwf	(printf@_val)
 20765  1553  3F41               	moviw	[1]fsr1
 20766  1554  00C4               	movwf	(printf@_val+1)
 20767                           	
 20768  1555                     l36969:	
 20769  1555  3002               	movlw	(02h)
 20770  1556  00B9               	movwf	(??_printf+0)+0
 20771  1557  0839               	movf	(??_printf+0)+0,w
 20772  1558  07BD               	addwf	(printf@ap),f
 20773                           	line	743
 20774                           	
 20775  1559                     l36971:	
 20776  1559  0844               	movf	((printf@_val+1)),w
 20777  155A  0443               	iorwf	((printf@_val)),w
 20778  155B  1D03               	skipz
 20779  155C  2D5E               	goto	u9751
 20780  155D  2D5F               	goto	u9750
 20781  155E                     u9751:
 20782  155E  2D64               	goto	l36975
 20783  155F                     u9750:
 20784                           	line	744
 20785                           	
 20786  155F                     l36973:	
 20787  155F  3002               	movlw	low(STR_114|8000h)
 20788  1560  00C3               	movwf	(printf@_val)
 20789  1561  3089               	movlw	high(STR_114|8000h)
 20790  1562  00C4               	movwf	((printf@_val))+1
 20791  1563  2D64               	goto	l36975
 20792                           	
 20793  1564                     l23523:	
 20794                           	line	748
 20795                           	
 20796  1564                     l36975:	
 20797  1564  01C5               	clrf	0+(printf@_val)+02h
 20798  1565  01C6               	clrf	1+(printf@_val)+02h
 20799                           	line	749
 20800  1566  2D6C               	goto	l36979
 20801                           	
 20802  1567                     l23525:	
 20803                           	line	750
 20804                           	
 20805  1567                     l36977:	
 20806  1567  3001               	movlw	low(01h)
 20807  1568  07C5               	addwf	0+(printf@_val)+02h,f
 20808  1569  3000               	movlw	high(01h)
 20809  156A  3DC6               	addwfc	1+(printf@_val)+02h,f
 20810  156B  2D6C               	goto	l36979
 20811                           	
 20812  156C                     l23524:	
 20813                           	line	749
 20814                           	
 20815  156C                     l36979:	
 20816  156C  0843               	movf	(printf@_val),w
 20817  156D  0745               	addwf	0+(printf@_val)+02h,w
 20818  156E  0084               	movwf	fsr0l
 20819  156F  0844               	movf	(printf@_val+1),w
 20820  1570  3D46               	addwfc	1+(printf@_val)+02h,w
 20821  1571  0085               	movwf	fsr0h
 20822  1572  0800               	movf	indf0,w ;code access
 20823  1573  3800               	iorlw	0
 20824  1574  1D03               	skipz
 20825  1575  2D77               	goto	u9761
 20826  1576  2D78               	goto	u9760
 20827  1577                     u9761:
 20828  1577  2D67               	goto	l36977
 20829  1578                     u9760:
 20830  1578  2D79               	goto	l36981
 20831                           	
 20832  1579                     l23526:	
 20833                           	line	756
 20834                           	
 20835  1579                     l36981:	
 20836  1579  0841               	movf	(printf@prec),w
 20837  157A  1D03               	skipz
 20838  157B  2D7D               	goto	u9770
 20839  157C  2D92               	goto	l36987
 20840  157D                     u9770:
 20841                           	
 20842  157D                     l36983:	
 20843  157D  0841               	movf	(printf@prec),w
 20844  157E  00B9               	movwf	(??_printf+0)+0
 20845  157F  01BA               	clrf	(??_printf+0)+0+1
 20846  1580  1BB9               	btfsc	(??_printf+0)+0,7
 20847  1581  03BA               	decf	(??_printf+0)+0+1,f
 20848  1582  0846               	movf	1+(printf@_val)+02h,w
 20849  1583  023A               	subwf	1+(??_printf+0)+0,w
 20850  1584  1D03               	skipz
 20851  1585  2D88               	goto	u9785
 20852  1586  0845               	movf	0+(printf@_val)+02h,w
 20853  1587  0239               	subwf	0+(??_printf+0)+0,w
 20854  1588                     u9785:
 20855  1588  1803               	skipnc
 20856  1589  2D8B               	goto	u9781
 20857  158A  2D8C               	goto	u9780
 20858  158B                     u9781:
 20859  158B  2D92               	goto	l36987
 20860  158C                     u9780:
 20861                           	line	757
 20862                           	
 20863  158C                     l36985:	
 20864  158C  0841               	movf	(printf@prec),w
 20865  158D  00C5               	movwf	0+(printf@_val)+02h
 20866  158E  01C6               	clrf	1+(printf@_val)+02h
 20867  158F  1BC5               	btfsc	0+(printf@_val)+02h,7
 20868  1590  03C6               	decf	1+(printf@_val)+02h,f
 20869  1591  2D92               	goto	l36987
 20870                           	
 20871  1592                     l23527:	
 20872                           	line	760
 20873                           	
 20874  1592                     l36987:	
 20875  1592  0840               	movf	(printf@width+1),w
 20876  1593  0246               	subwf	1+(printf@_val)+02h,w
 20877  1594  1D03               	skipz
 20878  1595  2D98               	goto	u9795
 20879  1596  083F               	movf	(printf@width),w
 20880  1597  0245               	subwf	0+(printf@_val)+02h,w
 20881  1598                     u9795:
 20882  1598  1803               	skipnc
 20883  1599  2D9B               	goto	u9791
 20884  159A  2D9C               	goto	u9790
 20885  159B                     u9791:
 20886  159B  2DA1               	goto	l36991
 20887  159C                     u9790:
 20888                           	line	761
 20889                           	
 20890  159C                     l36989:	
 20891  159C  0845               	movf	0+(printf@_val)+02h,w
 20892  159D  02BF               	subwf	(printf@width),f
 20893  159E  0846               	movf	1+(printf@_val)+02h,w
 20894  159F  3BC0               	subwfb	(printf@width+1),f
 20895  15A0  2DAA               	goto	l36995
 20896                           	line	762
 20897                           	
 20898  15A1                     l23528:	
 20899                           	line	763
 20900                           	
 20901  15A1                     l36991:	
 20902  15A1  01BF               	clrf	(printf@width)
 20903  15A2  01C0               	clrf	(printf@width+1)
 20904  15A3  2DAA               	goto	l36995
 20905                           	
 20906  15A4                     l23529:	
 20907                           	line	767
 20908  15A4  2DAA               	goto	l36995
 20909                           	
 20910  15A5                     l23531:	
 20911                           	line	768
 20912                           	
 20913  15A5                     l36993:	
 20914  15A5  3020               	movlw	(020h)
 20915  15A6  31AB  23C0  3194   	fcall	_putch
 20916  15A9  2DAA               	goto	l36995
 20917                           	
 20918  15AA                     l23530:	
 20919                           	line	767
 20920                           	
 20921  15AA                     l36995:	
 20922  15AA  30FF               	movlw	low(-1)
 20923  15AB  0020               	movlb 0	; select bank0
 20924  15AC  07BF               	addwf	(printf@width),f
 20925  15AD  30FF               	movlw	high(-1)
 20926  15AE  3DC0               	addwfc	(printf@width+1),f
 20927  15AF  30FF               	movlw	high(-1)
 20928  15B0  0640               	xorwf	((printf@width+1)),w
 20929  15B1  1D03               	skipz
 20930  15B2  2DB5               	goto	u9805
 20931  15B3  30FF               	movlw	low(-1)
 20932  15B4  063F               	xorwf	((printf@width)),w
 20933  15B5                     u9805:
 20934                           
 20935  15B5  1D03               	skipz
 20936  15B6  2DB8               	goto	u9801
 20937  15B7  2DB9               	goto	u9800
 20938  15B8                     u9801:
 20939  15B8  2DA5               	goto	l36993
 20940  15B9                     u9800:
 20941  15B9  2DC9               	goto	l37001
 20942                           	
 20943  15BA                     l23532:	
 20944                           	line	770
 20945  15BA  2DC9               	goto	l37001
 20946                           	
 20947  15BB                     l23534:	
 20948                           	line	771
 20949                           	
 20950  15BB                     l36997:	
 20951  15BB  0843               	movf	(printf@_val),w
 20952  15BC  0084               	movwf	fsr0l
 20953  15BD  0844               	movf	((printf@_val+1)),w
 20954  15BE  0085               	movwf	fsr0h
 20955  15BF  0800               	movf	indf0,w ;code access
 20956  15C0  31AB  23C0  3194   	fcall	_putch
 20957                           	
 20958  15C3                     l36999:	
 20959  15C3  3001               	movlw	low(01h)
 20960  15C4  0020               	movlb 0	; select bank0
 20961  15C5  07C3               	addwf	(printf@_val),f
 20962  15C6  3000               	movlw	high(01h)
 20963  15C7  3DC4               	addwfc	(printf@_val+1),f
 20964  15C8  2DC9               	goto	l37001
 20965                           	
 20966  15C9                     l23533:	
 20967                           	line	770
 20968                           	
 20969  15C9                     l37001:	
 20970  15C9  3002               	movlw	(02h)
 20971  15CA  3E43               	addlw	printf@_val&0ffh
 20972  15CB  0086               	movwf	fsr1l
 20973  15CC  0187               	clrf fsr1h	
 20974                           	
 20975  15CD  3001               	movlw	low(01h)
 20976  15CE  0281               	subwf	indf1,f
 20977  15CF  3141               	addfsr	fsr1,1
 20978  15D0  3000               	movlw	high(01h)
 20979  15D1  3B81               	subwfb	indf1,f
 20980  15D2  317F               	addfsr	fsr1,-1
 20981  15D3  3F40               	moviw	[0]fsr1
 20982  15D4  3AFF               	xorlw	low(0FFFFh)
 20983  15D5  1D03               	skipz
 20984  15D6  2DD9               	goto	u9815
 20985  15D7  3F41               	moviw	[1]fsr1
 20986  15D8  3AFF               	xorlw	high(0FFFFh)
 20987  15D9                     u9815:
 20988  15D9  1D03               	skipz
 20989  15DA  2DDC               	goto	u9811
 20990  15DB  2DDD               	goto	u9810
 20991  15DC                     u9811:
 20992  15DC  2DBB               	goto	l36997
 20993  15DD                     u9810:
 20994  15DD  2FE7               	goto	l37121
 20995                           	
 20996  15DE                     l23535:	
 20997                           	line	777
 20998  15DE  2FE7               	goto	l37121
 20999                           	line	805
 21000                           	
 21001  15DF                     l23536:	
 21002                           	line	816
 21003  15DF  2FE7               	goto	l37121
 21004                           	line	820
 21005                           	
 21006  15E0                     l23537:	
 21007                           	line	821
 21008                           	
 21009  15E0                     l37003:	
 21010  15E0  30C0               	movlw	(0C0h)
 21011  15E1  00B9               	movwf	(??_printf+0)+0
 21012  15E2  0839               	movf	(??_printf+0)+0,w
 21013  15E3  04BE               	iorwf	(printf@flag),f
 21014                           	line	822
 21015  15E4  2E0B               	goto	l37009
 21016                           	line	825
 21017                           	
 21018  15E5                     l37005:	
 21019  15E5  2E0B               	goto	l37009
 21020                           	line	638
 21021                           	
 21022  15E6                     l23514:	
 21023                           	
 21024  15E6                     l37007:	
 21025  15E6  0020               	movlb 0	; select bank0
 21026  15E7  0830               	movf	(printf@f+1),w
 21027  15E8  00BA               	movwf	(??_printf+0)+0+1
 21028  15E9  082F               	movf	(printf@f),w
 21029  15EA  00B9               	movwf	(??_printf+0)+0
 21030  15EB  3001               	movlw	(01h)
 21031  15EC  07AF               	addwf	(printf@f),f
 21032  15ED  1803               	skipnc
 21033  15EE  0AB0               	incf	(printf@f+1),f
 21034  15EF  0839               	movf	0+(??_printf+0)+0,w
 21035  15F0  0084               	movwf	fsr0l
 21036  15F1  083A               	movf	(1+(??_printf+0)+0),w
 21037  15F2  0085               	movwf	fsr0h
 21038  15F3  0800               	movf	indf0,w ;code access
 21039  15F4  00C2               	movwf	(printf@c)
 21040                           	; Switch size 1, requested type "space"
 21041                           ; Number of cases is 7, Range of values is 0 to 120
 21042                           ; switch strategies available:
 21043                           ; Name         Instructions Cycles
 21044                           ; simple_byte           22    12 (average)
 21045                           ; direct_byte          248     6 (fixed)
 21046                           ; jumptable            260     6 (fixed)
 21047                           ; rangetable           125     4 (fixed)
 21048                           ; spacedrange          247     6 (fixed)
 21049                           ; locatedrange         121     3 (fixed)
 21050                           ;	Chosen strategy is simple_byte
 21051                           
 21052                           	opt asmopt_off
 21053  15F5  3A00               	xorlw	0^0	; case 0
 21054  15F6  1903               	skipnz
 21055  15F7  2FFF               	goto	l23581
 21056  15F8  3A58               	xorlw	88^0	; case 88
 21057  15F9  1903               	skipnz
 21058  15FA  2D4C               	goto	l23521
 21059  15FB  3A3C               	xorlw	100^88	; case 100
 21060  15FC  1903               	skipnz
 21061  15FD  2E0B               	goto	l37009
 21062  15FE  3A0D               	xorlw	105^100	; case 105
 21063  15FF  1903               	skipnz
 21064  1600  2E0B               	goto	l37009
 21065  1601  3A1A               	xorlw	115^105	; case 115
 21066  1602  1903               	skipnz
 21067  1603  2D4E               	goto	l36967
 21068  1604  3A06               	xorlw	117^115	; case 117
 21069  1605  1903               	skipnz
 21070  1606  2DE0               	goto	l37003
 21071  1607  3A0D               	xorlw	120^117	; case 120
 21072  1608  1903               	skipnz
 21073  1609  2D4C               	goto	l23521
 21074  160A  2FE7               	goto	l37121
 21075                           	opt asmopt_on
 21076                           
 21077                           	line	825
 21078                           	
 21079  160B                     l23519:	
 21080                           	line	1246
 21081                           	
 21082  160B                     l37009:	
 21083  160B  083E               	movf	(printf@flag),w
 21084  160C  39C0               	andlw	0C0h
 21085  160D  1D03               	btfss	status,2
 21086  160E  2E10               	goto	u9821
 21087  160F  2E11               	goto	u9820
 21088  1610                     u9821:
 21089  1610  2E2B               	goto	l37021
 21090  1611                     u9820:
 21091                           	line	1254
 21092                           	
 21093  1611                     l37011:	
 21094  1611  083D               	movf	(printf@ap),w
 21095  1612  0086               	movwf	fsr1l
 21096  1613  0187               	clrf fsr1h	
 21097                           	
 21098  1614  3F40               	moviw	[0]fsr1
 21099  1615  00C3               	movwf	(printf@_val)
 21100  1616  3F41               	moviw	[1]fsr1
 21101  1617  00C4               	movwf	(printf@_val+1)
 21102                           	
 21103  1618                     l37013:	
 21104  1618  3002               	movlw	(02h)
 21105  1619  00B9               	movwf	(??_printf+0)+0
 21106  161A  0839               	movf	(??_printf+0)+0,w
 21107  161B  07BD               	addwf	(printf@ap),f
 21108                           	line	1256
 21109                           	
 21110  161C                     l37015:	
 21111  161C  1FC4               	btfss	(printf@_val+1),7
 21112  161D  2E1F               	goto	u9831
 21113  161E  2E20               	goto	u9830
 21114  161F                     u9831:
 21115  161F  2E37               	goto	l37025
 21116  1620                     u9830:
 21117                           	line	1257
 21118                           	
 21119  1620                     l37017:	
 21120  1620  3003               	movlw	(03h)
 21121  1621  00B9               	movwf	(??_printf+0)+0
 21122  1622  0839               	movf	(??_printf+0)+0,w
 21123  1623  04BE               	iorwf	(printf@flag),f
 21124                           	line	1258
 21125                           	
 21126  1624                     l37019:	
 21127  1624  09C3               	comf	(printf@_val),f
 21128  1625  09C4               	comf	(printf@_val+1),f
 21129  1626  0AC3               	incf	(printf@_val),f
 21130  1627  1903               	skipnz
 21131  1628  0AC4               	incf	(printf@_val+1),f
 21132  1629  2E37               	goto	l37025
 21133                           	line	1259
 21134                           	
 21135  162A                     l23539:	
 21136                           	line	1261
 21137  162A  2E37               	goto	l37025
 21138                           	line	1263
 21139                           	
 21140  162B                     l23538:	
 21141                           	line	1281
 21142                           	
 21143  162B                     l37021:	
 21144  162B  083D               	movf	(printf@ap),w
 21145  162C  0086               	movwf	fsr1l
 21146  162D  0187               	clrf fsr1h	
 21147                           	
 21148  162E  3F40               	moviw	[0]fsr1
 21149  162F  00C3               	movwf	(printf@_val)
 21150  1630  3F41               	moviw	[1]fsr1
 21151  1631  00C4               	movwf	(printf@_val+1)
 21152                           	
 21153  1632                     l37023:	
 21154  1632  3002               	movlw	(02h)
 21155  1633  00B9               	movwf	(??_printf+0)+0
 21156  1634  0839               	movf	(??_printf+0)+0,w
 21157  1635  07BD               	addwf	(printf@ap),f
 21158  1636  2E37               	goto	l37025
 21159                           	line	1282
 21160                           	
 21161  1637                     l23540:	
 21162                           	line	1285
 21163                           	
 21164  1637                     l37025:	
 21165  1637  08C1               	movf	(printf@prec),f
 21166  1638  1D03               	skipz
 21167  1639  2E3B               	goto	u9841
 21168  163A  2E3C               	goto	u9840
 21169  163B                     u9841:
 21170  163B  2EA8               	goto	l37061
 21171  163C                     u9840:
 21172                           	
 21173  163C                     l37027:	
 21174  163C  0844               	movf	((printf@_val+1)),w
 21175  163D  0443               	iorwf	((printf@_val)),w
 21176  163E  1D03               	skipz
 21177  163F  2E41               	goto	u9851
 21178  1640  2E42               	goto	u9850
 21179  1641                     u9851:
 21180  1641  2EA8               	goto	l37061
 21181  1642                     u9850:
 21182                           	line	1286
 21183                           	
 21184  1642                     l37029:	
 21185  1642  3001               	movlw	(01h)
 21186  1643  00B9               	movwf	(??_printf+0)+0
 21187  1644  0839               	movf	(??_printf+0)+0,w
 21188  1645  07C1               	addwf	(printf@prec),f
 21189  1646  2EA8               	goto	l37061
 21190                           	
 21191  1647                     l23541:	
 21192                           	line	1289
 21193  1647  2EA8               	goto	l37061
 21194                           	line	1294
 21195                           	
 21196  1648                     l23543:	
 21197  1648  2E49               	goto	l37031
 21198                           	line	1297
 21199                           	
 21200  1649                     l23544:	
 21201                           	line	1300
 21202                           	
 21203  1649                     l37031:	
 21204  1649  01C2               	clrf	(printf@c)
 21205  164A  1403               	bsf	status,0
 21206  164B  0DC2               	rlf	(printf@c),f
 21207                           	
 21208  164C                     l37033:	
 21209  164C  0842               	movf	(printf@c),w
 21210  164D  3A05               	xorlw	05h&0ffh
 21211  164E  1D03               	skipz
 21212  164F  2E51               	goto	u9861
 21213  1650  2E52               	goto	u9860
 21214  1651                     u9861:
 21215  1651  2E54               	goto	l37037
 21216  1652                     u9860:
 21217  1652  2EB4               	goto	l37063
 21218                           	
 21219  1653                     l37035:	
 21220  1653  2EB4               	goto	l37063
 21221                           	line	1301
 21222                           	
 21223  1654                     l23545:	
 21224                           	
 21225  1654                     l37037:	
 21226  1654  0842               	movf	(printf@c),w
 21227  1655  0709               	addwf	wreg,w
 21228  1656  3E01               	addlw	low(_dpowers|8000h)
 21229  1657  0084               	movwf	fsr0l
 21230  1658  3082               	movlw	high(_dpowers|8000h)
 21231  1659  1803               	skipnc
 21232  165A  3E01               	addlw	1
 21233  165B  0085               	movwf	fsr0h
 21234  165C  3F00               	moviw	[0]fsr0
 21235  165D  00B9               	movwf	(??_printf+0)+0
 21236  165E  3F01               	moviw	[1]fsr0
 21237  165F  00BA               	movwf	(??_printf+0)+0+1
 21238  1660  083A               	movf	1+(??_printf+0)+0,w
 21239  1661  0244               	subwf	(printf@_val+1),w
 21240  1662  1D03               	skipz
 21241  1663  2E66               	goto	u9875
 21242  1664  0839               	movf	0+(??_printf+0)+0,w
 21243  1665  0243               	subwf	(printf@_val),w
 21244  1666                     u9875:
 21245  1666  1803               	skipnc
 21246  1667  2E69               	goto	u9871
 21247  1668  2E6A               	goto	u9870
 21248  1669                     u9871:
 21249  1669  2E6C               	goto	l37041
 21250  166A                     u9870:
 21251  166A  2EB4               	goto	l37063
 21252                           	line	1302
 21253                           	
 21254  166B                     l37039:	
 21255  166B  2EB4               	goto	l37063
 21256                           	
 21257  166C                     l23547:	
 21258                           	line	1300
 21259                           	
 21260  166C                     l37041:	
 21261  166C  3001               	movlw	(01h)
 21262  166D  00B9               	movwf	(??_printf+0)+0
 21263  166E  0839               	movf	(??_printf+0)+0,w
 21264  166F  07C2               	addwf	(printf@c),f
 21265                           	
 21266  1670                     l37043:	
 21267  1670  0842               	movf	(printf@c),w
 21268  1671  3A05               	xorlw	05h&0ffh
 21269  1672  1D03               	skipz
 21270  1673  2E75               	goto	u9881
 21271  1674  2E76               	goto	u9880
 21272  1675                     u9881:
 21273  1675  2E54               	goto	l37037
 21274  1676                     u9880:
 21275  1676  2EB4               	goto	l37063
 21276                           	
 21277  1677                     l23546:	
 21278                           	line	1304
 21279  1677  2EB4               	goto	l37063
 21280                           	line	1309
 21281                           	
 21282  1678                     l23549:	
 21283                           	line	1311
 21284                           	
 21285  1678                     l37045:	
 21286  1678  01C2               	clrf	(printf@c)
 21287  1679  1403               	bsf	status,0
 21288  167A  0DC2               	rlf	(printf@c),f
 21289                           	
 21290  167B                     l37047:	
 21291  167B  0842               	movf	(printf@c),w
 21292  167C  3A04               	xorlw	04h&0ffh
 21293  167D  1D03               	skipz
 21294  167E  2E80               	goto	u9891
 21295  167F  2E81               	goto	u9890
 21296  1680                     u9891:
 21297  1680  2E83               	goto	l37051
 21298  1681                     u9890:
 21299  1681  2EB4               	goto	l37063
 21300                           	
 21301  1682                     l37049:	
 21302  1682  2EB4               	goto	l37063
 21303                           	line	1312
 21304                           	
 21305  1683                     l23550:	
 21306                           	
 21307  1683                     l37051:	
 21308  1683  0842               	movf	(printf@c),w
 21309  1684  0709               	addwf	wreg,w
 21310  1685  3E0B               	addlw	low(_hexpowers|8000h)
 21311  1686  0084               	movwf	fsr0l
 21312  1687  3082               	movlw	high(_hexpowers|8000h)
 21313  1688  1803               	skipnc
 21314  1689  3E01               	addlw	1
 21315  168A  0085               	movwf	fsr0h
 21316  168B  3F00               	moviw	[0]fsr0
 21317  168C  00B9               	movwf	(??_printf+0)+0
 21318  168D  3F01               	moviw	[1]fsr0
 21319  168E  00BA               	movwf	(??_printf+0)+0+1
 21320  168F  083A               	movf	1+(??_printf+0)+0,w
 21321  1690  0244               	subwf	(printf@_val+1),w
 21322  1691  1D03               	skipz
 21323  1692  2E95               	goto	u9905
 21324  1693  0839               	movf	0+(??_printf+0)+0,w
 21325  1694  0243               	subwf	(printf@_val),w
 21326  1695                     u9905:
 21327  1695  1803               	skipnc
 21328  1696  2E98               	goto	u9901
 21329  1697  2E99               	goto	u9900
 21330  1698                     u9901:
 21331  1698  2E9B               	goto	l37055
 21332  1699                     u9900:
 21333  1699  2EB4               	goto	l37063
 21334                           	line	1313
 21335                           	
 21336  169A                     l37053:	
 21337  169A  2EB4               	goto	l37063
 21338                           	
 21339  169B                     l23552:	
 21340                           	line	1311
 21341                           	
 21342  169B                     l37055:	
 21343  169B  3001               	movlw	(01h)
 21344  169C  00B9               	movwf	(??_printf+0)+0
 21345  169D  0839               	movf	(??_printf+0)+0,w
 21346  169E  07C2               	addwf	(printf@c),f
 21347                           	
 21348  169F                     l37057:	
 21349  169F  0842               	movf	(printf@c),w
 21350  16A0  3A04               	xorlw	04h&0ffh
 21351  16A1  1D03               	skipz
 21352  16A2  2EA4               	goto	u9911
 21353  16A3  2EA5               	goto	u9910
 21354  16A4                     u9911:
 21355  16A4  2E83               	goto	l37051
 21356  16A5                     u9910:
 21357  16A5  2EB4               	goto	l37063
 21358                           	
 21359  16A6                     l23551:	
 21360                           	line	1315
 21361  16A6  2EB4               	goto	l37063
 21362                           	line	1331
 21363                           	
 21364  16A7                     l37059:	
 21365  16A7  2EB4               	goto	l37063
 21366                           	line	1289
 21367                           	
 21368  16A8                     l23542:	
 21369                           	
 21370  16A8                     l37061:	
 21371  16A8  083E               	movf	(printf@flag),w
 21372  16A9  39C0               	andlw	0C0h
 21373                           	; Switch size 1, requested type "space"
 21374                           ; Number of cases is 3, Range of values is 0 to 192
 21375                           ; switch strategies available:
 21376                           ; Name         Instructions Cycles
 21377                           ; simple_byte           10     6 (average)
 21378                           ; jumptable            260     6 (fixed)
 21379                           ; rangetable           197     6 (fixed)
 21380                           ; spacedrange          391     8 (fixed)
 21381                           ; locatedrange         193     3 (fixed)
 21382                           ;	Chosen strategy is simple_byte
 21383                           
 21384                           	opt asmopt_off
 21385  16AA  3A00               	xorlw	0^0	; case 0
 21386  16AB  1903               	skipnz
 21387  16AC  2E49               	goto	l37031
 21388  16AD  3A80               	xorlw	128^0	; case 128
 21389  16AE  1903               	skipnz
 21390  16AF  2E78               	goto	l37045
 21391  16B0  3A40               	xorlw	192^128	; case 192
 21392  16B1  1903               	skipnz
 21393  16B2  2E49               	goto	l37031
 21394  16B3  2EB4               	goto	l37063
 21395                           	opt asmopt_on
 21396                           
 21397                           	line	1331
 21398                           	
 21399  16B4                     l23548:	
 21400                           	line	1334
 21401                           	
 21402  16B4                     l37063:	
 21403  16B4  0842               	movf	(printf@c),w
 21404  16B5  3A80               	xorlw	80h
 21405  16B6  00B9               	movwf	(??_printf+0)+0
 21406  16B7  0841               	movf	(printf@prec),w
 21407  16B8  3A80               	xorlw	80h
 21408  16B9  02B9               	subwf	(??_printf+0)+0
 21409  16BA  1803               	skipnc
 21410  16BB  2EBD               	goto	u9921
 21411  16BC  2EBE               	goto	u9920
 21412  16BD                     u9921:
 21413  16BD  2EC3               	goto	l37067
 21414  16BE                     u9920:
 21415                           	line	1335
 21416                           	
 21417  16BE                     l37065:	
 21418  16BE  0841               	movf	(printf@prec),w
 21419  16BF  00B9               	movwf	(??_printf+0)+0
 21420  16C0  0839               	movf	(??_printf+0)+0,w
 21421  16C1  00C2               	movwf	(printf@c)
 21422  16C2  2ED2               	goto	l23554
 21423                           	line	1336
 21424                           	
 21425  16C3                     l23553:	
 21426                           	
 21427  16C3                     l37067:	
 21428  16C3  0841               	movf	(printf@prec),w
 21429  16C4  3A80               	xorlw	80h
 21430  16C5  00B9               	movwf	(??_printf+0)+0
 21431  16C6  0842               	movf	(printf@c),w
 21432  16C7  3A80               	xorlw	80h
 21433  16C8  02B9               	subwf	(??_printf+0)+0
 21434  16C9  1803               	skipnc
 21435  16CA  2ECC               	goto	u9931
 21436  16CB  2ECD               	goto	u9930
 21437  16CC                     u9931:
 21438  16CC  2ED2               	goto	l23554
 21439  16CD                     u9930:
 21440                           	line	1337
 21441                           	
 21442  16CD                     l37069:	
 21443  16CD  0842               	movf	(printf@c),w
 21444  16CE  00B9               	movwf	(??_printf+0)+0
 21445  16CF  0839               	movf	(??_printf+0)+0,w
 21446  16D0  00C1               	movwf	(printf@prec)
 21447  16D1  2ED2               	goto	l23554
 21448                           	
 21449  16D2                     l23555:	
 21450                           	line	1340
 21451                           	
 21452  16D2                     l23554:	
 21453  16D2  0840               	movf	(printf@width+1),w
 21454  16D3  043F               	iorwf	(printf@width),w
 21455  16D4  1903               	skipnz
 21456  16D5  2ED7               	goto	u9941
 21457  16D6  2ED8               	goto	u9940
 21458  16D7                     u9941:
 21459  16D7  2F07               	goto	l37081
 21460  16D8                     u9940:
 21461                           	
 21462  16D8                     l37071:	
 21463  16D8  083E               	movf	(printf@flag),w
 21464  16D9  3903               	andlw	03h
 21465  16DA  1903               	btfsc	status,2
 21466  16DB  2EDD               	goto	u9951
 21467  16DC  2EDE               	goto	u9950
 21468  16DD                     u9951:
 21469  16DD  2F07               	goto	l37081
 21470  16DE                     u9950:
 21471                           	line	1341
 21472                           	
 21473  16DE                     l37073:	
 21474  16DE  30FF               	movlw	low(-1)
 21475  16DF  07BF               	addwf	(printf@width),f
 21476  16E0  30FF               	movlw	high(-1)
 21477  16E1  3DC0               	addwfc	(printf@width+1),f
 21478  16E2  2F07               	goto	l37081
 21479                           	
 21480  16E3                     l23556:	
 21481                           	line	1343
 21482  16E3  2F07               	goto	l37081
 21483                           	line	1344
 21484                           	
 21485  16E4                     l37075:	
 21486  16E4  0841               	movf	(printf@prec),w
 21487  16E5  00B9               	movwf	(??_printf+0)+0
 21488  16E6  01BA               	clrf	(??_printf+0)+0+1
 21489  16E7  1BB9               	btfsc	(??_printf+0)+0,7
 21490  16E8  03BA               	decf	(??_printf+0)+0+1,f
 21491  16E9  083A               	movf	1+(??_printf+0)+0,w
 21492  16EA  3A80               	xorlw	80h
 21493  16EB  00BB               	movwf	(??_printf+2)+0
 21494  16EC  0840               	movf	(printf@width+1),w
 21495  16ED  3A80               	xorlw	80h
 21496  16EE  023B               	subwf	(??_printf+2)+0,w
 21497  16EF  1D03               	skipz
 21498  16F0  2EF3               	goto	u9965
 21499  16F1  083F               	movf	(printf@width),w
 21500  16F2  0239               	subwf	0+(??_printf+0)+0,w
 21501  16F3                     u9965:
 21502                           
 21503  16F3  1803               	skipnc
 21504  16F4  2EF6               	goto	u9961
 21505  16F5  2EF7               	goto	u9960
 21506  16F6                     u9961:
 21507  16F6  2F02               	goto	l37079
 21508  16F7                     u9960:
 21509                           	line	1345
 21510                           	
 21511  16F7                     l37077:	
 21512  16F7  0020               	movlb 0	; select bank0
 21513  16F8  0841               	movf	(printf@prec),w
 21514  16F9  00B9               	movwf	(??_printf+0)+0
 21515  16FA  01BA               	clrf	(??_printf+0)+0+1
 21516  16FB  1BB9               	btfsc	(??_printf+0)+0,7
 21517  16FC  03BA               	decf	(??_printf+0)+0+1,f
 21518  16FD  0839               	movf	0+(??_printf+0)+0,w
 21519  16FE  02BF               	subwf	(printf@width),f
 21520  16FF  083A               	movf	1+(??_printf+0)+0,w
 21521  1700  3BC0               	subwfb	(printf@width+1),f
 21522  1701  2F07               	goto	l37081
 21523                           	line	1346
 21524                           	
 21525  1702                     l23558:	
 21526                           	line	1347
 21527                           	
 21528  1702                     l37079:	
 21529  1702  0020               	movlb 0	; select bank0
 21530  1703  01BF               	clrf	(printf@width)
 21531  1704  01C0               	clrf	(printf@width+1)
 21532  1705  2F07               	goto	l37081
 21533                           	
 21534  1706                     l23559:	
 21535  1706  2F07               	goto	l37081
 21536                           	line	1348
 21537                           	
 21538  1707                     l23557:	
 21539                           	line	1376
 21540                           	
 21541  1707                     l37081:	
 21542  1707  0842               	movf	(printf@c),w
 21543  1708  00B9               	movwf	(??_printf+0)+0
 21544  1709  01BA               	clrf	(??_printf+0)+0+1
 21545  170A  1BB9               	btfsc	(??_printf+0)+0,7
 21546  170B  03BA               	decf	(??_printf+0)+0+1,f
 21547  170C  083A               	movf	1+(??_printf+0)+0,w
 21548  170D  3A80               	xorlw	80h
 21549  170E  00BB               	movwf	(??_printf+2)+0
 21550  170F  0840               	movf	(printf@width+1),w
 21551  1710  3A80               	xorlw	80h
 21552  1711  023B               	subwf	(??_printf+2)+0,w
 21553  1712  1D03               	skipz
 21554  1713  2F16               	goto	u9975
 21555  1714  083F               	movf	(printf@width),w
 21556  1715  0239               	subwf	0+(??_printf+0)+0,w
 21557  1716                     u9975:
 21558                           
 21559  1716  1803               	skipnc
 21560  1717  2F19               	goto	u9971
 21561  1718  2F1A               	goto	u9970
 21562  1719                     u9971:
 21563  1719  2F25               	goto	l37085
 21564  171A                     u9970:
 21565                           	line	1377
 21566                           	
 21567  171A                     l37083:	
 21568  171A  0020               	movlb 0	; select bank0
 21569  171B  0842               	movf	(printf@c),w
 21570  171C  00B9               	movwf	(??_printf+0)+0
 21571  171D  01BA               	clrf	(??_printf+0)+0+1
 21572  171E  1BB9               	btfsc	(??_printf+0)+0,7
 21573  171F  03BA               	decf	(??_printf+0)+0+1,f
 21574  1720  0839               	movf	0+(??_printf+0)+0,w
 21575  1721  02BF               	subwf	(printf@width),f
 21576  1722  083A               	movf	1+(??_printf+0)+0,w
 21577  1723  3BC0               	subwfb	(printf@width+1),f
 21578  1724  2F29               	goto	l37087
 21579                           	line	1378
 21580                           	
 21581  1725                     l23560:	
 21582                           	line	1379
 21583                           	
 21584  1725                     l37085:	
 21585  1725  0020               	movlb 0	; select bank0
 21586  1726  01BF               	clrf	(printf@width)
 21587  1727  01C0               	clrf	(printf@width+1)
 21588  1728  2F29               	goto	l37087
 21589                           	
 21590  1729                     l23561:	
 21591                           	line	1382
 21592                           	
 21593  1729                     l37087:	
 21594  1729  1D3E               	btfss	(printf@flag),(2)&7
 21595  172A  2F2C               	goto	u9981
 21596  172B  2F2D               	goto	u9980
 21597  172C                     u9981:
 21598  172C  2F52               	goto	l37099
 21599  172D                     u9980:
 21600                           	line	1387
 21601                           	
 21602  172D                     l37089:	
 21603  172D  083E               	movf	(printf@flag),w
 21604  172E  3903               	andlw	03h
 21605  172F  1903               	btfsc	status,2
 21606  1730  2F32               	goto	u9991
 21607  1731  2F33               	goto	u9990
 21608  1732                     u9991:
 21609  1732  2F38               	goto	l37093
 21610  1733                     u9990:
 21611                           	line	1388
 21612                           	
 21613  1733                     l37091:	
 21614  1733  302D               	movlw	(02Dh)
 21615  1734  31AB  23C0  3194   	fcall	_putch
 21616  1737  2F38               	goto	l37093
 21617                           	
 21618  1738                     l23563:	
 21619                           	line	1410
 21620                           	
 21621  1738                     l37093:	
 21622  1738  0020               	movlb 0	; select bank0
 21623  1739  0840               	movf	(printf@width+1),w
 21624  173A  043F               	iorwf	(printf@width),w
 21625  173B  1903               	skipnz
 21626  173C  2F3E               	goto	u10001
 21627  173D  2F3F               	goto	u10000
 21628  173E                     u10001:
 21629  173E  2FDA               	goto	l37119
 21630  173F                     u10000:
 21631  173F  2F40               	goto	l37095
 21632                           	line	1411
 21633                           	
 21634  1740                     l23565:	
 21635                           	line	1412
 21636                           	
 21637  1740                     l37095:	
 21638  1740  3030               	movlw	(030h)
 21639  1741  31AB  23C0  3194   	fcall	_putch
 21640                           	line	1413
 21641                           	
 21642  1744                     l37097:	
 21643  1744  30FF               	movlw	low(-1)
 21644  1745  0020               	movlb 0	; select bank0
 21645  1746  07BF               	addwf	(printf@width),f
 21646  1747  30FF               	movlw	high(-1)
 21647  1748  3DC0               	addwfc	(printf@width+1),f
 21648  1749  0840               	movf	(((printf@width+1))),w
 21649  174A  043F               	iorwf	(((printf@width))),w
 21650  174B  1D03               	skipz
 21651  174C  2F4E               	goto	u10011
 21652  174D  2F4F               	goto	u10010
 21653  174E                     u10011:
 21654  174E  2F40               	goto	l37095
 21655  174F                     u10010:
 21656  174F  2FDA               	goto	l37119
 21657                           	
 21658  1750                     l23566:	
 21659  1750  2FDA               	goto	l37119
 21660                           	
 21661  1751                     l23564:	
 21662                           	line	1415
 21663  1751  2FDA               	goto	l37119
 21664                           	
 21665  1752                     l23562:	
 21666                           	line	1423
 21667                           	
 21668  1752                     l37099:	
 21669  1752  0840               	movf	(printf@width+1),w
 21670  1753  043F               	iorwf	(printf@width),w
 21671  1754  1903               	skipnz
 21672  1755  2F57               	goto	u10021
 21673  1756  2F58               	goto	u10020
 21674  1757                     u10021:
 21675  1757  2F6A               	goto	l37105
 21676  1758                     u10020:
 21677  1758  2F59               	goto	l37101
 21678                           	line	1424
 21679                           	
 21680  1759                     l23569:	
 21681                           	line	1425
 21682                           	
 21683  1759                     l37101:	
 21684  1759  3020               	movlw	(020h)
 21685  175A  31AB  23C0  3194   	fcall	_putch
 21686                           	line	1426
 21687                           	
 21688  175D                     l37103:	
 21689  175D  30FF               	movlw	low(-1)
 21690  175E  0020               	movlb 0	; select bank0
 21691  175F  07BF               	addwf	(printf@width),f
 21692  1760  30FF               	movlw	high(-1)
 21693  1761  3DC0               	addwfc	(printf@width+1),f
 21694  1762  0840               	movf	(((printf@width+1))),w
 21695  1763  043F               	iorwf	(((printf@width))),w
 21696  1764  1D03               	skipz
 21697  1765  2F67               	goto	u10031
 21698  1766  2F68               	goto	u10030
 21699  1767                     u10031:
 21700  1767  2F59               	goto	l37101
 21701  1768                     u10030:
 21702  1768  2F6A               	goto	l37105
 21703                           	
 21704  1769                     l23570:	
 21705  1769  2F6A               	goto	l37105
 21706                           	
 21707  176A                     l23568:	
 21708                           	line	1433
 21709                           	
 21710  176A                     l37105:	
 21711  176A  083E               	movf	(printf@flag),w
 21712  176B  3903               	andlw	03h
 21713  176C  1903               	btfsc	status,2
 21714  176D  2F6F               	goto	u10041
 21715  176E  2F70               	goto	u10040
 21716  176F                     u10041:
 21717  176F  2FDA               	goto	l37119
 21718  1770                     u10040:
 21719                           	line	1434
 21720                           	
 21721  1770                     l37107:	
 21722  1770  302D               	movlw	(02Dh)
 21723  1771  31AB  23C0  3194   	fcall	_putch
 21724  1774  2FDA               	goto	l37119
 21725                           	
 21726  1775                     l23571:	
 21727  1775  2FDA               	goto	l37119
 21728                           	line	1464
 21729                           	
 21730  1776                     l23567:	
 21731                           	line	1469
 21732  1776  2FDA               	goto	l37119
 21733                           	
 21734  1777                     l23573:	
 21735                           	line	1471
 21736  1777  2FC8               	goto	l37115
 21737                           	line	1478
 21738                           	
 21739  1778                     l23575:	
 21740  1778  2F79               	goto	l37109
 21741                           	line	1481
 21742                           	
 21743  1779                     l23576:	
 21744                           	line	1484
 21745                           	
 21746  1779                     l37109:	
 21747  1779  300A               	movlw	low(0Ah)
 21748  177A  0020               	movlb 0	; select bank0
 21749  177B  00A9               	movwf	(?___lwmod)
 21750  177C  3000               	movlw	high(0Ah)
 21751  177D  00AA               	movwf	((?___lwmod))+1
 21752  177E  0841               	movf	(printf@prec),w
 21753  177F  0709               	addwf	wreg,w
 21754  1780  3E01               	addlw	low(_dpowers|8000h)
 21755  1781  0084               	movwf	fsr0l
 21756  1782  3082               	movlw	high(_dpowers|8000h)
 21757  1783  1803               	skipnc
 21758  1784  3E01               	addlw	1
 21759  1785  0085               	movwf	fsr0h
 21760  1786  3F00               	moviw	[0]fsr0
 21761  1787  00A1               	movwf	(?___lwdiv)
 21762  1788  3F01               	moviw	[1]fsr0
 21763  1789  00A2               	movwf	(?___lwdiv+1)
 21764  178A  0844               	movf	(printf@_val+1),w
 21765  178B  01A4               	clrf	1+(?___lwdiv)+02h
 21766  178C  07A4               	addwf	1+(?___lwdiv)+02h
 21767  178D  0843               	movf	(printf@_val),w
 21768  178E  01A3               	clrf	0+(?___lwdiv)+02h
 21769  178F  07A3               	addwf	0+(?___lwdiv)+02h
 21770                           
 21771  1790  31AD  25C2  3194   	fcall	___lwdiv
 21772  1793  0020               	movlb 0	; select bank0
 21773  1794  0822               	movf	(1+(?___lwdiv)),w
 21774  1795  01AC               	clrf	1+(?___lwmod)+02h
 21775  1796  07AC               	addwf	1+(?___lwmod)+02h
 21776  1797  0821               	movf	(0+(?___lwdiv)),w
 21777  1798  01AB               	clrf	0+(?___lwmod)+02h
 21778  1799  07AB               	addwf	0+(?___lwmod)+02h
 21779                           
 21780  179A  31AD  2583  3194   	fcall	___lwmod
 21781  179D  0020               	movlb 0	; select bank0
 21782  179E  0829               	movf	(0+(?___lwmod)),w
 21783  179F  3E30               	addlw	030h
 21784  17A0  00B9               	movwf	(??_printf+0)+0
 21785  17A1  0839               	movf	(??_printf+0)+0,w
 21786  17A2  00C2               	movwf	(printf@c)
 21787                           	line	1486
 21788  17A3  2FD5               	goto	l37117
 21789                           	line	1492
 21790                           	
 21791  17A4                     l23578:	
 21792                           	line	1497
 21793                           	
 21794  17A4                     l37111:	
 21795  17A4  0841               	movf	(printf@prec),w
 21796  17A5  0709               	addwf	wreg,w
 21797  17A6  3E0B               	addlw	low(_hexpowers|8000h)
 21798  17A7  0084               	movwf	fsr0l
 21799  17A8  3082               	movlw	high(_hexpowers|8000h)
 21800  17A9  1803               	skipnc
 21801  17AA  3E01               	addlw	1
 21802  17AB  0085               	movwf	fsr0h
 21803  17AC  3F00               	moviw	[0]fsr0
 21804  17AD  00A1               	movwf	(?___lwdiv)
 21805  17AE  3F01               	moviw	[1]fsr0
 21806  17AF  00A2               	movwf	(?___lwdiv+1)
 21807  17B0  0844               	movf	(printf@_val+1),w
 21808  17B1  01A4               	clrf	1+(?___lwdiv)+02h
 21809  17B2  07A4               	addwf	1+(?___lwdiv)+02h
 21810  17B3  0843               	movf	(printf@_val),w
 21811  17B4  01A3               	clrf	0+(?___lwdiv)+02h
 21812  17B5  07A3               	addwf	0+(?___lwdiv)+02h
 21813                           
 21814  17B6  31AD  25C2  3194   	fcall	___lwdiv
 21815  17B9  0020               	movlb 0	; select bank0
 21816  17BA  0821               	movf	(0+(?___lwdiv)),w
 21817  17BB  390F               	andlw	0Fh
 21818  17BC  3EC7               	addlw	low(STR_115|8000h)
 21819  17BD  0084               	movwf	fsr0l
 21820  17BE  3086               	movlw	high(STR_115|8000h)
 21821  17BF  1803               	skipnc
 21822  17C0  3E01               	addlw	1
 21823  17C1  0085               	movwf	fsr0h
 21824  17C2  0800               	movf	indf0,w ;code access
 21825  17C3  00B9               	movwf	(??_printf+0)+0
 21826  17C4  0839               	movf	(??_printf+0)+0,w
 21827  17C5  00C2               	movwf	(printf@c)
 21828                           	line	1502
 21829  17C6  2FD5               	goto	l37117
 21830                           	line	1515
 21831                           	
 21832  17C7                     l37113:	
 21833  17C7  2FD5               	goto	l37117
 21834                           	line	1471
 21835                           	
 21836  17C8                     l23574:	
 21837                           	
 21838  17C8                     l37115:	
 21839  17C8  0020               	movlb 0	; select bank0
 21840  17C9  083E               	movf	(printf@flag),w
 21841  17CA  39C0               	andlw	0C0h
 21842                           	; Switch size 1, requested type "space"
 21843                           ; Number of cases is 3, Range of values is 0 to 192
 21844                           ; switch strategies available:
 21845                           ; Name         Instructions Cycles
 21846                           ; simple_byte           10     6 (average)
 21847                           ; jumptable            260     6 (fixed)
 21848                           ; rangetable           197     6 (fixed)
 21849                           ; spacedrange          391     8 (fixed)
 21850                           ; locatedrange         193     3 (fixed)
 21851                           ;	Chosen strategy is simple_byte
 21852                           
 21853                           	opt asmopt_off
 21854  17CB  3A00               	xorlw	0^0	; case 0
 21855  17CC  1903               	skipnz
 21856  17CD  2F79               	goto	l37109
 21857  17CE  3A80               	xorlw	128^0	; case 128
 21858  17CF  1903               	skipnz
 21859  17D0  2FA4               	goto	l37111
 21860  17D1  3A40               	xorlw	192^128	; case 192
 21861  17D2  1903               	skipnz
 21862  17D3  2F79               	goto	l37109
 21863  17D4  2FD5               	goto	l37117
 21864                           	opt asmopt_on
 21865                           
 21866                           	line	1515
 21867                           	
 21868  17D5                     l23577:	
 21869                           	line	1516
 21870                           	
 21871  17D5                     l37117:	
 21872  17D5  0842               	movf	(printf@c),w
 21873  17D6  31AB  23C0  3194   	fcall	_putch
 21874  17D9  2FDA               	goto	l37119
 21875                           	line	1517
 21876                           	
 21877  17DA                     l23572:	
 21878                           	line	1469
 21879                           	
 21880  17DA                     l37119:	
 21881  17DA  30FF               	movlw	(-1)
 21882  17DB  0020               	movlb 0	; select bank0
 21883  17DC  00B9               	movwf	(??_printf+0)+0
 21884  17DD  0839               	movf	(??_printf+0)+0,w
 21885  17DE  07C1               	addwf	(printf@prec),f
 21886  17DF  0841               	movf	((printf@prec)),w
 21887  17E0  3AFF               	xorlw	-1&0ffh
 21888  17E1  1D03               	skipz
 21889  17E2  2FE4               	goto	u10051
 21890  17E3  2FE5               	goto	u10050
 21891  17E4                     u10051:
 21892  17E4  2FC8               	goto	l37115
 21893  17E5                     u10050:
 21894  17E5  2FE7               	goto	l37121
 21895                           	
 21896  17E6                     l23579:	
 21897  17E6  2FE7               	goto	l37121
 21898                           	line	1525
 21899                           	
 21900  17E7                     l23497:	
 21901                           	line	540
 21902                           	
 21903  17E7                     l37121:	
 21904  17E7  0020               	movlb 0	; select bank0
 21905  17E8  0830               	movf	(printf@f+1),w
 21906  17E9  00BA               	movwf	(??_printf+0)+0+1
 21907  17EA  082F               	movf	(printf@f),w
 21908  17EB  00B9               	movwf	(??_printf+0)+0
 21909  17EC  3001               	movlw	(01h)
 21910  17ED  07AF               	addwf	(printf@f),f
 21911  17EE  1803               	skipnc
 21912  17EF  0AB0               	incf	(printf@f+1),f
 21913  17F0  0839               	movf	0+(??_printf+0)+0,w
 21914  17F1  0084               	movwf	fsr0l
 21915  17F2  083A               	movf	(1+(??_printf+0)+0),w
 21916  17F3  0085               	movwf	fsr0h
 21917  17F4  0800               	movf	indf0,w ;code access
 21918  17F5  00BB               	movwf	(??_printf+2)+0
 21919  17F6  083B               	movf	(??_printf+2)+0,w
 21920  17F7  00C2               	movwf	(printf@c)
 21921  17F8  08C2               	movf	((printf@c)),f
 21922  17F9  1D03               	skipz
 21923  17FA  2FFC               	goto	u10061
 21924  17FB  2FFD               	goto	u10060
 21925  17FC                     u10061:
 21926  17FC  2CA6               	goto	l36931
 21927  17FD                     u10060:
 21928  17FD  2FFF               	goto	l23581
 21929                           	
 21930  17FE                     l23580:	
 21931  17FE  2FFF               	goto	l23581
 21932                           	line	1527
 21933                           	
 21934  17FF                     l23516:	
 21935                           	line	1533
 21936                           ;	Return value of _printf is never used
 21937                           	
 21938  17FF                     l23581:	
 21939  17FF  0008               	return
 21940                           	opt stack 0
 21941                           GLOBAL	__end_of_printf
 21942  1800                     	__end_of_printf:
 21943 ;; =============== function _printf ends ============
 21944                           
 21945                           	signat	_printf,602
 21946                           	global	_serial_init
 21947                           psect	text3269,local,class=CODE,delta=2
 21948                           global __ptext3269
 21949  19FF                     __ptext3269:
 21950                           
 21951 ;; *************** function _serial_init *****************
 21952 ;; Defined at:
 21953 ;;		line 37 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 21954 ;; Parameters:    Size  Location     Type
 21955 ;;  bitrate         4   14[BANK0 ] unsigned long 
 21956 ;; Auto vars:     Size  Location     Type
 21957 ;;  divider         4   30[BANK0 ] unsigned long 
 21958 ;; Return value:  Size  Location     Type
 21959 ;;		None               void
 21960 ;; Registers used:
 21961 ;;		wreg, status,2, status,0, pclath, cstack
 21962 ;; Tracked objects:
 21963 ;;		On entry : 0/0
 21964 ;;		On exit  : 0/0
 21965 ;;		Unchanged: 0/0
 21966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21968 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21969 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 21970 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0
 21971 ;;Total ram usage:       20 bytes
 21972 ;; Hardware stack levels used:    1
 21973 ;; Hardware stack levels required when called:    3
 21974 ;; This function calls:
 21975 ;;		___lldiv
 21976 ;; This function is called by:
 21977 ;;		_main
 21978 ;; This function uses a non-reentrant model
 21979 ;;
 21980                           psect	text3269
 21981                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 21982                           	line	37
 21983                           	global	__size_of_serial_init
 21984  00C7                     	__size_of_serial_init	equ	__end_of_serial_init-_serial_init
 21985                           	
 21986  19FF                     _serial_init:	
 21987                           	opt	stack 12
 21988                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
 21989                           	line	39
 21990                           	
 21991  19FF                     l34475:	
 21992                           ;serial.c: 39: rx.head = 0;
 21993  19FF  30F8               	movlw	((0 & ((1<<3)-1))<<0)|not (((1<<3)-1)<<0)
 21994  1A00  0022               	movlb 2	; select bank2
 21995  1A01  05B9               	andwf	0+(_rx)^0100h+08h,f
 21996                           	line	40
 21997                           ;serial.c: 40: rx.tail = 0;
 21998  1A02  30C7               	movlw	((0 & ((1<<3)-1))<<3)|not (((1<<3)-1)<<3)
 21999  1A03  05B9               	andwf	0+(_rx)^0100h+08h,f
 22000                           	line	41
 22001                           	
 22002  1A04                     l34477:	
 22003                           ;serial.c: 41: rx.xon_enabled = 1;
 22004  1A04  1739               	bsf	0+(_rx)^0100h+08h,6
 22005                           	line	42
 22006                           	
 22007  1A05                     l34479:	
 22008                           ;serial.c: 42: rx.xon_state = 1;
 22009  1A05  17B9               	bsf	0+(_rx)^0100h+08h,7
 22010                           	line	55
 22011                           	
 22012  1A06                     l34481:	
 22013                           ;serial.c: 55: BRG16 = 1;
 22014  1A06  0023               	movlb 3	; select bank3
 22015  1A07  159F               	bsf	(3323/8)^0180h,(3323)&7
 22016                           	line	56
 22017                           	
 22018  1A08                     l34483:	
 22019                           ;serial.c: 56: if (BRG16) {
 22020  1A08  1D9F               	btfss	(3323/8)^0180h,(3323)&7
 22021  1A09  2A0B               	goto	u6491
 22022  1A0A  2A0C               	goto	u6490
 22023  1A0B                     u6491:
 22024  1A0B  2A57               	goto	l34491
 22025  1A0C                     u6490:
 22026                           	line	58
 22027                           	
 22028  1A0C                     l34485:	
 22029                           ;serial.c: 58: unsigned long divider = ((2*(((2*((4UL * (1000UL * ((1000UL)))))+(4UL))/(
                                 2*(4UL))))+(bitrate))/(2*(bitrate)))-1;
 22030  1A0C  0020               	movlb 0	; select bank0
 22031  1A0D  082F               	movf	(serial_init@bitrate),w
 22032  1A0E  00B3               	movwf	(??_serial_init+0)+0
 22033  1A0F  0830               	movf	(serial_init@bitrate+1),w
 22034  1A10  00B4               	movwf	((??_serial_init+0)+0+1)
 22035  1A11  0831               	movf	(serial_init@bitrate+2),w
 22036  1A12  00B5               	movwf	((??_serial_init+0)+0+2)
 22037  1A13  0832               	movf	(serial_init@bitrate+3),w
 22038  1A14  00B6               	movwf	((??_serial_init+0)+0+3)
 22039  1A15  3001               	movlw	01h
 22040  1A16                     u6505:
 22041  1A16  35B3               	lslf	(??_serial_init+0)+0,f
 22042  1A17  0DB4               	rlf	(??_serial_init+0)+1,f
 22043  1A18  0DB5               	rlf	(??_serial_init+0)+2,f
 22044  1A19  0DB6               	rlf	(??_serial_init+0)+3,f
 22045  1A1A                     u6500:
 22046  1A1A  0B89               	decfsz	wreg,f
 22047  1A1B  2A16               	goto	u6505
 22048  1A1C  0836               	movf	3+(??_serial_init+0)+0,w
 22049  1A1D  00A4               	movwf	(?___lldiv+3)
 22050  1A1E  0835               	movf	2+(??_serial_init+0)+0,w
 22051  1A1F  00A3               	movwf	(?___lldiv+2)
 22052  1A20  0834               	movf	1+(??_serial_init+0)+0,w
 22053  1A21  00A2               	movwf	(?___lldiv+1)
 22054  1A22  0833               	movf	0+(??_serial_init+0)+0,w
 22055  1A23  00A1               	movwf	(?___lldiv)
 22056                           
 22057  1A24  3080               	movlw	080h
 22058  1A25  072F               	addwf	((serial_init@bitrate)),w
 22059  1A26  00A5               	movwf	0+(?___lldiv)+04h
 22060  1A27  3084               	movlw	084h
 22061  1A28  3D30               	addwfc	((serial_init@bitrate+1)),w
 22062  1A29  00A6               	movwf	1+0+(?___lldiv)+04h
 22063  1A2A  301E               	movlw	01Eh
 22064  1A2B  3D31               	addwfc	((serial_init@bitrate+2)),w
 22065  1A2C  00A7               	movwf	2+0+(?___lldiv)+04h
 22066  1A2D  3000               	movlw	0
 22067  1A2E  3D32               	addwfc	((serial_init@bitrate+3)),w
 22068  1A2F  00A8               	movwf	3+0+(?___lldiv)+04h
 22069  1A30  31A0  20E4  3199   	fcall	___lldiv
 22070  1A33  30FF               	movlw	0FFh
 22071  1A34  0020               	movlb 0	; select bank0
 22072  1A35  0721               	addwf	((0+(?___lldiv))),w
 22073  1A36  00BF               	movwf	(serial_init@divider)
 22074  1A37  30FF               	movlw	0FFh
 22075  1A38  3D22               	addwfc	((1+(?___lldiv))),w
 22076  1A39  00C0               	movwf	1+(serial_init@divider)
 22077  1A3A  30FF               	movlw	0FFh
 22078  1A3B  3D23               	addwfc	((2+(?___lldiv))),w
 22079  1A3C  00C1               	movwf	2+(serial_init@divider)
 22080  1A3D  30FF               	movlw	0FFh
 22081  1A3E  3D24               	addwfc	((3+(?___lldiv))),w
 22082  1A3F  00C2               	movwf	3+(serial_init@divider)
 22083                           	line	60
 22084                           	
 22085  1A40                     l34487:	
 22086                           ;serial.c: 60: SPBRG = divider & 0x00FF;
 22087  1A40  083F               	movf	(serial_init@divider),w
 22088  1A41  0023               	movlb 3	; select bank3
 22089  1A42  009B               	movwf	(411)^0180h	;volatile
 22090                           	line	61
 22091                           	
 22092  1A43                     l34489:	
 22093                           ;serial.c: 61: SPBRGH = (divider & 0xFF00) >> 8;
 22094  1A43  0020               	movlb 0	; select bank0
 22095  1A44  083F               	movf	(serial_init@divider),w
 22096  1A45  00B3               	movwf	(??_serial_init+0)+0
 22097  1A46  0840               	movf	(serial_init@divider+1),w
 22098  1A47  00B4               	movwf	((??_serial_init+0)+0+1)
 22099  1A48  0841               	movf	(serial_init@divider+2),w
 22100  1A49  00B5               	movwf	((??_serial_init+0)+0+2)
 22101  1A4A  0842               	movf	(serial_init@divider+3),w
 22102  1A4B  00B6               	movwf	((??_serial_init+0)+0+3)
 22103  1A4C  3008               	movlw	08h
 22104  1A4D                     u6515:
 22105  1A4D  36B6               	lsrf	(??_serial_init+0)+3,f
 22106  1A4E  0CB5               	rrf	(??_serial_init+0)+2,f
 22107  1A4F  0CB4               	rrf	(??_serial_init+0)+1,f
 22108  1A50  0CB3               	rrf	(??_serial_init+0)+0,f
 22109  1A51                     u6510:
 22110  1A51  0B89               	decfsz	wreg,f
 22111  1A52  2A4D               	goto	u6515
 22112  1A53  0833               	movf	0+(??_serial_init+0)+0,w
 22113  1A54  0023               	movlb 3	; select bank3
 22114  1A55  009C               	movwf	(412)^0180h	;volatile
 22115                           	line	62
 22116                           ;serial.c: 62: } else
 22117  1A56  2AAA               	goto	l34493
 22118                           	
 22119  1A57                     l19263:	
 22120                           	line	64
 22121                           	
 22122  1A57                     l34491:	
 22123                           ;serial.c: 64: SPBRG = ((2*(((2*((4UL * (1000UL * ((1000UL)))))+(bitrate))/(2*(bitrate))
                                 ))+(16UL))/(2*(16UL)))-1;
 22124  1A57  3010               	movlw	010h
 22125  1A58  0020               	movlb 0	; select bank0
 22126  1A59  00B3               	movwf	((??_serial_init+0)+0)
 22127  1A5A  3000               	movlw	0
 22128  1A5B  00B4               	movwf	((??_serial_init+0)+0+1)
 22129  1A5C  3000               	movlw	0
 22130  1A5D  00B5               	movwf	((??_serial_init+0)+0+2)
 22131  1A5E  3000               	movlw	0
 22132  1A5F  00B6               	movwf	((??_serial_init+0)+0+3)
 22133  1A60  082F               	movf	(serial_init@bitrate),w
 22134  1A61  00B7               	movwf	(??_serial_init+4)+0
 22135  1A62  0830               	movf	(serial_init@bitrate+1),w
 22136  1A63  00B8               	movwf	((??_serial_init+4)+0+1)
 22137  1A64  0831               	movf	(serial_init@bitrate+2),w
 22138  1A65  00B9               	movwf	((??_serial_init+4)+0+2)
 22139  1A66  0832               	movf	(serial_init@bitrate+3),w
 22140  1A67  00BA               	movwf	((??_serial_init+4)+0+3)
 22141  1A68  3001               	movlw	01h
 22142  1A69                     u6525:
 22143  1A69  35B7               	lslf	(??_serial_init+4)+0,f
 22144  1A6A  0DB8               	rlf	(??_serial_init+4)+1,f
 22145  1A6B  0DB9               	rlf	(??_serial_init+4)+2,f
 22146  1A6C  0DBA               	rlf	(??_serial_init+4)+3,f
 22147  1A6D                     u6520:
 22148  1A6D  0B89               	decfsz	wreg,f
 22149  1A6E  2A69               	goto	u6525
 22150  1A6F  083A               	movf	3+(??_serial_init+4)+0,w
 22151  1A70  00A4               	movwf	(?___lldiv+3)
 22152  1A71  0839               	movf	2+(??_serial_init+4)+0,w
 22153  1A72  00A3               	movwf	(?___lldiv+2)
 22154  1A73  0838               	movf	1+(??_serial_init+4)+0,w
 22155  1A74  00A2               	movwf	(?___lldiv+1)
 22156  1A75  0837               	movf	0+(??_serial_init+4)+0,w
 22157  1A76  00A1               	movwf	(?___lldiv)
 22158                           
 22159  1A77  3000               	movlw	0
 22160  1A78  072F               	addwf	((serial_init@bitrate)),w
 22161  1A79  00A5               	movwf	0+(?___lldiv)+04h
 22162  1A7A  3012               	movlw	012h
 22163  1A7B  3D30               	addwfc	((serial_init@bitrate+1)),w
 22164  1A7C  00A6               	movwf	1+0+(?___lldiv)+04h
 22165  1A7D  307A               	movlw	07Ah
 22166  1A7E  3D31               	addwfc	((serial_init@bitrate+2)),w
 22167  1A7F  00A7               	movwf	2+0+(?___lldiv)+04h
 22168  1A80  3000               	movlw	0
 22169  1A81  3D32               	addwfc	((serial_init@bitrate+3)),w
 22170  1A82  00A8               	movwf	3+0+(?___lldiv)+04h
 22171  1A83  31A0  20E4  3199   	fcall	___lldiv
 22172  1A86  0020               	movlb 0	; select bank0
 22173  1A87  0821               	movf	(0+?___lldiv),w
 22174  1A88  00BB               	movwf	(??_serial_init+8)+0
 22175  1A89  0822               	movf	(1+?___lldiv),w
 22176  1A8A  00BC               	movwf	((??_serial_init+8)+0+1)
 22177  1A8B  0823               	movf	(2+?___lldiv),w
 22178  1A8C  00BD               	movwf	((??_serial_init+8)+0+2)
 22179  1A8D  0824               	movf	(3+?___lldiv),w
 22180  1A8E  00BE               	movwf	((??_serial_init+8)+0+3)
 22181  1A8F  3001               	movlw	01h
 22182  1A90                     u6535:
 22183  1A90  35BB               	lslf	(??_serial_init+8)+0,f
 22184  1A91  0DBC               	rlf	(??_serial_init+8)+1,f
 22185  1A92  0DBD               	rlf	(??_serial_init+8)+2,f
 22186  1A93  0DBE               	rlf	(??_serial_init+8)+3,f
 22187  1A94                     u6530:
 22188  1A94  0B89               	decfsz	wreg,f
 22189  1A95  2A90               	goto	u6535
 22190  1A96  083B               	movf	0+(??_serial_init+8)+0,w
 22191  1A97  07B3               	addwf	(??_serial_init+0)+0,f
 22192  1A98  083C               	movf	1+(??_serial_init+8)+0,w
 22193  1A99  3DB4               	addwfc	(??_serial_init+0)+1,f
 22194  1A9A  083D               	movf	2+(??_serial_init+8)+0,w
 22195  1A9B  3DB5               	addwfc	(??_serial_init+0)+2,f
 22196  1A9C  083E               	movf	3+(??_serial_init+8)+0,w
 22197  1A9D  3DB6               	addwfc	(??_serial_init+0)+3,f
 22198  1A9E  3005               	movlw	05h
 22199  1A9F                     u6545:
 22200  1A9F  36B6               	lsrf	(??_serial_init+0)+3,f
 22201  1AA0  0CB5               	rrf	(??_serial_init+0)+2,f
 22202  1AA1  0CB4               	rrf	(??_serial_init+0)+1,f
 22203  1AA2  0CB3               	rrf	(??_serial_init+0)+0,f
 22204  1AA3                     u6540:
 22205  1AA3  0B89               	decfsz	wreg,f
 22206  1AA4  2A9F               	goto	u6545
 22207  1AA5  0833               	movf	0+(??_serial_init+0)+0,w
 22208  1AA6  3EFF               	addlw	0FFh
 22209  1AA7  0023               	movlb 3	; select bank3
 22210  1AA8  009B               	movwf	(411)^0180h	;volatile
 22211  1AA9  2AAA               	goto	l34493
 22212                           	
 22213  1AAA                     l19264:	
 22214                           	line	67
 22215                           	
 22216  1AAA                     l34493:	
 22217                           ;serial.c: 67: CSRC = 1;
 22218  1AAA  179E               	bsf	(3319/8)^0180h,(3319)&7
 22219                           	line	68
 22220                           	
 22221  1AAB                     l34495:	
 22222                           ;serial.c: 68: BRGH = 1;
 22223  1AAB  151E               	bsf	(3314/8)^0180h,(3314)&7
 22224                           	line	69
 22225                           	
 22226  1AAC                     l34497:	
 22227                           ;serial.c: 69: SYNC = 0;
 22228  1AAC  121E               	bcf	(3316/8)^0180h,(3316)&7
 22229                           	line	70
 22230                           	
 22231  1AAD                     l34499:	
 22232                           ;serial.c: 70: SPEN = 1;
 22233  1AAD  179D               	bsf	(3311/8)^0180h,(3311)&7
 22234                           	line	71
 22235                           	
 22236  1AAE                     l34501:	
 22237                           ;serial.c: 71: RCIE = 0;
 22238  1AAE  0021               	movlb 1	; select bank1
 22239  1AAF  1291               	bcf	(1165/8)^080h,(1165)&7
 22240                           	line	72
 22241                           	
 22242  1AB0                     l34503:	
 22243                           ;serial.c: 72: TXIE = 0;
 22244  1AB0  1211               	bcf	(1164/8)^080h,(1164)&7
 22245                           	line	73
 22246                           	
 22247  1AB1                     l34505:	
 22248                           ;serial.c: 73: RX9 = 0;
 22249  1AB1  0023               	movlb 3	; select bank3
 22250  1AB2  131D               	bcf	(3310/8)^0180h,(3310)&7
 22251                           	line	74
 22252                           	
 22253  1AB3                     l34507:	
 22254                           ;serial.c: 74: TX9 = 0;
 22255  1AB3  131E               	bcf	(3318/8)^0180h,(3318)&7
 22256                           	line	75
 22257                           	
 22258  1AB4                     l34509:	
 22259                           ;serial.c: 75: CREN = 0;
 22260  1AB4  121D               	bcf	(3308/8)^0180h,(3308)&7
 22261                           	line	76
 22262                           	
 22263  1AB5                     l34511:	
 22264                           ;serial.c: 76: CREN = 1;
 22265  1AB5  161D               	bsf	(3308/8)^0180h,(3308)&7
 22266                           	line	77
 22267                           	
 22268  1AB6                     l34513:	
 22269                           ;serial.c: 77: TXEN = 0;
 22270  1AB6  129E               	bcf	(3317/8)^0180h,(3317)&7
 22271                           	line	78
 22272                           	
 22273  1AB7                     l34515:	
 22274                           ;serial.c: 78: TXEN = 1;
 22275  1AB7  169E               	bsf	(3317/8)^0180h,(3317)&7
 22276                           	line	81
 22277                           	
 22278  1AB8                     l34517:	
 22279                           ;serial.c: 81: RCIE = 1;
 22280  1AB8  0021               	movlb 1	; select bank1
 22281  1AB9  1691               	bsf	(1165/8)^080h,(1165)&7
 22282                           	line	83
 22283                           	
 22284  1ABA                     l34519:	
 22285                           ;serial.c: 83: if (rx.xon_enabled) {
 22286  1ABA  0022               	movlb 2	; select bank2
 22287  1ABB  1F39               	btfss	0+(_rx)^0100h+08h,6
 22288  1ABC  2ABE               	goto	u6551
 22289  1ABD  2ABF               	goto	u6550
 22290  1ABE                     u6551:
 22291  1ABE  2AC5               	goto	l19266
 22292  1ABF                     u6550:
 22293                           	line	84
 22294                           	
 22295  1ABF                     l34521:	
 22296                           ;serial.c: 84: TXREG = 0x11;
 22297  1ABF  3011               	movlw	(011h)
 22298  1AC0  0023               	movlb 3	; select bank3
 22299  1AC1  009A               	movwf	(410)^0180h	;volatile
 22300                           	line	85
 22301                           	
 22302  1AC2                     l34523:	
 22303                           ;serial.c: 85: rx.xon_state = 1;
 22304  1AC2  0022               	movlb 2	; select bank2
 22305  1AC3  17B9               	bsf	0+(_rx)^0100h+08h,7
 22306  1AC4  2AC5               	goto	l19266
 22307                           	line	86
 22308                           	
 22309  1AC5                     l19265:	
 22310                           	line	88
 22311                           	
 22312  1AC5                     l19266:	
 22313  1AC5  0008               	return
 22314                           	opt stack 0
 22315                           GLOBAL	__end_of_serial_init
 22316  1AC6                     	__end_of_serial_init:
 22317 ;; =============== function _serial_init ends ============
 22318                           
 22319                           	signat	_serial_init,4216
 22320                           	global	_catgenie_init
 22321                           psect	text3270,local,class=CODE,delta=2
 22322                           global __ptext3270
 22323  0053                     __ptext3270:
 22324                           
 22325 ;; *************** function _catgenie_init *****************
 22326 ;; Defined at:
 22327 ;;		line 100 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 22328 ;; Parameters:    Size  Location     Type
 22329 ;;		None
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;  tempmask        1    7[BANK0 ] unsigned char 
 22332 ;;  temp            1    8[BANK0 ] unsigned char 
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  1    wreg      unsigned char 
 22335 ;; Registers used:
 22336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22344 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 22345 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 22346 ;;Total ram usage:        5 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:    3
 22349 ;; This function calls:
 22350 ;;		___bmul
 22351 ;; This function is called by:
 22352 ;;		_main
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           psect	text3270
 22356                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 22357                           	line	100
 22358                           	global	__size_of_catgenie_init
 22359  00A0                     	__size_of_catgenie_init	equ	__end_of_catgenie_init-_catgenie_init
 22360                           	
 22361  0053                     _catgenie_init:	
 22362                           	opt	stack 12
 22363                           ; Regs used in _catgenie_init: [wreg+fsr1l-status,0+pclath+cstack]
 22364                           	line	105
 22365                           	
 22366  0053                     l36877:	
 22367                           ;catgenie120.c: 101: unsigned char temp ;
 22368                           ;catgenie120.c: 105: nWPUEN = 0;
 22369  0053  0021               	movlb 1	; select bank1
 22370  0054  1395               	bcf	(1199/8)^080h,(1199)&7
 22371                           	line	113
 22372                           	
 22373  0055                     l36879:	
 22374                           ;catgenie120.c: 111: TRISA = (1U << (0)) |
 22375                           ;catgenie120.c: 112: (1U << (4)) |
 22376                           ;catgenie120.c: 113: (1U << (1));
 22377  0055  3013               	movlw	(013h)
 22378  0056  008C               	movwf	(140)^080h	;volatile
 22379                           	line	114
 22380                           	
 22381  0057                     l36881:	
 22382                           ;catgenie120.c: 114: PORTA = 0x00;
 22383  0057  0020               	movlb 0	; select bank0
 22384  0058  018C               	clrf	(12)	;volatile
 22385                           	line	121
 22386                           	
 22387  0059                     l36883:	
 22388                           ;catgenie120.c: 121: ANSELA = (1U << (1));
 22389  0059  3002               	movlw	(02h)
 22390  005A  0023               	movlb 3	; select bank3
 22391  005B  008C               	movwf	(396)^0180h	;volatile
 22392                           	line	137
 22393                           	
 22394  005C                     l36885:	
 22395                           ;catgenie120.c: 131: TRISB = (1U << (0)) |
 22396                           ;catgenie120.c: 132: (1U << (3)) |
 22397                           ;catgenie120.c: 133: (1U << (1)) |
 22398                           ;catgenie120.c: 134: (1U << (4)) |
 22399                           ;catgenie120.c: 135: (1U << (5)) |
 22400                           ;catgenie120.c: 136: (1U << (6)) |
 22401                           ;catgenie120.c: 137: (1U << (7)) ;
 22402  005C  30FB               	movlw	(0FBh)
 22403  005D  0021               	movlb 1	; select bank1
 22404  005E  008D               	movwf	(141)^080h	;volatile
 22405                           	line	138
 22406                           	
 22407  005F                     l36887:	
 22408                           ;catgenie120.c: 138: PORTB = 0x00;
 22409  005F  0020               	movlb 0	; select bank0
 22410  0060  018D               	clrf	(13)	;volatile
 22411                           	line	144
 22412                           	
 22413  0061                     l36889:	
 22414                           ;catgenie120.c: 144: ANSELB = 0;
 22415  0061  0023               	movlb 3	; select bank3
 22416  0062  018D               	clrf	(397)^0180h	;volatile
 22417                           	line	146
 22418                           	
 22419  0063                     l36891:	
 22420                           ;catgenie120.c: 146: WPUB = ~(1U << (3));
 22421  0063  30F7               	movlw	(0F7h)
 22422  0064  0024               	movlb 4	; select bank4
 22423  0065  008D               	movwf	(525)^0200h	;volatile
 22424                           	line	153
 22425                           	
 22426  0066                     l36893:	
 22427                           ;catgenie120.c: 153: IOCBP = (1U << (4));
 22428  0066  3010               	movlw	(010h)
 22429  0067  0027               	movlb 7	; select bank7
 22430  0068  0094               	movwf	(916)^0380h	;volatile
 22431                           	line	154
 22432                           	
 22433  0069                     l36895:	
 22434                           ;catgenie120.c: 154: IOCBN = (1U << (4));
 22435  0069  3010               	movlw	(010h)
 22436  006A  0095               	movwf	(917)^0380h	;volatile
 22437                           	line	155
 22438                           ;catgenie120.c: 155: IOCBF = 0;
 22439  006B  0196               	clrf	(918)^0380h	;volatile
 22440                           	line	156
 22441                           	
 22442  006C                     l36897:	
 22443                           ;catgenie120.c: 156: IOCIF = 0;
 22444  006C  100B               	bcf	(88/8),(88)&7
 22445                           	line	162
 22446                           	
 22447  006D                     l36899:	
 22448                           ;catgenie120.c: 162: IOCIE = 1;
 22449  006D  158B               	bsf	(91/8),(91)&7
 22450                           	line	167
 22451                           	
 22452  006E                     l36901:	
 22453                           ;catgenie120.c: 165: PORTB_old = (1U << (0)) |
 22454                           ;catgenie120.c: 166: (1U << (5)) |
 22455                           ;catgenie120.c: 167: (1U << (1)) ;
 22456  006E  3023               	movlw	(023h)
 22457  006F  0020               	movlb 0	; select bank0
 22458  0070  00A5               	movwf	(??_catgenie_init+0)+0
 22459  0071  0825               	movf	(??_catgenie_init+0)+0,w
 22460  0072  0021               	movlb 1	; select bank1
 22461  0073  00DB               	movwf	(catgenie120@PORTB_old)^080h
 22462                           	line	174
 22463                           	
 22464  0074                     l36903:	
 22465                           ;catgenie120.c: 172: TRISC = (1U << (3)) |
 22466                           ;catgenie120.c: 173: (1U << (4)) |
 22467                           ;catgenie120.c: 174: (1U << (7)) ;
 22468  0074  3098               	movlw	(098h)
 22469  0075  008E               	movwf	(142)^080h	;volatile
 22470                           	line	176
 22471                           ;catgenie120.c: 176: PORTC = 0x00;
 22472  0076  0020               	movlb 0	; select bank0
 22473  0077  018E               	clrf	(14)	;volatile
 22474                           	line	181
 22475                           ;catgenie120.c: 181: TRISD = 0;
 22476  0078  0021               	movlb 1	; select bank1
 22477  0079  018F               	clrf	(143)^080h	;volatile
 22478                           	line	182
 22479                           ;catgenie120.c: 182: PORTD = 0;
 22480  007A  0020               	movlb 0	; select bank0
 22481  007B  018F               	clrf	(15)	;volatile
 22482                           	line	185
 22483                           ;catgenie120.c: 185: ANSELD = 0;
 22484  007C  0023               	movlb 3	; select bank3
 22485  007D  018F               	clrf	(399)^0180h	;volatile
 22486                           	line	191
 22487                           ;catgenie120.c: 191: TRISE = 0x00;
 22488  007E  0021               	movlb 1	; select bank1
 22489  007F  0190               	clrf	(144)^080h	;volatile
 22490                           	line	192
 22491                           ;catgenie120.c: 192: PORTE = 0x00;
 22492  0080  0020               	movlb 0	; select bank0
 22493  0081  0190               	clrf	(16)	;volatile
 22494                           	line	195
 22495                           ;catgenie120.c: 195: ANSELE = 0;
 22496  0082  0023               	movlb 3	; select bank3
 22497  0083  0190               	clrf	(400)^0180h	;volatile
 22498                           	line	197
 22499                           ;catgenie120.c: 197: WPUE = 0x00;
 22500  0084  0024               	movlb 4	; select bank4
 22501  0085  0190               	clrf	(528)^0200h	;volatile
 22502                           	line	201
 22503                           	
 22504  0086                     l36905:	
 22505                           ;catgenie120.c: 201: _delay((unsigned long)((100)*((4UL * (1000UL * ((1000UL))))/4000.0)
                                 ));
 22506                           	opt asmopt_off
 22507  0086  3082               movlw	130
 22508  0087  0020               	movlb 0	; select bank0
 22509  0088  00A6               movwf	((??_catgenie_init+0)+0+1),f
 22510  0089  30DD               	movlw	221
 22511  008A  00A5               movwf	((??_catgenie_init+0)+0),f
 22512  008B                     u12377:
 22513  008B  0BA5               	decfsz	((??_catgenie_init+0)+0),f
 22514  008C  288B               	goto	u12377
 22515  008D  0BA6               	decfsz	((??_catgenie_init+0)+0+1),f
 22516  008E  288B               	goto	u12377
 22517  008F  2890               	nop2
 22518                           opt asmopt_on
 22519                           
 22520                           	line	202
 22521                           	
 22522  0090                     l36907:	
 22523                           ;catgenie120.c: 202: _delay((unsigned long)((100)*((4UL * (1000UL * ((1000UL))))/4000.0)
                                 ));
 22524                           	opt asmopt_off
 22525  0090  3082               movlw	130
 22526  0091  0020               	movlb 0	; select bank0
 22527  0092  00A6               movwf	((??_catgenie_init+0)+0+1),f
 22528  0093  30DD               	movlw	221
 22529  0094  00A5               movwf	((??_catgenie_init+0)+0),f
 22530  0095                     u12387:
 22531  0095  0BA5               	decfsz	((??_catgenie_init+0)+0),f
 22532  0096  2895               	goto	u12387
 22533  0097  0BA6               	decfsz	((??_catgenie_init+0)+0+1),f
 22534  0098  2895               	goto	u12387
 22535  0099  289A               	nop2
 22536                           opt asmopt_on
 22537                           
 22538                           	line	205
 22539                           	
 22540  009A                     l36909:	
 22541                           ;catgenie120.c: 205: for (temp = 0; temp < 3; temp++) {
 22542  009A  0020               	movlb 0	; select bank0
 22543  009B  01A9               	clrf	(catgenie_init@temp)
 22544                           	
 22545  009C                     l36911:	
 22546  009C  3003               	movlw	(03h)
 22547  009D  0229               	subwf	(catgenie_init@temp),w
 22548  009E  1C03               	skipc
 22549  009F  28A1               	goto	u9661
 22550  00A0  28A2               	goto	u9660
 22551  00A1                     u9661:
 22552  00A1  28A4               	goto	l36915
 22553  00A2                     u9660:
 22554  00A2  28E4               	goto	l10863
 22555                           	
 22556  00A3                     l36913:	
 22557  00A3  28E4               	goto	l10863
 22558                           	
 22559  00A4                     l10862:	
 22560                           	line	206
 22561                           	
 22562  00A4                     l36915:	
 22563                           ;catgenie120.c: 206: unsigned char tempmask = debouncers[temp].port_mask;
 22564  00A4  300E               	movlw	(0Eh)
 22565  00A5  00A5               	movwf	(??_catgenie_init+0)+0
 22566  00A6  0825               	movf	(??_catgenie_init+0)+0,w
 22567  00A7  00A1               	movwf	(?___bmul)
 22568  00A8  0829               	movf	(catgenie_init@temp),w
 22569  00A9  31A9  21DC  3180   	fcall	___bmul
 22570  00AC  3E0C               	addlw	0Ch
 22571  00AD  3EA0               	addlw	_debouncers&0ffh
 22572  00AE  0086               	movwf	fsr1l
 22573  00AF  3001               	movlw 1	; select bank3/4
 22574  00B0  0087               	movwf fsr1h	
 22575                           	
 22576  00B1  0801               	movf	indf1,w
 22577  00B2  0020               	movlb 0	; select bank0
 22578  00B3  00A6               	movwf	(??_catgenie_init+1)+0
 22579  00B4  0826               	movf	(??_catgenie_init+1)+0,w
 22580  00B5  00A8               	movwf	(catgenie_init@tempmask)
 22581                           	line	208
 22582                           ;catgenie120.c: 208: debouncers[temp].state = *debouncers[temp].port & tempmask;
 22583  00B6  300E               	movlw	(0Eh)
 22584  00B7  00A5               	movwf	(??_catgenie_init+0)+0
 22585  00B8  0825               	movf	(??_catgenie_init+0)+0,w
 22586  00B9  00A1               	movwf	(?___bmul)
 22587  00BA  0829               	movf	(catgenie_init@temp),w
 22588  00BB  31A9  21DC  3180   	fcall	___bmul
 22589  00BE  3E0B               	addlw	0Bh
 22590  00BF  3EA0               	addlw	_debouncers&0ffh
 22591  00C0  0086               	movwf	fsr1l
 22592  00C1  3001               	movlw 1	; select bank3/4
 22593  00C2  0087               	movwf fsr1h	
 22594                           	
 22595  00C3  0801               	movf	indf1,w
 22596  00C4  0086               	movwf	fsr1l
 22597  00C5  0187               	clrf fsr1h	
 22598                           	
 22599  00C6  0801               	movf	indf1,w
 22600  00C7  0020               	movlb 0	; select bank0
 22601  00C8  0528               	andwf	(catgenie_init@tempmask),w
 22602  00C9  00A6               	movwf	(??_catgenie_init+1)+0
 22603  00CA  300E               	movlw	(0Eh)
 22604  00CB  00A7               	movwf	(??_catgenie_init+2)+0
 22605  00CC  0827               	movf	(??_catgenie_init+2)+0,w
 22606  00CD  00A1               	movwf	(?___bmul)
 22607  00CE  0829               	movf	(catgenie_init@temp),w
 22608  00CF  31A9  21DC  3180   	fcall	___bmul
 22609  00D2  3E0A               	addlw	0Ah
 22610  00D3  3EA0               	addlw	_debouncers&0ffh
 22611  00D4  0086               	movwf	fsr1l
 22612  00D5  3001               	movlw 1	; select bank3/4
 22613  00D6  0087               	movwf fsr1h	
 22614                           	
 22615  00D7  0020               	movlb 0	; select bank0
 22616  00D8  0826               	movf	(??_catgenie_init+1)+0,w
 22617  00D9  0081               	movwf	indf1
 22618                           	line	205
 22619                           	
 22620  00DA                     l36917:	
 22621  00DA  3001               	movlw	(01h)
 22622  00DB  00A5               	movwf	(??_catgenie_init+0)+0
 22623  00DC  0825               	movf	(??_catgenie_init+0)+0,w
 22624  00DD  07A9               	addwf	(catgenie_init@temp),f
 22625                           	
 22626  00DE                     l36919:	
 22627  00DE  3003               	movlw	(03h)
 22628  00DF  0229               	subwf	(catgenie_init@temp),w
 22629  00E0  1C03               	skipc
 22630  00E1  28E3               	goto	u9671
 22631  00E2  28E4               	goto	u9670
 22632  00E3                     u9671:
 22633  00E3  28A4               	goto	l36915
 22634  00E4                     u9670:
 22635                           	
 22636  00E4                     l10863:	
 22637                           	line	212
 22638                           ;catgenie120.c: 209: }
 22639                           ;catgenie120.c: 212: temp = 0;
 22640  00E4  01A9               	clrf	(catgenie_init@temp)
 22641                           	line	213
 22642                           ;catgenie120.c: 213: if (!(PORTB & (1U << (0))))
 22643  00E5  180D               	btfsc	(13),(0)&7	;volatile
 22644  00E6  28E8               	goto	u9681
 22645  00E7  28E9               	goto	u9680
 22646  00E8                     u9681:
 22647  00E8  28EA               	goto	l10864
 22648  00E9                     u9680:
 22649                           	line	214
 22650                           	
 22651  00E9                     l36921:	
 22652                           ;catgenie120.c: 214: temp |= (0x01 << 0);
 22653  00E9  1429               	bsf	(catgenie_init@temp)+(0/8),(0)&7
 22654                           	
 22655  00EA                     l10864:	
 22656                           	line	215
 22657                           ;catgenie120.c: 215: if (!(PORTB & (1U << (5))))
 22658  00EA  1A8D               	btfsc	(13),(5)&7	;volatile
 22659  00EB  28ED               	goto	u9691
 22660  00EC  28EE               	goto	u9690
 22661  00ED                     u9691:
 22662  00ED  28F0               	goto	l36925
 22663  00EE                     u9690:
 22664                           	line	216
 22665                           	
 22666  00EE                     l36923:	
 22667                           ;catgenie120.c: 216: temp |= (0x01 << 1);
 22668  00EE  14A9               	bsf	(catgenie_init@temp)+(1/8),(1)&7
 22669  00EF  28F0               	goto	l36925
 22670                           	
 22671  00F0                     l10865:	
 22672                           	line	218
 22673                           	
 22674  00F0                     l36925:	
 22675                           ;catgenie120.c: 218: return temp;
 22676  00F0  0829               	movf	(catgenie_init@temp),w
 22677  00F1  28F2               	goto	l10866
 22678                           	
 22679  00F2                     l36927:	
 22680                           	line	219
 22681                           	
 22682  00F2                     l10866:	
 22683  00F2  0008               	return
 22684                           	opt stack 0
 22685                           GLOBAL	__end_of_catgenie_init
 22686  00F3                     	__end_of_catgenie_init:
 22687 ;; =============== function _catgenie_init ends ============
 22688                           
 22689                           	signat	_catgenie_init,89
 22690                           	global	___lldiv
 22691                           psect	text3271,local,class=CODE,delta=2
 22692                           global __ptext3271
 22693  20E4                     __ptext3271:
 22694                           
 22695 ;; *************** function ___lldiv *****************
 22696 ;; Defined at:
 22697 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 22698 ;; Parameters:    Size  Location     Type
 22699 ;;  divisor         4    0[BANK0 ] unsigned long 
 22700 ;;  dividend        4    4[BANK0 ] unsigned long 
 22701 ;; Auto vars:     Size  Location     Type
 22702 ;;  quotient        4    9[BANK0 ] unsigned long 
 22703 ;;  counter         1   13[BANK0 ] unsigned char 
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  4    0[BANK0 ] unsigned long 
 22706 ;; Registers used:
 22707 ;;		wreg, status,2, status,0
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/0
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22713 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 22714 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 22715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22716 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 22717 ;;Total ram usage:       14 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:    2
 22720 ;; This function calls:
 22721 ;;		Nothing
 22722 ;; This function is called by:
 22723 ;;		_serial_init
 22724 ;; This function uses a non-reentrant model
 22725 ;;
 22726                           psect	text3271
 22727                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 22728                           	line	5
 22729                           	global	__size_of___lldiv
 22730  0063                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 22731                           	
 22732  20E4                     ___lldiv:	
 22733                           	opt	stack 12
 22734                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 22735                           	line	9
 22736                           	
 22737  20E4                     l34399:	
 22738  20E4  3000               	movlw	0
 22739  20E5  0020               	movlb 0	; select bank0
 22740  20E6  00AD               	movwf	(___lldiv@quotient+3)
 22741  20E7  3000               	movlw	0
 22742  20E8  00AC               	movwf	(___lldiv@quotient+2)
 22743  20E9  3000               	movlw	0
 22744  20EA  00AB               	movwf	(___lldiv@quotient+1)
 22745  20EB  3000               	movlw	0
 22746  20EC  00AA               	movwf	(___lldiv@quotient)
 22747                           
 22748                           	line	10
 22749  20ED  0824               	movf	(___lldiv@divisor+3),w
 22750  20EE  0423               	iorwf	(___lldiv@divisor+2),w
 22751  20EF  0422               	iorwf	(___lldiv@divisor+1),w
 22752  20F0  0421               	iorwf	(___lldiv@divisor),w
 22753  20F1  1903               	skipnz
 22754  20F2  28F4               	goto	u6381
 22755  20F3  28F5               	goto	u6380
 22756  20F4                     u6381:
 22757  20F4  293D               	goto	l34419
 22758  20F5                     u6380:
 22759                           	line	11
 22760                           	
 22761  20F5                     l34401:	
 22762  20F5  01AE               	clrf	(___lldiv@counter)
 22763  20F6  1403               	bsf	status,0
 22764  20F7  0DAE               	rlf	(___lldiv@counter),f
 22765                           	line	12
 22766  20F8  2905               	goto	l34405
 22767                           	
 22768  20F9                     l29249:	
 22769                           	line	13
 22770                           	
 22771  20F9                     l34403:	
 22772  20F9  3001               	movlw	01h
 22773  20FA                     u6395:
 22774  20FA  35A1               	lslf	(___lldiv@divisor),f
 22775  20FB  0DA2               	rlf	(___lldiv@divisor+1),f
 22776  20FC  0DA3               	rlf	(___lldiv@divisor+2),f
 22777  20FD  0DA4               	rlf	(___lldiv@divisor+3),f
 22778  20FE  0B89               	decfsz	wreg,f
 22779  20FF  28FA               	goto	u6395
 22780                           	line	14
 22781  2100  3001               	movlw	(01h)
 22782  2101  00A9               	movwf	(??___lldiv+0)+0
 22783  2102  0829               	movf	(??___lldiv+0)+0,w
 22784  2103  07AE               	addwf	(___lldiv@counter),f
 22785  2104  2905               	goto	l34405
 22786                           	line	15
 22787                           	
 22788  2105                     l29248:	
 22789                           	line	12
 22790                           	
 22791  2105                     l34405:	
 22792  2105  1FA4               	btfss	(___lldiv@divisor+3),(31)&7
 22793  2106  2908               	goto	u6401
 22794  2107  2909               	goto	u6400
 22795  2108                     u6401:
 22796  2108  28F9               	goto	l34403
 22797  2109                     u6400:
 22798  2109  290B               	goto	l34407
 22799                           	
 22800  210A                     l29250:	
 22801  210A  290B               	goto	l34407
 22802                           	line	16
 22803                           	
 22804  210B                     l29251:	
 22805                           	line	17
 22806                           	
 22807  210B                     l34407:	
 22808  210B  3001               	movlw	01h
 22809  210C                     u6415:
 22810  210C  35AA               	lslf	(___lldiv@quotient),f
 22811  210D  0DAB               	rlf	(___lldiv@quotient+1),f
 22812  210E  0DAC               	rlf	(___lldiv@quotient+2),f
 22813  210F  0DAD               	rlf	(___lldiv@quotient+3),f
 22814  2110  0B89               	decfsz	wreg,f
 22815  2111  290C               	goto	u6415
 22816                           	line	18
 22817                           	
 22818  2112                     l34409:	
 22819  2112  0824               	movf	(___lldiv@divisor+3),w
 22820  2113  0228               	subwf	(___lldiv@dividend+3),w
 22821  2114  1D03               	skipz
 22822  2115  2920               	goto	u6425
 22823  2116  0823               	movf	(___lldiv@divisor+2),w
 22824  2117  0227               	subwf	(___lldiv@dividend+2),w
 22825  2118  1D03               	skipz
 22826  2119  2920               	goto	u6425
 22827  211A  0822               	movf	(___lldiv@divisor+1),w
 22828  211B  0226               	subwf	(___lldiv@dividend+1),w
 22829  211C  1D03               	skipz
 22830  211D  2920               	goto	u6425
 22831  211E  0821               	movf	(___lldiv@divisor),w
 22832  211F  0225               	subwf	(___lldiv@dividend),w
 22833  2120                     u6425:
 22834  2120  1C03               	skipc
 22835  2121  2923               	goto	u6421
 22836  2122  2924               	goto	u6420
 22837  2123                     u6421:
 22838  2123  292E               	goto	l34415
 22839  2124                     u6420:
 22840                           	line	19
 22841                           	
 22842  2124                     l34411:	
 22843  2124  0821               	movf	(___lldiv@divisor),w
 22844  2125  02A5               	subwf	(___lldiv@dividend),f
 22845  2126  0822               	movf	(___lldiv@divisor+1),w
 22846  2127  3BA6               	subwfb	(___lldiv@dividend+1),f
 22847  2128  0823               	movf	(___lldiv@divisor+2),w
 22848  2129  3BA7               	subwfb	(___lldiv@dividend+2),f
 22849  212A  0824               	movf	(___lldiv@divisor+3),w
 22850  212B  3BA8               	subwfb	(___lldiv@dividend+3),f
 22851                           	line	20
 22852                           	
 22853  212C                     l34413:	
 22854  212C  142A               	bsf	(___lldiv@quotient)+(0/8),(0)&7
 22855  212D  292E               	goto	l34415
 22856                           	line	21
 22857                           	
 22858  212E                     l29252:	
 22859                           	line	22
 22860                           	
 22861  212E                     l34415:	
 22862  212E  3001               	movlw	01h
 22863  212F                     u6435:
 22864  212F  36A4               	lsrf	(___lldiv@divisor+3),f
 22865  2130  0CA3               	rrf	(___lldiv@divisor+2),f
 22866  2131  0CA2               	rrf	(___lldiv@divisor+1),f
 22867  2132  0CA1               	rrf	(___lldiv@divisor),f
 22868  2133  0B89               	decfsz	wreg,f
 22869  2134  292F               	goto	u6435
 22870                           
 22871                           	line	23
 22872                           	
 22873  2135                     l34417:	
 22874  2135  3001               	movlw	low(01h)
 22875  2136  02AE               	subwf	(___lldiv@counter),f
 22876  2137  1D03               	btfss	status,2
 22877  2138  293A               	goto	u6441
 22878  2139  293B               	goto	u6440
 22879  213A                     u6441:
 22880  213A  290B               	goto	l34407
 22881  213B                     u6440:
 22882  213B  293D               	goto	l34419
 22883                           	
 22884  213C                     l29253:	
 22885  213C  293D               	goto	l34419
 22886                           	line	24
 22887                           	
 22888  213D                     l29247:	
 22889                           	line	25
 22890                           	
 22891  213D                     l34419:	
 22892  213D  082D               	movf	(___lldiv@quotient+3),w
 22893  213E  00A4               	movwf	(?___lldiv+3)
 22894  213F  082C               	movf	(___lldiv@quotient+2),w
 22895  2140  00A3               	movwf	(?___lldiv+2)
 22896  2141  082B               	movf	(___lldiv@quotient+1),w
 22897  2142  00A2               	movwf	(?___lldiv+1)
 22898  2143  082A               	movf	(___lldiv@quotient),w
 22899  2144  00A1               	movwf	(?___lldiv)
 22900                           
 22901  2145  2946               	goto	l29254
 22902                           	
 22903  2146                     l34421:	
 22904                           	line	26
 22905                           	
 22906  2146                     l29254:	
 22907  2146  0008               	return
 22908                           	opt stack 0
 22909                           GLOBAL	__end_of___lldiv
 22910  2147                     	__end_of___lldiv:
 22911 ;; =============== function ___lldiv ends ============
 22912                           
 22913                           	signat	___lldiv,8316
 22914                           	global	___lmul
 22915                           psect	text3272,local,class=CODE,delta=2
 22916                           global __ptext3272
 22917  2D13                     __ptext3272:
 22918                           
 22919 ;; *************** function ___lmul *****************
 22920 ;; Defined at:
 22921 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
 22922 ;; Parameters:    Size  Location     Type
 22923 ;;  multiplier      4    0[BANK0 ] unsigned long 
 22924 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 22925 ;; Auto vars:     Size  Location     Type
 22926 ;;  product         4    8[BANK0 ] unsigned long 
 22927 ;; Return value:  Size  Location     Type
 22928 ;;                  4    0[BANK0 ] unsigned long 
 22929 ;; Registers used:
 22930 ;;		wreg, status,2, status,0
 22931 ;; Tracked objects:
 22932 ;;		On entry : 0/0
 22933 ;;		On exit  : 0/0
 22934 ;;		Unchanged: 0/0
 22935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22936 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 22937 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22939 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 22940 ;;Total ram usage:       12 bytes
 22941 ;; Hardware stack levels used:    1
 22942 ;; Hardware stack levels required when called:    2
 22943 ;; This function calls:
 22944 ;;		Nothing
 22945 ;; This function is called by:
 22946 ;;		_exe_instruction
 22947 ;; This function uses a non-reentrant model
 22948 ;;
 22949                           psect	text3272
 22950                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
 22951                           	line	3
 22952                           	global	__size_of___lmul
 22953  0038                     	__size_of___lmul	equ	__end_of___lmul-___lmul
 22954                           	
 22955  2D13                     ___lmul:	
 22956                           	opt	stack 11
 22957                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 22958                           	line	4
 22959                           	
 22960  2D13                     l36863:	
 22961  2D13  3000               	movlw	0
 22962  2D14  0020               	movlb 0	; select bank0
 22963  2D15  00AC               	movwf	(___lmul@product+3)
 22964  2D16  3000               	movlw	0
 22965  2D17  00AB               	movwf	(___lmul@product+2)
 22966  2D18  3000               	movlw	0
 22967  2D19  00AA               	movwf	(___lmul@product+1)
 22968  2D1A  3000               	movlw	0
 22969  2D1B  00A9               	movwf	(___lmul@product)
 22970                           
 22971  2D1C  2D1D               	goto	l36865
 22972                           	line	6
 22973                           	
 22974  2D1D                     l29150:	
 22975                           	line	7
 22976                           	
 22977  2D1D                     l36865:	
 22978  2D1D  1C21               	btfss	(___lmul@multiplier),(0)&7
 22979  2D1E  2D20               	goto	u9621
 22980  2D1F  2D21               	goto	u9620
 22981  2D20                     u9621:
 22982  2D20  2D2A               	goto	l36869
 22983  2D21                     u9620:
 22984                           	line	8
 22985                           	
 22986  2D21                     l36867:	
 22987  2D21  0825               	movf	(___lmul@multiplicand),w
 22988  2D22  07A9               	addwf	(___lmul@product),f
 22989  2D23  0826               	movf	(___lmul@multiplicand+1),w
 22990  2D24  3DAA               	addwfc	(___lmul@product+1),f
 22991  2D25  0827               	movf	(___lmul@multiplicand+2),w
 22992  2D26  3DAB               	addwfc	(___lmul@product+2),f
 22993  2D27  0828               	movf	(___lmul@multiplicand+3),w
 22994  2D28  3DAC               	addwfc	(___lmul@product+3),f
 22995  2D29  2D2A               	goto	l36869
 22996                           	
 22997  2D2A                     l29151:	
 22998                           	line	9
 22999                           	
 23000  2D2A                     l36869:	
 23001  2D2A  3001               	movlw	01h
 23002  2D2B                     u9635:
 23003  2D2B  35A5               	lslf	(___lmul@multiplicand),f
 23004  2D2C  0DA6               	rlf	(___lmul@multiplicand+1),f
 23005  2D2D  0DA7               	rlf	(___lmul@multiplicand+2),f
 23006  2D2E  0DA8               	rlf	(___lmul@multiplicand+3),f
 23007  2D2F  0B89               	decfsz	wreg,f
 23008  2D30  2D2B               	goto	u9635
 23009                           	line	10
 23010                           	
 23011  2D31                     l36871:	
 23012  2D31  3001               	movlw	01h
 23013  2D32                     u9645:
 23014  2D32  36A4               	lsrf	(___lmul@multiplier+3),f
 23015  2D33  0CA3               	rrf	(___lmul@multiplier+2),f
 23016  2D34  0CA2               	rrf	(___lmul@multiplier+1),f
 23017  2D35  0CA1               	rrf	(___lmul@multiplier),f
 23018  2D36  0B89               	decfsz	wreg,f
 23019  2D37  2D32               	goto	u9645
 23020                           
 23021                           	line	11
 23022  2D38  0824               	movf	(___lmul@multiplier+3),w
 23023  2D39  0423               	iorwf	(___lmul@multiplier+2),w
 23024  2D3A  0422               	iorwf	(___lmul@multiplier+1),w
 23025  2D3B  0421               	iorwf	(___lmul@multiplier),w
 23026  2D3C  1D03               	skipz
 23027  2D3D  2D3F               	goto	u9651
 23028  2D3E  2D40               	goto	u9650
 23029  2D3F                     u9651:
 23030  2D3F  2D1D               	goto	l36865
 23031  2D40                     u9650:
 23032  2D40  2D41               	goto	l36873
 23033                           	
 23034  2D41                     l29152:	
 23035                           	line	12
 23036                           	
 23037  2D41                     l36873:	
 23038  2D41  082C               	movf	(___lmul@product+3),w
 23039  2D42  00A4               	movwf	(?___lmul+3)
 23040  2D43  082B               	movf	(___lmul@product+2),w
 23041  2D44  00A3               	movwf	(?___lmul+2)
 23042  2D45  082A               	movf	(___lmul@product+1),w
 23043  2D46  00A2               	movwf	(?___lmul+1)
 23044  2D47  0829               	movf	(___lmul@product),w
 23045  2D48  00A1               	movwf	(?___lmul)
 23046                           
 23047  2D49  2D4A               	goto	l29153
 23048                           	
 23049  2D4A                     l36875:	
 23050                           	line	13
 23051                           	
 23052  2D4A                     l29153:	
 23053  2D4A  0008               	return
 23054                           	opt stack 0
 23055                           GLOBAL	__end_of___lmul
 23056  2D4B                     	__end_of___lmul:
 23057 ;; =============== function ___lmul ends ============
 23058                           
 23059                           	signat	___lmul,8316
 23060                           	global	___lwmod
 23061                           psect	text3273,local,class=CODE,delta=2
 23062                           global __ptext3273
 23063  2D83                     __ptext3273:
 23064                           
 23065 ;; *************** function ___lwmod *****************
 23066 ;; Defined at:
 23067 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;  divisor         2    8[BANK0 ] unsigned int 
 23070 ;;  dividend        2   10[BANK0 ] unsigned int 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  counter         1   13[BANK0 ] unsigned char 
 23073 ;; Return value:  Size  Location     Type
 23074 ;;                  2    8[BANK0 ] unsigned int 
 23075 ;; Registers used:
 23076 ;;		wreg, status,2, status,0
 23077 ;; Tracked objects:
 23078 ;;		On entry : 0/0
 23079 ;;		On exit  : 0/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 23086 ;;Total ram usage:        6 bytes
 23087 ;; Hardware stack levels used:    1
 23088 ;; Hardware stack levels required when called:    2
 23089 ;; This function calls:
 23090 ;;		Nothing
 23091 ;; This function is called by:
 23092 ;;		_exe_instruction
 23093 ;;		_printf
 23094 ;; This function uses a non-reentrant model
 23095 ;;
 23096                           psect	text3273
 23097                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 23098                           	line	5
 23099                           	global	__size_of___lwmod
 23100  003F                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 23101                           	
 23102  2D83                     ___lwmod:	
 23103                           	opt	stack 9
 23104                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 23105                           	line	8
 23106                           	
 23107  2D83                     l36841:	
 23108  2D83  0020               	movlb 0	; select bank0
 23109  2D84  082A               	movf	(___lwmod@divisor+1),w
 23110  2D85  0429               	iorwf	(___lwmod@divisor),w
 23111  2D86  1903               	skipnz
 23112  2D87  2D89               	goto	u9561
 23113  2D88  2D8A               	goto	u9560
 23114  2D89                     u9561:
 23115  2D89  2DBA               	goto	l36859
 23116  2D8A                     u9560:
 23117                           	line	9
 23118                           	
 23119  2D8A                     l36843:	
 23120  2D8A  01AE               	clrf	(___lwmod@counter)
 23121  2D8B  1403               	bsf	status,0
 23122  2D8C  0DAE               	rlf	(___lwmod@counter),f
 23123                           	line	10
 23124  2D8D  2D98               	goto	l36849
 23125                           	
 23126  2D8E                     l29093:	
 23127                           	line	11
 23128                           	
 23129  2D8E                     l36845:	
 23130  2D8E  3001               	movlw	01h
 23131                           	
 23132  2D8F                     u9575:
 23133  2D8F  35A9               	lslf	(___lwmod@divisor),f
 23134  2D90  0DAA               	rlf	(___lwmod@divisor+1),f
 23135  2D91  0B89               	decfsz	wreg,f
 23136  2D92  2D8F               	goto	u9575
 23137                           	line	12
 23138                           	
 23139  2D93                     l36847:	
 23140  2D93  3001               	movlw	(01h)
 23141  2D94  00AD               	movwf	(??___lwmod+0)+0
 23142  2D95  082D               	movf	(??___lwmod+0)+0,w
 23143  2D96  07AE               	addwf	(___lwmod@counter),f
 23144  2D97  2D98               	goto	l36849
 23145                           	line	13
 23146                           	
 23147  2D98                     l29092:	
 23148                           	line	10
 23149                           	
 23150  2D98                     l36849:	
 23151  2D98  1FAA               	btfss	(___lwmod@divisor+1),(15)&7
 23152  2D99  2D9B               	goto	u9581
 23153  2D9A  2D9C               	goto	u9580
 23154  2D9B                     u9581:
 23155  2D9B  2D8E               	goto	l36845
 23156  2D9C                     u9580:
 23157  2D9C  2D9E               	goto	l36851
 23158                           	
 23159  2D9D                     l29094:	
 23160  2D9D  2D9E               	goto	l36851
 23161                           	line	14
 23162                           	
 23163  2D9E                     l29095:	
 23164                           	line	15
 23165                           	
 23166  2D9E                     l36851:	
 23167  2D9E  082A               	movf	(___lwmod@divisor+1),w
 23168  2D9F  022C               	subwf	(___lwmod@dividend+1),w
 23169  2DA0  1D03               	skipz
 23170  2DA1  2DA4               	goto	u9595
 23171  2DA2  0829               	movf	(___lwmod@divisor),w
 23172  2DA3  022B               	subwf	(___lwmod@dividend),w
 23173  2DA4                     u9595:
 23174  2DA4  1C03               	skipc
 23175  2DA5  2DA7               	goto	u9591
 23176  2DA6  2DA8               	goto	u9590
 23177  2DA7                     u9591:
 23178  2DA7  2DAD               	goto	l36855
 23179  2DA8                     u9590:
 23180                           	line	16
 23181                           	
 23182  2DA8                     l36853:	
 23183  2DA8  0829               	movf	(___lwmod@divisor),w
 23184  2DA9  02AB               	subwf	(___lwmod@dividend),f
 23185  2DAA  082A               	movf	(___lwmod@divisor+1),w
 23186  2DAB  3BAC               	subwfb	(___lwmod@dividend+1),f
 23187  2DAC  2DAD               	goto	l36855
 23188                           	
 23189  2DAD                     l29096:	
 23190                           	line	17
 23191                           	
 23192  2DAD                     l36855:	
 23193  2DAD  3001               	movlw	01h
 23194                           	
 23195  2DAE                     u9605:
 23196  2DAE  36AA               	lsrf	(___lwmod@divisor+1),f
 23197  2DAF  0CA9               	rrf	(___lwmod@divisor),f
 23198  2DB0  0B89               	decfsz	wreg,f
 23199  2DB1  2DAE               	goto	u9605
 23200                           	line	18
 23201                           	
 23202  2DB2                     l36857:	
 23203  2DB2  3001               	movlw	low(01h)
 23204  2DB3  02AE               	subwf	(___lwmod@counter),f
 23205  2DB4  1D03               	btfss	status,2
 23206  2DB5  2DB7               	goto	u9611
 23207  2DB6  2DB8               	goto	u9610
 23208  2DB7                     u9611:
 23209  2DB7  2D9E               	goto	l36851
 23210  2DB8                     u9610:
 23211  2DB8  2DBA               	goto	l36859
 23212                           	
 23213  2DB9                     l29097:	
 23214  2DB9  2DBA               	goto	l36859
 23215                           	line	19
 23216                           	
 23217  2DBA                     l29091:	
 23218                           	line	20
 23219                           	
 23220  2DBA                     l36859:	
 23221  2DBA  082C               	movf	(___lwmod@dividend+1),w
 23222  2DBB  01AA               	clrf	(?___lwmod+1)
 23223  2DBC  07AA               	addwf	(?___lwmod+1)
 23224  2DBD  082B               	movf	(___lwmod@dividend),w
 23225  2DBE  01A9               	clrf	(?___lwmod)
 23226  2DBF  07A9               	addwf	(?___lwmod)
 23227                           
 23228  2DC0  2DC1               	goto	l29098
 23229                           	
 23230  2DC1                     l36861:	
 23231                           	line	21
 23232                           	
 23233  2DC1                     l29098:	
 23234  2DC1  0008               	return
 23235                           	opt stack 0
 23236                           GLOBAL	__end_of___lwmod
 23237  2DC2                     	__end_of___lwmod:
 23238 ;; =============== function ___lwmod ends ============
 23239                           
 23240                           	signat	___lwmod,8314
 23241                           	global	___lwdiv
 23242                           psect	text3274,local,class=CODE,delta=2
 23243                           global __ptext3274
 23244  2DC2                     __ptext3274:
 23245                           
 23246 ;; *************** function ___lwdiv *****************
 23247 ;; Defined at:
 23248 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 23249 ;; Parameters:    Size  Location     Type
 23250 ;;  divisor         2    0[BANK0 ] unsigned int 
 23251 ;;  dividend        2    2[BANK0 ] unsigned int 
 23252 ;; Auto vars:     Size  Location     Type
 23253 ;;  quotient        2    6[BANK0 ] unsigned int 
 23254 ;;  counter         1    5[BANK0 ] unsigned char 
 23255 ;; Return value:  Size  Location     Type
 23256 ;;                  2    0[BANK0 ] unsigned int 
 23257 ;; Registers used:
 23258 ;;		wreg, status,2, status,0
 23259 ;; Tracked objects:
 23260 ;;		On entry : 0/0
 23261 ;;		On exit  : 0/0
 23262 ;;		Unchanged: 0/0
 23263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23267 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 23268 ;;Total ram usage:        8 bytes
 23269 ;; Hardware stack levels used:    1
 23270 ;; Hardware stack levels required when called:    2
 23271 ;; This function calls:
 23272 ;;		Nothing
 23273 ;; This function is called by:
 23274 ;;		_exe_instruction
 23275 ;;		_printf
 23276 ;; This function uses a non-reentrant model
 23277 ;;
 23278                           psect	text3274
 23279                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 23280                           	line	5
 23281                           	global	__size_of___lwdiv
 23282  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 23283                           	
 23284  2DC2                     ___lwdiv:	
 23285                           	opt	stack 9
 23286                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23287                           	line	9
 23288                           	
 23289  2DC2                     l36815:	
 23290  2DC2  0020               	movlb 0	; select bank0
 23291  2DC3  01A7               	clrf	(___lwdiv@quotient)
 23292  2DC4  01A8               	clrf	(___lwdiv@quotient+1)
 23293                           	line	10
 23294                           	
 23295  2DC5                     l36817:	
 23296  2DC5  0822               	movf	(___lwdiv@divisor+1),w
 23297  2DC6  0421               	iorwf	(___lwdiv@divisor),w
 23298  2DC7  1903               	skipnz
 23299  2DC8  2DCA               	goto	u9491
 23300  2DC9  2DCB               	goto	u9490
 23301  2DCA                     u9491:
 23302  2DCA  2E01               	goto	l36837
 23303  2DCB                     u9490:
 23304                           	line	11
 23305                           	
 23306  2DCB                     l36819:	
 23307  2DCB  01A6               	clrf	(___lwdiv@counter)
 23308  2DCC  1403               	bsf	status,0
 23309  2DCD  0DA6               	rlf	(___lwdiv@counter),f
 23310                           	line	12
 23311  2DCE  2DD9               	goto	l36825
 23312                           	
 23313  2DCF                     l29083:	
 23314                           	line	13
 23315                           	
 23316  2DCF                     l36821:	
 23317  2DCF  3001               	movlw	01h
 23318                           	
 23319  2DD0                     u9505:
 23320  2DD0  35A1               	lslf	(___lwdiv@divisor),f
 23321  2DD1  0DA2               	rlf	(___lwdiv@divisor+1),f
 23322  2DD2  0B89               	decfsz	wreg,f
 23323  2DD3  2DD0               	goto	u9505
 23324                           	line	14
 23325                           	
 23326  2DD4                     l36823:	
 23327  2DD4  3001               	movlw	(01h)
 23328  2DD5  00A5               	movwf	(??___lwdiv+0)+0
 23329  2DD6  0825               	movf	(??___lwdiv+0)+0,w
 23330  2DD7  07A6               	addwf	(___lwdiv@counter),f
 23331  2DD8  2DD9               	goto	l36825
 23332                           	line	15
 23333                           	
 23334  2DD9                     l29082:	
 23335                           	line	12
 23336                           	
 23337  2DD9                     l36825:	
 23338  2DD9  1FA2               	btfss	(___lwdiv@divisor+1),(15)&7
 23339  2DDA  2DDC               	goto	u9511
 23340  2DDB  2DDD               	goto	u9510
 23341  2DDC                     u9511:
 23342  2DDC  2DCF               	goto	l36821
 23343  2DDD                     u9510:
 23344  2DDD  2DDF               	goto	l36827
 23345                           	
 23346  2DDE                     l29084:	
 23347  2DDE  2DDF               	goto	l36827
 23348                           	line	16
 23349                           	
 23350  2DDF                     l29085:	
 23351                           	line	17
 23352                           	
 23353  2DDF                     l36827:	
 23354  2DDF  3001               	movlw	01h
 23355                           	
 23356  2DE0                     u9525:
 23357  2DE0  35A7               	lslf	(___lwdiv@quotient),f
 23358  2DE1  0DA8               	rlf	(___lwdiv@quotient+1),f
 23359  2DE2  0B89               	decfsz	wreg,f
 23360  2DE3  2DE0               	goto	u9525
 23361                           	line	18
 23362  2DE4  0822               	movf	(___lwdiv@divisor+1),w
 23363  2DE5  0224               	subwf	(___lwdiv@dividend+1),w
 23364  2DE6  1D03               	skipz
 23365  2DE7  2DEA               	goto	u9535
 23366  2DE8  0821               	movf	(___lwdiv@divisor),w
 23367  2DE9  0223               	subwf	(___lwdiv@dividend),w
 23368  2DEA                     u9535:
 23369  2DEA  1C03               	skipc
 23370  2DEB  2DED               	goto	u9531
 23371  2DEC  2DEE               	goto	u9530
 23372  2DED                     u9531:
 23373  2DED  2DF4               	goto	l36833
 23374  2DEE                     u9530:
 23375                           	line	19
 23376                           	
 23377  2DEE                     l36829:	
 23378  2DEE  0821               	movf	(___lwdiv@divisor),w
 23379  2DEF  02A3               	subwf	(___lwdiv@dividend),f
 23380  2DF0  0822               	movf	(___lwdiv@divisor+1),w
 23381  2DF1  3BA4               	subwfb	(___lwdiv@dividend+1),f
 23382                           	line	20
 23383                           	
 23384  2DF2                     l36831:	
 23385  2DF2  1427               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 23386  2DF3  2DF4               	goto	l36833
 23387                           	line	21
 23388                           	
 23389  2DF4                     l29086:	
 23390                           	line	22
 23391                           	
 23392  2DF4                     l36833:	
 23393  2DF4  3001               	movlw	01h
 23394                           	
 23395  2DF5                     u9545:
 23396  2DF5  36A2               	lsrf	(___lwdiv@divisor+1),f
 23397  2DF6  0CA1               	rrf	(___lwdiv@divisor),f
 23398  2DF7  0B89               	decfsz	wreg,f
 23399  2DF8  2DF5               	goto	u9545
 23400                           	line	23
 23401                           	
 23402  2DF9                     l36835:	
 23403  2DF9  3001               	movlw	low(01h)
 23404  2DFA  02A6               	subwf	(___lwdiv@counter),f
 23405  2DFB  1D03               	btfss	status,2
 23406  2DFC  2DFE               	goto	u9551
 23407  2DFD  2DFF               	goto	u9550
 23408  2DFE                     u9551:
 23409  2DFE  2DDF               	goto	l36827
 23410  2DFF                     u9550:
 23411  2DFF  2E01               	goto	l36837
 23412                           	
 23413  2E00                     l29087:	
 23414  2E00  2E01               	goto	l36837
 23415                           	line	24
 23416                           	
 23417  2E01                     l29081:	
 23418                           	line	25
 23419                           	
 23420  2E01                     l36837:	
 23421  2E01  0828               	movf	(___lwdiv@quotient+1),w
 23422  2E02  01A2               	clrf	(?___lwdiv+1)
 23423  2E03  07A2               	addwf	(?___lwdiv+1)
 23424  2E04  0827               	movf	(___lwdiv@quotient),w
 23425  2E05  01A1               	clrf	(?___lwdiv)
 23426  2E06  07A1               	addwf	(?___lwdiv)
 23427                           
 23428  2E07  2E08               	goto	l29088
 23429                           	
 23430  2E08                     l36839:	
 23431                           	line	26
 23432                           	
 23433  2E08                     l29088:	
 23434  2E08  0008               	return
 23435                           	opt stack 0
 23436                           GLOBAL	__end_of___lwdiv
 23437  2E09                     	__end_of___lwdiv:
 23438 ;; =============== function ___lwdiv ends ============
 23439                           
 23440                           	signat	___lwdiv,8314
 23441                           	global	___wmul
 23442                           psect	text3275,local,class=CODE,delta=2
 23443                           global __ptext3275
 23444  2000                     __ptext3275:
 23445                           
 23446 ;; *************** function ___wmul *****************
 23447 ;; Defined at:
 23448 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 23449 ;; Parameters:    Size  Location     Type
 23450 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23451 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23452 ;; Auto vars:     Size  Location     Type
 23453 ;;  product         2    4[BANK0 ] unsigned int 
 23454 ;; Return value:  Size  Location     Type
 23455 ;;                  2    0[BANK0 ] unsigned int 
 23456 ;; Registers used:
 23457 ;;		wreg, status,2, status,0
 23458 ;; Tracked objects:
 23459 ;;		On entry : 0/0
 23460 ;;		On exit  : 0/0
 23461 ;;		Unchanged: 0/0
 23462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23466 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 23467 ;;Total ram usage:        6 bytes
 23468 ;; Hardware stack levels used:    1
 23469 ;; Hardware stack levels required when called:    2
 23470 ;; This function calls:
 23471 ;;		Nothing
 23472 ;; This function is called by:
 23473 ;;		_exe_instruction
 23474 ;;		_catgenie_init
 23475 ;;		_catgenie_work
 23476 ;;		_set_pacer
 23477 ;;		_proc_line
 23478 ;;		_cmd2index
 23479 ;;		_help
 23480 ;;		_printf
 23481 ;; This function uses a non-reentrant model
 23482 ;;
 23483                           psect	text3275
 23484                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 23485                           	line	3
 23486                           	global	__size_of___wmul
 23487  0025                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 23488                           	
 23489  2000                     ___wmul:	
 23490                           	opt	stack 9
 23491                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 23492                           	line	4
 23493                           	
 23494  2000                     l36803:	
 23495  2000  0020               	movlb 0	; select bank0
 23496  2001  01A5               	clrf	(___wmul@product)
 23497  2002  01A6               	clrf	(___wmul@product+1)
 23498  2003  2804               	goto	l36805
 23499                           	line	6
 23500                           	
 23501  2004                     l29075:	
 23502                           	line	7
 23503                           	
 23504  2004                     l36805:	
 23505  2004  1C21               	btfss	(___wmul@multiplier),(0)&7
 23506  2005  2807               	goto	u9451
 23507  2006  2808               	goto	u9450
 23508  2007                     u9451:
 23509  2007  280C               	goto	l29076
 23510  2008                     u9450:
 23511                           	line	8
 23512                           	
 23513  2008                     l36807:	
 23514  2008  0823               	movf	(___wmul@multiplicand),w
 23515  2009  07A5               	addwf	(___wmul@product),f
 23516  200A  0824               	movf	(___wmul@multiplicand+1),w
 23517  200B  3DA6               	addwfc	(___wmul@product+1),f
 23518                           	
 23519  200C                     l29076:	
 23520                           	line	9
 23521  200C  3001               	movlw	01h
 23522                           	
 23523  200D                     u9465:
 23524  200D  35A3               	lslf	(___wmul@multiplicand),f
 23525  200E  0DA4               	rlf	(___wmul@multiplicand+1),f
 23526  200F  0B89               	decfsz	wreg,f
 23527  2010  280D               	goto	u9465
 23528                           	line	10
 23529                           	
 23530  2011                     l36809:	
 23531  2011  3001               	movlw	01h
 23532                           	
 23533  2012                     u9475:
 23534  2012  36A2               	lsrf	(___wmul@multiplier+1),f
 23535  2013  0CA1               	rrf	(___wmul@multiplier),f
 23536  2014  0B89               	decfsz	wreg,f
 23537  2015  2812               	goto	u9475
 23538                           	line	11
 23539  2016  0822               	movf	((___wmul@multiplier+1)),w
 23540  2017  0421               	iorwf	((___wmul@multiplier)),w
 23541  2018  1D03               	skipz
 23542  2019  281B               	goto	u9481
 23543  201A  281C               	goto	u9480
 23544  201B                     u9481:
 23545  201B  2804               	goto	l36805
 23546  201C                     u9480:
 23547  201C  281D               	goto	l36811
 23548                           	
 23549  201D                     l29077:	
 23550                           	line	12
 23551                           	
 23552  201D                     l36811:	
 23553  201D  0826               	movf	(___wmul@product+1),w
 23554  201E  01A2               	clrf	(?___wmul+1)
 23555  201F  07A2               	addwf	(?___wmul+1)
 23556  2020  0825               	movf	(___wmul@product),w
 23557  2021  01A1               	clrf	(?___wmul)
 23558  2022  07A1               	addwf	(?___wmul)
 23559                           
 23560  2023  2824               	goto	l29078
 23561                           	
 23562  2024                     l36813:	
 23563                           	line	13
 23564                           	
 23565  2024                     l29078:	
 23566  2024  0008               	return
 23567                           	opt stack 0
 23568                           GLOBAL	__end_of___wmul
 23569  2025                     	__end_of___wmul:
 23570 ;; =============== function ___wmul ends ============
 23571                           
 23572                           	signat	___wmul,8314
 23573                           	global	___bmul
 23574                           psect	text3276,local,class=CODE,delta=2
 23575                           global __ptext3276
 23576  29DC                     __ptext3276:
 23577                           
 23578 ;; *************** function ___bmul *****************
 23579 ;; Defined at:
 23580 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;  multiplier      1    wreg     unsigned char 
 23583 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;  multiplier      1    3[BANK0 ] unsigned char 
 23586 ;;  product         1    2[BANK0 ] unsigned char 
 23587 ;; Return value:  Size  Location     Type
 23588 ;;                  1    wreg      unsigned char 
 23589 ;; Registers used:
 23590 ;;		wreg, status,2, status,0
 23591 ;; Tracked objects:
 23592 ;;		On entry : 0/0
 23593 ;;		On exit  : 0/0
 23594 ;;		Unchanged: 0/0
 23595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23596 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23600 ;;Total ram usage:        4 bytes
 23601 ;; Hardware stack levels used:    1
 23602 ;; Hardware stack levels required when called:    2
 23603 ;; This function calls:
 23604 ;;		Nothing
 23605 ;; This function is called by:
 23606 ;;		_printf
 23607 ;;		_catgenie_init
 23608 ;;		_catgenie_work
 23609 ;;		_set_pacer
 23610 ;;		_proc_line
 23611 ;;		_cmd2index
 23612 ;;		_help
 23613 ;; This function uses a non-reentrant model
 23614 ;;
 23615                           psect	text3276
 23616                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 23617                           	line	3
 23618                           	global	__size_of___bmul
 23619  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
 23620                           	
 23621  29DC                     ___bmul:	
 23622                           	opt	stack 9
 23623                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 23624                           ;___bmul@multiplier stored from wreg
 23625  29DC  0020               	movlb 0	; select bank0
 23626  29DD  00A4               	movwf	(___bmul@multiplier)
 23627                           	line	4
 23628                           	
 23629  29DE                     l36787:	
 23630  29DE  01A3               	clrf	(___bmul@product)
 23631  29DF  29E0               	goto	l36789
 23632                           	line	6
 23633                           	
 23634  29E0                     l29069:	
 23635                           	line	7
 23636                           	
 23637  29E0                     l36789:	
 23638  29E0  1C24               	btfss	(___bmul@multiplier),(0)&7
 23639  29E1  29E3               	goto	u9431
 23640  29E2  29E4               	goto	u9430
 23641  29E3                     u9431:
 23642  29E3  29E9               	goto	l36793
 23643  29E4                     u9430:
 23644                           	line	8
 23645                           	
 23646  29E4                     l36791:	
 23647  29E4  0821               	movf	(___bmul@multiplicand),w
 23648  29E5  00A2               	movwf	(??___bmul+0)+0
 23649  29E6  0822               	movf	(??___bmul+0)+0,w
 23650  29E7  07A3               	addwf	(___bmul@product),f
 23651  29E8  29E9               	goto	l36793
 23652                           	
 23653  29E9                     l29070:	
 23654                           	line	9
 23655                           	
 23656  29E9                     l36793:	
 23657  29E9  1003               	clrc
 23658  29EA  0DA1               	rlf	(___bmul@multiplicand),f
 23659                           
 23660                           	line	10
 23661                           	
 23662  29EB                     l36795:	
 23663  29EB  1003               	clrc
 23664  29EC  0CA4               	rrf	(___bmul@multiplier),f
 23665                           
 23666                           	line	11
 23667                           	
 23668  29ED                     l36797:	
 23669  29ED  08A4               	movf	(___bmul@multiplier),f
 23670  29EE  1D03               	skipz
 23671  29EF  29F1               	goto	u9441
 23672  29F0  29F2               	goto	u9440
 23673  29F1                     u9441:
 23674  29F1  29E0               	goto	l36789
 23675  29F2                     u9440:
 23676  29F2  29F3               	goto	l36799
 23677                           	
 23678  29F3                     l29071:	
 23679                           	line	12
 23680                           	
 23681  29F3                     l36799:	
 23682  29F3  0823               	movf	(___bmul@product),w
 23683  29F4  29F5               	goto	l29072
 23684                           	
 23685  29F5                     l36801:	
 23686                           	line	13
 23687                           	
 23688  29F5                     l29072:	
 23689  29F5  0008               	return
 23690                           	opt stack 0
 23691                           GLOBAL	__end_of___bmul
 23692  29F6                     	__end_of___bmul:
 23693 ;; =============== function ___bmul ends ============
 23694                           
 23695                           	signat	___bmul,8313
 23696                           	global	_isdigit
 23697                           psect	text3277,local,class=CODE,delta=2
 23698                           global __ptext3277
 23699  2994                     __ptext3277:
 23700                           
 23701 ;; *************** function _isdigit *****************
 23702 ;; Defined at:
 23703 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 23704 ;; Parameters:    Size  Location     Type
 23705 ;;  c               1    wreg     unsigned char 
 23706 ;; Auto vars:     Size  Location     Type
 23707 ;;  c               1    1[BANK0 ] unsigned char 
 23708 ;; Return value:  Size  Location     Type
 23709 ;;		None               void
 23710 ;; Registers used:
 23711 ;;		wreg, status,2, status,0
 23712 ;; Tracked objects:
 23713 ;;		On entry : 0/0
 23714 ;;		On exit  : 0/0
 23715 ;;		Unchanged: 0/0
 23716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23718 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23721 ;;Total ram usage:        2 bytes
 23722 ;; Hardware stack levels used:    1
 23723 ;; Hardware stack levels required when called:    2
 23724 ;; This function calls:
 23725 ;;		Nothing
 23726 ;; This function is called by:
 23727 ;;		_printf
 23728 ;; This function uses a non-reentrant model
 23729 ;;
 23730                           psect	text3277
 23731                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 23732                           	global	__size_of_isdigit
 23733  0016                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 23734                           	
 23735  2994                     _isdigit:	
 23736                           	opt	stack 9
 23737                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 23738                           ;isdigit@c stored from wreg
 23739  2994  0020               	movlb 0	; select bank0
 23740  2995  00A2               	movwf	(isdigit@c)
 23741                           	line	14
 23742                           	
 23743  2996                     l36775:	
 23744  2996  01A1               	clrf	(_isdigit$29792)
 23745                           	
 23746  2997                     l36777:	
 23747  2997  303A               	movlw	(03Ah)
 23748  2998  0222               	subwf	(isdigit@c),w
 23749  2999  1803               	skipnc
 23750  299A  299C               	goto	u9411
 23751  299B  299D               	goto	u9410
 23752  299C                     u9411:
 23753  299C  29A7               	goto	l36783
 23754  299D                     u9410:
 23755                           	
 23756  299D                     l36779:	
 23757  299D  3030               	movlw	(030h)
 23758  299E  0222               	subwf	(isdigit@c),w
 23759  299F  1C03               	skipc
 23760  29A0  29A2               	goto	u9421
 23761  29A1  29A3               	goto	u9420
 23762  29A2                     u9421:
 23763  29A2  29A7               	goto	l36783
 23764  29A3                     u9420:
 23765                           	
 23766  29A3                     l36781:	
 23767  29A3  01A1               	clrf	(_isdigit$29792)
 23768  29A4  1403               	bsf	status,0
 23769  29A5  0DA1               	rlf	(_isdigit$29792),f
 23770  29A6  29A7               	goto	l36783
 23771                           	
 23772  29A7                     l29044:	
 23773                           	
 23774  29A7                     l36783:	
 23775  29A7  0C21               	rrf	(_isdigit$29792),w
 23776                           	
 23777  29A8  29A9               	goto	l29045
 23778                           	
 23779  29A9                     l36785:	
 23780                           	line	15
 23781                           	
 23782  29A9                     l29045:	
 23783  29A9  0008               	return
 23784                           	opt stack 0
 23785                           GLOBAL	__end_of_isdigit
 23786  29AA                     	__end_of_isdigit:
 23787 ;; =============== function _isdigit ends ============
 23788                           
 23789                           	signat	_isdigit,4216
 23790                           	global	_strncmp
 23791                           psect	text3278,local,class=CODE,delta=2
 23792                           global __ptext3278
 23793  1000                     __ptext3278:
 23794                           
 23795 ;; *************** function _strncmp *****************
 23796 ;; Defined at:
 23797 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strncmp.c"
 23798 ;; Parameters:    Size  Location     Type
 23799 ;;  s1              1    wreg     PTR const unsigned char 
 23800 ;;		 -> linebuffer(20), 
 23801 ;;  s2              2    4[BANK0 ] PTR const unsigned char 
 23802 ;;		 -> STR_107(4), STR_106(3), commands(36), 
 23803 ;;  len             2    6[BANK0 ] unsigned int 
 23804 ;; Auto vars:     Size  Location     Type
 23805 ;;  s1              1   10[BANK0 ] PTR const unsigned char 
 23806 ;;		 -> linebuffer(20), 
 23807 ;; Return value:  Size  Location     Type
 23808 ;;                  2    4[BANK0 ] int 
 23809 ;; Registers used:
 23810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 23811 ;; Tracked objects:
 23812 ;;		On entry : 0/0
 23813 ;;		On exit  : 0/0
 23814 ;;		Unchanged: 0/0
 23815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23819 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 23820 ;;Total ram usage:        7 bytes
 23821 ;; Hardware stack levels used:    1
 23822 ;; Hardware stack levels required when called:    2
 23823 ;; This function calls:
 23824 ;;		Nothing
 23825 ;; This function is called by:
 23826 ;;		_cmd2index
 23827 ;;		_echo
 23828 ;; This function uses a non-reentrant model
 23829 ;;
 23830                           psect	text3278
 23831                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strncmp.c"
 23832                           	line	5
 23833                           	global	__size_of_strncmp
 23834  0053                     	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
 23835                           	
 23836  1000                     _strncmp:	
 23837                           	opt	stack 9
 23838                           ; Regs used in _strncmp: [wreg-status,0+pclath]
 23839                           ;strncmp@s1 stored from wreg
 23840  1000  0020               	movlb 0	; select bank0
 23841  1001  00AB               	movwf	(strncmp@s1)
 23842                           	line	6
 23843                           	
 23844  1002                     l34245:	
 23845  1002  2840               	goto	l34259
 23846                           	
 23847  1003                     l29061:	
 23848                           	line	7
 23849                           	
 23850  1003                     l34247:	
 23851  1003  082B               	movf	(strncmp@s1),w
 23852  1004  0086               	movwf	fsr1l
 23853  1005  3001               	movlw 1	; select bank2/3
 23854  1006  0087               	movwf fsr1h	
 23855                           	
 23856  1007  0801               	movf	indf1,w
 23857  1008  3A00               	xorlw	0&0ffh
 23858  1009  1903               	skipnz
 23859  100A  280C               	goto	u6021
 23860  100B  280D               	goto	u6020
 23861  100C                     u6021:
 23862  100C  281E               	goto	l34251
 23863  100D                     u6020:
 23864                           	
 23865  100D                     l34249:	
 23866  100D  0825               	movf	(strncmp@s2),w
 23867  100E  0084               	movwf	fsr0l
 23868  100F  0826               	movf	((strncmp@s2+1)),w
 23869  1010  0085               	movwf	fsr0h
 23870  1011  0800               	movf	indf0,w ;code access
 23871  1012  00A9               	movwf	(??_strncmp+0)+0
 23872  1013  082B               	movf	(strncmp@s1),w
 23873  1014  0086               	movwf	fsr1l
 23874  1015  3001               	movlw 1	; select bank2/3
 23875  1016  0087               	movwf fsr1h	
 23876                           	
 23877  1017  0801               	movf	indf1,w
 23878  1018  0629               	xorwf	(??_strncmp+0)+0,w
 23879  1019  1903               	skipnz
 23880  101A  281C               	goto	u6031
 23881  101B  281D               	goto	u6030
 23882  101C                     u6031:
 23883  101C  2837               	goto	l34255
 23884  101D                     u6030:
 23885  101D  281E               	goto	l34251
 23886                           	
 23887  101E                     l29064:	
 23888                           	line	8
 23889                           	
 23890  101E                     l34251:	
 23891  101E  0825               	movf	(strncmp@s2),w
 23892  101F  0084               	movwf	fsr0l
 23893  1020  0826               	movf	((strncmp@s2+1)),w
 23894  1021  0085               	movwf	fsr0h
 23895  1022  0800               	movf	indf0,w ;code access
 23896  1023  00A9               	movwf	(??_strncmp+0)+0
 23897  1024  01AA               	clrf	(??_strncmp+0)+0+1
 23898  1025  09A9               	comf	(??_strncmp+0)+0,f
 23899  1026  09AA               	comf	(??_strncmp+0)+1,f
 23900  1027  0AA9               	incf	(??_strncmp+0)+0,f
 23901  1028  1903               	skipnz
 23902  1029  0AAA               	incf	(??_strncmp+0)+1,f
 23903  102A  082B               	movf	(strncmp@s1),w
 23904  102B  0086               	movwf	fsr1l
 23905  102C  3001               	movlw 1	; select bank2/3
 23906  102D  0087               	movwf fsr1h	
 23907                           	
 23908  102E  0801               	movf	indf1,w
 23909  102F  0729               	addwf	0+(??_strncmp+0)+0,w
 23910  1030  00A5               	movwf	(?_strncmp)
 23911  1031  082A               	movf	1+(??_strncmp+0)+0,w
 23912  1032  1803               	skipnc
 23913  1033  0A2A               	incf	1+(??_strncmp+0)+0,w
 23914  1034  00A6               	movwf	((?_strncmp))+1
 23915  1035  2852               	goto	l29065
 23916                           	
 23917  1036                     l34253:	
 23918  1036  2852               	goto	l29065
 23919                           	
 23920  1037                     l29062:	
 23921                           	line	10
 23922                           	
 23923  1037                     l34255:	
 23924  1037  3001               	movlw	(01h)
 23925  1038  00A9               	movwf	(??_strncmp+0)+0
 23926  1039  0829               	movf	(??_strncmp+0)+0,w
 23927  103A  07AB               	addwf	(strncmp@s1),f
 23928                           	line	11
 23929                           	
 23930  103B                     l34257:	
 23931  103B  3001               	movlw	low(01h)
 23932  103C  07A5               	addwf	(strncmp@s2),f
 23933  103D  3000               	movlw	high(01h)
 23934  103E  3DA6               	addwfc	(strncmp@s2+1),f
 23935  103F  2840               	goto	l34259
 23936                           	line	12
 23937                           	
 23938  1040                     l29060:	
 23939                           	line	6
 23940                           	
 23941  1040                     l34259:	
 23942  1040  3001               	movlw	low(01h)
 23943  1041  02A7               	subwf	(strncmp@len),f
 23944  1042  3000               	movlw	high(01h)
 23945  1043  3BA8               	subwfb	(strncmp@len+1),f
 23946  1044  30FF               	movlw	high(0FFFFh)
 23947  1045  0628               	xorwf	((strncmp@len+1)),w
 23948  1046  1D03               	skipz
 23949  1047  284A               	goto	u6045
 23950  1048  30FF               	movlw	low(0FFFFh)
 23951  1049  0627               	xorwf	((strncmp@len)),w
 23952  104A                     u6045:
 23953                           
 23954  104A  1D03               	skipz
 23955  104B  284D               	goto	u6041
 23956  104C  284E               	goto	u6040
 23957  104D                     u6041:
 23958  104D  2803               	goto	l34247
 23959  104E                     u6040:
 23960  104E  284F               	goto	l34261
 23961                           	
 23962  104F                     l29066:	
 23963                           	line	13
 23964                           	
 23965  104F                     l34261:	
 23966  104F  01A5               	clrf	(?_strncmp)
 23967  1050  01A6               	clrf	(?_strncmp+1)
 23968  1051  2852               	goto	l29065
 23969                           	
 23970  1052                     l34263:	
 23971                           	line	14
 23972                           	
 23973  1052                     l29065:	
 23974  1052  0008               	return
 23975                           	opt stack 0
 23976                           GLOBAL	__end_of_strncmp
 23977  1053                     	__end_of_strncmp:
 23978 ;; =============== function _strncmp ends ============
 23979                           
 23980                           	signat	_strncmp,12410
 23981                           	global	_strlen
 23982                           psect	text3279,local,class=CODE,delta=2
 23983                           global __ptext3279
 23984  2C76                     __ptext3279:
 23985                           
 23986 ;; *************** function _strlen *****************
 23987 ;; Defined at:
 23988 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strlen.c"
 23989 ;; Parameters:    Size  Location     Type
 23990 ;;  s               1    wreg     PTR const unsigned char 
 23991 ;;		 -> linebuffer(20), 
 23992 ;; Auto vars:     Size  Location     Type
 23993 ;;  s               1    8[BANK0 ] PTR const unsigned char 
 23994 ;;		 -> linebuffer(20), 
 23995 ;;  cp              1    9[BANK0 ] PTR const unsigned char 
 23996 ;;		 -> linebuffer(20), 
 23997 ;; Return value:  Size  Location     Type
 23998 ;;                  2    0[BANK0 ] unsigned int 
 23999 ;; Registers used:
 24000 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24001 ;; Tracked objects:
 24002 ;;		On entry : 0/0
 24003 ;;		On exit  : 0/0
 24004 ;;		Unchanged: 0/0
 24005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24007 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24008 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24009 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 24010 ;;Total ram usage:       10 bytes
 24011 ;; Hardware stack levels used:    1
 24012 ;; Hardware stack levels required when called:    2
 24013 ;; This function calls:
 24014 ;;		Nothing
 24015 ;; This function is called by:
 24016 ;;		_proc_line
 24017 ;; This function uses a non-reentrant model
 24018 ;;
 24019                           psect	text3279
 24020                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strlen.c"
 24021                           	line	5
 24022                           	global	__size_of_strlen
 24023  002F                     	__size_of_strlen	equ	__end_of_strlen-_strlen
 24024                           	
 24025  2C76                     _strlen:	
 24026                           	opt	stack 10
 24027                           ; Regs used in _strlen: [wreg+fsr1l-status,0]
 24028                           ;strlen@s stored from wreg
 24029                           	line	8
 24030  2C76  0020               	movlb 0	; select bank0
 24031  2C77  00A9               	movwf	(strlen@s)
 24032                           	
 24033  2C78                     l34237:	
 24034  2C78  0829               	movf	(strlen@s),w
 24035  2C79  00A3               	movwf	(??_strlen+0)+0
 24036  2C7A  0823               	movf	(??_strlen+0)+0,w
 24037  2C7B  00AA               	movwf	(strlen@cp)
 24038                           	line	9
 24039  2C7C  2C7E               	goto	l34239
 24040                           	
 24041  2C7D                     l29055:	
 24042                           	line	10
 24043  2C7D  2C7E               	goto	l34239
 24044                           	
 24045  2C7E                     l29054:	
 24046                           	line	9
 24047                           	
 24048  2C7E                     l34239:	
 24049  2C7E  082A               	movf	(strlen@cp),w
 24050  2C7F  0086               	movwf	fsr1l
 24051  2C80  3001               	movlw 1	; select bank2/3
 24052  2C81  0087               	movwf fsr1h	
 24053                           	
 24054  2C82  3001               	movlw	01h
 24055  2C83  07AA               	addwf	(strlen@cp),f
 24056  2C84  0881               	movf	indf1,f
 24057  2C85  1D03               	skipz
 24058  2C86  2C88               	goto	u6011
 24059  2C87  2C89               	goto	u6010
 24060  2C88                     u6011:
 24061  2C88  2C7E               	goto	l34239
 24062  2C89                     u6010:
 24063  2C89  2C8A               	goto	l34241
 24064                           	
 24065  2C8A                     l29056:	
 24066                           	line	11
 24067                           	
 24068  2C8A                     l34241:	
 24069  2C8A  0829               	movf	(strlen@s),w
 24070  2C8B  00A3               	movwf	(??_strlen+0)+0
 24071  2C8C  3001               	movlw	(0x2/2)
 24072  2C8D  00A4               	movwf	(??_strlen+0)+0+1
 24073  2C8E  09A3               	comf	(??_strlen+0)+0,f
 24074  2C8F  09A4               	comf	(??_strlen+0)+1,f
 24075  2C90  0AA3               	incf	(??_strlen+0)+0,f
 24076  2C91  1903               	skipnz
 24077  2C92  0AA4               	incf	(??_strlen+0)+1,f
 24078  2C93  082A               	movf	(strlen@cp),w
 24079  2C94  00A5               	movwf	(??_strlen+2)+0
 24080  2C95  3001               	movlw	(0x2/2)
 24081  2C96  00A6               	movwf	(??_strlen+2)+0+1
 24082  2C97  0823               	movf	0+(??_strlen+0)+0,w
 24083  2C98  0725               	addwf	0+(??_strlen+2)+0,w
 24084  2C99  00A7               	movwf	(??_strlen+4)+0
 24085  2C9A  0824               	movf	1+(??_strlen+0)+0,w
 24086  2C9B  3D26               	addwfc	1+(??_strlen+2)+0,w
 24087  2C9C  00A8               	movwf	1+(??_strlen+4)+0
 24088  2C9D  0827               	movf	0+(??_strlen+4)+0,w
 24089  2C9E  3EFF               	addlw	low(-1)
 24090  2C9F  00A1               	movwf	(?_strlen)
 24091  2CA0  30FF               	movlw	high(-1)
 24092  2CA1  3D28               	addwfc	1+(??_strlen+4)+0,w
 24093  2CA2  00A2               	movwf	1+(?_strlen)
 24094  2CA3  2CA4               	goto	l29057
 24095                           	
 24096  2CA4                     l34243:	
 24097                           	line	12
 24098                           	
 24099  2CA4                     l29057:	
 24100  2CA4  0008               	return
 24101                           	opt stack 0
 24102                           GLOBAL	__end_of_strlen
 24103  2CA5                     	__end_of_strlen:
 24104 ;; =============== function _strlen ends ============
 24105                           
 24106                           	signat	_strlen,4218
 24107                           	global	_readch
 24108                           psect	text3280,local,class=CODE,delta=2
 24109                           global __ptext3280
 24110  227E                     __ptext3280:
 24111                           
 24112 ;; *************** function _readch *****************
 24113 ;; Defined at:
 24114 ;;		line 239 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24115 ;; Parameters:    Size  Location     Type
 24116 ;;  ch              1    wreg     PTR unsigned char 
 24117 ;;		 -> cmdline_work@rxd(1), 
 24118 ;; Auto vars:     Size  Location     Type
 24119 ;;  ch              1    2[BANK0 ] PTR unsigned char 
 24120 ;;		 -> cmdline_work@rxd(1), 
 24121 ;;  result          1    3[BANK0 ] unsigned char 
 24122 ;; Return value:  Size  Location     Type
 24123 ;;                  1    wreg      unsigned char 
 24124 ;; Registers used:
 24125 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24126 ;; Tracked objects:
 24127 ;;		On entry : 0/0
 24128 ;;		On exit  : 0/0
 24129 ;;		Unchanged: 0/0
 24130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24134 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24135 ;;Total ram usage:        4 bytes
 24136 ;; Hardware stack levels used:    1
 24137 ;; Hardware stack levels required when called:    2
 24138 ;; This function calls:
 24139 ;;		Nothing
 24140 ;; This function is called by:
 24141 ;;		_cmdline_work
 24142 ;; This function uses a non-reentrant model
 24143 ;;
 24144                           psect	text3280
 24145                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24146                           	line	239
 24147                           	global	__size_of_readch
 24148  006C                     	__size_of_readch	equ	__end_of_readch-_readch
 24149                           	
 24150  227E                     _readch:	
 24151                           	opt	stack 12
 24152                           ; Regs used in _readch: [wreg+fsr1l-status,0]
 24153                           ;readch@ch stored from wreg
 24154                           	line	241
 24155  227E  0020               	movlb 0	; select bank0
 24156  227F  00A3               	movwf	(readch@ch)
 24157                           	
 24158  2280                     l34209:	
 24159                           ;serial.c: 241: unsigned char result = 0;
 24160  2280  01A4               	clrf	(readch@result)
 24161                           	line	243
 24162                           ;serial.c: 243: RCIE = 0;
 24163  2281  0021               	movlb 1	; select bank1
 24164  2282  1291               	bcf	(1165/8)^080h,(1165)&7
 24165                           	line	249
 24166                           	
 24167  2283                     l34211:	
 24168                           ;serial.c: 249: if (rx.head != rx.tail) {
 24169  2283  0022               	movlb 2	; select bank2
 24170  2284  0C39               	rrf	0+(_rx)^0100h+08h,w
 24171  2285  0020               	movlb 0	; select bank0
 24172  2286  00A1               	movwf	(??_readch+0)+0
 24173  2287  0CA1               	rrf	(??_readch+0)+0,f
 24174  2288  0C21               	rrf	(??_readch+0)+0,w
 24175  2289  3907               	andlw	(1<<3)-1
 24176  228A  00A2               	movwf	(??_readch+1)+0
 24177  228B  0022               	movlb 2	; select bank2
 24178  228C  0839               	movf	0+(_rx)^0100h+08h,w
 24179  228D  3907               	andlw	(1<<3)-1
 24180  228E  0020               	movlb 0	; select bank0
 24181  228F  0622               	xorwf	(??_readch+1)+0,w
 24182  2290  1903               	skipnz
 24183  2291  2A93               	goto	u5961
 24184  2292  2A94               	goto	u5960
 24185  2293                     u5961:
 24186  2293  2AE4               	goto	l34231
 24187  2294                     u5960:
 24188                           	line	251
 24189                           	
 24190  2294                     l34213:	
 24191                           ;serial.c: 251: *ch = rx.buffer[rx.tail];
 24192  2294  0022               	movlb 2	; select bank2
 24193  2295  0C39               	rrf	0+(_rx)^0100h+08h,w
 24194  2296  0020               	movlb 0	; select bank0
 24195  2297  00A1               	movwf	(??_readch+0)+0
 24196  2298  0CA1               	rrf	(??_readch+0)+0,f
 24197  2299  0C21               	rrf	(??_readch+0)+0,w
 24198  229A  3907               	andlw	(1<<3)-1
 24199  229B  3E31               	addlw	_rx&0ffh
 24200  229C  0086               	movwf	fsr1l
 24201  229D  3001               	movlw 1	; select bank2/3
 24202  229E  0087               	movwf fsr1h	
 24203                           	
 24204  229F  0801               	movf	indf1,w
 24205  22A0  00A2               	movwf	(??_readch+1)+0
 24206  22A1  0823               	movf	(readch@ch),w
 24207  22A2  0086               	movwf	fsr1l
 24208  22A3  0187               	clrf fsr1h	
 24209                           	
 24210  22A4  0822               	movf	(??_readch+1)+0,w
 24211  22A5  0081               	movwf	indf1
 24212                           	line	253
 24213                           	
 24214  22A6                     l34215:	
 24215                           ;serial.c: 253: rx.tail++;
 24216  22A6  0022               	movlb 2	; select bank2
 24217  22A7  0C39               	rrf	0+(_rx)^0100h+08h,w
 24218  22A8  0020               	movlb 0	; select bank0
 24219  22A9  00A1               	movwf	((??_readch+0)+0)
 24220  22AA  0CA1               	rrf	((??_readch+0)+0),f
 24221  22AB  0C21               	rrf	((??_readch+0)+0),w
 24222  22AC  3907               	andlw	(1<<3)-1
 24223  22AD  00A1               	movwf	((??_readch+0)+0)
 24224  22AE  0AA1               	incf	(??_readch+0)+0
 24225  22AF  0DA1               	rlf	((??_readch+0)+0),f
 24226  22B0  0DA1               	rlf	((??_readch+0)+0),f
 24227  22B1  0DA1               	rlf	((??_readch+0)+0),f
 24228  22B2  0022               	movlb 2	; select bank2
 24229  22B3  0839               	movf	0+(_rx)^0100h+08h,w
 24230  22B4  0020               	movlb 0	; select bank0
 24231  22B5  0621               	xorwf	((??_readch+0)+0),w
 24232  22B6  39C7               	andlw	not (((1<<3)-1)<<3)
 24233  22B7  0621               	xorwf	((??_readch+0)+0),w
 24234  22B8  0022               	movlb 2	; select bank2
 24235  22B9  00B9               	movwf	0+(_rx)^0100h+08h
 24236                           	line	257
 24237                           	
 24238  22BA                     l34217:	
 24239                           ;serial.c: 255: if (rx.xon_enabled &&
 24240                           ;serial.c: 256: !rx.xon_state &&
 24241                           ;serial.c: 257: (rx.head == rx.tail)) {
 24242  22BA  1F39               	btfss	0+(_rx)^0100h+08h,6
 24243  22BB  2ABD               	goto	u5971
 24244  22BC  2ABE               	goto	u5970
 24245  22BD                     u5971:
 24246  22BD  2ADF               	goto	l34229
 24247  22BE                     u5970:
 24248                           	
 24249  22BE                     l34219:	
 24250  22BE  1BB9               	btfsc	0+(_rx)^0100h+08h,7
 24251  22BF  2AC1               	goto	u5981
 24252  22C0  2AC2               	goto	u5980
 24253  22C1                     u5981:
 24254  22C1  2ADF               	goto	l34229
 24255  22C2                     u5980:
 24256                           	
 24257  22C2                     l34221:	
 24258  22C2  0C39               	rrf	0+(_rx)^0100h+08h,w
 24259  22C3  0020               	movlb 0	; select bank0
 24260  22C4  00A1               	movwf	(??_readch+0)+0
 24261  22C5  0CA1               	rrf	(??_readch+0)+0,f
 24262  22C6  0C21               	rrf	(??_readch+0)+0,w
 24263  22C7  3907               	andlw	(1<<3)-1
 24264  22C8  00A2               	movwf	(??_readch+1)+0
 24265  22C9  0022               	movlb 2	; select bank2
 24266  22CA  0839               	movf	0+(_rx)^0100h+08h,w
 24267  22CB  3907               	andlw	(1<<3)-1
 24268  22CC  0020               	movlb 0	; select bank0
 24269  22CD  0622               	xorwf	(??_readch+1)+0,w
 24270  22CE  1D03               	skipz
 24271  22CF  2AD1               	goto	u5991
 24272  22D0  2AD2               	goto	u5990
 24273  22D1                     u5991:
 24274  22D1  2ADF               	goto	l34229
 24275  22D2                     u5990:
 24276  22D2  2AD4               	goto	l19307
 24277                           	line	258
 24278                           	
 24279  22D3                     l34223:	
 24280                           ;serial.c: 258: while(!TXIF);
 24281  22D3  2AD4               	goto	l19307
 24282                           	
 24283  22D4                     l19308:	
 24284                           	
 24285  22D4                     l19307:	
 24286  22D4  1E11               	btfss	(140/8),(140)&7
 24287  22D5  2AD7               	goto	u6001
 24288  22D6  2AD8               	goto	u6000
 24289  22D7                     u6001:
 24290  22D7  2AD4               	goto	l19307
 24291  22D8                     u6000:
 24292  22D8  2AD9               	goto	l34225
 24293                           	
 24294  22D9                     l19309:	
 24295                           	line	259
 24296                           	
 24297  22D9                     l34225:	
 24298                           ;serial.c: 259: TXREG = 0x11;
 24299  22D9  3011               	movlw	(011h)
 24300  22DA  0023               	movlb 3	; select bank3
 24301  22DB  009A               	movwf	(410)^0180h	;volatile
 24302                           	line	260
 24303                           	
 24304  22DC                     l34227:	
 24305                           ;serial.c: 260: rx.xon_state = 1;
 24306  22DC  0022               	movlb 2	; select bank2
 24307  22DD  17B9               	bsf	0+(_rx)^0100h+08h,7
 24308  22DE  2ADF               	goto	l34229
 24309                           	line	261
 24310                           	
 24311  22DF                     l19306:	
 24312                           	line	262
 24313                           	
 24314  22DF                     l34229:	
 24315                           ;serial.c: 261: }
 24316                           ;serial.c: 262: result = 1;
 24317  22DF  0020               	movlb 0	; select bank0
 24318  22E0  01A4               	clrf	(readch@result)
 24319  22E1  1403               	bsf	status,0
 24320  22E2  0DA4               	rlf	(readch@result),f
 24321  22E3  2AE4               	goto	l34231
 24322                           	line	263
 24323                           	
 24324  22E4                     l19305:	
 24325                           	line	265
 24326                           	
 24327  22E4                     l34231:	
 24328                           ;serial.c: 263: }
 24329                           ;serial.c: 265: RCIE = 1;
 24330  22E4  0021               	movlb 1	; select bank1
 24331  22E5  1691               	bsf	(1165/8)^080h,(1165)&7
 24332                           	line	271
 24333                           	
 24334  22E6                     l34233:	
 24335                           ;serial.c: 271: return result;
 24336  22E6  0020               	movlb 0	; select bank0
 24337  22E7  0824               	movf	(readch@result),w
 24338  22E8  2AE9               	goto	l19310
 24339                           	
 24340  22E9                     l34235:	
 24341                           	line	294
 24342                           	
 24343  22E9                     l19310:	
 24344  22E9  0008               	return
 24345                           	opt stack 0
 24346                           GLOBAL	__end_of_readch
 24347  22EA                     	__end_of_readch:
 24348 ;; =============== function _readch ends ============
 24349                           
 24350                           	signat	_readch,4217
 24351                           	global	_putch
 24352                           psect	text3281,local,class=CODE,delta=2
 24353                           global __ptext3281
 24354  2BC0                     __ptext3281:
 24355                           
 24356 ;; *************** function _putch *****************
 24357 ;; Defined at:
 24358 ;;		line 187 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24359 ;; Parameters:    Size  Location     Type
 24360 ;;  ch              1    wreg     unsigned char 
 24361 ;; Auto vars:     Size  Location     Type
 24362 ;;  ch              1    1[BANK0 ] unsigned char 
 24363 ;;  dummy           1    2[BANK0 ] volatile unsigned char 
 24364 ;; Return value:  Size  Location     Type
 24365 ;;		None               void
 24366 ;; Registers used:
 24367 ;;		wreg
 24368 ;; Tracked objects:
 24369 ;;		On entry : 0/0
 24370 ;;		On exit  : 0/0
 24371 ;;		Unchanged: 0/0
 24372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24376 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 24377 ;;Total ram usage:        3 bytes
 24378 ;; Hardware stack levels used:    1
 24379 ;; Hardware stack levels required when called:    2
 24380 ;; This function calls:
 24381 ;;		Nothing
 24382 ;; This function is called by:
 24383 ;;		_cmdline_work
 24384 ;;		_proc_char
 24385 ;;		_printf
 24386 ;; This function uses a non-reentrant model
 24387 ;;
 24388                           psect	text3281
 24389                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24390                           	line	187
 24391                           	global	__size_of_putch
 24392  002D                     	__size_of_putch	equ	__end_of_putch-_putch
 24393                           	
 24394  2BC0                     _putch:	
 24395                           	opt	stack 9
 24396                           ; Regs used in _putch: [wreg]
 24397                           ;putch@ch stored from wreg
 24398                           	line	213
 24399  2BC0  0020               	movlb 0	; select bank0
 24400  2BC1  00A2               	movwf	(putch@ch)
 24401                           	
 24402  2BC2                     l36735:	
 24403                           ;serial.c: 213: if (!SPEN)
 24404  2BC2  0023               	movlb 3	; select bank3
 24405  2BC3  1B9D               	btfsc	(3311/8)^0180h,(3311)&7
 24406  2BC4  2BC6               	goto	u9341
 24407  2BC5  2BC7               	goto	u9340
 24408  2BC6                     u9341:
 24409  2BC6  2BE2               	goto	l36749
 24410  2BC7                     u9340:
 24411  2BC7  2BEC               	goto	l19297
 24412                           	line	214
 24413                           	
 24414  2BC8                     l36737:	
 24415                           ;serial.c: 214: return;
 24416  2BC8  2BEC               	goto	l19297
 24417                           	
 24418  2BC9                     l19296:	
 24419                           	line	215
 24420                           ;serial.c: 215: while(!TXIF) {
 24421  2BC9  2BE2               	goto	l36749
 24422                           	
 24423  2BCA                     l19299:	
 24424                           	line	216
 24425                           ;serial.c: 216: if (OERR) {
 24426  2BCA  0023               	movlb 3	; select bank3
 24427  2BCB  1C9D               	btfss	(3305/8)^0180h,(3305)&7
 24428  2BCC  2BCE               	goto	u9351
 24429  2BCD  2BCF               	goto	u9350
 24430  2BCE                     u9351:
 24431  2BCE  2BD3               	goto	l19300
 24432  2BCF                     u9350:
 24433                           	line	217
 24434                           	
 24435  2BCF                     l36739:	
 24436                           ;serial.c: 217: TXEN = 0;
 24437  2BCF  129E               	bcf	(3317/8)^0180h,(3317)&7
 24438                           	line	218
 24439                           ;serial.c: 218: TXEN = 1;
 24440  2BD0  169E               	bsf	(3317/8)^0180h,(3317)&7
 24441                           	line	219
 24442                           ;serial.c: 219: CREN = 0;
 24443  2BD1  121D               	bcf	(3308/8)^0180h,(3308)&7
 24444                           	line	220
 24445                           ;serial.c: 220: CREN = 1;
 24446  2BD2  161D               	bsf	(3308/8)^0180h,(3308)&7
 24447                           	line	221
 24448                           	
 24449  2BD3                     l19300:	
 24450                           	line	222
 24451                           ;serial.c: 221: }
 24452                           ;serial.c: 222: if (FERR) {
 24453  2BD3  1D1D               	btfss	(3306/8)^0180h,(3306)&7
 24454  2BD4  2BD6               	goto	u9361
 24455  2BD5  2BD7               	goto	u9360
 24456  2BD6                     u9361:
 24457  2BD6  2BE0               	goto	l36747
 24458  2BD7                     u9360:
 24459                           	line	225
 24460                           	
 24461  2BD7                     l36741:	
 24462                           ;serial.c: 223: volatile unsigned char dummy;
 24463                           ;serial.c: 225: dummy = RCREG;
 24464  2BD7  0819               	movf	(409)^0180h,w	;volatile
 24465  2BD8  0020               	movlb 0	; select bank0
 24466  2BD9  00A1               	movwf	(??_putch+0)+0
 24467  2BDA  0821               	movf	(??_putch+0)+0,w
 24468  2BDB  00A3               	movwf	(putch@dummy)	;volatile
 24469                           	line	226
 24470                           	
 24471  2BDC                     l36743:	
 24472                           ;serial.c: 226: TXEN = 0;
 24473  2BDC  0023               	movlb 3	; select bank3
 24474  2BDD  129E               	bcf	(3317/8)^0180h,(3317)&7
 24475                           	line	227
 24476                           	
 24477  2BDE                     l36745:	
 24478                           ;serial.c: 227: TXEN = 1;
 24479  2BDE  169E               	bsf	(3317/8)^0180h,(3317)&7
 24480  2BDF  2BE0               	goto	l36747
 24481                           	line	228
 24482                           	
 24483  2BE0                     l19301:	
 24484                           	line	229
 24485                           	
 24486  2BE0                     l36747:	
 24487                           # 229 "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24488  2BE0  0064               clrwdt ;#
 24489                           psect	text3281
 24490  2BE1  2BE2               	goto	l36749
 24491                           	line	230
 24492                           	
 24493  2BE2                     l19298:	
 24494                           	line	215
 24495                           	
 24496  2BE2                     l36749:	
 24497  2BE2  0020               	movlb 0	; select bank0
 24498  2BE3  1E11               	btfss	(140/8),(140)&7
 24499  2BE4  2BE6               	goto	u9371
 24500  2BE5  2BE7               	goto	u9370
 24501  2BE6                     u9371:
 24502  2BE6  2BCA               	goto	l19299
 24503  2BE7                     u9370:
 24504  2BE7  2BE8               	goto	l36751
 24505                           	
 24506  2BE8                     l19302:	
 24507                           	line	231
 24508                           	
 24509  2BE8                     l36751:	
 24510                           ;serial.c: 230: }
 24511                           ;serial.c: 231: TXREG = ch;
 24512  2BE8  0822               	movf	(putch@ch),w
 24513  2BE9  0023               	movlb 3	; select bank3
 24514  2BEA  009A               	movwf	(410)^0180h	;volatile
 24515                           	line	232
 24516                           	
 24517  2BEB                     l36753:	
 24518                           # 232 "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 24519  2BEB  0064               clrwdt ;#
 24520                           psect	text3281
 24521                           	line	234
 24522                           	
 24523  2BEC                     l19297:	
 24524  2BEC  0008               	return
 24525                           	opt stack 0
 24526                           GLOBAL	__end_of_putch
 24527  2BED                     	__end_of_putch:
 24528 ;; =============== function _putch ends ============
 24529                           
 24530                           	signat	_putch,4216
 24531                           	global	_postponetimeout
 24532                           psect	text3282,local,class=CODE,delta=2
 24533                           global __ptext3282
 24534  2F47                     __ptext3282:
 24535                           
 24536 ;; *************** function _postponetimeout *****************
 24537 ;; Defined at:
 24538 ;;		line 114 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 24539 ;; Parameters:    Size  Location     Type
 24540 ;;  timer_p         2    0[BANK0 ] const PTR struct timer
 24541 ;;		 -> second(6), autotimer(6), 
 24542 ;;  postpone        4    2[BANK0 ] const unsigned long 
 24543 ;; Auto vars:     Size  Location     Type
 24544 ;;  tempLongTick    4   10[BANK0 ] unsigned long 
 24545 ;;  longshort       2   14[BANK0 ] PTR struct longshort
 24546 ;;		 -> second(6), autotimer(6), 
 24547 ;; Return value:  Size  Location     Type
 24548 ;;		None               void
 24549 ;; Registers used:
 24550 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24551 ;; Tracked objects:
 24552 ;;		On entry : 0/0
 24553 ;;		On exit  : 0/0
 24554 ;;		Unchanged: 0/0
 24555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24556 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24557 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24558 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24559 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 24560 ;;Total ram usage:       16 bytes
 24561 ;; Hardware stack levels used:    1
 24562 ;; Hardware stack levels required when called:    2
 24563 ;; This function calls:
 24564 ;;		Nothing
 24565 ;; This function is called by:
 24566 ;;		_update_autotimer
 24567 ;;		_rtc_work
 24568 ;; This function uses a non-reentrant model
 24569 ;;
 24570                           psect	text3282
 24571                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 24572                           	line	114
 24573                           	global	__size_of_postponetimeout
 24574  005B                     	__size_of_postponetimeout	equ	__end_of_postponetimeout-_postponetimeout
 24575                           	
 24576  2F47                     _postponetimeout:	
 24577                           	opt	stack 9
 24578                           ; Regs used in _postponetimeout: [wreg+fsr1l-status,0]
 24579                           	line	116
 24580                           	
 24581  2F47                     l34179:	
 24582                           ;timer.c: 115: unsigned long tempLongTicks;
 24583                           ;timer.c: 116: struct longshort *longshort = (struct longshort*)timer_p;
 24584  2F47  0020               	movlb 0	; select bank0
 24585  2F48  0822               	movf	(postponetimeout@timer_p+1),w
 24586  2F49  01B0               	clrf	(postponetimeout@longshort+1)
 24587  2F4A  07B0               	addwf	(postponetimeout@longshort+1)
 24588  2F4B  0821               	movf	(postponetimeout@timer_p),w
 24589  2F4C  01AF               	clrf	(postponetimeout@longshort)
 24590  2F4D  07AF               	addwf	(postponetimeout@longshort)
 24591                           
 24592                           	line	119
 24593                           	
 24594  2F4E                     l34181:	
 24595                           ;timer.c: 119: if (!postpone)
 24596  2F4E  0826               	movf	(postponetimeout@postpone+3),w
 24597  2F4F  0425               	iorwf	(postponetimeout@postpone+2),w
 24598  2F50  0424               	iorwf	(postponetimeout@postpone+1),w
 24599  2F51  0423               	iorwf	(postponetimeout@postpone),w
 24600  2F52  1D03               	skipz
 24601  2F53  2F55               	goto	u5901
 24602  2F54  2F56               	goto	u5900
 24603  2F55                     u5901:
 24604  2F55  2F58               	goto	l34185
 24605  2F56                     u5900:
 24606  2F56  2FA1               	goto	l21350
 24607                           	line	120
 24608                           	
 24609  2F57                     l34183:	
 24610                           ;timer.c: 120: return;
 24611  2F57  2FA1               	goto	l21350
 24612                           	
 24613  2F58                     l21349:	
 24614                           	line	123
 24615                           	
 24616  2F58                     l34185:	
 24617                           ;timer.c: 123: tempLongTicks = longshort->ls_longTicks;
 24618  2F58  082F               	movf	(postponetimeout@longshort),w
 24619  2F59  0086               	movwf	fsr1l
 24620  2F5A  0830               	movf	(postponetimeout@longshort+1),w
 24621  2F5B  0087               	movwf	fsr1h
 24622                           
 24623  2F5C  3F40               	moviw	[0]fsr1
 24624  2F5D  00AB               	movwf	(postponetimeout@tempLongTicks)
 24625  2F5E  3F41               	moviw	[1]fsr1
 24626  2F5F  00AC               	movwf	(postponetimeout@tempLongTicks+1)
 24627  2F60  3F42               	moviw	[2]fsr1
 24628  2F61  00AD               	movwf	(postponetimeout@tempLongTicks+2)
 24629  2F62  3F43               	moviw	[3]fsr1
 24630  2F63  00AE               	movwf	(postponetimeout@tempLongTicks+3)
 24631                           	line	126
 24632                           ;timer.c: 126: longshort->ls_longTicks += postpone;
 24633  2F64  082F               	movf	(postponetimeout@longshort),w
 24634  2F65  0086               	movwf	fsr1l
 24635  2F66  0830               	movf	(postponetimeout@longshort+1),w
 24636  2F67  0087               	movwf	fsr1h
 24637                           
 24638  2F68  0823               	movf	(postponetimeout@postpone),w
 24639  2F69  0781               	addwf	indf1,f
 24640  2F6A  3141               	addfsr	fsr1,1
 24641  2F6B  0824               	movf	(postponetimeout@postpone+1),w
 24642  2F6C  3D81               	addwfc	indf1,f
 24643  2F6D  3141               	addfsr	fsr1,1
 24644  2F6E  0825               	movf	(postponetimeout@postpone+2),w
 24645  2F6F  3D81               	addwfc	indf1,f
 24646  2F70  3141               	addfsr	fsr1,1
 24647  2F71  0826               	movf	(postponetimeout@postpone+3),w
 24648  2F72  3D81               	addwfc	indf1,f
 24649                           
 24650                           	line	129
 24651                           ;timer.c: 129: if (longshort->ls_longTicks <= tempLongTicks)
 24652  2F73  082F               	movf	(postponetimeout@longshort),w
 24653  2F74  0086               	movwf	fsr1l
 24654  2F75  0830               	movf	(postponetimeout@longshort+1),w
 24655  2F76  0087               	movwf	fsr1h
 24656                           
 24657  2F77  3F40               	moviw	[0]fsr1
 24658  2F78  00A7               	movwf	((??_postponetimeout+0)+0+0)
 24659  2F79  3F41               	moviw	[1]fsr1
 24660  2F7A  00A8               	movwf	((??_postponetimeout+0)+0+1)
 24661  2F7B  3F42               	moviw	[2]fsr1
 24662  2F7C  00A9               	movwf	((??_postponetimeout+0)+0+2)
 24663  2F7D  3F43               	moviw	[3]fsr1
 24664  2F7E  00AA               	movwf	((??_postponetimeout+0)+0+3)
 24665  2F7F  082A               	movf	3+(??_postponetimeout+0)+0,w
 24666  2F80  022E               	subwf	(postponetimeout@tempLongTicks+3),w
 24667  2F81  1D03               	skipz
 24668  2F82  2F8D               	goto	u5915
 24669  2F83  0829               	movf	2+(??_postponetimeout+0)+0,w
 24670  2F84  022D               	subwf	(postponetimeout@tempLongTicks+2),w
 24671  2F85  1D03               	skipz
 24672  2F86  2F8D               	goto	u5915
 24673  2F87  0828               	movf	1+(??_postponetimeout+0)+0,w
 24674  2F88  022C               	subwf	(postponetimeout@tempLongTicks+1),w
 24675  2F89  1D03               	skipz
 24676  2F8A  2F8D               	goto	u5915
 24677  2F8B  0827               	movf	0+(??_postponetimeout+0)+0,w
 24678  2F8C  022B               	subwf	(postponetimeout@tempLongTicks),w
 24679  2F8D                     u5915:
 24680  2F8D  1C03               	skipc
 24681  2F8E  2F90               	goto	u5911
 24682  2F8F  2F91               	goto	u5910
 24683  2F90                     u5911:
 24684  2F90  2FA1               	goto	l21350
 24685  2F91                     u5910:
 24686                           	line	130
 24687                           	
 24688  2F91                     l34187:	
 24689                           ;timer.c: 130: longshort->ms_shortTicks++;
 24690  2F91  082F               	movf	(postponetimeout@longshort),w
 24691  2F92  3E04               	addlw	low(04h)
 24692  2F93  00A7               	movwf	(??_postponetimeout+0)+0
 24693  2F94  3000               	movlw	high(04h)
 24694  2F95  3D30               	addwfc	(postponetimeout@longshort+1),w
 24695  2F96  00A8               	movwf	1+(??_postponetimeout+0)+0
 24696  2F97  0827               	movf	0+(??_postponetimeout+0)+0,w
 24697  2F98  0086               	movwf	fsr1l
 24698  2F99  0828               	movf	1+(??_postponetimeout+0)+0,w
 24699  2F9A  0087               	movwf	fsr1h
 24700                           
 24701  2F9B  3001               	movlw	01h
 24702  2F9C  0781               	addwf	indf1,f
 24703  2F9D  3141               	addfsr	fsr1,1
 24704  2F9E  1803               	skipnc
 24705  2F9F  0A81               	incf	indf1,f
 24706  2FA0  2FA1               	goto	l21350
 24707                           	
 24708  2FA1                     l21351:	
 24709                           	line	131
 24710                           	
 24711  2FA1                     l21350:	
 24712  2FA1  0008               	return
 24713                           	opt stack 0
 24714                           GLOBAL	__end_of_postponetimeout
 24715  2FA2                     	__end_of_postponetimeout:
 24716 ;; =============== function _postponetimeout ends ============
 24717                           
 24718                           	signat	_postponetimeout,8312
 24719                           	global	_set_LED
 24720                           psect	text3283,local,class=CODE,delta=2
 24721                           global __ptext3283
 24722  2E51                     __ptext3283:
 24723                           
 24724 ;; *************** function _set_LED *****************
 24725 ;; Defined at:
 24726 ;;		line 288 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 24727 ;; Parameters:    Size  Location     Type
 24728 ;;  led             1    wreg     unsigned char 
 24729 ;;  on              1    0[BANK0 ] unsigned char 
 24730 ;; Auto vars:     Size  Location     Type
 24731 ;;  led             1    2[BANK0 ] unsigned char 
 24732 ;;  mask            1    4[BANK0 ] unsigned char 
 24733 ;;  latch           1    3[BANK0 ] PTR volatile unsigned ch
 24734 ;;		 -> LATA(1), LATC(1), 
 24735 ;; Return value:  Size  Location     Type
 24736 ;;		None               void
 24737 ;; Registers used:
 24738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 24739 ;; Tracked objects:
 24740 ;;		On entry : 0/0
 24741 ;;		On exit  : 0/0
 24742 ;;		Unchanged: 0/0
 24743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24744 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24745 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 24746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24747 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 24748 ;;Total ram usage:        5 bytes
 24749 ;; Hardware stack levels used:    1
 24750 ;; Hardware stack levels required when called:    2
 24751 ;; This function calls:
 24752 ;;		Nothing
 24753 ;; This function is called by:
 24754 ;;		_update_display
 24755 ;; This function uses a non-reentrant model
 24756 ;;
 24757                           psect	text3283
 24758                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 24759                           	line	288
 24760                           	global	__size_of_set_LED
 24761  004E                     	__size_of_set_LED	equ	__end_of_set_LED-_set_LED
 24762                           	
 24763  2E51                     _set_LED:	
 24764                           	opt	stack 11
 24765                           ; Regs used in _set_LED: [wreg-status,0]
 24766                           ;set_LED@led stored from wreg
 24767  2E51  0020               	movlb 0	; select bank0
 24768  2E52  00A3               	movwf	(set_LED@led)
 24769                           	line	291
 24770                           	
 24771  2E53                     l34159:	
 24772                           ;catgenie120.c: 289: volatile unsigned char *latch;
 24773                           ;catgenie120.c: 290: unsigned char mask;
 24774                           ;catgenie120.c: 291: switch(led) {
 24775  2E53  2E7A               	goto	l34171
 24776                           	line	292
 24777                           ;catgenie120.c: 292: case 1:
 24778                           	
 24779  2E54                     l10887:	
 24780                           	line	293
 24781                           	
 24782  2E54                     l34161:	
 24783                           ;catgenie120.c: 293: latch = &LATC;
 24784  2E54  300E               	movlw	(270)&0ffh
 24785  2E55  00A2               	movwf	(??_set_LED+0)+0
 24786  2E56  0822               	movf	(??_set_LED+0)+0,w
 24787  2E57  00A4               	movwf	(set_LED@latch)
 24788                           	line	294
 24789                           ;catgenie120.c: 294: mask = (1U << (5));
 24790  2E58  3020               	movlw	(020h)
 24791  2E59  00A2               	movwf	(??_set_LED+0)+0
 24792  2E5A  0822               	movf	(??_set_LED+0)+0,w
 24793  2E5B  00A5               	movwf	(set_LED@mask)
 24794                           	line	295
 24795                           ;catgenie120.c: 295: break;
 24796  2E5C  2E88               	goto	l34173
 24797                           	line	296
 24798                           ;catgenie120.c: 296: case 2:
 24799                           	
 24800  2E5D                     l10889:	
 24801                           	line	297
 24802                           	
 24803  2E5D                     l34163:	
 24804                           ;catgenie120.c: 297: latch = &LATA;
 24805  2E5D  300C               	movlw	(268)&0ffh
 24806  2E5E  00A2               	movwf	(??_set_LED+0)+0
 24807  2E5F  0822               	movf	(??_set_LED+0)+0,w
 24808  2E60  00A4               	movwf	(set_LED@latch)
 24809                           	line	298
 24810                           ;catgenie120.c: 298: mask = (1U << (2));
 24811  2E61  3004               	movlw	(04h)
 24812  2E62  00A2               	movwf	(??_set_LED+0)+0
 24813  2E63  0822               	movf	(??_set_LED+0)+0,w
 24814  2E64  00A5               	movwf	(set_LED@mask)
 24815                           	line	299
 24816                           ;catgenie120.c: 299: break;
 24817  2E65  2E88               	goto	l34173
 24818                           	line	300
 24819                           ;catgenie120.c: 300: case 3:
 24820                           	
 24821  2E66                     l10890:	
 24822                           	line	301
 24823                           	
 24824  2E66                     l34165:	
 24825                           ;catgenie120.c: 301: latch = &LATA;
 24826  2E66  300C               	movlw	(268)&0ffh
 24827  2E67  00A2               	movwf	(??_set_LED+0)+0
 24828  2E68  0822               	movf	(??_set_LED+0)+0,w
 24829  2E69  00A4               	movwf	(set_LED@latch)
 24830                           	line	302
 24831                           ;catgenie120.c: 302: mask = (1U << (3));
 24832  2E6A  3008               	movlw	(08h)
 24833  2E6B  00A2               	movwf	(??_set_LED+0)+0
 24834  2E6C  0822               	movf	(??_set_LED+0)+0,w
 24835  2E6D  00A5               	movwf	(set_LED@mask)
 24836                           	line	303
 24837                           ;catgenie120.c: 303: break;
 24838  2E6E  2E88               	goto	l34173
 24839                           	line	304
 24840                           ;catgenie120.c: 304: case 4:
 24841                           	
 24842  2E6F                     l10891:	
 24843                           	line	305
 24844                           	
 24845  2E6F                     l34167:	
 24846                           ;catgenie120.c: 305: latch = &LATA;
 24847  2E6F  300C               	movlw	(268)&0ffh
 24848  2E70  00A2               	movwf	(??_set_LED+0)+0
 24849  2E71  0822               	movf	(??_set_LED+0)+0,w
 24850  2E72  00A4               	movwf	(set_LED@latch)
 24851                           	line	306
 24852                           ;catgenie120.c: 306: mask = (1U << (5));
 24853  2E73  3020               	movlw	(020h)
 24854  2E74  00A2               	movwf	(??_set_LED+0)+0
 24855  2E75  0822               	movf	(??_set_LED+0)+0,w
 24856  2E76  00A5               	movwf	(set_LED@mask)
 24857                           	line	307
 24858                           ;catgenie120.c: 307: break;
 24859  2E77  2E88               	goto	l34173
 24860                           	line	308
 24861                           ;catgenie120.c: 308: default:
 24862                           	
 24863  2E78                     l10892:	
 24864                           	line	309
 24865                           ;catgenie120.c: 309: return;
 24866  2E78  2E9E               	goto	l10893
 24867                           	line	310
 24868                           	
 24869  2E79                     l34169:	
 24870                           ;catgenie120.c: 310: }
 24871  2E79  2E88               	goto	l34173
 24872                           	line	291
 24873                           	
 24874  2E7A                     l10886:	
 24875                           	
 24876  2E7A                     l34171:	
 24877  2E7A  0823               	movf	(set_LED@led),w
 24878                           	; Switch size 1, requested type "space"
 24879                           ; Number of cases is 4, Range of values is 1 to 4
 24880                           ; switch strategies available:
 24881                           ; Name         Instructions Cycles
 24882                           ; simple_byte           13     7 (average)
 24883                           ; direct_byte           17     9 (fixed)
 24884                           ; jumptable            263     9 (fixed)
 24885                           ;	Chosen strategy is simple_byte
 24886                           
 24887                           	opt asmopt_off
 24888  2E7B  3A01               	xorlw	1^0	; case 1
 24889  2E7C  1903               	skipnz
 24890  2E7D  2E54               	goto	l34161
 24891  2E7E  3A03               	xorlw	2^1	; case 2
 24892  2E7F  1903               	skipnz
 24893  2E80  2E5D               	goto	l34163
 24894  2E81  3A01               	xorlw	3^2	; case 3
 24895  2E82  1903               	skipnz
 24896  2E83  2E66               	goto	l34165
 24897  2E84  3A07               	xorlw	4^3	; case 4
 24898  2E85  1903               	skipnz
 24899  2E86  2E6F               	goto	l34167
 24900  2E87  2E9E               	goto	l10893
 24901                           	opt asmopt_on
 24902                           
 24903                           	line	310
 24904                           	
 24905  2E88                     l10888:	
 24906                           	line	311
 24907                           	
 24908  2E88                     l34173:	
 24909                           ;catgenie120.c: 311: if (on)
 24910  2E88  0821               	movf	(set_LED@on),w
 24911  2E89  1D03               	skipz
 24912  2E8A  2E8C               	goto	u5890
 24913  2E8B  2E95               	goto	l34177
 24914  2E8C                     u5890:
 24915                           	line	312
 24916                           	
 24917  2E8C                     l34175:	
 24918                           ;catgenie120.c: 312: *latch |= mask;
 24919  2E8C  0825               	movf	(set_LED@mask),w
 24920  2E8D  00A2               	movwf	(??_set_LED+0)+0
 24921  2E8E  0824               	movf	(set_LED@latch),w
 24922  2E8F  0086               	movwf	fsr1l
 24923  2E90  3001               	movlw 1	; select bank2/3
 24924  2E91  0087               	movwf fsr1h	
 24925                           	
 24926  2E92  0822               	movf	(??_set_LED+0)+0,w
 24927  2E93  0481               	iorwf	indf1,f
 24928  2E94  2E9E               	goto	l10893
 24929                           	line	313
 24930                           	
 24931  2E95                     l10894:	
 24932                           	line	314
 24933                           	
 24934  2E95                     l34177:	
 24935                           ;catgenie120.c: 313: else
 24936                           ;catgenie120.c: 314: *latch &= ~mask;
 24937  2E95  0925               	comf	(set_LED@mask),w
 24938  2E96  00A2               	movwf	(??_set_LED+0)+0
 24939  2E97  0824               	movf	(set_LED@latch),w
 24940  2E98  0086               	movwf	fsr1l
 24941  2E99  3001               	movlw 1	; select bank2/3
 24942  2E9A  0087               	movwf fsr1h	
 24943                           	
 24944  2E9B  0822               	movf	(??_set_LED+0)+0,w
 24945  2E9C  0581               	andwf	indf1,f
 24946  2E9D  2E9E               	goto	l10893
 24947                           	
 24948  2E9E                     l10895:	
 24949                           	line	315
 24950                           	
 24951  2E9E                     l10893:	
 24952  2E9E  0008               	return
 24953                           	opt stack 0
 24954                           GLOBAL	__end_of_set_LED
 24955  2E9F                     	__end_of_set_LED:
 24956 ;; =============== function _set_LED ends ============
 24957                           
 24958                           	signat	_set_LED,8312
 24959                           	global	_setup_long
 24960                           psect	text3284,local,class=CODE,delta=2
 24961                           global __ptext3284
 24962  01FF                     __ptext3284:
 24963                           
 24964 ;; *************** function _setup_long *****************
 24965 ;; Defined at:
 24966 ;;		line 559 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 24967 ;; Parameters:    Size  Location     Type
 24968 ;;		None
 24969 ;; Auto vars:     Size  Location     Type
 24970 ;;		None
 24971 ;; Return value:  Size  Location     Type
 24972 ;;		None               void
 24973 ;; Registers used:
 24974 ;;		None
 24975 ;; Tracked objects:
 24976 ;;		On entry : 0/0
 24977 ;;		On exit  : 0/0
 24978 ;;		Unchanged: 0/0
 24979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24984 ;;Total ram usage:        0 bytes
 24985 ;; Hardware stack levels used:    1
 24986 ;; Hardware stack levels required when called:    2
 24987 ;; This function calls:
 24988 ;;		Nothing
 24989 ;; This function is called by:
 24990 ;;		_userinterface_work
 24991 ;; This function uses a non-reentrant model
 24992 ;;
 24993                           psect	text3284
 24994                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 24995                           	line	559
 24996                           	global	__size_of_setup_long
 24997  0001                     	__size_of_setup_long	equ	__end_of_setup_long-_setup_long
 24998                           	
 24999  01FF                     _setup_long:	
 25000                           	opt	stack 12
 25001                           ; Regs used in _setup_long: []
 25002                           	line	560
 25003                           	
 25004  01FF                     l8785:	
 25005  01FF  0008               	return
 25006                           	opt stack 0
 25007                           GLOBAL	__end_of_setup_long
 25008  0200                     	__end_of_setup_long:
 25009 ;; =============== function _setup_long ends ============
 25010                           
 25011                           	signat	_setup_long,88
 25012                           	global	_timeoutnow
 25013                           psect	text3285,local,class=CODE,delta=2
 25014                           global __ptext3285
 25015  2A48                     __ptext3285:
 25016                           
 25017 ;; *************** function _timeoutnow *****************
 25018 ;; Defined at:
 25019 ;;		line 142 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25020 ;; Parameters:    Size  Location     Type
 25021 ;;  timer_p         2    4[BANK0 ] const PTR struct timer
 25022 ;;		 -> pacers(55), cattimer(6), 
 25023 ;; Auto vars:     Size  Location     Type
 25024 ;;		None
 25025 ;; Return value:  Size  Location     Type
 25026 ;;		None               void
 25027 ;; Registers used:
 25028 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25029 ;; Tracked objects:
 25030 ;;		On entry : 0/0
 25031 ;;		On exit  : 0/0
 25032 ;;		Unchanged: 0/0
 25033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25038 ;;Total ram usage:        4 bytes
 25039 ;; Hardware stack levels used:    1
 25040 ;; Hardware stack levels required when called:    2
 25041 ;; This function calls:
 25042 ;;		Nothing
 25043 ;; This function is called by:
 25044 ;;		_userinterface_work
 25045 ;;		_set_mode
 25046 ;;		_set_pacer
 25047 ;; This function uses a non-reentrant model
 25048 ;;
 25049                           psect	text3285
 25050                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25051                           	line	142
 25052                           	global	__size_of_timeoutnow
 25053  001C                     	__size_of_timeoutnow	equ	__end_of_timeoutnow-_timeoutnow
 25054                           	
 25055  2A48                     _timeoutnow:	
 25056                           	opt	stack 9
 25057                           ; Regs used in _timeoutnow: [wreg+fsr1l-status,0]
 25058                           	line	143
 25059                           	
 25060  2A48                     l36731:	
 25061                           ;timer.c: 143: timer_p->timer1 = 0x0000;
 25062  2A48  0020               	movlb 0	; select bank0
 25063  2A49  0825               	movf	(timeoutnow@timer_p),w
 25064  2A4A  0086               	movwf	fsr1l
 25065  2A4B  0826               	movf	(timeoutnow@timer_p+1),w
 25066  2A4C  0087               	movwf	fsr1h
 25067                           
 25068  2A4D  3000               	movlw	low(0)
 25069  2A4E  3FC0               	movwi	[0]fsr1
 25070  2A4F  3000               	movlw	high(0)
 25071  2A50  3FC1               	movwi	[1]fsr1
 25072                           	line	144
 25073                           	
 25074  2A51                     l36733:	
 25075                           ;timer.c: 144: timer_p->overflows = 0x00000000;
 25076  2A51  0825               	movf	(timeoutnow@timer_p),w
 25077  2A52  3E02               	addlw	low(02h)
 25078  2A53  00A7               	movwf	(??_timeoutnow+0)+0
 25079  2A54  3000               	movlw	high(02h)
 25080  2A55  3D26               	addwfc	(timeoutnow@timer_p+1),w
 25081  2A56  00A8               	movwf	1+(??_timeoutnow+0)+0
 25082  2A57  0827               	movf	0+(??_timeoutnow+0)+0,w
 25083  2A58  0086               	movwf	fsr1l
 25084  2A59  0828               	movf	1+(??_timeoutnow+0)+0,w
 25085  2A5A  0087               	movwf	fsr1h
 25086                           
 25087  2A5B  3000               	movlw	0
 25088  2A5C  3FC0               	movwi	[0]fsr1
 25089  2A5D  3000               	movlw	0
 25090  2A5E  3FC1               	movwi	[1]fsr1
 25091  2A5F  3000               	movlw	0
 25092  2A60  3FC2               	movwi	[2]fsr1
 25093  2A61  3000               	movlw	0
 25094  2A62  3FC3               	movwi	[3]fsr1
 25095                           	line	145
 25096                           	
 25097  2A63                     l21354:	
 25098  2A63  0008               	return
 25099                           	opt stack 0
 25100                           GLOBAL	__end_of_timeoutnow
 25101  2A64                     	__end_of_timeoutnow:
 25102 ;; =============== function _timeoutnow ends ============
 25103                           
 25104                           	signat	_timeoutnow,4216
 25105                           	global	_memcpy
 25106                           psect	text3286,local,class=CODE,delta=2
 25107                           global __ptext3286
 25108  2C1A                     __ptext3286:
 25109                           
 25110 ;; *************** function _memcpy *****************
 25111 ;; Defined at:
 25112 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
 25113 ;; Parameters:    Size  Location     Type
 25114 ;;  d1              1    wreg     PTR void 
 25115 ;;		 -> ins_pointer(2), 
 25116 ;;  s1              1    0[BANK0 ] PTR const void 
 25117 ;;		 -> exe_instruction@temp(2), 
 25118 ;;  n               2    1[BANK0 ] unsigned int 
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;  d1              1    4[BANK0 ] PTR void 
 25121 ;;		 -> ins_pointer(2), 
 25122 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 25123 ;;		 -> exe_instruction@temp(2), 
 25124 ;;  d               1    5[BANK0 ] PTR unsigned char 
 25125 ;;		 -> ins_pointer(2), 
 25126 ;; Return value:  Size  Location     Type
 25127 ;;                  1    wreg      PTR void 
 25128 ;; Registers used:
 25129 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25130 ;; Tracked objects:
 25131 ;;		On entry : 0/0
 25132 ;;		On exit  : 0/0
 25133 ;;		Unchanged: 0/0
 25134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25135 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25136 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25138 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 25139 ;;Total ram usage:        7 bytes
 25140 ;; Hardware stack levels used:    1
 25141 ;; Hardware stack levels required when called:    2
 25142 ;; This function calls:
 25143 ;;		Nothing
 25144 ;; This function is called by:
 25145 ;;		_exe_instruction
 25146 ;; This function uses a non-reentrant model
 25147 ;;
 25148                           psect	text3286
 25149                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
 25150                           	line	10
 25151                           	global	__size_of_memcpy
 25152  002E                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
 25153                           	
 25154  2C1A                     _memcpy:	
 25155                           	opt	stack 11
 25156                           ; Regs used in _memcpy: [wreg+fsr1l-status,0]
 25157                           ;memcpy@d1 stored from wreg
 25158                           	line	19
 25159  2C1A  0020               	movlb 0	; select bank0
 25160  2C1B  00A5               	movwf	(memcpy@d1)
 25161                           	
 25162  2C1C                     l36721:	
 25163  2C1C  0821               	movf	(memcpy@s1),w
 25164  2C1D  00A4               	movwf	(??_memcpy+0)+0
 25165  2C1E  0824               	movf	(??_memcpy+0)+0,w
 25166  2C1F  00A7               	movwf	(memcpy@s)
 25167                           	line	20
 25168  2C20  0825               	movf	(memcpy@d1),w
 25169  2C21  00A4               	movwf	(??_memcpy+0)+0
 25170  2C22  0824               	movf	(??_memcpy+0)+0,w
 25171  2C23  00A6               	movwf	(memcpy@d)
 25172                           	line	21
 25173  2C24  2C38               	goto	l36729
 25174                           	
 25175  2C25                     l29049:	
 25176                           	line	22
 25177                           	
 25178  2C25                     l36723:	
 25179  2C25  0827               	movf	(memcpy@s),w
 25180  2C26  0086               	movwf	fsr1l
 25181  2C27  0187               	clrf fsr1h	
 25182                           	
 25183  2C28  0801               	movf	indf1,w
 25184  2C29  00A4               	movwf	(??_memcpy+0)+0
 25185  2C2A  0826               	movf	(memcpy@d),w
 25186  2C2B  0086               	movwf	fsr1l
 25187  2C2C  0187               	clrf fsr1h	
 25188                           	
 25189  2C2D  0824               	movf	(??_memcpy+0)+0,w
 25190  2C2E  0081               	movwf	indf1
 25191                           	
 25192  2C2F                     l36725:	
 25193  2C2F  3001               	movlw	(01h)
 25194  2C30  00A4               	movwf	(??_memcpy+0)+0
 25195  2C31  0824               	movf	(??_memcpy+0)+0,w
 25196  2C32  07A7               	addwf	(memcpy@s),f
 25197                           	
 25198  2C33                     l36727:	
 25199  2C33  3001               	movlw	(01h)
 25200  2C34  00A4               	movwf	(??_memcpy+0)+0
 25201  2C35  0824               	movf	(??_memcpy+0)+0,w
 25202  2C36  07A6               	addwf	(memcpy@d),f
 25203  2C37  2C38               	goto	l36729
 25204                           	
 25205  2C38                     l29048:	
 25206                           	line	21
 25207                           	
 25208  2C38                     l36729:	
 25209  2C38  3001               	movlw	low(01h)
 25210  2C39  02A2               	subwf	(memcpy@n),f
 25211  2C3A  3000               	movlw	high(01h)
 25212  2C3B  3BA3               	subwfb	(memcpy@n+1),f
 25213  2C3C  30FF               	movlw	high(0FFFFh)
 25214  2C3D  0623               	xorwf	((memcpy@n+1)),w
 25215  2C3E  1D03               	skipz
 25216  2C3F  2C42               	goto	u9335
 25217  2C40  30FF               	movlw	low(0FFFFh)
 25218  2C41  0622               	xorwf	((memcpy@n)),w
 25219  2C42                     u9335:
 25220                           
 25221  2C42  1D03               	skipz
 25222  2C43  2C45               	goto	u9331
 25223  2C44  2C46               	goto	u9330
 25224  2C45                     u9331:
 25225  2C45  2C25               	goto	l36723
 25226  2C46                     u9330:
 25227  2C46  2C47               	goto	l29051
 25228                           	
 25229  2C47                     l29050:	
 25230                           	line	24
 25231                           ;	Return value of _memcpy is never used
 25232                           	
 25233  2C47                     l29051:	
 25234  2C47  0008               	return
 25235                           	opt stack 0
 25236                           GLOBAL	__end_of_memcpy
 25237  2C48                     	__end_of_memcpy:
 25238 ;; =============== function _memcpy ends ============
 25239                           
 25240                           	signat	_memcpy,12409
 25241                           	global	_romwashprogram_getins
 25242                           psect	text3287,local,class=CODE,delta=2
 25243                           global __ptext3287
 25244  29C2                     __ptext3287:
 25245                           
 25246 ;; *************** function _romwashprogram_getins *****************
 25247 ;; Defined at:
 25248 ;;		line 342 in file "D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 25249 ;; Parameters:    Size  Location     Type
 25250 ;;  instruction     1    wreg     const PTR struct instruc
 25251 ;;		 -> cur_instruction(3), 
 25252 ;; Auto vars:     Size  Location     Type
 25253 ;;  instruction     1    3[BANK0 ] const PTR struct instruc
 25254 ;;		 -> cur_instruction(3), 
 25255 ;; Return value:  Size  Location     Type
 25256 ;;                  1    wreg      unsigned char 
 25257 ;; Registers used:
 25258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 25259 ;; Tracked objects:
 25260 ;;		On entry : 0/0
 25261 ;;		On exit  : 0/0
 25262 ;;		Unchanged: 0/0
 25263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25266 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25268 ;;Total ram usage:        4 bytes
 25269 ;; Hardware stack levels used:    1
 25270 ;; Hardware stack levels required when called:    2
 25271 ;; This function calls:
 25272 ;;		Nothing
 25273 ;; This function is called by:
 25274 ;;		_get_instruction
 25275 ;; This function uses a non-reentrant model
 25276 ;;
 25277                           psect	text3287
 25278                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 25279                           	line	342
 25280                           	global	__size_of_romwashprogram_getins
 25281  001A                     	__size_of_romwashprogram_getins	equ	__end_of_romwashprogram_getins-_romwashprogram_geti
                                 ns
 25282                           	
 25283  29C2                     _romwashprogram_getins:	
 25284                           	opt	stack 11
 25285                           ; Regs used in _romwashprogram_getins: [wreg-status,0+pclath]
 25286                           ;romwashprogram_getins@instruction stored from wreg
 25287  29C2  0020               	movlb 0	; select bank0
 25288  29C3  00A4               	movwf	(romwashprogram_getins@instruction)
 25289                           	line	343
 25290                           	
 25291  29C4                     l36715:	
 25292                           ;romwashprogram.c: 343: *instruction = *ins_address;
 25293  29C4  0021               	movlb 1	; select bank1
 25294  29C5  084E               	movf	(_ins_address)^080h,w
 25295  29C6  0084               	movwf	fsr0l
 25296  29C7  084F               	movf	((_ins_address+1)^080h),w
 25297  29C8  0085               	movwf	fsr0h
 25298  29C9  3F00               	moviw	[0]fsr0
 25299  29CA  0020               	movlb 0	; select bank0
 25300  29CB  00A1               	movwf	((??_romwashprogram_getins+0)+0)
 25301  29CC  3F01               	moviw	[1]fsr0
 25302  29CD  00A2               	movwf	((??_romwashprogram_getins+0)+0+1)
 25303  29CE  3F02               	moviw	[2]fsr0
 25304  29CF  00A3               	movwf	((??_romwashprogram_getins+0)+0+2)
 25305  29D0  0824               	movf	(romwashprogram_getins@instruction),w
 25306  29D1  0086               	movwf	fsr1l
 25307  29D2  0187               	clrf fsr1h	
 25308                           	
 25309  29D3  0821               	movf	0+(??_romwashprogram_getins+0)+0,w
 25310  29D4  3FC0               	movwi	[0]fsr1
 25311  29D5  0822               	movf	1+(??_romwashprogram_getins+0)+0,w
 25312  29D6  3FC1               	movwi	[1]fsr1
 25313  29D7  0823               	movf	2+(??_romwashprogram_getins+0)+0,w
 25314  29D8  3FC2               	movwi	[2]fsr1
 25315                           	line	345
 25316                           	
 25317  29D9                     l36717:	
 25318                           ;romwashprogram.c: 345: return 1;
 25319  29D9  3001               	movlw	(01h)
 25320  29DA  29DB               	goto	l6511
 25321                           	
 25322  29DB                     l36719:	
 25323                           	line	346
 25324                           	
 25325  29DB                     l6511:	
 25326  29DB  0008               	return
 25327                           	opt stack 0
 25328                           GLOBAL	__end_of_romwashprogram_getins
 25329  29DC                     	__end_of_romwashprogram_getins:
 25330 ;; =============== function _romwashprogram_getins ends ============
 25331                           
 25332                           	signat	_romwashprogram_getins,4217
 25333                           	global	_romwashprogram_reqins
 25334                           psect	text3288,local,class=CODE,delta=2
 25335                           global __ptext3288
 25336  2842                     __ptext3288:
 25337                           
 25338 ;; *************** function _romwashprogram_reqins *****************
 25339 ;; Defined at:
 25340 ;;		line 337 in file "D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;  address         2    0[BANK0 ] PTR const struct instruc
 25343 ;;		 -> cleanupprogram(36), washprogram(303), cur_instruction(3), ROM(16384), 
 25344 ;; Auto vars:     Size  Location     Type
 25345 ;;		None
 25346 ;; Return value:  Size  Location     Type
 25347 ;;		None               void
 25348 ;; Registers used:
 25349 ;;		wreg, status,2, status,0
 25350 ;; Tracked objects:
 25351 ;;		On entry : 0/0
 25352 ;;		On exit  : 0/0
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25359 ;;Total ram usage:        2 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:    2
 25362 ;; This function calls:
 25363 ;;		Nothing
 25364 ;; This function is called by:
 25365 ;;		_req_instruction
 25366 ;; This function uses a non-reentrant model
 25367 ;;
 25368                           psect	text3288
 25369                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 25370                           	line	337
 25371                           	global	__size_of_romwashprogram_reqins
 25372  000B                     	__size_of_romwashprogram_reqins	equ	__end_of_romwashprogram_reqins-_romwashprogram_reqi
                                 ns
 25373                           	
 25374  2842                     _romwashprogram_reqins:	
 25375                           	opt	stack 11
 25376                           ; Regs used in _romwashprogram_reqins: [wreg+status,2+status,0]
 25377                           	line	338
 25378                           	
 25379  2842                     l36713:	
 25380                           ;romwashprogram.c: 338: ins_address = address;
 25381  2842  0020               	movlb 0	; select bank0
 25382  2843  0822               	movf	(romwashprogram_reqins@address+1),w
 25383  2844  0021               	movlb 1	; select bank1
 25384  2845  01CF               	clrf	(_ins_address+1)^080h
 25385  2846  07CF               	addwf	(_ins_address+1)^080h
 25386  2847  0020               	movlb 0	; select bank0
 25387  2848  0821               	movf	(romwashprogram_reqins@address),w
 25388  2849  0021               	movlb 1	; select bank1
 25389  284A  01CE               	clrf	(_ins_address)^080h
 25390  284B  07CE               	addwf	(_ins_address)^080h
 25391                           
 25392                           	line	339
 25393                           	
 25394  284C                     l6508:	
 25395  284C  0008               	return
 25396                           	opt stack 0
 25397                           GLOBAL	__end_of_romwashprogram_reqins
 25398  284D                     	__end_of_romwashprogram_reqins:
 25399 ;; =============== function _romwashprogram_reqins ends ============
 25400                           
 25401                           	signat	_romwashprogram_reqins,4216
 25402                           	global	_litterlanguage_paused
 25403                           psect	text3289,local,class=CODE,delta=2
 25404                           global __ptext3289
 25405  2832                     __ptext3289:
 25406                           
 25407 ;; *************** function _litterlanguage_paused *****************
 25408 ;; Defined at:
 25409 ;;		line 341 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 25410 ;; Parameters:    Size  Location     Type
 25411 ;;		None
 25412 ;; Auto vars:     Size  Location     Type
 25413 ;;		None
 25414 ;; Return value:  Size  Location     Type
 25415 ;;                  1    wreg      unsigned char 
 25416 ;; Registers used:
 25417 ;;		wreg
 25418 ;; Tracked objects:
 25419 ;;		On entry : 0/0
 25420 ;;		On exit  : 0/0
 25421 ;;		Unchanged: 0/0
 25422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25427 ;;Total ram usage:        0 bytes
 25428 ;; Hardware stack levels used:    1
 25429 ;; Hardware stack levels required when called:    2
 25430 ;; This function calls:
 25431 ;;		Nothing
 25432 ;; This function is called by:
 25433 ;;		_start_short
 25434 ;; This function uses a non-reentrant model
 25435 ;;
 25436                           psect	text3289
 25437                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 25438                           	line	341
 25439                           	global	__size_of_litterlanguage_paused
 25440  0005                     	__size_of_litterlanguage_paused	equ	__end_of_litterlanguage_paused-_litterlanguage_paus
                                 ed
 25441                           	
 25442  2832                     _litterlanguage_paused:	
 25443                           	opt	stack 11
 25444                           ; Regs used in _litterlanguage_paused: [wreg]
 25445                           	line	342
 25446                           	
 25447  2832                     l34133:	
 25448                           ;litterlanguage.c: 342: return (paused);
 25449  2832  3000               	movlw	0
 25450  2833  1AF1               	btfsc	(_paused/8),(_paused)&7
 25451  2834  3001               	movlw	1
 25452  2835  2836               	goto	l4304
 25453                           	
 25454  2836                     l34135:	
 25455                           	line	343
 25456                           	
 25457  2836                     l4304:	
 25458  2836  0008               	return
 25459                           	opt stack 0
 25460                           GLOBAL	__end_of_litterlanguage_paused
 25461  2837                     	__end_of_litterlanguage_paused:
 25462 ;; =============== function _litterlanguage_paused ends ============
 25463                           
 25464                           	signat	_litterlanguage_paused,89
 25465                           	global	_timestampdiff
 25466                           psect	text3290,local,class=CODE,delta=2
 25467                           global __ptext3290
 25468  1BF0                     __ptext3290:
 25469                           
 25470 ;; *************** function _timestampdiff *****************
 25471 ;; Defined at:
 25472 ;;		line 246 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25473 ;; Parameters:    Size  Location     Type
 25474 ;;  early_p         2    0[BANK0 ] const PTR const struct t
 25475 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 25476 ;;  late_p          1    2[BANK0 ] const PTR const struct t
 25477 ;;		 -> litterlanguage_pause@timer_now(6), 
 25478 ;; Auto vars:     Size  Location     Type
 25479 ;;  diff            4   12[BANK0 ] unsigned long 
 25480 ;;  early_longsh    2   16[BANK0 ] PTR struct longshort
 25481 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 25482 ;;  late_longsho    1   18[BANK0 ] PTR struct longshort
 25483 ;;		 -> litterlanguage_pause@timer_now(6), 
 25484 ;; Return value:  Size  Location     Type
 25485 ;;                  4    0[BANK0 ] unsigned long 
 25486 ;; Registers used:
 25487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 25488 ;; Tracked objects:
 25489 ;;		On entry : 0/0
 25490 ;;		On exit  : 0/0
 25491 ;;		Unchanged: 0/0
 25492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25494 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 25495 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 25496 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
       0       0
 25497 ;;Total ram usage:       19 bytes
 25498 ;; Hardware stack levels used:    1
 25499 ;; Hardware stack levels required when called:    2
 25500 ;; This function calls:
 25501 ;;		Nothing
 25502 ;; This function is called by:
 25503 ;;		_litterlanguage_pause
 25504 ;; This function uses a non-reentrant model
 25505 ;;
 25506                           psect	text3290
 25507                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25508                           	line	246
 25509                           	global	__size_of_timestampdiff
 25510  013E                     	__size_of_timestampdiff	equ	__end_of_timestampdiff-_timestampdiff
 25511                           	
 25512  1BF0                     _timestampdiff:	
 25513                           	opt	stack 10
 25514                           ; Regs used in _timestampdiff: [wreg-status,0]
 25515                           	line	247
 25516                           	
 25517  1BF0                     l34099:	
 25518                           ;timer.c: 247: unsigned long diff = 0;
 25519  1BF0  3000               	movlw	0
 25520  1BF1  0020               	movlb 0	; select bank0
 25521  1BF2  00B0               	movwf	(timestampdiff@diff+3)
 25522  1BF3  3000               	movlw	0
 25523  1BF4  00AF               	movwf	(timestampdiff@diff+2)
 25524  1BF5  3000               	movlw	0
 25525  1BF6  00AE               	movwf	(timestampdiff@diff+1)
 25526  1BF7  3000               	movlw	0
 25527  1BF8  00AD               	movwf	(timestampdiff@diff)
 25528                           
 25529                           	line	248
 25530                           	
 25531  1BF9                     l34101:	
 25532                           ;timer.c: 248: struct longshort *early_longshort = (struct longshort*)early_p;
 25533  1BF9  0822               	movf	(timestampdiff@early_p+1),w
 25534  1BFA  01B2               	clrf	(timestampdiff@early_longshort+1)
 25535  1BFB  07B2               	addwf	(timestampdiff@early_longshort+1)
 25536  1BFC  0821               	movf	(timestampdiff@early_p),w
 25537  1BFD  01B1               	clrf	(timestampdiff@early_longshort)
 25538  1BFE  07B1               	addwf	(timestampdiff@early_longshort)
 25539                           
 25540                           	line	249
 25541                           	
 25542  1BFF                     l34103:	
 25543                           ;timer.c: 249: struct longshort *late_longshort = (struct longshort*)late_p;
 25544  1BFF  0823               	movf	(timestampdiff@late_p),w
 25545  1C00  00A5               	movwf	(??_timestampdiff+0)+0
 25546  1C01  0825               	movf	(??_timestampdiff+0)+0,w
 25547  1C02  00B3               	movwf	(timestampdiff@late_longshort)
 25548                           	line	252
 25549                           	
 25550  1C03                     l34105:	
 25551                           ;timer.c: 252: if (early_longshort->ms_shortTicks >= late_longshort->ms_shortTicks) {
 25552  1C03  0833               	movf	(timestampdiff@late_longshort),w
 25553  1C04  3E04               	addlw	04h
 25554  1C05  0086               	movwf	fsr1l
 25555  1C06  0187               	clrf fsr1h	
 25556                           	
 25557  1C07  3F40               	moviw	[0]fsr1
 25558  1C08  00A5               	movwf	(??_timestampdiff+0)+0
 25559  1C09  3F41               	moviw	[1]fsr1
 25560  1C0A  00A6               	movwf	(??_timestampdiff+0)+0+1
 25561  1C0B  0831               	movf	(timestampdiff@early_longshort),w
 25562  1C0C  3E04               	addlw	low(04h)
 25563  1C0D  00A7               	movwf	(??_timestampdiff+2)+0
 25564  1C0E  3000               	movlw	high(04h)
 25565  1C0F  3D32               	addwfc	(timestampdiff@early_longshort+1),w
 25566  1C10  00A8               	movwf	1+(??_timestampdiff+2)+0
 25567  1C11  0827               	movf	0+(??_timestampdiff+2)+0,w
 25568  1C12  0086               	movwf	fsr1l
 25569  1C13  0828               	movf	1+(??_timestampdiff+2)+0,w
 25570  1C14  0087               	movwf	fsr1h
 25571                           
 25572  1C15  3F40               	moviw	[0]fsr1
 25573  1C16  00A9               	movwf	(??_timestampdiff+4)+0
 25574  1C17  3F41               	moviw	[1]fsr1
 25575  1C18  00AA               	movwf	(??_timestampdiff+4)+0+1
 25576  1C19  0826               	movf	1+(??_timestampdiff+0)+0,w
 25577  1C1A  022A               	subwf	1+(??_timestampdiff+4)+0,w
 25578  1C1B  1D03               	skipz
 25579  1C1C  2C1F               	goto	u5855
 25580  1C1D  0825               	movf	0+(??_timestampdiff+0)+0,w
 25581  1C1E  0229               	subwf	0+(??_timestampdiff+4)+0,w
 25582  1C1F                     u5855:
 25583  1C1F  1C03               	skipc
 25584  1C20  2C22               	goto	u5851
 25585  1C21  2C23               	goto	u5850
 25586  1C22                     u5851:
 25587  1C22  2D24               	goto	l34125
 25588  1C23                     u5850:
 25589  1C23  2CF9               	goto	l34123
 25590                           	line	253
 25591                           	
 25592  1C24                     l34107:	
 25593                           ;timer.c: 253: switch (early_longshort->ms_shortTicks - late_longshort->ms_shortTicks) {
 25594  1C24  2CF9               	goto	l34123
 25595                           	line	254
 25596                           ;timer.c: 254: case 0:
 25597                           	
 25598  1C25                     l21381:	
 25599                           	line	255
 25600                           	
 25601  1C25                     l34109:	
 25602                           ;timer.c: 255: if (early_longshort->ls_longTicks > late_longshort->ls_longTicks) {
 25603  1C25  0831               	movf	(timestampdiff@early_longshort),w
 25604  1C26  0086               	movwf	fsr1l
 25605  1C27  0832               	movf	(timestampdiff@early_longshort+1),w
 25606  1C28  0087               	movwf	fsr1h
 25607                           
 25608  1C29  3F40               	moviw	[0]fsr1
 25609  1C2A  00A5               	movwf	((??_timestampdiff+0)+0+0)
 25610  1C2B  3F41               	moviw	[1]fsr1
 25611  1C2C  00A6               	movwf	((??_timestampdiff+0)+0+1)
 25612  1C2D  3F42               	moviw	[2]fsr1
 25613  1C2E  00A7               	movwf	((??_timestampdiff+0)+0+2)
 25614  1C2F  3F43               	moviw	[3]fsr1
 25615  1C30  00A8               	movwf	((??_timestampdiff+0)+0+3)
 25616  1C31  0833               	movf	(timestampdiff@late_longshort),w
 25617  1C32  0086               	movwf	fsr1l
 25618  1C33  0187               	clrf fsr1h	
 25619                           	
 25620  1C34  3F40               	moviw	[0]fsr1
 25621  1C35  00A9               	movwf	((??_timestampdiff+4)+0+0)
 25622  1C36  3F41               	moviw	[1]fsr1
 25623  1C37  00AA               	movwf	((??_timestampdiff+4)+0+1)
 25624  1C38  3F42               	moviw	[2]fsr1
 25625  1C39  00AB               	movwf	((??_timestampdiff+4)+0+2)
 25626  1C3A  3F43               	moviw	[3]fsr1
 25627  1C3B  00AC               	movwf	((??_timestampdiff+4)+0+3)
 25628  1C3C  0828               	movf	3+(??_timestampdiff+0)+0,w
 25629  1C3D  022C               	subwf	3+(??_timestampdiff+4)+0,w
 25630  1C3E  1D03               	skipz
 25631  1C3F  2C4A               	goto	u5865
 25632  1C40  0827               	movf	2+(??_timestampdiff+0)+0,w
 25633  1C41  022B               	subwf	2+(??_timestampdiff+4)+0,w
 25634  1C42  1D03               	skipz
 25635  1C43  2C4A               	goto	u5865
 25636  1C44  0826               	movf	1+(??_timestampdiff+0)+0,w
 25637  1C45  022A               	subwf	1+(??_timestampdiff+4)+0,w
 25638  1C46  1D03               	skipz
 25639  1C47  2C4A               	goto	u5865
 25640  1C48  0825               	movf	0+(??_timestampdiff+0)+0,w
 25641  1C49  0229               	subwf	0+(??_timestampdiff+4)+0,w
 25642  1C4A                     u5865:
 25643  1C4A  1803               	skipnc
 25644  1C4B  2C4D               	goto	u5861
 25645  1C4C  2C4E               	goto	u5860
 25646  1C4D                     u5861:
 25647  1C4D  2D24               	goto	l34125
 25648  1C4E                     u5860:
 25649                           	line	257
 25650                           	
 25651  1C4E                     l34111:	
 25652                           ;timer.c: 257: diff = early_longshort->ls_longTicks - late_longshort->ls_longTicks;
 25653  1C4E  0831               	movf	(timestampdiff@early_longshort),w
 25654  1C4F  0086               	movwf	fsr1l
 25655  1C50  0832               	movf	(timestampdiff@early_longshort+1),w
 25656  1C51  0087               	movwf	fsr1h
 25657                           
 25658  1C52  3F40               	moviw	[0]fsr1
 25659  1C53  00A5               	movwf	((??_timestampdiff+0)+0+0)
 25660  1C54  3F41               	moviw	[1]fsr1
 25661  1C55  00A6               	movwf	((??_timestampdiff+0)+0+1)
 25662  1C56  3F42               	moviw	[2]fsr1
 25663  1C57  00A7               	movwf	((??_timestampdiff+0)+0+2)
 25664  1C58  3F43               	moviw	[3]fsr1
 25665  1C59  00A8               	movwf	((??_timestampdiff+0)+0+3)
 25666  1C5A  0833               	movf	(timestampdiff@late_longshort),w
 25667  1C5B  0086               	movwf	fsr1l
 25668  1C5C  0187               	clrf fsr1h	
 25669                           	
 25670  1C5D  3F40               	moviw	[0]fsr1
 25671  1C5E  00A9               	movwf	((??_timestampdiff+4)+0+0)
 25672  1C5F  3F41               	moviw	[1]fsr1
 25673  1C60  00AA               	movwf	((??_timestampdiff+4)+0+1)
 25674  1C61  3F42               	moviw	[2]fsr1
 25675  1C62  00AB               	movwf	((??_timestampdiff+4)+0+2)
 25676  1C63  3F43               	moviw	[3]fsr1
 25677  1C64  00AC               	movwf	((??_timestampdiff+4)+0+3)
 25678  1C65  09A9               	comf	(??_timestampdiff+4)+0,f
 25679  1C66  09AA               	comf	(??_timestampdiff+4)+1,f
 25680  1C67  09AB               	comf	(??_timestampdiff+4)+2,f
 25681  1C68  09AC               	comf	(??_timestampdiff+4)+3,f
 25682  1C69  0AA9               	incf	(??_timestampdiff+4)+0,f
 25683  1C6A  1903               	skipnz
 25684  1C6B  0AAA               	incf	(??_timestampdiff+4)+1,f
 25685  1C6C  1903               	skipnz
 25686  1C6D  0AAB               	incf	(??_timestampdiff+4)+2,f
 25687  1C6E  1903               	skipnz
 25688  1C6F  0AAC               	incf	(??_timestampdiff+4)+3,f
 25689  1C70  0829               	movf	0+(??_timestampdiff+4)+0,w
 25690  1C71  07A5               	addwf	(??_timestampdiff+0)+0,f
 25691  1C72  082A               	movf	1+(??_timestampdiff+4)+0,w
 25692  1C73  3DA6               	addwfc	(??_timestampdiff+0)+1,f
 25693  1C74  082B               	movf	2+(??_timestampdiff+4)+0,w
 25694  1C75  3DA7               	addwfc	(??_timestampdiff+0)+2,f
 25695  1C76  082C               	movf	3+(??_timestampdiff+4)+0,w
 25696  1C77  3DA8               	addwfc	(??_timestampdiff+0)+3,f
 25697  1C78  0828               	movf	3+(??_timestampdiff+0)+0,w
 25698  1C79  00B0               	movwf	(timestampdiff@diff+3)
 25699  1C7A  0827               	movf	2+(??_timestampdiff+0)+0,w
 25700  1C7B  00AF               	movwf	(timestampdiff@diff+2)
 25701  1C7C  0826               	movf	1+(??_timestampdiff+0)+0,w
 25702  1C7D  00AE               	movwf	(timestampdiff@diff+1)
 25703  1C7E  0825               	movf	0+(??_timestampdiff+0)+0,w
 25704  1C7F  00AD               	movwf	(timestampdiff@diff)
 25705                           
 25706  1C80  2D24               	goto	l34125
 25707                           	line	258
 25708                           	
 25709  1C81                     l21382:	
 25710                           	line	259
 25711                           ;timer.c: 258: }
 25712                           ;timer.c: 259: break;
 25713  1C81  2D24               	goto	l34125
 25714                           	line	261
 25715                           ;timer.c: 261: case 1:
 25716                           	
 25717  1C82                     l21384:	
 25718                           	line	262
 25719                           	
 25720  1C82                     l34113:	
 25721                           ;timer.c: 262: if (early_longshort->ls_longTicks < late_longshort->ls_longTicks) {
 25722  1C82  0833               	movf	(timestampdiff@late_longshort),w
 25723  1C83  0086               	movwf	fsr1l
 25724  1C84  0187               	clrf fsr1h	
 25725                           	
 25726  1C85  3F40               	moviw	[0]fsr1
 25727  1C86  00A5               	movwf	((??_timestampdiff+0)+0+0)
 25728  1C87  3F41               	moviw	[1]fsr1
 25729  1C88  00A6               	movwf	((??_timestampdiff+0)+0+1)
 25730  1C89  3F42               	moviw	[2]fsr1
 25731  1C8A  00A7               	movwf	((??_timestampdiff+0)+0+2)
 25732  1C8B  3F43               	moviw	[3]fsr1
 25733  1C8C  00A8               	movwf	((??_timestampdiff+0)+0+3)
 25734  1C8D  0831               	movf	(timestampdiff@early_longshort),w
 25735  1C8E  0086               	movwf	fsr1l
 25736  1C8F  0832               	movf	(timestampdiff@early_longshort+1),w
 25737  1C90  0087               	movwf	fsr1h
 25738                           
 25739  1C91  3F40               	moviw	[0]fsr1
 25740  1C92  00A9               	movwf	((??_timestampdiff+4)+0+0)
 25741  1C93  3F41               	moviw	[1]fsr1
 25742  1C94  00AA               	movwf	((??_timestampdiff+4)+0+1)
 25743  1C95  3F42               	moviw	[2]fsr1
 25744  1C96  00AB               	movwf	((??_timestampdiff+4)+0+2)
 25745  1C97  3F43               	moviw	[3]fsr1
 25746  1C98  00AC               	movwf	((??_timestampdiff+4)+0+3)
 25747  1C99  0828               	movf	3+(??_timestampdiff+0)+0,w
 25748  1C9A  022C               	subwf	3+(??_timestampdiff+4)+0,w
 25749  1C9B  1D03               	skipz
 25750  1C9C  2CA7               	goto	u5875
 25751  1C9D  0827               	movf	2+(??_timestampdiff+0)+0,w
 25752  1C9E  022B               	subwf	2+(??_timestampdiff+4)+0,w
 25753  1C9F  1D03               	skipz
 25754  1CA0  2CA7               	goto	u5875
 25755  1CA1  0826               	movf	1+(??_timestampdiff+0)+0,w
 25756  1CA2  022A               	subwf	1+(??_timestampdiff+4)+0,w
 25757  1CA3  1D03               	skipz
 25758  1CA4  2CA7               	goto	u5875
 25759  1CA5  0825               	movf	0+(??_timestampdiff+0)+0,w
 25760  1CA6  0229               	subwf	0+(??_timestampdiff+4)+0,w
 25761  1CA7                     u5875:
 25762  1CA7  1803               	skipnc
 25763  1CA8  2CAA               	goto	u5871
 25764  1CA9  2CAB               	goto	u5870
 25765  1CAA                     u5871:
 25766  1CAA  2CE5               	goto	l34117
 25767  1CAB                     u5870:
 25768                           	line	264
 25769                           	
 25770  1CAB                     l34115:	
 25771                           ;timer.c: 264: diff = (0xFFFFFFFF - (late_longshort->ls_longTicks - early_longshort->ls_
                                 longTicks)) + 1;
 25772  1CAB  0833               	movf	(timestampdiff@late_longshort),w
 25773  1CAC  0086               	movwf	fsr1l
 25774  1CAD  0187               	clrf fsr1h	
 25775                           	
 25776  1CAE  3F40               	moviw	[0]fsr1
 25777  1CAF  00A5               	movwf	((??_timestampdiff+0)+0+0)
 25778  1CB0  3F41               	moviw	[1]fsr1
 25779  1CB1  00A6               	movwf	((??_timestampdiff+0)+0+1)
 25780  1CB2  3F42               	moviw	[2]fsr1
 25781  1CB3  00A7               	movwf	((??_timestampdiff+0)+0+2)
 25782  1CB4  3F43               	moviw	[3]fsr1
 25783  1CB5  00A8               	movwf	((??_timestampdiff+0)+0+3)
 25784  1CB6  0831               	movf	(timestampdiff@early_longshort),w
 25785  1CB7  0086               	movwf	fsr1l
 25786  1CB8  0832               	movf	(timestampdiff@early_longshort+1),w
 25787  1CB9  0087               	movwf	fsr1h
 25788                           
 25789  1CBA  3F40               	moviw	[0]fsr1
 25790  1CBB  00A9               	movwf	((??_timestampdiff+4)+0+0)
 25791  1CBC  3F41               	moviw	[1]fsr1
 25792  1CBD  00AA               	movwf	((??_timestampdiff+4)+0+1)
 25793  1CBE  3F42               	moviw	[2]fsr1
 25794  1CBF  00AB               	movwf	((??_timestampdiff+4)+0+2)
 25795  1CC0  3F43               	moviw	[3]fsr1
 25796  1CC1  00AC               	movwf	((??_timestampdiff+4)+0+3)
 25797  1CC2  09A9               	comf	(??_timestampdiff+4)+0,f
 25798  1CC3  09AA               	comf	(??_timestampdiff+4)+1,f
 25799  1CC4  09AB               	comf	(??_timestampdiff+4)+2,f
 25800  1CC5  09AC               	comf	(??_timestampdiff+4)+3,f
 25801  1CC6  0AA9               	incf	(??_timestampdiff+4)+0,f
 25802  1CC7  1903               	skipnz
 25803  1CC8  0AAA               	incf	(??_timestampdiff+4)+1,f
 25804  1CC9  1903               	skipnz
 25805  1CCA  0AAB               	incf	(??_timestampdiff+4)+2,f
 25806  1CCB  1903               	skipnz
 25807  1CCC  0AAC               	incf	(??_timestampdiff+4)+3,f
 25808  1CCD  0829               	movf	0+(??_timestampdiff+4)+0,w
 25809  1CCE  07A5               	addwf	(??_timestampdiff+0)+0,f
 25810  1CCF  082A               	movf	1+(??_timestampdiff+4)+0,w
 25811  1CD0  3DA6               	addwfc	(??_timestampdiff+0)+1,f
 25812  1CD1  082B               	movf	2+(??_timestampdiff+4)+0,w
 25813  1CD2  3DA7               	addwfc	(??_timestampdiff+0)+2,f
 25814  1CD3  082C               	movf	3+(??_timestampdiff+4)+0,w
 25815  1CD4  3DA8               	addwfc	(??_timestampdiff+0)+3,f
 25816  1CD5  0925               	comf	0+(??_timestampdiff+0)+0+0,w
 25817  1CD6  00AD               	movwf	(timestampdiff@diff)
 25818  1CD7  0926               	comf	0+(??_timestampdiff+0)+0+1,w
 25819  1CD8  00AE               	movwf	(timestampdiff@diff+1)
 25820  1CD9  0927               	comf	0+(??_timestampdiff+0)+0+2,w
 25821  1CDA  00AF               	movwf	(timestampdiff@diff+2)
 25822  1CDB  0928               	comf	0+(??_timestampdiff+0)+0+3,w
 25823  1CDC  00B0               	movwf	(timestampdiff@diff+3)
 25824  1CDD  0AAD               	incf	(timestampdiff@diff),f
 25825  1CDE  1903               	skipnz
 25826  1CDF  0AAE               	incf	(timestampdiff@diff+1),f
 25827  1CE0  1903               	skipnz
 25828  1CE1  0AAF               	incf	(timestampdiff@diff+2),f
 25829  1CE2  1903               	skipnz
 25830  1CE3  0AB0               	incf	(timestampdiff@diff+3),f
 25831                           	line	265
 25832                           ;timer.c: 265: } else {
 25833  1CE4  2D24               	goto	l34125
 25834                           	
 25835  1CE5                     l21385:	
 25836                           	line	267
 25837                           	
 25838  1CE5                     l34117:	
 25839                           ;timer.c: 267: diff = 0xFFFFFFFF;
 25840  1CE5  30FF               	movlw	0FFh
 25841  1CE6  00B0               	movwf	(timestampdiff@diff+3)
 25842  1CE7  30FF               	movlw	0FFh
 25843  1CE8  00AF               	movwf	(timestampdiff@diff+2)
 25844  1CE9  30FF               	movlw	0FFh
 25845  1CEA  00AE               	movwf	(timestampdiff@diff+1)
 25846  1CEB  30FF               	movlw	0FFh
 25847  1CEC  00AD               	movwf	(timestampdiff@diff)
 25848                           
 25849  1CED  2D24               	goto	l34125
 25850                           	line	268
 25851                           	
 25852  1CEE                     l21386:	
 25853                           	line	269
 25854                           ;timer.c: 268: }
 25855                           ;timer.c: 269: break;
 25856  1CEE  2D24               	goto	l34125
 25857                           	line	271
 25858                           ;timer.c: 271: default:
 25859                           	
 25860  1CEF                     l21387:	
 25861                           	line	273
 25862                           	
 25863  1CEF                     l34119:	
 25864                           ;timer.c: 273: diff = 0xFFFFFFFF;
 25865  1CEF  30FF               	movlw	0FFh
 25866  1CF0  00B0               	movwf	(timestampdiff@diff+3)
 25867  1CF1  30FF               	movlw	0FFh
 25868  1CF2  00AF               	movwf	(timestampdiff@diff+2)
 25869  1CF3  30FF               	movlw	0FFh
 25870  1CF4  00AE               	movwf	(timestampdiff@diff+1)
 25871  1CF5  30FF               	movlw	0FFh
 25872  1CF6  00AD               	movwf	(timestampdiff@diff)
 25873                           
 25874                           	line	274
 25875                           ;timer.c: 274: break;
 25876  1CF7  2D24               	goto	l34125
 25877                           	line	275
 25878                           	
 25879  1CF8                     l34121:	
 25880                           ;timer.c: 275: }
 25881  1CF8  2D24               	goto	l34125
 25882                           	line	253
 25883                           	
 25884  1CF9                     l21380:	
 25885                           	
 25886  1CF9                     l34123:	
 25887  1CF9  0831               	movf	(timestampdiff@early_longshort),w
 25888  1CFA  3E04               	addlw	low(04h)
 25889  1CFB  00A5               	movwf	(??_timestampdiff+0)+0
 25890  1CFC  3000               	movlw	high(04h)
 25891  1CFD  3D32               	addwfc	(timestampdiff@early_longshort+1),w
 25892  1CFE  00A6               	movwf	1+(??_timestampdiff+0)+0
 25893  1CFF  0825               	movf	0+(??_timestampdiff+0)+0,w
 25894  1D00  0086               	movwf	fsr1l
 25895  1D01  0826               	movf	1+(??_timestampdiff+0)+0,w
 25896  1D02  0087               	movwf	fsr1h
 25897                           
 25898  1D03  0833               	movf	(timestampdiff@late_longshort),w
 25899  1D04  3E04               	addlw	04h
 25900  1D05  0084               	movwf	fsr0l
 25901  1D06  0185               	clrf fsr0h	
 25902                           	
 25903  1D07  3F00               	moviw	[0]fsr0
 25904  1D08  00A7               	movwf	(??_timestampdiff+2)+0
 25905  1D09  3F01               	moviw	[1]fsr0
 25906  1D0A  00A8               	movwf	(??_timestampdiff+2)+0+1
 25907  1D0B  09A7               	comf	(??_timestampdiff+2)+0,f
 25908  1D0C  09A8               	comf	(??_timestampdiff+2)+1,f
 25909  1D0D  0AA7               	incf	(??_timestampdiff+2)+0,f
 25910  1D0E  1903               	skipnz
 25911  1D0F  0AA8               	incf	(??_timestampdiff+2)+1,f
 25912  1D10  3F40               	moviw	[0]fsr1
 25913  1D11  0727               	addwf	0+(??_timestampdiff+2)+0,w
 25914  1D12  00A9               	movwf	(??_timestampdiff+4)+0
 25915  1D13  3F41               	moviw	[1]fsr1
 25916  1D14  3D28               	addwfc	1+(??_timestampdiff+2)+0,w
 25917  1D15  00AA               	movwf	(??_timestampdiff+4)+0+1
 25918                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 25919                           ; Switch size 1, requested type "space"
 25920                           ; Number of cases is 1, Range of values is 0 to 0
 25921                           ; switch strategies available:
 25922                           ; Name         Instructions Cycles
 25923                           ; simple_byte            4     3 (average)
 25924                           ; direct_byte            8     6 (fixed)
 25925                           ; jumptable            260     6 (fixed)
 25926                           ; rangetable             5     4 (fixed)
 25927                           ; spacedrange            7     6 (fixed)
 25928                           ; locatedrange           1     3 (fixed)
 25929                           ;	Chosen strategy is simple_byte
 25930                           
 25931  1D16  082A               	movf 1+(??_timestampdiff+4)+0,w
 25932                           	opt asmopt_off
 25933  1D17  3A00               	xorlw	0^0	; case 0
 25934  1D18  1903               	skipnz
 25935  1D19  2D1B               	goto	l38935
 25936  1D1A  2CEF               	goto	l34119
 25937                           	opt asmopt_on
 25938                           	
 25939  1D1B                     l38935:	
 25940                           ; Switch size 1, requested type "space"
 25941                           ; Number of cases is 2, Range of values is 0 to 1
 25942                           ; switch strategies available:
 25943                           ; Name         Instructions Cycles
 25944                           ; simple_byte            7     4 (average)
 25945                           ; direct_byte           10     6 (fixed)
 25946                           ; jumptable            260     6 (fixed)
 25947                           ; rangetable             6     4 (fixed)
 25948                           ; spacedrange            9     6 (fixed)
 25949                           ; locatedrange           2     3 (fixed)
 25950                           ;	Chosen strategy is simple_byte
 25951                           
 25952  1D1B  0829               	movf 0+(??_timestampdiff+4)+0,w
 25953                           	opt asmopt_off
 25954  1D1C  3A00               	xorlw	0^0	; case 0
 25955  1D1D  1903               	skipnz
 25956  1D1E  2C25               	goto	l34109
 25957  1D1F  3A01               	xorlw	1^0	; case 1
 25958  1D20  1903               	skipnz
 25959  1D21  2C82               	goto	l34113
 25960  1D22  2CEF               	goto	l34119
 25961                           	opt asmopt_on
 25962                           
 25963                           	line	275
 25964                           	
 25965  1D23                     l21383:	
 25966  1D23  2D24               	goto	l34125
 25967                           	line	276
 25968                           	
 25969  1D24                     l21379:	
 25970                           	line	278
 25971                           	
 25972  1D24                     l34125:	
 25973                           ;timer.c: 276: }
 25974                           ;timer.c: 278: return (diff);
 25975  1D24  0830               	movf	(timestampdiff@diff+3),w
 25976  1D25  00A4               	movwf	(?_timestampdiff+3)
 25977  1D26  082F               	movf	(timestampdiff@diff+2),w
 25978  1D27  00A3               	movwf	(?_timestampdiff+2)
 25979  1D28  082E               	movf	(timestampdiff@diff+1),w
 25980  1D29  00A2               	movwf	(?_timestampdiff+1)
 25981  1D2A  082D               	movf	(timestampdiff@diff),w
 25982  1D2B  00A1               	movwf	(?_timestampdiff)
 25983                           
 25984  1D2C  2D2D               	goto	l21388
 25985                           	
 25986  1D2D                     l34127:	
 25987                           	line	279
 25988                           	
 25989  1D2D                     l21388:	
 25990  1D2D  0008               	return
 25991                           	opt stack 0
 25992                           GLOBAL	__end_of_timestampdiff
 25993  1D2E                     	__end_of_timestampdiff:
 25994 ;; =============== function _timestampdiff ends ============
 25995                           
 25996                           	signat	_timestampdiff,8316
 25997                           	global	_gettimestamp
 25998                           psect	text3291,local,class=CODE,delta=2
 25999                           global __ptext3291
 26000  2E09                     __ptext3291:
 26001                           
 26002 ;; *************** function _gettimestamp *****************
 26003 ;; Defined at:
 26004 ;;		line 212 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26005 ;; Parameters:    Size  Location     Type
 26006 ;;  ticks           2    0[BANK0 ] const PTR struct timer
 26007 ;;		 -> sensortimer(6), timeoutexpired@currentTime(6), second(6), pingtime(6), 
 26008 ;;		 -> debouncer(6), pacers(55), debouncers(42), cattimer(6), 
 26009 ;;		 -> autotimer(6), holdtimeout(6), cartridgetimeout(6), litterlanguage_pause@timer_now(6), 
 26010 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26011 ;; Auto vars:     Size  Location     Type
 26012 ;;  bytes           2    5[BANK0 ] PTR unsigned char 
 26013 ;;		 -> sensortimer(6), timeoutexpired@currentTime(6), second(6), pingtime(6), 
 26014 ;;		 -> debouncer(6), pacers(55), debouncers(42), cattimer(6), 
 26015 ;;		 -> autotimer(6), holdtimeout(6), cartridgetimeout(6), litterlanguage_pause@timer_now(6), 
 26016 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26017 ;;  temp            1    7[BANK0 ] volatile unsigned char 
 26018 ;; Return value:  Size  Location     Type
 26019 ;;		None               void
 26020 ;; Registers used:
 26021 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26022 ;; Tracked objects:
 26023 ;;		On entry : 0/0
 26024 ;;		On exit  : 0/0
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26028 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26029 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26030 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 26031 ;;Total ram usage:        8 bytes
 26032 ;; Hardware stack levels used:    1
 26033 ;; Hardware stack levels required when called:    2
 26034 ;; This function calls:
 26035 ;;		Nothing
 26036 ;; This function is called by:
 26037 ;;		_litterlanguage_pause
 26038 ;;		_settimeout
 26039 ;;		_timeoutexpired
 26040 ;; This function uses a non-reentrant model
 26041 ;;
 26042                           psect	text3291
 26043                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26044                           	line	212
 26045                           	global	__size_of_gettimestamp
 26046  0048                     	__size_of_gettimestamp	equ	__end_of_gettimestamp-_gettimestamp
 26047                           	
 26048  2E09                     _gettimestamp:	
 26049                           	opt	stack 10
 26050                           ; Regs used in _gettimestamp: [wreg+fsr1l-status,0]
 26051                           	line	214
 26052                           	
 26053  2E09                     l36703:	
 26054                           ;timer.c: 213: volatile unsigned char temp;
 26055                           ;timer.c: 214: unsigned char *bytes = (unsigned char *)ticks;
 26056  2E09  0020               	movlb 0	; select bank0
 26057  2E0A  0822               	movf	(gettimestamp@ticks+1),w
 26058  2E0B  01A7               	clrf	(gettimestamp@bytes+1)
 26059  2E0C  07A7               	addwf	(gettimestamp@bytes+1)
 26060  2E0D  0821               	movf	(gettimestamp@ticks),w
 26061  2E0E  01A6               	clrf	(gettimestamp@bytes)
 26062  2E0F  07A6               	addwf	(gettimestamp@bytes)
 26063                           
 26064  2E10  2E11               	goto	l36705
 26065                           	line	219
 26066                           ;timer.c: 219: do
 26067                           	
 26068  2E11                     l21374:	
 26069                           	line	223
 26070                           	
 26071  2E11                     l36705:	
 26072                           ;timer.c: 220: {
 26073                           ;timer.c: 223: temp = TMR1H;
 26074  2E11  0817               	movf	(23),w	;volatile
 26075  2E12  00A3               	movwf	(??_gettimestamp+0)+0
 26076  2E13  0823               	movf	(??_gettimestamp+0)+0,w
 26077  2E14  00A8               	movwf	(gettimestamp@temp)	;volatile
 26078                           	line	226
 26079                           	
 26080  2E15                     l36707:	
 26081                           ;timer.c: 226: ticks->overflows = overflows;
 26082  2E15  0821               	movf	(gettimestamp@ticks),w
 26083  2E16  3E02               	addlw	low(02h)
 26084  2E17  00A3               	movwf	(??_gettimestamp+0)+0
 26085  2E18  3000               	movlw	high(02h)
 26086  2E19  3D22               	addwfc	(gettimestamp@ticks+1),w
 26087  2E1A  00A4               	movwf	1+(??_gettimestamp+0)+0
 26088  2E1B  0823               	movf	0+(??_gettimestamp+0)+0,w
 26089  2E1C  0086               	movwf	fsr1l
 26090  2E1D  0824               	movf	1+(??_gettimestamp+0)+0,w
 26091  2E1E  0087               	movwf	fsr1h
 26092                           
 26093  2E1F  0021               	movlb 1	; select bank1
 26094  2E20  084A               	movf	(_overflows)^080h,w	;volatile
 26095  2E21  3FC0               	movwi	[0]fsr1
 26096  2E22  084B               	movf	(_overflows+1)^080h,w	;volatile
 26097  2E23  3FC1               	movwi	[1]fsr1
 26098  2E24  084C               	movf	(_overflows+2)^080h,w	;volatile
 26099  2E25  3FC2               	movwi	[2]fsr1
 26100  2E26  084D               	movf	(_overflows+3)^080h,w	;volatile
 26101  2E27  3FC3               	movwi	[3]fsr1
 26102                           	line	227
 26103                           ;timer.c: 227: bytes[0] = TMR1L;
 26104  2E28  0020               	movlb 0	; select bank0
 26105  2E29  0816               	movf	(22),w	;volatile
 26106  2E2A  00A3               	movwf	(??_gettimestamp+0)+0
 26107  2E2B  0826               	movf	(gettimestamp@bytes),w
 26108  2E2C  0086               	movwf	fsr1l
 26109  2E2D  0827               	movf	(gettimestamp@bytes+1),w
 26110  2E2E  0087               	movwf	fsr1h
 26111                           
 26112  2E2F  0823               	movf	(??_gettimestamp+0)+0,w
 26113  2E30  0081               	movwf	indf1
 26114                           	line	228
 26115                           	
 26116  2E31                     l36709:	
 26117                           ;timer.c: 228: bytes[1] = TMR1H;
 26118  2E31  0817               	movf	(23),w	;volatile
 26119  2E32  00A3               	movwf	(??_gettimestamp+0)+0
 26120  2E33  0826               	movf	(gettimestamp@bytes),w
 26121  2E34  3E01               	addlw	low(01h)
 26122  2E35  00A4               	movwf	(??_gettimestamp+1)+0
 26123  2E36  3000               	movlw	high(01h)
 26124  2E37  3D27               	addwfc	(gettimestamp@bytes+1),w
 26125  2E38  00A5               	movwf	1+(??_gettimestamp+1)+0
 26126  2E39  0824               	movf	0+(??_gettimestamp+1)+0,w
 26127  2E3A  0086               	movwf	fsr1l
 26128  2E3B  0825               	movf	1+(??_gettimestamp+1)+0,w
 26129  2E3C  0087               	movwf	fsr1h
 26130                           
 26131  2E3D  0823               	movf	(??_gettimestamp+0)+0,w
 26132  2E3E  0081               	movwf	indf1
 26133                           	line	233
 26134                           	
 26135  2E3F                     l36711:	
 26136                           ;timer.c: 233: } while (bytes[1] != temp);
 26137  2E3F  0826               	movf	(gettimestamp@bytes),w
 26138  2E40  3E01               	addlw	low(01h)
 26139  2E41  00A3               	movwf	(??_gettimestamp+0)+0
 26140  2E42  3000               	movlw	high(01h)
 26141  2E43  3D27               	addwfc	(gettimestamp@bytes+1),w
 26142  2E44  00A4               	movwf	1+(??_gettimestamp+0)+0
 26143  2E45  0823               	movf	0+(??_gettimestamp+0)+0,w
 26144  2E46  0086               	movwf	fsr1l
 26145  2E47  0824               	movf	1+(??_gettimestamp+0)+0,w
 26146  2E48  0087               	movwf	fsr1h
 26147                           
 26148  2E49  0801               	movf	indf1,w
 26149  2E4A  0628               	xorwf	(gettimestamp@temp),w	;volatile
 26150  2E4B  1D03               	skipz
 26151  2E4C  2E4E               	goto	u9321
 26152  2E4D  2E4F               	goto	u9320
 26153  2E4E                     u9321:
 26154  2E4E  2E11               	goto	l36705
 26155  2E4F                     u9320:
 26156  2E4F  2E50               	goto	l21376
 26157                           	
 26158  2E50                     l21375:	
 26159                           	line	234
 26160                           	
 26161  2E50                     l21376:	
 26162  2E50  0008               	return
 26163                           	opt stack 0
 26164                           GLOBAL	__end_of_gettimestamp
 26165  2E51                     	__end_of_gettimestamp:
 26166 ;; =============== function _gettimestamp ends ============
 26167                           
 26168                           	signat	_gettimestamp,4216
 26169                           	global	_set_Dryer
 26170                           psect	text3292,local,class=CODE,delta=2
 26171                           global __ptext3292
 26172  290F                     __ptext3292:
 26173                           
 26174 ;; *************** function _set_Dryer *****************
 26175 ;; Defined at:
 26176 ;;		line 441 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26177 ;; Parameters:    Size  Location     Type
 26178 ;;  on              1    wreg     unsigned char 
 26179 ;; Auto vars:     Size  Location     Type
 26180 ;;  on              1    1[BANK0 ] unsigned char 
 26181 ;; Return value:  Size  Location     Type
 26182 ;;		None               void
 26183 ;; Registers used:
 26184 ;;		wreg, status,2, status,0
 26185 ;; Tracked objects:
 26186 ;;		On entry : 0/0
 26187 ;;		On exit  : 0/0
 26188 ;;		Unchanged: 0/0
 26189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26193 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26194 ;;Total ram usage:        2 bytes
 26195 ;; Hardware stack levels used:    1
 26196 ;; Hardware stack levels required when called:    2
 26197 ;; This function calls:
 26198 ;;		Nothing
 26199 ;; This function is called by:
 26200 ;;		_litterlanguage_pause
 26201 ;;		_litterlanguage_stop
 26202 ;;		_exe_instruction
 26203 ;; This function uses a non-reentrant model
 26204 ;;
 26205                           psect	text3292
 26206                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26207                           	line	441
 26208                           	global	__size_of_set_Dryer
 26209  0011                     	__size_of_set_Dryer	equ	__end_of_set_Dryer-_set_Dryer
 26210                           	
 26211  290F                     _set_Dryer:	
 26212                           	opt	stack 10
 26213                           ; Regs used in _set_Dryer: [wreg+status,2+status,0]
 26214                           ;set_Dryer@on stored from wreg
 26215  290F  0020               	movlb 0	; select bank0
 26216  2910  00A2               	movwf	(set_Dryer@on)
 26217                           	line	442
 26218                           	
 26219  2911                     l36697:	
 26220                           ;catgenie120.c: 442: if (on)
 26221  2911  0822               	movf	(set_Dryer@on),w
 26222  2912  1D03               	skipz
 26223  2913  2915               	goto	u9310
 26224  2914  2918               	goto	l36701
 26225  2915                     u9310:
 26226                           	line	443
 26227                           	
 26228  2915                     l36699:	
 26229                           ;catgenie120.c: 443: LATD |= (1U << (2));
 26230  2915  0022               	movlb 2	; select bank2
 26231  2916  150F               	bsf	(271)^0100h+(2/8),(2)&7	;volatile
 26232  2917  291F               	goto	l10963
 26233                           	line	444
 26234                           	
 26235  2918                     l10961:	
 26236                           	line	445
 26237                           	
 26238  2918                     l36701:	
 26239                           ;catgenie120.c: 444: else
 26240                           ;catgenie120.c: 445: LATD &= ~(1U << (2));
 26241  2918  30FB               	movlw	(0FBh)
 26242  2919  0020               	movlb 0	; select bank0
 26243  291A  00A1               	movwf	(??_set_Dryer+0)+0
 26244  291B  0821               	movf	(??_set_Dryer+0)+0,w
 26245  291C  0022               	movlb 2	; select bank2
 26246  291D  058F               	andwf	(271)^0100h,f	;volatile
 26247  291E  291F               	goto	l10963
 26248                           	
 26249  291F                     l10962:	
 26250                           	line	446
 26251                           	
 26252  291F                     l10963:	
 26253  291F  0008               	return
 26254                           	opt stack 0
 26255                           GLOBAL	__end_of_set_Dryer
 26256  2920                     	__end_of_set_Dryer:
 26257 ;; =============== function _set_Dryer ends ============
 26258                           
 26259                           	signat	_set_Dryer,4216
 26260                           	global	_get_Dryer
 26261                           psect	text3293,local,class=CODE,delta=2
 26262                           global __ptext3293
 26263  37D3                     __ptext3293:
 26264                           
 26265 ;; *************** function _get_Dryer *****************
 26266 ;; Defined at:
 26267 ;;		line 450 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26268 ;; Parameters:    Size  Location     Type
 26269 ;;		None
 26270 ;; Auto vars:     Size  Location     Type
 26271 ;;		None
 26272 ;; Return value:  Size  Location     Type
 26273 ;;                  1    wreg      unsigned char 
 26274 ;; Registers used:
 26275 ;;		wreg, status,2
 26276 ;; Tracked objects:
 26277 ;;		On entry : 0/0
 26278 ;;		On exit  : 0/0
 26279 ;;		Unchanged: 0/0
 26280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26285 ;;Total ram usage:        0 bytes
 26286 ;; Hardware stack levels used:    1
 26287 ;; Hardware stack levels required when called:    2
 26288 ;; This function calls:
 26289 ;;		Nothing
 26290 ;; This function is called by:
 26291 ;;		_litterlanguage_pause
 26292 ;; This function uses a non-reentrant model
 26293 ;;
 26294                           psect	text3293
 26295                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26296                           	line	450
 26297                           	global	__size_of_get_Dryer
 26298  0005                     	__size_of_get_Dryer	equ	__end_of_get_Dryer-_get_Dryer
 26299                           	
 26300  37D3                     _get_Dryer:	
 26301                           	opt	stack 10
 26302                           ; Regs used in _get_Dryer: [wreg+status,2]
 26303                           	line	451
 26304                           	
 26305  37D3                     l34079:	
 26306                           ;catgenie120.c: 451: return (LATD & (1U << (2)));
 26307  37D3  0022               	movlb 2	; select bank2
 26308  37D4  080F               	movf	(271)^0100h,w	;volatile
 26309  37D5  3904               	andlw	04h
 26310  37D6  2FD7               	goto	l10966
 26311                           	
 26312  37D7                     l34081:	
 26313                           	line	452
 26314                           	
 26315  37D7                     l10966:	
 26316  37D7  0008               	return
 26317                           	opt stack 0
 26318                           GLOBAL	__end_of_get_Dryer
 26319  37D8                     	__end_of_get_Dryer:
 26320 ;; =============== function _get_Dryer ends ============
 26321                           
 26322                           	signat	_get_Dryer,89
 26323                           	global	_set_Pump
 26324                           psect	text3294,local,class=CODE,delta=2
 26325                           global __ptext3294
 26326  28FE                     __ptext3294:
 26327                           
 26328 ;; *************** function _set_Pump *****************
 26329 ;; Defined at:
 26330 ;;		line 426 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26331 ;; Parameters:    Size  Location     Type
 26332 ;;  on              1    wreg     unsigned char 
 26333 ;; Auto vars:     Size  Location     Type
 26334 ;;  on              1    1[BANK0 ] unsigned char 
 26335 ;; Return value:  Size  Location     Type
 26336 ;;		None               void
 26337 ;; Registers used:
 26338 ;;		wreg, status,2, status,0
 26339 ;; Tracked objects:
 26340 ;;		On entry : 0/0
 26341 ;;		On exit  : 0/0
 26342 ;;		Unchanged: 0/0
 26343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26348 ;;Total ram usage:        2 bytes
 26349 ;; Hardware stack levels used:    1
 26350 ;; Hardware stack levels required when called:    2
 26351 ;; This function calls:
 26352 ;;		Nothing
 26353 ;; This function is called by:
 26354 ;;		_litterlanguage_pause
 26355 ;;		_litterlanguage_stop
 26356 ;;		_exe_instruction
 26357 ;; This function uses a non-reentrant model
 26358 ;;
 26359                           psect	text3294
 26360                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26361                           	line	426
 26362                           	global	__size_of_set_Pump
 26363  0011                     	__size_of_set_Pump	equ	__end_of_set_Pump-_set_Pump
 26364                           	
 26365  28FE                     _set_Pump:	
 26366                           	opt	stack 10
 26367                           ; Regs used in _set_Pump: [wreg+status,2+status,0]
 26368                           ;set_Pump@on stored from wreg
 26369  28FE  0020               	movlb 0	; select bank0
 26370  28FF  00A2               	movwf	(set_Pump@on)
 26371                           	line	427
 26372                           	
 26373  2900                     l36691:	
 26374                           ;catgenie120.c: 427: if (on)
 26375  2900  0822               	movf	(set_Pump@on),w
 26376  2901  1D03               	skipz
 26377  2902  2904               	goto	u9300
 26378  2903  2907               	goto	l36695
 26379  2904                     u9300:
 26380                           	line	428
 26381                           	
 26382  2904                     l36693:	
 26383                           ;catgenie120.c: 428: LATD |= (1U << (1));
 26384  2904  0022               	movlb 2	; select bank2
 26385  2905  148F               	bsf	(271)^0100h+(1/8),(1)&7	;volatile
 26386  2906  290E               	goto	l10955
 26387                           	line	429
 26388                           	
 26389  2907                     l10953:	
 26390                           	line	430
 26391                           	
 26392  2907                     l36695:	
 26393                           ;catgenie120.c: 429: else
 26394                           ;catgenie120.c: 430: LATD &= ~(1U << (1));
 26395  2907  30FD               	movlw	(0FDh)
 26396  2908  0020               	movlb 0	; select bank0
 26397  2909  00A1               	movwf	(??_set_Pump+0)+0
 26398  290A  0821               	movf	(??_set_Pump+0)+0,w
 26399  290B  0022               	movlb 2	; select bank2
 26400  290C  058F               	andwf	(271)^0100h,f	;volatile
 26401  290D  290E               	goto	l10955
 26402                           	
 26403  290E                     l10954:	
 26404                           	line	431
 26405                           	
 26406  290E                     l10955:	
 26407  290E  0008               	return
 26408                           	opt stack 0
 26409                           GLOBAL	__end_of_set_Pump
 26410  290F                     	__end_of_set_Pump:
 26411 ;; =============== function _set_Pump ends ============
 26412                           
 26413                           	signat	_set_Pump,4216
 26414                           	global	_get_Dosage
 26415                           psect	text3295,local,class=CODE,delta=2
 26416                           global __ptext3295
 26417  37CE                     __ptext3295:
 26418                           
 26419 ;; *************** function _get_Dosage *****************
 26420 ;; Defined at:
 26421 ;;		line 420 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26422 ;; Parameters:    Size  Location     Type
 26423 ;;		None
 26424 ;; Auto vars:     Size  Location     Type
 26425 ;;		None
 26426 ;; Return value:  Size  Location     Type
 26427 ;;                  1    wreg      unsigned char 
 26428 ;; Registers used:
 26429 ;;		wreg, status,2
 26430 ;; Tracked objects:
 26431 ;;		On entry : 0/0
 26432 ;;		On exit  : 0/0
 26433 ;;		Unchanged: 0/0
 26434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26439 ;;Total ram usage:        0 bytes
 26440 ;; Hardware stack levels used:    1
 26441 ;; Hardware stack levels required when called:    2
 26442 ;; This function calls:
 26443 ;;		Nothing
 26444 ;; This function is called by:
 26445 ;;		_litterlanguage_pause
 26446 ;;		_wait_instruction
 26447 ;; This function uses a non-reentrant model
 26448 ;;
 26449                           psect	text3295
 26450                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26451                           	line	420
 26452                           	global	__size_of_get_Dosage
 26453  0005                     	__size_of_get_Dosage	equ	__end_of_get_Dosage-_get_Dosage
 26454                           	
 26455  37CE                     _get_Dosage:	
 26456                           	opt	stack 11
 26457                           ; Regs used in _get_Dosage: [wreg+status,2]
 26458                           	line	421
 26459                           	
 26460  37CE                     l36687:	
 26461                           ;catgenie120.c: 421: return (LATD & (1U << (3)));
 26462  37CE  0022               	movlb 2	; select bank2
 26463  37CF  080F               	movf	(271)^0100h,w	;volatile
 26464  37D0  3908               	andlw	08h
 26465  37D1  2FD2               	goto	l10950
 26466                           	
 26467  37D2                     l36689:	
 26468                           	line	422
 26469                           	
 26470  37D2                     l10950:	
 26471  37D2  0008               	return
 26472                           	opt stack 0
 26473                           GLOBAL	__end_of_get_Dosage
 26474  37D3                     	__end_of_get_Dosage:
 26475 ;; =============== function _get_Dosage ends ============
 26476                           
 26477                           	signat	_get_Dosage,89
 26478                           	global	_water_fill
 26479                           psect	text3296,local,class=CODE,delta=2
 26480                           global __ptext3296
 26481  297E                     __ptext3296:
 26482                           
 26483 ;; *************** function _water_fill *****************
 26484 ;; Defined at:
 26485 ;;		line 238 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 26486 ;; Parameters:    Size  Location     Type
 26487 ;;  fill            1    wreg     unsigned char 
 26488 ;; Auto vars:     Size  Location     Type
 26489 ;;  fill            1    1[BANK0 ] unsigned char 
 26490 ;; Return value:  Size  Location     Type
 26491 ;;		None               void
 26492 ;; Registers used:
 26493 ;;		wreg, status,2, status,0
 26494 ;; Tracked objects:
 26495 ;;		On entry : 0/0
 26496 ;;		On exit  : 0/0
 26497 ;;		Unchanged: 0/0
 26498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26502 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26503 ;;Total ram usage:        2 bytes
 26504 ;; Hardware stack levels used:    1
 26505 ;; Hardware stack levels required when called:    2
 26506 ;; This function calls:
 26507 ;;		Nothing
 26508 ;; This function is called by:
 26509 ;;		_litterlanguage_pause
 26510 ;;		_litterlanguage_stop
 26511 ;;		_watersensor_event
 26512 ;;		_exe_instruction
 26513 ;; This function uses a non-reentrant model
 26514 ;;
 26515                           psect	text3296
 26516                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 26517                           	line	238
 26518                           	global	__size_of_water_fill
 26519  0016                     	__size_of_water_fill	equ	__end_of_water_fill-_water_fill
 26520                           	
 26521  297E                     _water_fill:	
 26522                           	opt	stack 10
 26523                           ; Regs used in _water_fill: [wreg+status,2+status,0]
 26524                           ;water_fill@fill stored from wreg
 26525  297E  0020               	movlb 0	; select bank0
 26526  297F  00A2               	movwf	(water_fill@fill)
 26527                           	line	239
 26528                           	
 26529  2980                     l36679:	
 26530                           ;water.c: 239: filling = fill;
 26531  2980  116D               	bcf	(_filling/8),(_filling)&7
 26532  2981  1C22               	btfss	(water_fill@fill),0
 26533  2982  2984               	goto	u9285
 26534  2983  156D               	bsf	(_filling/8),(_filling)&7
 26535  2984                     u9285:
 26536                           
 26537                           	line	241
 26538                           	
 26539  2984                     l36681:	
 26540                           ;water.c: 241: if (filling) {
 26541  2984  0020               	movlb 0	; select bank0
 26542  2985  1D6D               	btfss	(_filling/8),(_filling)&7
 26543  2986  2988               	goto	u9291
 26544  2987  2989               	goto	u9290
 26545  2988                     u9291:
 26546  2988  298C               	goto	l36685
 26547  2989                     u9290:
 26548                           	line	243
 26549                           	
 26550  2989                     l36683:	
 26551                           ;water.c: 243: LATD |= (1U << (0));
 26552  2989  0022               	movlb 2	; select bank2
 26553  298A  140F               	bsf	(271)^0100h+(0/8),(0)&7	;volatile
 26554                           	line	244
 26555                           ;water.c: 244: } else {
 26556  298B  2993               	goto	l23482
 26557                           	
 26558  298C                     l23480:	
 26559                           	line	246
 26560                           	
 26561  298C                     l36685:	
 26562                           ;water.c: 246: LATD &= ~(1U << (0));
 26563  298C  30FE               	movlw	(0FEh)
 26564  298D  0020               	movlb 0	; select bank0
 26565  298E  00A1               	movwf	(??_water_fill+0)+0
 26566  298F  0821               	movf	(??_water_fill+0)+0,w
 26567  2990  0022               	movlb 2	; select bank2
 26568  2991  058F               	andwf	(271)^0100h,f	;volatile
 26569  2992  2993               	goto	l23482
 26570                           	line	247
 26571                           	
 26572  2993                     l23481:	
 26573                           	line	248
 26574                           	
 26575  2993                     l23482:	
 26576  2993  0008               	return
 26577                           	opt stack 0
 26578                           GLOBAL	__end_of_water_fill
 26579  2994                     	__end_of_water_fill:
 26580 ;; =============== function _water_fill ends ============
 26581                           
 26582                           	signat	_water_fill,4216
 26583                           	global	_set_Arm
 26584                           psect	text3297,local,class=CODE,delta=2
 26585                           global __ptext3297
 26586  2B23                     __ptext3297:
 26587                           
 26588 ;; *************** function _set_Arm *****************
 26589 ;; Defined at:
 26590 ;;		line 380 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26591 ;; Parameters:    Size  Location     Type
 26592 ;;  mode            1    wreg     unsigned char 
 26593 ;; Auto vars:     Size  Location     Type
 26594 ;;  mode            1    1[BANK0 ] unsigned char 
 26595 ;; Return value:  Size  Location     Type
 26596 ;;		None               void
 26597 ;; Registers used:
 26598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 26599 ;; Tracked objects:
 26600 ;;		On entry : 0/0
 26601 ;;		On exit  : 0/0
 26602 ;;		Unchanged: 0/0
 26603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26608 ;;Total ram usage:        2 bytes
 26609 ;; Hardware stack levels used:    1
 26610 ;; Hardware stack levels required when called:    2
 26611 ;; This function calls:
 26612 ;;		Nothing
 26613 ;; This function is called by:
 26614 ;;		_litterlanguage_pause
 26615 ;;		_litterlanguage_stop
 26616 ;;		_exe_instruction
 26617 ;; This function uses a non-reentrant model
 26618 ;;
 26619                           psect	text3297
 26620                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26621                           	line	380
 26622                           	global	__size_of_set_Arm
 26623  0024                     	__size_of_set_Arm	equ	__end_of_set_Arm-_set_Arm
 26624                           	
 26625  2B23                     _set_Arm:	
 26626                           	opt	stack 10
 26627                           ; Regs used in _set_Arm: [wreg-fsr0h+status,2+status,0]
 26628                           ;set_Arm@mode stored from wreg
 26629  2B23  0020               	movlb 0	; select bank0
 26630  2B24  00A2               	movwf	(set_Arm@mode)
 26631                           	line	381
 26632                           	
 26633  2B25                     l36667:	
 26634                           ;catgenie120.c: 381: switch (mode) {
 26635  2B25  2B3A               	goto	l36677
 26636                           	line	382
 26637                           ;catgenie120.c: 382: default:
 26638                           	
 26639  2B26                     l10930:	
 26640  2B26  2B27               	goto	l36669
 26641                           	line	383
 26642                           ;catgenie120.c: 383: case 0:
 26643                           	
 26644  2B27                     l10931:	
 26645                           	line	384
 26646                           	
 26647  2B27                     l36669:	
 26648                           ;catgenie120.c: 384: LATD &= ~((1U << (6)) | (1U << (7)));
 26649  2B27  303F               	movlw	(03Fh)
 26650  2B28  00A1               	movwf	(??_set_Arm+0)+0
 26651  2B29  0821               	movf	(??_set_Arm+0)+0,w
 26652  2B2A  0022               	movlb 2	; select bank2
 26653  2B2B  058F               	andwf	(271)^0100h,f	;volatile
 26654                           	line	385
 26655                           ;catgenie120.c: 385: break;
 26656  2B2C  2B46               	goto	l10935
 26657                           	line	386
 26658                           ;catgenie120.c: 386: case 2:
 26659                           	
 26660  2B2D                     l10933:	
 26661                           	line	387
 26662                           	
 26663  2B2D                     l36671:	
 26664                           ;catgenie120.c: 387: LATD &= ~(1U << (6));
 26665  2B2D  30BF               	movlw	(0BFh)
 26666  2B2E  0020               	movlb 0	; select bank0
 26667  2B2F  00A1               	movwf	(??_set_Arm+0)+0
 26668  2B30  0821               	movf	(??_set_Arm+0)+0,w
 26669  2B31  0022               	movlb 2	; select bank2
 26670  2B32  058F               	andwf	(271)^0100h,f	;volatile
 26671                           	line	388
 26672                           	
 26673  2B33                     l36673:	
 26674                           ;catgenie120.c: 388: LATD |= (1U << (7));
 26675  2B33  178F               	bsf	(271)^0100h+(7/8),(7)&7	;volatile
 26676                           	line	389
 26677                           ;catgenie120.c: 389: break;
 26678  2B34  2B46               	goto	l10935
 26679                           	line	390
 26680                           ;catgenie120.c: 390: case 1:
 26681                           	
 26682  2B35                     l10934:	
 26683                           	line	391
 26684                           ;catgenie120.c: 391: LATD |= (1U << (6));
 26685  2B35  0022               	movlb 2	; select bank2
 26686  2B36  170F               	bsf	(271)^0100h+(6/8),(6)&7	;volatile
 26687                           	line	392
 26688                           ;catgenie120.c: 392: LATD |= (1U << (7));
 26689  2B37  178F               	bsf	(271)^0100h+(7/8),(7)&7	;volatile
 26690                           	line	393
 26691                           ;catgenie120.c: 393: break;
 26692  2B38  2B46               	goto	l10935
 26693                           	line	394
 26694                           	
 26695  2B39                     l36675:	
 26696                           ;catgenie120.c: 394: }
 26697  2B39  2B46               	goto	l10935
 26698                           	line	381
 26699                           	
 26700  2B3A                     l10929:	
 26701                           	
 26702  2B3A                     l36677:	
 26703  2B3A  0020               	movlb 0	; select bank0
 26704  2B3B  0822               	movf	(set_Arm@mode),w
 26705                           	; Switch size 1, requested type "space"
 26706                           ; Number of cases is 3, Range of values is 0 to 2
 26707                           ; switch strategies available:
 26708                           ; Name         Instructions Cycles
 26709                           ; simple_byte           10     6 (average)
 26710                           ; direct_byte           12     6 (fixed)
 26711                           ; jumptable            260     6 (fixed)
 26712                           ; rangetable             7     4 (fixed)
 26713                           ; spacedrange           11     6 (fixed)
 26714                           ; locatedrange           3     3 (fixed)
 26715                           ;	Chosen strategy is simple_byte
 26716                           
 26717                           	opt asmopt_off
 26718  2B3C  3A00               	xorlw	0^0	; case 0
 26719  2B3D  1903               	skipnz
 26720  2B3E  2B27               	goto	l36669
 26721  2B3F  3A01               	xorlw	1^0	; case 1
 26722  2B40  1903               	skipnz
 26723  2B41  2B35               	goto	l10934
 26724  2B42  3A03               	xorlw	2^1	; case 2
 26725  2B43  1903               	skipnz
 26726  2B44  2B2D               	goto	l36671
 26727  2B45  2B27               	goto	l36669
 26728                           	opt asmopt_on
 26729                           
 26730                           	line	394
 26731                           	
 26732  2B46                     l10932:	
 26733                           	line	395
 26734                           	
 26735  2B46                     l10935:	
 26736  2B46  0008               	return
 26737                           	opt stack 0
 26738                           GLOBAL	__end_of_set_Arm
 26739  2B47                     	__end_of_set_Arm:
 26740 ;; =============== function _set_Arm ends ============
 26741                           
 26742                           	signat	_set_Arm,4216
 26743                           	global	_get_Arm
 26744                           psect	text3298,local,class=CODE,delta=2
 26745                           global __ptext3298
 26746  2A9F                     __ptext3298:
 26747                           
 26748 ;; *************** function _get_Arm *****************
 26749 ;; Defined at:
 26750 ;;		line 399 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26751 ;; Parameters:    Size  Location     Type
 26752 ;;		None
 26753 ;; Auto vars:     Size  Location     Type
 26754 ;;		None
 26755 ;; Return value:  Size  Location     Type
 26756 ;;                  1    wreg      unsigned char 
 26757 ;; Registers used:
 26758 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 26759 ;; Tracked objects:
 26760 ;;		On entry : 0/0
 26761 ;;		On exit  : 0/0
 26762 ;;		Unchanged: 0/0
 26763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26767 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26768 ;;Total ram usage:        2 bytes
 26769 ;; Hardware stack levels used:    1
 26770 ;; Hardware stack levels required when called:    2
 26771 ;; This function calls:
 26772 ;;		Nothing
 26773 ;; This function is called by:
 26774 ;;		_litterlanguage_pause
 26775 ;; This function uses a non-reentrant model
 26776 ;;
 26777                           psect	text3298
 26778                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26779                           	line	399
 26780                           	global	__size_of_get_Arm
 26781  001E                     	__size_of_get_Arm	equ	__end_of_get_Arm-_get_Arm
 26782                           	
 26783  2A9F                     _get_Arm:	
 26784                           	opt	stack 10
 26785                           ; Regs used in _get_Arm: [wreg-fsr0h+status,2+status,0]
 26786                           	line	400
 26787                           	
 26788  2A9F                     l34027:	
 26789                           ;catgenie120.c: 400: switch (LATD & ((1U << (6)) | (1U << (7)))) {
 26790  2A9F  2AA7               	goto	l34039
 26791                           	line	401
 26792                           ;catgenie120.c: 401: case (1U << (7)):
 26793                           	
 26794  2AA0                     l10939:	
 26795                           	line	402
 26796                           	
 26797  2AA0                     l34029:	
 26798                           ;catgenie120.c: 402: return (2);
 26799  2AA0  3002               	movlw	(02h)
 26800  2AA1  2ABC               	goto	l10940
 26801                           	
 26802  2AA2                     l34031:	
 26803  2AA2  2ABC               	goto	l10940
 26804                           	line	403
 26805                           ;catgenie120.c: 403: case (1U << (7)) | (1U << (6)):
 26806                           	
 26807  2AA3                     l10941:	
 26808                           	line	404
 26809                           	
 26810  2AA3                     l34033:	
 26811                           ;catgenie120.c: 404: return (1);
 26812  2AA3  3001               	movlw	(01h)
 26813  2AA4  2ABC               	goto	l10940
 26814                           	
 26815  2AA5                     l34035:	
 26816  2AA5  2ABC               	goto	l10940
 26817                           	line	405
 26818                           	
 26819  2AA6                     l34037:	
 26820                           ;catgenie120.c: 405: }
 26821  2AA6  2ABA               	goto	l34041
 26822                           	line	400
 26823                           	
 26824  2AA7                     l10938:	
 26825                           	
 26826  2AA7                     l34039:	
 26827  2AA7  0022               	movlb 2	; select bank2
 26828  2AA8  080F               	movf	(271)^0100h,w	;volatile
 26829  2AA9  39C0               	andlw	0C0h
 26830  2AAA  0020               	movlb 0	; select bank0
 26831  2AAB  00A1               	movwf	(??_get_Arm+0)+0
 26832  2AAC  01A2               	clrf	(??_get_Arm+0)+0+1
 26833                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 26834                           ; Switch size 1, requested type "space"
 26835                           ; Number of cases is 1, Range of values is 0 to 0
 26836                           ; switch strategies available:
 26837                           ; Name         Instructions Cycles
 26838                           ; simple_byte            4     3 (average)
 26839                           ; direct_byte            8     6 (fixed)
 26840                           ; jumptable            260     6 (fixed)
 26841                           ; rangetable             5     4 (fixed)
 26842                           ; spacedrange            7     6 (fixed)
 26843                           ; locatedrange           1     3 (fixed)
 26844                           ;	Chosen strategy is simple_byte
 26845                           
 26846  2AAD  0822               	movf 1+(??_get_Arm+0)+0,w
 26847                           	opt asmopt_off
 26848  2AAE  3A00               	xorlw	0^0	; case 0
 26849  2AAF  1903               	skipnz
 26850  2AB0  2AB2               	goto	l38937
 26851  2AB1  2ABA               	goto	l34041
 26852                           	opt asmopt_on
 26853                           	
 26854  2AB2                     l38937:	
 26855                           ; Switch size 1, requested type "space"
 26856                           ; Number of cases is 2, Range of values is 128 to 192
 26857                           ; switch strategies available:
 26858                           ; Name         Instructions Cycles
 26859                           ; simple_byte            7     4 (average)
 26860                           ; direct_byte          139     9 (fixed)
 26861                           ; jumptable            263     9 (fixed)
 26862                           ;	Chosen strategy is simple_byte
 26863                           
 26864  2AB2  0821               	movf 0+(??_get_Arm+0)+0,w
 26865                           	opt asmopt_off
 26866  2AB3  3A80               	xorlw	128^0	; case 128
 26867  2AB4  1903               	skipnz
 26868  2AB5  2AA0               	goto	l34029
 26869  2AB6  3A40               	xorlw	192^128	; case 192
 26870  2AB7  1903               	skipnz
 26871  2AB8  2AA3               	goto	l34033
 26872  2AB9  2ABA               	goto	l34041
 26873                           	opt asmopt_on
 26874                           
 26875                           	line	405
 26876                           	
 26877  2ABA                     l10942:	
 26878                           	line	406
 26879                           	
 26880  2ABA                     l34041:	
 26881                           ;catgenie120.c: 406: return (0);
 26882  2ABA  3000               	movlw	(0)
 26883  2ABB  2ABC               	goto	l10940
 26884                           	
 26885  2ABC                     l34043:	
 26886                           	line	407
 26887                           	
 26888  2ABC                     l10940:	
 26889  2ABC  0008               	return
 26890                           	opt stack 0
 26891                           GLOBAL	__end_of_get_Arm
 26892  2ABD                     	__end_of_get_Arm:
 26893 ;; =============== function _get_Arm ends ============
 26894                           
 26895                           	signat	_get_Arm,89
 26896                           	global	_set_Bowl
 26897                           psect	text3299,local,class=CODE,delta=2
 26898                           global __ptext3299
 26899  2AFF                     __ptext3299:
 26900                           
 26901 ;; *************** function _set_Bowl *****************
 26902 ;; Defined at:
 26903 ;;		line 349 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26904 ;; Parameters:    Size  Location     Type
 26905 ;;  mode            1    wreg     unsigned char 
 26906 ;; Auto vars:     Size  Location     Type
 26907 ;;  mode            1    1[BANK0 ] unsigned char 
 26908 ;; Return value:  Size  Location     Type
 26909 ;;		None               void
 26910 ;; Registers used:
 26911 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 26912 ;; Tracked objects:
 26913 ;;		On entry : 0/0
 26914 ;;		On exit  : 0/0
 26915 ;;		Unchanged: 0/0
 26916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26921 ;;Total ram usage:        2 bytes
 26922 ;; Hardware stack levels used:    1
 26923 ;; Hardware stack levels required when called:    2
 26924 ;; This function calls:
 26925 ;;		Nothing
 26926 ;; This function is called by:
 26927 ;;		_litterlanguage_pause
 26928 ;;		_litterlanguage_stop
 26929 ;;		_exe_instruction
 26930 ;; This function uses a non-reentrant model
 26931 ;;
 26932                           psect	text3299
 26933                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 26934                           	line	349
 26935                           	global	__size_of_set_Bowl
 26936  0024                     	__size_of_set_Bowl	equ	__end_of_set_Bowl-_set_Bowl
 26937                           	
 26938  2AFF                     _set_Bowl:	
 26939                           	opt	stack 10
 26940                           ; Regs used in _set_Bowl: [wreg-fsr0h+status,2+status,0]
 26941                           ;set_Bowl@mode stored from wreg
 26942  2AFF  0020               	movlb 0	; select bank0
 26943  2B00  00A2               	movwf	(set_Bowl@mode)
 26944                           	line	350
 26945                           	
 26946  2B01                     l36655:	
 26947                           ;catgenie120.c: 350: switch (mode) {
 26948  2B01  2B16               	goto	l36665
 26949                           	line	351
 26950                           ;catgenie120.c: 351: default:
 26951                           	
 26952  2B02                     l10914:	
 26953  2B02  2B03               	goto	l36657
 26954                           	line	352
 26955                           ;catgenie120.c: 352: case 0:
 26956                           	
 26957  2B03                     l10915:	
 26958                           	line	353
 26959                           	
 26960  2B03                     l36657:	
 26961                           ;catgenie120.c: 353: LATD &= ~((1U << (4)) | (1U << (5)));
 26962  2B03  30CF               	movlw	(0CFh)
 26963  2B04  00A1               	movwf	(??_set_Bowl+0)+0
 26964  2B05  0821               	movf	(??_set_Bowl+0)+0,w
 26965  2B06  0022               	movlb 2	; select bank2
 26966  2B07  058F               	andwf	(271)^0100h,f	;volatile
 26967                           	line	354
 26968                           ;catgenie120.c: 354: break;
 26969  2B08  2B22               	goto	l10919
 26970                           	line	355
 26971                           ;catgenie120.c: 355: case 1:
 26972                           	
 26973  2B09                     l10917:	
 26974                           	line	356
 26975                           ;catgenie120.c: 356: LATD |= (1U << (4));
 26976  2B09  0022               	movlb 2	; select bank2
 26977  2B0A  160F               	bsf	(271)^0100h+(4/8),(4)&7	;volatile
 26978                           	line	357
 26979                           ;catgenie120.c: 357: LATD |= (1U << (5));
 26980  2B0B  168F               	bsf	(271)^0100h+(5/8),(5)&7	;volatile
 26981                           	line	358
 26982                           ;catgenie120.c: 358: break;
 26983  2B0C  2B22               	goto	l10919
 26984                           	line	359
 26985                           ;catgenie120.c: 359: case 2:
 26986                           	
 26987  2B0D                     l10918:	
 26988                           	line	360
 26989                           	
 26990  2B0D                     l36659:	
 26991                           ;catgenie120.c: 360: LATD &= ~(1U << (4));
 26992  2B0D  30EF               	movlw	(0EFh)
 26993  2B0E  0020               	movlb 0	; select bank0
 26994  2B0F  00A1               	movwf	(??_set_Bowl+0)+0
 26995  2B10  0821               	movf	(??_set_Bowl+0)+0,w
 26996  2B11  0022               	movlb 2	; select bank2
 26997  2B12  058F               	andwf	(271)^0100h,f	;volatile
 26998                           	line	361
 26999                           	
 27000  2B13                     l36661:	
 27001                           ;catgenie120.c: 361: LATD |= (1U << (5));
 27002  2B13  168F               	bsf	(271)^0100h+(5/8),(5)&7	;volatile
 27003                           	line	362
 27004                           ;catgenie120.c: 362: break;
 27005  2B14  2B22               	goto	l10919
 27006                           	line	363
 27007                           	
 27008  2B15                     l36663:	
 27009                           ;catgenie120.c: 363: }
 27010  2B15  2B22               	goto	l10919
 27011                           	line	350
 27012                           	
 27013  2B16                     l10913:	
 27014                           	
 27015  2B16                     l36665:	
 27016  2B16  0020               	movlb 0	; select bank0
 27017  2B17  0822               	movf	(set_Bowl@mode),w
 27018                           	; Switch size 1, requested type "space"
 27019                           ; Number of cases is 3, Range of values is 0 to 2
 27020                           ; switch strategies available:
 27021                           ; Name         Instructions Cycles
 27022                           ; simple_byte           10     6 (average)
 27023                           ; direct_byte           12     6 (fixed)
 27024                           ; jumptable            260     6 (fixed)
 27025                           ; rangetable             7     4 (fixed)
 27026                           ; spacedrange           11     6 (fixed)
 27027                           ; locatedrange           3     3 (fixed)
 27028                           ;	Chosen strategy is simple_byte
 27029                           
 27030                           	opt asmopt_off
 27031  2B18  3A00               	xorlw	0^0	; case 0
 27032  2B19  1903               	skipnz
 27033  2B1A  2B03               	goto	l36657
 27034  2B1B  3A01               	xorlw	1^0	; case 1
 27035  2B1C  1903               	skipnz
 27036  2B1D  2B09               	goto	l10917
 27037  2B1E  3A03               	xorlw	2^1	; case 2
 27038  2B1F  1903               	skipnz
 27039  2B20  2B0D               	goto	l36659
 27040  2B21  2B03               	goto	l36657
 27041                           	opt asmopt_on
 27042                           
 27043                           	line	363
 27044                           	
 27045  2B22                     l10916:	
 27046                           	line	364
 27047                           	
 27048  2B22                     l10919:	
 27049  2B22  0008               	return
 27050                           	opt stack 0
 27051                           GLOBAL	__end_of_set_Bowl
 27052  2B23                     	__end_of_set_Bowl:
 27053 ;; =============== function _set_Bowl ends ============
 27054                           
 27055                           	signat	_set_Bowl,4216
 27056                           	global	_get_Bowl
 27057                           psect	text3300,local,class=CODE,delta=2
 27058                           global __ptext3300
 27059  2A81                     __ptext3300:
 27060                           
 27061 ;; *************** function _get_Bowl *****************
 27062 ;; Defined at:
 27063 ;;		line 368 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27064 ;; Parameters:    Size  Location     Type
 27065 ;;		None
 27066 ;; Auto vars:     Size  Location     Type
 27067 ;;		None
 27068 ;; Return value:  Size  Location     Type
 27069 ;;                  1    wreg      unsigned char 
 27070 ;; Registers used:
 27071 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27072 ;; Tracked objects:
 27073 ;;		On entry : 0/0
 27074 ;;		On exit  : 0/0
 27075 ;;		Unchanged: 0/0
 27076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27080 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27081 ;;Total ram usage:        2 bytes
 27082 ;; Hardware stack levels used:    1
 27083 ;; Hardware stack levels required when called:    2
 27084 ;; This function calls:
 27085 ;;		Nothing
 27086 ;; This function is called by:
 27087 ;;		_litterlanguage_pause
 27088 ;; This function uses a non-reentrant model
 27089 ;;
 27090                           psect	text3300
 27091                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27092                           	line	368
 27093                           	global	__size_of_get_Bowl
 27094  001E                     	__size_of_get_Bowl	equ	__end_of_get_Bowl-_get_Bowl
 27095                           	
 27096  2A81                     _get_Bowl:	
 27097                           	opt	stack 10
 27098                           ; Regs used in _get_Bowl: [wreg-fsr0h+status,2+status,0]
 27099                           	line	369
 27100                           	
 27101  2A81                     l33993:	
 27102                           ;catgenie120.c: 369: switch (LATD & ((1U << (4)) | (1U << (5)))) {
 27103  2A81  2A89               	goto	l34005
 27104                           	line	370
 27105                           ;catgenie120.c: 370: case (1U << (5)):
 27106                           	
 27107  2A82                     l10923:	
 27108                           	line	371
 27109                           	
 27110  2A82                     l33995:	
 27111                           ;catgenie120.c: 371: return (2);
 27112  2A82  3002               	movlw	(02h)
 27113  2A83  2A9E               	goto	l10924
 27114                           	
 27115  2A84                     l33997:	
 27116  2A84  2A9E               	goto	l10924
 27117                           	line	372
 27118                           ;catgenie120.c: 372: case (1U << (5)) | (1U << (4)):
 27119                           	
 27120  2A85                     l10925:	
 27121                           	line	373
 27122                           	
 27123  2A85                     l33999:	
 27124                           ;catgenie120.c: 373: return (1);
 27125  2A85  3001               	movlw	(01h)
 27126  2A86  2A9E               	goto	l10924
 27127                           	
 27128  2A87                     l34001:	
 27129  2A87  2A9E               	goto	l10924
 27130                           	line	374
 27131                           	
 27132  2A88                     l34003:	
 27133                           ;catgenie120.c: 374: }
 27134  2A88  2A9C               	goto	l34007
 27135                           	line	369
 27136                           	
 27137  2A89                     l10922:	
 27138                           	
 27139  2A89                     l34005:	
 27140  2A89  0022               	movlb 2	; select bank2
 27141  2A8A  080F               	movf	(271)^0100h,w	;volatile
 27142  2A8B  3930               	andlw	030h
 27143  2A8C  0020               	movlb 0	; select bank0
 27144  2A8D  00A1               	movwf	(??_get_Bowl+0)+0
 27145  2A8E  01A2               	clrf	(??_get_Bowl+0)+0+1
 27146                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 27147                           ; Switch size 1, requested type "space"
 27148                           ; Number of cases is 1, Range of values is 0 to 0
 27149                           ; switch strategies available:
 27150                           ; Name         Instructions Cycles
 27151                           ; simple_byte            4     3 (average)
 27152                           ; direct_byte            8     6 (fixed)
 27153                           ; jumptable            260     6 (fixed)
 27154                           ; rangetable             5     4 (fixed)
 27155                           ; spacedrange            7     6 (fixed)
 27156                           ; locatedrange           1     3 (fixed)
 27157                           ;	Chosen strategy is simple_byte
 27158                           
 27159  2A8F  0822               	movf 1+(??_get_Bowl+0)+0,w
 27160                           	opt asmopt_off
 27161  2A90  3A00               	xorlw	0^0	; case 0
 27162  2A91  1903               	skipnz
 27163  2A92  2A94               	goto	l38939
 27164  2A93  2A9C               	goto	l34007
 27165                           	opt asmopt_on
 27166                           	
 27167  2A94                     l38939:	
 27168                           ; Switch size 1, requested type "space"
 27169                           ; Number of cases is 2, Range of values is 32 to 48
 27170                           ; switch strategies available:
 27171                           ; Name         Instructions Cycles
 27172                           ; simple_byte            7     4 (average)
 27173                           ; direct_byte           43     9 (fixed)
 27174                           ; jumptable            263     9 (fixed)
 27175                           ;	Chosen strategy is simple_byte
 27176                           
 27177  2A94  0821               	movf 0+(??_get_Bowl+0)+0,w
 27178                           	opt asmopt_off
 27179  2A95  3A20               	xorlw	32^0	; case 32
 27180  2A96  1903               	skipnz
 27181  2A97  2A82               	goto	l33995
 27182  2A98  3A10               	xorlw	48^32	; case 48
 27183  2A99  1903               	skipnz
 27184  2A9A  2A85               	goto	l33999
 27185  2A9B  2A9C               	goto	l34007
 27186                           	opt asmopt_on
 27187                           
 27188                           	line	374
 27189                           	
 27190  2A9C                     l10926:	
 27191                           	line	375
 27192                           	
 27193  2A9C                     l34007:	
 27194                           ;catgenie120.c: 375: return (0);
 27195  2A9C  3000               	movlw	(0)
 27196  2A9D  2A9E               	goto	l10924
 27197                           	
 27198  2A9E                     l34009:	
 27199                           	line	376
 27200                           	
 27201  2A9E                     l10924:	
 27202  2A9E  0008               	return
 27203                           	opt stack 0
 27204                           GLOBAL	__end_of_get_Bowl
 27205  2A9F                     	__end_of_get_Bowl:
 27206 ;; =============== function _get_Bowl ends ============
 27207                           
 27208                           	signat	_get_Bowl,89
 27209                           	global	_litterlanguage_running
 27210                           psect	text3301,local,class=CODE,delta=2
 27211                           global __ptext3301
 27212  37F0                     __ptext3301:
 27213                           
 27214 ;; *************** function _litterlanguage_running *****************
 27215 ;; Defined at:
 27216 ;;		line 252 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 27217 ;; Parameters:    Size  Location     Type
 27218 ;;		None
 27219 ;; Auto vars:     Size  Location     Type
 27220 ;;		None
 27221 ;; Return value:  Size  Location     Type
 27222 ;;                  1    wreg      unsigned char 
 27223 ;; Registers used:
 27224 ;;		wreg, status,2, status,0
 27225 ;; Tracked objects:
 27226 ;;		On entry : 0/0
 27227 ;;		On exit  : 0/0
 27228 ;;		Unchanged: 0/0
 27229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27234 ;;Total ram usage:        0 bytes
 27235 ;; Hardware stack levels used:    1
 27236 ;; Hardware stack levels required when called:    2
 27237 ;; This function calls:
 27238 ;;		Nothing
 27239 ;; This function is called by:
 27240 ;;		_userinterface_work
 27241 ;;		_start_short
 27242 ;;		_start_long
 27243 ;; This function uses a non-reentrant model
 27244 ;;
 27245                           psect	text3301
 27246                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 27247                           	line	252
 27248                           	global	__size_of_litterlanguage_running
 27249  0007                     	__size_of_litterlanguage_running	equ	__end_of_litterlanguage_running-_litterlanguage_ru
                                 nning
 27250                           	
 27251  37F0                     _litterlanguage_running:	
 27252                           	opt	stack 11
 27253                           ; Regs used in _litterlanguage_running: [wreg+status,2+status,0]
 27254                           	line	253
 27255                           	
 27256  37F0                     l33989:	
 27257                           ;litterlanguage.c: 253: return (ins_state != 0);
 27258  37F0  3000               	movlw	0
 27259  37F1  0020               	movlb 0	; select bank0
 27260  37F2  08E5               	movf	(_ins_state),f
 27261  37F3  1D03               	skipz
 27262  37F4  3001               	movlw	1
 27263  37F5  2FF6               	goto	l4284
 27264                           	
 27265  37F6                     l33991:	
 27266                           	line	254
 27267                           	
 27268  37F6                     l4284:	
 27269  37F6  0008               	return
 27270                           	opt stack 0
 27271                           GLOBAL	__end_of_litterlanguage_running
 27272  37F7                     	__end_of_litterlanguage_running:
 27273 ;; =============== function _litterlanguage_running ends ============
 27274                           
 27275                           	signat	_litterlanguage_running,89
 27276                           	global	_set_Dosage
 27277                           psect	text3302,local,class=CODE,delta=2
 27278                           global __ptext3302
 27279  28ED                     __ptext3302:
 27280                           
 27281 ;; *************** function _set_Dosage *****************
 27282 ;; Defined at:
 27283 ;;		line 411 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27284 ;; Parameters:    Size  Location     Type
 27285 ;;  on              1    wreg     unsigned char 
 27286 ;; Auto vars:     Size  Location     Type
 27287 ;;  on              1    1[BANK0 ] unsigned char 
 27288 ;; Return value:  Size  Location     Type
 27289 ;;		None               void
 27290 ;; Registers used:
 27291 ;;		wreg, status,2, status,0
 27292 ;; Tracked objects:
 27293 ;;		On entry : 0/0
 27294 ;;		On exit  : 0/0
 27295 ;;		Unchanged: 0/0
 27296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27301 ;;Total ram usage:        2 bytes
 27302 ;; Hardware stack levels used:    1
 27303 ;; Hardware stack levels required when called:    2
 27304 ;; This function calls:
 27305 ;;		Nothing
 27306 ;; This function is called by:
 27307 ;;		_litterlanguage_work
 27308 ;;		_litterlanguage_pause
 27309 ;;		_litterlanguage_stop
 27310 ;;		_exe_instruction
 27311 ;; This function uses a non-reentrant model
 27312 ;;
 27313                           psect	text3302
 27314                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27315                           	line	411
 27316                           	global	__size_of_set_Dosage
 27317  0011                     	__size_of_set_Dosage	equ	__end_of_set_Dosage-_set_Dosage
 27318                           	
 27319  28ED                     _set_Dosage:	
 27320                           	opt	stack 10
 27321                           ; Regs used in _set_Dosage: [wreg+status,2+status,0]
 27322                           ;set_Dosage@on stored from wreg
 27323  28ED  0020               	movlb 0	; select bank0
 27324  28EE  00A2               	movwf	(set_Dosage@on)
 27325                           	line	412
 27326                           	
 27327  28EF                     l36649:	
 27328                           ;catgenie120.c: 412: if (on)
 27329  28EF  0822               	movf	(set_Dosage@on),w
 27330  28F0  1D03               	skipz
 27331  28F1  28F3               	goto	u9270
 27332  28F2  28F6               	goto	l36653
 27333  28F3                     u9270:
 27334                           	line	413
 27335                           	
 27336  28F3                     l36651:	
 27337                           ;catgenie120.c: 413: LATD |= (1U << (3));
 27338  28F3  0022               	movlb 2	; select bank2
 27339  28F4  158F               	bsf	(271)^0100h+(3/8),(3)&7	;volatile
 27340  28F5  28FD               	goto	l10947
 27341                           	line	414
 27342                           	
 27343  28F6                     l10945:	
 27344                           	line	415
 27345                           	
 27346  28F6                     l36653:	
 27347                           ;catgenie120.c: 414: else
 27348                           ;catgenie120.c: 415: LATD &= ~(1U << (3));
 27349  28F6  30F7               	movlw	(0F7h)
 27350  28F7  0020               	movlb 0	; select bank0
 27351  28F8  00A1               	movwf	(??_set_Dosage+0)+0
 27352  28F9  0821               	movf	(??_set_Dosage+0)+0,w
 27353  28FA  0022               	movlb 2	; select bank2
 27354  28FB  058F               	andwf	(271)^0100h,f	;volatile
 27355  28FC  28FD               	goto	l10947
 27356                           	
 27357  28FD                     l10946:	
 27358                           	line	416
 27359                           	
 27360  28FD                     l10947:	
 27361  28FD  0008               	return
 27362                           	opt stack 0
 27363                           GLOBAL	__end_of_set_Dosage
 27364  28FE                     	__end_of_set_Dosage:
 27365 ;; =============== function _set_Dosage ends ============
 27366                           
 27367                           	signat	_set_Dosage,4216
 27368                           	global	_timeoutnever
 27369                           psect	text3303,local,class=CODE,delta=2
 27370                           global __ptext3303
 27371  2A2C                     __ptext3303:
 27372                           
 27373 ;; *************** function _timeoutnever *****************
 27374 ;; Defined at:
 27375 ;;		line 156 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 27376 ;; Parameters:    Size  Location     Type
 27377 ;;  timer_p         2    4[BANK0 ] const PTR struct timer
 27378 ;;		 -> debouncer(6), debouncers(42), cattimer(6), autotimer(6), 
 27379 ;;		 -> holdtimeout(6), timer_autodose(6), timer_drain(6), timer_fill(6), 
 27380 ;;		 -> timer_waitins(6), 
 27381 ;; Auto vars:     Size  Location     Type
 27382 ;;		None
 27383 ;; Return value:  Size  Location     Type
 27384 ;;		None               void
 27385 ;; Registers used:
 27386 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27387 ;; Tracked objects:
 27388 ;;		On entry : 0/0
 27389 ;;		On exit  : 0/0
 27390 ;;		Unchanged: 0/0
 27391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27394 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27395 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 27396 ;;Total ram usage:        4 bytes
 27397 ;; Hardware stack levels used:    1
 27398 ;; Hardware stack levels required when called:    2
 27399 ;; This function calls:
 27400 ;;		Nothing
 27401 ;; This function is called by:
 27402 ;;		_litterlanguage_work
 27403 ;;		_litterlanguage_pause
 27404 ;;		_litterlanguage_stop
 27405 ;;		_watersensor_event
 27406 ;;		_exe_instruction
 27407 ;;		_wait_instruction
 27408 ;;		_userinterface_work
 27409 ;;		_catsensor_event
 27410 ;;		_process_button
 27411 ;;		_update_autotimer
 27412 ;;		_catgenie_work
 27413 ;;		_catsensor_work
 27414 ;; This function uses a non-reentrant model
 27415 ;;
 27416                           psect	text3303
 27417                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 27418                           	line	156
 27419                           	global	__size_of_timeoutnever
 27420  001C                     	__size_of_timeoutnever	equ	__end_of_timeoutnever-_timeoutnever
 27421                           	
 27422  2A2C                     _timeoutnever:	
 27423                           	opt	stack 11
 27424                           ; Regs used in _timeoutnever: [wreg+fsr1l-status,0]
 27425                           	line	157
 27426                           	
 27427  2A2C                     l36645:	
 27428                           ;timer.c: 157: timer_p->timer1 = 0xFFFF;
 27429  2A2C  0020               	movlb 0	; select bank0
 27430  2A2D  0825               	movf	(timeoutnever@timer_p),w
 27431  2A2E  0086               	movwf	fsr1l
 27432  2A2F  0826               	movf	(timeoutnever@timer_p+1),w
 27433  2A30  0087               	movwf	fsr1h
 27434                           
 27435  2A31  30FF               	movlw	low(0FFFFh)
 27436  2A32  3FC0               	movwi	[0]fsr1
 27437  2A33  30FF               	movlw	high(0FFFFh)
 27438  2A34  3FC1               	movwi	[1]fsr1
 27439                           	line	158
 27440                           	
 27441  2A35                     l36647:	
 27442                           ;timer.c: 158: timer_p->overflows = 0xFFFFFFFF;
 27443  2A35  0825               	movf	(timeoutnever@timer_p),w
 27444  2A36  3E02               	addlw	low(02h)
 27445  2A37  00A7               	movwf	(??_timeoutnever+0)+0
 27446  2A38  3000               	movlw	high(02h)
 27447  2A39  3D26               	addwfc	(timeoutnever@timer_p+1),w
 27448  2A3A  00A8               	movwf	1+(??_timeoutnever+0)+0
 27449  2A3B  0827               	movf	0+(??_timeoutnever+0)+0,w
 27450  2A3C  0086               	movwf	fsr1l
 27451  2A3D  0828               	movf	1+(??_timeoutnever+0)+0,w
 27452  2A3E  0087               	movwf	fsr1h
 27453                           
 27454  2A3F  30FF               	movlw	0FFh
 27455  2A40  3FC0               	movwi	[0]fsr1
 27456  2A41  30FF               	movlw	0FFh
 27457  2A42  3FC1               	movwi	[1]fsr1
 27458  2A43  30FF               	movlw	0FFh
 27459  2A44  3FC2               	movwi	[2]fsr1
 27460  2A45  30FF               	movlw	0FFh
 27461  2A46  3FC3               	movwi	[3]fsr1
 27462                           	line	159
 27463                           	
 27464  2A47                     l21357:	
 27465  2A47  0008               	return
 27466                           	opt stack 0
 27467                           GLOBAL	__end_of_timeoutnever
 27468  2A48                     	__end_of_timeoutnever:
 27469 ;; =============== function _timeoutnever ends ============
 27470                           
 27471                           	signat	_timeoutnever,4216
 27472                           	global	_get_Pump
 27473                           psect	text3304,local,class=CODE,delta=2
 27474                           global __ptext3304
 27475  37C9                     __ptext3304:
 27476                           
 27477 ;; *************** function _get_Pump *****************
 27478 ;; Defined at:
 27479 ;;		line 435 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27480 ;; Parameters:    Size  Location     Type
 27481 ;;		None
 27482 ;; Auto vars:     Size  Location     Type
 27483 ;;		None
 27484 ;; Return value:  Size  Location     Type
 27485 ;;                  1    wreg      unsigned char 
 27486 ;; Registers used:
 27487 ;;		wreg, status,2
 27488 ;; Tracked objects:
 27489 ;;		On entry : 0/0
 27490 ;;		On exit  : 0/0
 27491 ;;		Unchanged: 0/0
 27492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27497 ;;Total ram usage:        0 bytes
 27498 ;; Hardware stack levels used:    1
 27499 ;; Hardware stack levels required when called:    2
 27500 ;; This function calls:
 27501 ;;		Nothing
 27502 ;; This function is called by:
 27503 ;;		_litterlanguage_work
 27504 ;;		_litterlanguage_pause
 27505 ;; This function uses a non-reentrant model
 27506 ;;
 27507                           psect	text3304
 27508                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27509                           	line	435
 27510                           	global	__size_of_get_Pump
 27511  0005                     	__size_of_get_Pump	equ	__end_of_get_Pump-_get_Pump
 27512                           	
 27513  37C9                     _get_Pump:	
 27514                           	opt	stack 12
 27515                           ; Regs used in _get_Pump: [wreg+status,2]
 27516                           	line	436
 27517                           	
 27518  37C9                     l36641:	
 27519                           ;catgenie120.c: 436: return (LATD & (1U << (1)));
 27520  37C9  0022               	movlb 2	; select bank2
 27521  37CA  080F               	movf	(271)^0100h,w	;volatile
 27522  37CB  3902               	andlw	02h
 27523  37CC  2FCD               	goto	l10958
 27524                           	
 27525  37CD                     l36643:	
 27526                           	line	437
 27527                           	
 27528  37CD                     l10958:	
 27529  37CD  0008               	return
 27530                           	opt stack 0
 27531                           GLOBAL	__end_of_get_Pump
 27532  37CE                     	__end_of_get_Pump:
 27533 ;; =============== function _get_Pump ends ============
 27534                           
 27535                           	signat	_get_Pump,89
 27536                           	global	_litterlanguage_event
 27537                           psect	text3305,local,class=CODE,delta=2
 27538                           global __ptext3305
 27539  1800                     __ptext3305:
 27540                           
 27541 ;; *************** function _litterlanguage_event *****************
 27542 ;; Defined at:
 27543 ;;		line 341 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 27544 ;; Parameters:    Size  Location     Type
 27545 ;;  event           1    wreg     unsigned char 
 27546 ;;  argument        1    0[BANK0 ] unsigned char 
 27547 ;; Auto vars:     Size  Location     Type
 27548 ;;  event           1    1[BANK0 ] unsigned char 
 27549 ;; Return value:  Size  Location     Type
 27550 ;;		None               void
 27551 ;; Registers used:
 27552 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27553 ;; Tracked objects:
 27554 ;;		On entry : 0/0
 27555 ;;		On exit  : 0/0
 27556 ;;		Unchanged: 0/0
 27557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27558 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27562 ;;Total ram usage:        2 bytes
 27563 ;; Hardware stack levels used:    1
 27564 ;; Hardware stack levels required when called:    2
 27565 ;; This function calls:
 27566 ;;		Nothing
 27567 ;; This function is called by:
 27568 ;;		_litterlanguage_work
 27569 ;;		_litterlanguage_pause
 27570 ;;		_litterlanguage_stop
 27571 ;;		_watersensor_event
 27572 ;;		_heatsensor_event
 27573 ;;		_exe_instruction
 27574 ;; This function uses a non-reentrant model
 27575 ;;
 27576                           psect	text3305
 27577                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 27578                           	line	341
 27579                           	global	__size_of_litterlanguage_event
 27580  000C                     	__size_of_litterlanguage_event	equ	__end_of_litterlanguage_event-_litterlanguage_event
 27581                           	
 27582  1800                     _litterlanguage_event:	
 27583                           	opt	stack 11
 27584                           ; Regs used in _litterlanguage_event: [wreg-fsr0h+status,2+status,0]
 27585                           ;litterlanguage_event@event stored from wreg
 27586  1800  0020               	movlb 0	; select bank0
 27587  1801  00A2               	movwf	(litterlanguage_event@event)
 27588                           	line	356
 27589                           	
 27590  1802                     l36635:	
 27591                           ;userinterface.c: 356: switch (event) {
 27592  1802  2806               	goto	l36639
 27593                           	line	357
 27594                           ;userinterface.c: 357: case 0:
 27595                           	
 27596  1803                     l8701:	
 27597                           	line	358
 27598                           ;userinterface.c: 358: break;
 27599  1803  280B               	goto	l8704
 27600                           	line	375
 27601                           ;userinterface.c: 375: default:
 27602                           	
 27603  1804                     l8703:	
 27604                           	line	376
 27605                           ;userinterface.c: 376: break;
 27606  1804  280B               	goto	l8704
 27607                           	line	377
 27608                           	
 27609  1805                     l36637:	
 27610                           ;userinterface.c: 377: }
 27611  1805  280B               	goto	l8704
 27612                           	line	356
 27613                           	
 27614  1806                     l8700:	
 27615                           	
 27616  1806                     l36639:	
 27617  1806  0822               	movf	(litterlanguage_event@event),w
 27618                           	; Switch size 1, requested type "space"
 27619                           ; Number of cases is 1, Range of values is 0 to 0
 27620                           ; switch strategies available:
 27621                           ; Name         Instructions Cycles
 27622                           ; simple_byte            4     3 (average)
 27623                           ; direct_byte            8     6 (fixed)
 27624                           ; jumptable            260     6 (fixed)
 27625                           ; rangetable             5     4 (fixed)
 27626                           ; spacedrange            7     6 (fixed)
 27627                           ; locatedrange           1     3 (fixed)
 27628                           ;	Chosen strategy is simple_byte
 27629                           
 27630                           	opt asmopt_off
 27631  1807  3A00               	xorlw	0^0	; case 0
 27632  1808  1903               	skipnz
 27633  1809  280B               	goto	l8704
 27634  180A  280B               	goto	l8704
 27635                           	opt asmopt_on
 27636                           
 27637                           	line	377
 27638                           	
 27639  180B                     l8702:	
 27640                           	line	378
 27641                           	
 27642  180B                     l8704:	
 27643  180B  0008               	return
 27644                           	opt stack 0
 27645                           GLOBAL	__end_of_litterlanguage_event
 27646  180C                     	__end_of_litterlanguage_event:
 27647 ;; =============== function _litterlanguage_event ends ============
 27648                           
 27649                           	signat	_litterlanguage_event,8312
 27650                           	global	_water_filling
 27651                           psect	text3306,local,class=CODE,delta=2
 27652                           global __ptext3306
 27653  37DE                     __ptext3306:
 27654                           
 27655 ;; *************** function _water_filling *****************
 27656 ;; Defined at:
 27657 ;;		line 231 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27658 ;; Parameters:    Size  Location     Type
 27659 ;;		None
 27660 ;; Auto vars:     Size  Location     Type
 27661 ;;		None
 27662 ;; Return value:  Size  Location     Type
 27663 ;;                  1    wreg      unsigned char 
 27664 ;; Registers used:
 27665 ;;		wreg
 27666 ;; Tracked objects:
 27667 ;;		On entry : 0/0
 27668 ;;		On exit  : 0/0
 27669 ;;		Unchanged: 0/0
 27670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27675 ;;Total ram usage:        0 bytes
 27676 ;; Hardware stack levels used:    1
 27677 ;; Hardware stack levels required when called:    2
 27678 ;; This function calls:
 27679 ;;		Nothing
 27680 ;; This function is called by:
 27681 ;;		_litterlanguage_work
 27682 ;;		_litterlanguage_pause
 27683 ;; This function uses a non-reentrant model
 27684 ;;
 27685                           psect	text3306
 27686                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27687                           	line	231
 27688                           	global	__size_of_water_filling
 27689  0006                     	__size_of_water_filling	equ	__end_of_water_filling-_water_filling
 27690                           	
 27691  37DE                     _water_filling:	
 27692                           	opt	stack 12
 27693                           ; Regs used in _water_filling: [wreg]
 27694                           	line	232
 27695                           	
 27696  37DE                     l36631:	
 27697                           ;water.c: 232: return (filling);
 27698  37DE  3000               	movlw	0
 27699  37DF  0020               	movlb 0	; select bank0
 27700  37E0  196D               	btfsc	(_filling/8),(_filling)&7
 27701  37E1  3001               	movlw	1
 27702  37E2  2FE3               	goto	l23477
 27703                           	
 27704  37E3                     l36633:	
 27705                           	line	233
 27706                           	
 27707  37E3                     l23477:	
 27708  37E3  0008               	return
 27709                           	opt stack 0
 27710                           GLOBAL	__end_of_water_filling
 27711  37E4                     	__end_of_water_filling:
 27712 ;; =============== function _water_filling ends ============
 27713                           
 27714                           	signat	_water_filling,89
 27715                           	global	_water_detected
 27716                           psect	text3307,local,class=CODE,delta=2
 27717                           global __ptext3307
 27718  37D8                     __ptext3307:
 27719                           
 27720 ;; *************** function _water_detected *****************
 27721 ;; Defined at:
 27722 ;;		line 203 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27723 ;; Parameters:    Size  Location     Type
 27724 ;;		None
 27725 ;; Auto vars:     Size  Location     Type
 27726 ;;		None
 27727 ;; Return value:  Size  Location     Type
 27728 ;;                  1    wreg      unsigned char 
 27729 ;; Registers used:
 27730 ;;		wreg
 27731 ;; Tracked objects:
 27732 ;;		On entry : 0/0
 27733 ;;		On exit  : 0/0
 27734 ;;		Unchanged: 0/0
 27735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27740 ;;Total ram usage:        0 bytes
 27741 ;; Hardware stack levels used:    1
 27742 ;; Hardware stack levels required when called:    2
 27743 ;; This function calls:
 27744 ;;		Nothing
 27745 ;; This function is called by:
 27746 ;;		_litterlanguage_work
 27747 ;;		_exe_instruction
 27748 ;;		_wait_instruction
 27749 ;; This function uses a non-reentrant model
 27750 ;;
 27751                           psect	text3307
 27752                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27753                           	line	203
 27754                           	global	__size_of_water_detected
 27755  0006                     	__size_of_water_detected	equ	__end_of_water_detected-_water_detected
 27756                           	
 27757  37D8                     _water_detected:	
 27758                           	opt	stack 11
 27759                           ; Regs used in _water_detected: [wreg]
 27760                           	line	204
 27761                           	
 27762  37D8                     l36627:	
 27763                           ;water.c: 204: return (detected);
 27764  37D8  3000               	movlw	0
 27765  37D9  0020               	movlb 0	; select bank0
 27766  37DA  186D               	btfsc	(_detected/8),(_detected)&7
 27767  37DB  3001               	movlw	1
 27768  37DC  2FDD               	goto	l23465
 27769                           	
 27770  37DD                     l36629:	
 27771                           	line	205
 27772                           	
 27773  37DD                     l23465:	
 27774  37DD  0008               	return
 27775                           	opt stack 0
 27776                           GLOBAL	__end_of_water_detected
 27777  37DE                     	__end_of_water_detected:
 27778 ;; =============== function _water_detected ends ============
 27779                           
 27780                           	signat	_water_detected,89
 27781                           	global	_eeprom_read
 27782                           psect	text3308,local,class=CODE,delta=2
 27783                           global __ptext3308
 27784  2ADC                     __ptext3308:
 27785                           
 27786 ;; *************** function _eeprom_read *****************
 27787 ;; Defined at:
 27788 ;;		line 7 in file "eeread.c"
 27789 ;; Parameters:    Size  Location     Type
 27790 ;;  addr            1    wreg     unsigned char 
 27791 ;; Auto vars:     Size  Location     Type
 27792 ;;  addr            1    3[BANK0 ] unsigned char 
 27793 ;; Return value:  Size  Location     Type
 27794 ;;                  1    wreg      unsigned char 
 27795 ;; Registers used:
 27796 ;;		wreg, status,2, status,0
 27797 ;; Tracked objects:
 27798 ;;		On entry : 0/0
 27799 ;;		On exit  : 0/0
 27800 ;;		Unchanged: 0/0
 27801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27804 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 27805 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 27806 ;;Total ram usage:        4 bytes
 27807 ;; Hardware stack levels used:    1
 27808 ;; Hardware stack levels required when called:    2
 27809 ;; This function calls:
 27810 ;;		Nothing
 27811 ;; This function is called by:
 27812 ;;		_litterlanguage_init
 27813 ;;		_litterlanguage_work
 27814 ;;		_exe_instruction
 27815 ;;		_userinterface_init
 27816 ;; This function uses a non-reentrant model
 27817 ;;
 27818                           psect	text3308
 27819                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eeread.c"
 27820                           	line	7
 27821                           	global	__size_of_eeprom_read
 27822  0023                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
 27823                           	
 27824  2ADC                     _eeprom_read:	
 27825                           	opt	stack 11
 27826                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
 27827                           ;eeprom_read@addr stored from wreg
 27828                           	line	9
 27829  2ADC  0020               	movlb 0	; select bank0
 27830  2ADD  00A4               	movwf	(eeprom_read@addr)
 27831                           	line	8
 27832                           	
 27833  2ADE                     l25378:	
 27834                           	line	9
 27835                           # 9 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eeread.c"
 27836  2ADE  0064               clrwdt ;#
 27837                           psect	text3308
 27838                           	line	10
 27839  2ADF  0023               	movlb 3	; select bank3
 27840  2AE0  1895               	btfsc	(3241/8)^0180h,(3241)&7
 27841  2AE1  2AE3               	goto	u9261
 27842  2AE2  2AE4               	goto	u9260
 27843  2AE3                     u9261:
 27844  2AE3  2ADE               	goto	l25378
 27845  2AE4                     u9260:
 27846  2AE4  2AE5               	goto	l36623
 27847                           	
 27848  2AE5                     l25379:	
 27849                           	line	11
 27850                           	
 27851  2AE5                     l36623:	
 27852  2AE5  0020               	movlb 0	; select bank0
 27853  2AE6  0824               	movf	(eeprom_read@addr),w
 27854  2AE7  00A1               	movwf	(??_eeprom_read+0)+0
 27855  2AE8  01A2               	clrf	(??_eeprom_read+0)+0+1
 27856  2AE9  0821               	movf	0+(??_eeprom_read+0)+0,w
 27857  2AEA  0023               	movlb 3	; select bank3
 27858  2AEB  0091               	movwf	(401)^0180h	;volatile
 27859  2AEC  0020               	movlb 0	; select bank0
 27860  2AED  0822               	movf	1+(??_eeprom_read+0)+0,w
 27861  2AEE  0023               	movlb 3	; select bank3
 27862  2AEF  0092               	movwf	(401+1)^0180h	;volatile
 27863  2AF0  303F               	movlw	(03Fh)
 27864  2AF1  0020               	movlb 0	; select bank0
 27865  2AF2  00A3               	movwf	(??_eeprom_read+2)+0
 27866  2AF3  0823               	movf	(??_eeprom_read+2)+0,w
 27867  2AF4  0023               	movlb 3	; select bank3
 27868  2AF5  0595               	andwf	(405)^0180h,f	;volatile
 27869  2AF6  1415               	bsf	(3240/8)^0180h,(3240)&7
 27870  2AF7  1003               	clrc
 27871  2AF8  1815               	btfsc	(3240/8)^0180h,(3240)&7
 27872  2AF9  1403               	setc
 27873  2AFA  3000               	movlw	0
 27874  2AFB  3D09               	addwfc	wreg,w
 27875  2AFC  0813               	movf	(403)^0180h,w	;volatile
 27876  2AFD  2AFE               	goto	l25380
 27877                           	
 27878  2AFE                     l36625:	
 27879                           	line	12
 27880                           	
 27881  2AFE                     l25380:	
 27882  2AFE  0008               	return
 27883                           	opt stack 0
 27884                           GLOBAL	__end_of_eeprom_read
 27885  2AFF                     	__end_of_eeprom_read:
 27886 ;; =============== function _eeprom_read ends ============
 27887                           
 27888                           	signat	_eeprom_read,4217
 27889                           	global	_eeprom_write
 27890                           psect	text3309,local,class=CODE,delta=2
 27891                           global __ptext3309
 27892  2CA5                     __ptext3309:
 27893                           
 27894 ;; *************** function _eeprom_write *****************
 27895 ;; Defined at:
 27896 ;;		line 7 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eewrite.c"
 27897 ;; Parameters:    Size  Location     Type
 27898 ;;  addr            1    wreg     unsigned char 
 27899 ;;  value           1    0[BANK0 ] unsigned char 
 27900 ;; Auto vars:     Size  Location     Type
 27901 ;;  addr            1    3[BANK0 ] unsigned char 
 27902 ;; Return value:  Size  Location     Type
 27903 ;;                  1    wreg      unsigned char 
 27904 ;; Registers used:
 27905 ;;		wreg, status,2, status,0
 27906 ;; Tracked objects:
 27907 ;;		On entry : 0/0
 27908 ;;		On exit  : 0/0
 27909 ;;		Unchanged: 0/0
 27910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27911 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27913 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27914 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 27915 ;;Total ram usage:        4 bytes
 27916 ;; Hardware stack levels used:    1
 27917 ;; Hardware stack levels required when called:    2
 27918 ;; This function calls:
 27919 ;;		Nothing
 27920 ;; This function is called by:
 27921 ;;		_litterlanguage_init
 27922 ;;		_litterlanguage_work
 27923 ;;		_exe_instruction
 27924 ;;		_userinterface_init
 27925 ;;		_set_mode
 27926 ;;		_both_long
 27927 ;; This function uses a non-reentrant model
 27928 ;;
 27929                           psect	text3309
 27930                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eewrite.c"
 27931                           	line	7
 27932                           	global	__size_of_eeprom_write
 27933  0037                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
 27934                           	
 27935  2CA5                     _eeprom_write:	
 27936                           	opt	stack 11
 27937                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
 27938                           ;eeprom_write@addr stored from wreg
 27939  2CA5  0020               	movlb 0	; select bank0
 27940  2CA6  00A4               	movwf	(eeprom_write@addr)
 27941                           	line	8
 27942                           	
 27943  2CA7                     l27177:	
 27944  2CA7  2CA8               	goto	l27178
 27945                           	
 27946  2CA8                     l27179:	
 27947                           	
 27948  2CA8                     l27178:	
 27949  2CA8  0023               	movlb 3	; select bank3
 27950  2CA9  1895               	btfsc	(3241/8)^0180h,(3241)&7
 27951  2CAA  2CAC               	goto	u9231
 27952  2CAB  2CAD               	goto	u9230
 27953  2CAC                     u9231:
 27954  2CAC  2CA8               	goto	l27178
 27955  2CAD                     u9230:
 27956  2CAD  2CAE               	goto	l36603
 27957                           	
 27958  2CAE                     l27180:	
 27959                           	
 27960  2CAE                     l36603:	
 27961  2CAE  0020               	movlb 0	; select bank0
 27962  2CAF  0824               	movf	(eeprom_write@addr),w
 27963  2CB0  00A2               	movwf	(??_eeprom_write+0)+0
 27964  2CB1  01A3               	clrf	(??_eeprom_write+0)+0+1
 27965  2CB2  0822               	movf	0+(??_eeprom_write+0)+0,w
 27966  2CB3  0023               	movlb 3	; select bank3
 27967  2CB4  0091               	movwf	(401)^0180h	;volatile
 27968  2CB5  0020               	movlb 0	; select bank0
 27969  2CB6  0823               	movf	1+(??_eeprom_write+0)+0,w
 27970  2CB7  0023               	movlb 3	; select bank3
 27971  2CB8  0092               	movwf	(401+1)^0180h	;volatile
 27972  2CB9  0020               	movlb 0	; select bank0
 27973  2CBA  0821               	movf	(eeprom_write@value),w
 27974  2CBB  0023               	movlb 3	; select bank3
 27975  2CBC  0093               	movwf	(403)^0180h	;volatile
 27976                           	
 27977  2CBD                     l36605:	
 27978  2CBD  303F               	movlw	(03Fh)
 27979  2CBE  0020               	movlb 0	; select bank0
 27980  2CBF  00A2               	movwf	(??_eeprom_write+0)+0
 27981  2CC0  0822               	movf	(??_eeprom_write+0)+0,w
 27982  2CC1  0023               	movlb 3	; select bank3
 27983  2CC2  0595               	andwf	(405)^0180h,f	;volatile
 27984                           	
 27985  2CC3                     l36607:	
 27986  2CC3  0020               	movlb 0	; select bank0
 27987  2CC4  1003               	bcf	(24/8),(24)&7
 27988                           	
 27989  2CC5                     l36609:	
 27990  2CC5  1F8B               	btfss	(95/8),(95)&7
 27991  2CC6  2CC8               	goto	u9241
 27992  2CC7  2CC9               	goto	u9240
 27993  2CC8                     u9241:
 27994  2CC8  2CCA               	goto	l27181
 27995  2CC9                     u9240:
 27996                           	
 27997  2CC9                     l36611:	
 27998  2CC9  1403               	bsf	(24/8),(24)&7
 27999                           	
 28000  2CCA                     l27181:	
 28001  2CCA  138B               	bcf	(95/8),(95)&7
 28002  2CCB  0023               	movlb 3	; select bank3
 28003  2CCC  1515               	bsf	(3242/8)^0180h,(3242)&7
 28004                           	
 28005  2CCD                     l36613:	
 28006  2CCD  3055               	movlw	(055h)
 28007  2CCE  0096               	movwf	(406)^0180h	;volatile
 28008  2CCF  30AA               	movlw	(0AAh)
 28009  2CD0  0096               	movwf	(406)^0180h	;volatile
 28010                           	
 28011  2CD1                     l36615:	
 28012  2CD1  1495               	bsf	(3241/8)^0180h,(3241)&7
 28013                           	
 28014  2CD2                     l36617:	
 28015  2CD2  1115               	bcf	(3242/8)^0180h,(3242)&7
 28016                           	
 28017  2CD3                     l36619:	
 28018  2CD3  0020               	movlb 0	; select bank0
 28019  2CD4  1C03               	btfss	(24/8),(24)&7
 28020  2CD5  2CD7               	goto	u9251
 28021  2CD6  2CD8               	goto	u9250
 28022  2CD7                     u9251:
 28023  2CD7  2CDB               	goto	l27184
 28024  2CD8                     u9250:
 28025                           	
 28026  2CD8                     l36621:	
 28027  2CD8  178B               	bsf	(95/8),(95)&7
 28028  2CD9  2CDB               	goto	l27184
 28029                           	
 28030  2CDA                     l27182:	
 28031  2CDA  2CDB               	goto	l27184
 28032                           	
 28033  2CDB                     l27183:	
 28034                           	line	10
 28035                           ;	Return value of _eeprom_write is never used
 28036                           	
 28037  2CDB                     l27184:	
 28038  2CDB  0008               	return
 28039                           	opt stack 0
 28040                           GLOBAL	__end_of_eeprom_write
 28041  2CDC                     	__end_of_eeprom_write:
 28042 ;; =============== function _eeprom_write ends ============
 28043                           
 28044                           	signat	_eeprom_write,8313
 28045                           	global	_interrupt_init
 28046                           psect	text3310,local,class=CODE,delta=2
 28047                           global __ptext3310
 28048  37F7                     __ptext3310:
 28049                           
 28050 ;; *************** function _interrupt_init *****************
 28051 ;; Defined at:
 28052 ;;		line 161 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 28053 ;; Parameters:    Size  Location     Type
 28054 ;;		None
 28055 ;; Auto vars:     Size  Location     Type
 28056 ;;		None
 28057 ;; Return value:  Size  Location     Type
 28058 ;;		None               void
 28059 ;; Registers used:
 28060 ;;		wreg
 28061 ;; Tracked objects:
 28062 ;;		On entry : 0/0
 28063 ;;		On exit  : 0/0
 28064 ;;		Unchanged: 0/0
 28065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28069 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28070 ;;Total ram usage:        1 bytes
 28071 ;; Hardware stack levels used:    1
 28072 ;; Hardware stack levels required when called:    2
 28073 ;; This function calls:
 28074 ;;		Nothing
 28075 ;; This function is called by:
 28076 ;;		_main
 28077 ;; This function uses a non-reentrant model
 28078 ;;
 28079                           psect	text3310
 28080                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 28081                           	line	161
 28082                           	global	__size_of_interrupt_init
 28083  0009                     	__size_of_interrupt_init	equ	__end_of_interrupt_init-_interrupt_init
 28084                           	
 28085  37F7                     _interrupt_init:	
 28086                           	opt	stack 13
 28087                           ; Regs used in _interrupt_init: [wreg]
 28088                           	line	162
 28089                           	
 28090  37F7                     l33823:	
 28091                           ;catgenius.c: 162: PORTB_old = PORTB;
 28092  37F7  0020               	movlb 0	; select bank0
 28093  37F8  080D               	movf	(13),w	;volatile
 28094  37F9  00A1               	movwf	(??_interrupt_init+0)+0
 28095  37FA  0821               	movf	(??_interrupt_init+0)+0,w
 28096  37FB  0021               	movlb 1	; select bank1
 28097  37FC  00D4               	movwf	(_PORTB_old)^080h
 28098                           	line	165
 28099                           	
 28100  37FD                     l33825:	
 28101                           ;catgenius.c: 165: PEIE = 1;
 28102  37FD  170B               	bsf	(94/8),(94)&7
 28103                           	line	168
 28104                           	
 28105  37FE                     l33827:	
 28106                           ;catgenius.c: 168: GIE = 1;
 28107  37FE  178B               	bsf	(95/8),(95)&7
 28108                           	line	169
 28109                           	
 28110  37FF                     l2096:	
 28111  37FF  0008               	return
 28112                           	opt stack 0
 28113                           GLOBAL	__end_of_interrupt_init
 28114  3800                     	__end_of_interrupt_init:
 28115 ;; =============== function _interrupt_init ends ============
 28116                           
 28117                           	signat	_interrupt_init,88
 28118                           	global	_water_init
 28119                           psect	text3311,local,class=CODE,delta=2
 28120                           global __ptext3311
 28121  2B6E                     __ptext3311:
 28122                           
 28123 ;; *************** function _water_init *****************
 28124 ;; Defined at:
 28125 ;;		line 104 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28126 ;; Parameters:    Size  Location     Type
 28127 ;;		None
 28128 ;; Auto vars:     Size  Location     Type
 28129 ;;  channel         1    2[BANK0 ] unsigned char 
 28130 ;;  mask            1    1[BANK0 ] unsigned char 
 28131 ;; Return value:  Size  Location     Type
 28132 ;;		None               void
 28133 ;; Registers used:
 28134 ;;		wreg, status,2, status,0
 28135 ;; Tracked objects:
 28136 ;;		On entry : 0/0
 28137 ;;		On exit  : 0/0
 28138 ;;		Unchanged: 0/0
 28139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28143 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 28144 ;;Total ram usage:        3 bytes
 28145 ;; Hardware stack levels used:    1
 28146 ;; Hardware stack levels required when called:    2
 28147 ;; This function calls:
 28148 ;;		Nothing
 28149 ;; This function is called by:
 28150 ;;		_main
 28151 ;; This function uses a non-reentrant model
 28152 ;;
 28153                           psect	text3311
 28154                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28155                           	line	104
 28156                           	global	__size_of_water_init
 28157  0028                     	__size_of_water_init	equ	__end_of_water_init-_water_init
 28158                           	
 28159  2B6E                     _water_init:	
 28160                           	opt	stack 13
 28161                           ; Regs used in _water_init: [wreg+status,2+status,0]
 28162                           	line	106
 28163                           	
 28164  2B6E                     l33807:	
 28165                           ;water.c: 106: unsigned char mask = (1U << (1));
 28166  2B6E  3002               	movlw	(02h)
 28167  2B6F  0020               	movlb 0	; select bank0
 28168  2B70  00A1               	movwf	(??_water_init+0)+0
 28169  2B71  0821               	movf	(??_water_init+0)+0,w
 28170  2B72  00A2               	movwf	(water_init@mask)
 28171                           	line	107
 28172                           	
 28173  2B73                     l33809:	
 28174                           ;water.c: 107: unsigned char channel = 0;
 28175  2B73  01A3               	clrf	(water_init@channel)
 28176                           	line	110
 28177                           ;water.c: 110: while (!(mask & 0x01)) {
 28178  2B74  2B7C               	goto	l33815
 28179                           	
 28180  2B75                     l23443:	
 28181                           	line	111
 28182                           	
 28183  2B75                     l33811:	
 28184                           ;water.c: 111: mask >>= 0x01;
 28185  2B75  1003               	clrc
 28186  2B76  0CA2               	rrf	(water_init@mask),f
 28187                           
 28188                           	line	112
 28189                           	
 28190  2B77                     l33813:	
 28191                           ;water.c: 112: channel ++;
 28192  2B77  3001               	movlw	(01h)
 28193  2B78  00A1               	movwf	(??_water_init+0)+0
 28194  2B79  0821               	movf	(??_water_init+0)+0,w
 28195  2B7A  07A3               	addwf	(water_init@channel),f
 28196  2B7B  2B7C               	goto	l33815
 28197                           	line	113
 28198                           	
 28199  2B7C                     l23442:	
 28200                           	line	110
 28201                           	
 28202  2B7C                     l33815:	
 28203  2B7C  1C22               	btfss	(water_init@mask),(0)&7
 28204  2B7D  2B7F               	goto	u5551
 28205  2B7E  2B80               	goto	u5550
 28206  2B7F                     u5551:
 28207  2B7F  2B75               	goto	l33811
 28208  2B80                     u5550:
 28209                           	
 28210  2B80                     l23444:	
 28211                           	line	116
 28212                           ;water.c: 113: }
 28213                           ;water.c: 116: ADCON0bits.ADON = 1;
 28214  2B80  0021               	movlb 1	; select bank1
 28215  2B81  141D               	bsf	(157)^080h,0	;volatile
 28216                           	line	118
 28217                           	
 28218  2B82                     l33817:	
 28219                           ;water.c: 118: ADCON0bits.CHS = channel;
 28220  2B82  0020               	movlb 0	; select bank0
 28221  2B83  0823               	movf	(water_init@channel),w
 28222  2B84  00A1               	movwf	(??_water_init+0)+0
 28223  2B85  0DA1               	rlf	(??_water_init+0)+0,f
 28224  2B86  0DA1               	rlf	(??_water_init+0)+0,f
 28225  2B87  0021               	movlb 1	; select bank1
 28226  2B88  081D               	movf	(157)^080h,w	;volatile
 28227  2B89  0020               	movlb 0	; select bank0
 28228  2B8A  0621               	xorwf	(??_water_init+0)+0,w
 28229  2B8B  3983               	andlw	not (((1<<5)-1)<<2)
 28230  2B8C  0621               	xorwf	(??_water_init+0)+0,w
 28231  2B8D  0021               	movlb 1	; select bank1
 28232  2B8E  009D               	movwf	(157)^080h	;volatile
 28233                           	line	121
 28234                           	
 28235  2B8F                     l33819:	
 28236                           ;water.c: 121: ADCON1bits.ADFM = 1;
 28237  2B8F  179E               	bsf	(158)^080h,7	;volatile
 28238                           	line	123
 28239                           ;water.c: 123: ADCON1bits.ADCS = 7;
 28240  2B90  3070               	movlw	(07h & ((1<<3)-1))<<4
 28241  2B91  049E               	iorwf	(158)^080h,f	;volatile
 28242                           	line	126
 28243                           	
 28244  2B92                     l33821:	
 28245                           ;water.c: 126: ADCON1bits.ADNREF = 0;
 28246  2B92  111E               	bcf	(158)^080h,2	;volatile
 28247                           	line	127
 28248                           ;water.c: 127: ADCON1bits.ADPREF = 0;
 28249  2B93  30FC               	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
 28250  2B94  059E               	andwf	(158)^080h,f	;volatile
 28251                           	line	129
 28252                           	
 28253  2B95                     l23445:	
 28254  2B95  0008               	return
 28255                           	opt stack 0
 28256                           GLOBAL	__end_of_water_init
 28257  2B96                     	__end_of_water_init:
 28258 ;; =============== function _water_init ends ============
 28259                           
 28260                           	signat	_water_init,88
 28261                           	global	_catsensor_init
 28262                           psect	text3312,local,class=CODE,delta=2
 28263                           global __ptext3312
 28264  2883                     __ptext3312:
 28265                           
 28266 ;; *************** function _catsensor_init *****************
 28267 ;; Defined at:
 28268 ;;		line 56 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 28269 ;; Parameters:    Size  Location     Type
 28270 ;;		None
 28271 ;; Auto vars:     Size  Location     Type
 28272 ;;		None
 28273 ;; Return value:  Size  Location     Type
 28274 ;;		None               void
 28275 ;; Registers used:
 28276 ;;		wreg
 28277 ;; Tracked objects:
 28278 ;;		On entry : 0/0
 28279 ;;		On exit  : 0/0
 28280 ;;		Unchanged: 0/0
 28281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28286 ;;Total ram usage:        0 bytes
 28287 ;; Hardware stack levels used:    1
 28288 ;; Hardware stack levels required when called:    2
 28289 ;; This function calls:
 28290 ;;		Nothing
 28291 ;; This function is called by:
 28292 ;;		_main
 28293 ;; This function uses a non-reentrant model
 28294 ;;
 28295                           psect	text3312
 28296                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 28297                           	line	56
 28298                           	global	__size_of_catsensor_init
 28299  000F                     	__size_of_catsensor_init	equ	__end_of_catsensor_init-_catsensor_init
 28300                           	
 28301  2883                     _catsensor_init:	
 28302                           	opt	stack 13
 28303                           ; Regs used in _catsensor_init: [wreg]
 28304                           	line	61
 28305                           	
 28306  2883                     l33801:	
 28307                           ;catsensor.c: 61: PR2 = 0x54 ;
 28308  2883  3054               	movlw	(054h)
 28309  2884  0020               	movlb 0	; select bank0
 28310  2885  009B               	movwf	(27)	;volatile
 28311                           	line	65
 28312                           ;catsensor.c: 65: T2CON = 0x7D ;
 28313  2886  307D               	movlw	(07Dh)
 28314  2887  009C               	movwf	(28)	;volatile
 28315                           	line	67
 28316                           ;catsensor.c: 67: CCPR1L = 0x2A ;
 28317  2888  302A               	movlw	(02Ah)
 28318  2889  0025               	movlb 5	; select bank5
 28319  288A  0091               	movwf	(657)^0280h	;volatile
 28320                           	line	70
 28321                           ;catsensor.c: 70: CCP1CON = 0x1F ;
 28322  288B  301F               	movlw	(01Fh)
 28323  288C  0093               	movwf	(659)^0280h	;volatile
 28324                           	line	72
 28325                           	
 28326  288D                     l33803:	
 28327                           ;catsensor.c: 72: TMR2IF = 0;
 28328  288D  0020               	movlb 0	; select bank0
 28329  288E  1091               	bcf	(137/8),(137)&7
 28330                           	line	74
 28331                           	
 28332  288F                     l33805:	
 28333                           ;catsensor.c: 74: TMR2IE = 1;
 28334  288F  0021               	movlb 1	; select bank1
 28335  2890  1491               	bsf	(1161/8)^080h,(1161)&7
 28336                           	line	75
 28337                           	
 28338  2891                     l13019:	
 28339  2891  0008               	return
 28340                           	opt stack 0
 28341                           GLOBAL	__end_of_catsensor_init
 28342  2892                     	__end_of_catsensor_init:
 28343 ;; =============== function _catsensor_init ends ============
 28344                           
 28345                           	signat	_catsensor_init,88
 28346                           	global	_timer_init
 28347                           psect	text3313,local,class=CODE,delta=2
 28348                           global __ptext3313
 28349  2837                     __ptext3313:
 28350                           
 28351 ;; *************** function _timer_init *****************
 28352 ;; Defined at:
 28353 ;;		line 47 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28354 ;; Parameters:    Size  Location     Type
 28355 ;;		None
 28356 ;; Auto vars:     Size  Location     Type
 28357 ;;		None
 28358 ;; Return value:  Size  Location     Type
 28359 ;;		None               void
 28360 ;; Registers used:
 28361 ;;		None
 28362 ;; Tracked objects:
 28363 ;;		On entry : 0/0
 28364 ;;		On exit  : 0/0
 28365 ;;		Unchanged: 0/0
 28366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28371 ;;Total ram usage:        0 bytes
 28372 ;; Hardware stack levels used:    1
 28373 ;; Hardware stack levels required when called:    2
 28374 ;; This function calls:
 28375 ;;		Nothing
 28376 ;; This function is called by:
 28377 ;;		_main
 28378 ;; This function uses a non-reentrant model
 28379 ;;
 28380                           psect	text3313
 28381                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28382                           	line	47
 28383                           	global	__size_of_timer_init
 28384  000B                     	__size_of_timer_init	equ	__end_of_timer_init-_timer_init
 28385                           	
 28386  2837                     _timer_init:	
 28387                           	opt	stack 13
 28388                           ; Regs used in _timer_init: []
 28389                           	line	56
 28390                           	
 28391  2837                     l33799:	
 28392                           ;timer.c: 56: TMR1CS0 = 0;
 28393  2837  0020               	movlb 0	; select bank0
 28394  2838  1318               	bcf	(198/8),(198)&7
 28395                           	line	57
 28396                           ;timer.c: 57: TMR1CS1 = 0;
 28397  2839  1398               	bcf	(199/8),(199)&7
 28398                           	line	60
 28399                           ;timer.c: 60: T1CKPS1 = 1;
 28400  283A  1698               	bsf	(197/8),(197)&7
 28401                           	line	61
 28402                           ;timer.c: 61: T1CKPS0 = 1;
 28403  283B  1618               	bsf	(196/8),(196)&7
 28404                           	line	63
 28405                           ;timer.c: 63: T1OSCEN = 0;
 28406  283C  1198               	bcf	(195/8),(195)&7
 28407                           	line	65
 28408                           ;timer.c: 65: nT1SYNC = 1;
 28409  283D  1518               	bsf	(194/8),(194)&7
 28410                           	line	67
 28411                           ;timer.c: 67: TMR1ON = 1;
 28412  283E  1418               	bsf	(192/8),(192)&7
 28413                           	line	69
 28414                           ;timer.c: 69: TMR1IE = 1;
 28415  283F  0021               	movlb 1	; select bank1
 28416  2840  1411               	bsf	(1160/8)^080h,(1160)&7
 28417                           	line	70
 28418                           	
 28419  2841                     l21341:	
 28420  2841  0008               	return
 28421                           	opt stack 0
 28422                           GLOBAL	__end_of_timer_init
 28423  2842                     	__end_of_timer_init:
 28424 ;; =============== function _timer_init ends ============
 28425                           
 28426                           	signat	_timer_init,88
 28427                           	global	_isr
 28428                           psect	intentry,class=CODE,delta=2
 28429                           global __pintentry
 28430  0004                     __pintentry:
 28431                           
 28432 ;; *************** function _isr *****************
 28433 ;; Defined at:
 28434 ;;		line 172 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 28435 ;; Parameters:    Size  Location     Type
 28436 ;;		None
 28437 ;; Auto vars:     Size  Location     Type
 28438 ;;  temp            1   11[COMMON] unsigned char 
 28439 ;; Return value:  Size  Location     Type
 28440 ;;		None               void
 28441 ;; Registers used:
 28442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 28443 ;; Tracked objects:
 28444 ;;		On entry : 0/0
 28445 ;;		On exit  : 0/0
 28446 ;;		Unchanged: 0/0
 28447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28451 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28452 ;;Total ram usage:        3 bytes
 28453 ;; Hardware stack levels used:    1
 28454 ;; Hardware stack levels required when called:    1
 28455 ;; This function calls:
 28456 ;;		_timer_isr
 28457 ;;		_catsensor_isr_timer
 28458 ;;		_catsensor_isr_input
 28459 ;;		_serial_rx_isr
 28460 ;;		_serial_tx_isr
 28461 ;; This function is called by:
 28462 ;;		Interrupt level 1
 28463 ;; This function uses a non-reentrant model
 28464 ;;
 28465                           psect	intentry
 28466                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 28467                           	line	172
 28468                           	global	__size_of_isr
 28469  004A                     	__size_of_isr	equ	__end_of_isr-_isr
 28470                           	
 28471  0004                     _isr:	
 28472                           	opt	stack 7
 28473                           ; Regs used in _isr: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 28474                           psect	intentry
 28475  0004  3180               	pagesel	$
 28476  0005  0020               	movlb 0	; select bank0
 28477  0006  087F               	movf	btemp+1,w
 28478  0007  00FC               	movwf	(??_isr+1)
 28479                           	line	176
 28480                           	
 28481  0008                     i1l33829:	
 28482                           ;catgenius.c: 173: unsigned char temp;
 28483                           ;catgenius.c: 176: if (TMR1IF) {
 28484  0008  1C11               	btfss	(136/8),(136)&7
 28485  0009  280B               	goto	u556_21
 28486  000A  280C               	goto	u556_20
 28487  000B                     u556_21:
 28488  000B  2811               	goto	i1l33835
 28489  000C                     u556_20:
 28490                           	line	178
 28491                           	
 28492  000C                     i1l33831:	
 28493                           ;catgenius.c: 178: TMR1IF = 0;
 28494  000C  1011               	bcf	(136/8),(136)&7
 28495                           	line	180
 28496                           	
 28497  000D                     i1l33833:	
 28498                           ;catgenius.c: 180: timer_isr();
 28499  000D  31AB  2347  3180   	fcall	_timer_isr
 28500  0010  2811               	goto	i1l33835
 28501                           	line	181
 28502                           	
 28503  0011                     i1l2099:	
 28504                           	line	183
 28505                           	
 28506  0011                     i1l33835:	
 28507                           ;catgenius.c: 181: }
 28508                           ;catgenius.c: 183: if (TMR2IF) {
 28509  0011  0020               	movlb 0	; select bank0
 28510  0012  1C91               	btfss	(137/8),(137)&7
 28511  0013  2815               	goto	u557_21
 28512  0014  2816               	goto	u557_20
 28513  0015                     u557_21:
 28514  0015  281B               	goto	i1l33841
 28515  0016                     u557_20:
 28516                           	line	185
 28517                           	
 28518  0016                     i1l33837:	
 28519                           ;catgenius.c: 185: TMR2IF = 0;
 28520  0016  1091               	bcf	(137/8),(137)&7
 28521                           	line	187
 28522                           	
 28523  0017                     i1l33839:	
 28524                           ;catgenius.c: 187: catsensor_isr_timer();
 28525  0017  31AA  2210  3180   	fcall	_catsensor_isr_timer
 28526  001A  281B               	goto	i1l33841
 28527                           	line	188
 28528                           	
 28529  001B                     i1l2100:	
 28530                           	line	193
 28531                           	
 28532  001B                     i1l33841:	
 28533                           ;catgenius.c: 188: }
 28534                           ;catgenius.c: 193: if (IOCIF) {
 28535  001B  1C0B               	btfss	(88/8),(88)&7
 28536  001C  281E               	goto	u558_21
 28537  001D  281F               	goto	u558_20
 28538  001E                     u558_21:
 28539  001E  2838               	goto	i1l33855
 28540  001F                     u558_20:
 28541                           	line	196
 28542                           	
 28543  001F                     i1l33843:	
 28544                           ;catgenius.c: 196: temp = PORTB ^ PORTB_old;
 28545  001F  0020               	movlb 0	; select bank0
 28546  0020  080D               	movf	(13),w	;volatile
 28547  0021  0021               	movlb 1	; select bank1
 28548  0022  0654               	xorwf	(_PORTB_old)^080h,w
 28549  0023  00FB               	movwf	(??_isr+0)+0
 28550  0024  087B               	movf	(??_isr+0)+0,w
 28551  0025  00FD               	movwf	(isr@temp)
 28552                           	line	201
 28553                           	
 28554  0026                     i1l33845:	
 28555                           ;catgenius.c: 201: IOCBF = 0;
 28556  0026  0027               	movlb 7	; select bank7
 28557  0027  0196               	clrf	(918)^0380h	;volatile
 28558                           	line	202
 28559                           	
 28560  0028                     i1l33847:	
 28561                           ;catgenius.c: 202: IOCIF = 0;
 28562  0028  100B               	bcf	(88/8),(88)&7
 28563                           	line	205
 28564                           	
 28565  0029                     i1l33849:	
 28566                           ;catgenius.c: 205: if (temp & (1U << (4)))
 28567  0029  1E7D               	btfss	(isr@temp),(4)&7
 28568  002A  282C               	goto	u559_21
 28569  002B  282D               	goto	u559_20
 28570  002C                     u559_21:
 28571  002C  2831               	goto	i1l33853
 28572  002D                     u559_20:
 28573                           	line	206
 28574                           	
 28575  002D                     i1l33851:	
 28576                           ;catgenius.c: 206: catsensor_isr_input();
 28577  002D  31A8  204D  3180   	fcall	_catsensor_isr_input
 28578  0030  2831               	goto	i1l33853
 28579                           	
 28580  0031                     i1l2102:	
 28581                           	line	208
 28582                           	
 28583  0031                     i1l33853:	
 28584                           ;catgenius.c: 208: PORTB_old = PORTB ;
 28585  0031  0020               	movlb 0	; select bank0
 28586  0032  080D               	movf	(13),w	;volatile
 28587  0033  00FB               	movwf	(??_isr+0)+0
 28588  0034  087B               	movf	(??_isr+0)+0,w
 28589  0035  0021               	movlb 1	; select bank1
 28590  0036  00D4               	movwf	(_PORTB_old)^080h
 28591  0037  2838               	goto	i1l33855
 28592                           	line	209
 28593                           	
 28594  0038                     i1l2101:	
 28595                           	line	211
 28596                           	
 28597  0038                     i1l33855:	
 28598                           ;catgenius.c: 209: }
 28599                           ;catgenius.c: 211: if (RCIF)
 28600  0038  0020               	movlb 0	; select bank0
 28601  0039  1E91               	btfss	(141/8),(141)&7
 28602  003A  283C               	goto	u560_21
 28603  003B  283D               	goto	u560_20
 28604  003C                     u560_21:
 28605  003C  2841               	goto	i1l33859
 28606  003D                     u560_20:
 28607                           	line	212
 28608                           	
 28609  003D                     i1l33857:	
 28610                           ;catgenius.c: 212: serial_rx_isr();
 28611  003D  3181  210D  3180   	fcall	_serial_rx_isr
 28612  0040  2841               	goto	i1l33859
 28613                           	
 28614  0041                     i1l2103:	
 28615                           	line	213
 28616                           	
 28617  0041                     i1l33859:	
 28618                           ;catgenius.c: 213: if (TXIF)
 28619  0041  0020               	movlb 0	; select bank0
 28620  0042  1E11               	btfss	(140/8),(140)&7
 28621  0043  2845               	goto	u561_21
 28622  0044  2846               	goto	u561_20
 28623  0045                     u561_21:
 28624  0045  284A               	goto	i1l2105
 28625  0046                     u561_20:
 28626                           	line	214
 28627                           	
 28628  0046                     i1l33861:	
 28629                           ;catgenius.c: 214: serial_tx_isr();
 28630  0046  3180  20FF  3180   	fcall	_serial_tx_isr
 28631  0049  284A               	goto	i1l2105
 28632                           	
 28633  004A                     i1l2104:	
 28634                           	line	215
 28635                           	
 28636  004A                     i1l2105:	
 28637  004A  087C               	movf	(??_isr+1),w
 28638  004B  0020               	movlb 0	; select bank0
 28639  004C  00FF               	movwf	btemp+1
 28640  004D  0009               	retfie
 28641                           	opt stack 0
 28642                           GLOBAL	__end_of_isr
 28643  004E                     	__end_of_isr:
 28644 ;; =============== function _isr ends ============
 28645                           
 28646                           	signat	_isr,88
 28647                           	global	_serial_tx_isr
 28648                           psect	text3315,local,class=CODE,delta=2
 28649                           global __ptext3315
 28650  00FF                     __ptext3315:
 28651                           
 28652 ;; *************** function _serial_tx_isr *****************
 28653 ;; Defined at:
 28654 ;;		line 171 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 28655 ;; Parameters:    Size  Location     Type
 28656 ;;		None
 28657 ;; Auto vars:     Size  Location     Type
 28658 ;;		None
 28659 ;; Return value:  Size  Location     Type
 28660 ;;		None               void
 28661 ;; Registers used:
 28662 ;;		None
 28663 ;; Tracked objects:
 28664 ;;		On entry : 0/0
 28665 ;;		On exit  : 0/0
 28666 ;;		Unchanged: 0/0
 28667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28672 ;;Total ram usage:        0 bytes
 28673 ;; Hardware stack levels used:    1
 28674 ;; This function calls:
 28675 ;;		Nothing
 28676 ;; This function is called by:
 28677 ;;		_isr
 28678 ;; This function uses a non-reentrant model
 28679 ;;
 28680                           psect	text3315
 28681                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 28682                           	line	171
 28683                           	global	__size_of_serial_tx_isr
 28684  0001                     	__size_of_serial_tx_isr	equ	__end_of_serial_tx_isr-_serial_tx_isr
 28685                           	
 28686  00FF                     _serial_tx_isr:	
 28687                           	opt	stack 7
 28688                           ; Regs used in _serial_tx_isr: []
 28689                           	line	182
 28690                           	
 28691  00FF                     i1l19293:	
 28692  00FF  0008               	return
 28693                           	opt stack 0
 28694                           GLOBAL	__end_of_serial_tx_isr
 28695  0100                     	__end_of_serial_tx_isr:
 28696 ;; =============== function _serial_tx_isr ends ============
 28697                           
 28698                           	signat	_serial_tx_isr,88
 28699                           	global	_serial_rx_isr
 28700                           psect	text3316,local,class=CODE,delta=2
 28701                           global __ptext3316
 28702  010D                     __ptext3316:
 28703                           
 28704 ;; *************** function _serial_rx_isr *****************
 28705 ;; Defined at:
 28706 ;;		line 116 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 28707 ;; Parameters:    Size  Location     Type
 28708 ;;		None
 28709 ;; Auto vars:     Size  Location     Type
 28710 ;;		None
 28711 ;; Return value:  Size  Location     Type
 28712 ;;		None               void
 28713 ;; Registers used:
 28714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1
 28715 ;; Tracked objects:
 28716 ;;		On entry : 0/0
 28717 ;;		On exit  : 0/0
 28718 ;;		Unchanged: 0/0
 28719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28722 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28723 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28724 ;;Total ram usage:        9 bytes
 28725 ;; Hardware stack levels used:    1
 28726 ;; This function calls:
 28727 ;;		Nothing
 28728 ;; This function is called by:
 28729 ;;		_isr
 28730 ;; This function uses a non-reentrant model
 28731 ;;
 28732                           psect	text3316
 28733                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 28734                           	line	116
 28735                           	global	__size_of_serial_rx_isr
 28736  00D1                     	__size_of_serial_rx_isr	equ	__end_of_serial_rx_isr-_serial_rx_isr
 28737                           	
 28738  010D                     _serial_rx_isr:	
 28739                           	opt	stack 7
 28740                           ; Regs used in _serial_rx_isr: [wreg+fsr1l-status,0+btemp+1]
 28741                           	line	119
 28742                           	
 28743  010D                     i1l33889:	
 28744                           ;serial.c: 119: if (OERR) {
 28745  010D  0023               	movlb 3	; select bank3
 28746  010E  1C9D               	btfss	(3305/8)^0180h,(3305)&7
 28747  010F  2911               	goto	u567_21
 28748  0110  2912               	goto	u567_20
 28749  0111                     u567_21:
 28750  0111  2924               	goto	i1l19279
 28751  0112                     u567_20:
 28752                           	line	120
 28753                           	
 28754  0112                     i1l33891:	
 28755                           ;serial.c: 120: rx.buffer[rx.head] = RCREG;
 28756  0112  0819               	movf	(409)^0180h,w	;volatile
 28757  0113  00F2               	movwf	(??_serial_rx_isr+0)+0
 28758  0114  0022               	movlb 2	; select bank2
 28759  0115  0839               	movf	0+(_rx)^0100h+08h,w
 28760  0116  3907               	andlw	(1<<3)-1
 28761  0117  3E31               	addlw	_rx&0ffh
 28762  0118  0086               	movwf	fsr1l
 28763  0119  3001               	movlw 1	; select bank2/3
 28764  011A  0087               	movwf fsr1h	
 28765                           	
 28766  011B  0872               	movf	(??_serial_rx_isr+0)+0,w
 28767  011C  0081               	movwf	indf1
 28768                           	line	121
 28769                           	
 28770  011D                     i1l33893:	
 28771                           ;serial.c: 121: TXEN = 0;
 28772  011D  0023               	movlb 3	; select bank3
 28773  011E  129E               	bcf	(3317/8)^0180h,(3317)&7
 28774                           	line	122
 28775                           	
 28776  011F                     i1l33895:	
 28777                           ;serial.c: 122: TXEN = 1;
 28778  011F  169E               	bsf	(3317/8)^0180h,(3317)&7
 28779                           	line	123
 28780                           	
 28781  0120                     i1l33897:	
 28782                           ;serial.c: 123: CREN = 0;
 28783  0120  121D               	bcf	(3308/8)^0180h,(3308)&7
 28784                           	line	124
 28785                           	
 28786  0121                     i1l33899:	
 28787                           ;serial.c: 124: CREN = 1;
 28788  0121  161D               	bsf	(3308/8)^0180h,(3308)&7
 28789  0122  29DD               	goto	i1l19280
 28790                           	line	125
 28791                           	
 28792  0123                     i1l33901:	
 28793                           ;serial.c: 125: return;
 28794  0123  29DD               	goto	i1l19280
 28795                           	line	126
 28796                           	
 28797  0124                     i1l19279:	
 28798                           	line	128
 28799                           ;serial.c: 126: }
 28800                           ;serial.c: 128: if (FERR) {
 28801  0124  1D1D               	btfss	(3306/8)^0180h,(3306)&7
 28802  0125  2927               	goto	u568_21
 28803  0126  2928               	goto	u568_20
 28804  0127                     u568_21:
 28805  0127  2938               	goto	i1l33911
 28806  0128                     u568_20:
 28807                           	line	129
 28808                           	
 28809  0128                     i1l33903:	
 28810                           ;serial.c: 129: rx.buffer[rx.head] = RCREG;
 28811  0128  0819               	movf	(409)^0180h,w	;volatile
 28812  0129  00F2               	movwf	(??_serial_rx_isr+0)+0
 28813  012A  0022               	movlb 2	; select bank2
 28814  012B  0839               	movf	0+(_rx)^0100h+08h,w
 28815  012C  3907               	andlw	(1<<3)-1
 28816  012D  3E31               	addlw	_rx&0ffh
 28817  012E  0086               	movwf	fsr1l
 28818  012F  3001               	movlw 1	; select bank2/3
 28819  0130  0087               	movwf fsr1h	
 28820                           	
 28821  0131  0872               	movf	(??_serial_rx_isr+0)+0,w
 28822  0132  0081               	movwf	indf1
 28823                           	line	130
 28824                           	
 28825  0133                     i1l33905:	
 28826                           ;serial.c: 130: TXEN = 0;
 28827  0133  0023               	movlb 3	; select bank3
 28828  0134  129E               	bcf	(3317/8)^0180h,(3317)&7
 28829                           	line	131
 28830                           	
 28831  0135                     i1l33907:	
 28832                           ;serial.c: 131: TXEN = 1;
 28833  0135  169E               	bsf	(3317/8)^0180h,(3317)&7
 28834  0136  29DD               	goto	i1l19280
 28835                           	line	132
 28836                           	
 28837  0137                     i1l33909:	
 28838                           ;serial.c: 132: return;
 28839  0137  29DD               	goto	i1l19280
 28840                           	line	133
 28841                           	
 28842  0138                     i1l19281:	
 28843                           	line	135
 28844                           	
 28845  0138                     i1l33911:	
 28846                           ;serial.c: 133: }
 28847                           ;serial.c: 135: rx.buffer[rx.head] = RCREG;
 28848  0138  0819               	movf	(409)^0180h,w	;volatile
 28849  0139  00F2               	movwf	(??_serial_rx_isr+0)+0
 28850  013A  0022               	movlb 2	; select bank2
 28851  013B  0839               	movf	0+(_rx)^0100h+08h,w
 28852  013C  3907               	andlw	(1<<3)-1
 28853  013D  3E31               	addlw	_rx&0ffh
 28854  013E  0086               	movwf	fsr1l
 28855  013F  3001               	movlw 1	; select bank2/3
 28856  0140  0087               	movwf fsr1h	
 28857                           	
 28858  0141  0872               	movf	(??_serial_rx_isr+0)+0,w
 28859  0142  0081               	movwf	indf1
 28860                           	line	153
 28861                           	
 28862  0143                     i1l33913:	
 28863                           ;serial.c: 153: rx.head++;
 28864  0143  0839               	movf	0+(_rx)^0100h+08h,w
 28865  0144  3907               	andlw	(1<<3)-1
 28866  0145  00F2               	movwf	((??_serial_rx_isr+0)+0)
 28867  0146  0AF2               	incf	(??_serial_rx_isr+0)+0
 28868  0147  0839               	movf	0+(_rx)^0100h+08h,w
 28869  0148  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 28870  0149  39F8               	andlw	not ((1<<3)-1)
 28871  014A  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 28872  014B  00B9               	movwf	0+(_rx)^0100h+08h
 28873                           	line	157
 28874                           	
 28875  014C                     i1l33915:	
 28876                           ;serial.c: 155: if (rx.xon_enabled &&
 28877                           ;serial.c: 156: rx.xon_state &&
 28878                           ;serial.c: 157: ((((rx.head)>=(rx.tail))?((8)-((rx.head)-(rx.tail))-1):((rx.tail)-(rx.he
                                 ad))-1) <= (2))) {
 28879  014C  1F39               	btfss	0+(_rx)^0100h+08h,6
 28880  014D  294F               	goto	u569_21
 28881  014E  2950               	goto	u569_20
 28882  014F                     u569_21:
 28883  014F  29BF               	goto	i1l33933
 28884  0150                     u569_20:
 28885                           	
 28886  0150                     i1l33917:	
 28887  0150  1FB9               	btfss	0+(_rx)^0100h+08h,7
 28888  0151  2953               	goto	u570_21
 28889  0152  2954               	goto	u570_20
 28890  0153                     u570_21:
 28891  0153  29BF               	goto	i1l33933
 28892  0154                     u570_20:
 28893                           	
 28894  0154                     i1l33919:	
 28895  0154  0C39               	rrf	0+(_rx)^0100h+08h,w
 28896  0155  00F2               	movwf	(??_serial_rx_isr+0)+0
 28897  0156  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 28898  0157  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 28899  0158  3907               	andlw	(1<<3)-1
 28900  0159  00F3               	movwf	(??_serial_rx_isr+1)+0
 28901  015A  0839               	movf	0+(_rx)^0100h+08h,w
 28902  015B  3907               	andlw	(1<<3)-1
 28903  015C  00F4               	movwf	(??_serial_rx_isr+2)+0
 28904  015D  0873               	movf	(??_serial_rx_isr+1)+0,w
 28905  015E  0274               	subwf	(??_serial_rx_isr+2)+0,w
 28906  015F  1803               	skipnc
 28907  0160  2962               	goto	u571_21
 28908  0161  2963               	goto	u571_20
 28909  0162                     u571_21:
 28910  0162  297E               	goto	i1l33923
 28911  0163                     u571_20:
 28912                           	
 28913  0163                     i1l33921:	
 28914  0163  0839               	movf	0+(_rx)^0100h+08h,w
 28915  0164  3907               	andlw	(1<<3)-1
 28916  0165  00F2               	movwf	(??_serial_rx_isr+0)+0
 28917  0166  01F3               	clrf	(??_serial_rx_isr+0)+0+1
 28918  0167  09F2               	comf	(??_serial_rx_isr+0)+0,f
 28919  0168  09F3               	comf	(??_serial_rx_isr+0)+1,f
 28920  0169  0AF2               	incf	(??_serial_rx_isr+0)+0,f
 28921  016A  1903               	skipnz
 28922  016B  0AF3               	incf	(??_serial_rx_isr+0)+1,f
 28923  016C  0C39               	rrf	0+(_rx)^0100h+08h,w
 28924  016D  00F4               	movwf	(??_serial_rx_isr+2)+0
 28925  016E  0CF4               	rrf	(??_serial_rx_isr+2)+0,f
 28926  016F  0C74               	rrf	(??_serial_rx_isr+2)+0,w
 28927  0170  3907               	andlw	(1<<3)-1
 28928  0171  0772               	addwf	0+(??_serial_rx_isr+0)+0,w
 28929  0172  00F5               	movwf	(??_serial_rx_isr+3)+0
 28930  0173  0873               	movf	1+(??_serial_rx_isr+0)+0,w
 28931  0174  1803               	skipnc
 28932  0175  0A73               	incf	1+(??_serial_rx_isr+0)+0,w
 28933  0176  00F6               	movwf	((??_serial_rx_isr+3)+0)+1
 28934  0177  0875               	movf	0+(??_serial_rx_isr+3)+0,w
 28935  0178  3EFF               	addlw	low(-1)
 28936  0179  00F9               	movwf	(_serial_rx_isr$22342)
 28937  017A  30FF               	movlw	high(-1)
 28938  017B  3D76               	addwfc	1+(??_serial_rx_isr+3)+0,w
 28939  017C  00FA               	movwf	1+(_serial_rx_isr$22342)
 28940  017D  29A4               	goto	i1l33925
 28941                           	
 28942  017E                     i1l19284:	
 28943                           	
 28944  017E                     i1l33923:	
 28945  017E  0C39               	rrf	0+(_rx)^0100h+08h,w
 28946  017F  00F2               	movwf	(??_serial_rx_isr+0)+0
 28947  0180  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 28948  0181  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 28949  0182  3907               	andlw	(1<<3)-1
 28950  0183  00F3               	movwf	(??_serial_rx_isr+1)+0
 28951  0184  01F4               	clrf	(??_serial_rx_isr+1)+0+1
 28952  0185  09F3               	comf	(??_serial_rx_isr+1)+0,f
 28953  0186  09F4               	comf	(??_serial_rx_isr+1)+1,f
 28954  0187  0AF3               	incf	(??_serial_rx_isr+1)+0,f
 28955  0188  1903               	skipnz
 28956  0189  0AF4               	incf	(??_serial_rx_isr+1)+1,f
 28957  018A  0839               	movf	0+(_rx)^0100h+08h,w
 28958  018B  3907               	andlw	(1<<3)-1
 28959  018C  0773               	addwf	0+(??_serial_rx_isr+1)+0,w
 28960  018D  00F5               	movwf	(??_serial_rx_isr+3)+0
 28961  018E  0874               	movf	1+(??_serial_rx_isr+1)+0,w
 28962  018F  1803               	skipnc
 28963  0190  0A74               	incf	1+(??_serial_rx_isr+1)+0,w
 28964  0191  00F6               	movwf	((??_serial_rx_isr+3)+0)+1
 28965  0192  0875               	movf	0+(??_serial_rx_isr+3)+0,w
 28966  0193  3E01               	addlw	low(01h)
 28967  0194  00F7               	movwf	(??_serial_rx_isr+5)+0
 28968  0195  3000               	movlw	high(01h)
 28969  0196  3D76               	addwfc	1+(??_serial_rx_isr+3)+0,w
 28970  0197  00F8               	movwf	1+(??_serial_rx_isr+5)+0
 28971  0198  09F7               	comf	(??_serial_rx_isr+5)+0,f
 28972  0199  09F8               	comf	(??_serial_rx_isr+5)+1,f
 28973  019A  0AF7               	incf	(??_serial_rx_isr+5)+0,f
 28974  019B  1903               	skipnz
 28975  019C  0AF8               	incf	(??_serial_rx_isr+5)+1,f
 28976  019D  0877               	movf	0+(??_serial_rx_isr+5)+0,w
 28977  019E  3E08               	addlw	low(08h)
 28978  019F  00F9               	movwf	(_serial_rx_isr$22342)
 28979  01A0  3000               	movlw	high(08h)
 28980  01A1  3D78               	addwfc	1+(??_serial_rx_isr+5)+0,w
 28981  01A2  00FA               	movwf	1+(_serial_rx_isr$22342)
 28982  01A3  29A4               	goto	i1l33925
 28983                           	
 28984  01A4                     i1l19286:	
 28985                           	
 28986  01A4                     i1l33925:	
 28987  01A4  087A               	movf	(_serial_rx_isr$22342+1),w
 28988  01A5  3A80               	xorlw	80h
 28989  01A6  00FF               	movwf	btemp+1
 28990  01A7  3080               	movlw	(high(03h))^80h
 28991  01A8  027F               	subwf	btemp+1,w
 28992  01A9  1D03               	skipz
 28993  01AA  29AD               	goto	u572_25
 28994  01AB  3003               	movlw	low(03h)
 28995  01AC  0279               	subwf	(_serial_rx_isr$22342),w
 28996  01AD                     u572_25:
 28997                           
 28998  01AD  1803               	skipnc
 28999  01AE  29B0               	goto	u572_21
 29000  01AF  29B1               	goto	u572_20
 29001  01B0                     u572_21:
 29002  01B0  29BF               	goto	i1l33933
 29003  01B1                     u572_20:
 29004  01B1  29B3               	goto	i1l19287
 29005                           	line	158
 29006                           	
 29007  01B2                     i1l33927:	
 29008                           ;serial.c: 158: while(!TXIF);
 29009  01B2  29B3               	goto	i1l19287
 29010                           	
 29011  01B3                     i1l19288:	
 29012                           	
 29013  01B3                     i1l19287:	
 29014  01B3  0020               	movlb 0	; select bank0
 29015  01B4  1E11               	btfss	(140/8),(140)&7
 29016  01B5  29B7               	goto	u573_21
 29017  01B6  29B8               	goto	u573_20
 29018  01B7                     u573_21:
 29019  01B7  29B3               	goto	i1l19287
 29020  01B8                     u573_20:
 29021  01B8  29B9               	goto	i1l33929
 29022                           	
 29023  01B9                     i1l19289:	
 29024                           	line	159
 29025                           	
 29026  01B9                     i1l33929:	
 29027                           ;serial.c: 159: TXREG = 0x13;
 29028  01B9  3013               	movlw	(013h)
 29029  01BA  0023               	movlb 3	; select bank3
 29030  01BB  009A               	movwf	(410)^0180h	;volatile
 29031                           	line	160
 29032                           	
 29033  01BC                     i1l33931:	
 29034                           ;serial.c: 160: rx.xon_state = 0;
 29035  01BC  0022               	movlb 2	; select bank2
 29036  01BD  13B9               	bcf	0+(_rx)^0100h+08h,7
 29037  01BE  29BF               	goto	i1l33933
 29038                           	line	161
 29039                           	
 29040  01BF                     i1l19282:	
 29041                           	line	163
 29042                           	
 29043  01BF                     i1l33933:	
 29044                           ;serial.c: 161: }
 29045                           ;serial.c: 163: if (rx.head == rx.tail)
 29046  01BF  0022               	movlb 2	; select bank2
 29047  01C0  0C39               	rrf	0+(_rx)^0100h+08h,w
 29048  01C1  00F2               	movwf	(??_serial_rx_isr+0)+0
 29049  01C2  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 29050  01C3  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 29051  01C4  3907               	andlw	(1<<3)-1
 29052  01C5  00F3               	movwf	(??_serial_rx_isr+1)+0
 29053  01C6  0839               	movf	0+(_rx)^0100h+08h,w
 29054  01C7  3907               	andlw	(1<<3)-1
 29055  01C8  0673               	xorwf	(??_serial_rx_isr+1)+0,w
 29056  01C9  1D03               	skipz
 29057  01CA  29CC               	goto	u574_21
 29058  01CB  29CD               	goto	u574_20
 29059  01CC                     u574_21:
 29060  01CC  29DD               	goto	i1l19280
 29061  01CD                     u574_20:
 29062                           	line	165
 29063                           	
 29064  01CD                     i1l33935:	
 29065                           ;serial.c: 165: rx.tail++;
 29066  01CD  0C39               	rrf	0+(_rx)^0100h+08h,w
 29067  01CE  00F2               	movwf	((??_serial_rx_isr+0)+0)
 29068  01CF  0CF2               	rrf	((??_serial_rx_isr+0)+0),f
 29069  01D0  0C72               	rrf	((??_serial_rx_isr+0)+0),w
 29070  01D1  3907               	andlw	(1<<3)-1
 29071  01D2  00F2               	movwf	((??_serial_rx_isr+0)+0)
 29072  01D3  0AF2               	incf	(??_serial_rx_isr+0)+0
 29073  01D4  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 29074  01D5  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 29075  01D6  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 29076  01D7  0839               	movf	0+(_rx)^0100h+08h,w
 29077  01D8  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29078  01D9  39C7               	andlw	not (((1<<3)-1)<<3)
 29079  01DA  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29080  01DB  00B9               	movwf	0+(_rx)^0100h+08h
 29081  01DC  29DD               	goto	i1l19280
 29082                           	
 29083  01DD                     i1l19290:	
 29084                           	line	167
 29085                           	
 29086  01DD                     i1l19280:	
 29087  01DD  0008               	return
 29088                           	opt stack 0
 29089                           GLOBAL	__end_of_serial_rx_isr
 29090  01DE                     	__end_of_serial_rx_isr:
 29091 ;; =============== function _serial_rx_isr ends ============
 29092                           
 29093                           	signat	_serial_rx_isr,88
 29094                           	global	_catsensor_isr_input
 29095                           psect	text3317,local,class=CODE,delta=2
 29096                           global __ptext3317
 29097  284D                     __ptext3317:
 29098                           
 29099 ;; *************** function _catsensor_isr_input *****************
 29100 ;; Defined at:
 29101 ;;		line 167 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29102 ;; Parameters:    Size  Location     Type
 29103 ;;		None
 29104 ;; Auto vars:     Size  Location     Type
 29105 ;;		None
 29106 ;; Return value:  Size  Location     Type
 29107 ;;		None               void
 29108 ;; Registers used:
 29109 ;;		None
 29110 ;; Tracked objects:
 29111 ;;		On entry : 0/0
 29112 ;;		On exit  : 0/0
 29113 ;;		Unchanged: 0/0
 29114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29119 ;;Total ram usage:        0 bytes
 29120 ;; Hardware stack levels used:    1
 29121 ;; This function calls:
 29122 ;;		Nothing
 29123 ;; This function is called by:
 29124 ;;		_isr
 29125 ;; This function uses a non-reentrant model
 29126 ;;
 29127                           psect	text3317
 29128                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29129                           	global	__size_of_catsensor_isr_input
 29130  000C                     	__size_of_catsensor_isr_input	equ	__end_of_catsensor_isr_input-_catsensor_isr_input
 29131                           	
 29132  284D                     _catsensor_isr_input:	
 29133                           	opt	stack 7
 29134                           ; Regs used in _catsensor_isr_input: []
 29135                           	line	169
 29136                           	
 29137  284D                     i1l33883:	
 29138                           ;catsensor.c: 168: if ( (pinging) &&
 29139                           ;catsensor.c: 169: !(PORTB & (1U << (4))) ) {
 29140  284D  1F71               	btfss	(_pinging/8),(_pinging)&7
 29141  284E  2850               	goto	u565_21
 29142  284F  2851               	goto	u565_20
 29143  2850                     u565_21:
 29144  2850  2858               	goto	i1l13034
 29145  2851                     u565_20:
 29146                           	
 29147  2851                     i1l33885:	
 29148  2851  0020               	movlb 0	; select bank0
 29149  2852  1A0D               	btfsc	(13),(4)&7	;volatile
 29150  2853  2855               	goto	u566_21
 29151  2854  2856               	goto	u566_20
 29152  2855                     u566_21:
 29153  2855  2858               	goto	i1l13034
 29154  2856                     u566_20:
 29155                           	line	170
 29156                           	
 29157  2856                     i1l33887:	
 29158                           ;catsensor.c: 170: echoed = 1;
 29159  2856  1670               	bsf	(_echoed/8),(_echoed)&7
 29160  2857  2858               	goto	i1l13034
 29161                           	line	171
 29162                           	
 29163  2858                     i1l13033:	
 29164                           	line	172
 29165                           	
 29166  2858                     i1l13034:	
 29167  2858  0008               	return
 29168                           	opt stack 0
 29169                           GLOBAL	__end_of_catsensor_isr_input
 29170  2859                     	__end_of_catsensor_isr_input:
 29171 ;; =============== function _catsensor_isr_input ends ============
 29172                           
 29173                           	signat	_catsensor_isr_input,88
 29174                           	global	_catsensor_isr_timer
 29175                           psect	text3318,local,class=CODE,delta=2
 29176                           global __ptext3318
 29177  2A10                     __ptext3318:
 29178                           
 29179 ;; *************** function _catsensor_isr_timer *****************
 29180 ;; Defined at:
 29181 ;;		line 136 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29182 ;; Parameters:    Size  Location     Type
 29183 ;;		None
 29184 ;; Auto vars:     Size  Location     Type
 29185 ;;		None
 29186 ;; Return value:  Size  Location     Type
 29187 ;;		None               void
 29188 ;; Registers used:
 29189 ;;		wreg, status,2, status,0
 29190 ;; Tracked objects:
 29191 ;;		On entry : 0/0
 29192 ;;		On exit  : 0/0
 29193 ;;		Unchanged: 0/0
 29194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29199 ;;Total ram usage:        1 bytes
 29200 ;; Hardware stack levels used:    1
 29201 ;; This function calls:
 29202 ;;		Nothing
 29203 ;; This function is called by:
 29204 ;;		_isr
 29205 ;; This function uses a non-reentrant model
 29206 ;;
 29207                           psect	text3318
 29208                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29209                           	line	136
 29210                           	global	__size_of_catsensor_isr_timer
 29211  001C                     	__size_of_catsensor_isr_timer	equ	__end_of_catsensor_isr_timer-_catsensor_isr_timer
 29212                           	
 29213  2A10                     _catsensor_isr_timer:	
 29214                           	opt	stack 7
 29215                           ; Regs used in _catsensor_isr_timer: [wreg+status,2+status,0]
 29216                           	line	137
 29217                           	
 29218  2A10                     i1l33867:	
 29219                           ;catsensor.c: 137: if (pinging) {
 29220  2A10  1F71               	btfss	(_pinging/8),(_pinging)&7
 29221  2A11  2A13               	goto	u563_21
 29222  2A12  2A14               	goto	u563_20
 29223  2A13                     u563_21:
 29224  2A13  2A2B               	goto	i1l13030
 29225  2A14                     u563_20:
 29226                           	line	139
 29227                           	
 29228  2A14                     i1l33869:	
 29229                           ;catsensor.c: 139: pinging = 0;
 29230  2A14  1371               	bcf	(_pinging/8),(_pinging)&7
 29231                           	line	141
 29232                           	
 29233  2A15                     i1l33871:	
 29234                           ;catsensor.c: 141: PR2 = 0 ;
 29235  2A15  0020               	movlb 0	; select bank0
 29236  2A16  019B               	clrf	(27)	;volatile
 29237                           	line	145
 29238                           ;catsensor.c: 145: T2CON = 0 ;
 29239  2A17  019C               	clrf	(28)	;volatile
 29240                           	line	147
 29241                           ;catsensor.c: 147: CCPR1L = 0 ;
 29242  2A18  0025               	movlb 5	; select bank5
 29243  2A19  0191               	clrf	(657)^0280h	;volatile
 29244                           	line	148
 29245                           	
 29246  2A1A                     i1l33873:	
 29247                           ;catsensor.c: 148: TMR2IE = 0;
 29248  2A1A  0021               	movlb 1	; select bank1
 29249  2A1B  1091               	bcf	(1161/8)^080h,(1161)&7
 29250                           	line	149
 29251                           	
 29252  2A1C                     i1l33875:	
 29253                           ;catsensor.c: 149: TMR2IF = 0;
 29254  2A1C  0020               	movlb 0	; select bank0
 29255  2A1D  1091               	bcf	(137/8),(137)&7
 29256                           	line	150
 29257                           	
 29258  2A1E                     i1l33877:	
 29259                           ;catsensor.c: 150: TMR2ON = 0;
 29260  2A1E  111C               	bcf	(226/8),(226)&7
 29261                           	line	151
 29262                           ;catsensor.c: 151: CCP1CON = 0;
 29263  2A1F  0025               	movlb 5	; select bank5
 29264  2A20  0193               	clrf	(659)^0280h	;volatile
 29265                           	line	152
 29266                           	
 29267  2A21                     i1l33879:	
 29268                           ;catsensor.c: 152: LATC &= ~(1U << (2));
 29269  2A21  30FB               	movlw	(0FBh)
 29270  2A22  00F2               	movwf	(??_catsensor_isr_timer+0)+0
 29271  2A23  0872               	movf	(??_catsensor_isr_timer+0)+0,w
 29272  2A24  0022               	movlb 2	; select bank2
 29273  2A25  058E               	andwf	(270)^0100h,f	;volatile
 29274                           	line	154
 29275                           	
 29276  2A26                     i1l33881:	
 29277                           ;catsensor.c: 154: detected_cur = echoed;
 29278  2A26  1170               	bcf	(_detected_cur/8),(_detected_cur)&7
 29279  2A27  1E70               	btfss	(_echoed/8),(_echoed)&7
 29280  2A28  2A2A               	goto	u564_25
 29281  2A29  1570               	bsf	(_detected_cur/8),(_detected_cur)&7
 29282  2A2A                     u564_25:
 29283                           
 29284  2A2A  2A2B               	goto	i1l13030
 29285                           	line	155
 29286                           	
 29287  2A2B                     i1l13029:	
 29288                           	line	156
 29289                           	
 29290  2A2B                     i1l13030:	
 29291  2A2B  0008               	return
 29292                           	opt stack 0
 29293                           GLOBAL	__end_of_catsensor_isr_timer
 29294  2A2C                     	__end_of_catsensor_isr_timer:
 29295 ;; =============== function _catsensor_isr_timer ends ============
 29296                           
 29297                           	signat	_catsensor_isr_timer,88
 29298                           	global	_timer_isr
 29299                           psect	text3319,local,class=CODE,delta=2
 29300                           global __ptext3319
 29301  2B47                     __ptext3319:
 29302                           
 29303 ;; *************** function _timer_isr *****************
 29304 ;; Defined at:
 29305 ;;		line 369 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 29306 ;; Parameters:    Size  Location     Type
 29307 ;;		None
 29308 ;; Auto vars:     Size  Location     Type
 29309 ;;		None
 29310 ;; Return value:  Size  Location     Type
 29311 ;;		None               void
 29312 ;; Registers used:
 29313 ;;		wreg
 29314 ;; Tracked objects:
 29315 ;;		On entry : 0/0
 29316 ;;		On exit  : 0/0
 29317 ;;		Unchanged: 0/0
 29318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29323 ;;Total ram usage:        0 bytes
 29324 ;; Hardware stack levels used:    1
 29325 ;; This function calls:
 29326 ;;		Nothing
 29327 ;; This function is called by:
 29328 ;;		_isr
 29329 ;; This function uses a non-reentrant model
 29330 ;;
 29331                           psect	text3319
 29332                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 29333                           	line	369
 29334                           	global	__size_of_timer_isr
 29335  0027                     	__size_of_timer_isr	equ	__end_of_timer_isr-_timer_isr
 29336                           	
 29337  2B47                     _timer_isr:	
 29338                           	opt	stack 7
 29339                           ; Regs used in _timer_isr: [wreg]
 29340                           	line	371
 29341                           	
 29342  2B47                     i1l33863:	
 29343                           ;timer.c: 371: overflows++;
 29344  2B47  3001               	movlw	01h
 29345  2B48  0021               	movlb 1	; select bank1
 29346  2B49  07CA               	addwf	(_overflows)^080h,f	;volatile
 29347  2B4A  3000               	movlw	0
 29348  2B4B  3DCB               	addwfc	(_overflows+1)^080h,f	;volatile
 29349  2B4C  3000               	movlw	0
 29350  2B4D  3DCC               	addwfc	(_overflows+2)^080h,f	;volatile
 29351  2B4E  3000               	movlw	0
 29352  2B4F  3DCD               	addwfc	(_overflows+3)^080h,f	;volatile
 29353                           	line	377
 29354                           ;timer.c: 377: if (overflows >= 0xFFFF0000) {
 29355  2B50  30FF               	movlw	0FFh
 29356  2B51  024D               	subwf	(_overflows+3)^080h,w	;volatile
 29357  2B52  1D03               	skipz
 29358  2B53  2B5E               	goto	u562_25
 29359  2B54  30FF               	movlw	0FFh
 29360  2B55  024C               	subwf	(_overflows+2)^080h,w	;volatile
 29361  2B56  1D03               	skipz
 29362  2B57  2B5E               	goto	u562_25
 29363  2B58  3000               	movlw	0
 29364  2B59  024B               	subwf	(_overflows+1)^080h,w	;volatile
 29365  2B5A  1D03               	skipz
 29366  2B5B  2B5E               	goto	u562_25
 29367  2B5C  3000               	movlw	0
 29368  2B5D  024A               	subwf	(_overflows)^080h,w	;volatile
 29369  2B5E                     u562_25:
 29370  2B5E  1C03               	skipc
 29371  2B5F  2B61               	goto	u562_21
 29372  2B60  2B62               	goto	u562_20
 29373  2B61                     u562_21:
 29374  2B61  2B6D               	goto	i1l21395
 29375  2B62                     u562_20:
 29376                           	line	378
 29377                           	
 29378  2B62                     i1l33865:	
 29379                           ;timer.c: 378: overflows = 0;
 29380  2B62  3000               	movlw	0
 29381  2B63  00CD               	movwf	(_overflows+3)^080h	;volatile
 29382  2B64  3000               	movlw	0
 29383  2B65  00CC               	movwf	(_overflows+2)^080h	;volatile
 29384  2B66  3000               	movlw	0
 29385  2B67  00CB               	movwf	(_overflows+1)^080h	;volatile
 29386  2B68  3000               	movlw	0
 29387  2B69  00CA               	movwf	(_overflows)^080h	;volatile
 29388                           
 29389  2B6A  2B6B               	goto	i1l21393
 29390                           	line	380
 29391                           ;timer.c: 380: while(1);
 29392                           	
 29393  2B6B                     i1l21392:	
 29394                           	
 29395  2B6B                     i1l21393:	
 29396  2B6B  2B6B               	goto	i1l21393
 29397                           	
 29398  2B6C                     i1l21394:	
 29399  2B6C  2B6D               	goto	i1l21395
 29400                           	line	381
 29401                           	
 29402  2B6D                     i1l21391:	
 29403                           	line	382
 29404                           	
 29405  2B6D                     i1l21395:	
 29406  2B6D  0008               	return
 29407                           	opt stack 0
 29408                           GLOBAL	__end_of_timer_isr
 29409  2B6E                     	__end_of_timer_isr:
 29410 ;; =============== function _timer_isr ends ============
 29411                           
 29412                           	signat	_timer_isr,88
 29413                           	global	fptotal
 29414  000B                     fptotal equ 11
 29415                           	file ""
 29416                           	line	#
 29417                           psect	functab,class=CODE,delta=2,reloc=256
 29418                           global __pfunctab
 29419  0100                     __pfunctab:
 29420                           	global	fptable
 29421  0100                     fptable:
 29422  0100  3181               	movlp high(fptable)
 29423  0101  0782               	addwf pc
 29424                           	global	fpbase
 29425  0102                     fpbase:
 29426  0102  2902               	goto fpbase	; Call via a null pointer and you will get stuck here.
 29427                           	file ""
 29428                           	line	#
 29429  0103                     fp__help:
 29430  0103  31A0  2825         	ljmp	_help
 29431                           	file ""
 29432                           	line	#
 29433  0105                     fp__echo:
 29434  0105  31A4  2CBD         	ljmp	_echo
 29435                           	file ""
 29436                           	line	#
 29437  0107                     fp__setupbutton_event:
 29438  0107  31A8  2867         	ljmp	_setupbutton_event
 29439                           	file ""
 29440                           	line	#
 29441  0109                     fp__heatsensor_event:
 29442  0109  31A9  2920         	ljmp	_heatsensor_event
 29443                           	file ""
 29444                           	line	#
 29445  010B                     fp__startbutton_event:
 29446  010B  31A8  2875         	ljmp	_startbutton_event
 29447                           	global	btemp
 29448  007E                     	btemp set 07Eh
 29449                           
 29450                           	DABS	1,126,2	;btemp
 29451                           	global	wtemp0
 29452  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Mar 10 12:27:37 2023

           __end_of_set_LED_Error 28B0                                 pc 0002                      proc_line@len 005A  
                  ___bmul@product 0023                                _RD 0CA8            __end_of_set_LED_Locked 28DD  
                              _WR 0CA9                       _wet_program 036C                                _rx 0131  
             ___wmul@multiplicand 0023                    _update_display 098C                     proc_line@argc 0058  
                   proc_line@argv 0051                     proc_line@line 005C            __end_of_interrupt_init 3800  
                             _GIE 005F                               _PR2 001B                               _RX9 0CEE  
                             _TX9 0CF6                               _isr 0004                       _start_short 01DE  
                             wreg 0009           userinterface_init@flags 004B                  ?_get_instruction 0072  
                  proc_line@index 0056            ??_litterlanguage_event 0022            ??_litterlanguage_pause 004F  
                   rtc_init@flags 003D            ??_litterlanguage_start 004F                              l2081 2778  
                            l2090 27C9                              l2082 27AC                              l2091 27E8  
                            l2083 2787                              l2092 27FE                              l2084 27AB  
                            l2093 27FE                              l2085 2794                              l2086 27AA  
                            l2087 27A0                              l2096 37FF                              l2088 27A9  
                            l2089 27BC                              l4300 1446                              l4301 1470  
                            l4310 2213                              l4230 25D4                              l4231 25E1  
                            l4304 2836                              l4320 235A                              l4232 262F  
                            l4224 2617                              l4240 1E92                              l4321 234E  
                            l4233 2600                              l4225 25B6                              l4401 0D0B  
                            l4241 1FFF                              l4330 2D82                              l4322 235A  
                            l4314 22FA                              l4234 260D                              l4226 25F1  
                            l4410 0D89                              l4250 1F39                              l4242 1F1C  
                            l4307 21B4                              l4235 260E                              l4227 25BE  
                            l4403 0D11                              l4251 1FD0                              l4243 1ECC  
                            l4340 2955                              l4332 2D60                              l4308 2214  
                            l4316 22FF                              l4236 260F                              l4228 25FF  
                            l4420 0DE3                              l4412 0D93                              l4252 1FB8  
                            l4244 1F01                              l4341 2955                              l4309 2202  
                            l4317 233A                              l4229 25C7                              l4237 262F  
                            l4421 0DF2                              l4405 0D1E                              l4261 1F89  
                            l4245 1F1B                              l4325 2930                              l4334 2D65  
                            l4318 232D                              l4422 0DF3                              l4414 0D99  
                            l4246 1FF4                              l4262 1FA4                              l4254 1F5F  
                            l4335 2D82                              l4319 2339                              l4431 0E33  
                            l4407 0D24                              l4263 1FB7                              l4247 1F1D  
                            l4344 2962                              l4280 0981                              l4440 0E82  
                            l4424 0DFD                              l4416 0DA6                              l4408 0D4A  
                            l4360 0B6D                              l4248 1FFF                              l4264 1FC7  
                            l4256 1F64                              l4345 2959                              l4273 098B  
                            l4281 098B                              l4353 0FEC                              l4441 0EB2  
                            l4433 0E39                              l4409 0D54                              l4265 1FD1  
                            l4257 1FAE                              l4249 1F1E                              l4338 294F  
                            l4346 295A                              l4290 149F                              l4450 0F8A  
                            l4442 0EB6                              l4434 0E69                              l4426 0E03  
                            l4418 0DAC                              l4370 0BBF                              l4362 0B73  
                            l4354 0B4F                              l4266 1FE1                              l4339 2944  
                            l4347 2968                              l4275 0961                              l4291 137B  
                            l4363 0FF7                              l4451 0FAA                              l4443 0EBB  
                            l4435 0E6D                              l4427 0E1F                              l4419 0DE9  
                            l4267 1FEE                              l4259 1F92                              l4284 37F6  
                            l4348 2968                              l4460 25B2                              l4292 149A  
                            l4452 0FBB                              l4436 0E72                              l4428 0E28  
                            l4372 0BC5                              l4364 0BA1                              l4356 0B7A  
                            l4268 1FEF                              l4461 2550                              l4277 0966  
                            l4293 1381                              l4453 0FD0                              l4445 0EC5  
                            l4429 0E29                              l4381 0C16                              l4373 0BF3  
                            l4462 256D                              l4278 097B                              l4294 13B1  
                            l4454 0FFF                              l4438 0E7C                              l4390 0CA7  
                            l4382 0C93                              l4366 0BCC                              l4358 0B80  
                            l4463 256C                              l4279 0974                              l4295 13D2  
                            l4447 0ECB                              l4383 0C85                              l4375 0BFD  
                            l4464 2588                              l4296 13FC                              l4448 0F4C  
                            l4392 0CAD                              l4384 0C56                              l4368 0BD2  
                            l4457 25A6                              l4465 2587                              l4297 13FB  
                            l4289 1262                              l4449 0F56                              l4385 0C7B  
                            l4377 0C03                              l4466 2589                              l4458 2538  
                            l4298 141D                              l4394 0CBA                              l4386 0C84  
                            l4467 259B                              l4459 254F                              l4299 1447  
                            l4387 0C92                              l4379 0C10                              l4468 259C  
                            l4396 0CC0                              l4388 0C9D                              l4469 25B2  
                            l4397 0CEE                              l4398 0CF7                              l6511 29DB  
                            l4399 0D01                              l6508 284C                              ?_isr 0072  
                            l8700 1806                              l8701 1803                              l8702 180B  
                            l8710 2232                              l8703 1804                              l8711 2275  
                            l8704 180B                              l8712 2274                              l8640 1D52  
                            l8801 28EC                              l8721 2F23                              l8713 2272  
                            l8641 1DE7                              l8810 2734                              l8722 2F2F  
                            l8730 09AB                              l8634 2C60                              l8714 227D  
                            l8650 1DC0                              l8642 1D58                              l8811 274D  
                            l8723 2F46                              l8731 0A64                              l8635 2C75  
                            l8707 2225                              l8651 1DE5                              l8643 1D5A  
                            l8804 273E                              l8740 09ED                              l8732 09AC  
                            l8708 227D                              l8660 1E0D                              l8652 1DD8  
                            l8644 1D94                              l8805 26C1                              l8717 2EF7  
                            l8741 09EE                              l8733 09AE                              l8709 2250  
                            l8661 1E82                              l8653 1DDF                              l8645 1D8A  
                            l8806 274D                              l8718 2EFC                              l8726 0B0D  
                            l8742 09EF                              l8750 0B19                              l8734 09AF  
                            l8662 1E63                              l8654 1E0F                              l8646 1D93  
                            l8638 1D57                              l8807 26F1                              l8719 2F25  
                            l8751 0A70                              l8743 09F0                              l8735 09B0  
                            l8727 098D                              l8663 1E39                              l8655 1DF4  
                            l8647 1DF3                              l8639 1D4F                              l8808 2712  
                            l8752 0AC1                              l8744 0A37                              l8736 09B1  
                            l8728 098F                              l8664 1E79                              l8656 1E28  
                            l8648 1D95                              l8672 2882                              l8809 2723  
                            l8753 0AC8                              l8745 0A62                              l8737 09B2  
                            l8729 09A2                              l8681 18A6                              l8665 1E47  
                            l8657 1DF5                              l8649 1DBF                              l8754 0AC9  
                            l8738 0A6F                              l8746 0A58                              l8762 24B0  
                            l8770 2460                              l8690 1927                              l8682 18B9  
                            l8666 1E54                              l8658 1DFD                              l8755 0B35  
                            l8747 0A4E                              l8739 09EC                              l8771 246C  
                            l8763 2447                              l8691 1905                              l8683 18DB  
                            l8667 1E61                              l8659 1E05                              l8675 2874  
                            l8756 0B2B                              l8748 0A57                              l8772 249E  
                            l8780 249A                              l8764 2449                              l8692 1938  
                            l8684 18C9                              l8668 1E8B                              l8757 0B34  
                            l8749 0A61                              l8781 24AE                              l8773 2477  
                            l8693 1907                              l8685 18DA                              l8669 1E8B  
                            l8758 0B3C                              l8790 01FE                              l8774 249D  
                            l8782 24BC                              l8766 2458                              l8686 1941  
                            l8694 1910                              l8759 0B3C                              l8775 2482  
                            l8695 191A                              l8679 18A1                              l8776 249C  
                            l8768 245B                              l8696 1924                              l8688 18FA  
                            l8785 01FF                              l8769 24BC                              l8777 248D  
                            l8793 2A0B                              l8689 193D                              l8697 1941  
                            l8778 249B                              l8794 2A0F                              l8779 2498  
                            l8795 2A0F                              l8788 01F3                              l8789 01FE  
                            l8798 297D                              STR_1 060C                              STR_2 078F  
                            STR_3 073E                              STR_4 077F                              STR_5 0646  
                            STR_6 0867                              STR_7 066C                              STR_8 0659  
                            STR_9 08EA                              _BRGH 0CF2                              _CREN 0CEC  
                            _FERR 0CEA                              _CSRC 0CF7                              _LATA 010C  
                            _LATB 010D                              _LATC 010E                              _LATD 010F  
                            _LATE 0110                              u6000 22D8                              u6001 22D7  
                            u6010 2C89                              u6011 2C88                              u6020 100D  
                            u6021 100C                              u6030 101D                              u6031 101C  
                            u6040 104E                              u6041 104D                 ??_postponetimeout 0027  
                            _PEIE 005E                              u6045 104A                              u6400 2109  
                            u6401 2108                              _RCIE 048D                              u6420 2124  
                            u6500 1A1A                              _RCIF 008D                              u6421 2123  
                            u5550 2B80                              u6510 1A51                              u5551 2B7F  
                            u6415 210C                              u6440 213B                              u6520 1A6D  
                            u6441 213A                              u6425 2120                              u6505 1A16  
                            u6530 1A94                              u6435 212F                              u6515 1A4D  
                            u5900 2F56                              u6380 20F5                              u6540 1AA3  
                            u5901 2F55                              u6381 20F4                              u6525 1A69  
                            u5910 2F91                              u6550 1ABF                              u5911 2F90  
                            u6551 1ABE                              u6535 1A90                              u6545 1A9F  
                            u5850 1C23                              u6490 1A0C                              _OERR 0CE9  
                            u5851 1C22                              u5915 2F8D                              u6395 20FA  
                            u6491 1A0B                              u9300 2904                              u5860 1C4E  
                            u5861 1C4D                              u9230 2CAD                              u9310 2915  
                            u5870 1CAB                              u9231 2CAC                              u5871 1CAA  
                            u5855 1C1F                              u9240 2CC9                              u9320 2E4F  
                            u5960 2294                              u9241 2CC8                              u9321 2E4E  
                            u5865 1C4A                              u5961 2293                              u9250 2CD8  
                            u9330 2C46                              u5890 2E8C                              u5970 22BE  
                            u9410 299D                              u9251 2CD7                              u5875 1CA7  
                            u9331 2C45                              u5971 22BD                              u9411 299C  
                            u9260 2AE4                              u9340 2BC7                              u5980 22C2  
                            u9420 29A3                              u9261 2AE3                              u9341 2BC6  
                            u5981 22C1                              u9421 29A2                              u9270 28F3  
                            u9350 2BCF                              u5990 22D2                              u9430 29E4  
                            u9510 2DDD                              u9335 2C42                              u9351 2BCE  
                            u5991 22D1                              u9431 29E3                              u9511 2DDC  
                            u9360 2BD7                              u9440 29F2                              u9361 2BD6  
                            u9441 29F1                              u9505 2DD0                              u9290 2989  
                            u9370 2BE7                              u9450 2008                              u9530 2DEE  
                            u9610 2DB8                              u9291 2988                              u9371 2BE6  
                            u9451 2007                              u9531 2DED                              u9611 2DB7  
                            u9620 2D21                              u9700 14AC                              u9285 2984  
                            u9525 2DE0                              u9605 2DAE                              u9621 2D20  
                            u9701 14AB                              u9550 2DFF                              u9710 14D5  
                            u9551 2DFE                              u9535 2DEA                              u9711 14D4  
                            u9480 201C                              u9560 2D8A                              u9800 15B9  
                            u9720 150B                              u9481 201B                              u9465 200D  
                            u9545 2DF5                              u9561 2D89                              u9801 15B8  
                            u9721 150A                              u9490 2DCB                              u9650 2D40  
                            u9810 15DD                              u9730 1518                              u9475 2012  
                            u9491 2DCA                              u9651 2D3F                              u9635 2D2B  
                            u9811 15DC                              u9731 1517                              u9580 2D9C  
                            u9660 00A2                              u9900 1699                              u9820 1611  
                            u9740 1544                              u9581 2D9B                              u9645 2D32  
                            u9661 00A1                              u9901 1698                              u9821 1610  
                            u9805 15B5                              u9741 1543                              u9590 2DA8  
                            u9670 00E4                              u9910 16A5                              u9830 1620  
                            u9750 155F                              u9591 2DA7                              u9575 2D8F  
                            u9671 00E3                              u9911 16A4                              u9831 161F  
                            u9815 15D9                              u9751 155E                              u9680 00E9  
                            u9920 16BE                              u9840 163C                              u9760 1578  
                            u9681 00E8                              u9921 16BD                              u9905 1695  
                            u9841 163B                              u9761 1577                              u9690 00EE  
                            u9930 16CD                              u9850 1642                              u9770 157D  
                            u9595 2DA4                              u9691 00ED                              u9931 16CC  
                            u9851 1641                              u9940 16D8                              u9860 1652  
                            u9780 158C                              u9941 16D7                              u9861 1651  
                            u9781 158B                              u9950 16DE                              u9870 166A  
                            u9790 159C                              u9951 16DD                              u9871 1669  
                            u9791 159B                              u9960 16F7                              u9880 1676  
                            u9961 16F6                              u9881 1675                              u9785 1588  
                            u9970 171A                              u9890 1681                              u9971 1719  
                            u9891 1680                              u9875 1666                              u9795 1598  
                            u9980 172D                              u9981 172C                              u9965 16F3  
                            u9990 1733                              u9991 1732                              u9975 1716  
                            _SPEN 0CEF                              _TXIE 048C                              _WREN 0CAA  
                            _TXEN 0CF5                              _TXIF 008C                              _SYNC 0CF4  
                            _WPUB 020D                    ??_eeprom_write 0022                              _WPUE 0210  
           ??_catsensor_isr_input 0072                serial_init@bitrate 002F                 timeoutnow@timer_p 0025  
              serial_init@divider 003F             ??_catsensor_isr_timer 0072                              _nBOR 04B0  
                            _nPOR 04B1                  ?_exe_instruction 0072                              _echo 24BD  
                            _help 2025                              _main 274E                 _startbutton_event 2875  
                            fsr0h 0005                              fsr1h 0007                              fsr0l 0004  
                            indf0 0000                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              start 004E  romwashprogram_getins@instruction 0024  
             timeoutnever@timer_p 0025                 ___bmul@multiplier 0024                proc_char@curcolumn 0067  
           _exe_instruction$30234 00A0             _exe_instruction$30235 00A2                             S38933 281E  
                           S38925 2800                             S38919 00F3            __end_of_update_display 0B3D  
         ??_litterlanguage_paused 0021                             ??_isr 007B               ??_startbutton_event 0041  
                 ?_set_LED_Locked 002E                  _update_autotimer 26BE                  _heatsensor_event 2920  
                   ?_gettimestamp 0021                             l13022 2662                             l13023 2688  
                           l13024 26BD                             l13025 26BC                             l13026 26BD  
                           l13019 2891                             l10901 28DC                             l10910 28A0  
                           l10904 28BE                             l10913 2B16                             l10922 2A89  
                           l10914 2B02                             l10930 2B26                             l10923 2A82  
                           l10915 2B03                             l10931 2B27                             l10907 28CD  
                           l10924 2A9E                             l10916 2B22                             l10940 2ABC  
                           l10932 2B46                             l15100 1837                             l21341 2841  
                           l10925 2A85                             l10917 2B09                             l10941 2AA3  
                           l10933 2B2D                             l15101 1836                             l10926 2A9C  
                           l10918 2B0D                             l10942 2ABA                             l10934 2B35  
                           l10950 37D2                             l21350 2FA1                             l10862 00A4  
                           l15110 188A                             l15102 1842                             l10870 1099  
                           l10919 2B22                             l10935 2B46                             l21351 2FA1  
                           l10863 00E4                             l15111 1889                             l15103 1841  
                           l10871 10B3                             l10864 00EA                             l21360 23A2  
                           l21344 2162                             l15120 1B08                             l15104 188C  
                           l15112 1888                             l10880 11FF                             l10872 10BD  
                           l10945 28F6                             l10929 2B3A                             l10953 2907  
                           l10961 2918                             l10865 00F0                             l21361 239E  
                           l21345 21AB                             l15121 1B67                             l15105 1872  
                           l15113 188C                             l10881 1248                             l10873 1158  
                           l10946 28FD                             l10938 2AA7                             l10954 290E  
                           l10962 291F                             l21354 2A63                             l10890 2E66  
                           l10866 00F2                             l21362 23CE                             l21346 21AB  
                           l10970 2445                             l15130 1B65                             l15122 1B09  
                           l15106 1853                             l10882 1247                             l10874 114D  
                           l10947 28FD                             l10939 2AA0                             l10955 290E  
                           l10963 291F                             l10891 2E6F                             l21363 23A1  
                           l15131 1B66                             l15123 1B14                             l15107 1863  
                           l10883 1255                             l10875 113C                             l21380 1CF9  
                           l10892 2E78                             l21364 23CE                             l15140 1B9D  
                           l15132 1B71                             l15124 1B0A                             l15116 1AE4  
                           l15108 1871                             l10876 1161                             l21357 2A47  
                           l21381 1C25                             l10893 2E9E                             l21349 2F58  
                           l21365 23CA                             l15141 1BEF                             l15133 1BE3  
                           l15125 1B29                             l15117 1AD6                             l15109 188B  
                           l10877 1255                             l10869 107F                             l10958 37CD  
                           l10966 37D7                             l21374 2E11                             l21382 1C81  
                           l10894 2E95                             l10886 2E7A                             l21366 23CD  
                           l15134 1BA6                             l15142 1BEF                             l15126 1B40  
                           l10878 1249                             l21375 2E50                             l21383 1D23  
                           l10895 2E9E                             l10887 2E54                             l15135 1B82  
                           l15127 1B46                             l15119 1B07                             l10879 11DB  
                           l21376 2E50                             l21384 1C82                             l10888 2E88  
                           l15160 2520                             l15152 24D2                             l15136 1BE2  
                           l15128 1B41                             l21385 1CE5                             l10889 2E5D  
                           l10969 23FF                             l15145 2ED0                             l15153 2536  
                           l15137 1B83                             l21386 1CEE                             l15146 2EA4  
                           l10898 28AF                             l15162 2525                             l15154 2516  
                           l15138 1B8B                             l15090 2ABF                             l21379 1D24  
                           l21387 1CEF                             l15147 2ECB                             l15083 2866  
                           l15155 24F5                             l15139 1B94                             l15091 2AD0  
                           l21388 1D2D                             l23500 14B6                             l15148 2EEC  
                           l15084 2866                             l15156 2515                             l15092 2AC4  
                           l23501 14BE                             l15149 2EE6                             l15165 203C  
                           l15157 250E                             l15093 2ADB                             l23510 1538  
                           l23502 14B7                             l15166 2083                             l15158 2514  
                           l15094 2ADB                             l23511 151E                             l23503 14C8  
                           l15167 2068                             l15087 2AD1                             l23520 154C  
                           l23512 1545                             l23504 14C7                             l15168 2045  
                           l15088 2ABE                             l34001 2A87                             l23521 154C  
                           l23513 1548                             l23505 14C9                             l15169 207F  
                           l15089 2ACA                             l23442 2B7C                             l23514 15E6  
                           l23530 15AA                             l23522 154E                             l23506 150D  
                           l17210 2A80                             l23450 1945                             l23443 2B75  
                           l34003 2A88                             l23531 15A5                             l23523 1564  
                           l23515 1549                             l23507 14D9                             l17211 2A80  
                           l23451 1954                             l15099 1843                             l23444 2B80  
                           l23516 17FF                             l23540 1637                             l23532 15BA  
                           l23524 156C                             l23508 150C                             l23452 19FE  
                           l23460 19DE                             l23445 2B95                             l34005 2A89  
                           l34101 1BF9                             l23541 1647                             l23533 15C9  
                           l23525 1567                             l23517 154A                             l23509 1546  
                           l23461 19DD                             l23453 196B                             l23542 16A8  
                           l23550 1683                             l23534 15BB                             l23526 1579  
                           l23518 154B                             l17214 20E3                             l17222 2C19  
                           l23454 197A                             l23462 19FE                             l34007 2A9C  
                           l34031 2AA2                             l34111 1C4E                             l34103 1BFF  
                           l23551 16A6                             l23543 1648                             l23519 160B  
                           l23535 15DE                             l23527 1592                             l17215 20E2  
                           l23455 1983                             l23480 298C                             l23560 1725  
                           l23552 169B                             l23544 1649                             l23536 15DF  
                           l23528 15A1                             l17216 20E1                             l23448 19F2  
                           l23456 1989                             l23465 37DD                             l34009 2A9E  
                           l34041 2ABA                             l34033 2AA3                             l23481 2993  
                           l34121 1CF8                             l34113 1C82                             l34105 1C03  
                           l23561 1729                             l23553 16C3                             l23545 1654  
                           l23537 15E0                             l23529 15A4                             l17217 20E0  
                           l23457 199E                             l23449 1943                             l23482 2993  
                           l23570 1769                             l23562 1752                             l23554 16D2  
                           l23546 1677                             l23538 162B                             l17218 20DF  
                           l23458 19C0                             l34043 2ABC                             l34035 2AA5  
                           l34027 2A9F                             l34115 1CAB                             l34107 1C24  
                           l34123 1CF9                             l34211 2283                             l23571 1775  
                           l23563 1738                             l23555 16D2                             l23547 166C  
                           l23539 162A                             l17219 20E3                             l23459 19BF  
                           l23580 17FE                             l23572 17DA                             l23564 1751  
                           l23556 16E3                             l23548 16B4                             l23477 37E3  
                           l34037 2AA6                             l34029 2AA0                             l34117 1CE5  
                           l34109 1C25                             l34125 1D24                             l34133 2832  
                           l34221 22C2                             l34213 2294                             l23573 1777  
                           l23565 1740                             l23557 1707                             l23549 1678  
                           l23581 17FF                             l23574 17C8                             l23566 1750  
                           l23558 1702                             l34039 2AA7                             l34127 1D2D  
                           l34119 1CEF                             l34135 2836                             l34223 22D3  
                           l34215 22A6                             l34231 22E4                             l23575 1778  
                           l23567 1776                             l23559 1706                             l23576 1779  
                           l23568 176A                             l34081 37D7                             l34161 2E54  
                           l34233 22E6                             l34225 22D9                             l34217 22BA  
                           l34209 2280                             l34241 2C8A                             l34401 20F5  
                           l23497 17E7                             l23577 17D5                             l23569 1759  
                           l23578 17A4                             l23498 14A6                             l34163 2E5D  
                           l34171 2E7A                             l34235 22E9                             l34227 22DC  
                           l34219 22BE                             l34243 2CA4                             l34251 101E  
                           l34411 2124                             l34403 20F9                             l23579 17E6  
                           l23499 14B1                             l25380 2AFE                             l19300 2BD3  
                           l34165 2E66                             l34173 2E88                             l34181 2F4E  
                           l19301 2BE0                             l34229 22DF                             l34237 2C78  
                           l34261 104F                             l34253 1036                             l34245 1002  
                           l34421 2146                             l34413 212C                             l34405 2105  
                           l34501 1AAE                             l19302 2BE8                             l19310 22E9  
                           l34079 37D3                             l34175 2E8C                             l34167 2E6F  
                           l34159 2E53                             l34183 2F57                             l34239 2C7E  
                           l34263 1052                             l34255 1037                             l34247 1003  
                           l34415 212E                             l34407 210B                             l34511 1AB5  
                           l34503 1AB0                             l33801 2883                             l34177 2E95  
                           l34169 2E79                             l34185 2F58                             l19305 22E4  
                           l34257 103B                             l34249 100D                             l34417 2135  
                           l34409 2112                             l34521 1ABF                             l34513 1AB6  
                           l34505 1AB1                             l37001 15C9                             l25378 2ADE  
                           l19306 22DF                             l33803 288D                             l33811 2B75  
                           l25379 2AE5                             l34099 1BF0                             l34187 2F91  
                           l34179 2F47                             l19307 22D4                             l34259 1040  
                           l34419 213D                             l34523 1AC2                             l34515 1AB7  
                           l34507 1AB3                             l37011 1611                             l37003 15E0  
                           l27180 2CAE                             l19308 22D4                             l33805 288F  
                           l33821 2B92                             l33813 2B77                             l27181 2CCA  
                           l19309 22D9                             l34517 1AB8                             l34509 1AB4  
                           l37101 1759                             l37013 1618                             l37021 162B  
                           l37005 15E5                             l27182 2CDA                             l33815 2B7C  
                           l33807 2B6E                             l33823 37F7                             l27183 2CDB  
                           l34519 1ABA                             l19263 1A57                             l37111 17A4  
                           l37103 175D                             l37031 1649                             l37023 1632  
                           l37015 161C                             l37007 15E6                             l27184 2CDB  
                           l19264 1AAA                             l33817 2B82                             l33809 2B73  
                           l33825 37FD                             l27177 2CA7                             l19265 1AC5  
                           l34481 1A06                             l37113 17C7                             l37105 176A  
                           l37041 166C                             l37033 164C                             l37017 1620  
                           l37025 1637                             l37009 160B                             l37121 17E7  
                           l37201 2EC3                             l38001 0E33                             l27178 2CA8  
                           l29050 2C47                             l19266 1AC5                             l33819 2B8F  
                           l33827 37FE                             l27179 2CA8                             l29051 2C47  
                           l34491 1A57                             l34483 1A08                             l34475 19FF  
                           l37115 17C8                             l37107 1770                             l37051 1683  
                           l37043 1670                             l37035 1653                             l37027 163C  
                           l37019 1624                             l37131 239C                             l37123 235B  
                           l37211 2EEC                             l37203 2ECA                             l38011 0E76  
                           l38003 0E39                             ?_echo 0047                             l29060 1040  
                           l29044 29A7                             l29061 1003                             l29045 29A9  
                           l34493 1AAA                             l34485 1A0C                             l34477 1A04  
                           l37117 17D5                             l37109 1779                             l37053 169A  
                           l37045 1678                             l37037 1654                             l37029 1642  
                           l37061 16A8                             l37141 23C6                             l37133 239D  
                           l37125 2363                             l37205 2ECB                             l37213 2A66  
                           l37221 285E                             l37301 28B2                             l38021 0EB2  
                           l38013 0E7C                             l38005 0E51                             l38101 2449  
                           l29054 2C7E                             l29062 1037                             l29070 29E9  
                           l29150 2D1D                             l29055 2C7D                             l29071 29F3  
                           l29151 2D2A                             l34399 20E4                             l34495 1AAB  
                           l34487 1A40                             l34479 1A05                             l37119 17DA  
                           l37071 16D8                             l37055 169B                             l37047 167B  
                           l37039 166B                             l37063 16B4                             l37143 23C8  
                           l37135 239E                             l37127 2388                             l37151 2943  
                           l37207 2ED0                             l37215 2A75                             l37231 20B6  
                           l37223 2084                             l37303 28C1                             l37311 24D1  
                           l38031 0EFB                             l38023 0EBF                             l38015 0E82  
                           l38007 0E56                             l38111 2467                             l38103 2450  
                           l29048 2C38                             l19296 2BC9                             l29056 2C8A  
                           l29064 101E                             l29072 29F5                             l29152 2D41  
                           l29049 2C25                             l19297 2BEC                             l29057 2CA4  
                           l29065 1052                             l29081 2E01                             l29153 2D4A  
                           l34497 1AAC                             l34489 1A43                             l37073 16DE  
                           l37081 1707                             l37065 16BE                             l37057 169F  
                           l37049 1682                             l37145 23C9                             l37137 23A0  
                           l37129 239A                             l37153 2944                             l37161 2960  
                           l37209 2EE6                             l37217 2A7A                             l37241 20D1  
                           l37233 20B7                             l37225 2091                             l37305 28D0  
                           l37321 250C                             l37313 24D2                             l37401 1258  
                           l38041 0F51                             l38033 0F21                             l38025 0EC5  
                           l38017 0E9A                             l38009 0E69                             l38121 2482  
                           l38113 246C                             l38105 2458                             l38201 18DB  
                           l19298 2BE2                             l29066 104F                             l29082 2DD9  
                           l29250 210A                             l36611 2CC9                             l36603 2CAE  
                           l19299 2BCA                             l29075 2004                             l29083 2DCF  
                           l29091 2DBA                             l29251 210B                             l34499 1AAD  
                           l37091 1733                             l37083 171A                             l37075 16E4  
                           l37067 16C3                             l37059 16A7                             l37147 23CA  
                           l37139 23A2                             l37155 294F                             l37163 2961  
                           l37171 2157                             l37219 2859                             l37243 20DD  
                           l37235 20C3                             l37227 20A1                             l37251 2545  
                           l37331 2520                             l37323 250E                             l37315 24DA  
                           l37307 24BD                             l37411 128E                             l37403 1261  
                           l38051 0F84                             l38043 0F56                             l38035 0F26  
                           l38027 0ECB                             l38019 0E9F                             l38131 24AF  
                           l38123 2488                             l38115 2472                             l38107 245B  
                           l38211 18FE                             l38203 18E2                             l29076 200C  
                           l29084 2DDE                             l29092 2D98                             l29252 212E  
                           l36621 2CD8                             l36613 2CCD                             l36605 2CBD  
                           l36701 2918                             l29069 29E0                             l29077 201D  
                           l29085 2DDF                             l29093 2D8E                             l29253 213C  
                           l37093 1738                             l37085 1725                             l37077 16F7  
                           l37069 16CD                             l37149 23CC                             l37165 2962  
                           l37157 2958                             l37173 2161                             l37237 20C4  
                           l37229 20AA                             l37245 2BED                             l37261 2575  
                           l37253 2550                             l37341 2028                             l37333 2525  
                           l37325 2513                             l37317 24F1                             l37309 24CB  
                           l37421 12C3                             l37413 129C                             l37405 1262  
                           l37501 21B4                             l38061 0FB1                             l38053 0F8A  
                           l38045 0F63                             l38037 0F47                             l38029 0EE3  
                           l38125 248D                             l38117 2477                             l38109 2460  
                           l38133 24B0                             l38141 2A05                             l38221 1926  
                           l38213 1904                             l38205 18E8                             l38301 2684  
                           l37181 2925                             l29078 2024                             l29086 2DF4  
                           l29094 2D9D                             l29254 2146                             l33799 2837  
                           l36615 2CD1                             l36607 2CC3                             l36623 2AE5  
                           l36631 37DE                             l33991 37F6                             l36711 2E3F  
                           l36703 2E09                             l29087 2E00                             l29095 2D9E  
                           l29247 213D                             l37095 1740                             l37087 1729  
                           l37079 1702                             l37159 295A                             l37175 2162  
                           l37167 2147                             l37183 28DD                             l37191 23E9  
                           l37239 20D0                             l37271 259C                             l37263 257D  
                           l37255 255A                             l37247 2537                             l37351 2055  
                           l37343 2035                             l37335 2532                             l37319 24F5  
                           l37327 2516                             l37431 12FE                             l37423 12C7  
                           l37415 12A0                             l37407 1265                             l37511 21CF  
                           l37503 21BF                             l38071 0FD0                             l38063 0FB7  
                           l38055 0F9B                             l38047 0F6D                             l38039 0F4C  
                           l38127 2493                             l38119 247D                             l38143 2A0B  
                           l38135 29F6                             l38151 2229                             l38215 1907  
                           l38223 1927                             l38207 18EE                             l38231 1814  
                           l38303 2695                             l38311 1D2E                             l29088 2E08  
                           l29096 2DAD                             l29248 2105                             l36617 2CD2  
                           l36609 2CC5                             l36625 2AFE                             l36633 37E3  
                           l36641 37C9                             l33993 2A81                             l36705 2E11  
                           l36713 2842                             l36721 2C1C                             l36801 29F5  
                           l29097 2DB9                             l29249 20F9                             l37097 1744  
                           l37089 172D                             l37177 219B                             l37169 214E  
                           l37185 28DF                             l37193 23FE                             l37273 25A5  
                           l37265 2582                             l37257 2562                             l37249 2538  
                           l37281 26F1                             l37353 2062                             l37345 203B  
                           l37337 2536                             l37329 251B                             l37361 2D4D  
                           l37441 134E                             l37433 1306                             l37425 12D6  
                           l37417 12B0                             l37409 126A                             l37521 21EF  
                           l37513 21D3                             l37505 21C3                             l37601 099C  
                           l38073 0FDE                             l38065 0FBB                             l38057 0FA5  
                           l38049 0F77                             l38081 0FF7                             l38129 249E  
                           l38137 29FE                             l38153 222D                             l38161 2250  
                           l38145 2217                             l38217 1910                             l38225 1938  
                           l38209 18F4                             l38241 1831                             l38233 181A  
                           l38305 269D                             l38401 1E5C                             l38321 1D52  
                           l38313 1D30                             l29098 2DC1                             l36619 2CD3  
                           l36627 37D8                             l36635 1802                             l36643 37CD  
                           l36651 28F3                             l33995 2A82                             l36707 2E15  
                           l36715 29C4                             l36723 2C25                             l36731 2A48  
                           l36811 201D                             l36803 2000                             l37099 1752  
                           l37195 23FF                             l37187 23D1                             l37267 2589  
                           l37259 256D                             l37275 25A6                             l37283 2712  
                           l37291 273E                             l37355 2068                             l37347 203C  
                           l37339 2025                             l37371 2D65                             l37363 2D52  
                           l37451 1388                             l37443 136A                             l37435 1322  
                           l37427 12DA                             l37419 12B4                             l37531 2202  
                           l37523 21F1                             l37515 21D7                             l37507 21C7  
                           l37611 0A24                             l37603 09A2                             l38075 0FDF  
                           l38067 0FC3                             l38059 0FAA                             l38091 01E6  
                           l38139 29FF                             l38171 226B                             l38163 2258  
                           l38155 2242                             l38147 2224                             l38219 191A  
                           l38227 193D                             l38251 184E                             l38235 1820  
                           l38243 1837                             l38307 26B0                             l38411 1E87  
                           l38403 1E62                             l38331 1D82                             l38323 1D5A  
                           l38315 1D37                             l37179 2920                             l36629 37DD  
                           l36637 1805                             l36645 2A2C                             l36653 28F6  
                           l33989 37F0                             l33997 2A84                             l36661 2B13  
                           l36709 2E31                             l36717 29D9                             l36725 2C2F  
                           l36733 2A51                             l36741 2BD7                             l36813 2024  
                           l36805 2004                             l36821 2DCF                             l36901 006E  
                           l37189 23D5                             l37197 2EA1                             l37269 2591  
                           l37285 2723                             l37277 26C0                             l37293 2969  
                           l37357 207F                             l37349 2045                             l37373 2D72  
                           l37365 2D55                             l37381 094E                             l37461 13C1  
                           l37453 139B                             l37445 1372                             l37437 132A  
                           l37429 12E2                             l37533 2206                             l37525 21F2  
                           l37517 21DF                             l37509 21CB                             l37541 22EF  
                           l37621 0A46                             l37613 0A28                             l37605 09B2  
                           l37701 1B41                             l38077 0FEB                             l38069 0FC4  
                           l38093 01E7                             l38173 2272                             l38165 225E  
                           l38157 2243                             l38149 2225                             l38181 1893  
                           l38261 1865                             l38253 1853                             l38245 183C  
                           l38237 1829                             l38229 180E                             l38309 26B4  
                           l38405 1E63                             l38341 1DB6                             l38333 1D86  
                           l38325 1D66                             l38317 1D44                             l38501 1FA4  
                           l36639 1806                             l36647 2A35                             l33999 2A85  
                           l36663 2B15                             l36655 2B01                             l36671 2B2D  
                           l36719 29DB                             l36727 2C33                             l36751 2BE8  
                           l36743 2BDC                             l36735 2BC2                             l36807 2008  
                           l36831 2DF2                             l36823 2DD4                             l36815 2DC2  
                           l36911 009C                             l36903 0074                             l37199 2EA4  
                           l37287 2734                             l37279 26C1                             l37295 296D  
                           l37359 2083                             l37375 2D74                             l37367 2D5B  
                           l37391 0966                             l37383 0953                             l37471 1401  
                           l37463 13D2                             l37455 13B1                             l37447 1380  
                           l37439 1346                             l37535 2207                             l37527 21F6  
                           l37519 21E7                             l37551 2311                             l37543 22F5  
                           l37631 0A70                             l37623 0A4E                             l37615 0A2F  
                           l37607 09E5                             l37711 1B71                             l37703 1B46  
                           l38079 0FEC                             l38095 01ED                             l38167 2263  
                           l38175 2275                             l38159 2249                             l38191 18B3  
                           l38183 1896                             l38271 187F                             l38263 1869  
                           l38255 1858                             l38239 182D                             l38247 1843  
                           l38407 1E7A                             l38351 1DD1                             l38343 1DBB  
                           l38335 1D8A                             l38327 1D76                             l38319 1D49  
                           l38431 2ACA                             l38511 1FDB                             l38503 1FA9  
                           l36649 28EF                             l36657 2B03                             l36665 2B16  
                           l36673 2B33                             l36681 2984                             l36729 2C38  
                           l36753 2BEB                             l36745 2BDE                             l36737 2BC8  
                           l36809 2011                             l36833 2DF4                             l36825 2DD9  
                           l36817 2DC5                             l36841 2D83                             l36921 00E9  
                           l36913 00A3                             l36905 0086                             l37289 273D  
                           l37297 2894                             l37377 2D79                             l37369 2D60  
                           l37393 0974                             l37385 0956                             l37481 145A  
                           l37473 140C                             l37465 13E5                             l37457 13B5  
                           l37449 1381                             l37537 2213                             l37529 21F7  
                           l37553 2315                             l37561 232D                             l37545 22FA  
                           l37641 0AB2                             l37633 0A7E                             l37617 0A3B  
                           l37625 0A58                             l37609 09F0                             l37721 1B94  
                           l37713 1B7C                             l37705 1B50                             l37801 1994  
                           l38097 01F3                             l38089 01DE                             l38177 2279  
                           l38169 2267                             l38193 18B8                             l38185 189C  
                           l38273 1883                             l38257 185E                             l38249 184A  
                           l38265 1872                             l38281 2651                             l38409 1E82  
                           l38361 1DE6                             l38353 1DD5                             l38345 1DC0  
                           l38337 1D99                             l38329 1D7A                             l38433 2AD1  
                           l38425 2ABD                             l38513 1FE1                             l38505 1FAF  
                           l38441 1E97                             l38521 1FF4                             l38601 2768  
                           l36659 2B0D                             l36675 2B39                             l36667 2B25  
                           l36683 2989                             l36691 2900                             l36747 2BE0  
                           l36739 2BCF                             l36835 2DF9                             l36827 2DDF  
                           l36819 2DCB                             l36851 2D9E                             l36843 2D8A  
                           l36923 00EE                             l36915 00A4                             l36907 0090  
                           l36931 14A6                             l37299 28A3                             l37379 2D7D  
                           l37395 097A                             l37387 095C                             l37491 148B  
                           l37483 1470                             l37475 141D                             l37467 13FC  
                           l37459 13B6                             l37563 2342                             l37555 2319  
                           l37547 22FF                             l37539 22EC                             l37571 2EF7  
                           l37651 0AE4                             l37643 0AB9                             l37635 0A8B  
                           l37627 0A63                             l37619 0A42                             l37723 1B9D  
                           l37715 1B81                             l37707 1B5A                             l37811 19B3  
                           l37803 1998                             l38099 2446                             l38195 18BD  
                           l38187 18A1                             l38179 188F                             l38267 1879  
                           l38259 1863                             l38291 265B                             l38283 2652  
                           l38275 2630                             l38371 1E00                             l38355 1DD8  
                           l38347 1DC8                             l38339 1DA5                             l38363 1DE7  
                           l38427 2ABF                             l38515 1FEA                             l38507 1FB9  
                           l38451 1EC0                             l38443 1E9F                             l38435 1E8C  
                           l38531 2867                             l38611 278C                             l38603 276D  
                           l36669 2B27                             l36677 2B3A                             l36685 298C  
                           l36693 2904                             l36749 2BE2                             l36781 29A3  
                           l36829 2DEE                             l36837 2E01                             l36861 2DC1  
                           l36853 2DA8                             l36845 2D8E                             l36925 00F0  
                           l36917 00DA                             l36909 009A                             l36941 14BD  
                           l36933 14AC                             l37397 097B                             l37389 0961  
                           l37493 1492                             l37485 1476                             l37477 1430  
                           l37469 1400                             l37565 234E                             l37557 2321  
                           l37549 230C                             l37581 2F1D                             l37573 2EFC  
                           l37661 0B1D                             l37653 0AF1                             l37645 0AC1  
                           l37637 0A98                             l37629 0A64                             l37717 1B83  
                           l37725 1BA6                             l37709 1B67                             l37741 2C4E  
                           l37821 19D1                             l37813 19B7                             l37805 199E  
                           l37901 0C66                             l38197 18C1                             l38189 18A6  
                           l38269 187D                             l38293 265D                             l38285 2653  
                           l38277 2634                             l38381 1E2A                             l38373 1E05  
                           l38365 1DF5                             l38357 1DDF                             l38349 1DD0  
                           l38429 2AC4                             l38517 1FEF                             l38509 1FD1  
                           l38461 1EF4                             l38445 1EA7                             l38453 1ECC  
                           l38437 1E91                             l38541 1065                             l38533 1053  
                           l38621 27AF                             l38613 2798                             l38605 2775  
                           l36679 2980                             l36687 37CE                             l36695 2907  
                           l36783 29A7                             l36775 2996                             l36791 29E4  
                           l36839 2E08                             l36855 2DAD                             l36847 2D93  
                           l36871 2D31                             l36863 2D13                             l36927 00F2  
                           l36919 00DE                             l36951 14FB                             l36943 14BE  
                           l36935 14B1                             l37399 0986                             l37487 147D  
                           l37479 1447                             l37495 149A                             l37559 2324  
                           l37591 2F3C                             l37583 2F25                             l37575 2F0A  
                           l37567 2EEF                             l37663 0B22                             l37655 0AFE  
                           l37647 0AC9                             l37639 0AA5                             l37727 1BBB  
                           l37719 1B8B                             l37743 2C52                             l37751 25B6  
                           l37831 19F1                             l37823 19D5                             l37815 19B8  
                           l37807 19A8                             l37903 0C6A                             l37911 0C93  
                           l38199 18C9                             l38295 265F                             l38287 2656  
                           l38279 2641                             l38391 1E47                             l38383 1E38  
                           l38375 1E08                             l38367 1DF8                             l38359 1DE1  
                           l38519 1FF3                             l38471 1F1F                             l38463 1EF5  
                           l38455 1ED4                             l38447 1EB4                             l38439 1E92  
                           l38551 109E                             l38543 106A                             l38535 1055  
                           l38631 27CC                             l38623 27B4                             l38615 27A0  
                           l38607 277C                             l36689 37D2                             l36697 2911  
                           l36785 29A9                             l36777 2997                             l36793 29E9  
                           l36857 2DB2                             l36849 2D98                             l36873 2D41  
                           l36865 2D1D                             l36881 0057                             l36961 151E  
                           l36953 14FF                             l36945 14C9                             l36937 14B4  
                           l36929 14A0                             l37489 1483                             l37497 21AC  
                           l37593 2F3D                             l37585 2F2B                             l37577 2F11  
                           l37569 2EF5                             l37665 0B2B                             l37657 0B0C  
                           l37649 0AD7                             l37729 1BE3                             l37681 1AE4  
                           l37673 1AC8                             l37745 2C6B                             l37761 25E9  
                           l37753 25BE                             l37825 19D6                             l37809 19AD  
                           l37817 19C0                             l37833 19F2                             l37921 0CB4  
                           l37913 0C98                             l37905 0C7B                             l37841 0B67  
                           l38289 2658                             l38297 2662                             l38393 1E4C  
                           l38385 1E39                             l38377 1E0E                             l38369 1DFD  
                           l38481 1F56                             l38473 1F33                             l38457 1EDC  
                           l38465 1F01                             l38449 1EBF                             l38529 2875  
                           l38561 10D2                             l38553 10B3                             l38545 107F  
                           l38537 1059                             l38641 27DF                             l38633 27D1  
                           l38625 27BC                             l38609 2784                             l38617 27AC  
                           l36699 2915                             l36779 299D                             l36795 29EB  
                           l36787 29DE                             l36859 2DBA                             l36875 2D4A  
                           l36867 2D21                             l36891 0063                             l36883 0059  
                           l36971 1559                             l36963 1533                             l36947 14D5  
                           l36955 150D                             l36939 14B8                             l37499 21B3  
                           l37587 2F2F                             l37579 2F17                             l37667 0B35  
                           l37659 0B0D                             l37595 098C                             l37691 1B14  
                           l37683 1AEA                             l37675 1AD3                             l37747 2C72  
                           l37739 2C4A                             l37771 2616                             l37763 25F0  
                           l37755 25C7                             l37819 19C7                             l37827 19DE  
                           l37931 0CE8                             l37923 0CBA                             l37915 0CA1  
                           l37907 0C85                             l37851 0B92                             l37843 0B6D  
                           l37835 0B3D                             l38299 2675                             l38395 1E4F  
                           l38387 1E3F                             l38379 1E0F                             l38491 1F81  
                           l38483 1F5A                             l38475 1F39                             l38467 1F0E  
                           l38459 1EE9                             l38563 110E                             l38571 114D  
                           l38555 10B5                             l38547 1084                             l38539 1060  
                           l38651 27F1                             l38643 27E4                             l38635 27D4  
                           l38627 27C1                             l38619 27AE                             l36797 29ED  
                           l36789 29E0                             l36869 2D2A                             l36893 0066  
                           l36885 005C                             l36877 0053                             l36981 1579  
                           l36973 155F                             l36965 1538                             l36957 1518  
                           l36949 14D9                             l37589 2F34                             l37597 098F  
                           l37693 1B1E                             l37685 1AF8                             l37677 1AD6  
                           l37757 25D4                             l37765 25F1                             l37773 2617  
                           l37749 25B5                             l37829 19EE                             l37781 1945  
                           l37941 0D0B                             l37933 0CEE                             l37925 0CC0  
                           l37917 0CA7                             l37909 0C89                             l37861 0BB9  
                           l37853 0B97                             l37845 0B73                             l37837 0B4F  
                           l38397 1E54                             l38389 1E42                             l38493 1F85  
                           l38485 1F5F                             l38477 1F42                             l38469 1F16  
                           l38581 1176                             l38573 1152                             l38565 1120  
                           l38557 10BC                             l38549 1099                             l38653 27F4  
                           l38645 27E8                             l38637 27D7                             l38629 27C9  
                           l36799 29F3                             l36895 0069                             l36887 005F  
                           l36879 0055                             l36991 15A1                             l36983 157D  
                           l36975 1564                             l36967 154E                             l36959 151C  
                           l37599 0995                             l37695 1B29                             l37687 1B0A  
                           l37679 1ADF                             l37767 2600                             l37759 25E1  
                           l37791 1979                             l37783 1953                             l37951 0D40  
                           l37943 0D11                             l37935 0CF7                             l37927 0CDC  
                           l37919 0CAD                             l37871 0BE4                             l37863 0BBF  
                           l37855 0B9C                             l37839 0B59                             l37847 0B7A  
                           l38399 1E59                             l38495 1F8D                             l38487 1F64  
                           l38479 1F50                             l38583 11B6                             l38591 1249  
                           l38575 1159                             l38567 1128                             l38559 10BD  
                           l38655 27F7                             l38647 27EB                             l38639 27DC  
                           l36897 006C                             l36889 0061                             l36993 15A5  
                           l36985 158C                             l36977 1567                             l36969 1555  
                           l37697 1B33                             l37689 1B0F                             l37769 260F  
                           l37793 197C                             l37785 1956                             l37961 0D61  
                           l37953 0D45                             l37945 0D18                             l37937 0CFC  
                           l37929 0CE1                             l37881 0C03                             l37873 0BE9  
                           l37865 0BC5                             l37857 0BA1                             l37849 0B80  
                           l38921 1E1A                             l38497 1F92                             l38489 1F71  
                           l38593 124E                             l38585 11DB                             l38577 1160  
                           l38569 113C                             l38657 27FA                             l38649 27EE  
                           l36899 006D                             l36995 15AA                             l36987 1592  
                           l36979 156C                             l38931 1BD7                             l37699 1B3B  
                           l37795 1988                             l37787 1966                             l37779 1942  
                           l37971 0DA0                             l37963 0D83                             l37955 0D4A  
                           l37947 0D1E                             l37939 0D05                             l37891 0C37  
                           l37883 0C0A                             l37875 0BEE                             l37859 0BAB  
                           l37867 0BCC                             l38923 1E6E                             l38499 1F9B  
                           l38587 1213                             l38579 1161                             l38595 274E  
                           l36997 15BB                             l36989 159C                             l37797 1989  
                           l37789 196B                             l37981 0DD3                             l37973 0DA6  
                           l37965 0D8D                             l37957 0D4F                             l37949 0D24  
                           l37893 0C41                             l37885 0C10                             l37877 0BF7  
                           l37869 0BD2                             l38589 1237                             l38597 2755  
                           l38935 1D1B                             l36999 15C3                             l38927 2621  
                           l37799 198F                             l37991 0E03                             l37983 0DE3  
                           l37975 0DAC                             l37967 0D93                             l37959 0D54  
                           l37895 0C4D                             l37887 0C16                             l37879 0BFD  
                           l38599 2760                             l38937 2AB2                             l38929 1BD2  
                           l37993 0E15                             l37985 0DE9                             l37977 0DC8  
                           l37969 0D99                             l37897 0C56                             l37889 0C32  
                           l38939 2A94                             l37995 0E1A                             l37987 0DF7  
                           l37979 0DCD                             l37899 0C5E                             l37997 0E1F  
                           l37989 0DFD                             l37999 0E2D                             ?_main 0072  
                           _ADRES 009B                             _EEADR 0191                             STR_10 091E  
                           STR_11 0909                             STR_20 093E                             STR_12 0924  
                           STR_13 08AD                             STR_21 07BD                             STR_30 0886  
                           STR_22 070B                             STR_14 05BC                             STR_23 07F5  
                           STR_31 0929                             STR_15 07F7                             STR_32 093A  
                           STR_40 0820                             STR_16 07AE                             STR_24 057E  
                           _BRG16 0CFB                             STR_25 0936                             STR_33 08E2  
                           STR_41 0890                             STR_17 0839                             STR_26 093E  
                           STR_50 0932                             STR_42 08FA                             STR_34 08A4  
                           STR_18 0805                             STR_51 07F6                             STR_19 0936  
                           STR_43 08C8                             STR_35 07E9                             STR_27 074F  
                           STR_52 0910                             STR_60 089A                             STR_44 0845  
                           STR_28 0691                             STR_36 0593                             STR_61 085C  
                           STR_37 0936                             STR_53 08D1                             STR_45 08BF  
                           STR_29 06A3                             STR_70 093A                             STR_38 093E  
                           STR_46 08B6                             STR_54 085C                             STR_62 076F  
                           STR_71 07F6                             STR_39 0839                             STR_63 0948  
                           STR_47 0917                             STR_55 07CC                             STR_80 07F6  
                           STR_72 0910                             STR_64 0932                             STR_56 0948  
                           STR_48 075F                             STR_65 07F6                             STR_81 0910  
                           STR_57 0932                             STR_49 0948                             STR_73 072D  
                           STR_74 07F6                             STR_58 07F6                             STR_90 07F5  
                           STR_66 0910                             STR_82 053A                             STR_83 07F6  
                           STR_75 0910                             STR_59 0910                             STR_67 0633  
                           STR_91 05A8                             STR_84 0910                             STR_92 082D  
                           STR_76 05F8                             STR_68 05D0                             STR_77 0910  
                           STR_69 0929                             STR_93 087C                             STR_85 071C  
                           STR_78 07F6                             STR_94 067F                             STR_86 0620  
                           STR_87 08F2                             STR_95 08DA                             STR_79 05E4  
                           STR_96 0945                             STR_88 0568                             STR_97 092E  
                           STR_89 06B5                             STR_98 0813                             STR_99 0942  
                           _CARRY 0018                   ?_interrupt_init 0072                             u10000 173F  
                           u10001 173E                             u10010 174F                   __end_of___lldiv 2147  
                           u10011 174E                             u10020 1758                             u10100 2160  
                           u10021 1757                             u10101 215F                             u10030 1768  
                           u10110 219B                             u10031 1767                             u10111 219A  
                           u10040 1770                             u10200 2091                             u11000 19C7  
                           u10041 176F                             u10201 2090                             u11001 19C6  
                           u10050 17E5                             u10130 23D5                             u10210 20B6  
                           u11010 19D1                             u10051 17E4                             u10115 2197  
                           u10211 20B5                             u11011 19D0                             u10060 17FD  
                           u10140 23E9                             u10220 20C3                             u10300 24CB  
                           u11020 19D5                             u11100 0C41                             u10061 17FC  
                           u10141 23E8                             u10221 20C2                             u10301 24CA  
                           u11021 19D4                             u11101 0C40                             u10125 2925  
                           u10070 2388                             u10150 23FD                             u10230 20D0  
                           u10310 24DA                             u11110 0C4D                             u11030 0B59  
                           u10071 2387                             u10151 23FC                             u10231 20CF  
                           u10311 24D9                             u11111 0C4C                             u11031 0B58  
                           u10080 239A                             u10160 2EC3                             u10240 20DD  
                           u10320 24F1                             u10400 0953                             u11200 0DA0  
                           u11120 0C5E                             u11040 0B67                             u12000 1E97  
                           u10081 2399                             u10161 2EC2                             u10241 20DC  
                           u10321 24F0                             u10305 24C7                             u10401 0952  
                           u11201 0D9F                             u11121 0C5D                             u11041 0B66  
                           u10090 23C6                             u10170 2EE5                             u10250 2545  
                           u10330 250C                             u10410 095C                             u11210 0DCD  
                           u11130 0CA1                             u11050 0BAB                             u12010 1E9F  
                           u10091 23C5                             u10075 2384                             u10171 2EE4  
                           u10251 2544                             u10331 250B                             u10411 095B  
                           u11211 0DCC                             u11131 0CA0                             u11051 0BAA  
                           u12011 1E9E                             u10180 2A7A                             u10260 255A  
                           u10340 251B                             u10500 1430                             u11300 0F26  
                           u11220 0DD3                             u11140 0CB4                             u11060 0BB9  
                           u12100 1F5A                             u12020 1EA7                             u10085 2396  
                           u10181 2A79                             u10261 2559                             u10341 251A  
                           u10501 142F                             u11301 0F25                             u11221 0DD2  
                           u11141 0CB3                             u11061 0BB8                             u11045 0B63  
                           u12101 1F59                             u12021 1EA6                             u10190 285E  
                           u10270 2562                             u10350 2035                             u10510 145A  
                           u10430 1260                             u11230 0DF7                             u11150 0CE1  
                           u11070 0BF7                             u11310 01E6                             u12110 1F81  
                           u12030 1EB4                             u10095 23C2                             u10271 2561  
                           u10351 2034                             u10511 1459                             u10431 125F  
                           u11231 0DF6                             u11151 0CE0                             u11071 0BF6  
                           u11311 01E5                             u12111 1F80                             u12031 1EB3  
                           u10280 2575                             u10360 207E                             u10440 126A  
                           u10600 2342                             u11240 0E1A                             u11160 0D05  
                           u11080 0C0A                             u11320 2450                             u11400 2229  
                           u12120 1F85                             u12040 1ED4                             u12200 109E  
                           u10281 2574                             u10361 207D                             u10425 0986  
                           u10505 142C                             u10601 2341                             u11241 0E19  
                           u11161 0D04                             u11081 0C09                             u11065 0BB5  
                           u11321 244F                             u12121 1F84                             u12041 1ED3  
                           u12201 109D                             u10290 2591                             u10370 2D52  
                           u10450 137F                             u10530 21B2                             u10610 2EF5  
                           u11250 0E2D                             u11170 0D18                             u11090 0C37  
                           u11330 2467                             u11410 222D                             u12130 1F89  
                           u12050 1EDC                             u12210 10BB                             u10291 2590  
                           u10355 2031                             u10371 2D51                             u10515 1456  
                           u10451 137E                             u10531 21B1                             u10611 2EF4  
                           u11251 0E2C                             u11171 0D17                             u11091 0C36  
                           u11331 2466                             u11411 222C                             u12131 1F88  
                           u12051 1EDB                             u12211 10BA                             u10380 2D5B  
                           u10460 139B                             u10540 21F6                             u10620 2F11  
                           u10700 0A3B                             u11260 0E56                             u11180 0D45  
                           u11340 2472                             u11420 2263                             u11500 18C1  
                           u12140 1F8D                             u12060 1EE9                             u12300 1254  
                           u12220 10D2                             u10381 2D5A                             u10525 149F  
                           u10461 139A                             u10541 21F5                             u10621 2F10  
                           u10701 0A3A                             u11261 0E55                             u11181 0D44  
                           u11341 2471                             u11421 2262                             u12141 1F8C  
                           u12061 1EE8                             u12301 1253                             u12221 10D1  
                           u10470 13B5                             u10550 2206                             u10630 2F17  
                           u10710 0A42                             u11270 0E76                             u11190 0D8D  
                           u11350 247D                             u11430 2267                             u11510 18E2  
                           u12150 1F91                             u12070 1F0E                             u12230 110E  
                           u12310 276D                             u10471 13B4                             u10551 2205  
                           u10631 2F16                             u10711 0A41                             u11271 0E75  
                           u11191 0D8C                             u11351 247C                             u11431 2266  
                           u11511 18E1                             u12151 1F90                             u12071 1F0D  
                           u12231 110D                             u12311 276C                             u10480 13E5  
                           u10560 22F5                             u10640 2F1D                             u10720 0A46  
                           u10800 1B28                             u11280 0E9F                             u11360 2488  
                           u11440 226B                             u11600 1918                             u11520 18E8  
                           u12160 1F9B                             u12080 1F42                             u12240 1158  
                           u12320 277C                             u10481 13E4                             u10465 1397  
                           u10561 22F4                             u10641 2F1C                             u10721 0A45  
                           u10801 1B27                             u11281 0E9E                             u11361 2487  
                           u11441 226A                             u11601 1916                             u11521 18E7  
                           u12161 1F9A                             u12081 1F41                             u12241 1157  
                           u12321 277B                             u10490 1400                             u10570 2311  
                           u10650 2F23                             u10730 0AB9                             u10810 1B33  
                           u11290 0EBF                             u11370 2493                             u11450 2279  
                           u11530 18EE                             u12170 1FEA                             u12090 1F56  
                           u12250 115F                             u12330 278C                             u10395 2D7D  
                           u10491 13FF                             u10651 2F22                             u10731 0AB8  
                           u10811 1B32                             u11291 0EBE                             u11371 2492  
                           u11451 2278                             u11531 18ED                             u12171 1FE9  
                           u12091 1F55                             u12251 115E                             u12331 278B  
                           u10580 2315                             u10660 2F2B                             u10740 0B1D  
                           u10820 1B50                             u11380 29FE                             u11620 1922  
                           u11540 18F4                             u11700 184E                             u12260 1176  
                           u12180 106A                             u12340 2798                             u10485 13E1  
                           u10661 2F2A                             u10741 0B1C                             u10821 1B4F  
                           u11381 29FD                             u11621 1920                             u11541 18F3  
                           u12261 1175                             u12181 1069                             u12341 2797  
                           u10750 0B22                             u10670 099C                             u10830 1B5A  
                           u10910 1952                             u11390 2223                             u11614 1919  
                           u11550 18FA                             u11470 189C                             u11710 1858  
                           u12270 11B6                             u12190 1084                             u12350 27B4  
                           u10671 099B                             u10831 1B59                             u10911 1951  
                           u11391 2222                             u11551 18F9                             u11471 189B  
                           u12271 11B5                             u12191 1083                             u12351 27B3  
                           u10680 0A28                             u10840 1B64                             u10760 1AEA  
                           u10904 2C6B                             u10920 1978                             u11560 18FE  
                           u11480 18B8                             u11720 1869                             u11640 1814  
                           u11800 2675                             u12280 1213                             u12360 27C1  
                           _T2CON 001C                             u10681 0A27                             u10841 1B63  
                           u10761 1AE9                             u10921 1977                             u11561 18FD  
                           u11465 1893                             u11641 1813                             u11801 2674  
                           u12281 1212                             u12361 27C0                             u10690 0A2F  
                           u10850 1B70                             u10770 1AF8                             u10930 1987  
                           u11634 1923                             u11570 1903                             u11490 18BD  
                           u11730 1879                             u11650 181A                             u12290 1237  
                           u10595 233E                             u10691 0A2E                             u10851 1B6F  
                           u10771 1AF7                             u10931 1986                             u11571 1902  
                           u11491 18BC                             u11731 1878                             u11651 1819  
                           u12291 1236                             u10860 1B80                             u10780 1B06  
                           u10940 1994                             u11580 190E                             u11740 187D  
                           u11660 1820                             u11820 2695                             u11900 1D66  
                           u10861 1B7F                             u10781 1B05                             u10941 1993  
                           u11581 190C                             u11661 181F                             u11821 2694  
                           u11901 1D65                             u10790 1B1E                             u10870 2C4E  
                           u10950 1998                             u11750 1883                             u11670 1831  
                           u11830 26A3                             u11910 1D7A                             u10791 1B1D  
                           u10871 2C4D                             u10951 1997                             u11831 26A1  
                           u11815 2688                             u11911 1D79                             u10880 2C52  
                           u10960 19A8                             u11680 183C                             u11840 26AA  
                           u11832 26A4                             u11760 2634                             u11920 1D99  
                           u12377 008B                             u10881 2C51                             u10961 19A7  
                           u11841 26A8                             u11761 2633                             u11921 1D98  
                           u10890 2C6A                             u10970 19AD                             u11594 190F  
                           u11690 184A                             u11850 26B0                             u11842 26AB  
                           u11770 2641                             u11930 1DA5                             u12387 0095  
                           u10891 2C68                             u11691 1849                             u11851 26AF  
                           u11771 2640                             u11931 1DA4                             u10980 19B3  
                           u11780 2667                             u11940 1DC8                             u10981 19B2  
                           u11781 2665                             u11941 1DC7                             u10990 19B7  
                           u11790 266F                             u11782 2668                             u11950 1DD5  
                           u11870 1D37                             u10991 19B6                             u11791 266D  
                           u11951 1DD4                             u11871 1D36                             u11792 2670  
                           u11960 1E37                             u11880 1D44                             u11865 26B4  
                           u11961 1E36                             u11881 1D43                             u11970 1E87  
                           u11890 1D49                             u11980 2ADA                             u11981 2AD9  
                           u11990 1E90                             _IOCBF 0396                             u11991 1E8F  
                           _IOCBN 0395                             _IOCBP 0394                             _IOCIE 005B  
                           _IOCIF 0058                   __end_of___lwdiv 2E09                   __end_of___lwmod 2DC2  
                           _RCREG 0199                             _TMR1H 0017                             _TMR1L 0016  
                           _SPBRG 019B                             _PORTA 000C                             _PORTB 000D  
                           _PORTC 000E                             _PORTD 000F                             _PORTE 0010  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _TRISD 008F                             _TRISE 0090                             _TXREG 019A  
           __end_of_catgenie_init 00F3             __end_of_catgenie_work 1256               ___lmul@multiplicand 0025  
                 __end_of_get_Arm 2ABD                             _drain 04B3                   __end_of_isdigit 29AA  
                 __end_of_set_LED 2E9F                             _state 0066                             _putch 2BC0  
     timestampdiff@late_longshort 0033                             fpbase 0102                   __end_of_set_Arm 2B47  
  __size_of_romwashprogram_getins 001A                   ??_timestampdiff 0025                    __pbitbssCOMMON 0380  
       __end_of_startbutton_event 2883     __end_of_romwashprogram_getins 29DC              update_autotimer@mode 003D  
  __size_of_romwashprogram_reqins 000B                   ??_water_filling 0021     __end_of_romwashprogram_reqins 284D  
                           status 0003                             wtemp0 007E                   __end_of_strncmp 1053  
               ?_wait_instruction 0072      postponetimeout@tempLongTicks 002B                ??_wait_instruction 0037  
               water_init@channel 0023                      ?_set_LED_Cat 002E                      __end_of_echo 2537  
         litterlanguage_start@wet 0051                      __end_of_help 2084                      __end_of_main 2800  
        ??_litterlanguage_cleanup 004F                   ?_update_display 0072              __end_of_cmdline_init 2867  
           set_LED_Locked@pattern 0031              __end_of_cmdline_work 2ADC                    ??_gettimestamp 0023  
                          ??_echo 004A                            ??_help 004A                            ??_main 0060  
                 cmdline_work@rxd 005F            _watersensor_event$5929 0050          ??_litterlanguage_running 0021  
        __size_of_req_instruction 0013          litterlanguage_init@flags 0054       litterlanguage_pause@context 0120  
                          STR_100 0942                            STR_101 07DB                            STR_110 0932  
                          STR_102 0851                            STR_103 06FA                            STR_111 06E9  
                          STR_112 0878                            STR_104 079F                            STR_113 06D8  
                          STR_105 0552                            STR_106 0948                            STR_114 0902  
                          STR_107 0932                            STR_115 06C7                            STR_108 0872  
                          STR_109 0948         timeoutexpired@currentTime 0031                            _EEDATA 0193  
                          _CCPR1L 0291                            _EECON1 0195                            _EECON2 0196  
         __size_of_catsensor_init 000F                            _ANSELA 018C                            ?_putch 0072  
                          _ANSELB 018D                            _ANSELD 018F                            _ANSELE 0190  
         __size_of_catsensor_work 008E                            i1l2100 001B                            i1l2101 0038  
                          i1l2102 0031                            i1l2103 0041                            i1l2104 004A  
                          i1l2105 004A                            i1l2099 0011                            u560_20 003D  
                          u560_21 003C                            u561_20 0046                            u561_21 0045  
                          u562_20 2B62                            u570_20 0154                            u562_21 2B61  
                          u570_21 0153                            u562_25 2B5E                            u563_20 2A14  
                          u571_20 0163                            u563_21 2A13                            u571_21 0162  
                          u572_20 01B1                            u556_20 000C                            u572_21 01B0  
                          u556_21 000B                            u564_25 2A2A                            u572_25 01AD  
                          u565_20 2851                            u573_20 01B8                            u557_20 0016  
                          u565_21 2850                            u573_21 01B7                            u557_21 0015  
      __end_of_userinterface_init 2C76                            u566_20 2856                            u574_20 01CD  
                          u558_20 001F                            u566_21 2855                            u574_21 01CC  
                          u558_21 001E                            u567_20 0112                            u559_20 002D  
                          u567_21 0111                            u559_21 002C                            u568_20 0128  
                          u568_21 0127                            u569_20 0150                            u569_21 014F  
                          _TMR1IE 0488                            _TMR1IF 0088                            _TMR2IE 0489  
                          _TMR2IF 0089                            _SPBRGH 019C                            _TMR1ON 00C0  
                          _TMR2ON 00E2        __end_of_userinterface_work 1E8C      __size_of_litterlanguage_init 007D  
    __size_of_litterlanguage_stop 0069      __size_of_litterlanguage_work 0174                  __end_of_get_Bowl 2A9F  
                __end_of_get_Pump 37CE              __size_of_eeprom_read 0023                      ?_serial_init 002F  
                          _nWPUEN 04AF                            ___bmul 29DC                            ___lmul 2D13  
                          ___wmul 2000                            _echoed 0384                         ??___lldiv 0029  
                       ??___lwdiv 0025          heatsensor_event@detected 0040                         ??___lwmod 002D  
               _setupbutton_event 2867                            _pacers 0220                            _memcpy 2C1A  
                          _readch 227E                            _locked 038B                            _paused 038D  
                          _second 014C              __end_of_eeprom_write 2CDC                         ??_get_Arm 0021  
                          _printf 14A0                ?_setupbutton_event 0040                            clrloop 37EB  
                          _strlen 2C76                            _uptime 01CA                  __end_of_set_Bowl 2B23  
                          fptable 0100                  __end_of_set_Pump 290F                  ??_process_button 003E  
                          fptotal 000B                         ??_isdigit 0021                  __end_of_set_mode 2F47  
                ??_water_detected 0021                         ??_set_LED 0022                         ??_set_Arm 0021  
                __end_of_rtc_init 2A81                  __end_of_rtc_work 20E4                  ??_timeoutexpired 002B  
             ??_setupbutton_event 0041                         ??_strncmp 0029                    water_fill@fill 0022  
                    _cat_detected 0380        __size_of_startbutton_event 000E      romwashprogram_reqins@address 0021  
                    ?_setup_short 0072                   eeprom_read@addr 0024               set_LED_Error@repeat 002E  
              __size_of_cmd2index 004E               ___bmul@multiplicand 0021                        _echo$17754 004A  
                  water_init@mask 0022         __end_of_setupbutton_event 2875                    __pcstackCOMMON 0072  
                    __pidataBANK0 0002                      __pidataBANK1 2931                      __pidataBANK2 29AA  
                    __pidataBANK3 2B96                      __pidataBANK4 2CDC               _catgenie_work$30512 0045  
 __size_of_litterlanguage_cleanup 0038             __end_of_serial_rx_isr 01DE                     _isdigit$29792 0021  
           __end_of_serial_tx_isr 0100                     __end_of_putch 2BED                 _reflectionquality 00D0  
                 _postponetimeout 2F47                __size_of_get_Dryer 0005                      ?_start_short 0072  
         set_LED_Cartridge@repeat 002E               fp__heatsensor_event 0109             timeoutexpired@timer_p 0029  
        postponetimeout@longshort 002F   __size_of_litterlanguage_running 0007                 eeprom_write@value 0021  
                     set_LED@mask 0025                __size_of_both_long 0010                        _help$30523 004B  
                         ??_putch 0021                        __pbssBANK0 0062                        __pbssBANK1 00C6  
                      __pbssBANK2 0120                        __pbssBANK3 01CA          __end_of_update_autotimer 274E  
               ??_req_instruction 0025          __end_of_heatsensor_event 2931              __end_of_gettimestamp 2E51  
                      _debouncers 01A0                        _cart_level 006E             __size_of_cmdline_init 000E  
          postponetimeout@timer_p 0021             __size_of_cmdline_work 001F                  ??_set_LED_Locked 002F  
                      __pmaintext 274E                           ?___bmul 0021                           ?___lmul 0021  
    timestampdiff@early_longshort 0031                           ?___wmul 0021                  ??_interrupt_init 0021  
        userinterface_work@update 005A                        __pintentry 0004              __size_of_set_LED_Cat 000F  
              __size_of_set_Dryer 0011                           _CCP1CON 0293                           ?_memcpy 0021  
                      __ptext3300 2A81                        __ptext3301 37F0                        __ptext3221 1053  
                      __ptext3310 37F7                        __ptext3302 28ED                        __ptext3230 188D  
                      __ptext3222 2875                        __ptext3311 2B6E                        __ptext3303 2A2C  
                      __ptext3231 2215                        __ptext3223 2920                        __ptext3312 2883  
                      __ptext3304 37C9                        __ptext3240 098C                        __ptext3232 29F6  
                      __ptext3224 2867                        __ptext3313 2837                        __ptext3305 1800  
                      __ptext3241 2EED                        __ptext3233 2446                        __ptext3225 1E8C  
                      __ptext3306 37DE                        __ptext3250 28BF                        __ptext3242 22EA  
                      __ptext3234 01DE                        __ptext3226 2ABD                        __ptext3315 00FF  
                      __ptext3307 37D8                        __ptext3251 28B0                        __ptext3243 21AC  
                      __ptext3235 0B3D                        __ptext3227 1D2E                        __ptext3316 010D  
                      __ptext3308 2ADC                        __ptext3260 2A64                        __ptext3252 28A1  
                      __ptext3244 1256                        __ptext3236 1942                        __ptext3228 2630  
                      __ptext3317 284D                        __ptext3309 2CA5                        __ptext3261 2E9F  
                      __ptext3253 2892                        __ptext3245 094C                        __ptext3237 25B3  
                      __ptext3229 180C                           ?_readch 0072                        __ptext3318 2A10  
                      __ptext3270 0053                        __ptext3262 23CF                        __ptext3254 2969  
                      __ptext3246 2D4B                        __ptext3238 2C48                        __ptext3319 2B47  
                      __ptext3271 20E4                        __ptext3263 28DD                        __ptext3255 26BE  
                      __ptext3247 24BD                        __ptext3239 1AC6                        _get_Dosage 37CE  
                      __ptext3280 227E                        __ptext3272 2D13                        __ptext3264 2147  
                      __ptext3256 2537                        __ptext3248 2025                        __ptext3281 2BC0  
                      __ptext3273 2D83                        __ptext3265 2956                        __ptext3257 2BED  
                      __ptext3249 28CE                        __ptext3290 1BF0                        __ptext3282 2F47  
                      __ptext3274 2DC2                        __ptext3266 2943                        __ptext3258 2084  
                      __ptext3291 2E09                        __ptext3283 2E51                        __ptext3275 2000  
                      __ptext3267 235B                        __ptext3259 2859                        __ptext3292 290F  
                      __ptext3284 01FF                        __ptext3276 29DC                        __ptext3268 14A0  
                      __ptext3293 37D3                        __ptext3285 2A48                        __ptext3277 2994  
                      __ptext3269 19FF                        __ptext3294 28FE                        __ptext3286 2C1A  
                      __ptext3278 1000                        __ptext3295 37CE                        __ptext3287 29C2  
                      __ptext3279 2C76                        __ptext3296 297E                        __ptext3288 2842  
                      __ptext3297 2B23                        __ptext3289 2832                        __ptext3298 2A9F  
                      __ptext3299 2AFF                    ___lmul@product 0029                       set_Arm@mode 0022  
  __size_of_litterlanguage_paused 0005      litterlanguage_event@argument 0021     __end_of_litterlanguage_paused 2837  
        __size_of_catsensor_event 00B5                           ?_printf 002F                __size_of_set_pacer 0077  
                         _T1CKPS0 00C4                           _T1CKPS1 00C5                           ?_strlen 0021  
                         _T1OSCEN 00C3           catsensor_event@detected 0051                           i1l13030 2A2B  
                         i1l13033 2858                           i1l13034 2858                           i1l13029 2A2B  
                         i1l21391 2B6D                           i1l21392 2B6B                           i1l21393 2B6B  
                         i1l21394 2B6C                           i1l21395 2B6D                           i1l33901 0123  
                         i1l33903 0128                           i1l33911 0138                           i1l33831 000C  
                         i1l19280 01DD                           i1l33921 0163                           i1l33913 0143  
                         i1l19281 0138                           i1l33905 0133                           i1l33841 001B  
                         i1l33833 000D                           i1l19290 01DD                           i1l19282 01BF  
                         i1l33931 01BC                           i1l33923 017E                           i1l33915 014C  
                         i1l33907 0135                           i1l33851 002D                           i1l33843 001F  
                         i1l33835 0011                           i1l19284 017E                           i1l33925 01A4  
                         i1l33917 0150                           i1l33933 01BF                           i1l33909 0137  
                         i1l19293 00FF                           i1l33861 0046                           i1l33853 0031  
                         i1l33845 0026                           i1l33837 0016                           i1l33829 0008  
                         i1l19286 01A4                           i1l33863 2B47                           i1l33871 2A15  
                         i1l33935 01CD                           i1l33927 01B2                           i1l19287 01B3  
                         i1l33919 0154                           i1l19279 0124                           i1l33847 0028  
                         i1l33855 0038                           i1l33839 0017                           i1l19288 01B3  
                         i1l33865 2B62                           i1l33881 2A26                           i1l33873 2A1A  
                         i1l19289 01B9                           i1l33929 01B9                           i1l33857 003D  
                         i1l33849 0029                           i1l33875 2A1C                           i1l33867 2A10  
                         i1l33883 284D                           i1l33891 0112                           i1l33859 0041  
                         i1l33877 2A1E                           i1l33869 2A14                           i1l33885 2851  
                         i1l33893 011D                           i1l33879 2A21                           i1l33887 2856  
                         i1l33895 011F                           i1l33897 0120                           i1l33889 010D  
                         i1l33899 0121                __size_of_proc_char 0081                __size_of_proc_line 012A  
              __size_of_timer_isr 0027                 __end_of_cmd2index 2EED                   _error_execution 0386  
             settimeout@longshort 003B       __end_of_catsensor_isr_input 2859                __size_of_printtime 002D  
     __end_of_catsensor_isr_timer 2A2C                           _TMR1CS0 00C6                           _TMR1CS1 00C7  
                     set_Dryer@on 0022                         ?_get_Bowl 0072                        _both_short 2969  
                       ?_get_Pump 0072            _litterlanguage_cleanup 2D4B                    _catsensor_init 2883  
                    _detected_dbc 0369                    _catsensor_work 2630                      _detected_cur 0382  
                    _detected_old 0383                        __stringtab 0200            __size_of_set_LED_Error 000F  
                    _cmdline_init 2859     __size_of_litterlanguage_event 000C            catgenie_work@tempstate 0048  
   __size_of_litterlanguage_pause 024A                      _cmdline_work 2ABD     __size_of_litterlanguage_start 0040  
        __size_of_get_instruction 0013                  ??_update_display 0032                 __end_of_get_Dryer 37D8  
                       ?_set_Bowl 0072            _litterlanguage_running 37F0               timestampdiff@late_p 0023  
                         _nT1SYNC 00C2                         ?_set_Pump 0072                      cmd2index@cmd 002F  
                       ?_set_mode 0072        __size_of_setupbutton_event 000E             __size_of_eeprom_write 0037  
        __size_of_exe_instruction 04C3                         ?_rtc_init 0072                   __size_of___bmul 001A  
               __end_of_both_long 28ED           __end_of_postponetimeout 2FA2                         ?_rtc_work 0072  
                 __size_of___lmul 0038                           ___lldiv 20E4                   __size_of___wmul 0025  
                  _cleanupprogram 04F2                           ___lwdiv 2DC2                           ___lwmod 2D83  
            __size_of_serial_init 00C7                 catgenie_init@temp 0029                   __size_of_memcpy 002E  
                 __size_of_readch 006C                        _linebuffer 01CE                        _panel_mode 00D9  
                      _error_fill 0387                           _get_Arm 2A9F                   __size_of_printf 0360  
       __size_of_wait_instruction 007C                           _filling 036A               _litterlanguage_init 25B3  
                 __size_of_strlen 002F               _litterlanguage_stop 21AC               _litterlanguage_work 1E8C  
                         _dpowers 0201                           _isdigit 2994                      __size_of_isr 004A  
                         _set_LED 2E51                           _set_Arm 2B23            __end_of_catsensor_init 2892  
                         _pinging 038E       _litterlanguage_cleanup$5941 004F            __end_of_catsensor_work 26BE  
                      ??_get_Bowl 0021                           fp__echo 0105                           fp__help 0103  
                      ??_get_Pump 0021                 set_LED_Cat@repeat 002E                           _surface 045F  
                         _strncmp 1000              end_of_initialization 2FFD                        _set_Beeper 2892  
               __end_of_set_Dryer 2920                        _set_Dosage 28ED                           memcpy@d 0026  
                         memcpy@n 0022                           memcpy@s 0027                           isr@temp 007D  
                    readch@result 0024                           init_ram 37E4                   _proc_line$30517 0055  
           __end_of_timestampdiff 1D2E                      _eeprom_write 2CA5                           initloop 37E5  
               __end_of_set_pacer 2446              ?_litterlanguage_init 0072                    set_pacer@pacer 002D  
           _romwashprogram_getins 29C2              ?_litterlanguage_stop 0072              ?_litterlanguage_work 0072  
           __end_of_water_filling 37E4         process_button@button_mask 003F              __size_of_setup_short 0077  
           _romwashprogram_reqins 2842                   ___lldiv@divisor 0021                 __end_of_proc_char 188D  
                      ??_set_Bowl 0021                 __end_of_proc_line 1BF0                 __end_of_timer_isr 2B6E  
                 ___lldiv@counter 002E                        ??_set_Pump 0021                        ??_set_mode 0047  
          __size_of_catgenie_init 00A0                 __end_of_printtime 2C1A            __size_of_catgenie_work 0203  
                         printf@c 0042                           printf@f 002F                        ??_rtc_init 003D  
                         putch@ch 0022                        ??_rtc_work 0037                      __pstringtext 0200  
              _userinterface_init 2C48                     _set_LED_Error 28A1                        _prg_source 00DA  
                      _hysteresis 0064                  _cartridgetimeout 013A                _userinterface_work 1D2E  
            fp__startbutton_event 010B                       ?_get_Dosage 0072                 catgenie_work@temp 0049  
                         strlen@s 0029     litterlanguage_pause@timer_now 0051                        _timer_fill 00E9  
                       _PORTB_old 00D4                        _timer_init 2837                        _settimeout 2147  
                      _water_fill 297E                        _setup_long 01FF                        _timeoutnow 2A48  
                      _water_init 2B6E               ?_userinterface_init 0072                        _water_work 1942  
             ?_userinterface_work 0072                     ?_timeoutnever 0025                   ?_catsensor_init 0072  
                 ?_catsensor_work 0072                 ??_catsensor_event 004F             __size_of_gettimestamp 0048  
            __size_of_start_short 0021                       ?_both_short 0072                        _start_long 29F6  
            set_LED_Error@pattern 0031             ??_litterlanguage_init 0052             ??_litterlanguage_stop 004F  
           ??_litterlanguage_work 0051                     ??_eeprom_read 0021                       printf@width 003F  
            ??_userinterface_init 004A              ??_userinterface_work 0058        req_instruction@instruction 0023  
      get_instruction@instruction 0025              _exe_instruction$6010 00C4              _exe_instruction$6002 00C0  
            _exe_instruction$6006 00C2              _exe_instruction$5960 00AA              _exe_instruction$5961 00AC  
            _exe_instruction$5954 00A6              _exe_instruction$5955 00A8              _exe_instruction$5967 00AE  
            _exe_instruction$5976 00B2              _exe_instruction$5968 00B0              _exe_instruction$5993 00BA  
            _exe_instruction$5985 00B6              _exe_instruction$5977 00B4              _exe_instruction$5994 00BC  
            _exe_instruction$5986 00B8              _exe_instruction$5998 00BE                 ??_get_instruction 0025  
                  ?_set_LED_Error 002E                  ?_postponetimeout 0021                    __end_of___bmul 29F6  
                  __end_of___lmul 2D4B                    __end_of___wmul 2025                      _gettimestamp 2E09  
                  __end_of_memcpy 2C48                    __end_of_readch 22EA                     __pbitbssBANK0 0368  
               ??_exe_instruction 0050                       ___resetbits 0020                    __end_of_printf 1800  
                  ??_timeoutnever 0027                   _req_instruction 2943                    __end_of_strlen 2CA5  
             start_initialization 2FA2                     _catgenie_init 0053          _litterlanguage_work$5880 0053  
                   _catgenie_work 1053                       __end_of_isr 004E              set_LED_Locked@repeat 002E  
                     ___powerdown 0103                       ?_set_Beeper 002E                       ?_set_Dosage 0072  
          ?_romwashprogram_getins 0072                 ?_update_autotimer 0072                 _set_LED_Cartridge 28B0  
             __size_of_get_Dosage 0005          set_LED_Cartridge@pattern 0031            ?_romwashprogram_reqins 0021  
              ??_update_autotimer 003D                ?_set_LED_Cartridge 002E                ??_heatsensor_event 0041  
               settimeout@timer_p 002D                 _watersensor_event 22EA                    cmd2index@index 0030  
                    set_LED@latch 0024                          ??___bmul 0022                          ??___lmul 0029  
                        ??___wmul 0025               __end_of_eeprom_read 2AFF                ?_watersensor_event 0072  
             ??_set_LED_Cartridge 002F               __size_of_both_short 0015                       __pdataBANK0 006E  
                     __pdataBANK1 00DD                       __pdataBANK2 0158                       __pdataBANK3 01A0  
                     __pdataBANK4 0220                          ??_memcpy 0024                          ??_readch 0021  
                        ??_printf 0039                       ?_timer_init 0072                  _wait_instruction 2537  
                        ??_strlen 0023                       ?_settimeout 002D               ??_watersensor_event 004F  
                     ?_water_fill 0072                       ?_setup_long 0072                       ?_timeoutnow 0025  
                     ?_water_init 0072                       ?_water_work 0072           ?_litterlanguage_cleanup 0072  
                  ?_catgenie_init 0072             catgenie_init@tempmask 0028                    ?_catgenie_work 0072  
                   __pcstackBANK0 0021                     __pcstackBANK1 00A0              fp__setupbutton_event 0107  
                     _cat_present 0381                         _cmd2index 2E9F                         ___timeout 0104  
       __end_of_set_LED_Cartridge 28BF                 gettimestamp@bytes 0026                 gettimestamp@ticks 0021  
               __size_of_get_Bowl 001E                       ?_start_long 0072                  eeprom_write@addr 0024  
               __size_of_get_Pump 0005            __size_of_serial_rx_isr 00D1            __size_of_serial_tx_isr 0001  
                      set_LED@led 0023           __size_of_process_button 0069           ?_litterlanguage_running 0072  
         __size_of_water_detected 0006         __end_of_watersensor_event 235B           __size_of_timeoutexpired 0074  
      exe_instruction@ret_address 00D2                         _debouncer 0158           postponetimeout@postpone 0023  
                ___lwdiv@dividend 0023                   ??_set_LED_Error 002F                     ??_set_LED_Cat 002F  
                  _buttonmask_cum 00D5                    _buttonmask_cur 00D6                    _buttonmask_evt 00D7  
                       __pfunctab 0100                 __size_of_set_Bowl 0024                 __size_of_set_Pump 0011  
    __end_of_litterlanguage_event 180C                         _get_Dryer 37D3                          ?___lldiv 0021  
    __end_of_litterlanguage_pause 14A0                          ?___lwdiv 0021           __end_of_req_instruction 2956  
               __size_of_set_mode 005A                          ?___lwmod 0029      __end_of_litterlanguage_start 098C  
               __size_of_rtc_init 001D               __size_of_set_Beeper 000F                         _drain_dry 0342  
           _catsensor_event$10723 004F                 __size_of_rtc_work 0060                          ?_get_Arm 0072  
                       _both_long 28DD                         __pswtext1 00F3                         __pswtext2 2800  
                       __pswtext3 281E               __size_of_set_Dosage 0011             catgenie_work@tempmask 0046  
  __end_of_litterlanguage_cleanup 2D83             _litterlanguage_paused 2832                          ?_isdigit 0072  
                      set_Pump@on 0022                          ?_set_LED 0021                         _auto_mode 0062  
                        ?_set_Arm 0072                         _autotimer 00DD                    _error_overheat 0389  
                       _hexpowers 020B                  ___lwdiv@quotient 0027                         _localecho 006F  
                      ?_cmd2index 002C                          ?_strncmp 0025                         _full_wash 038A  
                  __size_of_putch 002D    __end_of_litterlanguage_running 37F7                         _ins_state 0065  
                    set_Bowl@mode 0022               startbutton_event@up 0040         _litterlanguage_start$5890 004F  
    __size_of_catsensor_isr_input 000C                    ___wmul@product 0025      __size_of_catsensor_isr_timer 001C  
                    set_Dosage@on 0022               __size_of_timer_init 000B                       _eeprom_read 2ADC  
                       _set_Dryer 290F               __size_of_settimeout 0065               __size_of_water_fill 0016  
             __size_of_setup_long 0001              __end_of_timeoutnever 2A48               __size_of_timeoutnow 001C  
             __size_of_water_init 0028                   _cur_instruction 0068               __size_of_water_work 00BD  
                   ??_serial_init 0033                         _set_pacer 23CF         watersensor_event@detected 0052  
                       _proc_char 180C                        ?_get_Dryer 0072                         _proc_line 1AC6  
                       _timer_isr 2B47                         help@index 004D                      ??_get_Dosage 0021  
                 _catsensor_event 188D                         _overflows 00CA                     _serial_rx_isr 010D  
                       _printtime 2BED                     _serial_tx_isr 00FF               __end_of_set_LED_Cat 28CE  
             __size_of_start_long 001A                  ??_catsensor_init 0021                        ?_both_long 0072  
                      _ADCON0bits 009D                        _ADCON1bits 009E                  ??_catsensor_work 0052  
                      water@state 00DC                 ___wmul@multiplier 0021                   ??_catgenie_init 0025  
         __size_of_set_LED_Locked 000F                   ??_catgenie_work 0042                        printf@_val 0043  
                      printf@flag 003E                         main@flags 0061                        printf@prec 0041  
                     _ledalwayson 036B                    _timer_autodose 0164              catgenie120@PORTB_old 00DB  
         __size_of_interrupt_init 0009                      ??_both_short 003D                process_button@down 003D  
               ___lmul@multiplier 0021        __size_of_set_LED_Cartridge 000F                     ??_setup_short 004A  
                 _get_instruction 2956                        putch@dummy 0023              timestampdiff@early_p 0021  
              __end_of_get_Dosage 37D3        __size_of_watersensor_event 0071                        ?_set_Dryer 0072  
       litterlanguage_cleanup@wet 0051                  settimeout@timout 002F                   _exe_instruction 0B3D  
                      ?_set_pacer 0029               _serial_rx_isr$22342 0079                        ?_proc_char 0072  
                      ?_proc_line 0072                        ?_timer_isr 0072                    ?_serial_rx_isr 0072  
                ?_req_instruction 0023                    ?_serial_tx_isr 0072                  __size_of___lldiv 0063  
              __end_of_both_short 297E                  __size_of___lwdiv 0047                        ?_printtime 0072  
                __size_of___lwmod 003F               __end_of_serial_init 1AC6           __size_of_update_display 01B1  
                     _holdtimeout 015E            ?_litterlanguage_paused 0072                  gettimestamp@temp 0028  
                __size_of_get_Arm 001E                       _ins_address 00CE            __size_of_timestampdiff 013E  
                set_pacer@pattern 0029                     ??_start_short 0057                         set_LED@on 0021  
          __size_of_water_filling 0006                       _currenttime 00C6                  __size_of_isdigit 0016  
                 ___lwdiv@divisor 0021                       _error_drain 0385                  __size_of_set_LED 004E  
                        _cattimer 0140                       _error_flood 0388                  __size_of_set_Arm 0024  
                 ___lwdiv@counter 0026                          _detected 0368                          _get_Bowl 2A81  
     __end_of_litterlanguage_init 2630                          _get_Pump 37C9           ??_romwashprogram_getins 0021  
     __end_of_litterlanguage_stop 2215       __end_of_litterlanguage_work 2000                       ??_cmd2index 002E  
                        _commands 0516                      ??_set_Beeper 002F               exe_instruction@temp 00A4  
         ??_romwashprogram_reqins 0023              _litterlanguage_event 1800                       _ins_pointer 006B  
            _litterlanguage_pause 1256                  __size_of_strncmp 0053                      ??_set_Dosage 0021  
                  _process_button 2215                 timestampdiff@diff 002D              _litterlanguage_start 094C  
                        echo@argc 0047                          echo@argv 0049                    _water_detected 37D8  
                   __size_of_echo 007A                     __size_of_help 005F                     __size_of_main 00B2  
        __end_of_wait_instruction 25B3                          _error_nr 0063                    _timeoutexpired 235B  
                      strncmp@len 0027                          _interval 00D8       __size_of_userinterface_init 002E  
     __size_of_userinterface_work 015E                          _set_Bowl 2AFF                          clear_ram 37EA  
         __end_of_catsensor_event 1942                          _set_Pump 28FE                          _pingtime 0146  
             __end_of_setup_short 24BD                          _set_mode 2EED                       _set_LED_Cat 28BF  
                        help@argc 0047                          help@argv 0049                          _rtc_init 2A64  
                        _rtc_work 2084                       ??_get_Dryer 0021                      set_mode@mode 0049  
              set_LED_Cat@pattern 0031         __size_of_update_autotimer 0090         __size_of_heatsensor_event 0011  
                    ??_timer_init 0021                       ??_both_long 0025                       _longhandled 038C  
              __end_of_set_Beeper 28A1                      ??_settimeout 0033                      ??_water_fill 0021  
              __end_of_set_Dosage 28FE                      ??_setup_long 0021                      ??_timeoutnow 0027  
                    ??_water_init 0021                     _timer_waitins 016A                      ??_water_work 0053  
        __size_of_postponetimeout 005B                          memcpy@d1 0025                          memcpy@s1 0021  
         __end_of_get_instruction 2969                          readch@ch 0023                          isdigit@c 0022  
               _setup_short$10735 004B            __end_of_process_button 227E            __end_of_water_detected 37DE  
           ?_litterlanguage_event 0021                     ?_cmdline_init 0072             ?_litterlanguage_pause 0072  
             __end_of_start_short 01FF                     ?_cmdline_work 0072                      ??_start_long 0052  
                        intlevel1 0100             ?_litterlanguage_start 0072                   set_pacer@repeat 002A  
          __end_of_timeoutexpired 23CF             __size_of_timeoutnever 001C           __end_of_exe_instruction 1000  
                ___lwmod@dividend 002B                  ___lldiv@dividend 0025                     _timestampdiff 1BF0  
             catgenie_work@status 0047                       ??_set_Dryer 0021         litterlanguage_event@event 0022  
              __end_of_timer_init 2842                         strncmp@s1 002B                         strncmp@s2 0025  
                   _water_filling 37DE                __end_of_settimeout 21AC                __end_of_water_fill 2994  
              __end_of_setup_long 0200                __end_of_timeoutnow 2A64                       ??_set_pacer 002B  
              __end_of_water_init 2B96                __end_of_water_work 19FF                       _serial_init 19FF  
                 ??_serial_rx_isr 0072                   ??_serial_tx_isr 0072                          printf@ap 003D  
                     ??_proc_char 005D                       ??_proc_line 004F                       ??_timer_isr 0072  
                     ??_printtime 0047               _catsensor_isr_input 284D                 set_Beeper@pattern 0031  
         settimeout@tempLongTicks 0037                    _set_LED_Locked 28CE               _catsensor_isr_timer 2A10  
              __end_of_start_long 2A10                  ___lldiv@quotient 002A                   ___lwmod@divisor 0029  
                        strlen@cp 002A                    _interrupt_init 37F7                   ___lwmod@counter 002E  
                     _sensortimer 0152                      _timeoutnever 2A2C               setupbutton_event@up 0040  
                     _timer_drain 00E3                    ??_cmdline_init 0047                   ?_process_button 003D  
                  ??_cmdline_work 005F                   ?_water_detected 0072                  set_Beeper@repeat 002E  
                 ?_timeoutexpired 0029                       _setup_short 2446              ?_catsensor_isr_input 0072  
                   ?_eeprom_write 0021              ?_catsensor_isr_timer 0072                    ?_timestampdiff 0021  
                    proc_char@rxd 005E                      ?_eeprom_read 0072                    ?_water_filling 0072  
                     _washprogram 0213                  ?_catsensor_event 0072         litterlanguage_pause@pause 0050  
