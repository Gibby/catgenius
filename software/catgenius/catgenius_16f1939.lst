

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Mar 08 13:38:00 2023

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1939
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 20 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 20 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    51  8007  C9E1               	dw 0xFFF9 & 0xFFE7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xF9FF & 0xFFFF & 0xEFFF & 0xD
                                 FFF ;#
    52                           # 21 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 21 "D:\git\gibby\catgenius\software\catgenius\configbits.h"
    55  8008  DAFF               	dw 0xFFFF & 0xFFFF & 0xFEFF & 0xFFFF & 0xFBFF & 0xDFFF ;#
    56                           	FNCALL	_main,_catgenie_init
    57                           	FNCALL	_main,_serial_init
    58                           	FNCALL	_main,_printf
    59                           	FNCALL	_main,_timer_init
    60                           	FNCALL	_main,_rtc_init
    61                           	FNCALL	_main,_catsensor_init
    62                           	FNCALL	_main,_water_init
    63                           	FNCALL	_main,_userinterface_init
    64                           	FNCALL	_main,_cmdline_init
    65                           	FNCALL	_main,_litterlanguage_init
    66                           	FNCALL	_main,_interrupt_init
    67                           	FNCALL	_main,_rtc_work
    68                           	FNCALL	_main,_catsensor_work
    69                           	FNCALL	_main,_water_work
    70                           	FNCALL	_main,_catgenie_work
    71                           	FNCALL	_main,_userinterface_work
    72                           	FNCALL	_main,_cmdline_work
    73                           	FNCALL	_main,_litterlanguage_work
    74                           	FNCALL	_litterlanguage_work,_water_detected
    75                           	FNCALL	_litterlanguage_work,_water_filling
    76                           	FNCALL	_litterlanguage_work,_timeoutexpired
    77                           	FNCALL	_litterlanguage_work,_printtime
    78                           	FNCALL	_litterlanguage_work,_printf
    79                           	FNCALL	_litterlanguage_work,_litterlanguage_event
    80                           	FNCALL	_litterlanguage_work,_get_Pump
    81                           	FNCALL	_litterlanguage_work,_timeoutnever
    82                           	FNCALL	_litterlanguage_work,_set_Dosage
    83                           	FNCALL	_litterlanguage_work,_req_instruction
    84                           	FNCALL	_litterlanguage_work,_get_instruction
    85                           	FNCALL	_litterlanguage_work,_eeprom_read
    86                           	FNCALL	_litterlanguage_work,_eeprom_write
    87                           	FNCALL	_litterlanguage_work,_exe_instruction
    88                           	FNCALL	_litterlanguage_work,_wait_instruction
    89                           	FNCALL	_exe_instruction,_printtime
    90                           	FNCALL	_exe_instruction,_printf
    91                           	FNCALL	_exe_instruction,_set_Bowl
    92                           	FNCALL	_exe_instruction,_set_Arm
    93                           	FNCALL	_exe_instruction,_eeprom_read
    94                           	FNCALL	_exe_instruction,_eeprom_write
    95                           	FNCALL	_exe_instruction,_water_detected
    96                           	FNCALL	_exe_instruction,_water_fill
    97                           	FNCALL	_exe_instruction,_settimeout
    98                           	FNCALL	_exe_instruction,_timeoutnever
    99                           	FNCALL	_exe_instruction,_set_Pump
   100                           	FNCALL	_exe_instruction,_set_Dryer
   101                           	FNCALL	_exe_instruction,___lmul
   102                           	FNCALL	_exe_instruction,___wmul
   103                           	FNCALL	_exe_instruction,___lwdiv
   104                           	FNCALL	_exe_instruction,___lwmod
   105                           	FNCALL	_exe_instruction,_set_Dosage
   106                           	FNCALL	_exe_instruction,_memcpy
   107                           	FNCALL	_exe_instruction,_litterlanguage_stop
   108                           	FNCALL	_exe_instruction,_litterlanguage_event
   109                           	FNCALL	_litterlanguage_event,_litterlanguage_stop
   110                           	FNCALL	_litterlanguage_event,_litterlanguage_pause
   111                           	FNCALL	_litterlanguage_event,_set_Beeper
   112                           	FNCALL	_litterlanguage_stop,_printtime
   113                           	FNCALL	_litterlanguage_stop,_printf
   114                           	FNCALL	_litterlanguage_stop,_set_Bowl
   115                           	FNCALL	_litterlanguage_stop,_set_Arm
   116                           	FNCALL	_litterlanguage_stop,_water_fill
   117                           	FNCALL	_litterlanguage_stop,_set_Dosage
   118                           	FNCALL	_litterlanguage_stop,_set_Pump
   119                           	FNCALL	_litterlanguage_stop,_set_Dryer
   120                           	FNCALL	_litterlanguage_stop,_timeoutnever
   121                           	FNCALL	_litterlanguage_stop,_litterlanguage_event
   122                           	FNCALL	_userinterface_work,_timeoutexpired
   123                           	FNCALL	_userinterface_work,_update_autotimer
   124                           	FNCALL	_userinterface_work,_printtime
   125                           	FNCALL	_userinterface_work,_printf
   126                           	FNCALL	_userinterface_work,_litterlanguage_start
   127                           	FNCALL	_userinterface_work,_litterlanguage_running
   128                           	FNCALL	_userinterface_work,_timeoutnow
   129                           	FNCALL	_userinterface_work,_start_short
   130                           	FNCALL	_userinterface_work,_setup_short
   131                           	FNCALL	_userinterface_work,_both_short
   132                           	FNCALL	_userinterface_work,_key_Beep
   133                           	FNCALL	_userinterface_work,_start_long
   134                           	FNCALL	_userinterface_work,_setup_long
   135                           	FNCALL	_userinterface_work,_both_long
   136                           	FNCALL	_userinterface_work,_timeoutnever
   137                           	FNCALL	_userinterface_work,_update_display
   138                           	FNCALL	_start_long,_litterlanguage_running
   139                           	FNCALL	_start_long,_litterlanguage_start
   140                           	FNCALL	_start_long,_litterlanguage_stop
   141                           	FNCALL	_start_short,_litterlanguage_running
   142                           	FNCALL	_start_short,_litterlanguage_start
   143                           	FNCALL	_start_short,_litterlanguage_paused
   144                           	FNCALL	_start_short,_litterlanguage_pause
   145                           	FNCALL	_catgenie_work,_heatsensor_event
   146                           	FNCALL	_catgenie_work,_settimeout
   147                           	FNCALL	_catgenie_work,___bmul
   148                           	FNCALL	_catgenie_work,_timeoutexpired
   149                           	FNCALL	_catgenie_work,_setupbutton_event
   150                           	FNCALL	_catgenie_work,_startbutton_event
   151                           	FNCALL	_catgenie_work,_timeoutnever
   152                           	FNCALL	_water_work,_timeoutexpired
   153                           	FNCALL	_water_work,_settimeout
   154                           	FNCALL	_water_work,_waterdetection_event
   155                           	FNCALL	_water_work,_watersensor_event
   156                           	FNCALL	_setupbutton_event,_process_button
   157                           	FNCALL	_startbutton_event,_process_button
   158                           	FNCALL	_heatsensor_event,_litterlanguage_event
   159                           	FNCALL	_waterdetection_event,_printtime
   160                           	FNCALL	_waterdetection_event,_printf
   161                           	FNCALL	_waterdetection_event,_water_fill
   162                           	FNCALL	_waterdetection_event,_timeoutnever
   163                           	FNCALL	_waterdetection_event,_litterlanguage_event
   164                           	FNCALL	_litterlanguage_pause,_printtime
   165                           	FNCALL	_litterlanguage_pause,_get_Bowl
   166                           	FNCALL	_litterlanguage_pause,_set_Bowl
   167                           	FNCALL	_litterlanguage_pause,_get_Arm
   168                           	FNCALL	_litterlanguage_pause,_set_Arm
   169                           	FNCALL	_litterlanguage_pause,_water_filling
   170                           	FNCALL	_litterlanguage_pause,_water_fill
   171                           	FNCALL	_litterlanguage_pause,_get_Dosage
   172                           	FNCALL	_litterlanguage_pause,_set_Dosage
   173                           	FNCALL	_litterlanguage_pause,_get_Pump
   174                           	FNCALL	_litterlanguage_pause,_set_Pump
   175                           	FNCALL	_litterlanguage_pause,_get_Dryer
   176                           	FNCALL	_litterlanguage_pause,_set_Dryer
   177                           	FNCALL	_litterlanguage_pause,_gettimestamp
   178                           	FNCALL	_litterlanguage_pause,_timestampdiff
   179                           	FNCALL	_litterlanguage_pause,_timeoutnever
   180                           	FNCALL	_litterlanguage_pause,_printf
   181                           	FNCALL	_litterlanguage_pause,_settimeout
   182                           	FNCALL	_litterlanguage_pause,_litterlanguage_event
   183                           	FNCALL	_cmdline_work,_putch
   184                           	FNCALL	_cmdline_work,_proc_char
   185                           	FNCALL	_cmdline_work,_readch
   186                           	FNCALL	_catsensor_work,_timeoutexpired
   187                           	FNCALL	_catsensor_work,_settimeout
   188                           	FNCALL	_catsensor_work,_timeoutnever
   189                           	FNCALL	_catsensor_work,_catsensor_event
   190                           	FNCALL	_proc_char,_putch
   191                           	FNCALL	_proc_char,_proc_line
   192                           	FNCALL	_proc_char,_printf
   193                           	FNCALL	_catsensor_event,_printtime
   194                           	FNCALL	_catsensor_event,_printf
   195                           	FNCALL	_catsensor_event,_timeoutnever
   196                           	FNCALL	_catsensor_event,_settimeout
   197                           	FNCALL	_catsensor_event,_update_display
   198                           	FNCALL	_process_button,_key_Beep
   199                           	FNCALL	_process_button,_settimeout
   200                           	FNCALL	_process_button,_timeoutnever
   201                           	FNCALL	_process_button,_update_display
   202                           	FNCALL	_setup_short,_set_mode
   203                           	FNCALL	_setup_short,_settimeout
   204                           	FNCALL	_litterlanguage_init,_printf
   205                           	FNCALL	_litterlanguage_init,_litterlanguage_cleanup
   206                           	FNCALL	_litterlanguage_init,_eeprom_write
   207                           	FNCALL	_litterlanguage_init,_eeprom_read
   208                           	FNCALL	_userinterface_init,_eeprom_write
   209                           	FNCALL	_userinterface_init,_eeprom_read
   210                           	FNCALL	_userinterface_init,_set_mode
   211                           	FNCALL	_userinterface_init,_update_display
   212                           	FNCALL	_proc_line,_strlen
   213                           	FNCALL	_proc_line,_cmd2index
   214                           	FNCALL	_proc_line,_printf
   215                           	FNCALL	_proc_line,___bmul
   216                           	FNCALL	_proc_line,Fake
   217                           	FNCALL	_proc_line,_echo
   218                           	FNCALL	_proc_line,_help
   219                           	FNCALL	_update_display,_set_LED_Error
   220                           	FNCALL	_update_display,_set_LED_Cartridge
   221                           	FNCALL	_update_display,_set_LED
   222                           	FNCALL	_update_display,_set_LED_Cat
   223                           	FNCALL	_update_display,_set_LED_Locked
   224                           	FNCALL	_set_mode,_printf
   225                           	FNCALL	_set_mode,_update_autotimer
   226                           	FNCALL	_set_mode,_timeoutnow
   227                           	FNCALL	_set_mode,_eeprom_write
   228                           	FNCALL	_litterlanguage_start,_printtime
   229                           	FNCALL	_litterlanguage_start,_printf
   230                           	FNCALL	_litterlanguage_cleanup,_printtime
   231                           	FNCALL	_litterlanguage_cleanup,_printf
   232                           	FNCALL	_help,_printf
   233                           	FNCALL	_help,___bmul
   234                           	FNCALL	_echo,_strncmp
   235                           	FNCALL	_echo,_printf
   236                           	FNCALL	_set_LED_Locked,_set_pacer
   237                           	FNCALL	_set_LED_Cat,_set_pacer
   238                           	FNCALL	_set_LED_Cartridge,_set_pacer
   239                           	FNCALL	_set_LED_Error,_set_pacer
   240                           	FNCALL	_set_Beeper,_set_pacer
   241                           	FNCALL	_key_Beep,_set_pacer
   242                           	FNCALL	_both_short,_settimeout
   243                           	FNCALL	_update_autotimer,_settimeout
   244                           	FNCALL	_update_autotimer,_postponetimeout
   245                           	FNCALL	_update_autotimer,_timeoutnever
   246                           	FNCALL	_wait_instruction,_timeoutexpired
   247                           	FNCALL	_wait_instruction,_water_detected
   248                           	FNCALL	_wait_instruction,_timeoutnever
   249                           	FNCALL	_wait_instruction,_get_Dosage
   250                           	FNCALL	_printtime,_printf
   251                           	FNCALL	_rtc_work,_timeoutexpired
   252                           	FNCALL	_rtc_work,_postponetimeout
   253                           	FNCALL	_cmdline_init,_printf
   254                           	FNCALL	_rtc_init,_settimeout
   255                           	FNCALL	_cmd2index,___bmul
   256                           	FNCALL	_cmd2index,_strncmp
   257                           	FNCALL	_set_pacer,___bmul
   258                           	FNCALL	_set_pacer,_timeoutnow
   259                           	FNCALL	_both_long,_eeprom_write
   260                           	FNCALL	_settimeout,_gettimestamp
   261                           	FNCALL	_get_instruction,_romwashprogram_getins
   262                           	FNCALL	_req_instruction,_romwashprogram_reqins
   263                           	FNCALL	_timeoutexpired,_gettimestamp
   264                           	FNCALL	_printf,_putch
   265                           	FNCALL	_printf,_isdigit
   266                           	FNCALL	_printf,___wmul
   267                           	FNCALL	_printf,___bmul
   268                           	FNCALL	_printf,___lwdiv
   269                           	FNCALL	_printf,___lwmod
   270                           	FNCALL	_serial_init,___lldiv
   271                           	FNCALL	_catgenie_init,___bmul
   272                           	FNROOT	_main
   273                           	FNCALL	_isr,_timer_isr
   274                           	FNCALL	_isr,_catsensor_isr_timer
   275                           	FNCALL	_isr,_catsensor_isr_input
   276                           	FNCALL	_isr,_serial_rx_isr
   277                           	FNCALL	_isr,_serial_tx_isr
   278                           	FNCALL	intlevel1,_isr
   279                           	global	intlevel1
   280                           	FNROOT	intlevel1
   281                           	global	_cart_level
   282                           	global	_localecho
   283                           	global	key_Beep@F3155
   284                           	global	_debouncer
   285                           	global	_holdtimeout
   286                           	global	_timer_autodose
   287                           	global	_timer_waitins
   288                           	global	_debouncers
   289                           	global	_pacers
   290                           	global	_autotimer
   291                           	global	_timer_drain
   292                           	global	_timer_fill
   293                           psect	idataBANK0,class=CODE,space=0,delta=2
   294                           global __pidataBANK0
   295  0002                     __pidataBANK0:
   296                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   297                           	line	72
   298                           
   299                           ;initializer for _cart_level
   300  0002  3464               	retlw	064h
   301                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
   302                           	line	35
   303                           
   304                           ;initializer for _localecho
   305  0003  3401               	retlw	01h
   306                           psect	idataBANK3,class=CODE,space=0,delta=2
   307                           global __pidataBANK3
   308  28C9                     __pidataBANK3:
   309                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
   310                           	line	358
   311                           
   312                           ;initializer for key_Beep@F3155
   313  28C9  3400               	retlw	0
   314  28CA  3401               	retlw	01h
   315  28CB  3405               	retlw	05h
   316  28CC  3415               	retlw	015h
   317  28CD  3455               	retlw	055h
   318                           psect	idataBANK2,class=CODE,space=0,delta=2
   319                           global __pidataBANK2
   320  28E0                     __pidataBANK2:
   321                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
   322                           	line	36
   323                           
   324                           ;initializer for _debouncer
   325  28E0  34FF               	retlw	0FFh
   326  28E1  34FF               	retlw	0FFh
   327                           
   328  28E2  34FF               	retlw	0FFh
   329  28E3  34FF               	retlw	0FFh
   330  28E4  34FF               	retlw	0FFh
   331  28E5  34FF               	retlw	0FFh
   332                           
   333                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   334                           	line	53
   335                           
   336                           ;initializer for _holdtimeout
   337  28E6  34FF               	retlw	0FFh
   338  28E7  34FF               	retlw	0FFh
   339                           
   340  28E8  34FF               	retlw	0FFh
   341  28E9  34FF               	retlw	0FFh
   342  28EA  34FF               	retlw	0FFh
   343  28EB  34FF               	retlw	0FFh
   344                           
   345                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
   346                           	line	60
   347                           
   348                           ;initializer for _timer_autodose
   349  28EC  34FF               	retlw	0FFh
   350  28ED  34FF               	retlw	0FFh
   351                           
   352  28EE  34FF               	retlw	0FFh
   353  28EF  34FF               	retlw	0FFh
   354  28F0  34FF               	retlw	0FFh
   355  28F1  34FF               	retlw	0FFh
   356                           
   357                           	line	57
   358                           
   359                           ;initializer for _timer_waitins
   360  28F2  34FF               	retlw	0FFh
   361  28F3  34FF               	retlw	0FFh
   362                           
   363  28F4  34FF               	retlw	0FFh
   364  28F5  34FF               	retlw	0FFh
   365  28F6  34FF               	retlw	0FFh
   366  28F7  34FF               	retlw	0FFh
   367                           
   368                           psect	idataBANK3
   369                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
   370                           	line	61
   371                           
   372                           ;initializer for _debouncers
   373  28CE  34FF               	retlw	0FFh
   374  28CF  34FF               	retlw	0FFh
   375                           
   376  28D0  34FF               	retlw	0FFh
   377  28D1  34FF               	retlw	0FFh
   378  28D2  34FF               	retlw	0FFh
   379  28D3  34FF               	retlw	0FFh
   380                           
   381  28D4  3400               	retlw	0
   382  28D5  340D               	retlw	13&0ffh
   383  28D6  3407               	retlw	(fp__startbutton_event-fpbase)&0ffh
   384  28D7  34FF               	retlw	0FFh
   385  28D8  34FF               	retlw	0FFh
   386                           
   387  28D9  34FF               	retlw	0FFh
   388  28DA  34FF               	retlw	0FFh
   389  28DB  34FF               	retlw	0FFh
   390  28DC  34FF               	retlw	0FFh
   391                           
   392  28DD  340A               	retlw	0Ah
   393  28DE  340D               	retlw	13&0ffh
   394  28DF  3405               	retlw	(fp__setupbutton_event-fpbase)&0ffh
   395                           psect	idataBANK4,class=CODE,space=0,delta=2
   396                           global __pidataBANK4
   397  2C9C                     __pidataBANK4:
   398                           	line	74
   399                           
   400                           ;initializer for _pacers
   401  2C9C  3400               	retlw	0
   402  2C9D  3400               	retlw	0
   403                           
   404  2C9E  3400               	retlw	0
   405  2C9F  3400               	retlw	0
   406  2CA0  3400               	retlw	0
   407  2CA1  3400               	retlw	0
   408                           
   409  2CA2  3400               	retlw	0
   410  2CA3  3401               	retlw	01h
   411  2CA4  34DD               	retlw	low(_beep_bits)
   412  2CA5  3400               	retlw	(0x1/2)
   413                           
   414  2CA6  3400               	retlw	0
   415  2CA7  3400               	retlw	0
   416                           
   417  2CA8  3400               	retlw	0
   418  2CA9  3400               	retlw	0
   419  2CAA  3400               	retlw	0
   420  2CAB  3400               	retlw	0
   421                           
   422  2CAC  3400               	retlw	0
   423  2CAD  3411               	retlw	011h
   424  2CAE  34DD               	retlw	low(_beep_bits)
   425  2CAF  3400               	retlw	(0x1/2)
   426                           
   427  2CB0  3400               	retlw	0
   428  2CB1  3400               	retlw	0
   429                           
   430  2CB2  3400               	retlw	0
   431  2CB3  3400               	retlw	0
   432  2CB4  3400               	retlw	0
   433  2CB5  3400               	retlw	0
   434                           
   435  2CB6  3400               	retlw	0
   436  2CB7  3401               	retlw	01h
   437  2CB8  340E               	retlw	low(270)
   438  2CB9  3401               	retlw	(0x2/2)
   439                           
   440  2CBA  3400               	retlw	0
   441  2CBB  3400               	retlw	0
   442                           
   443  2CBC  3400               	retlw	0
   444  2CBD  3400               	retlw	0
   445  2CBE  3400               	retlw	0
   446  2CBF  3400               	retlw	0
   447                           
   448  2CC0  3400               	retlw	0
   449  2CC1  3421               	retlw	021h
   450  2CC2  3410               	retlw	low(272)
   451  2CC3  3401               	retlw	(0x2/2)
   452                           
   453  2CC4  3400               	retlw	0
   454  2CC5  3400               	retlw	0
   455                           
   456  2CC6  3400               	retlw	0
   457  2CC7  3400               	retlw	0
   458  2CC8  3400               	retlw	0
   459  2CC9  3400               	retlw	0
   460                           
   461  2CCA  3400               	retlw	0
   462  2CCB  3401               	retlw	01h
   463  2CCC  3410               	retlw	low(272)
   464  2CCD  3401               	retlw	(0x2/2)
   465                           
   466  2CCE  3400               	retlw	0
   467  2CCF  3400               	retlw	0
   468                           
   469  2CD0  3400               	retlw	0
   470  2CD1  3400               	retlw	0
   471  2CD2  3400               	retlw	0
   472  2CD3  3400               	retlw	0
   473                           
   474  2CD4  3400               	retlw	0
   475  2CD5  3411               	retlw	011h
   476  2CD6  3410               	retlw	low(272)
   477  2CD7  3401               	retlw	(0x2/2)
   478                           
   479                           psect	idataBANK1,class=CODE,space=0,delta=2
   480                           global __pidataBANK1
   481  284E                     __pidataBANK1:
   482                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
   483                           	line	54
   484                           
   485                           ;initializer for _autotimer
   486  284E  34FF               	retlw	0FFh
   487  284F  34FF               	retlw	0FFh
   488                           
   489  2850  34FF               	retlw	0FFh
   490  2851  34FF               	retlw	0FFh
   491  2852  34FF               	retlw	0FFh
   492  2853  34FF               	retlw	0FFh
   493                           
   494                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
   495                           	line	59
   496                           
   497                           ;initializer for _timer_drain
   498  2854  34FF               	retlw	0FFh
   499  2855  34FF               	retlw	0FFh
   500                           
   501  2856  34FF               	retlw	0FFh
   502  2857  34FF               	retlw	0FFh
   503  2858  34FF               	retlw	0FFh
   504  2859  34FF               	retlw	0FFh
   505                           
   506                           	line	58
   507                           
   508                           ;initializer for _timer_fill
   509  285A  34FF               	retlw	0FFh
   510  285B  34FF               	retlw	0FFh
   511                           
   512  285C  34FF               	retlw	0FFh
   513  285D  34FF               	retlw	0FFh
   514  285E  34FF               	retlw	0FFh
   515  285F  34FF               	retlw	0FFh
   516                           
   517                           	global	_dpowers
   518                           psect	stringtext,class=STRCODE,delta=2,reloc=256
   519                           global __pstringtext
   520  0200                     __pstringtext:
   521                           	global    __stringtab
   522  0200                     __stringtab:
   523  0200  3400               	retlw	0
   524                           psect	stringtext
   525                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   526                           	line	350
   527  0201                     _dpowers:
   528  0201  3401               	retlw	01h
   529  0202  3400               	retlw	0
   530                           
   531  0203  340A               	retlw	0Ah
   532  0204  3400               	retlw	0
   533                           
   534  0205  3464               	retlw	064h
   535  0206  3400               	retlw	0
   536                           
   537  0207  34E8               	retlw	0E8h
   538  0208  3403               	retlw	03h
   539                           
   540  0209  3410               	retlw	010h
   541  020A  3427               	retlw	027h
   542                           
   543                           	global	_hexpowers
   544                           psect	stringtext
   545                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   546                           	line	358
   547  020B                     _hexpowers:
   548  020B  3401               	retlw	01h
   549  020C  3400               	retlw	0
   550                           
   551  020D  3410               	retlw	010h
   552  020E  3400               	retlw	0
   553                           
   554  020F  3400               	retlw	0
   555  0210  3401               	retlw	01h
   556                           
   557  0211  3400               	retlw	0
   558  0212  3410               	retlw	010h
   559                           
   560                           	global	_washprogram
   561                           psect	stringtext
   562                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
   563                           	line	205
   564  0213                     _washprogram:
   565  0213  3400               	retlw	0
   566  0214  340E               	retlw	0Eh
   567  0215  3406               	retlw	06h
   568                           
   569  0216  3401               	retlw	01h
   570  0217  3402               	retlw	02h
   571  0218  3400               	retlw	0
   572                           
   573  0219  3402               	retlw	02h
   574  021A  3401               	retlw	01h
   575  021B  3400               	retlw	0
   576                           
   577  021C  3407               	retlw	07h
   578  021D  34A1               	retlw	0A1h
   579  021E  3433               	retlw	033h
   580                           
   581  021F  3402               	retlw	02h
   582  0220  3400               	retlw	0
   583  0221  3400               	retlw	0
   584                           
   585  0222  3407               	retlw	07h
   586  0223  34DD               	retlw	0DDh
   587  0224  3446               	retlw	046h
   588                           
   589  0225  3401               	retlw	01h
   590  0226  3401               	retlw	01h
   591  0227  3400               	retlw	0
   592                           
   593  0228  3407               	retlw	07h
   594  0229  3439               	retlw	039h
   595  022A  3418               	retlw	018h
   596                           
   597  022B  3401               	retlw	01h
   598  022C  3402               	retlw	02h
   599  022D  3400               	retlw	0
   600                           
   601  022E  3402               	retlw	02h
   602  022F  3401               	retlw	01h
   603  0230  3400               	retlw	0
   604                           
   605  0231  3407               	retlw	07h
   606  0232  3485               	retlw	085h
   607  0233  3416               	retlw	016h
   608                           
   609  0234  3402               	retlw	02h
   610  0235  3402               	retlw	02h
   611  0236  3400               	retlw	0
   612                           
   613  0237  3407               	retlw	07h
   614  0238  3414               	retlw	014h
   615  0239  3402               	retlw	02h
   616                           
   617  023A  3402               	retlw	02h
   618  023B  3400               	retlw	0
   619  023C  3400               	retlw	0
   620                           
   621  023D  3407               	retlw	07h
   622  023E  3476               	retlw	076h
   623  023F  3462               	retlw	062h
   624                           
   625  0240  3402               	retlw	02h
   626  0241  3402               	retlw	02h
   627  0242  3400               	retlw	0
   628                           
   629  0243  3407               	retlw	07h
   630  0244  34AF               	retlw	0AFh
   631  0245  3429               	retlw	029h
   632                           
   633  0246  3402               	retlw	02h
   634  0247  3401               	retlw	01h
   635  0248  3400               	retlw	0
   636                           
   637  0249  3407               	retlw	07h
   638  024A  34CA               	retlw	0CAh
   639  024B  3419               	retlw	019h
   640                           
   641  024C  3402               	retlw	02h
   642  024D  3402               	retlw	02h
   643  024E  3400               	retlw	0
   644                           
   645  024F  3407               	retlw	07h
   646  0250  3434               	retlw	034h
   647  0251  3443               	retlw	043h
   648                           
   649  0252  3402               	retlw	02h
   650  0253  3401               	retlw	01h
   651  0254  3400               	retlw	0
   652                           
   653  0255  3407               	retlw	07h
   654  0256  349F               	retlw	09Fh
   655  0257  3431               	retlw	031h
   656                           
   657  0258  3402               	retlw	02h
   658  0259  3400               	retlw	0
   659  025A  3400               	retlw	0
   660                           
   661  025B  3407               	retlw	07h
   662  025C  345D               	retlw	05Dh
   663  025D  3412               	retlw	012h
   664                           
   665  025E  3402               	retlw	02h
   666  025F  3401               	retlw	01h
   667  0260  3400               	retlw	0
   668                           
   669  0261  3407               	retlw	07h
   670  0262  34C3               	retlw	0C3h
   671  0263  342B               	retlw	02Bh
   672                           
   673  0264  3402               	retlw	02h
   674  0265  3402               	retlw	02h
   675  0266  3400               	retlw	0
   676                           
   677  0267  3407               	retlw	07h
   678  0268  3414               	retlw	014h
   679  0269  3402               	retlw	02h
   680                           
   681  026A  3402               	retlw	02h
   682  026B  3400               	retlw	0
   683  026C  3400               	retlw	0
   684                           
   685  026D  3407               	retlw	07h
   686  026E  3476               	retlw	076h
   687  026F  3462               	retlw	062h
   688                           
   689  0270  3402               	retlw	02h
   690  0271  3402               	retlw	02h
   691  0272  3400               	retlw	0
   692                           
   693  0273  3407               	retlw	07h
   694  0274  34AF               	retlw	0AFh
   695  0275  3429               	retlw	029h
   696                           
   697  0276  3402               	retlw	02h
   698  0277  3401               	retlw	01h
   699  0278  3400               	retlw	0
   700                           
   701  0279  3407               	retlw	07h
   702  027A  34C9               	retlw	0C9h
   703  027B  3419               	retlw	019h
   704                           
   705  027C  3402               	retlw	02h
   706  027D  3402               	retlw	02h
   707  027E  3400               	retlw	0
   708                           
   709  027F  3407               	retlw	07h
   710  0280  34AD               	retlw	0ADh
   711  0281  344E               	retlw	04Eh
   712                           
   713  0282  3401               	retlw	01h
   714  0283  3401               	retlw	01h
   715  0284  3400               	retlw	0
   716                           
   717  0285  3402               	retlw	02h
   718  0286  3401               	retlw	01h
   719  0287  3400               	retlw	0
   720                           
   721  0288  3407               	retlw	07h
   722  0289  3409               	retlw	09h
   723  028A  3455               	retlw	055h
   724                           
   725  028B  3402               	retlw	02h
   726  028C  3402               	retlw	02h
   727  028D  3400               	retlw	0
   728                           
   729  028E  3407               	retlw	07h
   730  028F  34A4               	retlw	0A4h
   731  0290  3403               	retlw	03h
   732                           
   733  0291  3402               	retlw	02h
   734  0292  3400               	retlw	0
   735  0293  3400               	retlw	0
   736                           
   737  0294  340A               	retlw	0Ah
   738  0295  3436               	retlw	036h
   739  0296  3400               	retlw	0
   740                           
   741  0297  3407               	retlw	07h
   742  0298  344C               	retlw	04Ch
   743  0299  342F               	retlw	02Fh
   744                           
   745  029A  3401               	retlw	01h
   746  029B  3402               	retlw	02h
   747  029C  3400               	retlw	0
   748                           
   749  029D  3402               	retlw	02h
   750  029E  3401               	retlw	01h
   751  029F  3400               	retlw	0
   752                           
   753  02A0  3407               	retlw	07h
   754  02A1  34C0               	retlw	0C0h
   755  02A2  340C               	retlw	0Ch
   756                           
   757  02A3  3402               	retlw	02h
   758  02A4  3402               	retlw	02h
   759  02A5  3400               	retlw	0
   760                           
   761  02A6  3407               	retlw	07h
   762  02A7  3414               	retlw	014h
   763  02A8  3402               	retlw	02h
   764                           
   765  02A9  3402               	retlw	02h
   766  02AA  3400               	retlw	0
   767  02AB  3400               	retlw	0
   768                           
   769  02AC  3407               	retlw	07h
   770  02AD  348E               	retlw	08Eh
   771  02AE  345E               	retlw	05Eh
   772                           
   773  02AF  3402               	retlw	02h
   774  02B0  3402               	retlw	02h
   775  02B1  3400               	retlw	0
   776                           
   777  02B2  3407               	retlw	07h
   778  02B3  344B               	retlw	04Bh
   779  02B4  3429               	retlw	029h
   780                           
   781  02B5  3402               	retlw	02h
   782  02B6  3401               	retlw	01h
   783  02B7  3400               	retlw	0
   784                           
   785  02B8  3407               	retlw	07h
   786  02B9  34CA               	retlw	0CAh
   787  02BA  3419               	retlw	019h
   788                           
   789  02BB  3402               	retlw	02h
   790  02BC  3402               	retlw	02h
   791  02BD  3400               	retlw	0
   792                           
   793  02BE  3407               	retlw	07h
   794  02BF  34F5               	retlw	0F5h
   795  02C0  3442               	retlw	042h
   796                           
   797  02C1  3402               	retlw	02h
   798  02C2  3400               	retlw	0
   799  02C3  3400               	retlw	0
   800                           
   801  02C4  3401               	retlw	01h
   802  02C5  3400               	retlw	0
   803  02C6  3400               	retlw	0
   804                           
   805  02C7  3408               	retlw	08h
   806  02C8  3400               	retlw	0
   807  02C9  3400               	retlw	0
   808                           
   809  02CA  3403               	retlw	03h
   810  02CB  3401               	retlw	01h
   811  02CC  3400               	retlw	0
   812                           
   813  02CD  3401               	retlw	01h
   814  02CE  3401               	retlw	01h
   815  02CF  3400               	retlw	0
   816                           
   817  02D0  3407               	retlw	07h
   818  02D1  3450               	retlw	050h
   819  02D2  3449               	retlw	049h
   820                           
   821  02D3  3402               	retlw	02h
   822  02D4  3401               	retlw	01h
   823  02D5  3400               	retlw	0
   824                           
   825  02D6  3407               	retlw	07h
   826  02D7  3476               	retlw	076h
   827  02D8  3462               	retlw	062h
   828                           
   829  02D9  3402               	retlw	02h
   830  02DA  3402               	retlw	02h
   831  02DB  3400               	retlw	0
   832                           
   833  02DC  3407               	retlw	07h
   834  02DD  346C               	retlw	06Ch
   835  02DE  3404               	retlw	04h
   836                           
   837  02DF  3402               	retlw	02h
   838  02E0  3400               	retlw	0
   839  02E1  3400               	retlw	0
   840                           
   841  02E2  3408               	retlw	08h
   842  02E3  3401               	retlw	01h
   843  02E4  3400               	retlw	0
   844                           
   845  02E5  3407               	retlw	07h
   846  02E6  345E               	retlw	05Eh
   847  02E7  34F8               	retlw	0F8h
   848                           
   849  02E8  340C               	retlw	0Ch
   850  02E9  34AD               	retlw	low(_drain)
   851  02EA  3404               	retlw	high(_drain)
   852                           
   853  02EB  3403               	retlw	03h
   854  02EC  3401               	retlw	01h
   855  02ED  3400               	retlw	0
   856                           
   857  02EE  3407               	retlw	07h
   858  02EF  347A               	retlw	07Ah
   859  02F0  34D8               	retlw	0D8h
   860                           
   861  02F1  3401               	retlw	01h
   862  02F2  3402               	retlw	02h
   863  02F3  3400               	retlw	0
   864                           
   865  02F4  3406               	retlw	06h
   866  02F5  3403               	retlw	03h
   867  02F6  3400               	retlw	0
   868                           
   869  02F7  3409               	retlw	09h
   870  02F8  3400               	retlw	0
   871  02F9  3400               	retlw	0
   872                           
   873  02FA  3401               	retlw	01h
   874  02FB  3401               	retlw	01h
   875  02FC  3400               	retlw	0
   876                           
   877  02FD  3408               	retlw	08h
   878  02FE  3401               	retlw	01h
   879  02FF  3400               	retlw	0
   880                           
   881  0300  3407               	retlw	07h
   882  0301  34E2               	retlw	0E2h
   883  0302  34AB               	retlw	0ABh
   884                           
   885  0303  340C               	retlw	0Ch
   886  0304  34AD               	retlw	low(_drain)
   887  0305  3404               	retlw	high(_drain)
   888                           
   889  0306  3403               	retlw	03h
   890  0307  3401               	retlw	01h
   891  0308  3400               	retlw	0
   892                           
   893  0309  3407               	retlw	07h
   894  030A  349E               	retlw	09Eh
   895  030B  3463               	retlw	063h
   896                           
   897  030C  3402               	retlw	02h
   898  030D  3401               	retlw	01h
   899  030E  3400               	retlw	0
   900                           
   901  030F  3407               	retlw	07h
   902  0310  34D5               	retlw	0D5h
   903  0311  3452               	retlw	052h
   904                           
   905  0312  3402               	retlw	02h
   906  0313  3402               	retlw	02h
   907  0314  3400               	retlw	0
   908                           
   909  0315  3401               	retlw	01h
   910  0316  3400               	retlw	0
   911  0317  3400               	retlw	0
   912                           
   913  0318  3406               	retlw	06h
   914  0319  340B               	retlw	0Bh
   915  031A  3400               	retlw	0
   916                           
   917  031B  3407               	retlw	07h
   918  031C  346C               	retlw	06Ch
   919  031D  3404               	retlw	04h
   920                           
   921  031E  3402               	retlw	02h
   922  031F  3400               	retlw	0
   923  0320  3400               	retlw	0
   924                           
   925  0321  3409               	retlw	09h
   926  0322  3400               	retlw	0
   927  0323  3400               	retlw	0
   928                           
   929  0324  3401               	retlw	01h
   930  0325  3402               	retlw	02h
   931  0326  3400               	retlw	0
   932                           
   933  0327  3407               	retlw	07h
   934  0328  34D1               	retlw	0D1h
   935  0329  3414               	retlw	014h
   936                           
   937  032A  3401               	retlw	01h
   938  032B  3401               	retlw	01h
   939  032C  3400               	retlw	0
   940                           
   941  032D  3407               	retlw	07h
   942  032E  34BA               	retlw	0BAh
   943  032F  34D8               	retlw	0D8h
   944                           
   945  0330  3408               	retlw	08h
   946  0331  3401               	retlw	01h
   947  0332  3400               	retlw	0
   948                           
   949  0333  3407               	retlw	07h
   950  0334  34C3               	retlw	0C3h
   951  0335  3498               	retlw	098h
   952                           
   953  0336  340C               	retlw	0Ch
   954  0337  3442               	retlw	low(_drain_dry)
   955  0338  3403               	retlw	high(_drain_dry)
   956                           
   957  0339  340C               	retlw	0Ch
   958  033A  3459               	retlw	low(_surface)
   959  033B  3404               	retlw	high(_surface)
   960                           
   961  033C  3401               	retlw	01h
   962  033D  3400               	retlw	0
   963  033E  3400               	retlw	0
   964                           
   965  033F  340E               	retlw	0Eh
   966  0340  3400               	retlw	0
   967  0341  3400               	retlw	0
   968                           
   969                           	global	_drain_dry
   970                           psect	stringtext
   971                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
   972                           	line	54
   973  0342                     _drain_dry:
   974  0342  3404               	retlw	04h
   975  0343  3401               	retlw	01h
   976  0344  3400               	retlw	0
   977                           
   978  0345  3401               	retlw	01h
   979  0346  3402               	retlw	02h
   980  0347  3400               	retlw	0
   981                           
   982  0348  3407               	retlw	07h
   983  0349  34FF               	retlw	0FFh
   984  034A  34FF               	retlw	0FFh
   985                           
   986  034B  3401               	retlw	01h
   987  034C  3401               	retlw	01h
   988  034D  3400               	retlw	0
   989                           
   990  034E  3407               	retlw	07h
   991  034F  345B               	retlw	05Bh
   992  0350  3427               	retlw	027h
   993                           
   994  0351  3401               	retlw	01h
   995  0352  3400               	retlw	0
   996  0353  3400               	retlw	0
   997                           
   998  0354  3406               	retlw	06h
   999  0355  340A               	retlw	0Ah
  1000  0356  3400               	retlw	0
  1001                           
  1002  0357  3409               	retlw	09h
  1003  0358  3400               	retlw	0
  1004  0359  3400               	retlw	0
  1005                           
  1006  035A  3401               	retlw	01h
  1007  035B  3401               	retlw	01h
  1008  035C  3400               	retlw	0
  1009                           
  1010  035D  3407               	retlw	07h
  1011  035E  34B6               	retlw	0B6h
  1012  035F  3462               	retlw	062h
  1013                           
  1014  0360  3401               	retlw	01h
  1015  0361  3402               	retlw	02h
  1016  0362  3400               	retlw	0
  1017                           
  1018  0363  3405               	retlw	05h
  1019  0364  3401               	retlw	01h
  1020  0365  3400               	retlw	0
  1021                           
  1022  0366  3407               	retlw	07h
  1023  0367  342C               	retlw	02Ch
  1024  0368  348A               	retlw	08Ah
  1025                           
  1026  0369  3401               	retlw	01h
  1027  036A  3401               	retlw	01h
  1028  036B  3400               	retlw	0
  1029                           
  1030  036C  3407               	retlw	07h
  1031  036D  34D9               	retlw	0D9h
  1032  036E  34D8               	retlw	0D8h
  1033                           
  1034  036F  3401               	retlw	01h
  1035  0370  3402               	retlw	02h
  1036  0371  3400               	retlw	0
  1037                           
  1038  0372  3407               	retlw	07h
  1039  0373  34CD               	retlw	0CDh
  1040  0374  3489               	retlw	089h
  1041                           
  1042  0375  3404               	retlw	04h
  1043  0376  3400               	retlw	0
  1044  0377  3400               	retlw	0
  1045                           
  1046  0378  3407               	retlw	07h
  1047  0379  34C4               	retlw	0C4h
  1048  037A  3406               	retlw	06h
  1049                           
  1050  037B  3401               	retlw	01h
  1051  037C  3401               	retlw	01h
  1052  037D  3400               	retlw	0
  1053                           
  1054  037E  3407               	retlw	07h
  1055  037F  34DA               	retlw	0DAh
  1056  0380  34D8               	retlw	0D8h
  1057                           
  1058  0381  3401               	retlw	01h
  1059  0382  3402               	retlw	02h
  1060  0383  3400               	retlw	0
  1061                           
  1062  0384  3407               	retlw	07h
  1063  0385  34ED               	retlw	0EDh
  1064  0386  3489               	retlw	089h
  1065                           
  1066  0387  3401               	retlw	01h
  1067  0388  3401               	retlw	01h
  1068  0389  3400               	retlw	0
  1069                           
  1070  038A  3407               	retlw	07h
  1071  038B  34DA               	retlw	0DAh
  1072  038C  34D8               	retlw	0D8h
  1073                           
  1074  038D  3401               	retlw	01h
  1075  038E  3402               	retlw	02h
  1076  038F  3400               	retlw	0
  1077                           
  1078  0390  3407               	retlw	07h
  1079  0391  34ED               	retlw	0EDh
  1080  0392  3489               	retlw	089h
  1081                           
  1082  0393  3401               	retlw	01h
  1083  0394  3401               	retlw	01h
  1084  0395  3400               	retlw	0
  1085                           
  1086  0396  3407               	retlw	07h
  1087  0397  3463               	retlw	063h
  1088  0398  34B1               	retlw	0B1h
  1089                           
  1090  0399  3401               	retlw	01h
  1091  039A  3402               	retlw	02h
  1092  039B  3400               	retlw	0
  1093                           
  1094  039C  3407               	retlw	07h
  1095  039D  344C               	retlw	04Ch
  1096  039E  348A               	retlw	08Ah
  1097                           
  1098  039F  3402               	retlw	02h
  1099  03A0  3402               	retlw	02h
  1100  03A1  3400               	retlw	0
  1101                           
  1102  03A2  3407               	retlw	07h
  1103  03A3  34FC               	retlw	0FCh
  1104  03A4  3426               	retlw	026h
  1105                           
  1106  03A5  3402               	retlw	02h
  1107  03A6  3400               	retlw	0
  1108  03A7  3400               	retlw	0
  1109                           
  1110  03A8  3401               	retlw	01h
  1111  03A9  3400               	retlw	0
  1112  03AA  3400               	retlw	0
  1113                           
  1114  03AB  3406               	retlw	06h
  1115  03AC  3403               	retlw	03h
  1116  03AD  3400               	retlw	0
  1117                           
  1118  03AE  3409               	retlw	09h
  1119  03AF  3400               	retlw	0
  1120  03B0  3400               	retlw	0
  1121                           
  1122  03B1  3401               	retlw	01h
  1123  03B2  3402               	retlw	02h
  1124  03B3  3400               	retlw	0
  1125                           
  1126  03B4  3407               	retlw	07h
  1127  03B5  3410               	retlw	010h
  1128  03B6  3415               	retlw	015h
  1129                           
  1130  03B7  3402               	retlw	02h
  1131  03B8  3401               	retlw	01h
  1132  03B9  3400               	retlw	0
  1133                           
  1134  03BA  3407               	retlw	07h
  1135  03BB  343F               	retlw	03Fh
  1136  03BC  3428               	retlw	028h
  1137                           
  1138  03BD  3402               	retlw	02h
  1139  03BE  3400               	retlw	0
  1140  03BF  3400               	retlw	0
  1141                           
  1142  03C0  3407               	retlw	07h
  1143  03C1  34AD               	retlw	0ADh
  1144  03C2  3489               	retlw	089h
  1145                           
  1146  03C3  3401               	retlw	01h
  1147  03C4  3401               	retlw	01h
  1148  03C5  3400               	retlw	0
  1149                           
  1150  03C6  3407               	retlw	07h
  1151  03C7  3463               	retlw	063h
  1152  03C8  34B1               	retlw	0B1h
  1153                           
  1154  03C9  3401               	retlw	01h
  1155  03CA  3402               	retlw	02h
  1156  03CB  3400               	retlw	0
  1157                           
  1158  03CC  3407               	retlw	07h
  1159  03CD  34ED               	retlw	0EDh
  1160  03CE  3489               	retlw	089h
  1161                           
  1162  03CF  3401               	retlw	01h
  1163  03D0  3401               	retlw	01h
  1164  03D1  3400               	retlw	0
  1165                           
  1166  03D2  3407               	retlw	07h
  1167  03D3  3463               	retlw	063h
  1168  03D4  34B1               	retlw	0B1h
  1169                           
  1170  03D5  3401               	retlw	01h
  1171  03D6  3402               	retlw	02h
  1172  03D7  3400               	retlw	0
  1173                           
  1174  03D8  3407               	retlw	07h
  1175  03D9  344C               	retlw	04Ch
  1176  03DA  348A               	retlw	08Ah
  1177                           
  1178  03DB  3402               	retlw	02h
  1179  03DC  3402               	retlw	02h
  1180  03DD  3400               	retlw	0
  1181                           
  1182  03DE  3407               	retlw	07h
  1183  03DF  348C               	retlw	08Ch
  1184  03E0  3428               	retlw	028h
  1185                           
  1186  03E1  3402               	retlw	02h
  1187  03E2  3400               	retlw	0
  1188  03E3  3400               	retlw	0
  1189                           
  1190  03E4  3401               	retlw	01h
  1191  03E5  3400               	retlw	0
  1192  03E6  3400               	retlw	0
  1193                           
  1194  03E7  3406               	retlw	06h
  1195  03E8  3403               	retlw	03h
  1196  03E9  3400               	retlw	0
  1197                           
  1198  03EA  3409               	retlw	09h
  1199  03EB  3400               	retlw	0
  1200  03EC  3400               	retlw	0
  1201                           
  1202  03ED  3401               	retlw	01h
  1203  03EE  3402               	retlw	02h
  1204  03EF  3400               	retlw	0
  1205                           
  1206  03F0  3407               	retlw	07h
  1207  03F1  3428               	retlw	028h
  1208  03F2  3411               	retlw	011h
  1209                           
  1210  03F3  3402               	retlw	02h
  1211  03F4  3401               	retlw	01h
  1212  03F5  3400               	retlw	0
  1213                           
  1214  03F6  3407               	retlw	07h
  1215  03F7  3433               	retlw	033h
  1216  03F8  342A               	retlw	02Ah
  1217                           
  1218  03F9  3402               	retlw	02h
  1219  03FA  3400               	retlw	0
  1220  03FB  3400               	retlw	0
  1221                           
  1222  03FC  3407               	retlw	07h
  1223  03FD  34AD               	retlw	0ADh
  1224  03FE  3489               	retlw	089h
  1225                           
  1226  03FF  3401               	retlw	01h
  1227  0400  3401               	retlw	01h
  1228  0401  3400               	retlw	0
  1229                           
  1230  0402  3407               	retlw	07h
  1231  0403  34ED               	retlw	0EDh
  1232  0404  3489               	retlw	089h
  1233                           
  1234  0405  3401               	retlw	01h
  1235  0406  3402               	retlw	02h
  1236  0407  3400               	retlw	0
  1237                           
  1238  0408  3407               	retlw	07h
  1239  0409  34ED               	retlw	0EDh
  1240  040A  3489               	retlw	089h
  1241                           
  1242  040B  3401               	retlw	01h
  1243  040C  3401               	retlw	01h
  1244  040D  3400               	retlw	0
  1245                           
  1246  040E  3407               	retlw	07h
  1247  040F  34EC               	retlw	0ECh
  1248  0410  3489               	retlw	089h
  1249                           
  1250  0411  3401               	retlw	01h
  1251  0412  3402               	retlw	02h
  1252  0413  3400               	retlw	0
  1253                           
  1254  0414  3407               	retlw	07h
  1255  0415  344C               	retlw	04Ch
  1256  0416  348A               	retlw	08Ah
  1257                           
  1258  0417  3402               	retlw	02h
  1259  0418  3402               	retlw	02h
  1260  0419  3400               	retlw	0
  1261                           
  1262  041A  3407               	retlw	07h
  1263  041B  34EF               	retlw	0EFh
  1264  041C  342C               	retlw	02Ch
  1265                           
  1266  041D  3402               	retlw	02h
  1267  041E  3400               	retlw	0
  1268  041F  3400               	retlw	0
  1269                           
  1270  0420  3407               	retlw	07h
  1271  0421  3479               	retlw	079h
  1272  0422  3408               	retlw	08h
  1273                           
  1274  0423  3402               	retlw	02h
  1275  0424  3401               	retlw	01h
  1276  0425  3400               	retlw	0
  1277                           
  1278  0426  3407               	retlw	07h
  1279  0427  34B7               	retlw	0B7h
  1280  0428  342D               	retlw	02Dh
  1281                           
  1282  0429  3402               	retlw	02h
  1283  042A  3400               	retlw	0
  1284  042B  3400               	retlw	0
  1285                           
  1286  042C  3407               	retlw	07h
  1287  042D  3423               	retlw	023h
  1288  042E  34B1               	retlw	0B1h
  1289                           
  1290  042F  3401               	retlw	01h
  1291  0430  3401               	retlw	01h
  1292  0431  3400               	retlw	0
  1293                           
  1294  0432  3407               	retlw	07h
  1295  0433  34ED               	retlw	0EDh
  1296  0434  3489               	retlw	089h
  1297                           
  1298  0435  3401               	retlw	01h
  1299  0436  3402               	retlw	02h
  1300  0437  3400               	retlw	0
  1301                           
  1302  0438  3407               	retlw	07h
  1303  0439  3463               	retlw	063h
  1304  043A  34B1               	retlw	0B1h
  1305                           
  1306  043B  3401               	retlw	01h
  1307  043C  3401               	retlw	01h
  1308  043D  3400               	retlw	0
  1309                           
  1310  043E  3407               	retlw	07h
  1311  043F  34ED               	retlw	0EDh
  1312  0440  3489               	retlw	089h
  1313                           
  1314  0441  3401               	retlw	01h
  1315  0442  3402               	retlw	02h
  1316  0443  3400               	retlw	0
  1317                           
  1318  0444  3407               	retlw	07h
  1319  0445  3463               	retlw	063h
  1320  0446  34B1               	retlw	0B1h
  1321                           
  1322  0447  3401               	retlw	01h
  1323  0448  3401               	retlw	01h
  1324  0449  3400               	retlw	0
  1325                           
  1326  044A  3407               	retlw	07h
  1327  044B  34EC               	retlw	0ECh
  1328  044C  3489               	retlw	089h
  1329                           
  1330  044D  3401               	retlw	01h
  1331  044E  3402               	retlw	02h
  1332  044F  3400               	retlw	0
  1333                           
  1334  0450  3407               	retlw	07h
  1335  0451  3463               	retlw	063h
  1336  0452  34B1               	retlw	0B1h
  1337                           
  1338  0453  3401               	retlw	01h
  1339  0454  3401               	retlw	01h
  1340  0455  3400               	retlw	0
  1341                           
  1342  0456  340D               	retlw	0Dh
  1343  0457  3400               	retlw	0
  1344  0458  3400               	retlw	0
  1345                           
  1346                           	global	_surface
  1347                           psect	stringtext
  1348                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1349                           	line	150
  1350  0459                     _surface:
  1351  0459  3407               	retlw	07h
  1352  045A  344C               	retlw	04Ch
  1353  045B  348A               	retlw	08Ah
  1354                           
  1355  045C  3402               	retlw	02h
  1356  045D  3402               	retlw	02h
  1357  045E  3400               	retlw	0
  1358                           
  1359  045F  3407               	retlw	07h
  1360  0460  342C               	retlw	02Ch
  1361  0461  3401               	retlw	01h
  1362                           
  1363  0462  3402               	retlw	02h
  1364  0463  3400               	retlw	0
  1365  0464  3400               	retlw	0
  1366                           
  1367  0465  3407               	retlw	07h
  1368  0466  34AB               	retlw	0ABh
  1369  0467  342F               	retlw	02Fh
  1370                           
  1371  0468  3402               	retlw	02h
  1372  0469  3402               	retlw	02h
  1373  046A  3400               	retlw	0
  1374                           
  1375  046B  3407               	retlw	07h
  1376  046C  342C               	retlw	02Ch
  1377  046D  3401               	retlw	01h
  1378                           
  1379  046E  3402               	retlw	02h
  1380  046F  3400               	retlw	0
  1381  0470  3400               	retlw	0
  1382                           
  1383  0471  3407               	retlw	07h
  1384  0472  34AB               	retlw	0ABh
  1385  0473  342F               	retlw	02Fh
  1386                           
  1387  0474  3402               	retlw	02h
  1388  0475  3402               	retlw	02h
  1389  0476  3400               	retlw	0
  1390                           
  1391  0477  3407               	retlw	07h
  1392  0478  342C               	retlw	02Ch
  1393  0479  3401               	retlw	01h
  1394                           
  1395  047A  3402               	retlw	02h
  1396  047B  3400               	retlw	0
  1397  047C  3400               	retlw	0
  1398                           
  1399  047D  3407               	retlw	07h
  1400  047E  34DB               	retlw	0DBh
  1401  047F  3427               	retlw	027h
  1402                           
  1403  0480  3402               	retlw	02h
  1404  0481  3402               	retlw	02h
  1405  0482  3400               	retlw	0
  1406                           
  1407  0483  3407               	retlw	07h
  1408  0484  342C               	retlw	02Ch
  1409  0485  3401               	retlw	01h
  1410                           
  1411  0486  3402               	retlw	02h
  1412  0487  3400               	retlw	0
  1413  0488  3400               	retlw	0
  1414                           
  1415  0489  3407               	retlw	07h
  1416  048A  34DA               	retlw	0DAh
  1417  048B  3427               	retlw	027h
  1418                           
  1419  048C  3402               	retlw	02h
  1420  048D  3402               	retlw	02h
  1421  048E  3400               	retlw	0
  1422                           
  1423  048F  3407               	retlw	07h
  1424  0490  34D2               	retlw	0D2h
  1425  0491  3423               	retlw	023h
  1426                           
  1427  0492  3402               	retlw	02h
  1428  0493  3401               	retlw	01h
  1429  0494  3400               	retlw	0
  1430                           
  1431  0495  3407               	retlw	07h
  1432  0496  344A               	retlw	04Ah
  1433  0497  3419               	retlw	019h
  1434                           
  1435  0498  3405               	retlw	05h
  1436  0499  3400               	retlw	0
  1437  049A  3400               	retlw	0
  1438                           
  1439  049B  3402               	retlw	02h
  1440  049C  3402               	retlw	02h
  1441  049D  3400               	retlw	0
  1442                           
  1443  049E  3407               	retlw	07h
  1444  049F  345C               	retlw	05Ch
  1445  04A0  3447               	retlw	047h
  1446                           
  1447  04A1  3402               	retlw	02h
  1448  04A2  3401               	retlw	01h
  1449  04A3  3400               	retlw	0
  1450                           
  1451  04A4  3407               	retlw	07h
  1452  04A5  3410               	retlw	010h
  1453  04A6  340B               	retlw	0Bh
  1454                           
  1455  04A7  3402               	retlw	02h
  1456  04A8  3400               	retlw	0
  1457  04A9  3400               	retlw	0
  1458                           
  1459  04AA  340D               	retlw	0Dh
  1460  04AB  3400               	retlw	0
  1461  04AC  3400               	retlw	0
  1462                           
  1463                           	global	_drain
  1464                           psect	stringtext
  1465                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1466                           	line	30
  1467  04AD                     _drain:
  1468  04AD  3404               	retlw	04h
  1469  04AE  3401               	retlw	01h
  1470  04AF  3400               	retlw	0
  1471                           
  1472  04B0  3407               	retlw	07h
  1473  04B1  3476               	retlw	076h
  1474  04B2  3462               	retlw	062h
  1475                           
  1476  04B3  3404               	retlw	04h
  1477  04B4  3400               	retlw	0
  1478  04B5  3400               	retlw	0
  1479                           
  1480  04B6  3407               	retlw	07h
  1481  04B7  34FF               	retlw	0FFh
  1482  04B8  34FF               	retlw	0FFh
  1483                           
  1484  04B9  3407               	retlw	07h
  1485  04BA  34C7               	retlw	0C7h
  1486  04BB  3427               	retlw	027h
  1487                           
  1488  04BC  3404               	retlw	04h
  1489  04BD  3401               	retlw	01h
  1490  04BE  3400               	retlw	0
  1491                           
  1492  04BF  3407               	retlw	07h
  1493  04C0  348E               	retlw	08Eh
  1494  04C1  345E               	retlw	05Eh
  1495                           
  1496  04C2  3404               	retlw	04h
  1497  04C3  3400               	retlw	0
  1498  04C4  3400               	retlw	0
  1499                           
  1500  04C5  3407               	retlw	07h
  1501  04C6  340A               	retlw	0Ah
  1502  04C7  3420               	retlw	020h
  1503                           
  1504  04C8  3404               	retlw	04h
  1505  04C9  3401               	retlw	01h
  1506  04CA  3400               	retlw	0
  1507                           
  1508  04CB  3407               	retlw	07h
  1509  04CC  348E               	retlw	08Eh
  1510  04CD  345E               	retlw	05Eh
  1511                           
  1512  04CE  3404               	retlw	04h
  1513  04CF  3400               	retlw	0
  1514  04D0  3400               	retlw	0
  1515                           
  1516  04D1  3407               	retlw	07h
  1517  04D2  340A               	retlw	0Ah
  1518  04D3  3420               	retlw	020h
  1519                           
  1520  04D4  3404               	retlw	04h
  1521  04D5  3401               	retlw	01h
  1522  04D6  3400               	retlw	0
  1523                           
  1524  04D7  3407               	retlw	07h
  1525  04D8  34FF               	retlw	0FFh
  1526  04D9  34FF               	retlw	0FFh
  1527                           
  1528  04DA  3407               	retlw	07h
  1529  04DB  34C7               	retlw	0C7h
  1530  04DC  3427               	retlw	027h
  1531                           
  1532  04DD  3404               	retlw	04h
  1533  04DE  3400               	retlw	0
  1534  04DF  3400               	retlw	0
  1535                           
  1536  04E0  3401               	retlw	01h
  1537  04E1  3400               	retlw	0
  1538  04E2  3400               	retlw	0
  1539                           
  1540  04E3  3408               	retlw	08h
  1541  04E4  3400               	retlw	0
  1542  04E5  3400               	retlw	0
  1543                           
  1544  04E6  3401               	retlw	01h
  1545  04E7  3401               	retlw	01h
  1546  04E8  3400               	retlw	0
  1547                           
  1548  04E9  340D               	retlw	0Dh
  1549  04EA  3400               	retlw	0
  1550  04EB  3400               	retlw	0
  1551                           
  1552                           	global	_cleanupprogram
  1553                           psect	stringtext
  1554                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
  1555                           	line	181
  1556  04EC                     _cleanupprogram:
  1557  04EC  3400               	retlw	0
  1558  04ED  340E               	retlw	0Eh
  1559  04EE  3406               	retlw	06h
  1560                           
  1561  04EF  3401               	retlw	01h
  1562  04F0  3401               	retlw	01h
  1563  04F1  3400               	retlw	0
  1564                           
  1565  04F2  3402               	retlw	02h
  1566  04F3  3401               	retlw	01h
  1567  04F4  3400               	retlw	0
  1568                           
  1569  04F5  3407               	retlw	07h
  1570  04F6  3409               	retlw	09h
  1571  04F7  3455               	retlw	055h
  1572                           
  1573  04F8  3402               	retlw	02h
  1574  04F9  3402               	retlw	02h
  1575  04FA  3400               	retlw	0
  1576                           
  1577  04FB  3407               	retlw	07h
  1578  04FC  34A4               	retlw	0A4h
  1579  04FD  3403               	retlw	03h
  1580                           
  1581  04FE  3402               	retlw	02h
  1582  04FF  3400               	retlw	0
  1583  0500  3400               	retlw	0
  1584                           
  1585  0501  340A               	retlw	0Ah
  1586  0502  3401               	retlw	01h
  1587  0503  3400               	retlw	0
  1588                           
  1589  0504  340C               	retlw	0Ch
  1590  0505  3442               	retlw	low(_drain_dry)
  1591  0506  3403               	retlw	high(_drain_dry)
  1592                           
  1593  0507  340C               	retlw	0Ch
  1594  0508  3459               	retlw	low(_surface)
  1595  0509  3404               	retlw	high(_surface)
  1596                           
  1597  050A  3401               	retlw	01h
  1598  050B  3400               	retlw	0
  1599  050C  3400               	retlw	0
  1600                           
  1601  050D  340E               	retlw	0Eh
  1602  050E  3400               	retlw	0
  1603  050F  3400               	retlw	0
  1604                           
  1605                           	global	_commands
  1606                           psect	stringtext
  1607                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  1608                           	line	53
  1609  0510                     _commands:
  1610  0510  343F               	retlw	03Fh
  1611  0511  3400               	retlw	0
  1612  0512  3400               	retlw	0
  1613  0513  3400               	retlw	0
  1614  0514  3400               	retlw	0
  1615  0515  3400               	retlw	0
  1616  0516  3400               	retlw	0
  1617  0517  3400               	retlw	0
  1618  0518  3401               	retlw	(fp__help-fpbase)&0ffh
  1619  0519  3468               	retlw	068h
  1620  051A  3465               	retlw	065h
  1621  051B  346C               	retlw	06Ch
  1622  051C  3470               	retlw	070h
  1623  051D  3400               	retlw	0
  1624  051E  3400               	retlw	0
  1625  051F  3400               	retlw	0
  1626  0520  3400               	retlw	0
  1627  0521  3401               	retlw	(fp__help-fpbase)&0ffh
  1628  0522  3465               	retlw	065h
  1629  0523  3463               	retlw	063h
  1630  0524  3468               	retlw	068h
  1631  0525  346F               	retlw	06Fh
  1632  0526  3400               	retlw	0
  1633  0527  3400               	retlw	0
  1634  0528  3400               	retlw	0
  1635  0529  3400               	retlw	0
  1636  052A  3403               	retlw	(fp__echo-fpbase)&0ffh
  1637  052B  3400               	retlw	0
  1638  052C  3400               	retlw	0
  1639  052D  3400               	retlw	0
  1640  052E  3400               	retlw	0
  1641  052F  3400               	retlw	0
  1642  0530  3400               	retlw	0
  1643  0531  3400               	retlw	0
  1644  0532  3400               	retlw	0
  1645  0533  3400               	retlw	0
  1646                           	global	_dpowers
  1647                           	global	_hexpowers
  1648                           	global	_washprogram
  1649                           	global	_drain_dry
  1650                           	global	_surface
  1651                           	global	_drain
  1652                           	global	_cleanupprogram
  1653                           	global	_commands
  1654                           	global	_auto_mode
  1655                           	global	_error_nr
  1656                           	global	_hysteresis
  1657                           	global	_ins_state
  1658                           	global	_state
  1659                           	global	proc_char@curcolumn
  1660                           	global	_detected
  1661                           	global	_detected_dbc
  1662                           	global	_detected_old
  1663                           	global	_filling
  1664                           	global	_ledalwayson
  1665                           	global	_wet_program
  1666                           	global	litterlanguage_pause@context
  1667                           	global	_rx
  1668                           	global	_uptime
  1669                           	global	water_work@old_reflectionquality
  1670                           	global	_cat_detected
  1671                           	global	_cat_present
  1672                           	global	_detected_cur
  1673                           	global	_echoed
  1674                           	global	_error_drain
  1675                           	global	_error_execution
  1676                           	global	_error_fill
  1677                           	global	_error_flood
  1678                           	global	_error_overheat
  1679                           	global	_full_wash
  1680                           	global	_heat_old
  1681                           	global	_locked
  1682                           	global	_longhandled
  1683                           	global	_paused
  1684                           	global	_pinging
  1685                           	global	_currenttime
  1686                           	global	_overflows
  1687                           	global	_ins_address
  1688                           	global	exe_instruction@ret_address
  1689                           	global	water_work@cur_reflectionquality
  1690                           	global	_PORTB_old
  1691                           	global	_buttonmask_cum
  1692                           	global	_buttonmask_cur
  1693                           	global	_buttonmask_evt
  1694                           	global	_interval
  1695                           	global	_panel_mode
  1696                           	global	_prg_source
  1697                           	global	catgenie120@PORTB_old
  1698                           	global	water@state
  1699                           	global	_cur_instruction
  1700                           	global	_ins_pointer
  1701                           	global	_cartridgetimeout
  1702                           	global	_cattimer
  1703                           	global	_second
  1704                           	global	_sensortimer
  1705                           	global	_linebuffer
  1706                           	global	_pingtime
  1707                           	global	_beep_bits
  1708                           	global	___resetbits
  1709  0020                     ___resetbits	set	32
  1710                           	DABS	1,32,1	;___resetbits
  1711                           
  1712                           	global	___powerdown
  1713  0103                     ___powerdown	set	259
  1714                           	DABS	1,32,1	;___powerdown
  1715                           
  1716                           	global	___timeout
  1717  0104                     ___timeout	set	260
  1718                           	DABS	1,32,1	;___timeout
  1719                           
  1720                           	global	_PORTA
  1721  000C                     _PORTA	set	12
  1722                           	global	_PORTC
  1723  000E                     _PORTC	set	14
  1724                           	global	_PORTD
  1725  000F                     _PORTD	set	15
  1726                           	global	_PORTE
  1727  0010                     _PORTE	set	16
  1728                           	global	_PR2
  1729  001B                     _PR2	set	27
  1730                           	global	_T2CON
  1731  001C                     _T2CON	set	28
  1732                           	global	_TMR1H
  1733  0017                     _TMR1H	set	23
  1734                           	global	_TMR1L
  1735  0016                     _TMR1L	set	22
  1736                           	global	_CARRY
  1737  0018                     _CARRY	set	24
  1738                           	global	_GIE
  1739  005F                     _GIE	set	95
  1740                           	global	_IOCIE
  1741  005B                     _IOCIE	set	91
  1742                           	global	_IOCIF
  1743  0058                     _IOCIF	set	88
  1744                           	global	_PEIE
  1745  005E                     _PEIE	set	94
  1746                           	global	_RCIF
  1747  008D                     _RCIF	set	141
  1748                           	global	_T1CKPS0
  1749  00C4                     _T1CKPS0	set	196
  1750                           	global	_T1CKPS1
  1751  00C5                     _T1CKPS1	set	197
  1752                           	global	_T1OSCEN
  1753  00C3                     _T1OSCEN	set	195
  1754                           	global	_TMR1CS0
  1755  00C6                     _TMR1CS0	set	198
  1756                           	global	_TMR1CS1
  1757  00C7                     _TMR1CS1	set	199
  1758                           	global	_TMR1IF
  1759  0088                     _TMR1IF	set	136
  1760                           	global	_TMR1ON
  1761  00C0                     _TMR1ON	set	192
  1762                           	global	_TMR2IF
  1763  0089                     _TMR2IF	set	137
  1764                           	global	_TMR2ON
  1765  00E2                     _TMR2ON	set	226
  1766                           	global	_TXIF
  1767  008C                     _TXIF	set	140
  1768                           	global	_nT1SYNC
  1769  00C2                     _nT1SYNC	set	194
  1770                           	global	_ADRES
  1771  009B                     _ADRES	set	155
  1772                           	global	_ADCON0bits
  1773  009D                     _ADCON0bits	set	157
  1774                           	global	_ADCON1bits
  1775  009E                     _ADCON1bits	set	158
  1776                           	global	_TRISA
  1777  008C                     _TRISA	set	140
  1778                           	global	_TRISB
  1779  008D                     _TRISB	set	141
  1780                           	global	_TRISC
  1781  008E                     _TRISC	set	142
  1782                           	global	_TRISD
  1783  008F                     _TRISD	set	143
  1784                           	global	_TRISE
  1785  0090                     _TRISE	set	144
  1786                           	global	_RCIE
  1787  048D                     _RCIE	set	1165
  1788                           	global	_TMR1IE
  1789  0488                     _TMR1IE	set	1160
  1790                           	global	_TMR2IE
  1791  0489                     _TMR2IE	set	1161
  1792                           	global	_TXIE
  1793  048C                     _TXIE	set	1164
  1794                           	global	_nBOR
  1795  04B0                     _nBOR	set	1200
  1796                           	global	_nPOR
  1797  04B1                     _nPOR	set	1201
  1798                           	global	_nWPUEN
  1799  04AF                     _nWPUEN	set	1199
  1800                           	global	_LATB
  1801  010D                     _LATB	set	269
  1802                           	global	_LATD
  1803  010F                     _LATD	set	271
  1804                           	global	_EEADR
  1805  0191                     _EEADR	set	401
  1806                           	global	_ANSELA
  1807  018C                     _ANSELA	set	396
  1808                           	global	_ANSELB
  1809  018D                     _ANSELB	set	397
  1810                           	global	_ANSELD
  1811  018F                     _ANSELD	set	399
  1812                           	global	_ANSELE
  1813  0190                     _ANSELE	set	400
  1814                           	global	_EECON1
  1815  0195                     _EECON1	set	405
  1816                           	global	_EECON2
  1817  0196                     _EECON2	set	406
  1818                           	global	_EEDATA
  1819  0193                     _EEDATA	set	403
  1820                           	global	_RCREG
  1821  0199                     _RCREG	set	409
  1822                           	global	_SPBRG
  1823  019B                     _SPBRG	set	411
  1824                           	global	_SPBRGH
  1825  019C                     _SPBRGH	set	412
  1826                           	global	_TXREG
  1827  019A                     _TXREG	set	410
  1828                           	global	_BRG16
  1829  0CFB                     _BRG16	set	3323
  1830                           	global	_BRGH
  1831  0CF2                     _BRGH	set	3314
  1832                           	global	_CREN
  1833  0CEC                     _CREN	set	3308
  1834                           	global	_CSRC
  1835  0CF7                     _CSRC	set	3319
  1836                           	global	_FERR
  1837  0CEA                     _FERR	set	3306
  1838                           	global	_OERR
  1839  0CE9                     _OERR	set	3305
  1840                           	global	_RD
  1841  0CA8                     _RD	set	3240
  1842                           	global	_RX9
  1843  0CEE                     _RX9	set	3310
  1844                           	global	_SPEN
  1845  0CEF                     _SPEN	set	3311
  1846                           	global	_SYNC
  1847  0CF4                     _SYNC	set	3316
  1848                           	global	_TX9
  1849  0CF6                     _TX9	set	3318
  1850                           	global	_TXEN
  1851  0CF5                     _TXEN	set	3317
  1852                           	global	_WR
  1853  0CA9                     _WR	set	3241
  1854                           	global	_WREN
  1855  0CAA                     _WREN	set	3242
  1856                           	global	_WPUB
  1857  020D                     _WPUB	set	525
  1858                           	global	_WPUE
  1859  0210                     _WPUE	set	528
  1860                           	global	_CCP1CON
  1861  0293                     _CCP1CON	set	659
  1862                           	global	_CCPR1L
  1863  0291                     _CCPR1L	set	657
  1864                           	global	_IOCBF
  1865  0396                     _IOCBF	set	918
  1866                           	global	_IOCBN
  1867  0395                     _IOCBN	set	917
  1868                           	global	_IOCBP
  1869  0394                     _IOCBP	set	916
  1870                           	global	_PORTB
  1871  000D                     _PORTB	set	13
  1872                           	global	_LATA
  1873  010C                     _LATA	set	268
  1874                           	global	_LATC
  1875  010E                     _LATC	set	270
  1876                           	global	_LATE
  1877  0110                     _LATE	set	272
  1878                           	
  1879  0534                     STR_82:	
  1880  0534  3449               	retlw	73	;'I'
  1881  0535  344E               	retlw	78	;'N'
  1882  0536  3453               	retlw	83	;'S'
  1883  0537  345F               	retlw	95	;'_'
  1884  0538  3441               	retlw	65	;'A'
  1885  0539  3455               	retlw	85	;'U'
  1886  053A  3454               	retlw	84	;'T'
  1887  053B  344F               	retlw	79	;'O'
  1888  053C  3444               	retlw	68	;'D'
  1889  053D  344F               	retlw	79	;'O'
  1890  053E  3453               	retlw	83	;'S'
  1891  053F  3445               	retlw	69	;'E'
  1892  0540  342C               	retlw	44	;','
  1893  0541  3420               	retlw	32	;' '
  1894  0542  3425               	retlw	37	;'%'
  1895  0543  3475               	retlw	117	;'u'
  1896  0544  342E               	retlw	46	;'.'
  1897  0545  3425               	retlw	37	;'%'
  1898  0546  3475               	retlw	117	;'u'
  1899  0547  346D               	retlw	109	;'m'
  1900  0548  346C               	retlw	108	;'l'
  1901  0549  3425               	retlw	37	;'%'
  1902  054A  3473               	retlw	115	;'s'
  1903  054B  3400               	retlw	0
  1904                           psect	stringtext
  1905                           	
  1906  054C                     STR_105:	
  1907  054C  3455               	retlw	85	;'U'
  1908  054D  346E               	retlw	110	;'n'
  1909  054E  346B               	retlw	107	;'k'
  1910  054F  346E               	retlw	110	;'n'
  1911  0550  346F               	retlw	111	;'o'
  1912  0551  3477               	retlw	119	;'w'
  1913  0552  346E               	retlw	110	;'n'
  1914  0553  3420               	retlw	32	;' '
  1915  0554  3463               	retlw	99	;'c'
  1916  0555  346F               	retlw	111	;'o'
  1917  0556  346D               	retlw	109	;'m'
  1918  0557  346D               	retlw	109	;'m'
  1919  0558  3461               	retlw	97	;'a'
  1920  0559  346E               	retlw	110	;'n'
  1921  055A  3464               	retlw	100	;'d'
  1922  055B  3420               	retlw	32	;' '
  1923  055C  3427               	retlw	39	;'''
  1924  055D  3425               	retlw	37	;'%'
  1925  055E  3473               	retlw	115	;'s'
  1926  055F  3427               	retlw	39	;'''
  1927  0560  340A               	retlw	10
  1928  0561  3400               	retlw	0
  1929                           psect	stringtext
  1930                           	
  1931  0562                     STR_88:	
  1932  0562  3449               	retlw	73	;'I'
  1933  0563  344E               	retlw	78	;'N'
  1934  0564  3453               	retlw	83	;'S'
  1935  0565  345F               	retlw	95	;'_'
  1936  0566  3453               	retlw	83	;'S'
  1937  0567  3454               	retlw	84	;'T'
  1938  0568  3441               	retlw	65	;'A'
  1939  0569  3452               	retlw	82	;'R'
  1940  056A  3454               	retlw	84	;'T'
  1941  056B  342C               	retlw	44	;','
  1942  056C  3420               	retlw	32	;' '
  1943  056D  3475               	retlw	117	;'u'
  1944  056E  346E               	retlw	110	;'n'
  1945  056F  3465               	retlw	101	;'e'
  1946  0570  3478               	retlw	120	;'x'
  1947  0571  3470               	retlw	112	;'p'
  1948  0572  3465               	retlw	101	;'e'
  1949  0573  3463               	retlw	99	;'c'
  1950  0574  3474               	retlw	116	;'t'
  1951  0575  3465               	retlw	101	;'e'
  1952  0576  3464               	retlw	100	;'d'
  1953  0577  3400               	retlw	0
  1954                           psect	stringtext
  1955                           	
  1956  0578                     STR_24:	
  1957  0578  3453               	retlw	83	;'S'
  1958  0579  3474               	retlw	116	;'t'
  1959  057A  3461               	retlw	97	;'a'
  1960  057B  3472               	retlw	114	;'r'
  1961  057C  3474               	retlw	116	;'t'
  1962  057D  3469               	retlw	105	;'i'
  1963  057E  346E               	retlw	110	;'n'
  1964  057F  3467               	retlw	103	;'g'
  1965  0580  3420               	retlw	32	;' '
  1966  0581  3425               	retlw	37	;'%'
  1967  0582  3473               	retlw	115	;'s'
  1968  0583  3420               	retlw	32	;' '
  1969  0584  3470               	retlw	112	;'p'
  1970  0585  3472               	retlw	114	;'r'
  1971  0586  346F               	retlw	111	;'o'
  1972  0587  3467               	retlw	103	;'g'
  1973  0588  3472               	retlw	114	;'r'
  1974  0589  3461               	retlw	97	;'a'
  1975  058A  346D               	retlw	109	;'m'
  1976  058B  340A               	retlw	10
  1977  058C  3400               	retlw	0
  1978                           psect	stringtext
  1979                           	
  1980  058D                     STR_36:	
  1981  058D  3453               	retlw	83	;'S'
  1982  058E  3474               	retlw	116	;'t'
  1983  058F  3461               	retlw	97	;'a'
  1984  0590  3472               	retlw	114	;'r'
  1985  0591  3474               	retlw	116	;'t'
  1986  0592  3469               	retlw	105	;'i'
  1987  0593  346E               	retlw	110	;'n'
  1988  0594  3467               	retlw	103	;'g'
  1989  0595  3420               	retlw	32	;' '
  1990  0596  3425               	retlw	37	;'%'
  1991  0597  3473               	retlw	115	;'s'
  1992  0598  3420               	retlw	32	;' '
  1993  0599  3463               	retlw	99	;'c'
  1994  059A  346C               	retlw	108	;'l'
  1995  059B  3465               	retlw	101	;'e'
  1996  059C  3461               	retlw	97	;'a'
  1997  059D  346E               	retlw	110	;'n'
  1998  059E  3475               	retlw	117	;'u'
  1999  059F  3470               	retlw	112	;'p'
  2000  05A0  340A               	retlw	10
  2001  05A1  3400               	retlw	0
  2002                           psect	stringtext
  2003                           	
  2004  05A2                     STR_91:	
  2005  05A2  3441               	retlw	65	;'A'
  2006  05A3  3475               	retlw	117	;'u'
  2007  05A4  3474               	retlw	116	;'t'
  2008  05A5  346F               	retlw	111	;'o'
  2009  05A6  3474               	retlw	116	;'t'
  2010  05A7  3469               	retlw	105	;'i'
  2011  05A8  346D               	retlw	109	;'m'
  2012  05A9  3465               	retlw	101	;'e'
  2013  05AA  3472               	retlw	114	;'r'
  2014  05AB  3420               	retlw	32	;' '
  2015  05AC  3465               	retlw	101	;'e'
  2016  05AD  3478               	retlw	120	;'x'
  2017  05AE  3470               	retlw	112	;'p'
  2018  05AF  3469               	retlw	105	;'i'
  2019  05B0  3472               	retlw	114	;'r'
  2020  05B1  3465               	retlw	101	;'e'
  2021  05B2  3464               	retlw	100	;'d'
  2022  05B3  343A               	retlw	58	;':'
  2023  05B4  3420               	retlw	32	;' '
  2024  05B5  3400               	retlw	0
  2025                           psect	stringtext
  2026                           	
  2027  05B6                     STR_14:	
  2028  05B6  3457               	retlw	87	;'W'
  2029  05B7  3465               	retlw	101	;'e'
  2030  05B8  3474               	retlw	116	;'t'
  2031  05B9  3420               	retlw	32	;' '
  2032  05BA  3463               	retlw	99	;'c'
  2033  05BB  346C               	retlw	108	;'l'
  2034  05BC  3465               	retlw	101	;'e'
  2035  05BD  3461               	retlw	97	;'a'
  2036  05BE  346E               	retlw	110	;'n'
  2037  05BF  3475               	retlw	117	;'u'
  2038  05C0  3470               	retlw	112	;'p'
  2039  05C1  3420               	retlw	32	;' '
  2040  05C2  3466               	retlw	102	;'f'
  2041  05C3  346F               	retlw	111	;'o'
  2042  05C4  3472               	retlw	114	;'r'
  2043  05C5  3463               	retlw	99	;'c'
  2044  05C6  3465               	retlw	101	;'e'
  2045  05C7  3464               	retlw	100	;'d'
  2046  05C8  340A               	retlw	10
  2047  05C9  3400               	retlw	0
  2048                           psect	stringtext
  2049                           	
  2050  05CA                     STR_68:	
  2051  05CA  3449               	retlw	73	;'I'
  2052  05CB  344E               	retlw	78	;'N'
  2053  05CC  3453               	retlw	83	;'S'
  2054  05CD  345F               	retlw	95	;'_'
  2055  05CE  3457               	retlw	87	;'W'
  2056  05CF  3441               	retlw	65	;'A'
  2057  05D0  3449               	retlw	73	;'I'
  2058  05D1  3454               	retlw	84	;'T'
  2059  05D2  3457               	retlw	87	;'W'
  2060  05D3  3441               	retlw	65	;'A'
  2061  05D4  3454               	retlw	84	;'T'
  2062  05D5  3445               	retlw	69	;'E'
  2063  05D6  3452               	retlw	82	;'R'
  2064  05D7  342C               	retlw	44	;','
  2065  05D8  3420               	retlw	32	;' '
  2066  05D9  3425               	retlw	37	;'%'
  2067  05DA  3473               	retlw	115	;'s'
  2068  05DB  3425               	retlw	37	;'%'
  2069  05DC  3473               	retlw	115	;'s'
  2070  05DD  3400               	retlw	0
  2071                           psect	stringtext
  2072                           	
  2073  05DE                     STR_79:	
  2074  05DE  3449               	retlw	73	;'I'
  2075  05DF  344E               	retlw	78	;'N'
  2076  05E0  3453               	retlw	83	;'S'
  2077  05E1  345F               	retlw	95	;'_'
  2078  05E2  3453               	retlw	83	;'S'
  2079  05E3  344B               	retlw	75	;'K'
  2080  05E4  3449               	retlw	73	;'I'
  2081  05E5  3450               	retlw	80	;'P'
  2082  05E6  3449               	retlw	73	;'I'
  2083  05E7  3446               	retlw	70	;'F'
  2084  05E8  3457               	retlw	87	;'W'
  2085  05E9  3445               	retlw	69	;'E'
  2086  05EA  3454               	retlw	84	;'T'
  2087  05EB  342C               	retlw	44	;','
  2088  05EC  3420               	retlw	32	;' '
  2089  05ED  3425               	retlw	37	;'%'
  2090  05EE  3475               	retlw	117	;'u'
  2091  05EF  3425               	retlw	37	;'%'
  2092  05F0  3473               	retlw	115	;'s'
  2093  05F1  3400               	retlw	0
  2094                           psect	stringtext
  2095                           	
  2096  05F2                     STR_76:	
  2097  05F2  3449               	retlw	73	;'I'
  2098  05F3  344E               	retlw	78	;'N'
  2099  05F4  3453               	retlw	83	;'S'
  2100  05F5  345F               	retlw	95	;'_'
  2101  05F6  3453               	retlw	83	;'S'
  2102  05F7  344B               	retlw	75	;'K'
  2103  05F8  3449               	retlw	73	;'I'
  2104  05F9  3450               	retlw	80	;'P'
  2105  05FA  3449               	retlw	73	;'I'
  2106  05FB  3446               	retlw	70	;'F'
  2107  05FC  3444               	retlw	68	;'D'
  2108  05FD  3452               	retlw	82	;'R'
  2109  05FE  3459               	retlw	89	;'Y'
  2110  05FF  342C               	retlw	44	;','
  2111  0600  3420               	retlw	32	;' '
  2112  0601  3425               	retlw	37	;'%'
  2113  0602  3475               	retlw	117	;'u'
  2114  0603  3425               	retlw	37	;'%'
  2115  0604  3473               	retlw	115	;'s'
  2116  0605  3400               	retlw	0
  2117                           psect	stringtext
  2118                           	
  2119  0606                     STR_1:	
  2120  0606  340A               	retlw	10
  2121  0607  342A               	retlw	42	;'*'
  2122  0608  342A               	retlw	42	;'*'
  2123  0609  342A               	retlw	42	;'*'
  2124  060A  3420               	retlw	32	;' '
  2125  060B  3443               	retlw	67	;'C'
  2126  060C  3461               	retlw	97	;'a'
  2127  060D  3474               	retlw	116	;'t'
  2128  060E  3447               	retlw	71	;'G'
  2129  060F  3465               	retlw	101	;'e'
  2130  0610  346E               	retlw	110	;'n'
  2131  0611  3469               	retlw	105	;'i'
  2132  0612  3475               	retlw	117	;'u'
  2133  0613  3473               	retlw	115	;'s'
  2134  0614  3420               	retlw	32	;' '
  2135  0615  342A               	retlw	42	;'*'
  2136  0616  342A               	retlw	42	;'*'
  2137  0617  342A               	retlw	42	;'*'
  2138  0618  340A               	retlw	10
  2139  0619  3400               	retlw	0
  2140                           psect	stringtext
  2141                           	
  2142  061A                     STR_86:	
  2143  061A  3449               	retlw	73	;'I'
  2144  061B  344E               	retlw	78	;'N'
  2145  061C  3453               	retlw	83	;'S'
  2146  061D  345F               	retlw	95	;'_'
  2147  061E  3452               	retlw	82	;'R'
  2148  061F  3445               	retlw	69	;'E'
  2149  0620  3454               	retlw	84	;'T'
  2150  0621  3455               	retlw	85	;'U'
  2151  0622  3452               	retlw	82	;'R'
  2152  0623  344E               	retlw	78	;'N'
  2153  0624  342C               	retlw	44	;','
  2154  0625  3420               	retlw	32	;' '
  2155  0626  3430               	retlw	48	;'0'
  2156  0627  3478               	retlw	120	;'x'
  2157  0628  3425               	retlw	37	;'%'
  2158  0629  3430               	retlw	48	;'0'
  2159  062A  3434               	retlw	52	;'4'
  2160  062B  3458               	retlw	88	;'X'
  2161  062C  3400               	retlw	0
  2162                           psect	stringtext
  2163                           	
  2164  062D                     STR_67:	
  2165  062D  3449               	retlw	73	;'I'
  2166  062E  344E               	retlw	78	;'N'
  2167  062F  3453               	retlw	83	;'S'
  2168  0630  345F               	retlw	95	;'_'
  2169  0631  3457               	retlw	87	;'W'
  2170  0632  3441               	retlw	65	;'A'
  2171  0633  3449               	retlw	73	;'I'
  2172  0634  3454               	retlw	84	;'T'
  2173  0635  3454               	retlw	84	;'T'
  2174  0636  3449               	retlw	73	;'I'
  2175  0637  344D               	retlw	77	;'M'
  2176  0638  3445               	retlw	69	;'E'
  2177  0639  342C               	retlw	44	;','
  2178  063A  3420               	retlw	32	;' '
  2179  063B  3425               	retlw	37	;'%'
  2180  063C  3475               	retlw	117	;'u'
  2181  063D  346D               	retlw	109	;'m'
  2182  063E  3473               	retlw	115	;'s'
  2183  063F  3400               	retlw	0
  2184                           psect	stringtext
  2185                           	
  2186  0640                     STR_5:	
  2187  0640  3450               	retlw	80	;'P'
  2188  0641  3469               	retlw	105	;'i'
  2189  0642  346E               	retlw	110	;'n'
  2190  0643  3420               	retlw	32	;' '
  2191  0644  3472               	retlw	114	;'r'
  2192  0645  3465               	retlw	101	;'e'
  2193  0646  3473               	retlw	115	;'s'
  2194  0647  3465               	retlw	101	;'e'
  2195  0648  3474               	retlw	116	;'t'
  2196  0649  3420               	retlw	32	;' '
  2197  064A  3428               	retlw	40	;'('
  2198  064B  3473               	retlw	115	;'s'
  2199  064C  346C               	retlw	108	;'l'
  2200  064D  3465               	retlw	101	;'e'
  2201  064E  3465               	retlw	101	;'e'
  2202  064F  3470               	retlw	112	;'p'
  2203  0650  3429               	retlw	41	;')'
  2204  0651  340A               	retlw	10
  2205  0652  3400               	retlw	0
  2206                           psect	stringtext
  2207                           	
  2208  0653                     STR_8:	
  2209  0653  3453               	retlw	83	;'S'
  2210  0654  3465               	retlw	101	;'e'
  2211  0655  3474               	retlw	116	;'t'
  2212  0656  3475               	retlw	117	;'u'
  2213  0657  3470               	retlw	112	;'p'
  2214  0658  3420               	retlw	32	;' '
  2215  0659  3462               	retlw	98	;'b'
  2216  065A  3475               	retlw	117	;'u'
  2217  065B  3474               	retlw	116	;'t'
  2218  065C  3474               	retlw	116	;'t'
  2219  065D  346F               	retlw	111	;'o'
  2220  065E  346E               	retlw	110	;'n'
  2221  065F  3420               	retlw	32	;' '
  2222  0660  3468               	retlw	104	;'h'
  2223  0661  3465               	retlw	101	;'e'
  2224  0662  346C               	retlw	108	;'l'
  2225  0663  3464               	retlw	100	;'d'
  2226  0664  340A               	retlw	10
  2227  0665  3400               	retlw	0
  2228                           psect	stringtext
  2229                           	
  2230  0666                     STR_7:	
  2231  0666  3453               	retlw	83	;'S'
  2232  0667  3474               	retlw	116	;'t'
  2233  0668  3461               	retlw	97	;'a'
  2234  0669  3472               	retlw	114	;'r'
  2235  066A  3474               	retlw	116	;'t'
  2236  066B  3420               	retlw	32	;' '
  2237  066C  3462               	retlw	98	;'b'
  2238  066D  3475               	retlw	117	;'u'
  2239  066E  3474               	retlw	116	;'t'
  2240  066F  3474               	retlw	116	;'t'
  2241  0670  346F               	retlw	111	;'o'
  2242  0671  346E               	retlw	110	;'n'
  2243  0672  3420               	retlw	32	;' '
  2244  0673  3468               	retlw	104	;'h'
  2245  0674  3465               	retlw	101	;'e'
  2246  0675  346C               	retlw	108	;'l'
  2247  0676  3464               	retlw	100	;'d'
  2248  0677  340A               	retlw	10
  2249  0678  3400               	retlw	0
  2250                           psect	stringtext
  2251                           	
  2252  0679                     STR_94:	
  2253  0679  3443               	retlw	67	;'C'
  2254  067A  3461               	retlw	97	;'a'
  2255  067B  3474               	retlw	116	;'t'
  2256  067C  3474               	retlw	116	;'t'
  2257  067D  3469               	retlw	105	;'i'
  2258  067E  346D               	retlw	109	;'m'
  2259  067F  3465               	retlw	101	;'e'
  2260  0680  3472               	retlw	114	;'r'
  2261  0681  3420               	retlw	32	;' '
  2262  0682  3465               	retlw	101	;'e'
  2263  0683  3478               	retlw	120	;'x'
  2264  0684  3470               	retlw	112	;'p'
  2265  0685  3469               	retlw	105	;'i'
  2266  0686  3472               	retlw	114	;'r'
  2267  0687  3465               	retlw	101	;'e'
  2268  0688  3464               	retlw	100	;'d'
  2269  0689  340A               	retlw	10
  2270  068A  3400               	retlw	0
  2271                           psect	stringtext
  2272                           	
  2273  068B                     STR_28:	
  2274  068B  3452               	retlw	82	;'R'
  2275  068C  3465               	retlw	101	;'e'
  2276  068D  3473               	retlw	115	;'s'
  2277  068E  3475               	retlw	117	;'u'
  2278  068F  346D               	retlw	109	;'m'
  2279  0690  3469               	retlw	105	;'i'
  2280  0691  346E               	retlw	110	;'n'
  2281  0692  3467               	retlw	103	;'g'
  2282  0693  3420               	retlw	32	;' '
  2283  0694  3470               	retlw	112	;'p'
  2284  0695  3472               	retlw	114	;'r'
  2285  0696  346F               	retlw	111	;'o'
  2286  0697  3467               	retlw	103	;'g'
  2287  0698  3472               	retlw	114	;'r'
  2288  0699  3461               	retlw	97	;'a'
  2289  069A  346D               	retlw	109	;'m'
  2290  069B  340A               	retlw	10
  2291  069C  3400               	retlw	0
  2292                           psect	stringtext
  2293                           	
  2294  069D                     STR_29:	
  2295  069D  3453               	retlw	83	;'S'
  2296  069E  3474               	retlw	116	;'t'
  2297  069F  346F               	retlw	111	;'o'
  2298  06A0  3470               	retlw	112	;'p'
  2299  06A1  3470               	retlw	112	;'p'
  2300  06A2  3469               	retlw	105	;'i'
  2301  06A3  346E               	retlw	110	;'n'
  2302  06A4  3467               	retlw	103	;'g'
  2303  06A5  3420               	retlw	32	;' '
  2304  06A6  3470               	retlw	112	;'p'
  2305  06A7  3472               	retlw	114	;'r'
  2306  06A8  346F               	retlw	111	;'o'
  2307  06A9  3467               	retlw	103	;'g'
  2308  06AA  3472               	retlw	114	;'r'
  2309  06AB  3461               	retlw	97	;'a'
  2310  06AC  346D               	retlw	109	;'m'
  2311  06AD  340A               	retlw	10
  2312  06AE  3400               	retlw	0
  2313                           psect	stringtext
  2314                           	
  2315  06AF                     STR_89:	
  2316  06AF  3449               	retlw	73	;'I'
  2317  06B0  344E               	retlw	78	;'N'
  2318  06B1  3453               	retlw	83	;'S'
  2319  06B2  345F               	retlw	95	;'_'
  2320  06B3  3475               	retlw	117	;'u'
  2321  06B4  346E               	retlw	110	;'n'
  2322  06B5  346B               	retlw	107	;'k'
  2323  06B6  346E               	retlw	110	;'n'
  2324  06B7  346F               	retlw	111	;'o'
  2325  06B8  3477               	retlw	119	;'w'
  2326  06B9  346E               	retlw	110	;'n'
  2327  06BA  343A               	retlw	58	;':'
  2328  06BB  3420               	retlw	32	;' '
  2329  06BC  3430               	retlw	48	;'0'
  2330  06BD  3478               	retlw	120	;'x'
  2331  06BE  3425               	retlw	37	;'%'
  2332  06BF  3458               	retlw	88	;'X'
  2333  06C0  3400               	retlw	0
  2334                           psect	stringtext
  2335                           	
  2336  06C1                     STR_115:	
  2337  06C1  3430               	retlw	48	;'0'
  2338  06C2  3431               	retlw	49	;'1'
  2339  06C3  3432               	retlw	50	;'2'
  2340  06C4  3433               	retlw	51	;'3'
  2341  06C5  3434               	retlw	52	;'4'
  2342  06C6  3435               	retlw	53	;'5'
  2343  06C7  3436               	retlw	54	;'6'
  2344  06C8  3437               	retlw	55	;'7'
  2345  06C9  3438               	retlw	56	;'8'
  2346  06CA  3439               	retlw	57	;'9'
  2347  06CB  3441               	retlw	65	;'A'
  2348  06CC  3442               	retlw	66	;'B'
  2349  06CD  3443               	retlw	67	;'C'
  2350  06CE  3444               	retlw	68	;'D'
  2351  06CF  3445               	retlw	69	;'E'
  2352  06D0  3446               	retlw	70	;'F'
  2353  06D1  3400               	retlw	0
  2354                           psect	stringtext
  2355                           	
  2356  06D2                     STR_113:	
  2357  06D2  3425               	retlw	37	;'%'
  2358  06D3  3464               	retlw	100	;'d'
  2359  06D4  3420               	retlw	32	;' '
  2360  06D5  3425               	retlw	37	;'%'
  2361  06D6  3464               	retlw	100	;'d'
  2362  06D7  343A               	retlw	58	;':'
  2363  06D8  3425               	retlw	37	;'%'
  2364  06D9  342E               	retlw	46	;'.'
  2365  06DA  3432               	retlw	50	;'2'
  2366  06DB  3464               	retlw	100	;'d'
  2367  06DC  342E               	retlw	46	;'.'
  2368  06DD  3425               	retlw	37	;'%'
  2369  06DE  342E               	retlw	46	;'.'
  2370  06DF  3432               	retlw	50	;'2'
  2371  06E0  3464               	retlw	100	;'d'
  2372  06E1  3420               	retlw	32	;' '
  2373  06E2  3400               	retlw	0
  2374                           psect	stringtext
  2375                           	
  2376  06E3                     STR_111:	
  2377  06E3  344B               	retlw	75	;'K'
  2378  06E4  346E               	retlw	110	;'n'
  2379  06E5  346F               	retlw	111	;'o'
  2380  06E6  3477               	retlw	119	;'w'
  2381  06E7  346E               	retlw	110	;'n'
  2382  06E8  3420               	retlw	32	;' '
  2383  06E9  3463               	retlw	99	;'c'
  2384  06EA  346F               	retlw	111	;'o'
  2385  06EB  346D               	retlw	109	;'m'
  2386  06EC  346D               	retlw	109	;'m'
  2387  06ED  3461               	retlw	97	;'a'
  2388  06EE  346E               	retlw	110	;'n'
  2389  06EF  3464               	retlw	100	;'d'
  2390  06F0  3473               	retlw	115	;'s'
  2391  06F1  343A               	retlw	58	;':'
  2392  06F2  340A               	retlw	10
  2393  06F3  3400               	retlw	0
  2394                           psect	stringtext
  2395                           	
  2396  06F4                     STR_103:	
  2397  06F4  3450               	retlw	80	;'P'
  2398  06F5  3461               	retlw	97	;'a'
  2399  06F6  3472               	retlw	114	;'r'
  2400  06F7  3461               	retlw	97	;'a'
  2401  06F8  346D               	retlw	109	;'m'
  2402  06F9  3465               	retlw	101	;'e'
  2403  06FA  3474               	retlw	116	;'t'
  2404  06FB  3465               	retlw	101	;'e'
  2405  06FC  3472               	retlw	114	;'r'
  2406  06FD  3420               	retlw	32	;' '
  2407  06FE  3465               	retlw	101	;'e'
  2408  06FF  3472               	retlw	114	;'r'
  2409  0700  3472               	retlw	114	;'r'
  2410  0701  346F               	retlw	111	;'o'
  2411  0702  3472               	retlw	114	;'r'
  2412  0703  340A               	retlw	10
  2413  0704  3400               	retlw	0
  2414                           psect	stringtext
  2415                           	
  2416  0705                     STR_22:	
  2417  0705  342C               	retlw	44	;','
  2418  0706  3420               	retlw	32	;' '
  2419  0707  346E               	retlw	110	;'n'
  2420  0708  346F               	retlw	111	;'o'
  2421  0709  3420               	retlw	32	;' '
  2422  070A  3473               	retlw	115	;'s'
  2423  070B  3474               	retlw	116	;'t'
  2424  070C  3461               	retlw	97	;'a'
  2425  070D  3472               	retlw	114	;'r'
  2426  070E  3474               	retlw	116	;'t'
  2427  070F  343A               	retlw	58	;':'
  2428  0710  3420               	retlw	32	;' '
  2429  0711  3430               	retlw	48	;'0'
  2430  0712  3478               	retlw	120	;'x'
  2431  0713  3425               	retlw	37	;'%'
  2432  0714  3458               	retlw	88	;'X'
  2433  0715  3400               	retlw	0
  2434                           psect	stringtext
  2435                           	
  2436  0716                     STR_85:	
  2437  0716  3449               	retlw	73	;'I'
  2438  0717  344E               	retlw	78	;'N'
  2439  0718  3453               	retlw	83	;'S'
  2440  0719  345F               	retlw	95	;'_'
  2441  071A  3443               	retlw	67	;'C'
  2442  071B  3441               	retlw	65	;'A'
  2443  071C  344C               	retlw	76	;'L'
  2444  071D  344C               	retlw	76	;'L'
  2445  071E  342C               	retlw	44	;','
  2446  071F  3420               	retlw	32	;' '
  2447  0720  3430               	retlw	48	;'0'
  2448  0721  3478               	retlw	120	;'x'
  2449  0722  3425               	retlw	37	;'%'
  2450  0723  3430               	retlw	48	;'0'
  2451  0724  3434               	retlw	52	;'4'
  2452  0725  3458               	retlw	88	;'X'
  2453  0726  3400               	retlw	0
  2454                           psect	stringtext
  2455                           	
  2456  0727                     STR_73:	
  2457  0727  3449               	retlw	73	;'I'
  2458  0728  344E               	retlw	78	;'N'
  2459  0729  3453               	retlw	83	;'S'
  2460  072A  345F               	retlw	95	;'_'
  2461  072B  3457               	retlw	87	;'W'
  2462  072C  3441               	retlw	65	;'A'
  2463  072D  3449               	retlw	73	;'I'
  2464  072E  3454               	retlw	84	;'T'
  2465  072F  3444               	retlw	68	;'D'
  2466  0730  344F               	retlw	79	;'O'
  2467  0731  3453               	retlw	83	;'S'
  2468  0732  3441               	retlw	65	;'A'
  2469  0733  3447               	retlw	71	;'G'
  2470  0734  3445               	retlw	69	;'E'
  2471  0735  3425               	retlw	37	;'%'
  2472  0736  3473               	retlw	115	;'s'
  2473  0737  3400               	retlw	0
  2474                           psect	stringtext
  2475                           	
  2476  0738                     STR_3:	
  2477  0738  3442               	retlw	66	;'B'
  2478  0739  3472               	retlw	114	;'r'
  2479  073A  346F               	retlw	111	;'o'
  2480  073B  3477               	retlw	119	;'w'
  2481  073C  346E               	retlw	110	;'n'
  2482  073D  342D               	retlw	45	;'-'
  2483  073E  346F               	retlw	111	;'o'
  2484  073F  3475               	retlw	117	;'u'
  2485  0740  3474               	retlw	116	;'t'
  2486  0741  3420               	retlw	32	;' '
  2487  0742  3472               	retlw	114	;'r'
  2488  0743  3465               	retlw	101	;'e'
  2489  0744  3473               	retlw	115	;'s'
  2490  0745  3465               	retlw	101	;'e'
  2491  0746  3474               	retlw	116	;'t'
  2492  0747  340A               	retlw	10
  2493  0748  3400               	retlw	0
  2494                           psect	stringtext
  2495                           	
  2496  0749                     STR_27:	
  2497  0749  3450               	retlw	80	;'P'
  2498  074A  3461               	retlw	97	;'a'
  2499  074B  3475               	retlw	117	;'u'
  2500  074C  3473               	retlw	115	;'s'
  2501  074D  3465               	retlw	101	;'e'
  2502  074E  3464               	retlw	100	;'d'
  2503  074F  3420               	retlw	32	;' '
  2504  0750  3470               	retlw	112	;'p'
  2505  0751  3472               	retlw	114	;'r'
  2506  0752  346F               	retlw	111	;'o'
  2507  0753  3467               	retlw	103	;'g'
  2508  0754  3472               	retlw	114	;'r'
  2509  0755  3461               	retlw	97	;'a'
  2510  0756  346D               	retlw	109	;'m'
  2511  0757  340A               	retlw	10
  2512  0758  3400               	retlw	0
  2513                           psect	stringtext
  2514                           	
  2515  0759                     STR_48:	
  2516  0759  3449               	retlw	73	;'I'
  2517  075A  344E               	retlw	78	;'N'
  2518  075B  3453               	retlw	83	;'S'
  2519  075C  345F               	retlw	95	;'_'
  2520  075D  3457               	retlw	87	;'W'
  2521  075E  3441               	retlw	65	;'A'
  2522  075F  3454               	retlw	84	;'T'
  2523  0760  3445               	retlw	69	;'E'
  2524  0761  3452               	retlw	82	;'R'
  2525  0762  342C               	retlw	44	;','
  2526  0763  3420               	retlw	32	;' '
  2527  0764  3425               	retlw	37	;'%'
  2528  0765  3473               	retlw	115	;'s'
  2529  0766  3425               	retlw	37	;'%'
  2530  0767  3473               	retlw	115	;'s'
  2531  0768  3400               	retlw	0
  2532                           psect	stringtext
  2533                           	
  2534  0769                     STR_62:	
  2535  0769  3449               	retlw	73	;'I'
  2536  076A  344E               	retlw	78	;'N'
  2537  076B  3453               	retlw	83	;'S'
  2538  076C  345F               	retlw	95	;'_'
  2539  076D  3444               	retlw	68	;'D'
  2540  076E  3452               	retlw	82	;'R'
  2541  076F  3459               	retlw	89	;'Y'
  2542  0770  3445               	retlw	69	;'E'
  2543  0771  3452               	retlw	82	;'R'
  2544  0772  342C               	retlw	44	;','
  2545  0773  3420               	retlw	32	;' '
  2546  0774  3425               	retlw	37	;'%'
  2547  0775  3473               	retlw	115	;'s'
  2548  0776  3425               	retlw	37	;'%'
  2549  0777  3473               	retlw	115	;'s'
  2550  0778  3400               	retlw	0
  2551                           psect	stringtext
  2552                           	
  2553  0779                     STR_4:	
  2554  0779  3457               	retlw	87	;'W'
  2555  077A  3461               	retlw	97	;'a'
  2556  077B  3474               	retlw	116	;'t'
  2557  077C  3463               	retlw	99	;'c'
  2558  077D  3468               	retlw	104	;'h'
  2559  077E  3464               	retlw	100	;'d'
  2560  077F  346F               	retlw	111	;'o'
  2561  0780  3467               	retlw	103	;'g'
  2562  0781  3420               	retlw	32	;' '
  2563  0782  3472               	retlw	114	;'r'
  2564  0783  3465               	retlw	101	;'e'
  2565  0784  3473               	retlw	115	;'s'
  2566  0785  3465               	retlw	101	;'e'
  2567  0786  3474               	retlw	116	;'t'
  2568  0787  340A               	retlw	10
  2569  0788  3400               	retlw	0
  2570                           psect	stringtext
  2571                           	
  2572  0789                     STR_2:	
  2573  0789  3450               	retlw	80	;'P'
  2574  078A  346F               	retlw	111	;'o'
  2575  078B  3477               	retlw	119	;'w'
  2576  078C  3465               	retlw	101	;'e'
  2577  078D  3472               	retlw	114	;'r'
  2578  078E  342D               	retlw	45	;'-'
  2579  078F  346F               	retlw	111	;'o'
  2580  0790  346E               	retlw	110	;'n'
  2581  0791  3420               	retlw	32	;' '
  2582  0792  3472               	retlw	114	;'r'
  2583  0793  3465               	retlw	101	;'e'
  2584  0794  3473               	retlw	115	;'s'
  2585  0795  3465               	retlw	101	;'e'
  2586  0796  3474               	retlw	116	;'t'
  2587  0797  340A               	retlw	10
  2588  0798  3400               	retlw	0
  2589                           psect	stringtext
  2590                           	
  2591  0799                     STR_104:	
  2592  0799  3455               	retlw	85	;'U'
  2593  079A  346E               	retlw	110	;'n'
  2594  079B  346B               	retlw	107	;'k'
  2595  079C  346E               	retlw	110	;'n'
  2596  079D  346F               	retlw	111	;'o'
  2597  079E  3477               	retlw	119	;'w'
  2598  079F  346E               	retlw	110	;'n'
  2599  07A0  3420               	retlw	32	;' '
  2600  07A1  3465               	retlw	101	;'e'
  2601  07A2  3472               	retlw	114	;'r'
  2602  07A3  3472               	retlw	114	;'r'
  2603  07A4  346F               	retlw	111	;'o'
  2604  07A5  3472               	retlw	114	;'r'
  2605  07A6  340A               	retlw	10
  2606  07A7  3400               	retlw	0
  2607                           psect	stringtext
  2608                           	
  2609  07A8                     STR_16:	
  2610  07A8  3444               	retlw	68	;'D'
  2611  07A9  3472               	retlw	114	;'r'
  2612  07AA  3461               	retlw	97	;'a'
  2613  07AB  3469               	retlw	105	;'i'
  2614  07AC  346E               	retlw	110	;'n'
  2615  07AD  3420               	retlw	32	;' '
  2616  07AE  3474               	retlw	116	;'t'
  2617  07AF  3469               	retlw	105	;'i'
  2618  07B0  346D               	retlw	109	;'m'
  2619  07B1  3465               	retlw	101	;'e'
  2620  07B2  346F               	retlw	111	;'o'
  2621  07B3  3475               	retlw	117	;'u'
  2622  07B4  3474               	retlw	116	;'t'
  2623  07B5  340A               	retlw	10
  2624  07B6  3400               	retlw	0
  2625                           psect	stringtext
  2626                           	
  2627  07B7                     STR_21:	
  2628  07B7  342C               	retlw	44	;','
  2629  07B8  3420               	retlw	32	;' '
  2630  07B9  3469               	retlw	105	;'i'
  2631  07BA  346E               	retlw	110	;'n'
  2632  07BB  3463               	retlw	99	;'c'
  2633  07BC  346F               	retlw	111	;'o'
  2634  07BD  346D               	retlw	109	;'m'
  2635  07BE  3470               	retlw	112	;'p'
  2636  07BF  3461               	retlw	97	;'a'
  2637  07C0  3474               	retlw	116	;'t'
  2638  07C1  3469               	retlw	105	;'i'
  2639  07C2  3462               	retlw	98	;'b'
  2640  07C3  346C               	retlw	108	;'l'
  2641  07C4  3465               	retlw	101	;'e'
  2642  07C5  3400               	retlw	0
  2643                           psect	stringtext
  2644                           	
  2645  07C6                     STR_55:	
  2646  07C6  3449               	retlw	73	;'I'
  2647  07C7  344E               	retlw	78	;'N'
  2648  07C8  3453               	retlw	83	;'S'
  2649  07C9  345F               	retlw	95	;'_'
  2650  07CA  3450               	retlw	80	;'P'
  2651  07CB  3455               	retlw	85	;'U'
  2652  07CC  344D               	retlw	77	;'M'
  2653  07CD  3450               	retlw	80	;'P'
  2654  07CE  342C               	retlw	44	;','
  2655  07CF  3420               	retlw	32	;' '
  2656  07D0  3425               	retlw	37	;'%'
  2657  07D1  3473               	retlw	115	;'s'
  2658  07D2  3425               	retlw	37	;'%'
  2659  07D3  3473               	retlw	115	;'s'
  2660  07D4  3400               	retlw	0
  2661                           psect	stringtext
  2662                           	
  2663  07D5                     STR_101:	
  2664  07D5  3453               	retlw	83	;'S'
  2665  07D6  3479               	retlw	121	;'y'
  2666  07D7  346E               	retlw	110	;'n'
  2667  07D8  3474               	retlw	116	;'t'
  2668  07D9  3461               	retlw	97	;'a'
  2669  07DA  3478               	retlw	120	;'x'
  2670  07DB  3420               	retlw	32	;' '
  2671  07DC  3465               	retlw	101	;'e'
  2672  07DD  3472               	retlw	114	;'r'
  2673  07DE  3472               	retlw	114	;'r'
  2674  07DF  346F               	retlw	111	;'o'
  2675  07E0  3472               	retlw	114	;'r'
  2676  07E1  340A               	retlw	10
  2677  07E2  3400               	retlw	0
  2678                           psect	stringtext
  2679                           	
  2680  07E3                     STR_35:	
  2681  07E3  3442               	retlw	66	;'B'
  2682  07E4  346F               	retlw	111	;'o'
  2683  07E5  3478               	retlw	120	;'x'
  2684  07E6  3420               	retlw	32	;' '
  2685  07E7  3466               	retlw	102	;'f'
  2686  07E8  346C               	retlw	108	;'l'
  2687  07E9  346F               	retlw	111	;'o'
  2688  07EA  346F               	retlw	111	;'o'
  2689  07EB  3464               	retlw	100	;'d'
  2690  07EC  3465               	retlw	101	;'e'
  2691  07ED  3464               	retlw	100	;'d'
  2692  07EE  3421               	retlw	33	;'!'
  2693  07EF  340A               	retlw	10
  2694  07F0  3400               	retlw	0
  2695                           psect	stringtext
  2696                           	
  2697  07F1                     STR_15:	
  2698  07F1  3446               	retlw	70	;'F'
  2699  07F2  3469               	retlw	105	;'i'
  2700  07F3  346C               	retlw	108	;'l'
  2701  07F4  346C               	retlw	108	;'l'
  2702  07F5  3420               	retlw	32	;' '
  2703  07F6  3474               	retlw	116	;'t'
  2704  07F7  3469               	retlw	105	;'i'
  2705  07F8  346D               	retlw	109	;'m'
  2706  07F9  3465               	retlw	101	;'e'
  2707  07FA  346F               	retlw	111	;'o'
  2708  07FB  3475               	retlw	117	;'u'
  2709  07FC  3474               	retlw	116	;'t'
  2710  07FD  340A               	retlw	10
  2711  07FE  3400               	retlw	0
  2712                           psect	stringtext
  2713                           	
  2714  07FF                     STR_18:	
  2715  07FF  3449               	retlw	73	;'I'
  2716  0800  344E               	retlw	78	;'N'
  2717  0801  3453               	retlw	83	;'S'
  2718  0802  345F               	retlw	95	;'_'
  2719  0803  3453               	retlw	83	;'S'
  2720  0804  3454               	retlw	84	;'T'
  2721  0805  3441               	retlw	65	;'A'
  2722  0806  3452               	retlw	82	;'R'
  2723  0807  3454               	retlw	84	;'T'
  2724  0808  342C               	retlw	44	;','
  2725  0809  3420               	retlw	32	;' '
  2726  080A  3425               	retlw	37	;'%'
  2727  080B  3473               	retlw	115	;'s'
  2728  080C  3400               	retlw	0
  2729                           psect	stringtext
  2730                           	
  2731  080D                     STR_98:	
  2732  080D  3453               	retlw	83	;'S'
  2733  080E  3465               	retlw	101	;'e'
  2734  080F  3474               	retlw	116	;'t'
  2735  0810  3420               	retlw	32	;' '
  2736  0811  346D               	retlw	109	;'m'
  2737  0812  346F               	retlw	111	;'o'
  2738  0813  3464               	retlw	100	;'d'
  2739  0814  3465               	retlw	101	;'e'
  2740  0815  3420               	retlw	32	;' '
  2741  0816  3425               	retlw	37	;'%'
  2742  0817  3475               	retlw	117	;'u'
  2743  0818  340A               	retlw	10
  2744  0819  3400               	retlw	0
  2745                           psect	stringtext
  2746                           	
  2747  081A                     STR_40:	
  2748  081A  3449               	retlw	73	;'I'
  2749  081B  344E               	retlw	78	;'N'
  2750  081C  3453               	retlw	83	;'S'
  2751  081D  345F               	retlw	95	;'_'
  2752  081E  3442               	retlw	66	;'B'
  2753  081F  344F               	retlw	79	;'O'
  2754  0820  3457               	retlw	87	;'W'
  2755  0821  344C               	retlw	76	;'L'
  2756  0822  342C               	retlw	44	;','
  2757  0823  3420               	retlw	32	;' '
  2758  0824  3425               	retlw	37	;'%'
  2759  0825  3473               	retlw	115	;'s'
  2760  0826  3400               	retlw	0
  2761                           psect	stringtext
  2762                           	
  2763  0827                     STR_92:	
  2764  0827  3477               	retlw	119	;'w'
  2765  0828  3461               	retlw	97	;'a'
  2766  0829  3469               	retlw	105	;'i'
  2767  082A  3474               	retlw	116	;'t'
  2768  082B  3469               	retlw	105	;'i'
  2769  082C  346E               	retlw	110	;'n'
  2770  082D  3467               	retlw	103	;'g'
  2771  082E  342E               	retlw	46	;'.'
  2772  082F  342E               	retlw	46	;'.'
  2773  0830  342E               	retlw	46	;'.'
  2774  0831  340A               	retlw	10
  2775  0832  3400               	retlw	0
  2776                           psect	stringtext
  2777                           	
  2778  0833                     STR_17:	
  2779  0833  3449               	retlw	73	;'I'
  2780  0834  3450               	retlw	80	;'P'
  2781  0835  3420               	retlw	32	;' '
  2782  0836  3430               	retlw	48	;'0'
  2783  0837  3478               	retlw	120	;'x'
  2784  0838  3425               	retlw	37	;'%'
  2785  0839  3430               	retlw	48	;'0'
  2786  083A  3434               	retlw	52	;'4'
  2787  083B  3458               	retlw	88	;'X'
  2788  083C  343A               	retlw	58	;':'
  2789  083D  3420               	retlw	32	;' '
  2790  083E  3400               	retlw	0
  2791                           psect	stringtext
  2792                           	
  2793  083F                     STR_44:	
  2794  083F  3449               	retlw	73	;'I'
  2795  0840  344E               	retlw	78	;'N'
  2796  0841  3453               	retlw	83	;'S'
  2797  0842  345F               	retlw	95	;'_'
  2798  0843  3441               	retlw	65	;'A'
  2799  0844  3452               	retlw	82	;'R'
  2800  0845  344D               	retlw	77	;'M'
  2801  0846  342C               	retlw	44	;','
  2802  0847  3420               	retlw	32	;' '
  2803  0848  3425               	retlw	37	;'%'
  2804  0849  3473               	retlw	115	;'s'
  2805  084A  3400               	retlw	0
  2806                           psect	stringtext
  2807                           	
  2808  084B                     STR_102:	
  2809  084B  3449               	retlw	73	;'I'
  2810  084C  342F               	retlw	47	;'/'
  2811  084D  344F               	retlw	79	;'O'
  2812  084E  3420               	retlw	32	;' '
  2813  084F  3465               	retlw	101	;'e'
  2814  0850  3472               	retlw	114	;'r'
  2815  0851  3472               	retlw	114	;'r'
  2816  0852  346F               	retlw	111	;'o'
  2817  0853  3472               	retlw	114	;'r'
  2818  0854  340A               	retlw	10
  2819  0855  3400               	retlw	0
  2820                           psect	stringtext
  2821                           	
  2822  0856                     STR_54:	
  2823  0856  3420               	retlw	32	;' '
  2824  0857  3428               	retlw	40	;'('
  2825  0858  3473               	retlw	115	;'s'
  2826  0859  346B               	retlw	107	;'k'
  2827  085A  3469               	retlw	105	;'i'
  2828  085B  3470               	retlw	112	;'p'
  2829  085C  3470               	retlw	112	;'p'
  2830  085D  3465               	retlw	101	;'e'
  2831  085E  3464               	retlw	100	;'d'
  2832  085F  3429               	retlw	41	;')'
  2833  0860  3400               	retlw	0
  2834                           psect	stringtext
  2835                           	
  2836  0861                     STR_6:	
  2837  0861  3450               	retlw	80	;'P'
  2838  0862  3469               	retlw	105	;'i'
  2839  0863  346E               	retlw	110	;'n'
  2840  0864  3420               	retlw	32	;' '
  2841  0865  3472               	retlw	114	;'r'
  2842  0866  3465               	retlw	101	;'e'
  2843  0867  3473               	retlw	115	;'s'
  2844  0868  3465               	retlw	101	;'e'
  2845  0869  3474               	retlw	116	;'t'
  2846  086A  340A               	retlw	10
  2847  086B  3400               	retlw	0
  2848                           psect	stringtext
  2849                           	
  2850  086C                     STR_108:	
  2851  086C  3445               	retlw	69	;'E'
  2852  086D  3463               	retlw	99	;'c'
  2853  086E  3468               	retlw	104	;'h'
  2854  086F  346F               	retlw	111	;'o'
  2855  0870  343A               	retlw	58	;':'
  2856  0871  3420               	retlw	32	;' '
  2857  0872  3425               	retlw	37	;'%'
  2858  0873  3473               	retlw	115	;'s'
  2859  0874  340A               	retlw	10
  2860  0875  3400               	retlw	0
  2861                           psect	stringtext
  2862                           	
  2863  0876                     STR_93:	
  2864  0876  3473               	retlw	115	;'s'
  2865  0877  346B               	retlw	107	;'k'
  2866  0878  3469               	retlw	105	;'i'
  2867  0879  3470               	retlw	112	;'p'
  2868  087A  3470               	retlw	112	;'p'
  2869  087B  3469               	retlw	105	;'i'
  2870  087C  346E               	retlw	110	;'n'
  2871  087D  3467               	retlw	103	;'g'
  2872  087E  340A               	retlw	10
  2873  087F  3400               	retlw	0
  2874                           psect	stringtext
  2875                           	
  2876  0880                     STR_30:	
  2877  0880  3457               	retlw	87	;'W'
  2878  0881  3461               	retlw	97	;'a'
  2879  0882  3474               	retlw	116	;'t'
  2880  0883  3465               	retlw	101	;'e'
  2881  0884  3472               	retlw	114	;'r'
  2882  0885  3420               	retlw	32	;' '
  2883  0886  3425               	retlw	37	;'%'
  2884  0887  3473               	retlw	115	;'s'
  2885  0888  340A               	retlw	10
  2886  0889  3400               	retlw	0
  2887                           psect	stringtext
  2888                           	
  2889  088A                     STR_41:	
  2890  088A  3442               	retlw	66	;'B'
  2891  088B  344F               	retlw	79	;'O'
  2892  088C  3457               	retlw	87	;'W'
  2893  088D  344C               	retlw	76	;'L'
  2894  088E  345F               	retlw	95	;'_'
  2895  088F  3453               	retlw	83	;'S'
  2896  0890  3454               	retlw	84	;'T'
  2897  0891  344F               	retlw	79	;'O'
  2898  0892  3450               	retlw	80	;'P'
  2899  0893  3400               	retlw	0
  2900                           psect	stringtext
  2901                           	
  2902  0894                     STR_60:	
  2903  0894  3420               	retlw	32	;' '
  2904  0895  3444               	retlw	68	;'D'
  2905  0896  3472               	retlw	114	;'r'
  2906  0897  3461               	retlw	97	;'a'
  2907  0898  3469               	retlw	105	;'i'
  2908  0899  346E               	retlw	110	;'n'
  2909  089A  3469               	retlw	105	;'i'
  2910  089B  346E               	retlw	110	;'n'
  2911  089C  3467               	retlw	103	;'g'
  2912  089D  3400               	retlw	0
  2913                           psect	stringtext
  2914                           	
  2915  089E                     STR_34:	
  2916  089E  3444               	retlw	68	;'D'
  2917  089F  3472               	retlw	114	;'r'
  2918  08A0  3461               	retlw	97	;'a'
  2919  08A1  3469               	retlw	105	;'i'
  2920  08A2  346E               	retlw	110	;'n'
  2921  08A3  3465               	retlw	101	;'e'
  2922  08A4  3464               	retlw	100	;'d'
  2923  08A5  340A               	retlw	10
  2924  08A6  3400               	retlw	0
  2925                           psect	stringtext
  2926                           	
  2927  08A7                     STR_13:	
  2928  08A7  3475               	retlw	117	;'u'
  2929  08A8  346E               	retlw	110	;'n'
  2930  08A9  346B               	retlw	107	;'k'
  2931  08AA  346E               	retlw	110	;'n'
  2932  08AB  346F               	retlw	111	;'o'
  2933  08AC  3477               	retlw	119	;'w'
  2934  08AD  346E               	retlw	110	;'n'
  2935  08AE  340A               	retlw	10
  2936  08AF  3400               	retlw	0
  2937                           psect	stringtext
  2938                           	
  2939  08B0                     STR_46:	
  2940  08B0  3441               	retlw	65	;'A'
  2941  08B1  3452               	retlw	82	;'R'
  2942  08B2  344D               	retlw	77	;'M'
  2943  08B3  345F               	retlw	95	;'_'
  2944  08B4  3444               	retlw	68	;'D'
  2945  08B5  344F               	retlw	79	;'O'
  2946  08B6  3457               	retlw	87	;'W'
  2947  08B7  344E               	retlw	78	;'N'
  2948  08B8  3400               	retlw	0
  2949                           psect	stringtext
  2950                           	
  2951  08B9                     STR_45:	
  2952  08B9  3441               	retlw	65	;'A'
  2953  08BA  3452               	retlw	82	;'R'
  2954  08BB  344D               	retlw	77	;'M'
  2955  08BC  345F               	retlw	95	;'_'
  2956  08BD  3453               	retlw	83	;'S'
  2957  08BE  3454               	retlw	84	;'T'
  2958  08BF  344F               	retlw	79	;'O'
  2959  08C0  3450               	retlw	80	;'P'
  2960  08C1  3400               	retlw	0
  2961                           psect	stringtext
  2962                           	
  2963  08C2                     STR_43:	
  2964  08C2  3442               	retlw	66	;'B'
  2965  08C3  344F               	retlw	79	;'O'
  2966  08C4  3457               	retlw	87	;'W'
  2967  08C5  344C               	retlw	76	;'L'
  2968  08C6  345F               	retlw	95	;'_'
  2969  08C7  3443               	retlw	67	;'C'
  2970  08C8  3443               	retlw	67	;'C'
  2971  08C9  3457               	retlw	87	;'W'
  2972  08CA  3400               	retlw	0
  2973                           psect	stringtext
  2974                           	
  2975  08CB                     STR_53:	
  2976  08CB  3420               	retlw	32	;' '
  2977  08CC  3446               	retlw	70	;'F'
  2978  08CD  3469               	retlw	105	;'i'
  2979  08CE  346C               	retlw	108	;'l'
  2980  08CF  346C               	retlw	108	;'l'
  2981  08D0  3469               	retlw	105	;'i'
  2982  08D1  346E               	retlw	110	;'n'
  2983  08D2  3467               	retlw	103	;'g'
  2984  08D3  3400               	retlw	0
  2985                           psect	stringtext
  2986                           	
  2987  08D4                     STR_95:	
  2988  08D4  3443               	retlw	67	;'C'
  2989  08D5  3461               	retlw	97	;'a'
  2990  08D6  3474               	retlw	116	;'t'
  2991  08D7  3420               	retlw	32	;' '
  2992  08D8  3425               	retlw	37	;'%'
  2993  08D9  3473               	retlw	115	;'s'
  2994  08DA  340A               	retlw	10
  2995  08DB  3400               	retlw	0
  2996                           psect	stringtext
  2997                           	
  2998  08DC                     STR_33:	
  2999  08DC  3446               	retlw	70	;'F'
  3000  08DD  3469               	retlw	105	;'i'
  3001  08DE  346C               	retlw	108	;'l'
  3002  08DF  346C               	retlw	108	;'l'
  3003  08E0  3465               	retlw	101	;'e'
  3004  08E1  3464               	retlw	100	;'d'
  3005  08E2  340A               	retlw	10
  3006  08E3  3400               	retlw	0
  3007                           psect	stringtext
  3008                           	
  3009  08E4                     STR_9:	
  3010  08E4  3442               	retlw	66	;'B'
  3011  08E5  346F               	retlw	111	;'o'
  3012  08E6  3478               	retlw	120	;'x'
  3013  08E7  3420               	retlw	32	;' '
  3014  08E8  3469               	retlw	105	;'i'
  3015  08E9  3473               	retlw	115	;'s'
  3016  08EA  3420               	retlw	32	;' '
  3017  08EB  3400               	retlw	0
  3018                           psect	stringtext
  3019                           	
  3020  08EC                     STR_87:	
  3021  08EC  3449               	retlw	73	;'I'
  3022  08ED  344E               	retlw	78	;'N'
  3023  08EE  3453               	retlw	83	;'S'
  3024  08EF  345F               	retlw	95	;'_'
  3025  08F0  3445               	retlw	69	;'E'
  3026  08F1  344E               	retlw	78	;'N'
  3027  08F2  3444               	retlw	68	;'D'
  3028  08F3  3400               	retlw	0
  3029                           psect	stringtext
  3030                           	
  3031  08F4                     STR_42:	
  3032  08F4  3442               	retlw	66	;'B'
  3033  08F5  344F               	retlw	79	;'O'
  3034  08F6  3457               	retlw	87	;'W'
  3035  08F7  344C               	retlw	76	;'L'
  3036  08F8  345F               	retlw	95	;'_'
  3037  08F9  3443               	retlw	67	;'C'
  3038  08FA  3457               	retlw	87	;'W'
  3039  08FB  3400               	retlw	0
  3040                           psect	stringtext
  3041                           	
  3042  08FC                     STR_114:	
  3043  08FC  3428               	retlw	40	;'('
  3044  08FD  346E               	retlw	110	;'n'
  3045  08FE  3475               	retlw	117	;'u'
  3046  08FF  346C               	retlw	108	;'l'
  3047  0900  346C               	retlw	108	;'l'
  3048  0901  3429               	retlw	41	;')'
  3049  0902  3400               	retlw	0
  3050                           psect	stringtext
  3051                           	
  3052  0903                     STR_11:	
  3053  0903  346D               	retlw	109	;'m'
  3054  0904  3465               	retlw	101	;'e'
  3055  0905  3473               	retlw	115	;'s'
  3056  0906  3473               	retlw	115	;'s'
  3057  0907  3479               	retlw	121	;'y'
  3058  0908  340A               	retlw	10
  3059  0909  3400               	retlw	0
  3060                           psect	stringtext
  3061                           	
  3062  090A                     STR_52:	
  3063  090A  3420               	retlw	32	;' '
  3064  090B  3428               	retlw	40	;'('
  3065  090C  346E               	retlw	110	;'n'
  3066  090D  346F               	retlw	111	;'o'
  3067  090E  3470               	retlw	112	;'p'
  3068  090F  3429               	retlw	41	;')'
  3069  0910  3400               	retlw	0
  3070                           psect	stringtext
  3071                           	
  3072  0911                     STR_47:	
  3073  0911  3441               	retlw	65	;'A'
  3074  0912  3452               	retlw	82	;'R'
  3075  0913  344D               	retlw	77	;'M'
  3076  0914  345F               	retlw	95	;'_'
  3077  0915  3455               	retlw	85	;'U'
  3078  0916  3450               	retlw	80	;'P'
  3079  0917  3400               	retlw	0
  3080                           psect	stringtext
  3081                           	
  3082  0918                     STR_10:	
  3083  0918  3474               	retlw	116	;'t'
  3084  0919  3469               	retlw	105	;'i'
  3085  091A  3464               	retlw	100	;'d'
  3086  091B  3479               	retlw	121	;'y'
  3087  091C  340A               	retlw	10
  3088  091D  3400               	retlw	0
  3089                           psect	stringtext
  3090                           	
  3091  091E                     STR_12:	
  3092  091E  3477               	retlw	119	;'w'
  3093  091F  3465               	retlw	101	;'e'
  3094  0920  3474               	retlw	116	;'t'
  3095  0921  340A               	retlw	10
  3096  0922  3400               	retlw	0
  3097                           psect	stringtext
  3098                           	
  3099  0923                     STR_31:	
  3100  0923  3468               	retlw	104	;'h'
  3101  0924  3469               	retlw	105	;'i'
  3102  0925  3467               	retlw	103	;'g'
  3103  0926  3468               	retlw	104	;'h'
  3104  0927  3400               	retlw	0
  3105                           psect	stringtext
  3106                           	
  3107  0928                     STR_97:	
  3108  0928  346F               	retlw	111	;'o'
  3109  0929  3475               	retlw	117	;'u'
  3110  092A  3474               	retlw	116	;'t'
  3111  092B  3400               	retlw	0
  3112                           psect	stringtext
  3113                           	
  3114  092C                     STR_50:	
  3115  092C  346F               	retlw	111	;'o'
  3116  092D  3466               	retlw	102	;'f'
  3117  092E  3466               	retlw	102	;'f'
  3118  092F  3400               	retlw	0
  3119                           psect	stringtext
  3120                           	
  3121  0930                     STR_19:	
  3122  0930  3477               	retlw	119	;'w'
  3123  0931  3465               	retlw	101	;'e'
  3124  0932  3474               	retlw	116	;'t'
  3125  0933  3400               	retlw	0
  3126                           psect	stringtext
  3127                           	
  3128  0934                     STR_32:	
  3129  0934  346C               	retlw	108	;'l'
  3130  0935  346F               	retlw	111	;'o'
  3131  0936  3477               	retlw	119	;'w'
  3132  0937  3400               	retlw	0
  3133                           psect	stringtext
  3134                           	
  3135  0938                     STR_20:	
  3136  0938  3464               	retlw	100	;'d'
  3137  0939  3472               	retlw	114	;'r'
  3138  093A  3479               	retlw	121	;'y'
  3139  093B  3400               	retlw	0
  3140                           psect	stringtext
  3141                           	
  3142  093C                     STR_99:	
  3143  093C  3423               	retlw	35	;'#'
  3144  093D  3420               	retlw	32	;' '
  3145  093E  3400               	retlw	0
  3146                           psect	stringtext
  3147                           	
  3148  093F                     STR_96:	
  3149  093F  3469               	retlw	105	;'i'
  3150  0940  346E               	retlw	110	;'n'
  3151  0941  3400               	retlw	0
  3152                           psect	stringtext
  3153                           	
  3154  0942                     STR_49:	
  3155  0942  346F               	retlw	111	;'o'
  3156  0943  346E               	retlw	110	;'n'
  3157  0944  3400               	retlw	0
  3158                           psect	stringtext
  3159  0938                     STR_26	equ	STR_20+0
  3160  0938                     STR_38	equ	STR_20+0
  3161  0934                     STR_70	equ	STR_32+0
  3162  0930                     STR_25	equ	STR_19+0
  3163  0930                     STR_37	equ	STR_19+0
  3164  0942                     STR_56	equ	STR_49+0
  3165  0942                     STR_63	equ	STR_49+0
  3166  0942                     STR_106	equ	STR_49+0
  3167  0942                     STR_109	equ	STR_49+0
  3168  0923                     STR_69	equ	STR_31+0
  3169  092C                     STR_57	equ	STR_50+0
  3170  092C                     STR_64	equ	STR_50+0
  3171  092C                     STR_107	equ	STR_50+0
  3172  092C                     STR_110	equ	STR_50+0
  3173  090A                     STR_59	equ	STR_52+0
  3174  090A                     STR_66	equ	STR_52+0
  3175  090A                     STR_72	equ	STR_52+0
  3176  090A                     STR_75	equ	STR_52+0
  3177  090A                     STR_77	equ	STR_52+0
  3178  090A                     STR_81	equ	STR_52+0
  3179  090A                     STR_84	equ	STR_52+0
  3180  0856                     STR_61	equ	STR_54+0
  3181  0833                     STR_39	equ	STR_17+0
  3182  093C                     STR_100	equ	STR_99+0
  3183  0872                     STR_112	equ	STR_108+6
  3184  07EF                     STR_23	equ	STR_35+12
  3185  07EF                     STR_90	equ	STR_35+12
  3186  07F0                     STR_51	equ	STR_35+13
  3187  07F0                     STR_58	equ	STR_35+13
  3188  07F0                     STR_65	equ	STR_35+13
  3189  07F0                     STR_71	equ	STR_35+13
  3190  07F0                     STR_74	equ	STR_35+13
  3191  07F0                     STR_78	equ	STR_35+13
  3192  07F0                     STR_80	equ	STR_35+13
  3193  07F0                     STR_83	equ	STR_35+13
  3194                           	file	"C:\Users\chris\AppData\Local\Temp\s5m8."
  3195                           	line	#
  3196                           psect cinit,class=CODE,delta=2
  3197                           global start_initialization
  3198  2F43                     start_initialization:
  3199                           
  3200                           psect	bitbssCOMMON,class=COMMON,bit,space=1
  3201                           global __pbitbssCOMMON
  3202  0380                     __pbitbssCOMMON:
  3203  0380                     _cat_detected:
  3204  0380                            ds      1
  3205                           
  3206  0381                     _cat_present:
  3207  0381                            ds      1
  3208                           
  3209  0382                     _detected_cur:
  3210  0382                            ds      1
  3211                           
  3212  0383                     _echoed:
  3213  0383                            ds      1
  3214                           
  3215  0384                     _error_drain:
  3216  0384                            ds      1
  3217                           
  3218  0385                     _error_execution:
  3219  0385                            ds      1
  3220                           
  3221  0386                     _error_fill:
  3222  0386                            ds      1
  3223                           
  3224  0387                     _error_flood:
  3225  0387                            ds      1
  3226                           
  3227  0388                     _error_overheat:
  3228  0388                            ds      1
  3229                           
  3230  0389                     _full_wash:
  3231  0389                            ds      1
  3232                           
  3233  038A                     _heat_old:
  3234  038A                            ds      1
  3235                           
  3236  038B                     _locked:
  3237  038B                            ds      1
  3238                           
  3239  038C                     _longhandled:
  3240  038C                            ds      1
  3241                           
  3242  038D                     _paused:
  3243  038D                            ds      1
  3244                           
  3245  038E                     _pinging:
  3246  038E                            ds      1
  3247                           
  3248                           psect	bitbssBANK0,class=BANK0,bit,space=1
  3249                           global __pbitbssBANK0
  3250  0368                     __pbitbssBANK0:
  3251  0368                     _detected:
  3252  0368                            ds      1
  3253                           
  3254  0369                     _detected_dbc:
  3255  0369                            ds      1
  3256                           
  3257  036A                     _detected_old:
  3258  036A                            ds      1
  3259                           
  3260  036B                     _filling:
  3261  036B                            ds      1
  3262                           
  3263  036C                     _ledalwayson:
  3264  036C                            ds      1
  3265                           
  3266  036D                     _wet_program:
  3267  036D                            ds      1
  3268                           
  3269                           psect	bssBANK0,class=BANK0,space=1
  3270                           global __pbssBANK0
  3271  0062                     __pbssBANK0:
  3272  0062                     _auto_mode:
  3273  0062                            ds      1
  3274                           
  3275  0063                     _error_nr:
  3276  0063                            ds      1
  3277                           
  3278  0064                     _hysteresis:
  3279  0064                            ds      1
  3280                           
  3281  0065                     _ins_state:
  3282  0065                            ds      1
  3283                           
  3284  0066                     _state:
  3285  0066                            ds      1
  3286                           
  3287  0067                     proc_char@curcolumn:
  3288  0067                            ds      1
  3289                           
  3290  0068                     _cur_instruction:
  3291  0068                            ds      3
  3292                           
  3293  006B                     _ins_pointer:
  3294  006B                            ds      2
  3295                           
  3296                           psect	dataBANK0,class=BANK0,space=1
  3297                           global __pdataBANK0
  3298  006E                     __pdataBANK0:
  3299                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3300                           	line	72
  3301  006E                     _cart_level:
  3302  006E                            ds      1
  3303                           
  3304                           psect	dataBANK0
  3305                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
  3306                           	line	35
  3307  006F                     _localecho:
  3308  006F                            ds      1
  3309                           
  3310                           psect	bssBANK1,class=BANK1,space=1
  3311                           global __pbssBANK1
  3312  00C6                     __pbssBANK1:
  3313  00C6                     _currenttime:
  3314  00C6                            ds      4
  3315                           
  3316  00CA                     _overflows:
  3317  00CA                            ds      4
  3318                           
  3319  00CE                     _ins_address:
  3320  00CE                            ds      2
  3321                           
  3322  00D0                     exe_instruction@ret_address:
  3323  00D0                            ds      2
  3324                           
  3325  00D2                     water_work@cur_reflectionquality:
  3326  00D2                            ds      2
  3327                           
  3328  00D4                     _PORTB_old:
  3329  00D4                            ds      1
  3330                           
  3331  00D5                     _buttonmask_cum:
  3332  00D5                            ds      1
  3333                           
  3334  00D6                     _buttonmask_cur:
  3335  00D6                            ds      1
  3336                           
  3337  00D7                     _buttonmask_evt:
  3338  00D7                            ds      1
  3339                           
  3340  00D8                     _interval:
  3341  00D8                            ds      1
  3342                           
  3343  00D9                     _panel_mode:
  3344  00D9                            ds      1
  3345                           
  3346  00DA                     _prg_source:
  3347  00DA                            ds      1
  3348                           
  3349  00DB                     catgenie120@PORTB_old:
  3350  00DB                            ds      1
  3351                           
  3352  00DC                     water@state:
  3353  00DC                            ds      1
  3354                           
  3355  00DD                     _beep_bits:
  3356  00DD                            ds      1
  3357                           
  3358                           psect	dataBANK1,class=BANK1,space=1
  3359                           global __pdataBANK1
  3360  00DE                     __pdataBANK1:
  3361                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3362                           	line	54
  3363  00DE                     _autotimer:
  3364  00DE                            ds      6
  3365                           
  3366                           psect	dataBANK1
  3367                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3368                           	line	59
  3369  00E4                     _timer_drain:
  3370  00E4                            ds      6
  3371                           
  3372                           psect	dataBANK1
  3373                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3374                           	line	58
  3375  00EA                     _timer_fill:
  3376  00EA                            ds      6
  3377                           
  3378                           psect	bssBANK2,class=BANK2,space=1
  3379                           global __pbssBANK2
  3380  0120                     __pbssBANK2:
  3381  0120                     litterlanguage_pause@context:
  3382  0120                            ds      17
  3383                           
  3384  0131                     _rx:
  3385  0131                            ds      9
  3386                           
  3387  013A                     _uptime:
  3388  013A                            ds      4
  3389                           
  3390  013E                     water_work@old_reflectionquality:
  3391  013E                            ds      2
  3392                           
  3393  0140                     _cartridgetimeout:
  3394  0140                            ds      6
  3395                           
  3396  0146                     _cattimer:
  3397  0146                            ds      6
  3398                           
  3399  014C                     _second:
  3400  014C                            ds      6
  3401                           
  3402  0152                     _sensortimer:
  3403  0152                            ds      6
  3404                           
  3405                           psect	dataBANK2,class=BANK2,space=1
  3406                           global __pdataBANK2
  3407  0158                     __pdataBANK2:
  3408                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
  3409                           	line	36
  3410  0158                     _debouncer:
  3411  0158                            ds      6
  3412                           
  3413                           psect	dataBANK2
  3414                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  3415                           	line	53
  3416  015E                     _holdtimeout:
  3417  015E                            ds      6
  3418                           
  3419                           psect	dataBANK2
  3420                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3421                           	line	60
  3422  0164                     _timer_autodose:
  3423  0164                            ds      6
  3424                           
  3425                           psect	dataBANK2
  3426                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  3427                           	line	57
  3428  016A                     _timer_waitins:
  3429  016A                            ds      6
  3430                           
  3431                           psect	bssBANK3,class=BANK3,space=1
  3432                           global __pbssBANK3
  3433  01A0                     __pbssBANK3:
  3434  01A0                     _linebuffer:
  3435  01A0                            ds      20
  3436                           
  3437  01B4                     _pingtime:
  3438  01B4                            ds      6
  3439                           
  3440                           psect	dataBANK3,class=BANK3,space=1
  3441                           global __pdataBANK3
  3442  01BA                     __pdataBANK3:
  3443                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3444                           	line	358
  3445  01BA                     key_Beep@F3155:
  3446  01BA                            ds      5
  3447                           
  3448                           psect	dataBANK3
  3449                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3450                           	line	61
  3451  01BF                     _debouncers:
  3452  01BF                            ds      18
  3453                           
  3454                           psect	dataBANK4,class=BANK4,space=1
  3455                           global __pdataBANK4
  3456  0220                     __pdataBANK4:
  3457                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
  3458                           	line	74
  3459  0220                     _pacers:
  3460  0220                            ds      60
  3461                           
  3462                           psect clrtext,class=CODE,delta=2
  3463                           global clear_ram
  3464                           ;	Called with FSR0 containing the base address, and
  3465                           ;	WREG with the size to clear
  3466  371D                     clear_ram:
  3467  371D  0064               	clrwdt			;clear the watchdog before getting into this loop
  3468  371E                     clrloop:
  3469  371E  0180               	clrf	indf0		;clear RAM location pointed to by FSR
  3470  371F  3101               	addfsr	0,1
  3471  3720  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
  3472  3721  2F1E               	goto clrloop	;have we reached the end yet?
  3473  3722  3400               	retlw	0		;all done for this memory range, return
  3474                           ; Clear objects allocated to BITCOMMON
  3475                           psect cinit,class=CODE,delta=2
  3476                           	global __pbitbssCOMMON
  3477  2F43  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
  3478  2F44  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
  3479                           ; Clear objects allocated to BITBANK0
  3480                           psect cinit,class=CODE,delta=2
  3481                           	global __pbitbssBANK0
  3482  2F45  01ED               	clrf	((__pbitbssBANK0/8)+0)&07Fh
  3483                           ; Clear objects allocated to BANK0
  3484                           psect cinit,class=CODE,delta=2
  3485                           	global __pbssBANK0
  3486  2F46  3062               	movlw	low(__pbssBANK0)
  3487  2F47  0084               	movwf	fsr0l
  3488  2F48  3000               	movlw	high(__pbssBANK0)
  3489  2F49  0085               	movwf	fsr0h
  3490  2F4A  300B               	movlw	0Bh
  3491  2F4B  31B7  271D  31AF   	fcall	clear_ram
  3492                           ; Clear objects allocated to BANK1
  3493                           psect cinit,class=CODE,delta=2
  3494                           	global __pbssBANK1
  3495  2F4E  30C6               	movlw	low(__pbssBANK1)
  3496  2F4F  0084               	movwf	fsr0l
  3497  2F50  3000               	movlw	high(__pbssBANK1)
  3498  2F51  0085               	movwf	fsr0h
  3499  2F52  3018               	movlw	018h
  3500  2F53  31B7  271D  31AF   	fcall	clear_ram
  3501                           ; Clear objects allocated to BANK2
  3502                           psect cinit,class=CODE,delta=2
  3503                           	global __pbssBANK2
  3504  2F56  3020               	movlw	low(__pbssBANK2)
  3505  2F57  0084               	movwf	fsr0l
  3506  2F58  3001               	movlw	high(__pbssBANK2)
  3507  2F59  0085               	movwf	fsr0h
  3508  2F5A  3038               	movlw	038h
  3509  2F5B  31B7  271D  31AF   	fcall	clear_ram
  3510                           ; Clear objects allocated to BANK3
  3511                           psect cinit,class=CODE,delta=2
  3512                           	global __pbssBANK3
  3513  2F5E  30A0               	movlw	low(__pbssBANK3)
  3514  2F5F  0084               	movwf	fsr0l
  3515  2F60  3001               	movlw	high(__pbssBANK3)
  3516  2F61  0085               	movwf	fsr0h
  3517  2F62  301A               	movlw	01Ah
  3518  2F63  31B7  271D  31AF   	fcall	clear_ram
  3519                           psect inittext,class=CODE,delta=2
  3520                           global init_ram,btemp
  3521  3717                     init_ram:
  3522  3717  00FE               	movwf btemp,f
  3523  3718                     initloop:
  3524  3718  0012               	moviw fsr0++
  3525  3719  001E               	movwi fsr1++
  3526  371A  0BFE               	decfsz btemp
  3527  371B  2F18               	goto initloop
  3528  371C  3400               	retlw 0
  3529                           ; Initialize objects allocated to BANK0
  3530                           	global __pidataBANK0,__pdataBANK0
  3531                           psect cinit,class=CODE,delta=2
  3532  2F66  3180  2002  31AF   	fcall	__pidataBANK0+0		;fetch initializer
  3533  2F69  00EE               	movwf	__pdataBANK0+0&07fh		
  3534  2F6A  3180  2003  31AF   	fcall	__pidataBANK0+1		;fetch initializer
  3535  2F6D  00EF               	movwf	__pdataBANK0+1&07fh		
  3536                           ; Initialize objects allocated to BANK1
  3537                           	global __pidataBANK1,__pdataBANK1
  3538                           psect cinit,class=CODE,delta=2
  3539  2F6E  304E               	movlw low(__pidataBANK1)
  3540  2F6F  0084               	movwf fsr0l
  3541  2F70  30A8               	movlw high(__pidataBANK1)|80h
  3542  2F71  0085               	movwf fsr0h
  3543  2F72  30DE               	movlw low(__pdataBANK1)
  3544  2F73  0086               	movwf fsr1l
  3545  2F74  3000               	movlw high(__pdataBANK1)
  3546  2F75  0087               	movwf fsr1h
  3547  2F76  3012               	movlw 012h
  3548  2F77  31B7  2717  31AF   	fcall init_ram
  3549                           ; Initialize objects allocated to BANK2
  3550                           	global __pidataBANK2,__pdataBANK2
  3551                           psect cinit,class=CODE,delta=2
  3552  2F7A  30E0               	movlw low(__pidataBANK2)
  3553  2F7B  0084               	movwf fsr0l
  3554  2F7C  30A8               	movlw high(__pidataBANK2)|80h
  3555  2F7D  0085               	movwf fsr0h
  3556  2F7E  3058               	movlw low(__pdataBANK2)
  3557  2F7F  0086               	movwf fsr1l
  3558  2F80  3001               	movlw high(__pdataBANK2)
  3559  2F81  0087               	movwf fsr1h
  3560  2F82  3018               	movlw 018h
  3561  2F83  31B7  2717  31AF   	fcall init_ram
  3562                           ; Initialize objects allocated to BANK3
  3563                           	global __pidataBANK3,__pdataBANK3
  3564                           psect cinit,class=CODE,delta=2
  3565  2F86  30C9               	movlw low(__pidataBANK3)
  3566  2F87  0084               	movwf fsr0l
  3567  2F88  30A8               	movlw high(__pidataBANK3)|80h
  3568  2F89  0085               	movwf fsr0h
  3569  2F8A  30BA               	movlw low(__pdataBANK3)
  3570  2F8B  0086               	movwf fsr1l
  3571  2F8C  3001               	movlw high(__pdataBANK3)
  3572  2F8D  0087               	movwf fsr1h
  3573  2F8E  3017               	movlw 017h
  3574  2F8F  31B7  2717  31AF   	fcall init_ram
  3575                           ; Initialize objects allocated to BANK4
  3576                           	global __pidataBANK4,__pdataBANK4
  3577                           psect cinit,class=CODE,delta=2
  3578  2F92  309C               	movlw low(__pidataBANK4)
  3579  2F93  0084               	movwf fsr0l
  3580  2F94  30AC               	movlw high(__pidataBANK4)|80h
  3581  2F95  0085               	movwf fsr0h
  3582  2F96  3020               	movlw low(__pdataBANK4)
  3583  2F97  0086               	movwf fsr1l
  3584  2F98  3002               	movlw high(__pdataBANK4)
  3585  2F99  0087               	movwf fsr1h
  3586  2F9A  303C               	movlw 03Ch
  3587  2F9B  31B7  2717  31AF   	fcall init_ram
  3588                           psect cinit,class=CODE,delta=2
  3589                           global end_of_initialization
  3590                           
  3591                           ;End of C runtime variable initialization code
  3592                           
  3593  2F9E                     end_of_initialization:
  3594  2F9E  0020               movlb 0
  3595  2F9F  31A7  2F4D         ljmp _main	;jump to C main() function
  3596                           psect	cstackBANK1,class=BANK1,space=1
  3597                           global __pcstackBANK1
  3598  00A0                     __pcstackBANK1:
  3599                           	global	_exe_instruction$30243
  3600  00A0                     _exe_instruction$30243:	; 2 bytes @ 0x0
  3601  00A0                     	ds	2
  3602                           	global	_exe_instruction$30244
  3603  00A2                     _exe_instruction$30244:	; 2 bytes @ 0x2
  3604  00A2                     	ds	2
  3605                           	global	exe_instruction@temp
  3606  00A4                     exe_instruction@temp:	; 2 bytes @ 0x4
  3607  00A4                     	ds	2
  3608                           	global	_exe_instruction$5957
  3609  00A6                     _exe_instruction$5957:	; 2 bytes @ 0x6
  3610  00A6                     	ds	2
  3611                           	global	_exe_instruction$5958
  3612  00A8                     _exe_instruction$5958:	; 2 bytes @ 0x8
  3613  00A8                     	ds	2
  3614                           	global	_exe_instruction$5963
  3615  00AA                     _exe_instruction$5963:	; 2 bytes @ 0xA
  3616  00AA                     	ds	2
  3617                           	global	_exe_instruction$5964
  3618  00AC                     _exe_instruction$5964:	; 2 bytes @ 0xC
  3619  00AC                     	ds	2
  3620                           	global	_exe_instruction$5970
  3621  00AE                     _exe_instruction$5970:	; 2 bytes @ 0xE
  3622  00AE                     	ds	2
  3623                           	global	_exe_instruction$5971
  3624  00B0                     _exe_instruction$5971:	; 2 bytes @ 0x10
  3625  00B0                     	ds	2
  3626                           	global	_exe_instruction$5979
  3627  00B2                     _exe_instruction$5979:	; 2 bytes @ 0x12
  3628  00B2                     	ds	2
  3629                           	global	_exe_instruction$5980
  3630  00B4                     _exe_instruction$5980:	; 2 bytes @ 0x14
  3631  00B4                     	ds	2
  3632                           	global	_exe_instruction$5988
  3633  00B6                     _exe_instruction$5988:	; 2 bytes @ 0x16
  3634  00B6                     	ds	2
  3635                           	global	_exe_instruction$5989
  3636  00B8                     _exe_instruction$5989:	; 2 bytes @ 0x18
  3637  00B8                     	ds	2
  3638                           	global	_exe_instruction$5996
  3639  00BA                     _exe_instruction$5996:	; 2 bytes @ 0x1A
  3640  00BA                     	ds	2
  3641                           	global	_exe_instruction$5997
  3642  00BC                     _exe_instruction$5997:	; 2 bytes @ 0x1C
  3643  00BC                     	ds	2
  3644                           	global	_exe_instruction$6001
  3645  00BE                     _exe_instruction$6001:	; 2 bytes @ 0x1E
  3646  00BE                     	ds	2
  3647                           	global	_exe_instruction$6005
  3648  00C0                     _exe_instruction$6005:	; 2 bytes @ 0x20
  3649  00C0                     	ds	2
  3650                           	global	_exe_instruction$6009
  3651  00C2                     _exe_instruction$6009:	; 2 bytes @ 0x22
  3652  00C2                     	ds	2
  3653                           	global	_exe_instruction$6013
  3654  00C4                     _exe_instruction$6013:	; 2 bytes @ 0x24
  3655  00C4                     	ds	2
  3656                           psect	cstackCOMMON,class=COMMON,space=1
  3657                           global __pcstackCOMMON
  3658  0072                     __pcstackCOMMON:
  3659                           	global	?_timer_init
  3660  0072                     ?_timer_init:	; 0 bytes @ 0x0
  3661                           	global	?_rtc_init
  3662  0072                     ?_rtc_init:	; 0 bytes @ 0x0
  3663                           	global	?_catsensor_init
  3664  0072                     ?_catsensor_init:	; 0 bytes @ 0x0
  3665                           	global	?_water_init
  3666  0072                     ?_water_init:	; 0 bytes @ 0x0
  3667                           	global	?_userinterface_init
  3668  0072                     ?_userinterface_init:	; 0 bytes @ 0x0
  3669                           	global	?_cmdline_init
  3670  0072                     ?_cmdline_init:	; 0 bytes @ 0x0
  3671                           	global	?_litterlanguage_init
  3672  0072                     ?_litterlanguage_init:	; 0 bytes @ 0x0
  3673                           	global	?_interrupt_init
  3674  0072                     ?_interrupt_init:	; 0 bytes @ 0x0
  3675                           	global	?_rtc_work
  3676  0072                     ?_rtc_work:	; 0 bytes @ 0x0
  3677                           	global	?_catsensor_work
  3678  0072                     ?_catsensor_work:	; 0 bytes @ 0x0
  3679                           	global	?_water_work
  3680  0072                     ?_water_work:	; 0 bytes @ 0x0
  3681                           	global	?_catgenie_work
  3682  0072                     ?_catgenie_work:	; 0 bytes @ 0x0
  3683                           	global	?_userinterface_work
  3684  0072                     ?_userinterface_work:	; 0 bytes @ 0x0
  3685                           	global	?_cmdline_work
  3686  0072                     ?_cmdline_work:	; 0 bytes @ 0x0
  3687                           	global	?_litterlanguage_work
  3688  0072                     ?_litterlanguage_work:	; 0 bytes @ 0x0
  3689                           	global	?_timer_isr
  3690  0072                     ?_timer_isr:	; 0 bytes @ 0x0
  3691                           	global	??_timer_isr
  3692  0072                     ??_timer_isr:	; 0 bytes @ 0x0
  3693                           	global	?_catsensor_isr_timer
  3694  0072                     ?_catsensor_isr_timer:	; 0 bytes @ 0x0
  3695                           	global	??_catsensor_isr_timer
  3696  0072                     ??_catsensor_isr_timer:	; 0 bytes @ 0x0
  3697                           	global	?_catsensor_isr_input
  3698  0072                     ?_catsensor_isr_input:	; 0 bytes @ 0x0
  3699                           	global	??_catsensor_isr_input
  3700  0072                     ??_catsensor_isr_input:	; 0 bytes @ 0x0
  3701                           	global	?_serial_rx_isr
  3702  0072                     ?_serial_rx_isr:	; 0 bytes @ 0x0
  3703                           	global	??_serial_rx_isr
  3704  0072                     ??_serial_rx_isr:	; 0 bytes @ 0x0
  3705                           	global	?_serial_tx_isr
  3706  0072                     ?_serial_tx_isr:	; 0 bytes @ 0x0
  3707                           	global	??_serial_tx_isr
  3708  0072                     ??_serial_tx_isr:	; 0 bytes @ 0x0
  3709                           	global	?_litterlanguage_cleanup
  3710  0072                     ?_litterlanguage_cleanup:	; 0 bytes @ 0x0
  3711                           	global	?_printtime
  3712  0072                     ?_printtime:	; 0 bytes @ 0x0
  3713                           	global	?_set_Dosage
  3714  0072                     ?_set_Dosage:	; 0 bytes @ 0x0
  3715                           	global	?_exe_instruction
  3716  0072                     ?_exe_instruction:	; 0 bytes @ 0x0
  3717                           	global	?_wait_instruction
  3718  0072                     ?_wait_instruction:	; 0 bytes @ 0x0
  3719                           	global	?_set_Bowl
  3720  0072                     ?_set_Bowl:	; 0 bytes @ 0x0
  3721                           	global	?_set_Arm
  3722  0072                     ?_set_Arm:	; 0 bytes @ 0x0
  3723                           	global	?_water_fill
  3724  0072                     ?_water_fill:	; 0 bytes @ 0x0
  3725                           	global	?_set_Pump
  3726  0072                     ?_set_Pump:	; 0 bytes @ 0x0
  3727                           	global	?_set_Dryer
  3728  0072                     ?_set_Dryer:	; 0 bytes @ 0x0
  3729                           	global	?_set_mode
  3730  0072                     ?_set_mode:	; 0 bytes @ 0x0
  3731                           	global	?_update_display
  3732  0072                     ?_update_display:	; 0 bytes @ 0x0
  3733                           	global	?_update_autotimer
  3734  0072                     ?_update_autotimer:	; 0 bytes @ 0x0
  3735                           	global	?_start_short
  3736  0072                     ?_start_short:	; 0 bytes @ 0x0
  3737                           	global	?_setup_short
  3738  0072                     ?_setup_short:	; 0 bytes @ 0x0
  3739                           	global	?_both_short
  3740  0072                     ?_both_short:	; 0 bytes @ 0x0
  3741                           	global	?_key_Beep
  3742  0072                     ?_key_Beep:	; 0 bytes @ 0x0
  3743                           	global	?_start_long
  3744  0072                     ?_start_long:	; 0 bytes @ 0x0
  3745                           	global	?_setup_long
  3746  0072                     ?_setup_long:	; 0 bytes @ 0x0
  3747                           	global	?_both_long
  3748  0072                     ?_both_long:	; 0 bytes @ 0x0
  3749                           	global	?_putch
  3750  0072                     ?_putch:	; 0 bytes @ 0x0
  3751                           	global	?_proc_char
  3752  0072                     ?_proc_char:	; 0 bytes @ 0x0
  3753                           	global	?_proc_line
  3754  0072                     ?_proc_line:	; 0 bytes @ 0x0
  3755                           	global	?_isdigit
  3756  0072                     ?_isdigit:	; 1 bit 
  3757                           	global	?_main
  3758  0072                     ?_main:	; 0 bytes @ 0x0
  3759                           	global	?_isr
  3760  0072                     ?_isr:	; 0 bytes @ 0x0
  3761                           	global	?_litterlanguage_start
  3762  0072                     ?_litterlanguage_start:	; 0 bytes @ 0x0
  3763                           	global	?_litterlanguage_pause
  3764  0072                     ?_litterlanguage_pause:	; 0 bytes @ 0x0
  3765                           	global	?_litterlanguage_stop
  3766  0072                     ?_litterlanguage_stop:	; 0 bytes @ 0x0
  3767                           	global	?_waterdetection_event
  3768  0072                     ?_waterdetection_event:	; 0 bytes @ 0x0
  3769                           	global	?_heatsensor_event
  3770  0072                     ?_heatsensor_event:	; 0 bytes @ 0x0
  3771                           	global	?_catsensor_event
  3772  0072                     ?_catsensor_event:	; 0 bytes @ 0x0
  3773                           	global	?_catgenie_init
  3774  0072                     ?_catgenie_init:	; 1 bytes @ 0x0
  3775                           	global	?_eeprom_read
  3776  0072                     ?_eeprom_read:	; 1 bytes @ 0x0
  3777                           	global	?_water_detected
  3778  0072                     ?_water_detected:	; 1 bytes @ 0x0
  3779                           	global	?_water_filling
  3780  0072                     ?_water_filling:	; 1 bytes @ 0x0
  3781                           	global	?_get_Pump
  3782  0072                     ?_get_Pump:	; 1 bytes @ 0x0
  3783                           	global	?_get_instruction
  3784  0072                     ?_get_instruction:	; 1 bytes @ 0x0
  3785                           	global	?_get_Bowl
  3786  0072                     ?_get_Bowl:	; 1 bytes @ 0x0
  3787                           	global	?_get_Arm
  3788  0072                     ?_get_Arm:	; 1 bytes @ 0x0
  3789                           	global	?_get_Dosage
  3790  0072                     ?_get_Dosage:	; 1 bytes @ 0x0
  3791                           	global	?_get_Dryer
  3792  0072                     ?_get_Dryer:	; 1 bytes @ 0x0
  3793                           	global	?_romwashprogram_getins
  3794  0072                     ?_romwashprogram_getins:	; 1 bytes @ 0x0
  3795                           	global	?_readch
  3796  0072                     ?_readch:	; 1 bytes @ 0x0
  3797                           	global	?_litterlanguage_running
  3798  0072                     ?_litterlanguage_running:	; 1 bytes @ 0x0
  3799                           	global	?_litterlanguage_paused
  3800  0072                     ?_litterlanguage_paused:	; 1 bytes @ 0x0
  3801  0072                     	ds	7
  3802                           	global	_serial_rx_isr$22355
  3803  0079                     _serial_rx_isr$22355:	; 2 bytes @ 0x7
  3804  0079                     	ds	2
  3805                           	global	??_isr
  3806  007B                     ??_isr:	; 0 bytes @ 0x9
  3807  007B                     	ds	2
  3808                           	global	isr@temp
  3809  007D                     isr@temp:	; 1 bytes @ 0xB
  3810  007D                     	ds	1
  3811                           psect	cstackBANK0,class=BANK0,space=1
  3812                           global __pcstackBANK0
  3813  0021                     __pcstackBANK0:
  3814                           	global	??_timer_init
  3815  0021                     ??_timer_init:	; 0 bytes @ 0x0
  3816                           	global	??_catsensor_init
  3817  0021                     ??_catsensor_init:	; 0 bytes @ 0x0
  3818                           	global	??_water_init
  3819  0021                     ??_water_init:	; 0 bytes @ 0x0
  3820                           	global	??_interrupt_init
  3821  0021                     ??_interrupt_init:	; 0 bytes @ 0x0
  3822                           	global	??_eeprom_read
  3823  0021                     ??_eeprom_read:	; 0 bytes @ 0x0
  3824                           	global	??_water_detected
  3825  0021                     ??_water_detected:	; 0 bytes @ 0x0
  3826                           	global	??_water_filling
  3827  0021                     ??_water_filling:	; 0 bytes @ 0x0
  3828                           	global	??_get_Pump
  3829  0021                     ??_get_Pump:	; 0 bytes @ 0x0
  3830                           	global	??_set_Dosage
  3831  0021                     ??_set_Dosage:	; 0 bytes @ 0x0
  3832                           	global	??_get_Bowl
  3833  0021                     ??_get_Bowl:	; 0 bytes @ 0x0
  3834                           	global	??_set_Bowl
  3835  0021                     ??_set_Bowl:	; 0 bytes @ 0x0
  3836                           	global	??_get_Arm
  3837  0021                     ??_get_Arm:	; 0 bytes @ 0x0
  3838                           	global	??_set_Arm
  3839  0021                     ??_set_Arm:	; 0 bytes @ 0x0
  3840                           	global	??_water_fill
  3841  0021                     ??_water_fill:	; 0 bytes @ 0x0
  3842                           	global	??_get_Dosage
  3843  0021                     ??_get_Dosage:	; 0 bytes @ 0x0
  3844                           	global	??_set_Pump
  3845  0021                     ??_set_Pump:	; 0 bytes @ 0x0
  3846                           	global	??_get_Dryer
  3847  0021                     ??_get_Dryer:	; 0 bytes @ 0x0
  3848                           	global	??_set_Dryer
  3849  0021                     ??_set_Dryer:	; 0 bytes @ 0x0
  3850                           	global	?_gettimestamp
  3851  0021                     ?_gettimestamp:	; 0 bytes @ 0x0
  3852                           	global	?_romwashprogram_reqins
  3853  0021                     ?_romwashprogram_reqins:	; 0 bytes @ 0x0
  3854                           	global	??_romwashprogram_getins
  3855  0021                     ??_romwashprogram_getins:	; 0 bytes @ 0x0
  3856                           	global	??_setup_long
  3857  0021                     ??_setup_long:	; 0 bytes @ 0x0
  3858                           	global	?_set_LED
  3859  0021                     ?_set_LED:	; 0 bytes @ 0x0
  3860                           	global	?_postponetimeout
  3861  0021                     ?_postponetimeout:	; 0 bytes @ 0x0
  3862                           	global	??_putch
  3863  0021                     ??_putch:	; 0 bytes @ 0x0
  3864                           	global	??_readch
  3865  0021                     ??_readch:	; 0 bytes @ 0x0
  3866                           	global	??_isdigit
  3867  0021                     ??_isdigit:	; 0 bytes @ 0x0
  3868                           	global	??_litterlanguage_running
  3869  0021                     ??_litterlanguage_running:	; 0 bytes @ 0x0
  3870                           	global	??_litterlanguage_paused
  3871  0021                     ??_litterlanguage_paused:	; 0 bytes @ 0x0
  3872                           	global	?_watersensor_event
  3873  0021                     ?_watersensor_event:	; 0 bytes @ 0x0
  3874                           	global	??_heatsensor_event
  3875  0021                     ??_heatsensor_event:	; 0 bytes @ 0x0
  3876                           	global	?_eeprom_write
  3877  0021                     ?_eeprom_write:	; 1 bytes @ 0x0
  3878                           	global	?_memcpy
  3879  0021                     ?_memcpy:	; 1 bytes @ 0x0
  3880                           	global	?___bmul
  3881  0021                     ?___bmul:	; 1 bytes @ 0x0
  3882                           	global	?_strlen
  3883  0021                     ?_strlen:	; 2 bytes @ 0x0
  3884                           	global	?___wmul
  3885  0021                     ?___wmul:	; 2 bytes @ 0x0
  3886                           	global	?___lwdiv
  3887  0021                     ?___lwdiv:	; 2 bytes @ 0x0
  3888                           	global	?_timestampdiff
  3889  0021                     ?_timestampdiff:	; 4 bytes @ 0x0
  3890                           	global	?___lmul
  3891  0021                     ?___lmul:	; 4 bytes @ 0x0
  3892                           	global	?___lldiv
  3893  0021                     ?___lldiv:	; 4 bytes @ 0x0
  3894                           	global	set_LED@on
  3895  0021                     set_LED@on:	; 1 bytes @ 0x0
  3896                           	global	eeprom_write@value
  3897  0021                     eeprom_write@value:	; 1 bytes @ 0x0
  3898                           	global	_isdigit$29805
  3899  0021                     _isdigit$29805:	; 1 bytes @ 0x0
  3900                           	global	memcpy@s1
  3901  0021                     memcpy@s1:	; 1 bytes @ 0x0
  3902                           	global	___bmul@multiplicand
  3903  0021                     ___bmul@multiplicand:	; 1 bytes @ 0x0
  3904                           	global	watersensor_event@reflectionquality
  3905  0021                     watersensor_event@reflectionquality:	; 2 bytes @ 0x0
  3906                           	global	romwashprogram_reqins@address
  3907  0021                     romwashprogram_reqins@address:	; 2 bytes @ 0x0
  3908                           	global	postponetimeout@timer_p
  3909  0021                     postponetimeout@timer_p:	; 2 bytes @ 0x0
  3910                           	global	gettimestamp@ticks
  3911  0021                     gettimestamp@ticks:	; 2 bytes @ 0x0
  3912                           	global	timestampdiff@early_p
  3913  0021                     timestampdiff@early_p:	; 2 bytes @ 0x0
  3914                           	global	___wmul@multiplier
  3915  0021                     ___wmul@multiplier:	; 2 bytes @ 0x0
  3916                           	global	___lwdiv@divisor
  3917  0021                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  3918                           	global	___lmul@multiplier
  3919  0021                     ___lmul@multiplier:	; 4 bytes @ 0x0
  3920                           	global	___lldiv@divisor
  3921  0021                     ___lldiv@divisor:	; 4 bytes @ 0x0
  3922  0021                     	ds	1
  3923                           	global	??_eeprom_write
  3924  0022                     ??_eeprom_write:	; 0 bytes @ 0x1
  3925                           	global	??_set_LED
  3926  0022                     ??_set_LED:	; 0 bytes @ 0x1
  3927                           	global	??___bmul
  3928  0022                     ??___bmul:	; 0 bytes @ 0x1
  3929                           	global	heatsensor_event@detected
  3930  0022                     heatsensor_event@detected:	; 1 bytes @ 0x1
  3931                           	global	set_Bowl@mode
  3932  0022                     set_Bowl@mode:	; 1 bytes @ 0x1
  3933                           	global	set_Arm@mode
  3934  0022                     set_Arm@mode:	; 1 bytes @ 0x1
  3935                           	global	set_Dosage@on
  3936  0022                     set_Dosage@on:	; 1 bytes @ 0x1
  3937                           	global	set_Pump@on
  3938  0022                     set_Pump@on:	; 1 bytes @ 0x1
  3939                           	global	set_Dryer@on
  3940  0022                     set_Dryer@on:	; 1 bytes @ 0x1
  3941                           	global	putch@ch
  3942  0022                     putch@ch:	; 1 bytes @ 0x1
  3943                           	global	water_init@mask
  3944  0022                     water_init@mask:	; 1 bytes @ 0x1
  3945                           	global	water_fill@fill
  3946  0022                     water_fill@fill:	; 1 bytes @ 0x1
  3947                           	global	isdigit@c
  3948  0022                     isdigit@c:	; 1 bytes @ 0x1
  3949                           	global	memcpy@n
  3950  0022                     memcpy@n:	; 2 bytes @ 0x1
  3951  0022                     	ds	1
  3952                           	global	?_req_instruction
  3953  0023                     ?_req_instruction:	; 0 bytes @ 0x2
  3954                           	global	??_gettimestamp
  3955  0023                     ??_gettimestamp:	; 0 bytes @ 0x2
  3956                           	global	??_romwashprogram_reqins
  3957  0023                     ??_romwashprogram_reqins:	; 0 bytes @ 0x2
  3958                           	global	??_strlen
  3959  0023                     ??_strlen:	; 0 bytes @ 0x2
  3960                           	global	??_watersensor_event
  3961  0023                     ??_watersensor_event:	; 0 bytes @ 0x2
  3962                           	global	set_LED@led
  3963  0023                     set_LED@led:	; 1 bytes @ 0x2
  3964                           	global	putch@dummy
  3965  0023                     putch@dummy:	; 1 bytes @ 0x2
  3966                           	global	readch@ch
  3967  0023                     readch@ch:	; 1 bytes @ 0x2
  3968                           	global	timestampdiff@late_p
  3969  0023                     timestampdiff@late_p:	; 1 bytes @ 0x2
  3970                           	global	water_init@channel
  3971  0023                     water_init@channel:	; 1 bytes @ 0x2
  3972                           	global	___bmul@product
  3973  0023                     ___bmul@product:	; 1 bytes @ 0x2
  3974                           	global	req_instruction@instruction
  3975  0023                     req_instruction@instruction:	; 2 bytes @ 0x2
  3976                           	global	___wmul@multiplicand
  3977  0023                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  3978                           	global	___lwdiv@dividend
  3979  0023                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  3980                           	global	postponetimeout@postpone
  3981  0023                     postponetimeout@postpone:	; 4 bytes @ 0x2
  3982  0023                     	ds	1
  3983                           	global	??_memcpy
  3984  0024                     ??_memcpy:	; 0 bytes @ 0x3
  3985                           	global	romwashprogram_getins@instruction
  3986  0024                     romwashprogram_getins@instruction:	; 1 bytes @ 0x3
  3987                           	global	set_LED@latch
  3988  0024                     set_LED@latch:	; 1 bytes @ 0x3
  3989                           	global	readch@result
  3990  0024                     readch@result:	; 1 bytes @ 0x3
  3991                           	global	eeprom_read@addr
  3992  0024                     eeprom_read@addr:	; 1 bytes @ 0x3
  3993                           	global	eeprom_write@addr
  3994  0024                     eeprom_write@addr:	; 1 bytes @ 0x3
  3995                           	global	___bmul@multiplier
  3996  0024                     ___bmul@multiplier:	; 1 bytes @ 0x3
  3997  0024                     	ds	1
  3998                           	global	??_catgenie_init
  3999  0025                     ??_catgenie_init:	; 0 bytes @ 0x4
  4000                           	global	?_timeoutnever
  4001  0025                     ?_timeoutnever:	; 0 bytes @ 0x4
  4002                           	global	??_req_instruction
  4003  0025                     ??_req_instruction:	; 0 bytes @ 0x4
  4004                           	global	??_get_instruction
  4005  0025                     ??_get_instruction:	; 0 bytes @ 0x4
  4006                           	global	??_timestampdiff
  4007  0025                     ??_timestampdiff:	; 0 bytes @ 0x4
  4008                           	global	?_timeoutnow
  4009  0025                     ?_timeoutnow:	; 0 bytes @ 0x4
  4010                           	global	??_both_long
  4011  0025                     ??_both_long:	; 0 bytes @ 0x4
  4012                           	global	??___wmul
  4013  0025                     ??___wmul:	; 0 bytes @ 0x4
  4014                           	global	??___lwdiv
  4015  0025                     ??___lwdiv:	; 0 bytes @ 0x4
  4016                           	global	?_strncmp
  4017  0025                     ?_strncmp:	; 2 bytes @ 0x4
  4018                           	global	get_instruction@instruction
  4019  0025                     get_instruction@instruction:	; 1 bytes @ 0x4
  4020                           	global	set_LED@mask
  4021  0025                     set_LED@mask:	; 1 bytes @ 0x4
  4022                           	global	memcpy@d1
  4023  0025                     memcpy@d1:	; 1 bytes @ 0x4
  4024                           	global	timeoutnow@timer_p
  4025  0025                     timeoutnow@timer_p:	; 2 bytes @ 0x4
  4026                           	global	timeoutnever@timer_p
  4027  0025                     timeoutnever@timer_p:	; 2 bytes @ 0x4
  4028                           	global	strncmp@s2
  4029  0025                     strncmp@s2:	; 2 bytes @ 0x4
  4030                           	global	___wmul@product
  4031  0025                     ___wmul@product:	; 2 bytes @ 0x4
  4032                           	global	___lmul@multiplicand
  4033  0025                     ___lmul@multiplicand:	; 4 bytes @ 0x4
  4034                           	global	___lldiv@dividend
  4035  0025                     ___lldiv@dividend:	; 4 bytes @ 0x4
  4036  0025                     	ds	1
  4037                           	global	memcpy@d
  4038  0026                     memcpy@d:	; 1 bytes @ 0x5
  4039                           	global	___lwdiv@counter
  4040  0026                     ___lwdiv@counter:	; 1 bytes @ 0x5
  4041                           	global	gettimestamp@bytes
  4042  0026                     gettimestamp@bytes:	; 2 bytes @ 0x5
  4043  0026                     	ds	1
  4044                           	global	??_timeoutnever
  4045  0027                     ??_timeoutnever:	; 0 bytes @ 0x6
  4046                           	global	??_timeoutnow
  4047  0027                     ??_timeoutnow:	; 0 bytes @ 0x6
  4048                           	global	??_postponetimeout
  4049  0027                     ??_postponetimeout:	; 0 bytes @ 0x6
  4050                           	global	memcpy@s
  4051  0027                     memcpy@s:	; 1 bytes @ 0x6
  4052                           	global	strncmp@len
  4053  0027                     strncmp@len:	; 2 bytes @ 0x6
  4054                           	global	___lwdiv@quotient
  4055  0027                     ___lwdiv@quotient:	; 2 bytes @ 0x6
  4056  0027                     	ds	1
  4057                           	global	catgenie_init@mask
  4058  0028                     catgenie_init@mask:	; 1 bytes @ 0x7
  4059                           	global	gettimestamp@temp
  4060  0028                     gettimestamp@temp:	; 1 bytes @ 0x7
  4061  0028                     	ds	1
  4062                           	global	?_set_pacer
  4063  0029                     ?_set_pacer:	; 0 bytes @ 0x8
  4064                           	global	??_strncmp
  4065  0029                     ??_strncmp:	; 0 bytes @ 0x8
  4066                           	global	??___lmul
  4067  0029                     ??___lmul:	; 0 bytes @ 0x8
  4068                           	global	??___lldiv
  4069  0029                     ??___lldiv:	; 0 bytes @ 0x8
  4070                           	global	?_timeoutexpired
  4071  0029                     ?_timeoutexpired:	; 1 bytes @ 0x8
  4072                           	global	?___lwmod
  4073  0029                     ?___lwmod:	; 2 bytes @ 0x8
  4074                           	global	catgenie_init@temp
  4075  0029                     catgenie_init@temp:	; 1 bytes @ 0x8
  4076                           	global	set_pacer@pattern
  4077  0029                     set_pacer@pattern:	; 1 bytes @ 0x8
  4078                           	global	strlen@s
  4079  0029                     strlen@s:	; 1 bytes @ 0x8
  4080                           	global	timeoutexpired@timer_p
  4081  0029                     timeoutexpired@timer_p:	; 2 bytes @ 0x8
  4082                           	global	___lwmod@divisor
  4083  0029                     ___lwmod@divisor:	; 2 bytes @ 0x8
  4084                           	global	___lmul@product
  4085  0029                     ___lmul@product:	; 4 bytes @ 0x8
  4086  0029                     	ds	1
  4087                           	global	set_pacer@repeat
  4088  002A                     set_pacer@repeat:	; 1 bytes @ 0x9
  4089                           	global	strlen@cp
  4090  002A                     strlen@cp:	; 1 bytes @ 0x9
  4091                           	global	___lldiv@quotient
  4092  002A                     ___lldiv@quotient:	; 4 bytes @ 0x9
  4093  002A                     	ds	1
  4094                           	global	??_timeoutexpired
  4095  002B                     ??_timeoutexpired:	; 0 bytes @ 0xA
  4096                           	global	??_set_pacer
  4097  002B                     ??_set_pacer:	; 0 bytes @ 0xA
  4098                           	global	strncmp@s1
  4099  002B                     strncmp@s1:	; 1 bytes @ 0xA
  4100                           	global	___lwmod@dividend
  4101  002B                     ___lwmod@dividend:	; 2 bytes @ 0xA
  4102                           	global	postponetimeout@tempLongTicks
  4103  002B                     postponetimeout@tempLongTicks:	; 4 bytes @ 0xA
  4104  002B                     	ds	1
  4105                           	global	?_cmd2index
  4106  002C                     ?_cmd2index:	; 2 bytes @ 0xB
  4107  002C                     	ds	1
  4108                           	global	?_settimeout
  4109  002D                     ?_settimeout:	; 0 bytes @ 0xC
  4110                           	global	??___lwmod
  4111  002D                     ??___lwmod:	; 0 bytes @ 0xC
  4112                           	global	set_pacer@pacer
  4113  002D                     set_pacer@pacer:	; 1 bytes @ 0xC
  4114                           	global	settimeout@timer_p
  4115  002D                     settimeout@timer_p:	; 2 bytes @ 0xC
  4116                           	global	timestampdiff@diff
  4117  002D                     timestampdiff@diff:	; 4 bytes @ 0xC
  4118  002D                     	ds	1
  4119                           	global	??_key_Beep
  4120  002E                     ??_key_Beep:	; 0 bytes @ 0xD
  4121                           	global	?_set_Beeper
  4122  002E                     ?_set_Beeper:	; 0 bytes @ 0xD
  4123                           	global	?_set_LED_Error
  4124  002E                     ?_set_LED_Error:	; 0 bytes @ 0xD
  4125                           	global	?_set_LED_Cartridge
  4126  002E                     ?_set_LED_Cartridge:	; 0 bytes @ 0xD
  4127                           	global	?_set_LED_Cat
  4128  002E                     ?_set_LED_Cat:	; 0 bytes @ 0xD
  4129                           	global	?_set_LED_Locked
  4130  002E                     ?_set_LED_Locked:	; 0 bytes @ 0xD
  4131                           	global	??_cmd2index
  4132  002E                     ??_cmd2index:	; 0 bytes @ 0xD
  4133                           	global	set_LED_Error@repeat
  4134  002E                     set_LED_Error@repeat:	; 1 bytes @ 0xD
  4135                           	global	set_LED_Locked@repeat
  4136  002E                     set_LED_Locked@repeat:	; 1 bytes @ 0xD
  4137                           	global	set_LED_Cartridge@repeat
  4138  002E                     set_LED_Cartridge@repeat:	; 1 bytes @ 0xD
  4139                           	global	set_LED_Cat@repeat
  4140  002E                     set_LED_Cat@repeat:	; 1 bytes @ 0xD
  4141                           	global	set_Beeper@repeat
  4142  002E                     set_Beeper@repeat:	; 1 bytes @ 0xD
  4143                           	global	___lwmod@counter
  4144  002E                     ___lwmod@counter:	; 1 bytes @ 0xD
  4145                           	global	___lldiv@counter
  4146  002E                     ___lldiv@counter:	; 1 bytes @ 0xD
  4147  002E                     	ds	1
  4148                           	global	?_serial_init
  4149  002F                     ?_serial_init:	; 0 bytes @ 0xE
  4150                           	global	??_set_Beeper
  4151  002F                     ??_set_Beeper:	; 0 bytes @ 0xE
  4152                           	global	??_set_LED_Error
  4153  002F                     ??_set_LED_Error:	; 0 bytes @ 0xE
  4154                           	global	??_set_LED_Cartridge
  4155  002F                     ??_set_LED_Cartridge:	; 0 bytes @ 0xE
  4156                           	global	??_set_LED_Cat
  4157  002F                     ??_set_LED_Cat:	; 0 bytes @ 0xE
  4158                           	global	??_set_LED_Locked
  4159  002F                     ??_set_LED_Locked:	; 0 bytes @ 0xE
  4160                           	global	?_printf
  4161  002F                     ?_printf:	; 2 bytes @ 0xE
  4162                           	global	cmd2index@cmd
  4163  002F                     cmd2index@cmd:	; 1 bytes @ 0xE
  4164                           	global	postponetimeout@longshort
  4165  002F                     postponetimeout@longshort:	; 2 bytes @ 0xE
  4166                           	global	printf@f
  4167  002F                     printf@f:	; 2 bytes @ 0xE
  4168                           	global	serial_init@bitrate
  4169  002F                     serial_init@bitrate:	; 4 bytes @ 0xE
  4170                           	global	settimeout@timout
  4171  002F                     settimeout@timout:	; 4 bytes @ 0xE
  4172                           	global	key_Beep@pattern
  4173  002F                     key_Beep@pattern:	; 5 bytes @ 0xE
  4174  002F                     	ds	1
  4175                           	global	cmd2index@index
  4176  0030                     cmd2index@index:	; 2 bytes @ 0xF
  4177  0030                     	ds	1
  4178                           	global	set_LED_Error@pattern
  4179  0031                     set_LED_Error@pattern:	; 1 bytes @ 0x10
  4180                           	global	set_LED_Locked@pattern
  4181  0031                     set_LED_Locked@pattern:	; 1 bytes @ 0x10
  4182                           	global	set_LED_Cartridge@pattern
  4183  0031                     set_LED_Cartridge@pattern:	; 1 bytes @ 0x10
  4184                           	global	set_LED_Cat@pattern
  4185  0031                     set_LED_Cat@pattern:	; 1 bytes @ 0x10
  4186                           	global	set_Beeper@pattern
  4187  0031                     set_Beeper@pattern:	; 1 bytes @ 0x10
  4188                           	global	timestampdiff@early_longshort
  4189  0031                     timestampdiff@early_longshort:	; 2 bytes @ 0x10
  4190                           	global	timeoutexpired@currentTime
  4191  0031                     timeoutexpired@currentTime:	; 6 bytes @ 0x10
  4192  0031                     	ds	1
  4193                           	global	??_update_display
  4194  0032                     ??_update_display:	; 0 bytes @ 0x11
  4195  0032                     	ds	1
  4196                           	global	??_settimeout
  4197  0033                     ??_settimeout:	; 0 bytes @ 0x12
  4198                           	global	serial_init@flow
  4199  0033                     serial_init@flow:	; 1 bytes @ 0x12
  4200                           	global	timestampdiff@late_longshort
  4201  0033                     timestampdiff@late_longshort:	; 1 bytes @ 0x12
  4202  0033                     	ds	1
  4203                           	global	??_serial_init
  4204  0034                     ??_serial_init:	; 0 bytes @ 0x13
  4205                           	global	key_Beep@beeps
  4206  0034                     key_Beep@beeps:	; 1 bytes @ 0x13
  4207  0034                     	ds	3
  4208                           	global	??_rtc_work
  4209  0037                     ??_rtc_work:	; 0 bytes @ 0x16
  4210                           	global	??_wait_instruction
  4211  0037                     ??_wait_instruction:	; 0 bytes @ 0x16
  4212                           	global	settimeout@tempLongTicks
  4213  0037                     settimeout@tempLongTicks:	; 4 bytes @ 0x16
  4214  0037                     	ds	2
  4215                           	global	??_printf
  4216  0039                     ??_printf:	; 0 bytes @ 0x18
  4217  0039                     	ds	2
  4218                           	global	settimeout@longshort
  4219  003B                     settimeout@longshort:	; 2 bytes @ 0x1A
  4220  003B                     	ds	2
  4221                           	global	??_rtc_init
  4222  003D                     ??_rtc_init:	; 0 bytes @ 0x1C
  4223                           	global	??_update_autotimer
  4224  003D                     ??_update_autotimer:	; 0 bytes @ 0x1C
  4225                           	global	??_both_short
  4226  003D                     ??_both_short:	; 0 bytes @ 0x1C
  4227                           	global	?_process_button
  4228  003D                     ?_process_button:	; 0 bytes @ 0x1C
  4229                           	global	process_button@down
  4230  003D                     process_button@down:	; 1 bytes @ 0x1C
  4231                           	global	update_autotimer@mode
  4232  003D                     update_autotimer@mode:	; 1 bytes @ 0x1C
  4233                           	global	rtc_init@flags
  4234  003D                     rtc_init@flags:	; 1 bytes @ 0x1C
  4235                           	global	printf@ap
  4236  003D                     printf@ap:	; 1 bytes @ 0x1C
  4237  003D                     	ds	1
  4238                           	global	??_process_button
  4239  003E                     ??_process_button:	; 0 bytes @ 0x1D
  4240                           	global	printf@flag
  4241  003E                     printf@flag:	; 1 bytes @ 0x1D
  4242  003E                     	ds	1
  4243                           	global	process_button@button_mask
  4244  003F                     process_button@button_mask:	; 1 bytes @ 0x1E
  4245                           	global	printf@width
  4246  003F                     printf@width:	; 2 bytes @ 0x1E
  4247  003F                     	ds	1
  4248                           	global	?_setupbutton_event
  4249  0040                     ?_setupbutton_event:	; 0 bytes @ 0x1F
  4250                           	global	startbutton_event@up
  4251  0040                     startbutton_event@up:	; 1 bytes @ 0x1F
  4252                           	global	setupbutton_event@up
  4253  0040                     setupbutton_event@up:	; 1 bytes @ 0x1F
  4254                           	global	serial_init@divider
  4255  0040                     serial_init@divider:	; 4 bytes @ 0x1F
  4256  0040                     	ds	1
  4257                           	global	??_startbutton_event
  4258  0041                     ??_startbutton_event:	; 0 bytes @ 0x20
  4259                           	global	??_setupbutton_event
  4260  0041                     ??_setupbutton_event:	; 0 bytes @ 0x20
  4261                           	global	printf@prec
  4262  0041                     printf@prec:	; 1 bytes @ 0x20
  4263  0041                     	ds	1
  4264                           	global	??_catgenie_work
  4265  0042                     ??_catgenie_work:	; 0 bytes @ 0x21
  4266                           	global	printf@c
  4267  0042                     printf@c:	; 1 bytes @ 0x21
  4268  0042                     	ds	1
  4269                           	global	printf@_val
  4270  0043                     printf@_val:	; 4 bytes @ 0x22
  4271  0043                     	ds	4
  4272                           	global	??_cmdline_init
  4273  0047                     ??_cmdline_init:	; 0 bytes @ 0x26
  4274                           	global	??_printtime
  4275  0047                     ??_printtime:	; 0 bytes @ 0x26
  4276                           	global	??_set_mode
  4277  0047                     ??_set_mode:	; 0 bytes @ 0x26
  4278                           	global	?_echo
  4279  0047                     ?_echo:	; 2 bytes @ 0x26
  4280                           	global	echo@argc
  4281  0047                     echo@argc:	; 2 bytes @ 0x26
  4282                           	global	help@argc
  4283  0047                     help@argc:	; 2 bytes @ 0x26
  4284  0047                     	ds	1
  4285                           	global	_catgenie_work$30516
  4286  0048                     _catgenie_work$30516:	; 1 bytes @ 0x27
  4287  0048                     	ds	1
  4288                           	global	set_mode@mode
  4289  0049                     set_mode@mode:	; 1 bytes @ 0x28
  4290                           	global	catgenie_work@mask
  4291  0049                     catgenie_work@mask:	; 1 bytes @ 0x28
  4292                           	global	echo@argv
  4293  0049                     echo@argv:	; 1 bytes @ 0x28
  4294                           	global	help@argv
  4295  0049                     help@argv:	; 1 bytes @ 0x28
  4296  0049                     	ds	1
  4297                           	global	??_help
  4298  004A                     ??_help:	; 0 bytes @ 0x29
  4299                           	global	??_echo
  4300  004A                     ??_echo:	; 0 bytes @ 0x29
  4301                           	global	??_userinterface_init
  4302  004A                     ??_userinterface_init:	; 0 bytes @ 0x29
  4303                           	global	??_setup_short
  4304  004A                     ??_setup_short:	; 0 bytes @ 0x29
  4305                           	global	catgenie_work@status
  4306  004A                     catgenie_work@status:	; 1 bytes @ 0x29
  4307                           	global	_echo$17766
  4308  004A                     _echo$17766:	; 2 bytes @ 0x29
  4309  004A                     	ds	1
  4310                           	global	userinterface_init@flags
  4311  004B                     userinterface_init@flags:	; 1 bytes @ 0x2A
  4312                           	global	catgenie_work@tempstate
  4313  004B                     catgenie_work@tempstate:	; 1 bytes @ 0x2A
  4314                           	global	_setup_short$10743
  4315  004B                     _setup_short$10743:	; 2 bytes @ 0x2A
  4316                           	global	_help$30527
  4317  004B                     _help$30527:	; 2 bytes @ 0x2A
  4318  004B                     	ds	1
  4319                           	global	catgenie_work@temp
  4320  004C                     catgenie_work@temp:	; 1 bytes @ 0x2B
  4321  004C                     	ds	1
  4322                           	global	help@index
  4323  004D                     help@index:	; 2 bytes @ 0x2C
  4324  004D                     	ds	2
  4325                           	global	??_litterlanguage_cleanup
  4326  004F                     ??_litterlanguage_cleanup:	; 0 bytes @ 0x2E
  4327                           	global	??_proc_line
  4328  004F                     ??_proc_line:	; 0 bytes @ 0x2E
  4329                           	global	??_litterlanguage_start
  4330  004F                     ??_litterlanguage_start:	; 0 bytes @ 0x2E
  4331                           	global	??_litterlanguage_pause
  4332  004F                     ??_litterlanguage_pause:	; 0 bytes @ 0x2E
  4333                           	global	??_litterlanguage_stop
  4334  004F                     ??_litterlanguage_stop:	; 0 bytes @ 0x2E
  4335                           	global	??_waterdetection_event
  4336  004F                     ??_waterdetection_event:	; 0 bytes @ 0x2E
  4337                           	global	??_catsensor_event
  4338  004F                     ??_catsensor_event:	; 0 bytes @ 0x2E
  4339                           	global	_litterlanguage_start$5891
  4340  004F                     _litterlanguage_start$5891:	; 2 bytes @ 0x2E
  4341                           	global	_litterlanguage_cleanup$5944
  4342  004F                     _litterlanguage_cleanup$5944:	; 2 bytes @ 0x2E
  4343                           	global	_catsensor_event$10731
  4344  004F                     _catsensor_event$10731:	; 2 bytes @ 0x2E
  4345  004F                     	ds	1
  4346                           	global	litterlanguage_pause@pause
  4347  0050                     litterlanguage_pause@pause:	; 1 bytes @ 0x2F
  4348                           	global	_waterdetection_event$5930
  4349  0050                     _waterdetection_event$5930:	; 2 bytes @ 0x2F
  4350  0050                     	ds	1
  4351                           	global	litterlanguage_start@wet
  4352  0051                     litterlanguage_start@wet:	; 1 bytes @ 0x30
  4353                           	global	litterlanguage_cleanup@wet
  4354  0051                     litterlanguage_cleanup@wet:	; 1 bytes @ 0x30
  4355                           	global	catsensor_event@detected
  4356  0051                     catsensor_event@detected:	; 1 bytes @ 0x30
  4357                           	global	proc_line@argv
  4358  0051                     proc_line@argv:	; 4 bytes @ 0x30
  4359                           	global	litterlanguage_pause@timer_now
  4360  0051                     litterlanguage_pause@timer_now:	; 6 bytes @ 0x30
  4361  0051                     	ds	1
  4362                           	global	??_litterlanguage_init
  4363  0052                     ??_litterlanguage_init:	; 0 bytes @ 0x31
  4364                           	global	??_catsensor_work
  4365  0052                     ??_catsensor_work:	; 0 bytes @ 0x31
  4366                           	global	??_start_long
  4367  0052                     ??_start_long:	; 0 bytes @ 0x31
  4368                           	global	waterdetection_event@detected
  4369  0052                     waterdetection_event@detected:	; 1 bytes @ 0x31
  4370  0052                     	ds	1
  4371                           	global	??_water_work
  4372  0053                     ??_water_work:	; 0 bytes @ 0x32
  4373  0053                     	ds	1
  4374                           	global	litterlanguage_init@flags
  4375  0054                     litterlanguage_init@flags:	; 1 bytes @ 0x33
  4376  0054                     	ds	1
  4377                           	global	_proc_line$30521
  4378  0055                     _proc_line$30521:	; 1 bytes @ 0x34
  4379  0055                     	ds	1
  4380                           	global	proc_line@index
  4381  0056                     proc_line@index:	; 2 bytes @ 0x35
  4382  0056                     	ds	1
  4383                           	global	?_litterlanguage_event
  4384  0057                     ?_litterlanguage_event:	; 0 bytes @ 0x36
  4385                           	global	??_start_short
  4386  0057                     ??_start_short:	; 0 bytes @ 0x36
  4387                           	global	litterlanguage_event@argument
  4388  0057                     litterlanguage_event@argument:	; 1 bytes @ 0x36
  4389  0057                     	ds	1
  4390                           	global	??_userinterface_work
  4391  0058                     ??_userinterface_work:	; 0 bytes @ 0x37
  4392                           	global	??_litterlanguage_event
  4393  0058                     ??_litterlanguage_event:	; 0 bytes @ 0x37
  4394                           	global	litterlanguage_event@event
  4395  0058                     litterlanguage_event@event:	; 1 bytes @ 0x37
  4396                           	global	proc_line@argc
  4397  0058                     proc_line@argc:	; 2 bytes @ 0x37
  4398  0058                     	ds	1
  4399                           	global	??_exe_instruction
  4400  0059                     ??_exe_instruction:	; 0 bytes @ 0x38
  4401  0059                     	ds	1
  4402                           	global	??_litterlanguage_work
  4403  005A                     ??_litterlanguage_work:	; 0 bytes @ 0x39
  4404                           	global	userinterface_work@update
  4405  005A                     userinterface_work@update:	; 1 bytes @ 0x39
  4406                           	global	proc_line@len
  4407  005A                     proc_line@len:	; 2 bytes @ 0x39
  4408  005A                     	ds	2
  4409                           	global	proc_line@line
  4410  005C                     proc_line@line:	; 1 bytes @ 0x3B
  4411                           	global	_litterlanguage_work$5881
  4412  005C                     _litterlanguage_work$5881:	; 2 bytes @ 0x3B
  4413  005C                     	ds	1
  4414                           	global	??_proc_char
  4415  005D                     ??_proc_char:	; 0 bytes @ 0x3C
  4416  005D                     	ds	1
  4417                           	global	proc_char@rxd
  4418  005E                     proc_char@rxd:	; 1 bytes @ 0x3D
  4419  005E                     	ds	1
  4420                           	global	??_cmdline_work
  4421  005F                     ??_cmdline_work:	; 0 bytes @ 0x3E
  4422                           	global	cmdline_work@rxd
  4423  005F                     cmdline_work@rxd:	; 1 bytes @ 0x3E
  4424  005F                     	ds	1
  4425                           	global	??_main
  4426  0060                     ??_main:	; 0 bytes @ 0x3F
  4427  0060                     	ds	1
  4428                           	global	main@flags
  4429  0061                     main@flags:	; 1 bytes @ 0x40
  4430  0061                     	ds	1
  4431 ;;Data sizes: Strings 1041, constant 819, data 127, bss 117, persistent 0 stack 0
  4432 ;;Auto spaces:   Size  Autos    Used
  4433 ;; COMMON          14     12      14
  4434 ;; BANK0           79     65      79
  4435 ;; BANK1           80     38      80
  4436 ;; BANK2           80      0      80
  4437 ;; BANK3           80      0      49
  4438 ;; BANK4           80      0      60
  4439 ;; BANK5           80      0       0
  4440 ;; BANK6           80      0       0
  4441 ;; BANK7           80      0       0
  4442 ;; BANK8           80      0       0
  4443 ;; BANK9           80      0       0
  4444 ;; BANK10          80      0       0
  4445 ;; BANK11          80      0       0
  4446 ;; BANK12          48      0       0
  4447                           
  4448 ;;
  4449 ;; Pointer list with targets:
  4450                           
  4451 ;; help$30527	PTR const unsigned char [8] size(2) Largest target is 36
  4452 ;;		 -> commands(CODE[36]), 
  4453 ;;
  4454 ;; proc_line$30521	const PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4455 ;;		 -> Absolute function(), echo(), help(), 
  4456 ;;
  4457 ;; catgenie_work$30516	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4458 ;;		 -> setupbutton_event(), startbutton_event(), 
  4459 ;;
  4460 ;; proc_line$30341	const PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4461 ;;		 -> Absolute function(), echo(), help(), 
  4462 ;;
  4463 ;; catgenie_work$30336	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4464 ;;		 -> setupbutton_event(), startbutton_event(), 
  4465 ;;
  4466 ;; help@argv	PTR PTR unsigned char  size(1) Largest target is 4
  4467 ;;		 -> proc_line@argv(BANK0[4]), 
  4468 ;;
  4469 ;; Absolute function$1	PTR PTR unsigned char  size(1) Largest target is 4
  4470 ;;		 -> proc_line@argv(BANK0[4]), 
  4471 ;;
  4472 ;; help$30245	PTR const unsigned char [8] size(2) Largest target is 36
  4473 ;;		 -> commands(CODE[36]), 
  4474 ;;
  4475 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  4476 ;;
  4477 ;; ?_strncmp	int  size(1) Largest target is 0
  4478 ;;
  4479 ;; S3275$1$1	PTR PTR unsigned char  size(1) Largest target is 4
  4480 ;;		 -> proc_line@argv(BANK0[4]), 
  4481 ;;
  4482 ;; ?_cmd2index	int  size(1) Largest target is 0
  4483 ;;
  4484 ;; ?_strlen	unsigned int  size(1) Largest target is 20
  4485 ;;		 -> linebuffer(BANK3[20]), 
  4486 ;;
  4487 ;; ?_memcpy	PTR void  size(1) Largest target is 2
  4488 ;;		 -> ins_pointer(BANK0[2]), 
  4489 ;;
  4490 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  4491 ;;
  4492 ;; ?___lwmod	unsigned int  size(2) Largest target is 16384
  4493 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), STR_97(CODE[4]), 
  4494 ;;		 -> STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), STR_81(CODE[7]), 
  4495 ;;		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), STR_75(CODE[7]), 
  4496 ;;		 -> STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), STR_70(CODE[4]), 
  4497 ;;		 -> STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), STR_64(CODE[4]), 
  4498 ;;		 -> STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), STR_57(CODE[4]), 
  4499 ;;		 -> STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), STR_50(CODE[4]), 
  4500 ;;		 -> STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4501 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), cleanupprogram(CODE[36]), 
  4502 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), STR_31(CODE[5]), 
  4503 ;;		 -> washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), STR_20(CODE[4]), 
  4504 ;;		 -> STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), commands(CODE[36]), 
  4505 ;;
  4506 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  4507 ;;
  4508 ;; ?___lmul	unsigned long  size(1) Largest target is 0
  4509 ;;
  4510 ;; ?_timestampdiff	unsigned long  size(1) Largest target is 0
  4511 ;;
  4512 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 36
  4513 ;;		 -> STR_107(CODE[4]), STR_106(CODE[3]), commands(CODE[36]), 
  4514 ;;
  4515 ;; strncmp@s1	PTR const unsigned char  size(1) Largest target is 20
  4516 ;;		 -> linebuffer(BANK3[20]), 
  4517 ;;
  4518 ;; strlen@s	PTR const unsigned char  size(1) Largest target is 20
  4519 ;;		 -> linebuffer(BANK3[20]), 
  4520 ;;
  4521 ;; strlen@cp	PTR const unsigned char  size(1) Largest target is 20
  4522 ;;		 -> linebuffer(BANK3[20]), 
  4523 ;;
  4524 ;; memcpy@d1	PTR void  size(1) Largest target is 2
  4525 ;;		 -> ins_pointer(BANK0[2]), 
  4526 ;;
  4527 ;; memcpy@d	PTR unsigned char  size(1) Largest target is 2
  4528 ;;		 -> ins_pointer(BANK0[2]), 
  4529 ;;
  4530 ;; memcpy@s1	PTR const void  size(1) Largest target is 2
  4531 ;;		 -> exe_instruction@temp(BANK1[2]), 
  4532 ;;
  4533 ;; memcpy@s	PTR const unsigned char  size(1) Largest target is 2
  4534 ;;		 -> exe_instruction@temp(BANK1[2]), 
  4535 ;;
  4536 ;; printf@_val._cp	PTR const unsigned char  size(2) Largest target is 16384
  4537 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4538 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4539 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4540 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4541 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4542 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4543 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4544 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4545 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4546 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4547 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4548 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4549 ;;		 -> commands(CODE[36]), 
  4550 ;;
  4551 ;; printf@f	PTR const unsigned char  size(2) Largest target is 24
  4552 ;;		 -> STR_113(CODE[17]), STR_112(CODE[4]), STR_111(CODE[17]), STR_108(CODE[10]), 
  4553 ;;		 -> STR_105(CODE[22]), STR_104(CODE[15]), STR_103(CODE[17]), STR_102(CODE[11]), 
  4554 ;;		 -> STR_101(CODE[14]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[13]), 
  4555 ;;		 -> STR_95(CODE[8]), STR_94(CODE[18]), STR_93(CODE[10]), STR_92(CODE[12]), 
  4556 ;;		 -> STR_91(CODE[20]), STR_90(CODE[2]), STR_89(CODE[18]), STR_88(CODE[22]), 
  4557 ;;		 -> STR_87(CODE[8]), STR_86(CODE[19]), STR_85(CODE[17]), STR_82(CODE[24]), 
  4558 ;;		 -> STR_79(CODE[20]), STR_76(CODE[20]), STR_73(CODE[17]), STR_68(CODE[20]), 
  4559 ;;		 -> STR_67(CODE[19]), STR_62(CODE[16]), STR_61(CODE[11]), STR_60(CODE[10]), 
  4560 ;;		 -> STR_55(CODE[15]), STR_54(CODE[11]), STR_53(CODE[9]), STR_48(CODE[16]), 
  4561 ;;		 -> STR_44(CODE[12]), STR_40(CODE[13]), STR_39(CODE[12]), STR_36(CODE[21]), 
  4562 ;;		 -> STR_35(CODE[14]), STR_34(CODE[9]), STR_33(CODE[8]), STR_30(CODE[10]), 
  4563 ;;		 -> STR_29(CODE[18]), STR_28(CODE[18]), STR_27(CODE[16]), STR_24(CODE[21]), 
  4564 ;;		 -> STR_23(CODE[2]), STR_22(CODE[17]), STR_21(CODE[15]), STR_18(CODE[14]), 
  4565 ;;		 -> STR_17(CODE[12]), STR_16(CODE[15]), STR_15(CODE[14]), STR_14(CODE[20]), 
  4566 ;;		 -> STR_13(CODE[9]), STR_12(CODE[5]), STR_11(CODE[7]), STR_10(CODE[6]), 
  4567 ;;		 -> STR_9(CODE[8]), STR_8(CODE[19]), STR_7(CODE[19]), STR_6(CODE[11]), 
  4568 ;;		 -> STR_5(CODE[19]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[16]), 
  4569 ;;		 -> STR_1(CODE[20]), 
  4570 ;;
  4571 ;; ?_printf	int  size(2) Largest target is 16384
  4572 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), STR_97(CODE[4]), 
  4573 ;;		 -> STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), STR_81(CODE[7]), 
  4574 ;;		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), STR_75(CODE[7]), 
  4575 ;;		 -> STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), STR_70(CODE[4]), 
  4576 ;;		 -> STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), STR_64(CODE[4]), 
  4577 ;;		 -> STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), STR_57(CODE[4]), 
  4578 ;;		 -> STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), STR_50(CODE[4]), 
  4579 ;;		 -> STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4580 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), cleanupprogram(CODE[36]), 
  4581 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), STR_31(CODE[5]), 
  4582 ;;		 -> washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), STR_20(CODE[4]), 
  4583 ;;		 -> STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), commands(CODE[36]), 
  4584 ;;
  4585 ;; printf@ap	PTR void [1] size(1) Largest target is 2
  4586 ;;		 -> ?_printf(BANK0[2]), 
  4587 ;;
  4588 ;; S27046$_cp	PTR const unsigned char  size(2) Largest target is 16384
  4589 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4590 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4591 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4592 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4593 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4594 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4595 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4596 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4597 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4598 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4599 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4600 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4601 ;;		 -> commands(CODE[36]), 
  4602 ;;
  4603 ;; _val._str._cp	PTR const unsigned char  size(2) Largest target is 16384
  4604 ;;		 -> STR_114(CODE[7]), STR_110(CODE[4]), STR_109(CODE[3]), linebuffer(BANK3[20]), 
  4605 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), STR_84(CODE[7]), STR_83(CODE[1]), 
  4606 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), STR_78(CODE[1]), STR_77(CODE[7]), 
  4607 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), STR_72(CODE[7]), STR_71(CODE[1]), 
  4608 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), STR_66(CODE[7]), STR_65(CODE[1]), 
  4609 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), STR_59(CODE[7]), STR_58(CODE[1]), 
  4610 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), STR_52(CODE[7]), STR_51(CODE[1]), 
  4611 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), STR_47(CODE[7]), STR_46(CODE[9]), 
  4612 ;;		 -> STR_45(CODE[9]), STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4613 ;;		 -> cleanupprogram(CODE[36]), STR_38(CODE[4]), STR_37(CODE[4]), STR_32(CODE[4]), 
  4614 ;;		 -> STR_31(CODE[5]), washprogram(CODE[303]), STR_26(CODE[4]), STR_25(CODE[4]), 
  4615 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4616 ;;		 -> commands(CODE[36]), 
  4617 ;;
  4618 ;; timestampdiff@late_p	const PTR const struct timer size(1) Largest target is 6
  4619 ;;		 -> litterlanguage_pause@timer_now(BANK0[6]), 
  4620 ;;
  4621 ;; timestampdiff@late_longshort	PTR struct longshort size(1) Largest target is 6
  4622 ;;		 -> litterlanguage_pause@timer_now(BANK0[6]), 
  4623 ;;
  4624 ;; timestampdiff@early_p	const PTR const struct timer size(2) Largest target is 6
  4625 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4626 ;;
  4627 ;; timestampdiff@early_longshort	PTR struct longshort size(2) Largest target is 6
  4628 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4629 ;;
  4630 ;; gettimestamp@ticks	const PTR struct timer size(2) Largest target is 60
  4631 ;;		 -> sensortimer(BANK2[6]), timeoutexpired@currentTime(BANK0[6]), second(BANK2[6]), pingtime(BANK3[6]), 
  4632 ;;		 -> debouncer(BANK2[6]), pacers(BANK4[60]), debouncers(BANK3[18]), cattimer(BANK2[6]), 
  4633 ;;		 -> autotimer(BANK1[6]), holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), litterlanguage_pause@timer_now(BANK0[6])
       , 
  4634 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4635 ;;
  4636 ;; gettimestamp@bytes	PTR unsigned char  size(2) Largest target is 60
  4637 ;;		 -> sensortimer(BANK2[6]), timeoutexpired@currentTime(BANK0[6]), second(BANK2[6]), pingtime(BANK3[6]), 
  4638 ;;		 -> debouncer(BANK2[6]), pacers(BANK4[60]), debouncers(BANK3[18]), cattimer(BANK2[6]), 
  4639 ;;		 -> autotimer(BANK1[6]), holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), litterlanguage_pause@timer_now(BANK0[6])
       , 
  4640 ;;		 -> timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4641 ;;
  4642 ;; timeoutexpired@timer_p	const PTR const struct timer size(2) Largest target is 60
  4643 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK3[6]), debouncer(BANK2[6]), 
  4644 ;;		 -> pacers(BANK4[60]), debouncers(BANK3[18]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4645 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4646 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4647 ;;
  4648 ;; timeoutnever@timer_p	const PTR struct timer size(2) Largest target is 20
  4649 ;;		 -> debouncer(BANK2[6]), debouncers(BANK3[18]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4650 ;;		 -> holdtimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), timer_fill(BANK1[6]), 
  4651 ;;		 -> timer_waitins(BANK2[6]), 
  4652 ;;
  4653 ;; timeoutnow@timer_p	const PTR struct timer size(2) Largest target is 60
  4654 ;;		 -> pacers(BANK4[60]), cattimer(BANK2[6]), 
  4655 ;;
  4656 ;; postponetimeout@timer_p	const PTR struct timer size(2) Largest target is 6
  4657 ;;		 -> second(BANK2[6]), autotimer(BANK1[6]), 
  4658 ;;
  4659 ;; postponetimeout@longshort	PTR struct longshort size(2) Largest target is 6
  4660 ;;		 -> second(BANK2[6]), autotimer(BANK1[6]), 
  4661 ;;
  4662 ;; settimeout@timer_p	const PTR struct timer size(2) Largest target is 60
  4663 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK3[6]), debouncer(BANK2[6]), 
  4664 ;;		 -> pacers(BANK4[60]), debouncers(BANK3[18]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4665 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4666 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4667 ;;
  4668 ;; settimeout@longshort	PTR struct longshort size(2) Largest target is 60
  4669 ;;		 -> sensortimer(BANK2[6]), second(BANK2[6]), pingtime(BANK3[6]), debouncer(BANK2[6]), 
  4670 ;;		 -> pacers(BANK4[60]), debouncers(BANK3[18]), cattimer(BANK2[6]), autotimer(BANK1[6]), 
  4671 ;;		 -> holdtimeout(BANK2[6]), cartridgetimeout(BANK2[6]), timer_autodose(BANK2[6]), timer_drain(BANK1[6]), 
  4672 ;;		 -> timer_fill(BANK1[6]), timer_waitins(BANK2[6]), 
  4673 ;;
  4674 ;; readch@ch	PTR unsigned char  size(1) Largest target is 1
  4675 ;;		 -> cmdline_work@rxd(BANK0[1]), 
  4676 ;;
  4677 ;; echo$17766	PTR const unsigned char  size(2) Largest target is 4
  4678 ;;		 -> STR_110(CODE[4]), STR_109(CODE[3]), 
  4679 ;;
  4680 ;; echo@argv	PTR PTR unsigned char  size(1) Largest target is 4
  4681 ;;		 -> proc_line@argv(BANK0[4]), 
  4682 ;;
  4683 ;; cmd2index@cmd	PTR unsigned char  size(1) Largest target is 20
  4684 ;;		 -> linebuffer(BANK3[20]), 
  4685 ;;
  4686 ;; proc_line@argv	PTR unsigned char [4] size(1) Largest target is 20
  4687 ;;		 -> linebuffer(BANK3[20]), 
  4688 ;;
  4689 ;; proc_line@line	PTR unsigned char  size(1) Largest target is 20
  4690 ;;		 -> linebuffer(BANK3[20]), 
  4691 ;;
  4692 ;; set_LED@latch	PTR volatile unsigned char  size(1) Largest target is 1
  4693 ;;		 -> LATA(BITSFR2[1]), LATC(BITSFR2[1]), 
  4694 ;;
  4695 ;; S13034pacer$port	PTR volatile unsigned char  size(2) Largest target is 1
  4696 ;;		 -> LATE(BITSFR2[1]), LATC(BITSFR2[1]), beep_bits(BANK1[1]), 
  4697 ;;
  4698 ;; pacers.port	PTR volatile unsigned char  size(2) Largest target is 1
  4699 ;;		 -> LATE(BITSFR2[1]), LATC(BITSFR2[1]), beep_bits(BANK1[1]), 
  4700 ;;
  4701 ;; S13021debouncer$handler	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4702 ;;		 -> setupbutton_event(), startbutton_event(), 
  4703 ;;
  4704 ;; debouncers.handler	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
  4705 ;;		 -> setupbutton_event(), startbutton_event(), 
  4706 ;;
  4707 ;; S13021debouncer$port	PTR volatile unsigned char  size(1) Largest target is 1
  4708 ;;		 -> PORTB(BITSFR0[1]), 
  4709 ;;
  4710 ;; debouncers.port	PTR volatile unsigned char  size(1) Largest target is 1
  4711 ;;		 -> PORTB(BITSFR0[1]), 
  4712 ;;
  4713 ;; catsensor_event$10731	PTR const unsigned char  size(2) Largest target is 4
  4714 ;;		 -> STR_97(CODE[4]), STR_96(CODE[3]), 
  4715 ;;
  4716 ;; romwashprogram_getins@instruction	const PTR struct instruction size(1) Largest target is 3
  4717 ;;		 -> cur_instruction(BANK0[3]), 
  4718 ;;
  4719 ;; romwashprogram_reqins@address	PTR const struct instruction size(2) Largest target is 16384
  4720 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4721 ;;
  4722 ;; ins_address	PTR const struct instruction size(2) Largest target is 16384
  4723 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4724 ;;
  4725 ;; sp__memcpy	PTR void  size(1) Largest target is 2
  4726 ;;		 -> ins_pointer(BANK0[2]), 
  4727 ;;
  4728 ;; exe_instruction@ret_address	PTR const struct instruction size(2) Largest target is 16384
  4729 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4730 ;;
  4731 ;; exe_instruction$6013	PTR const unsigned char  size(2) Largest target is 7
  4732 ;;		 -> STR_84(CODE[7]), STR_83(CODE[1]), 
  4733 ;;
  4734 ;; exe_instruction$6009	PTR const unsigned char  size(2) Largest target is 7
  4735 ;;		 -> STR_81(CODE[7]), STR_80(CODE[1]), 
  4736 ;;
  4737 ;; exe_instruction$6005	PTR const unsigned char  size(2) Largest target is 7
  4738 ;;		 -> STR_78(CODE[1]), STR_77(CODE[7]), 
  4739 ;;
  4740 ;; exe_instruction$6001	PTR const unsigned char  size(2) Largest target is 7
  4741 ;;		 -> STR_75(CODE[7]), STR_74(CODE[1]), 
  4742 ;;
  4743 ;; exe_instruction$5997	PTR const unsigned char  size(2) Largest target is 5
  4744 ;;		 -> STR_70(CODE[4]), STR_69(CODE[5]), 
  4745 ;;
  4746 ;; exe_instruction$5996	PTR const unsigned char  size(2) Largest target is 7
  4747 ;;		 -> STR_72(CODE[7]), STR_71(CODE[1]), 
  4748 ;;
  4749 ;; exe_instruction$5989	PTR const unsigned char  size(2) Largest target is 4
  4750 ;;		 -> STR_64(CODE[4]), STR_63(CODE[3]), 
  4751 ;;
  4752 ;; exe_instruction$5988	PTR const unsigned char  size(2) Largest target is 7
  4753 ;;		 -> STR_66(CODE[7]), STR_65(CODE[1]), 
  4754 ;;
  4755 ;; exe_instruction$5980	PTR const unsigned char  size(2) Largest target is 4
  4756 ;;		 -> STR_57(CODE[4]), STR_56(CODE[3]), 
  4757 ;;
  4758 ;; exe_instruction$5979	PTR const unsigned char  size(2) Largest target is 7
  4759 ;;		 -> STR_59(CODE[7]), STR_58(CODE[1]), 
  4760 ;;
  4761 ;; exe_instruction$5971	PTR const unsigned char  size(2) Largest target is 4
  4762 ;;		 -> STR_50(CODE[4]), STR_49(CODE[3]), 
  4763 ;;
  4764 ;; exe_instruction$5970	PTR const unsigned char  size(2) Largest target is 7
  4765 ;;		 -> STR_52(CODE[7]), STR_51(CODE[1]), 
  4766 ;;
  4767 ;; exe_instruction$5964	PTR const unsigned char  size(2) Largest target is 9
  4768 ;;		 -> STR_47(CODE[7]), STR_46(CODE[9]), 
  4769 ;;
  4770 ;; exe_instruction$5963	PTR const unsigned char  size(2) Largest target is 9
  4771 ;;		 -> STR_47(CODE[7]), STR_46(CODE[9]), STR_45(CODE[9]), 
  4772 ;;
  4773 ;; exe_instruction$5958	PTR const unsigned char  size(2) Largest target is 9
  4774 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), 
  4775 ;;
  4776 ;; exe_instruction$5957	PTR const unsigned char  size(2) Largest target is 10
  4777 ;;		 -> STR_43(CODE[9]), STR_42(CODE[8]), STR_41(CODE[10]), 
  4778 ;;
  4779 ;; get_instruction@instruction	PTR struct instruction size(1) Largest target is 3
  4780 ;;		 -> cur_instruction(BANK0[3]), 
  4781 ;;
  4782 ;; req_instruction@instruction	PTR const struct instruction size(2) Largest target is 16384
  4783 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4784 ;;
  4785 ;; litterlanguage_cleanup$5944	PTR const unsigned char  size(2) Largest target is 4
  4786 ;;		 -> STR_38(CODE[4]), STR_37(CODE[4]), 
  4787 ;;
  4788 ;; waterdetection_event$5930	PTR const unsigned char  size(2) Largest target is 5
  4789 ;;		 -> STR_32(CODE[4]), STR_31(CODE[5]), 
  4790 ;;
  4791 ;; litterlanguage_start$5891	PTR const unsigned char  size(2) Largest target is 4
  4792 ;;		 -> STR_26(CODE[4]), STR_25(CODE[4]), 
  4793 ;;
  4794 ;; litterlanguage_work$5881	PTR const unsigned char  size(2) Largest target is 4
  4795 ;;		 -> STR_20(CODE[4]), STR_19(CODE[4]), 
  4796 ;;
  4797 ;; ins_pointer	PTR const struct instruction size(2) Largest target is 16384
  4798 ;;		 -> cleanupprogram(CODE[36]), washprogram(CODE[303]), cur_instruction(BANK0[3]), ROM(CODE[16384]), 
  4799 ;;
  4800 ;; S3275command$function	PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4801 ;;		 -> Absolute function(), echo(), help(), 
  4802 ;;
  4803 ;; commands.function	PTR FTN(int ,PTR PTR unsigned char ,)int  size(1) Largest target is 2
  4804 ;;		 -> Absolute function(), echo(), help(), 
  4805 ;;
  4806                           
  4807                           
  4808 ;;
  4809 ;; Critical Paths under _main in COMMON
  4810 ;;
  4811 ;;   None.
  4812 ;;
  4813 ;; Critical Paths under _isr in COMMON
  4814 ;;
  4815 ;;   _isr->_serial_rx_isr
  4816 ;;
  4817 ;; Critical Paths under _main in BANK0
  4818 ;;
  4819 ;;   _main->_cmdline_work
  4820 ;;   _litterlanguage_work->_exe_instruction
  4821 ;;   _exe_instruction->_litterlanguage_event
  4822 ;;   _litterlanguage_event->_litterlanguage_pause
  4823 ;;   _litterlanguage_stop->_printtime
  4824 ;;   _userinterface_work->_start_short
  4825 ;;   _start_long->_litterlanguage_start
  4826 ;;   _start_short->_litterlanguage_pause
  4827 ;;   _catgenie_work->_setupbutton_event
  4828 ;;   _catgenie_work->_startbutton_event
  4829 ;;   _water_work->_waterdetection_event
  4830 ;;   _setupbutton_event->_process_button
  4831 ;;   _startbutton_event->_process_button
  4832 ;;   _waterdetection_event->_printtime
  4833 ;;   _litterlanguage_pause->_printtime
  4834 ;;   _cmdline_work->_proc_char
  4835 ;;   _catsensor_work->_catsensor_event
  4836 ;;   _proc_char->_proc_line
  4837 ;;   _catsensor_event->_printtime
  4838 ;;   _process_button->_settimeout
  4839 ;;   _setup_short->_set_mode
  4840 ;;   _litterlanguage_init->_litterlanguage_cleanup
  4841 ;;   _userinterface_init->_set_mode
  4842 ;;   _proc_line->_help
  4843 ;;   _update_display->_set_LED_Error
  4844 ;;   _update_display->_set_LED_Cartridge
  4845 ;;   _update_display->_set_LED_Cat
  4846 ;;   _update_display->_set_LED_Locked
  4847 ;;   _set_mode->_printf
  4848 ;;   _litterlanguage_start->_printtime
  4849 ;;   _litterlanguage_cleanup->_printtime
  4850 ;;   _help->_printf
  4851 ;;   _echo->_printf
  4852 ;;   _set_LED_Locked->_set_pacer
  4853 ;;   _set_LED_Cat->_set_pacer
  4854 ;;   _set_LED_Cartridge->_set_pacer
  4855 ;;   _set_LED_Error->_set_pacer
  4856 ;;   _set_Beeper->_set_pacer
  4857 ;;   _key_Beep->_set_pacer
  4858 ;;   _both_short->_settimeout
  4859 ;;   _update_autotimer->_settimeout
  4860 ;;   _wait_instruction->_timeoutexpired
  4861 ;;   _printtime->_printf
  4862 ;;   _rtc_work->_timeoutexpired
  4863 ;;   _cmdline_init->_printf
  4864 ;;   _rtc_init->_settimeout
  4865 ;;   _cmd2index->_strncmp
  4866 ;;   _set_pacer->_timeoutnow
  4867 ;;   _both_long->_eeprom_write
  4868 ;;   _settimeout->___lmul
  4869 ;;   _get_instruction->_romwashprogram_getins
  4870 ;;   _req_instruction->_romwashprogram_reqins
  4871 ;;   _timeoutexpired->_gettimestamp
  4872 ;;   _printf->___lwmod
  4873 ;;   _serial_init->___lldiv
  4874 ;;   _catgenie_init->___bmul
  4875 ;;   ___lwmod->___lwdiv
  4876 ;;   _strncmp->___bmul
  4877 ;;   _timeoutnow->___bmul
  4878 ;;   _timeoutnever->___bmul
  4879 ;;
  4880 ;; Critical Paths under _isr in BANK0
  4881 ;;
  4882 ;;   None.
  4883 ;;
  4884 ;; Critical Paths under _main in BANK1
  4885 ;;
  4886 ;;   _litterlanguage_work->_exe_instruction
  4887 ;;
  4888 ;; Critical Paths under _isr in BANK1
  4889 ;;
  4890 ;;   None.
  4891 ;;
  4892 ;; Critical Paths under _main in BANK2
  4893 ;;
  4894 ;;   None.
  4895 ;;
  4896 ;; Critical Paths under _isr in BANK2
  4897 ;;
  4898 ;;   None.
  4899 ;;
  4900 ;; Critical Paths under _main in BANK3
  4901 ;;
  4902 ;;   None.
  4903 ;;
  4904 ;; Critical Paths under _isr in BANK3
  4905 ;;
  4906 ;;   None.
  4907 ;;
  4908 ;; Critical Paths under _main in BANK4
  4909 ;;
  4910 ;;   None.
  4911 ;;
  4912 ;; Critical Paths under _isr in BANK4
  4913 ;;
  4914 ;;   None.
  4915 ;;
  4916 ;; Critical Paths under _main in BANK5
  4917 ;;
  4918 ;;   None.
  4919 ;;
  4920 ;; Critical Paths under _isr in BANK5
  4921 ;;
  4922 ;;   None.
  4923 ;;
  4924 ;; Critical Paths under _main in BANK6
  4925 ;;
  4926 ;;   None.
  4927 ;;
  4928 ;; Critical Paths under _isr in BANK6
  4929 ;;
  4930 ;;   None.
  4931 ;;
  4932 ;; Critical Paths under _main in BANK7
  4933 ;;
  4934 ;;   None.
  4935 ;;
  4936 ;; Critical Paths under _isr in BANK7
  4937 ;;
  4938 ;;   None.
  4939 ;;
  4940 ;; Critical Paths under _main in BANK8
  4941 ;;
  4942 ;;   None.
  4943 ;;
  4944 ;; Critical Paths under _isr in BANK8
  4945 ;;
  4946 ;;   None.
  4947 ;;
  4948 ;; Critical Paths under _main in BANK9
  4949 ;;
  4950 ;;   None.
  4951 ;;
  4952 ;; Critical Paths under _isr in BANK9
  4953 ;;
  4954 ;;   None.
  4955 ;;
  4956 ;; Critical Paths under _main in BANK10
  4957 ;;
  4958 ;;   None.
  4959 ;;
  4960 ;; Critical Paths under _isr in BANK10
  4961 ;;
  4962 ;;   None.
  4963 ;;
  4964 ;; Critical Paths under _main in BANK11
  4965 ;;
  4966 ;;   None.
  4967 ;;
  4968 ;; Critical Paths under _isr in BANK11
  4969 ;;
  4970 ;;   None.
  4971 ;;
  4972 ;; Critical Paths under _main in BANK12
  4973 ;;
  4974 ;;   None.
  4975 ;;
  4976 ;; Critical Paths under _isr in BANK12
  4977 ;;
  4978 ;;   None.
  4979                           
  4980 ;;
  4981 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4982 ;;
  4983                           
  4984 ;;
  4985 ;;Call Graph Tables:
  4986 ;;
  4987 ;; ---------------------------------------------------------------------------------
  4988 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  4989 ;; ---------------------------------------------------------------------------------
  4990 ;; (0) _main                                                 2     2      0  174642
  4991 ;;                                             63 BANK0      2     2      0
  4992 ;;                      _catgenie_init
  4993 ;;                        _serial_init
  4994 ;;                             _printf
  4995 ;;                         _timer_init
  4996 ;;                           _rtc_init
  4997 ;;                     _catsensor_init
  4998 ;;                         _water_init
  4999 ;;                 _userinterface_init
  5000 ;;                       _cmdline_init
  5001 ;;                _litterlanguage_init
  5002 ;;                     _interrupt_init
  5003 ;;                           _rtc_work
  5004 ;;                     _catsensor_work
  5005 ;;                         _water_work
  5006 ;;                      _catgenie_work
  5007 ;;                 _userinterface_work
  5008 ;;                       _cmdline_work
  5009 ;;                _litterlanguage_work
  5010 ;; ---------------------------------------------------------------------------------
  5011 ;; (1) _litterlanguage_work                                  4     4      0   57943
  5012 ;;                                             57 BANK0      4     4      0
  5013 ;;                     _water_detected
  5014 ;;                      _water_filling
  5015 ;;                     _timeoutexpired
  5016 ;;                          _printtime
  5017 ;;                             _printf
  5018 ;;               _litterlanguage_event
  5019 ;;                           _get_Pump
  5020 ;;                       _timeoutnever
  5021 ;;                         _set_Dosage
  5022 ;;                    _req_instruction
  5023 ;;                    _get_instruction
  5024 ;;                        _eeprom_read
  5025 ;;                       _eeprom_write
  5026 ;;                    _exe_instruction
  5027 ;;                   _wait_instruction
  5028 ;; ---------------------------------------------------------------------------------
  5029 ;; (2) _exe_instruction                                     39    39      0   33164
  5030 ;;                                             56 BANK0      1     1      0
  5031 ;;                                              0 BANK1     38    38      0
  5032 ;;                          _printtime
  5033 ;;                             _printf
  5034 ;;                           _set_Bowl
  5035 ;;                            _set_Arm
  5036 ;;                        _eeprom_read
  5037 ;;                       _eeprom_write
  5038 ;;                     _water_detected
  5039 ;;                         _water_fill
  5040 ;;                         _settimeout
  5041 ;;                       _timeoutnever
  5042 ;;                           _set_Pump
  5043 ;;                          _set_Dryer
  5044 ;;                             ___lmul
  5045 ;;                             ___wmul
  5046 ;;                            ___lwdiv
  5047 ;;                            ___lwmod
  5048 ;;                         _set_Dosage
  5049 ;;                             _memcpy
  5050 ;;                _litterlanguage_stop
  5051 ;;               _litterlanguage_event
  5052 ;; ---------------------------------------------------------------------------------
  5053 ;; (3) _litterlanguage_event                                 2     1      1   16817
  5054 ;;                                             54 BANK0      2     1      1
  5055 ;;                _litterlanguage_stop
  5056 ;;               _litterlanguage_pause
  5057 ;;                         _set_Beeper
  5058 ;; ---------------------------------------------------------------------------------
  5059 ;; (4) _litterlanguage_stop                                  1     1      0    7232
  5060 ;;                                             46 BANK0      1     1      0
  5061 ;;                          _printtime
  5062 ;;                             _printf
  5063 ;;                           _set_Bowl
  5064 ;;                            _set_Arm
  5065 ;;                         _water_fill
  5066 ;;                         _set_Dosage
  5067 ;;                           _set_Pump
  5068 ;;                          _set_Dryer
  5069 ;;                       _timeoutnever
  5070 ;;               _litterlanguage_event
  5071 ;; ---------------------------------------------------------------------------------
  5072 ;; (1) _userinterface_work                                   3     3      0   45559
  5073 ;;                                             55 BANK0      3     3      0
  5074 ;;                     _timeoutexpired
  5075 ;;                   _update_autotimer
  5076 ;;                          _printtime
  5077 ;;                             _printf
  5078 ;;               _litterlanguage_start
  5079 ;;             _litterlanguage_running
  5080 ;;                         _timeoutnow
  5081 ;;                        _start_short
  5082 ;;                        _setup_short
  5083 ;;                         _both_short
  5084 ;;                           _key_Beep
  5085 ;;                         _start_long
  5086 ;;                         _setup_long
  5087 ;;                          _both_long
  5088 ;;                       _timeoutnever
  5089 ;;                     _update_display
  5090 ;; ---------------------------------------------------------------------------------
  5091 ;; (2) _start_long                                           1     1      0    6773
  5092 ;;                                             49 BANK0      1     1      0
  5093 ;;             _litterlanguage_running
  5094 ;;               _litterlanguage_start
  5095 ;;                _litterlanguage_stop
  5096 ;; ---------------------------------------------------------------------------------
  5097 ;; (2) _start_short                                          1     1      0   15447
  5098 ;;                                             54 BANK0      1     1      0
  5099 ;;             _litterlanguage_running
  5100 ;;               _litterlanguage_start
  5101 ;;              _litterlanguage_paused
  5102 ;;               _litterlanguage_pause
  5103 ;; ---------------------------------------------------------------------------------
  5104 ;; (1) _catgenie_work                                       11    11      0   10411
  5105 ;;                                             33 BANK0     11    11      0
  5106 ;;                   _heatsensor_event
  5107 ;;                         _settimeout
  5108 ;;                             ___bmul
  5109 ;;                     _timeoutexpired
  5110 ;;                  _setupbutton_event
  5111 ;;                  _startbutton_event
  5112 ;;                       _timeoutnever
  5113 ;; ---------------------------------------------------------------------------------
  5114 ;; (1) _water_work                                           1     1      0    8120
  5115 ;;                                             50 BANK0      1     1      0
  5116 ;;                     _timeoutexpired
  5117 ;;                         _settimeout
  5118 ;;               _waterdetection_event
  5119 ;;                  _watersensor_event
  5120 ;; ---------------------------------------------------------------------------------
  5121 ;; (2) _setupbutton_event                                    2     1      1    3938
  5122 ;;                                             31 BANK0      2     1      1
  5123 ;;                     _process_button
  5124 ;; ---------------------------------------------------------------------------------
  5125 ;; (2) _startbutton_event                                    2     1      1    3938
  5126 ;;                                             31 BANK0      2     1      1
  5127 ;;                     _process_button
  5128 ;; ---------------------------------------------------------------------------------
  5129 ;; (2) _heatsensor_event                                     2     2      0     341
  5130 ;;                                              0 BANK0      2     2      0
  5131 ;;               _litterlanguage_event
  5132 ;; ---------------------------------------------------------------------------------
  5133 ;; (2) _waterdetection_event                                 4     4      0    7207
  5134 ;;                                             46 BANK0      4     4      0
  5135 ;;                          _printtime
  5136 ;;                             _printf
  5137 ;;                         _water_fill
  5138 ;;                       _timeoutnever
  5139 ;;               _litterlanguage_event
  5140 ;; ---------------------------------------------------------------------------------
  5141 ;; (4) _litterlanguage_pause                                 8     8      0    8674
  5142 ;;                                             46 BANK0      8     8      0
  5143 ;;                          _printtime
  5144 ;;                           _get_Bowl
  5145 ;;                           _set_Bowl
  5146 ;;                            _get_Arm
  5147 ;;                            _set_Arm
  5148 ;;                      _water_filling
  5149 ;;                         _water_fill
  5150 ;;                         _get_Dosage
  5151 ;;                         _set_Dosage
  5152 ;;                           _get_Pump
  5153 ;;                           _set_Pump
  5154 ;;                          _get_Dryer
  5155 ;;                          _set_Dryer
  5156 ;;                       _gettimestamp
  5157 ;;                      _timestampdiff
  5158 ;;                       _timeoutnever
  5159 ;;                             _printf
  5160 ;;                         _settimeout
  5161 ;;               _litterlanguage_event
  5162 ;; ---------------------------------------------------------------------------------
  5163 ;; (1) _cmdline_work                                         1     1      0   15795
  5164 ;;                                             62 BANK0      1     1      0
  5165 ;;                              _putch
  5166 ;;                          _proc_char
  5167 ;;                             _readch
  5168 ;; ---------------------------------------------------------------------------------
  5169 ;; (1) _catsensor_work                                       1     1      0   10893
  5170 ;;                                             49 BANK0      1     1      0
  5171 ;;                     _timeoutexpired
  5172 ;;                         _settimeout
  5173 ;;                       _timeoutnever
  5174 ;;                    _catsensor_event
  5175 ;; ---------------------------------------------------------------------------------
  5176 ;; (2) _proc_char                                            2     2      0   15616
  5177 ;;                                             60 BANK0      2     2      0
  5178 ;;                              _putch
  5179 ;;                          _proc_line
  5180 ;;                             _printf
  5181 ;; ---------------------------------------------------------------------------------
  5182 ;; (2) _catsensor_event                                      3     3      0    9918
  5183 ;;                                             46 BANK0      3     3      0
  5184 ;;                          _printtime
  5185 ;;                             _printf
  5186 ;;                       _timeoutnever
  5187 ;;                         _settimeout
  5188 ;;                     _update_display
  5189 ;; ---------------------------------------------------------------------------------
  5190 ;; (3) _process_button                                       3     2      1    3907
  5191 ;;                                             28 BANK0      3     2      1
  5192 ;;                           _key_Beep
  5193 ;;                         _settimeout
  5194 ;;                       _timeoutnever
  5195 ;;                     _update_display
  5196 ;; ---------------------------------------------------------------------------------
  5197 ;; (2) _setup_short                                          3     3      0    4792
  5198 ;;                                             41 BANK0      3     3      0
  5199 ;;                           _set_mode
  5200 ;;                         _settimeout
  5201 ;; ---------------------------------------------------------------------------------
  5202 ;; (1) _litterlanguage_init                                  3     3      0   10241
  5203 ;;                                             49 BANK0      3     3      0
  5204 ;;                             _printf
  5205 ;;             _litterlanguage_cleanup
  5206 ;;                       _eeprom_write
  5207 ;;                        _eeprom_read
  5208 ;; ---------------------------------------------------------------------------------
  5209 ;; (1) _userinterface_init                                   2     2      0    6984
  5210 ;;                                             41 BANK0      2     2      0
  5211 ;;                       _eeprom_write
  5212 ;;                        _eeprom_read
  5213 ;;                           _set_mode
  5214 ;;                     _update_display
  5215 ;; ---------------------------------------------------------------------------------
  5216 ;; (3) _proc_line                                           14    14      0   12028
  5217 ;;                                             46 BANK0     14    14      0
  5218 ;;                             _strlen
  5219 ;;                          _cmd2index
  5220 ;;                             _printf
  5221 ;;                             ___bmul
  5222 ;;                   Absolute function
  5223 ;;                               _echo
  5224 ;;                               _help
  5225 ;; ---------------------------------------------------------------------------------
  5226 ;; (2) _update_display                                       1     1      0    2544
  5227 ;;                                             17 BANK0      1     1      0
  5228 ;;                      _set_LED_Error
  5229 ;;                  _set_LED_Cartridge
  5230 ;;                            _set_LED
  5231 ;;                        _set_LED_Cat
  5232 ;;                     _set_LED_Locked
  5233 ;; ---------------------------------------------------------------------------------
  5234 ;; (3) _set_mode                                             3     3      0    4278
  5235 ;;                                             38 BANK0      3     3      0
  5236 ;;                             _printf
  5237 ;;                   _update_autotimer
  5238 ;;                         _timeoutnow
  5239 ;;                       _eeprom_write
  5240 ;; ---------------------------------------------------------------------------------
  5241 ;; (3) _litterlanguage_start                                 3     3      0    6773
  5242 ;;                                             46 BANK0      3     3      0
  5243 ;;                          _printtime
  5244 ;;                             _printf
  5245 ;; ---------------------------------------------------------------------------------
  5246 ;; (2) _litterlanguage_cleanup                               3     3      0    6773
  5247 ;;                                             46 BANK0      3     3      0
  5248 ;;                          _printtime
  5249 ;;                             _printf
  5250 ;; ---------------------------------------------------------------------------------
  5251 ;; (4) _help                                                 8     5      3    3599
  5252 ;;                                             38 BANK0      8     5      3
  5253 ;;                             _printf
  5254 ;;                             ___bmul
  5255 ;; ---------------------------------------------------------------------------------
  5256 ;; (4) _echo                                                 5     2      3    3632
  5257 ;;                                             38 BANK0      5     2      3
  5258 ;;                            _strncmp
  5259 ;;                             _printf
  5260 ;; ---------------------------------------------------------------------------------
  5261 ;; (3) _set_LED_Locked                                       4     3      1     601
  5262 ;;                                             13 BANK0      4     3      1
  5263 ;;                          _set_pacer
  5264 ;; ---------------------------------------------------------------------------------
  5265 ;; (3) _set_LED_Cat                                          4     3      1     601
  5266 ;;                                             13 BANK0      4     3      1
  5267 ;;                          _set_pacer
  5268 ;; ---------------------------------------------------------------------------------
  5269 ;; (3) _set_LED_Cartridge                                    4     3      1     601
  5270 ;;                                             13 BANK0      4     3      1
  5271 ;;                          _set_pacer
  5272 ;; ---------------------------------------------------------------------------------
  5273 ;; (3) _set_LED_Error                                        4     3      1     601
  5274 ;;                                             13 BANK0      4     3      1
  5275 ;;                          _set_pacer
  5276 ;; ---------------------------------------------------------------------------------
  5277 ;; (4) _set_Beeper                                           4     3      1     601
  5278 ;;                                             13 BANK0      4     3      1
  5279 ;;                          _set_pacer
  5280 ;; ---------------------------------------------------------------------------------
  5281 ;; (2) _key_Beep                                             7     7      0     638
  5282 ;;                                             13 BANK0      7     7      0
  5283 ;;                          _set_pacer
  5284 ;; ---------------------------------------------------------------------------------
  5285 ;; (2) _both_short                                           0     0      0     477
  5286 ;;                         _settimeout
  5287 ;; ---------------------------------------------------------------------------------
  5288 ;; (4) _update_autotimer                                     1     1      0     748
  5289 ;;                                             28 BANK0      1     1      0
  5290 ;;                         _settimeout
  5291 ;;                    _postponetimeout
  5292 ;;                       _timeoutnever
  5293 ;; ---------------------------------------------------------------------------------
  5294 ;; (2) _wait_instruction                                     1     1      0     498
  5295 ;;                                             22 BANK0      1     1      0
  5296 ;;                     _timeoutexpired
  5297 ;;                     _water_detected
  5298 ;;                       _timeoutnever
  5299 ;;                         _get_Dosage
  5300 ;; ---------------------------------------------------------------------------------
  5301 ;; (5) _printtime                                            8     8      0    3337
  5302 ;;                                             38 BANK0      8     8      0
  5303 ;;                             _printf
  5304 ;; ---------------------------------------------------------------------------------
  5305 ;; (1) _rtc_work                                             1     1      0     614
  5306 ;;                                             22 BANK0      1     1      0
  5307 ;;                     _timeoutexpired
  5308 ;;                    _postponetimeout
  5309 ;; ---------------------------------------------------------------------------------
  5310 ;; (1) _cmdline_init                                         0     0      0    3337
  5311 ;;                             _printf
  5312 ;; ---------------------------------------------------------------------------------
  5313 ;; (1) _rtc_init                                             1     1      0     508
  5314 ;;                                             28 BANK0      1     1      0
  5315 ;;                         _settimeout
  5316 ;; ---------------------------------------------------------------------------------
  5317 ;; (4) _cmd2index                                            6     4      2     400
  5318 ;;                                             11 BANK0      6     4      2
  5319 ;;                             ___bmul
  5320 ;;                            _strncmp
  5321 ;; ---------------------------------------------------------------------------------
  5322 ;; (5) _set_pacer                                            5     3      2     539
  5323 ;;                                              8 BANK0      5     3      2
  5324 ;;                             ___bmul
  5325 ;;                         _timeoutnow
  5326 ;; ---------------------------------------------------------------------------------
  5327 ;; (2) _both_long                                            1     1      0      69
  5328 ;;                                              4 BANK0      1     1      0
  5329 ;;                       _eeprom_write
  5330 ;; ---------------------------------------------------------------------------------
  5331 ;; (5) _settimeout                                          16    10      6     477
  5332 ;;                                             12 BANK0     16    10      6
  5333 ;;                       _gettimestamp
  5334 ;;                             ___lmul (ARG)
  5335 ;;                             ___bmul (ARG)
  5336 ;; ---------------------------------------------------------------------------------
  5337 ;; (2) _get_instruction                                      1     1      0      62
  5338 ;;                                              4 BANK0      1     1      0
  5339 ;;              _romwashprogram_getins
  5340 ;; ---------------------------------------------------------------------------------
  5341 ;; (2) _req_instruction                                      2     0      2      62
  5342 ;;                                              2 BANK0      2     0      2
  5343 ;;              _romwashprogram_reqins
  5344 ;; ---------------------------------------------------------------------------------
  5345 ;; (3) _timeoutexpired                                      14    12      2     436
  5346 ;;                                              8 BANK0     14    12      2
  5347 ;;                       _gettimestamp
  5348 ;;                             ___bmul (ARG)
  5349 ;; ---------------------------------------------------------------------------------
  5350 ;; (5) _printf                                              24    14     10    3337
  5351 ;;                                             14 BANK0     24    14     10
  5352 ;;                              _putch
  5353 ;;                            _isdigit
  5354 ;;                             ___wmul
  5355 ;;                             ___bmul
  5356 ;;                            ___lwdiv
  5357 ;;                            ___lwmod
  5358 ;; ---------------------------------------------------------------------------------
  5359 ;; (1) _serial_init                                         21    16      5     317
  5360 ;;                                             14 BANK0     21    16      5
  5361 ;;                            ___lldiv
  5362 ;; ---------------------------------------------------------------------------------
  5363 ;; (1) _catgenie_init                                        5     5      0     371
  5364 ;;                                              4 BANK0      5     5      0
  5365 ;;                             ___bmul
  5366 ;; ---------------------------------------------------------------------------------
  5367 ;; (2) ___lldiv                                             14     6      8     162
  5368 ;;                                              0 BANK0     14     6      8
  5369 ;; ---------------------------------------------------------------------------------
  5370 ;; (3) ___lmul                                              12     4      8     136
  5371 ;;                                              0 BANK0     12     4      8
  5372 ;; ---------------------------------------------------------------------------------
  5373 ;; (6) ___lwmod                                              6     2      4     232
  5374 ;;                                              8 BANK0      6     2      4
  5375 ;;                            ___lwdiv (ARG)
  5376 ;; ---------------------------------------------------------------------------------
  5377 ;; (6) ___lwdiv                                              8     4      4     241
  5378 ;;                                              0 BANK0      8     4      4
  5379 ;; ---------------------------------------------------------------------------------
  5380 ;; (6) ___wmul                                               6     2      4     136
  5381 ;;                                              0 BANK0      6     2      4
  5382 ;; ---------------------------------------------------------------------------------
  5383 ;; (6) ___bmul                                               4     3      1     136
  5384 ;;                                              0 BANK0      4     3      1
  5385 ;; ---------------------------------------------------------------------------------
  5386 ;; (6) _isdigit                                              2     2      0      99
  5387 ;;                                              0 BANK0      2     2      0
  5388 ;; ---------------------------------------------------------------------------------
  5389 ;; (5) _strncmp                                              7     3      4     134
  5390 ;;                                              4 BANK0      7     3      4
  5391 ;;                             ___bmul (ARG)
  5392 ;; ---------------------------------------------------------------------------------
  5393 ;; (4) _strlen                                              10     8      2      89
  5394 ;;                                              0 BANK0     10     8      2
  5395 ;; ---------------------------------------------------------------------------------
  5396 ;; (2) _readch                                               4     4      0      46
  5397 ;;                                              0 BANK0      4     4      0
  5398 ;; ---------------------------------------------------------------------------------
  5399 ;; (6) _putch                                                3     3      0      34
  5400 ;;                                              0 BANK0      3     3      0
  5401 ;; ---------------------------------------------------------------------------------
  5402 ;; (5) _postponetimeout                                     16    10      6     178
  5403 ;;                                              0 BANK0     16    10      6
  5404 ;; ---------------------------------------------------------------------------------
  5405 ;; (3) _set_LED                                              5     4      1     140
  5406 ;;                                              0 BANK0      5     4      1
  5407 ;; ---------------------------------------------------------------------------------
  5408 ;; (2) _setup_long                                           0     0      0       0
  5409 ;; ---------------------------------------------------------------------------------
  5410 ;; (6) _timeoutnow                                           4     2      2      62
  5411 ;;                                              4 BANK0      4     2      2
  5412 ;;                             ___bmul (ARG)
  5413 ;; ---------------------------------------------------------------------------------
  5414 ;; (3) _memcpy                                               7     4      3     174
  5415 ;;                                              0 BANK0      7     4      3
  5416 ;; ---------------------------------------------------------------------------------
  5417 ;; (3) _romwashprogram_getins                                4     4      0      31
  5418 ;;                                              0 BANK0      4     4      0
  5419 ;; ---------------------------------------------------------------------------------
  5420 ;; (3) _romwashprogram_reqins                                2     0      2      31
  5421 ;;                                              0 BANK0      2     0      2
  5422 ;; ---------------------------------------------------------------------------------
  5423 ;; (2) _watersensor_event                                    2     0      2       0
  5424 ;;                                              0 BANK0      2     0      2
  5425 ;; ---------------------------------------------------------------------------------
  5426 ;; (3) _litterlanguage_paused                                0     0      0       0
  5427 ;; ---------------------------------------------------------------------------------
  5428 ;; (5) _timestampdiff                                       19    15      4     486
  5429 ;;                                              0 BANK0     19    15      4
  5430 ;; ---------------------------------------------------------------------------------
  5431 ;; (4) _gettimestamp                                         8     6      2     192
  5432 ;;                                              0 BANK0      8     6      2
  5433 ;; ---------------------------------------------------------------------------------
  5434 ;; (5) _set_Dryer                                            2     2      0      31
  5435 ;;                                              0 BANK0      2     2      0
  5436 ;; ---------------------------------------------------------------------------------
  5437 ;; (5) _get_Dryer                                            0     0      0       0
  5438 ;; ---------------------------------------------------------------------------------
  5439 ;; (5) _set_Pump                                             2     2      0      31
  5440 ;;                                              0 BANK0      2     2      0
  5441 ;; ---------------------------------------------------------------------------------
  5442 ;; (3) _get_Dosage                                           0     0      0       0
  5443 ;; ---------------------------------------------------------------------------------
  5444 ;; (5) _water_fill                                           2     2      0      31
  5445 ;;                                              0 BANK0      2     2      0
  5446 ;; ---------------------------------------------------------------------------------
  5447 ;; (5) _set_Arm                                              2     2      0      31
  5448 ;;                                              0 BANK0      2     2      0
  5449 ;; ---------------------------------------------------------------------------------
  5450 ;; (5) _get_Arm                                              2     2      0       0
  5451 ;;                                              0 BANK0      2     2      0
  5452 ;; ---------------------------------------------------------------------------------
  5453 ;; (5) _set_Bowl                                             2     2      0      31
  5454 ;;                                              0 BANK0      2     2      0
  5455 ;; ---------------------------------------------------------------------------------
  5456 ;; (5) _get_Bowl                                             2     2      0       0
  5457 ;;                                              0 BANK0      2     2      0
  5458 ;; ---------------------------------------------------------------------------------
  5459 ;; (3) _litterlanguage_running                               0     0      0       0
  5460 ;; ---------------------------------------------------------------------------------
  5461 ;; (5) _set_Dosage                                           2     2      0      31
  5462 ;;                                              0 BANK0      2     2      0
  5463 ;; ---------------------------------------------------------------------------------
  5464 ;; (3) _timeoutnever                                         4     2      2      62
  5465 ;;                                              4 BANK0      4     2      2
  5466 ;;                             ___bmul (ARG)
  5467 ;; ---------------------------------------------------------------------------------
  5468 ;; (5) _get_Pump                                             0     0      0       0
  5469 ;; ---------------------------------------------------------------------------------
  5470 ;; (5) _water_filling                                        0     0      0       0
  5471 ;; ---------------------------------------------------------------------------------
  5472 ;; (3) _water_detected                                       0     0      0       0
  5473 ;; ---------------------------------------------------------------------------------
  5474 ;; (3) _eeprom_read                                          4     4      0      31
  5475 ;;                                              0 BANK0      4     4      0
  5476 ;; ---------------------------------------------------------------------------------
  5477 ;; (3) _eeprom_write                                         4     3      1      69
  5478 ;;                                              0 BANK0      4     3      1
  5479 ;; ---------------------------------------------------------------------------------
  5480 ;; (1) _interrupt_init                                       1     1      0       0
  5481 ;;                                              0 BANK0      1     1      0
  5482 ;; ---------------------------------------------------------------------------------
  5483 ;; (1) _water_init                                           3     3      0      48
  5484 ;;                                              0 BANK0      3     3      0
  5485 ;; ---------------------------------------------------------------------------------
  5486 ;; (1) _catsensor_init                                       0     0      0       0
  5487 ;; ---------------------------------------------------------------------------------
  5488 ;; (1) _timer_init                                           0     0      0       0
  5489 ;; ---------------------------------------------------------------------------------
  5490 ;; (4) Absolute function(Fake)                               3     0      3       0
  5491 ;;                                              0 BANK0      3     0      3
  5492 ;; ---------------------------------------------------------------------------------
  5493 ;; Estimated maximum stack depth 6
  5494 ;; ---------------------------------------------------------------------------------
  5495 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5496 ;; ---------------------------------------------------------------------------------
  5497 ;; (14) _isr                                                 3     3      0      47
  5498 ;;                                              9 COMMON     3     3      0
  5499 ;;                          _timer_isr
  5500 ;;                _catsensor_isr_timer
  5501 ;;                _catsensor_isr_input
  5502 ;;                      _serial_rx_isr
  5503 ;;                      _serial_tx_isr
  5504 ;; ---------------------------------------------------------------------------------
  5505 ;; (15) _serial_tx_isr                                       0     0      0       0
  5506 ;; ---------------------------------------------------------------------------------
  5507 ;; (15) _serial_rx_isr                                       9     9      0      24
  5508 ;;                                              0 COMMON     9     9      0
  5509 ;; ---------------------------------------------------------------------------------
  5510 ;; (15) _catsensor_isr_input                                 0     0      0       0
  5511 ;; ---------------------------------------------------------------------------------
  5512 ;; (15) _catsensor_isr_timer                                 1     1      0       0
  5513 ;;                                              0 COMMON     1     1      0
  5514 ;; ---------------------------------------------------------------------------------
  5515 ;; (15) _timer_isr                                           0     0      0       0
  5516 ;; ---------------------------------------------------------------------------------
  5517 ;; Estimated maximum stack depth 15
  5518 ;; ---------------------------------------------------------------------------------
  5519                           
  5520 ;; Call Graph Graphs:
  5521                           
  5522 ;; _main (ROOT)
  5523 ;;   _catgenie_init
  5524 ;;     ___bmul
  5525 ;;   _serial_init
  5526 ;;     ___lldiv
  5527 ;;   _printf
  5528 ;;     _putch
  5529 ;;     _isdigit
  5530 ;;     ___wmul
  5531 ;;     ___bmul
  5532 ;;     ___lwdiv
  5533 ;;     ___lwmod
  5534 ;;       ___lwdiv (ARG)
  5535 ;;   _timer_init
  5536 ;;   _rtc_init
  5537 ;;     _settimeout
  5538 ;;       _gettimestamp
  5539 ;;       ___lmul (ARG)
  5540 ;;       ___bmul (ARG)
  5541 ;;   _catsensor_init
  5542 ;;   _water_init
  5543 ;;   _userinterface_init
  5544 ;;     _eeprom_write
  5545 ;;     _eeprom_read
  5546 ;;     _set_mode
  5547 ;;       _printf
  5548 ;;         _putch
  5549 ;;         _isdigit
  5550 ;;         ___wmul
  5551 ;;         ___bmul
  5552 ;;         ___lwdiv
  5553 ;;         ___lwmod
  5554 ;;           ___lwdiv (ARG)
  5555 ;;       _update_autotimer
  5556 ;;         _settimeout
  5557 ;;           _gettimestamp
  5558 ;;           ___lmul (ARG)
  5559 ;;           ___bmul (ARG)
  5560 ;;         _postponetimeout
  5561 ;;         _timeoutnever
  5562 ;;           ___bmul (ARG)
  5563 ;;       _timeoutnow
  5564 ;;         ___bmul (ARG)
  5565 ;;       _eeprom_write
  5566 ;;     _update_display
  5567 ;;       _set_LED_Error
  5568 ;;         _set_pacer
  5569 ;;           ___bmul
  5570 ;;           _timeoutnow
  5571 ;;             ___bmul (ARG)
  5572 ;;       _set_LED_Cartridge
  5573 ;;         _set_pacer
  5574 ;;           ___bmul
  5575 ;;           _timeoutnow
  5576 ;;             ___bmul (ARG)
  5577 ;;       _set_LED
  5578 ;;       _set_LED_Cat
  5579 ;;         _set_pacer
  5580 ;;           ___bmul
  5581 ;;           _timeoutnow
  5582 ;;             ___bmul (ARG)
  5583 ;;       _set_LED_Locked
  5584 ;;         _set_pacer
  5585 ;;           ___bmul
  5586 ;;           _timeoutnow
  5587 ;;             ___bmul (ARG)
  5588 ;;   _cmdline_init
  5589 ;;     _printf
  5590 ;;       _putch
  5591 ;;       _isdigit
  5592 ;;       ___wmul
  5593 ;;       ___bmul
  5594 ;;       ___lwdiv
  5595 ;;       ___lwmod
  5596 ;;         ___lwdiv (ARG)
  5597 ;;   _litterlanguage_init
  5598 ;;     _printf
  5599 ;;       _putch
  5600 ;;       _isdigit
  5601 ;;       ___wmul
  5602 ;;       ___bmul
  5603 ;;       ___lwdiv
  5604 ;;       ___lwmod
  5605 ;;         ___lwdiv (ARG)
  5606 ;;     _litterlanguage_cleanup
  5607 ;;       _printtime
  5608 ;;         _printf
  5609 ;;           _putch
  5610 ;;           _isdigit
  5611 ;;           ___wmul
  5612 ;;           ___bmul
  5613 ;;           ___lwdiv
  5614 ;;           ___lwmod
  5615 ;;             ___lwdiv (ARG)
  5616 ;;       _printf
  5617 ;;         _putch
  5618 ;;         _isdigit
  5619 ;;         ___wmul
  5620 ;;         ___bmul
  5621 ;;         ___lwdiv
  5622 ;;         ___lwmod
  5623 ;;           ___lwdiv (ARG)
  5624 ;;     _eeprom_write
  5625 ;;     _eeprom_read
  5626 ;;   _interrupt_init
  5627 ;;   _rtc_work
  5628 ;;     _timeoutexpired
  5629 ;;       _gettimestamp
  5630 ;;       ___bmul (ARG)
  5631 ;;     _postponetimeout
  5632 ;;   _catsensor_work
  5633 ;;     _timeoutexpired
  5634 ;;       _gettimestamp
  5635 ;;       ___bmul (ARG)
  5636 ;;     _settimeout
  5637 ;;       _gettimestamp
  5638 ;;       ___lmul (ARG)
  5639 ;;       ___bmul (ARG)
  5640 ;;     _timeoutnever
  5641 ;;       ___bmul (ARG)
  5642 ;;     _catsensor_event
  5643 ;;       _printtime
  5644 ;;         _printf
  5645 ;;           _putch
  5646 ;;           _isdigit
  5647 ;;           ___wmul
  5648 ;;           ___bmul
  5649 ;;           ___lwdiv
  5650 ;;           ___lwmod
  5651 ;;             ___lwdiv (ARG)
  5652 ;;       _printf
  5653 ;;         _putch
  5654 ;;         _isdigit
  5655 ;;         ___wmul
  5656 ;;         ___bmul
  5657 ;;         ___lwdiv
  5658 ;;         ___lwmod
  5659 ;;           ___lwdiv (ARG)
  5660 ;;       _timeoutnever
  5661 ;;         ___bmul (ARG)
  5662 ;;       _settimeout
  5663 ;;         _gettimestamp
  5664 ;;         ___lmul (ARG)
  5665 ;;         ___bmul (ARG)
  5666 ;;       _update_display
  5667 ;;         _set_LED_Error
  5668 ;;           _set_pacer
  5669 ;;             ___bmul
  5670 ;;             _timeoutnow
  5671 ;;               ___bmul (ARG)
  5672 ;;         _set_LED_Cartridge
  5673 ;;           _set_pacer
  5674 ;;             ___bmul
  5675 ;;             _timeoutnow
  5676 ;;               ___bmul (ARG)
  5677 ;;         _set_LED
  5678 ;;         _set_LED_Cat
  5679 ;;           _set_pacer
  5680 ;;             ___bmul
  5681 ;;             _timeoutnow
  5682 ;;               ___bmul (ARG)
  5683 ;;         _set_LED_Locked
  5684 ;;           _set_pacer
  5685 ;;             ___bmul
  5686 ;;             _timeoutnow
  5687 ;;               ___bmul (ARG)
  5688 ;;   _water_work
  5689 ;;     _timeoutexpired
  5690 ;;       _gettimestamp
  5691 ;;       ___bmul (ARG)
  5692 ;;     _settimeout
  5693 ;;       _gettimestamp
  5694 ;;       ___lmul (ARG)
  5695 ;;       ___bmul (ARG)
  5696 ;;     _waterdetection_event
  5697 ;;       _printtime
  5698 ;;         _printf
  5699 ;;           _putch
  5700 ;;           _isdigit
  5701 ;;           ___wmul
  5702 ;;           ___bmul
  5703 ;;           ___lwdiv
  5704 ;;           ___lwmod
  5705 ;;             ___lwdiv (ARG)
  5706 ;;       _printf
  5707 ;;         _putch
  5708 ;;         _isdigit
  5709 ;;         ___wmul
  5710 ;;         ___bmul
  5711 ;;         ___lwdiv
  5712 ;;         ___lwmod
  5713 ;;           ___lwdiv (ARG)
  5714 ;;       _water_fill
  5715 ;;       _timeoutnever
  5716 ;;         ___bmul (ARG)
  5717 ;;       _litterlanguage_event
  5718 ;;         _litterlanguage_stop
  5719 ;;           _printtime
  5720 ;;             _printf
  5721 ;;               _putch
  5722 ;;               _isdigit
  5723 ;;               ___wmul
  5724 ;;               ___bmul
  5725 ;;               ___lwdiv
  5726 ;;               ___lwmod
  5727 ;;                 ___lwdiv (ARG)
  5728 ;;           _printf
  5729 ;;             _putch
  5730 ;;             _isdigit
  5731 ;;             ___wmul
  5732 ;;             ___bmul
  5733 ;;             ___lwdiv
  5734 ;;             ___lwmod
  5735 ;;               ___lwdiv (ARG)
  5736 ;;           _set_Bowl
  5737 ;;           _set_Arm
  5738 ;;           _water_fill
  5739 ;;           _set_Dosage
  5740 ;;           _set_Pump
  5741 ;;           _set_Dryer
  5742 ;;           _timeoutnever
  5743 ;;             ___bmul (ARG)
  5744 ;;         _litterlanguage_pause
  5745 ;;           _printtime
  5746 ;;             _printf
  5747 ;;               _putch
  5748 ;;               _isdigit
  5749 ;;               ___wmul
  5750 ;;               ___bmul
  5751 ;;               ___lwdiv
  5752 ;;               ___lwmod
  5753 ;;                 ___lwdiv (ARG)
  5754 ;;           _get_Bowl
  5755 ;;           _set_Bowl
  5756 ;;           _get_Arm
  5757 ;;           _set_Arm
  5758 ;;           _water_filling
  5759 ;;           _water_fill
  5760 ;;           _get_Dosage
  5761 ;;           _set_Dosage
  5762 ;;           _get_Pump
  5763 ;;           _set_Pump
  5764 ;;           _get_Dryer
  5765 ;;           _set_Dryer
  5766 ;;           _gettimestamp
  5767 ;;           _timestampdiff
  5768 ;;           _timeoutnever
  5769 ;;             ___bmul (ARG)
  5770 ;;           _printf
  5771 ;;             _putch
  5772 ;;             _isdigit
  5773 ;;             ___wmul
  5774 ;;             ___bmul
  5775 ;;             ___lwdiv
  5776 ;;             ___lwmod
  5777 ;;               ___lwdiv (ARG)
  5778 ;;           _settimeout
  5779 ;;             _gettimestamp
  5780 ;;             ___lmul (ARG)
  5781 ;;             ___bmul (ARG)
  5782 ;;         _set_Beeper
  5783 ;;           _set_pacer
  5784 ;;             ___bmul
  5785 ;;             _timeoutnow
  5786 ;;               ___bmul (ARG)
  5787 ;;     _watersensor_event
  5788 ;;   _catgenie_work
  5789 ;;     _heatsensor_event
  5790 ;;       _litterlanguage_event
  5791 ;;         _litterlanguage_stop
  5792 ;;           _printtime
  5793 ;;             _printf
  5794 ;;               _putch
  5795 ;;               _isdigit
  5796 ;;               ___wmul
  5797 ;;               ___bmul
  5798 ;;               ___lwdiv
  5799 ;;               ___lwmod
  5800 ;;                 ___lwdiv (ARG)
  5801 ;;           _printf
  5802 ;;             _putch
  5803 ;;             _isdigit
  5804 ;;             ___wmul
  5805 ;;             ___bmul
  5806 ;;             ___lwdiv
  5807 ;;             ___lwmod
  5808 ;;               ___lwdiv (ARG)
  5809 ;;           _set_Bowl
  5810 ;;           _set_Arm
  5811 ;;           _water_fill
  5812 ;;           _set_Dosage
  5813 ;;           _set_Pump
  5814 ;;           _set_Dryer
  5815 ;;           _timeoutnever
  5816 ;;             ___bmul (ARG)
  5817 ;;         _litterlanguage_pause
  5818 ;;           _printtime
  5819 ;;             _printf
  5820 ;;               _putch
  5821 ;;               _isdigit
  5822 ;;               ___wmul
  5823 ;;               ___bmul
  5824 ;;               ___lwdiv
  5825 ;;               ___lwmod
  5826 ;;                 ___lwdiv (ARG)
  5827 ;;           _get_Bowl
  5828 ;;           _set_Bowl
  5829 ;;           _get_Arm
  5830 ;;           _set_Arm
  5831 ;;           _water_filling
  5832 ;;           _water_fill
  5833 ;;           _get_Dosage
  5834 ;;           _set_Dosage
  5835 ;;           _get_Pump
  5836 ;;           _set_Pump
  5837 ;;           _get_Dryer
  5838 ;;           _set_Dryer
  5839 ;;           _gettimestamp
  5840 ;;           _timestampdiff
  5841 ;;           _timeoutnever
  5842 ;;             ___bmul (ARG)
  5843 ;;           _printf
  5844 ;;             _putch
  5845 ;;             _isdigit
  5846 ;;             ___wmul
  5847 ;;             ___bmul
  5848 ;;             ___lwdiv
  5849 ;;             ___lwmod
  5850 ;;               ___lwdiv (ARG)
  5851 ;;           _settimeout
  5852 ;;             _gettimestamp
  5853 ;;             ___lmul (ARG)
  5854 ;;             ___bmul (ARG)
  5855 ;;         _set_Beeper
  5856 ;;           _set_pacer
  5857 ;;             ___bmul
  5858 ;;             _timeoutnow
  5859 ;;               ___bmul (ARG)
  5860 ;;     _settimeout
  5861 ;;       _gettimestamp
  5862 ;;       ___lmul (ARG)
  5863 ;;       ___bmul (ARG)
  5864 ;;     ___bmul
  5865 ;;     _timeoutexpired
  5866 ;;       _gettimestamp
  5867 ;;       ___bmul (ARG)
  5868 ;;     _setupbutton_event
  5869 ;;       _process_button
  5870 ;;         _key_Beep
  5871 ;;           _set_pacer
  5872 ;;             ___bmul
  5873 ;;             _timeoutnow
  5874 ;;               ___bmul (ARG)
  5875 ;;         _settimeout
  5876 ;;           _gettimestamp
  5877 ;;           ___lmul (ARG)
  5878 ;;           ___bmul (ARG)
  5879 ;;         _timeoutnever
  5880 ;;           ___bmul (ARG)
  5881 ;;         _update_display
  5882 ;;           _set_LED_Error
  5883 ;;             _set_pacer
  5884 ;;               ___bmul
  5885 ;;               _timeoutnow
  5886 ;;                 ___bmul (ARG)
  5887 ;;           _set_LED_Cartridge
  5888 ;;             _set_pacer
  5889 ;;               ___bmul
  5890 ;;               _timeoutnow
  5891 ;;                 ___bmul (ARG)
  5892 ;;           _set_LED
  5893 ;;           _set_LED_Cat
  5894 ;;             _set_pacer
  5895 ;;               ___bmul
  5896 ;;               _timeoutnow
  5897 ;;                 ___bmul (ARG)
  5898 ;;           _set_LED_Locked
  5899 ;;             _set_pacer
  5900 ;;               ___bmul
  5901 ;;               _timeoutnow
  5902 ;;                 ___bmul (ARG)
  5903 ;;     _startbutton_event
  5904 ;;       _process_button
  5905 ;;         _key_Beep
  5906 ;;           _set_pacer
  5907 ;;             ___bmul
  5908 ;;             _timeoutnow
  5909 ;;               ___bmul (ARG)
  5910 ;;         _settimeout
  5911 ;;           _gettimestamp
  5912 ;;           ___lmul (ARG)
  5913 ;;           ___bmul (ARG)
  5914 ;;         _timeoutnever
  5915 ;;           ___bmul (ARG)
  5916 ;;         _update_display
  5917 ;;           _set_LED_Error
  5918 ;;             _set_pacer
  5919 ;;               ___bmul
  5920 ;;               _timeoutnow
  5921 ;;                 ___bmul (ARG)
  5922 ;;           _set_LED_Cartridge
  5923 ;;             _set_pacer
  5924 ;;               ___bmul
  5925 ;;               _timeoutnow
  5926 ;;                 ___bmul (ARG)
  5927 ;;           _set_LED
  5928 ;;           _set_LED_Cat
  5929 ;;             _set_pacer
  5930 ;;               ___bmul
  5931 ;;               _timeoutnow
  5932 ;;                 ___bmul (ARG)
  5933 ;;           _set_LED_Locked
  5934 ;;             _set_pacer
  5935 ;;               ___bmul
  5936 ;;               _timeoutnow
  5937 ;;                 ___bmul (ARG)
  5938 ;;     _timeoutnever
  5939 ;;       ___bmul (ARG)
  5940 ;;   _userinterface_work
  5941 ;;     _timeoutexpired
  5942 ;;       _gettimestamp
  5943 ;;       ___bmul (ARG)
  5944 ;;     _update_autotimer
  5945 ;;       _settimeout
  5946 ;;         _gettimestamp
  5947 ;;         ___lmul (ARG)
  5948 ;;         ___bmul (ARG)
  5949 ;;       _postponetimeout
  5950 ;;       _timeoutnever
  5951 ;;         ___bmul (ARG)
  5952 ;;     _printtime
  5953 ;;       _printf
  5954 ;;         _putch
  5955 ;;         _isdigit
  5956 ;;         ___wmul
  5957 ;;         ___bmul
  5958 ;;         ___lwdiv
  5959 ;;         ___lwmod
  5960 ;;           ___lwdiv (ARG)
  5961 ;;     _printf
  5962 ;;       _putch
  5963 ;;       _isdigit
  5964 ;;       ___wmul
  5965 ;;       ___bmul
  5966 ;;       ___lwdiv
  5967 ;;       ___lwmod
  5968 ;;         ___lwdiv (ARG)
  5969 ;;     _litterlanguage_start
  5970 ;;       _printtime
  5971 ;;         _printf
  5972 ;;           _putch
  5973 ;;           _isdigit
  5974 ;;           ___wmul
  5975 ;;           ___bmul
  5976 ;;           ___lwdiv
  5977 ;;           ___lwmod
  5978 ;;             ___lwdiv (ARG)
  5979 ;;       _printf
  5980 ;;         _putch
  5981 ;;         _isdigit
  5982 ;;         ___wmul
  5983 ;;         ___bmul
  5984 ;;         ___lwdiv
  5985 ;;         ___lwmod
  5986 ;;           ___lwdiv (ARG)
  5987 ;;     _litterlanguage_running
  5988 ;;     _timeoutnow
  5989 ;;       ___bmul (ARG)
  5990 ;;     _start_short
  5991 ;;       _litterlanguage_running
  5992 ;;       _litterlanguage_start
  5993 ;;         _printtime
  5994 ;;           _printf
  5995 ;;             _putch
  5996 ;;             _isdigit
  5997 ;;             ___wmul
  5998 ;;             ___bmul
  5999 ;;             ___lwdiv
  6000 ;;             ___lwmod
  6001 ;;               ___lwdiv (ARG)
  6002 ;;         _printf
  6003 ;;           _putch
  6004 ;;           _isdigit
  6005 ;;           ___wmul
  6006 ;;           ___bmul
  6007 ;;           ___lwdiv
  6008 ;;           ___lwmod
  6009 ;;             ___lwdiv (ARG)
  6010 ;;       _litterlanguage_paused
  6011 ;;       _litterlanguage_pause
  6012 ;;         _printtime
  6013 ;;           _printf
  6014 ;;             _putch
  6015 ;;             _isdigit
  6016 ;;             ___wmul
  6017 ;;             ___bmul
  6018 ;;             ___lwdiv
  6019 ;;             ___lwmod
  6020 ;;               ___lwdiv (ARG)
  6021 ;;         _get_Bowl
  6022 ;;         _set_Bowl
  6023 ;;         _get_Arm
  6024 ;;         _set_Arm
  6025 ;;         _water_filling
  6026 ;;         _water_fill
  6027 ;;         _get_Dosage
  6028 ;;         _set_Dosage
  6029 ;;         _get_Pump
  6030 ;;         _set_Pump
  6031 ;;         _get_Dryer
  6032 ;;         _set_Dryer
  6033 ;;         _gettimestamp
  6034 ;;         _timestampdiff
  6035 ;;         _timeoutnever
  6036 ;;           ___bmul (ARG)
  6037 ;;         _printf
  6038 ;;           _putch
  6039 ;;           _isdigit
  6040 ;;           ___wmul
  6041 ;;           ___bmul
  6042 ;;           ___lwdiv
  6043 ;;           ___lwmod
  6044 ;;             ___lwdiv (ARG)
  6045 ;;         _settimeout
  6046 ;;           _gettimestamp
  6047 ;;           ___lmul (ARG)
  6048 ;;           ___bmul (ARG)
  6049 ;;         _litterlanguage_event
  6050 ;;           _litterlanguage_stop
  6051 ;;             _printtime
  6052 ;;               _printf
  6053 ;;                 _putch
  6054 ;;                 _isdigit
  6055 ;;                 ___wmul
  6056 ;;                 ___bmul
  6057 ;;                 ___lwdiv
  6058 ;;                 ___lwmod
  6059 ;;                   ___lwdiv (ARG)
  6060 ;;             _printf
  6061 ;;               _putch
  6062 ;;               _isdigit
  6063 ;;               ___wmul
  6064 ;;               ___bmul
  6065 ;;               ___lwdiv
  6066 ;;               ___lwmod
  6067 ;;                 ___lwdiv (ARG)
  6068 ;;             _set_Bowl
  6069 ;;             _set_Arm
  6070 ;;             _water_fill
  6071 ;;             _set_Dosage
  6072 ;;             _set_Pump
  6073 ;;             _set_Dryer
  6074 ;;             _timeoutnever
  6075 ;;               ___bmul (ARG)
  6076 ;;           _set_Beeper
  6077 ;;             _set_pacer
  6078 ;;               ___bmul
  6079 ;;               _timeoutnow
  6080 ;;                 ___bmul (ARG)
  6081 ;;     _setup_short
  6082 ;;       _set_mode
  6083 ;;         _printf
  6084 ;;           _putch
  6085 ;;           _isdigit
  6086 ;;           ___wmul
  6087 ;;           ___bmul
  6088 ;;           ___lwdiv
  6089 ;;           ___lwmod
  6090 ;;             ___lwdiv (ARG)
  6091 ;;         _update_autotimer
  6092 ;;           _settimeout
  6093 ;;             _gettimestamp
  6094 ;;             ___lmul (ARG)
  6095 ;;             ___bmul (ARG)
  6096 ;;           _postponetimeout
  6097 ;;           _timeoutnever
  6098 ;;             ___bmul (ARG)
  6099 ;;         _timeoutnow
  6100 ;;           ___bmul (ARG)
  6101 ;;         _eeprom_write
  6102 ;;       _settimeout
  6103 ;;         _gettimestamp
  6104 ;;         ___lmul (ARG)
  6105 ;;         ___bmul (ARG)
  6106 ;;     _both_short
  6107 ;;       _settimeout
  6108 ;;         _gettimestamp
  6109 ;;         ___lmul (ARG)
  6110 ;;         ___bmul (ARG)
  6111 ;;     _key_Beep
  6112 ;;       _set_pacer
  6113 ;;         ___bmul
  6114 ;;         _timeoutnow
  6115 ;;           ___bmul (ARG)
  6116 ;;     _start_long
  6117 ;;       _litterlanguage_running
  6118 ;;       _litterlanguage_start
  6119 ;;         _printtime
  6120 ;;           _printf
  6121 ;;             _putch
  6122 ;;             _isdigit
  6123 ;;             ___wmul
  6124 ;;             ___bmul
  6125 ;;             ___lwdiv
  6126 ;;             ___lwmod
  6127 ;;               ___lwdiv (ARG)
  6128 ;;         _printf
  6129 ;;           _putch
  6130 ;;           _isdigit
  6131 ;;           ___wmul
  6132 ;;           ___bmul
  6133 ;;           ___lwdiv
  6134 ;;           ___lwmod
  6135 ;;             ___lwdiv (ARG)
  6136 ;;       _litterlanguage_stop
  6137 ;;         _printtime
  6138 ;;           _printf
  6139 ;;             _putch
  6140 ;;             _isdigit
  6141 ;;             ___wmul
  6142 ;;             ___bmul
  6143 ;;             ___lwdiv
  6144 ;;             ___lwmod
  6145 ;;               ___lwdiv (ARG)
  6146 ;;         _printf
  6147 ;;           _putch
  6148 ;;           _isdigit
  6149 ;;           ___wmul
  6150 ;;           ___bmul
  6151 ;;           ___lwdiv
  6152 ;;           ___lwmod
  6153 ;;             ___lwdiv (ARG)
  6154 ;;         _set_Bowl
  6155 ;;         _set_Arm
  6156 ;;         _water_fill
  6157 ;;         _set_Dosage
  6158 ;;         _set_Pump
  6159 ;;         _set_Dryer
  6160 ;;         _timeoutnever
  6161 ;;           ___bmul (ARG)
  6162 ;;         _litterlanguage_event
  6163 ;;           _litterlanguage_pause
  6164 ;;             _printtime
  6165 ;;               _printf
  6166 ;;                 _putch
  6167 ;;                 _isdigit
  6168 ;;                 ___wmul
  6169 ;;                 ___bmul
  6170 ;;                 ___lwdiv
  6171 ;;                 ___lwmod
  6172 ;;                   ___lwdiv (ARG)
  6173 ;;             _get_Bowl
  6174 ;;             _set_Bowl
  6175 ;;             _get_Arm
  6176 ;;             _set_Arm
  6177 ;;             _water_filling
  6178 ;;             _water_fill
  6179 ;;             _get_Dosage
  6180 ;;             _set_Dosage
  6181 ;;             _get_Pump
  6182 ;;             _set_Pump
  6183 ;;             _get_Dryer
  6184 ;;             _set_Dryer
  6185 ;;             _gettimestamp
  6186 ;;             _timestampdiff
  6187 ;;             _timeoutnever
  6188 ;;               ___bmul (ARG)
  6189 ;;             _printf
  6190 ;;               _putch
  6191 ;;               _isdigit
  6192 ;;               ___wmul
  6193 ;;               ___bmul
  6194 ;;               ___lwdiv
  6195 ;;               ___lwmod
  6196 ;;                 ___lwdiv (ARG)
  6197 ;;             _settimeout
  6198 ;;               _gettimestamp
  6199 ;;               ___lmul (ARG)
  6200 ;;               ___bmul (ARG)
  6201 ;;           _set_Beeper
  6202 ;;             _set_pacer
  6203 ;;               ___bmul
  6204 ;;               _timeoutnow
  6205 ;;                 ___bmul (ARG)
  6206 ;;     _setup_long
  6207 ;;     _both_long
  6208 ;;       _eeprom_write
  6209 ;;     _timeoutnever
  6210 ;;       ___bmul (ARG)
  6211 ;;     _update_display
  6212 ;;       _set_LED_Error
  6213 ;;         _set_pacer
  6214 ;;           ___bmul
  6215 ;;           _timeoutnow
  6216 ;;             ___bmul (ARG)
  6217 ;;       _set_LED_Cartridge
  6218 ;;         _set_pacer
  6219 ;;           ___bmul
  6220 ;;           _timeoutnow
  6221 ;;             ___bmul (ARG)
  6222 ;;       _set_LED
  6223 ;;       _set_LED_Cat
  6224 ;;         _set_pacer
  6225 ;;           ___bmul
  6226 ;;           _timeoutnow
  6227 ;;             ___bmul (ARG)
  6228 ;;       _set_LED_Locked
  6229 ;;         _set_pacer
  6230 ;;           ___bmul
  6231 ;;           _timeoutnow
  6232 ;;             ___bmul (ARG)
  6233 ;;   _cmdline_work
  6234 ;;     _putch
  6235 ;;     _proc_char
  6236 ;;       _putch
  6237 ;;       _proc_line
  6238 ;;         _strlen
  6239 ;;         _cmd2index
  6240 ;;           ___bmul
  6241 ;;           _strncmp
  6242 ;;             ___bmul (ARG)
  6243 ;;         _printf
  6244 ;;           _putch
  6245 ;;           _isdigit
  6246 ;;           ___wmul
  6247 ;;           ___bmul
  6248 ;;           ___lwdiv
  6249 ;;           ___lwmod
  6250 ;;             ___lwdiv (ARG)
  6251 ;;         ___bmul
  6252 ;;         Absolute function(Fake)
  6253 ;;         _echo
  6254 ;;           _strncmp
  6255 ;;             ___bmul (ARG)
  6256 ;;           _printf
  6257 ;;             _putch
  6258 ;;             _isdigit
  6259 ;;             ___wmul
  6260 ;;             ___bmul
  6261 ;;             ___lwdiv
  6262 ;;             ___lwmod
  6263 ;;               ___lwdiv (ARG)
  6264 ;;         _help
  6265 ;;           _printf
  6266 ;;             _putch
  6267 ;;             _isdigit
  6268 ;;             ___wmul
  6269 ;;             ___bmul
  6270 ;;             ___lwdiv
  6271 ;;             ___lwmod
  6272 ;;               ___lwdiv (ARG)
  6273 ;;           ___bmul
  6274 ;;       _printf
  6275 ;;         _putch
  6276 ;;         _isdigit
  6277 ;;         ___wmul
  6278 ;;         ___bmul
  6279 ;;         ___lwdiv
  6280 ;;         ___lwmod
  6281 ;;           ___lwdiv (ARG)
  6282 ;;     _readch
  6283 ;;   _litterlanguage_work
  6284 ;;     _water_detected
  6285 ;;     _water_filling
  6286 ;;     _timeoutexpired
  6287 ;;       _gettimestamp
  6288 ;;       ___bmul (ARG)
  6289 ;;     _printtime
  6290 ;;       _printf
  6291 ;;         _putch
  6292 ;;         _isdigit
  6293 ;;         ___wmul
  6294 ;;         ___bmul
  6295 ;;         ___lwdiv
  6296 ;;         ___lwmod
  6297 ;;           ___lwdiv (ARG)
  6298 ;;     _printf
  6299 ;;       _putch
  6300 ;;       _isdigit
  6301 ;;       ___wmul
  6302 ;;       ___bmul
  6303 ;;       ___lwdiv
  6304 ;;       ___lwmod
  6305 ;;         ___lwdiv (ARG)
  6306 ;;     _litterlanguage_event
  6307 ;;       _litterlanguage_stop
  6308 ;;         _printtime
  6309 ;;           _printf
  6310 ;;             _putch
  6311 ;;             _isdigit
  6312 ;;             ___wmul
  6313 ;;             ___bmul
  6314 ;;             ___lwdiv
  6315 ;;             ___lwmod
  6316 ;;               ___lwdiv (ARG)
  6317 ;;         _printf
  6318 ;;           _putch
  6319 ;;           _isdigit
  6320 ;;           ___wmul
  6321 ;;           ___bmul
  6322 ;;           ___lwdiv
  6323 ;;           ___lwmod
  6324 ;;             ___lwdiv (ARG)
  6325 ;;         _set_Bowl
  6326 ;;         _set_Arm
  6327 ;;         _water_fill
  6328 ;;         _set_Dosage
  6329 ;;         _set_Pump
  6330 ;;         _set_Dryer
  6331 ;;         _timeoutnever
  6332 ;;           ___bmul (ARG)
  6333 ;;       _litterlanguage_pause
  6334 ;;         _printtime
  6335 ;;           _printf
  6336 ;;             _putch
  6337 ;;             _isdigit
  6338 ;;             ___wmul
  6339 ;;             ___bmul
  6340 ;;             ___lwdiv
  6341 ;;             ___lwmod
  6342 ;;               ___lwdiv (ARG)
  6343 ;;         _get_Bowl
  6344 ;;         _set_Bowl
  6345 ;;         _get_Arm
  6346 ;;         _set_Arm
  6347 ;;         _water_filling
  6348 ;;         _water_fill
  6349 ;;         _get_Dosage
  6350 ;;         _set_Dosage
  6351 ;;         _get_Pump
  6352 ;;         _set_Pump
  6353 ;;         _get_Dryer
  6354 ;;         _set_Dryer
  6355 ;;         _gettimestamp
  6356 ;;         _timestampdiff
  6357 ;;         _timeoutnever
  6358 ;;           ___bmul (ARG)
  6359 ;;         _printf
  6360 ;;           _putch
  6361 ;;           _isdigit
  6362 ;;           ___wmul
  6363 ;;           ___bmul
  6364 ;;           ___lwdiv
  6365 ;;           ___lwmod
  6366 ;;             ___lwdiv (ARG)
  6367 ;;         _settimeout
  6368 ;;           _gettimestamp
  6369 ;;           ___lmul (ARG)
  6370 ;;           ___bmul (ARG)
  6371 ;;       _set_Beeper
  6372 ;;         _set_pacer
  6373 ;;           ___bmul
  6374 ;;           _timeoutnow
  6375 ;;             ___bmul (ARG)
  6376 ;;     _get_Pump
  6377 ;;     _timeoutnever
  6378 ;;       ___bmul (ARG)
  6379 ;;     _set_Dosage
  6380 ;;     _req_instruction
  6381 ;;       _romwashprogram_reqins
  6382 ;;     _get_instruction
  6383 ;;       _romwashprogram_getins
  6384 ;;     _eeprom_read
  6385 ;;     _eeprom_write
  6386 ;;     _exe_instruction
  6387 ;;       _printtime
  6388 ;;         _printf
  6389 ;;           _putch
  6390 ;;           _isdigit
  6391 ;;           ___wmul
  6392 ;;           ___bmul
  6393 ;;           ___lwdiv
  6394 ;;           ___lwmod
  6395 ;;             ___lwdiv (ARG)
  6396 ;;       _printf
  6397 ;;         _putch
  6398 ;;         _isdigit
  6399 ;;         ___wmul
  6400 ;;         ___bmul
  6401 ;;         ___lwdiv
  6402 ;;         ___lwmod
  6403 ;;           ___lwdiv (ARG)
  6404 ;;       _set_Bowl
  6405 ;;       _set_Arm
  6406 ;;       _eeprom_read
  6407 ;;       _eeprom_write
  6408 ;;       _water_detected
  6409 ;;       _water_fill
  6410 ;;       _settimeout
  6411 ;;         _gettimestamp
  6412 ;;         ___lmul (ARG)
  6413 ;;         ___bmul (ARG)
  6414 ;;       _timeoutnever
  6415 ;;         ___bmul (ARG)
  6416 ;;       _set_Pump
  6417 ;;       _set_Dryer
  6418 ;;       ___lmul
  6419 ;;       ___wmul
  6420 ;;       ___lwdiv
  6421 ;;       ___lwmod
  6422 ;;         ___lwdiv (ARG)
  6423 ;;       _set_Dosage
  6424 ;;       _memcpy
  6425 ;;       _litterlanguage_stop
  6426 ;;         _printtime
  6427 ;;           _printf
  6428 ;;             _putch
  6429 ;;             _isdigit
  6430 ;;             ___wmul
  6431 ;;             ___bmul
  6432 ;;             ___lwdiv
  6433 ;;             ___lwmod
  6434 ;;               ___lwdiv (ARG)
  6435 ;;         _printf
  6436 ;;           _putch
  6437 ;;           _isdigit
  6438 ;;           ___wmul
  6439 ;;           ___bmul
  6440 ;;           ___lwdiv
  6441 ;;           ___lwmod
  6442 ;;             ___lwdiv (ARG)
  6443 ;;         _set_Bowl
  6444 ;;         _set_Arm
  6445 ;;         _water_fill
  6446 ;;         _set_Dosage
  6447 ;;         _set_Pump
  6448 ;;         _set_Dryer
  6449 ;;         _timeoutnever
  6450 ;;           ___bmul (ARG)
  6451 ;;         _litterlanguage_event
  6452 ;;           _litterlanguage_pause
  6453 ;;             _printtime
  6454 ;;               _printf
  6455 ;;                 _putch
  6456 ;;                 _isdigit
  6457 ;;                 ___wmul
  6458 ;;                 ___bmul
  6459 ;;                 ___lwdiv
  6460 ;;                 ___lwmod
  6461 ;;                   ___lwdiv (ARG)
  6462 ;;             _get_Bowl
  6463 ;;             _set_Bowl
  6464 ;;             _get_Arm
  6465 ;;             _set_Arm
  6466 ;;             _water_filling
  6467 ;;             _water_fill
  6468 ;;             _get_Dosage
  6469 ;;             _set_Dosage
  6470 ;;             _get_Pump
  6471 ;;             _set_Pump
  6472 ;;             _get_Dryer
  6473 ;;             _set_Dryer
  6474 ;;             _gettimestamp
  6475 ;;             _timestampdiff
  6476 ;;             _timeoutnever
  6477 ;;               ___bmul (ARG)
  6478 ;;             _printf
  6479 ;;               _putch
  6480 ;;               _isdigit
  6481 ;;               ___wmul
  6482 ;;               ___bmul
  6483 ;;               ___lwdiv
  6484 ;;               ___lwmod
  6485 ;;                 ___lwdiv (ARG)
  6486 ;;             _settimeout
  6487 ;;               _gettimestamp
  6488 ;;               ___lmul (ARG)
  6489 ;;               ___bmul (ARG)
  6490 ;;           _set_Beeper
  6491 ;;             _set_pacer
  6492 ;;               ___bmul
  6493 ;;               _timeoutnow
  6494 ;;                 ___bmul (ARG)
  6495 ;;       _litterlanguage_event
  6496 ;;         _litterlanguage_stop
  6497 ;;           _printtime
  6498 ;;             _printf
  6499 ;;               _putch
  6500 ;;               _isdigit
  6501 ;;               ___wmul
  6502 ;;               ___bmul
  6503 ;;               ___lwdiv
  6504 ;;               ___lwmod
  6505 ;;                 ___lwdiv (ARG)
  6506 ;;           _printf
  6507 ;;             _putch
  6508 ;;             _isdigit
  6509 ;;             ___wmul
  6510 ;;             ___bmul
  6511 ;;             ___lwdiv
  6512 ;;             ___lwmod
  6513 ;;               ___lwdiv (ARG)
  6514 ;;           _set_Bowl
  6515 ;;           _set_Arm
  6516 ;;           _water_fill
  6517 ;;           _set_Dosage
  6518 ;;           _set_Pump
  6519 ;;           _set_Dryer
  6520 ;;           _timeoutnever
  6521 ;;             ___bmul (ARG)
  6522 ;;         _litterlanguage_pause
  6523 ;;           _printtime
  6524 ;;             _printf
  6525 ;;               _putch
  6526 ;;               _isdigit
  6527 ;;               ___wmul
  6528 ;;               ___bmul
  6529 ;;               ___lwdiv
  6530 ;;               ___lwmod
  6531 ;;                 ___lwdiv (ARG)
  6532 ;;           _get_Bowl
  6533 ;;           _set_Bowl
  6534 ;;           _get_Arm
  6535 ;;           _set_Arm
  6536 ;;           _water_filling
  6537 ;;           _water_fill
  6538 ;;           _get_Dosage
  6539 ;;           _set_Dosage
  6540 ;;           _get_Pump
  6541 ;;           _set_Pump
  6542 ;;           _get_Dryer
  6543 ;;           _set_Dryer
  6544 ;;           _gettimestamp
  6545 ;;           _timestampdiff
  6546 ;;           _timeoutnever
  6547 ;;             ___bmul (ARG)
  6548 ;;           _printf
  6549 ;;             _putch
  6550 ;;             _isdigit
  6551 ;;             ___wmul
  6552 ;;             ___bmul
  6553 ;;             ___lwdiv
  6554 ;;             ___lwmod
  6555 ;;               ___lwdiv (ARG)
  6556 ;;           _settimeout
  6557 ;;             _gettimestamp
  6558 ;;             ___lmul (ARG)
  6559 ;;             ___bmul (ARG)
  6560 ;;         _set_Beeper
  6561 ;;           _set_pacer
  6562 ;;             ___bmul
  6563 ;;             _timeoutnow
  6564 ;;               ___bmul (ARG)
  6565 ;;     _wait_instruction
  6566 ;;       _timeoutexpired
  6567 ;;         _gettimestamp
  6568 ;;         ___bmul (ARG)
  6569 ;;       _water_detected
  6570 ;;       _timeoutnever
  6571 ;;         ___bmul (ARG)
  6572 ;;       _get_Dosage
  6573 ;;
  6574 ;; _isr (ROOT)
  6575 ;;   _timer_isr
  6576 ;;   _catsensor_isr_timer
  6577 ;;   _catsensor_isr_input
  6578 ;;   _serial_rx_isr
  6579 ;;   _serial_tx_isr
  6580 ;;
  6581                           
  6582 ;; Address spaces:
  6583                           
  6584 ;;Name               Size   Autos  Total    Cost      Usage
  6585 ;;BIGRAM             3F0      0       0       0        0.0%
  6586 ;;EEDATA             100      0       0       0        0.0%
  6587 ;;NULL                 0      0       0       0        0.0%
  6588 ;;CODE                 0      0       0       0        0.0%
  6589 ;;BITCOMMON            E      0       2       1       14.3%
  6590 ;;BITSFR0              0      0       0       1        0.0%
  6591 ;;SFR0                 0      0       0       1        0.0%
  6592 ;;COMMON               E      C       E       2      100.0%
  6593 ;;BITSFR1              0      0       0       2        0.0%
  6594 ;;SFR1                 0      0       0       2        0.0%
  6595 ;;BITSFR2              0      0       0       3        0.0%
  6596 ;;SFR2                 0      0       0       3        0.0%
  6597 ;;STACK                0      0       B       3        0.0%
  6598 ;;BITBANK0            4F      0       1       4        1.3%
  6599 ;;BITSFR3              0      0       0       4        0.0%
  6600 ;;SFR3                 0      0       0       4        0.0%
  6601 ;;BANK0               4F     41      4F       5      100.0%
  6602 ;;BITSFR4              0      0       0       5        0.0%
  6603 ;;SFR4                 0      0       0       5        0.0%
  6604 ;;BITBANK1            50      0       0       6        0.0%
  6605 ;;BITSFR5              0      0       0       6        0.0%
  6606 ;;SFR5                 0      0       0       6        0.0%
  6607 ;;BANK1               50     26      50       7      100.0%
  6608 ;;BITSFR6              0      0       0       7        0.0%
  6609 ;;SFR6                 0      0       0       7        0.0%
  6610 ;;BITBANK2            50      0       0       8        0.0%
  6611 ;;BITSFR7              0      0       0       8        0.0%
  6612 ;;SFR7                 0      0       0       8        0.0%
  6613 ;;BANK2               50      0      50       9      100.0%
  6614 ;;BITSFR8              0      0       0       9        0.0%
  6615 ;;SFR8                 0      0       0       9        0.0%
  6616 ;;BITBANK3            50      0       0      10        0.0%
  6617 ;;BITSFR9              0      0       0      10        0.0%
  6618 ;;SFR9                 0      0       0      10        0.0%
  6619 ;;BANK3               50      0      31      11       61.3%
  6620 ;;BITSFR10             0      0       0      11        0.0%
  6621 ;;SFR10                0      0       0      11        0.0%
  6622 ;;BITBANK4            50      0       0      12        0.0%
  6623 ;;BITSFR11             0      0       0      12        0.0%
  6624 ;;SFR11                0      0       0      12        0.0%
  6625 ;;BANK4               50      0      3C      13       75.0%
  6626 ;;BITSFR12             0      0       0      13        0.0%
  6627 ;;SFR12                0      0       0      13        0.0%
  6628 ;;BITBANK5            50      0       0      14        0.0%
  6629 ;;BITSFR13             0      0       0      14        0.0%
  6630 ;;SFR13                0      0       0      14        0.0%
  6631 ;;BANK5               50      0       0      15        0.0%
  6632 ;;BITSFR14             0      0       0      15        0.0%
  6633 ;;SFR14                0      0       0      15        0.0%
  6634 ;;BITBANK6            50      0       0      16        0.0%
  6635 ;;BITSFR15             0      0       0      16        0.0%
  6636 ;;SFR15                0      0       0      16        0.0%
  6637 ;;BANK6               50      0       0      17        0.0%
  6638 ;;BITSFR16             0      0       0      17        0.0%
  6639 ;;SFR16                0      0       0      17        0.0%
  6640 ;;BITBANK7            50      0       0      18        0.0%
  6641 ;;BITSFR17             0      0       0      18        0.0%
  6642 ;;SFR17                0      0       0      18        0.0%
  6643 ;;BANK7               50      0       0      19        0.0%
  6644 ;;BITSFR18             0      0       0      19        0.0%
  6645 ;;SFR18                0      0       0      19        0.0%
  6646 ;;BITSFR19             0      0       0      20        0.0%
  6647 ;;SFR19                0      0       0      20        0.0%
  6648 ;;ABS                  0      0     16A      20        0.0%
  6649 ;;BITBANK8            50      0       0      21        0.0%
  6650 ;;BITSFR20             0      0       0      21        0.0%
  6651 ;;SFR20                0      0       0      21        0.0%
  6652 ;;BANK8               50      0       0      22        0.0%
  6653 ;;BITSFR21             0      0       0      22        0.0%
  6654 ;;SFR21                0      0       0      22        0.0%
  6655 ;;BITBANK9            50      0       0      23        0.0%
  6656 ;;BITSFR22             0      0       0      23        0.0%
  6657 ;;SFR22                0      0       0      23        0.0%
  6658 ;;BANK9               50      0       0      24        0.0%
  6659 ;;BITSFR23             0      0       0      24        0.0%
  6660 ;;SFR23                0      0       0      24        0.0%
  6661 ;;BITBANK10           50      0       0      25        0.0%
  6662 ;;BITSFR24             0      0       0      25        0.0%
  6663 ;;SFR24                0      0       0      25        0.0%
  6664 ;;BANK10              50      0       0      26        0.0%
  6665 ;;BITSFR25             0      0       0      26        0.0%
  6666 ;;SFR25                0      0       0      26        0.0%
  6667 ;;BITBANK11           50      0       0      27        0.0%
  6668 ;;BITSFR26             0      0       0      27        0.0%
  6669 ;;SFR26                0      0       0      27        0.0%
  6670 ;;BANK11              50      0       0      28        0.0%
  6671 ;;BITSFR27             0      0       0      28        0.0%
  6672 ;;SFR27                0      0       0      28        0.0%
  6673 ;;BITBANK12           30      0       0      29        0.0%
  6674 ;;BITSFR28             0      0       0      29        0.0%
  6675 ;;SFR28                0      0       0      29        0.0%
  6676 ;;BANK12              30      0       0      30        0.0%
  6677 ;;BITSFR29             0      0       0      30        0.0%
  6678 ;;SFR29                0      0       0      30        0.0%
  6679 ;;BITSFR30             0      0       0      31        0.0%
  6680 ;;SFR30                0      0       0      31        0.0%
  6681 ;;DATA                 0      0     175      31        0.0%
  6682 ;;BITSFR31             0      0       0      32        0.0%
  6683 ;;SFR31                0      0       0      32        0.0%
  6684                           
  6685                           	global	_main
  6686                           psect	maintext,global,class=CODE,delta=2
  6687                           global __pmaintext
  6688  274D                     __pmaintext:
  6689                           
  6690 ;; *************** function _main *****************
  6691 ;; Defined at:
  6692 ;;		line 76 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  flags           1   64[BANK0 ] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;		None               void
  6699 ;; Registers used:
  6700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 17F/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  6710 ;;Total ram usage:        2 bytes
  6711 ;; Hardware stack levels required when called:   10
  6712 ;; This function calls:
  6713 ;;		_catgenie_init
  6714 ;;		_serial_init
  6715 ;;		_printf
  6716 ;;		_timer_init
  6717 ;;		_rtc_init
  6718 ;;		_catsensor_init
  6719 ;;		_water_init
  6720 ;;		_userinterface_init
  6721 ;;		_cmdline_init
  6722 ;;		_litterlanguage_init
  6723 ;;		_interrupt_init
  6724 ;;		_rtc_work
  6725 ;;		_catsensor_work
  6726 ;;		_water_work
  6727 ;;		_catgenie_work
  6728 ;;		_userinterface_work
  6729 ;;		_cmdline_work
  6730 ;;		_litterlanguage_work
  6731 ;; This function is called by:
  6732 ;;		Startup code after reset
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           psect	maintext
  6736                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
  6737                           	line	76
  6738                           	global	__size_of_main
  6739  00B3                     	__size_of_main	equ	__end_of_main-_main
  6740                           	
  6741  274D                     _main:	
  6742                           	opt	stack 6
  6743                           ; Regs used in _main: [allreg]
  6744                           	line	80
  6745                           	
  6746  274D                     l38887:	
  6747                           ;catgenius.c: 77: unsigned char flags;
  6748                           ;catgenius.c: 80: flags = catgenie_init();
  6749  274D  3180  2053  31A7   	fcall	_catgenie_init
  6750  2750  0020               	movlb 0	; select bank0
  6751  2751  00E0               	movwf	(??_main+0)+0
  6752  2752  0860               	movf	(??_main+0)+0,w
  6753  2753  00E1               	movwf	(main@flags)
  6754                           	line	89
  6755                           	
  6756  2754                     l38889:	
  6757                           ;catgenius.c: 89: serial_init(19200UL, 0);
  6758  2754  3000               	movlw	0
  6759  2755  00B2               	movwf	(?_serial_init+3)
  6760  2756  3000               	movlw	0
  6761  2757  00B1               	movwf	(?_serial_init+2)
  6762  2758  304B               	movlw	04Bh
  6763  2759  00B0               	movwf	(?_serial_init+1)
  6764  275A  3000               	movlw	0
  6765  275B  00AF               	movwf	(?_serial_init)
  6766                           
  6767  275C  01B3               	clrf	0+(?_serial_init)+04h
  6768  275D  3199  212D  31A7   	fcall	_serial_init
  6769                           	line	92
  6770                           	
  6771  2760                     l38891:	
  6772                           ;catgenius.c: 92: printf("\n*** CatGenius ***\n");
  6773  2760  3006               	movlw	low(STR_1|8000h)
  6774  2761  0020               	movlb 0	; select bank0
  6775  2762  00AF               	movwf	(?_printf)
  6776  2763  3086               	movlw	high(STR_1|8000h)
  6777  2764  00B0               	movwf	((?_printf))+1
  6778  2765  3194  24A0  31A7   	fcall	_printf
  6779                           	line	93
  6780                           	
  6781  2768                     l38893:	
  6782                           ;catgenius.c: 93: if (!nPOR) {
  6783  2768  0021               	movlb 1	; select bank1
  6784  2769  1896               	btfsc	(1201/8)^080h,(1201)&7
  6785  276A  2F6C               	goto	u12941
  6786  276B  2F6D               	goto	u12940
  6787  276C                     u12941:
  6788  276C  2F78               	goto	l2081
  6789  276D                     u12940:
  6790                           	line	95
  6791                           	
  6792  276D                     l38895:	
  6793                           ;catgenius.c: 95: printf("Power-on reset\n");
  6794  276D  3089               	movlw	low(STR_2|8000h)
  6795  276E  0020               	movlb 0	; select bank0
  6796  276F  00AF               	movwf	(?_printf)
  6797  2770  3087               	movlw	high(STR_2|8000h)
  6798  2771  00B0               	movwf	((?_printf))+1
  6799  2772  3194  24A0  31A7   	fcall	_printf
  6800                           	line	97
  6801                           	
  6802  2775                     l38897:	
  6803                           ;catgenius.c: 97: flags |= (0x01 << 7);
  6804  2775  0020               	movlb 0	; select bank0
  6805  2776  17E1               	bsf	(main@flags)+(7/8),(7)&7
  6806                           	line	98
  6807                           ;catgenius.c: 98: } else if (!nBOR) {
  6808  2777  2FAC               	goto	l38909
  6809                           	
  6810  2778                     l2081:	
  6811  2778  1816               	btfsc	(1200/8)^080h,(1200)&7
  6812  2779  2F7B               	goto	u12951
  6813  277A  2F7C               	goto	u12950
  6814  277B                     u12951:
  6815  277B  2F87               	goto	l2083
  6816  277C                     u12950:
  6817                           	line	100
  6818                           	
  6819  277C                     l38899:	
  6820                           ;catgenius.c: 100: printf("Brown-out reset\n");
  6821  277C  3038               	movlw	low(STR_3|8000h)
  6822  277D  0020               	movlb 0	; select bank0
  6823  277E  00AF               	movwf	(?_printf)
  6824  277F  3087               	movlw	high(STR_3|8000h)
  6825  2780  00B0               	movwf	((?_printf))+1
  6826  2781  3194  24A0  31A7   	fcall	_printf
  6827                           	line	102
  6828                           	
  6829  2784                     l38901:	
  6830                           ;catgenius.c: 102: flags |= (0x01 << 7);
  6831  2784  0020               	movlb 0	; select bank0
  6832  2785  17E1               	bsf	(main@flags)+(7/8),(7)&7
  6833                           	line	103
  6834                           ;catgenius.c: 103: }
  6835  2786  2FAC               	goto	l38909
  6836                           	line	106
  6837                           	
  6838  2787                     l2083:	
  6839                           ;catgenius.c: 106: else if (!__timeout)
  6840  2787  0020               	movlb 0	; select bank0
  6841  2788  1A20               	btfsc	(260/8),(260)&7
  6842  2789  2F8B               	goto	u12961
  6843  278A  2F8C               	goto	u12960
  6844  278B                     u12961:
  6845  278B  2F94               	goto	l2085
  6846  278C                     u12960:
  6847                           	line	107
  6848                           	
  6849  278C                     l38903:	
  6850                           ;catgenius.c: 107: printf("Watchdog reset\n");
  6851  278C  3079               	movlw	low(STR_4|8000h)
  6852  278D  00AF               	movwf	(?_printf)
  6853  278E  3087               	movlw	high(STR_4|8000h)
  6854  278F  00B0               	movwf	((?_printf))+1
  6855  2790  3194  24A0  31A7   	fcall	_printf
  6856  2793  2FAC               	goto	l38909
  6857                           	line	108
  6858                           	
  6859  2794                     l2085:	
  6860                           ;catgenius.c: 108: else if (!__powerdown)
  6861  2794  19A0               	btfsc	(259/8),(259)&7
  6862  2795  2F97               	goto	u12971
  6863  2796  2F98               	goto	u12970
  6864  2797                     u12971:
  6865  2797  2FA0               	goto	l38907
  6866  2798                     u12970:
  6867                           	line	109
  6868                           	
  6869  2798                     l38905:	
  6870                           ;catgenius.c: 109: printf("Pin reset (sleep)\n");
  6871  2798  3040               	movlw	low(STR_5|8000h)
  6872  2799  00AF               	movwf	(?_printf)
  6873  279A  3086               	movlw	high(STR_5|8000h)
  6874  279B  00B0               	movwf	((?_printf))+1
  6875  279C  3194  24A0  31A7   	fcall	_printf
  6876  279F  2FAC               	goto	l38909
  6877                           	line	110
  6878                           	
  6879  27A0                     l2087:	
  6880                           	line	111
  6881                           	
  6882  27A0                     l38907:	
  6883                           ;catgenius.c: 110: else
  6884                           ;catgenius.c: 111: printf("Pin reset\n");
  6885  27A0  3061               	movlw	low(STR_6|8000h)
  6886  27A1  0020               	movlb 0	; select bank0
  6887  27A2  00AF               	movwf	(?_printf)
  6888  27A3  3088               	movlw	high(STR_6|8000h)
  6889  27A4  00B0               	movwf	((?_printf))+1
  6890  27A5  3194  24A0  31A7   	fcall	_printf
  6891  27A8  2FAC               	goto	l38909
  6892                           	
  6893  27A9                     l2088:	
  6894  27A9  2FAC               	goto	l38909
  6895                           	
  6896  27AA                     l2086:	
  6897  27AA  2FAC               	goto	l38909
  6898                           	
  6899  27AB                     l2084:	
  6900  27AB  2FAC               	goto	l38909
  6901                           	
  6902  27AC                     l2082:	
  6903                           	line	117
  6904                           	
  6905  27AC                     l38909:	
  6906                           ;catgenius.c: 117: nPOR = 1;
  6907  27AC  0021               	movlb 1	; select bank1
  6908  27AD  1496               	bsf	(1201/8)^080h,(1201)&7
  6909                           	line	118
  6910                           	
  6911  27AE                     l38911:	
  6912                           ;catgenius.c: 118: nBOR = 1;
  6913  27AE  1416               	bsf	(1200/8)^080h,(1200)&7
  6914                           	line	120
  6915                           	
  6916  27AF                     l38913:	
  6917                           ;catgenius.c: 120: if (flags & (0x01 << 0))
  6918  27AF  0020               	movlb 0	; select bank0
  6919  27B0  1C61               	btfss	(main@flags),(0)&7
  6920  27B1  2FB3               	goto	u12981
  6921  27B2  2FB4               	goto	u12980
  6922  27B3                     u12981:
  6923  27B3  2FBC               	goto	l38917
  6924  27B4                     u12980:
  6925                           	line	121
  6926                           	
  6927  27B4                     l38915:	
  6928                           ;catgenius.c: 121: printf("Start button held\n");
  6929  27B4  3066               	movlw	low(STR_7|8000h)
  6930  27B5  00AF               	movwf	(?_printf)
  6931  27B6  3086               	movlw	high(STR_7|8000h)
  6932  27B7  00B0               	movwf	((?_printf))+1
  6933  27B8  3194  24A0  31A7   	fcall	_printf
  6934  27BB  2FBC               	goto	l38917
  6935                           	
  6936  27BC                     l2089:	
  6937                           	line	122
  6938                           	
  6939  27BC                     l38917:	
  6940                           ;catgenius.c: 122: if (flags & (0x01 << 1))
  6941  27BC  0020               	movlb 0	; select bank0
  6942  27BD  1CE1               	btfss	(main@flags),(1)&7
  6943  27BE  2FC0               	goto	u12991
  6944  27BF  2FC1               	goto	u12990
  6945  27C0                     u12991:
  6946  27C0  2FC9               	goto	l38921
  6947  27C1                     u12990:
  6948                           	line	123
  6949                           	
  6950  27C1                     l38919:	
  6951                           ;catgenius.c: 123: printf("Setup button held\n");
  6952  27C1  3053               	movlw	low(STR_8|8000h)
  6953  27C2  00AF               	movwf	(?_printf)
  6954  27C3  3086               	movlw	high(STR_8|8000h)
  6955  27C4  00B0               	movwf	((?_printf))+1
  6956  27C5  3194  24A0  31A7   	fcall	_printf
  6957  27C8  2FC9               	goto	l38921
  6958                           	
  6959  27C9                     l2090:	
  6960                           	line	126
  6961                           	
  6962  27C9                     l38921:	
  6963                           ;catgenius.c: 126: timer_init();
  6964  27C9  31B7  2733  31A7   	fcall	_timer_init
  6965                           	line	129
  6966                           	
  6967  27CC                     l38923:	
  6968                           ;catgenius.c: 129: rtc_init(flags);
  6969  27CC  0020               	movlb 0	; select bank0
  6970  27CD  0861               	movf	(main@flags),w
  6971  27CE  31A9  219A  31A7   	fcall	_rtc_init
  6972                           	line	132
  6973                           	
  6974  27D1                     l38925:	
  6975                           ;catgenius.c: 132: catsensor_init();
  6976  27D1  31B7  2774  31A7   	fcall	_catsensor_init
  6977                           	line	135
  6978                           	
  6979  27D4                     l38927:	
  6980                           ;catgenius.c: 135: water_init();
  6981  27D4  3190  2003  31A7   	fcall	_water_init
  6982                           	line	138
  6983                           	
  6984  27D7                     l38929:	
  6985                           ;catgenius.c: 138: userinterface_init(flags);
  6986  27D7  0020               	movlb 0	; select bank0
  6987  27D8  0861               	movf	(main@flags),w
  6988  27D9  31AB  2398  31A7   	fcall	_userinterface_init
  6989                           	line	142
  6990                           	
  6991  27DC                     l38931:	
  6992                           ;catgenius.c: 142: cmdline_init();
  6993  27DC  31B7  274A  31A7   	fcall	_cmdline_init
  6994                           	line	146
  6995                           	
  6996  27DF                     l38933:	
  6997                           ;catgenius.c: 146: litterlanguage_init(flags);
  6998  27DF  0020               	movlb 0	; select bank0
  6999  27E0  0861               	movf	(main@flags),w
  7000  27E1  31A5  2530  31A7   	fcall	_litterlanguage_init
  7001                           	line	149
  7002                           	
  7003  27E4                     l38935:	
  7004                           ;catgenius.c: 149: interrupt_init();
  7005  27E4  31B7  272A  31A7   	fcall	_interrupt_init
  7006  27E7  2FE8               	goto	l38937
  7007                           	line	152
  7008                           ;catgenius.c: 152: for(;;){
  7009                           	
  7010  27E8                     l2091:	
  7011                           	line	153
  7012                           	
  7013  27E8                     l38937:	
  7014                           ;catgenius.c: 153: rtc_work();
  7015  27E8  31A0  200C  31A7   	fcall	_rtc_work
  7016                           	line	154
  7017                           	
  7018  27EB                     l38939:	
  7019                           ;catgenius.c: 154: catsensor_work();
  7020  27EB  31A6  262E  31A7   	fcall	_catsensor_work
  7021                           	line	155
  7022                           	
  7023  27EE                     l38941:	
  7024                           ;catgenius.c: 155: water_work();
  7025  27EE  3181  210B  31A7   	fcall	_water_work
  7026                           	line	156
  7027                           	
  7028  27F1                     l38943:	
  7029                           ;catgenius.c: 156: catgenie_work();
  7030  27F1  3190  202B  31A7   	fcall	_catgenie_work
  7031                           	line	157
  7032                           	
  7033  27F4                     l38945:	
  7034                           ;catgenius.c: 157: userinterface_work();
  7035  27F4  319D  2532  31A7   	fcall	_userinterface_work
  7036                           	line	159
  7037                           	
  7038  27F7                     l38947:	
  7039                           ;catgenius.c: 159: cmdline_work();
  7040  27F7  31A9  21F3  31A7   	fcall	_cmdline_work
  7041                           	line	161
  7042                           	
  7043  27FA                     l38949:	
  7044                           ;catgenius.c: 161: litterlanguage_work();
  7045  27FA  319E  268C  31A7   	fcall	_litterlanguage_work
  7046                           	line	165
  7047                           ;catgenius.c: 165: }
  7048  27FD  2FE8               	goto	l38937
  7049                           	
  7050  27FE                     l2092:	
  7051                           	line	166
  7052                           	
  7053  27FE                     l2093:	
  7054                           	global	start
  7055  27FE  3180  284E         	ljmp	start
  7056                           	opt stack 0
  7057                           GLOBAL	__end_of_main
  7058  2800                     	__end_of_main:
  7059 ;; =============== function _main ends ============
  7060                           
  7061                           	signat	_main,88
  7062                           	global	_litterlanguage_work
  7063                           psect	text3310,local,class=CODE,delta=2
  7064                           global __ptext3310
  7065  1E8C                     __ptext3310:
  7066                           
  7067 ;; *************** function _litterlanguage_work *****************
  7068 ;; Defined at:
  7069 ;;		line 132 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;		None
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  7086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7087 ;;Total ram usage:        4 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    9
  7090 ;; This function calls:
  7091 ;;		_water_detected
  7092 ;;		_water_filling
  7093 ;;		_timeoutexpired
  7094 ;;		_printtime
  7095 ;;		_printf
  7096 ;;		_litterlanguage_event
  7097 ;;		_get_Pump
  7098 ;;		_timeoutnever
  7099 ;;		_set_Dosage
  7100 ;;		_req_instruction
  7101 ;;		_get_instruction
  7102 ;;		_eeprom_read
  7103 ;;		_eeprom_write
  7104 ;;		_exe_instruction
  7105 ;;		_wait_instruction
  7106 ;; This function is called by:
  7107 ;;		_main
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           psect	text3310
  7111                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7112                           	line	132
  7113                           	global	__size_of_litterlanguage_work
  7114  0174                     	__size_of_litterlanguage_work	equ	__end_of_litterlanguage_work-_litterlanguage_work
  7115                           	
  7116  1E8C                     _litterlanguage_work:	
  7117                           	opt	stack 6
  7118                           ; Regs used in _litterlanguage_work: [allreg]
  7119                           	line	134
  7120                           	
  7121  1E8C                     l38791:	
  7122                           ;litterlanguage.c: 134: if (paused)
  7123  1E8C  1EF1               	btfss	(_paused/8),(_paused)&7
  7124  1E8D  2E8F               	goto	u12751
  7125  1E8E  2E90               	goto	u12750
  7126  1E8F                     u12751:
  7127  1E8F  2E92               	goto	l38795
  7128  1E90                     u12750:
  7129  1E90  2FFF               	goto	l4241
  7130                           	line	135
  7131                           	
  7132  1E91                     l38793:	
  7133                           ;litterlanguage.c: 135: return;
  7134  1E91  2FFF               	goto	l4241
  7135                           	
  7136  1E92                     l4240:	
  7137                           	line	138
  7138                           	
  7139  1E92                     l38795:	
  7140                           ;litterlanguage.c: 138: if (ins_state != 0) {
  7141  1E92  0020               	movlb 0	; select bank0
  7142  1E93  0865               	movf	(_ins_state),w
  7143  1E94  1D03               	skipz
  7144  1E95  2E97               	goto	u12760
  7145  1E96  2FF4               	goto	l38879
  7146  1E97                     u12760:
  7147                           	line	142
  7148                           	
  7149  1E97                     l38797:	
  7150                           ;litterlanguage.c: 140: if( !water_detected() &&
  7151                           ;litterlanguage.c: 141: water_filling() &&
  7152                           ;litterlanguage.c: 142: timeoutexpired(&timer_fill) ){
  7153  1E97  31B7  270B  319E   	fcall	_water_detected
  7154  1E9A  3800               	iorlw	0
  7155  1E9B  1D03               	skipz
  7156  1E9C  2E9E               	goto	u12771
  7157  1E9D  2E9F               	goto	u12770
  7158  1E9E                     u12771:
  7159  1E9E  2ECC               	goto	l38809
  7160  1E9F                     u12770:
  7161                           	
  7162  1E9F                     l38799:	
  7163  1E9F  31B7  2711  319E   	fcall	_water_filling
  7164  1EA2  3A00               	xorlw	0&0ffh
  7165  1EA3  1903               	skipnz
  7166  1EA4  2EA6               	goto	u12781
  7167  1EA5  2EA7               	goto	u12780
  7168  1EA6                     u12781:
  7169  1EA6  2ECC               	goto	l38809
  7170  1EA7                     u12780:
  7171                           	
  7172  1EA7                     l38801:	
  7173  1EA7  30EA               	movlw	(_timer_fill&0ffh)
  7174  1EA8  0020               	movlb 0	; select bank0
  7175  1EA9  00A9               	movwf	(?_timeoutexpired)
  7176  1EAA  3000               	movlw	0x1/2
  7177  1EAB  00AA               	movwf	(?_timeoutexpired+1)
  7178  1EAC  31A3  234C  319E   	fcall	_timeoutexpired
  7179  1EAF  3A00               	xorlw	0&0ffh
  7180  1EB0  1903               	skipnz
  7181  1EB1  2EB3               	goto	u12791
  7182  1EB2  2EB4               	goto	u12790
  7183  1EB3                     u12791:
  7184  1EB3  2ECC               	goto	l38809
  7185  1EB4                     u12790:
  7186                           	line	143
  7187                           	
  7188  1EB4                     l38803:	
  7189                           ;litterlanguage.c: 143: printtime();
  7190  1EB4  31AB  233D  319E   	fcall	_printtime
  7191                           	line	144
  7192                           ;litterlanguage.c: 144: printf("Fill timeout\n");
  7193  1EB7  30F1               	movlw	low(STR_15|8000h)
  7194  1EB8  0020               	movlb 0	; select bank0
  7195  1EB9  00AF               	movwf	(?_printf)
  7196  1EBA  3087               	movlw	high(STR_15|8000h)
  7197  1EBB  00B0               	movwf	((?_printf))+1
  7198  1EBC  3194  24A0  319E   	fcall	_printf
  7199                           	line	146
  7200                           	
  7201  1EBF                     l38805:	
  7202                           ;litterlanguage.c: 146: error_fill = 1;
  7203  1EBF  1770               	bsf	(_error_fill/8),(_error_fill)&7
  7204                           	line	147
  7205                           	
  7206  1EC0                     l38807:	
  7207                           ;litterlanguage.c: 147: litterlanguage_event(1, error_fill);
  7208  1EC0  3000               	movlw	0
  7209  1EC1  1B70               	btfsc	(_error_fill/8),(_error_fill)&7
  7210  1EC2  3001               	movlw	1
  7211  1EC3  0020               	movlb 0	; select bank0
  7212  1EC4  00DA               	movwf	(??_litterlanguage_work+0)+0
  7213  1EC5  085A               	movf	(??_litterlanguage_work+0)+0,w
  7214  1EC6  00D7               	movwf	(?_litterlanguage_event)
  7215  1EC7  3001               	movlw	(01h)
  7216  1EC8  31A2  2206  319E   	fcall	_litterlanguage_event
  7217  1ECB  2ECC               	goto	l38809
  7218                           	line	148
  7219                           	
  7220  1ECC                     l4243:	
  7221                           	line	153
  7222                           	
  7223  1ECC                     l38809:	
  7224                           ;litterlanguage.c: 148: }
  7225                           ;litterlanguage.c: 151: if( water_detected() &&
  7226                           ;litterlanguage.c: 152: get_Pump() &&
  7227                           ;litterlanguage.c: 153: timeoutexpired(&timer_drain) ){
  7228  1ECC  31B7  270B  319E   	fcall	_water_detected
  7229  1ECF  3A00               	xorlw	0&0ffh
  7230  1ED0  1903               	skipnz
  7231  1ED1  2ED3               	goto	u12801
  7232  1ED2  2ED4               	goto	u12800
  7233  1ED3                     u12801:
  7234  1ED3  2F01               	goto	l38821
  7235  1ED4                     u12800:
  7236                           	
  7237  1ED4                     l38811:	
  7238  1ED4  31B6  26F7  319E   	fcall	_get_Pump
  7239  1ED7  3A00               	xorlw	0&0ffh
  7240  1ED8  1903               	skipnz
  7241  1ED9  2EDB               	goto	u12811
  7242  1EDA  2EDC               	goto	u12810
  7243  1EDB                     u12811:
  7244  1EDB  2F01               	goto	l38821
  7245  1EDC                     u12810:
  7246                           	
  7247  1EDC                     l38813:	
  7248  1EDC  30E4               	movlw	(_timer_drain&0ffh)
  7249  1EDD  0020               	movlb 0	; select bank0
  7250  1EDE  00A9               	movwf	(?_timeoutexpired)
  7251  1EDF  3000               	movlw	0x1/2
  7252  1EE0  00AA               	movwf	(?_timeoutexpired+1)
  7253  1EE1  31A3  234C  319E   	fcall	_timeoutexpired
  7254  1EE4  3A00               	xorlw	0&0ffh
  7255  1EE5  1903               	skipnz
  7256  1EE6  2EE8               	goto	u12821
  7257  1EE7  2EE9               	goto	u12820
  7258  1EE8                     u12821:
  7259  1EE8  2F01               	goto	l38821
  7260  1EE9                     u12820:
  7261                           	line	154
  7262                           	
  7263  1EE9                     l38815:	
  7264                           ;litterlanguage.c: 154: printtime();
  7265  1EE9  31AB  233D  319E   	fcall	_printtime
  7266                           	line	155
  7267                           ;litterlanguage.c: 155: printf("Drain timeout\n");
  7268  1EEC  30A8               	movlw	low(STR_16|8000h)
  7269  1EED  0020               	movlb 0	; select bank0
  7270  1EEE  00AF               	movwf	(?_printf)
  7271  1EEF  3087               	movlw	high(STR_16|8000h)
  7272  1EF0  00B0               	movwf	((?_printf))+1
  7273  1EF1  3194  24A0  319E   	fcall	_printf
  7274                           	line	157
  7275                           	
  7276  1EF4                     l38817:	
  7277                           ;litterlanguage.c: 157: error_drain = 1;
  7278  1EF4  1670               	bsf	(_error_drain/8),(_error_drain)&7
  7279                           	line	158
  7280                           	
  7281  1EF5                     l38819:	
  7282                           ;litterlanguage.c: 158: litterlanguage_event(2, error_drain);
  7283  1EF5  3000               	movlw	0
  7284  1EF6  1A70               	btfsc	(_error_drain/8),(_error_drain)&7
  7285  1EF7  3001               	movlw	1
  7286  1EF8  0020               	movlb 0	; select bank0
  7287  1EF9  00DA               	movwf	(??_litterlanguage_work+0)+0
  7288  1EFA  085A               	movf	(??_litterlanguage_work+0)+0,w
  7289  1EFB  00D7               	movwf	(?_litterlanguage_event)
  7290  1EFC  3002               	movlw	(02h)
  7291  1EFD  31A2  2206  319E   	fcall	_litterlanguage_event
  7292  1F00  2F01               	goto	l38821
  7293                           	line	159
  7294                           	
  7295  1F01                     l4244:	
  7296                           	line	161
  7297                           	
  7298  1F01                     l38821:	
  7299                           ;litterlanguage.c: 159: }
  7300                           ;litterlanguage.c: 161: if (timeoutexpired(&timer_autodose)) {
  7301  1F01  3064               	movlw	(_timer_autodose&0ffh)
  7302  1F02  0020               	movlb 0	; select bank0
  7303  1F03  00A9               	movwf	(?_timeoutexpired)
  7304  1F04  3001               	movlw	0x2/2
  7305  1F05  00AA               	movwf	(?_timeoutexpired+1)
  7306  1F06  31A3  234C  319E   	fcall	_timeoutexpired
  7307  1F09  3A00               	xorlw	0&0ffh
  7308  1F0A  1903               	skipnz
  7309  1F0B  2F0D               	goto	u12831
  7310  1F0C  2F0E               	goto	u12830
  7311  1F0D                     u12831:
  7312  1F0D  2FF4               	goto	l38879
  7313  1F0E                     u12830:
  7314                           	line	162
  7315                           	
  7316  1F0E                     l38823:	
  7317                           ;litterlanguage.c: 162: timeoutnever(&timer_autodose);
  7318  1F0E  3064               	movlw	(_timer_autodose&0ffh)
  7319  1F0F  0020               	movlb 0	; select bank0
  7320  1F10  00A5               	movwf	(?_timeoutnever)
  7321  1F11  3001               	movlw	0x2/2
  7322  1F12  00A6               	movwf	(?_timeoutnever+1)
  7323  1F13  31A9  2162  319E   	fcall	_timeoutnever
  7324                           	line	163
  7325                           	
  7326  1F16                     l38825:	
  7327                           ;litterlanguage.c: 163: set_Dosage(0);
  7328  1F16  3000               	movlw	(0)
  7329  1F17  31B7  27DE  319E   	fcall	_set_Dosage
  7330  1F1A  2FF4               	goto	l38879
  7331                           	line	164
  7332                           	
  7333  1F1B                     l4245:	
  7334  1F1B  2FF4               	goto	l38879
  7335                           	line	165
  7336                           	
  7337  1F1C                     l4242:	
  7338                           	line	168
  7339                           ;litterlanguage.c: 164: }
  7340                           ;litterlanguage.c: 165: }
  7341                           ;litterlanguage.c: 168: switch (ins_state) {
  7342  1F1C  2FF4               	goto	l38879
  7343                           	line	169
  7344                           ;litterlanguage.c: 169: case 0:
  7345                           	
  7346  1F1D                     l4247:	
  7347                           	line	170
  7348                           ;litterlanguage.c: 170: break;
  7349  1F1D  2FFF               	goto	l4241
  7350                           	line	172
  7351                           ;litterlanguage.c: 172: case 1:
  7352                           	
  7353  1F1E                     l4249:	
  7354                           	line	173
  7355                           ;litterlanguage.c: 173: error_execution = 0;
  7356  1F1E  12F0               	bcf	(_error_execution/8),(_error_execution)&7
  7357                           	line	174
  7358                           	
  7359  1F1F                     l38827:	
  7360                           ;litterlanguage.c: 174: litterlanguage_event(4, error_execution);
  7361  1F1F  3000               	movlw	0
  7362  1F20  1AF0               	btfsc	(_error_execution/8),(_error_execution)&7
  7363  1F21  3001               	movlw	1
  7364  1F22  00DA               	movwf	(??_litterlanguage_work+0)+0
  7365  1F23  085A               	movf	(??_litterlanguage_work+0)+0,w
  7366  1F24  00D7               	movwf	(?_litterlanguage_event)
  7367  1F25  3004               	movlw	(04h)
  7368  1F26  31A2  2206  319E   	fcall	_litterlanguage_event
  7369                           	line	175
  7370                           	
  7371  1F29                     l38829:	
  7372                           ;litterlanguage.c: 175: req_instruction(ins_pointer);
  7373  1F29  0020               	movlb 0	; select bank0
  7374  1F2A  086C               	movf	(_ins_pointer+1),w
  7375  1F2B  01A4               	clrf	(?_req_instruction+1)
  7376  1F2C  07A4               	addwf	(?_req_instruction+1)
  7377  1F2D  086B               	movf	(_ins_pointer),w
  7378  1F2E  01A3               	clrf	(?_req_instruction)
  7379  1F2F  07A3               	addwf	(?_req_instruction)
  7380                           
  7381  1F30  31A8  2060  319E   	fcall	_req_instruction
  7382                           	line	176
  7383                           	
  7384  1F33                     l38831:	
  7385                           ;litterlanguage.c: 176: ins_state = 2;
  7386  1F33  3002               	movlw	(02h)
  7387  1F34  0020               	movlb 0	; select bank0
  7388  1F35  00DA               	movwf	(??_litterlanguage_work+0)+0
  7389  1F36  085A               	movf	(??_litterlanguage_work+0)+0,w
  7390  1F37  00E5               	movwf	(_ins_state)
  7391  1F38  2F39               	goto	l38833
  7392                           	line	179
  7393                           ;litterlanguage.c: 179: case 2:
  7394                           	
  7395  1F39                     l4250:	
  7396                           	line	180
  7397                           	
  7398  1F39                     l38833:	
  7399                           ;litterlanguage.c: 180: if (get_instruction(&cur_instruction)) {
  7400  1F39  3068               	movlw	(_cur_instruction)&0ffh
  7401  1F3A  3181  21ED  319E   	fcall	_get_instruction
  7402  1F3D  3A00               	xorlw	0&0ffh
  7403  1F3E  1903               	skipnz
  7404  1F3F  2F41               	goto	u12841
  7405  1F40  2F42               	goto	u12840
  7406  1F41                     u12841:
  7407  1F41  2FFF               	goto	l4241
  7408  1F42                     u12840:
  7409                           	line	182
  7410                           	
  7411  1F42                     l38835:	
  7412                           ;litterlanguage.c: 182: printf("IP 0x%04X: ", ins_pointer);
  7413  1F42  3033               	movlw	low(STR_17|8000h)
  7414  1F43  0020               	movlb 0	; select bank0
  7415  1F44  00AF               	movwf	(?_printf)
  7416  1F45  3088               	movlw	high(STR_17|8000h)
  7417  1F46  00B0               	movwf	((?_printf))+1
  7418  1F47  086C               	movf	(_ins_pointer+1),w
  7419  1F48  01B2               	clrf	(1+?_printf+02h)
  7420  1F49  07B2               	addwf	(1+?_printf+02h)
  7421  1F4A  086B               	movf	(_ins_pointer),w
  7422  1F4B  01B1               	clrf	(0+?_printf+02h)
  7423  1F4C  07B1               	addwf	(0+?_printf+02h)
  7424                           
  7425  1F4D  3194  24A0  319E   	fcall	_printf
  7426                           	line	184
  7427                           	
  7428  1F50                     l38837:	
  7429                           ;litterlanguage.c: 184: if (cur_instruction.opcode == 0x00) {
  7430  1F50  0020               	movlb 0	; select bank0
  7431  1F51  08E8               	movf	(_cur_instruction),f
  7432  1F52  1D03               	skipz
  7433  1F53  2F55               	goto	u12851
  7434  1F54  2F56               	goto	u12850
  7435  1F55                     u12851:
  7436  1F55  2FB8               	goto	l4252
  7437  1F56                     u12850:
  7438                           	line	186
  7439                           	
  7440  1F56                     l38839:	
  7441                           ;litterlanguage.c: 186: printf("INS_START, %s", wet_program?"wet":"dry");
  7442  1F56  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  7443  1F57  2F59               	goto	u12861
  7444  1F58  2F5A               	goto	u12860
  7445  1F59                     u12861:
  7446  1F59  2F5F               	goto	l38843
  7447  1F5A                     u12860:
  7448                           	
  7449  1F5A                     l38841:	
  7450  1F5A  3038               	movlw	low(STR_20|8000h)
  7451  1F5B  00DC               	movwf	(_litterlanguage_work$5881)
  7452  1F5C  3089               	movlw	high(STR_20|8000h)
  7453  1F5D  00DD               	movwf	((_litterlanguage_work$5881))+1
  7454  1F5E  2F64               	goto	l38845
  7455                           	
  7456  1F5F                     l4254:	
  7457                           	
  7458  1F5F                     l38843:	
  7459  1F5F  3030               	movlw	low(STR_19|8000h)
  7460  1F60  00DC               	movwf	(_litterlanguage_work$5881)
  7461  1F61  3089               	movlw	high(STR_19|8000h)
  7462  1F62  00DD               	movwf	((_litterlanguage_work$5881))+1
  7463  1F63  2F64               	goto	l38845
  7464                           	
  7465  1F64                     l4256:	
  7466                           	
  7467  1F64                     l38845:	
  7468  1F64  30FF               	movlw	low(STR_18|8000h)
  7469  1F65  00AF               	movwf	(?_printf)
  7470  1F66  3087               	movlw	high(STR_18|8000h)
  7471  1F67  00B0               	movwf	((?_printf))+1
  7472  1F68  085D               	movf	(_litterlanguage_work$5881+1),w
  7473  1F69  01B2               	clrf	(1+?_printf+02h)
  7474  1F6A  07B2               	addwf	(1+?_printf+02h)
  7475  1F6B  085C               	movf	(_litterlanguage_work$5881),w
  7476  1F6C  01B1               	clrf	(0+?_printf+02h)
  7477  1F6D  07B1               	addwf	(0+?_printf+02h)
  7478                           
  7479  1F6E  3194  24A0  319E   	fcall	_printf
  7480                           	line	191
  7481                           	
  7482  1F71                     l38847:	
  7483                           ;litterlanguage.c: 189: if( ((cur_instruction.operant & 0x00FF) <= 0x0E) &&
  7484                           ;litterlanguage.c: 190: ( (!wet_program && (cur_instruction.operant & 0x0200)) ||
  7485                           ;litterlanguage.c: 191: (wet_program && (cur_instruction.operant & 0x0400)) ) ) {
  7486  1F71  30FF               	movlw	low(0FFh)
  7487  1F72  0020               	movlb 0	; select bank0
  7488  1F73  0569               	andwf	0+(_cur_instruction)+01h,w
  7489  1F74  00DA               	movwf	(??_litterlanguage_work+0)+0
  7490  1F75  3000               	movlw	high(0FFh)
  7491  1F76  056A               	andwf	1+(_cur_instruction)+01h,w
  7492  1F77  00DB               	movwf	1+(??_litterlanguage_work+0)+0
  7493  1F78  3000               	movlw	high(0Fh)
  7494  1F79  025B               	subwf	1+(??_litterlanguage_work+0)+0,w
  7495  1F7A  300F               	movlw	low(0Fh)
  7496  1F7B  1903               	skipnz
  7497  1F7C  025A               	subwf	0+(??_litterlanguage_work+0)+0,w
  7498  1F7D  1803               	skipnc
  7499  1F7E  2F80               	goto	u12871
  7500  1F7F  2F81               	goto	u12870
  7501  1F80                     u12871:
  7502  1F80  2FAE               	goto	l4257
  7503  1F81                     u12870:
  7504                           	
  7505  1F81                     l38849:	
  7506  1F81  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  7507  1F82  2F84               	goto	u12881
  7508  1F83  2F85               	goto	u12880
  7509  1F84                     u12881:
  7510  1F84  2F89               	goto	l4261
  7511  1F85                     u12880:
  7512                           	
  7513  1F85                     l38851:	
  7514  1F85  18EA               	btfsc	1+(_cur_instruction)+01h,(9)&7
  7515  1F86  2F88               	goto	u12891
  7516  1F87  2F89               	goto	u12890
  7517  1F88                     u12891:
  7518  1F88  2F92               	goto	l38855
  7519  1F89                     u12890:
  7520                           	
  7521  1F89                     l4261:	
  7522  1F89  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  7523  1F8A  2F8C               	goto	u12901
  7524  1F8B  2F8D               	goto	u12900
  7525  1F8C                     u12901:
  7526  1F8C  2FAE               	goto	l4257
  7527  1F8D                     u12900:
  7528                           	
  7529  1F8D                     l38853:	
  7530  1F8D  1D6A               	btfss	1+(_cur_instruction)+01h,(10)&7
  7531  1F8E  2F90               	goto	u12911
  7532  1F8F  2F91               	goto	u12910
  7533  1F90                     u12911:
  7534  1F90  2FAE               	goto	l4257
  7535  1F91                     u12910:
  7536  1F91  2F92               	goto	l38855
  7537                           	
  7538  1F92                     l4259:	
  7539                           	line	192
  7540                           	
  7541  1F92                     l38855:	
  7542                           ;litterlanguage.c: 192: if (eeprom_read((3)) < 1)
  7543  1F92  3003               	movlw	(03h)
  7544  1F93  31AA  2233  319E   	fcall	_eeprom_read
  7545  1F96  3800               	iorlw	0
  7546  1F97  1D03               	skipz
  7547  1F98  2F9A               	goto	u12921
  7548  1F99  2F9B               	goto	u12920
  7549  1F9A                     u12921:
  7550  1F9A  2FA4               	goto	l38859
  7551  1F9B                     u12920:
  7552                           	line	193
  7553                           	
  7554  1F9B                     l38857:	
  7555                           ;litterlanguage.c: 193: eeprom_write((3), 1);
  7556  1F9B  0020               	movlb 0	; select bank0
  7557  1F9C  01A1               	clrf	(?_eeprom_write)
  7558  1F9D  1403               	bsf	status,0
  7559  1F9E  0DA1               	rlf	(?_eeprom_write),f
  7560  1F9F  3003               	movlw	(03h)
  7561  1FA0  31AB  23F5  319E   	fcall	_eeprom_write
  7562  1FA3  2FA4               	goto	l38859
  7563                           	
  7564  1FA4                     l4262:	
  7565                           	line	194
  7566                           	
  7567  1FA4                     l38859:	
  7568                           ;litterlanguage.c: 194: ins_pointer++;
  7569  1FA4  3003               	movlw	low(03h)
  7570  1FA5  0020               	movlb 0	; select bank0
  7571  1FA6  07EB               	addwf	(_ins_pointer),f
  7572  1FA7  3000               	movlw	high(03h)
  7573  1FA8  3DEC               	addwfc	(_ins_pointer+1),f
  7574                           	line	195
  7575                           	
  7576  1FA9                     l38861:	
  7577                           ;litterlanguage.c: 195: ins_state = 3;
  7578  1FA9  3003               	movlw	(03h)
  7579  1FAA  00DA               	movwf	(??_litterlanguage_work+0)+0
  7580  1FAB  085A               	movf	(??_litterlanguage_work+0)+0,w
  7581  1FAC  00E5               	movwf	(_ins_state)
  7582                           	line	196
  7583                           ;litterlanguage.c: 196: } else {
  7584  1FAD  2FC7               	goto	l4264
  7585                           	
  7586  1FAE                     l4257:	
  7587                           	line	197
  7588                           ;litterlanguage.c: 197: ins_state = 0;
  7589  1FAE  01E5               	clrf	(_ins_state)
  7590                           	line	199
  7591                           	
  7592  1FAF                     l38863:	
  7593                           ;litterlanguage.c: 199: printf(", incompatible");
  7594  1FAF  30B7               	movlw	low(STR_21|8000h)
  7595  1FB0  00AF               	movwf	(?_printf)
  7596  1FB1  3087               	movlw	high(STR_21|8000h)
  7597  1FB2  00B0               	movwf	((?_printf))+1
  7598  1FB3  3194  24A0  319E   	fcall	_printf
  7599  1FB6  2FC7               	goto	l4264
  7600                           	line	201
  7601                           	
  7602  1FB7                     l4263:	
  7603                           	line	202
  7604                           ;litterlanguage.c: 201: }
  7605                           ;litterlanguage.c: 202: } else {
  7606  1FB7  2FC7               	goto	l4264
  7607                           	
  7608  1FB8                     l4252:	
  7609                           	line	203
  7610                           ;litterlanguage.c: 203: ins_state = 0;
  7611  1FB8  01E5               	clrf	(_ins_state)
  7612                           	line	205
  7613                           	
  7614  1FB9                     l38865:	
  7615                           ;litterlanguage.c: 205: printf(", no start: 0x%X", cur_instruction.opcode);
  7616  1FB9  3005               	movlw	low(STR_22|8000h)
  7617  1FBA  00AF               	movwf	(?_printf)
  7618  1FBB  3087               	movlw	high(STR_22|8000h)
  7619  1FBC  00B0               	movwf	((?_printf))+1
  7620  1FBD  0868               	movf	(_cur_instruction),w
  7621  1FBE  00DA               	movwf	(??_litterlanguage_work+0)+0
  7622  1FBF  01DB               	clrf	(??_litterlanguage_work+0)+0+1
  7623  1FC0  085A               	movf	0+(??_litterlanguage_work+0)+0,w
  7624  1FC1  00B1               	movwf	0+(?_printf)+02h
  7625  1FC2  085B               	movf	1+(??_litterlanguage_work+0)+0,w
  7626  1FC3  00B2               	movwf	1+(?_printf)+02h
  7627  1FC4  3194  24A0  319E   	fcall	_printf
  7628                           	line	207
  7629                           	
  7630  1FC7                     l4264:	
  7631                           	line	209
  7632                           ;litterlanguage.c: 207: }
  7633                           ;litterlanguage.c: 209: printf("\n");
  7634  1FC7  30EF               	movlw	low(STR_23|8000h)
  7635  1FC8  0020               	movlb 0	; select bank0
  7636  1FC9  00AF               	movwf	(?_printf)
  7637  1FCA  3087               	movlw	high(STR_23|8000h)
  7638  1FCB  00B0               	movwf	((?_printf))+1
  7639  1FCC  3194  24A0  319E   	fcall	_printf
  7640  1FCF  2FFF               	goto	l4241
  7641                           	line	211
  7642                           	
  7643  1FD0                     l4251:	
  7644                           	line	212
  7645                           ;litterlanguage.c: 211: }
  7646                           ;litterlanguage.c: 212: break;
  7647  1FD0  2FFF               	goto	l4241
  7648                           	line	214
  7649                           ;litterlanguage.c: 214: case 3:
  7650                           	
  7651  1FD1                     l4265:	
  7652                           	line	215
  7653                           	
  7654  1FD1                     l38867:	
  7655                           ;litterlanguage.c: 215: req_instruction(ins_pointer);
  7656  1FD1  0020               	movlb 0	; select bank0
  7657  1FD2  086C               	movf	(_ins_pointer+1),w
  7658  1FD3  01A4               	clrf	(?_req_instruction+1)
  7659  1FD4  07A4               	addwf	(?_req_instruction+1)
  7660  1FD5  086B               	movf	(_ins_pointer),w
  7661  1FD6  01A3               	clrf	(?_req_instruction)
  7662  1FD7  07A3               	addwf	(?_req_instruction)
  7663                           
  7664  1FD8  31A8  2060  319E   	fcall	_req_instruction
  7665                           	line	216
  7666                           	
  7667  1FDB                     l38869:	
  7668                           ;litterlanguage.c: 216: ins_state = 4;
  7669  1FDB  3004               	movlw	(04h)
  7670  1FDC  0020               	movlb 0	; select bank0
  7671  1FDD  00DA               	movwf	(??_litterlanguage_work+0)+0
  7672  1FDE  085A               	movf	(??_litterlanguage_work+0)+0,w
  7673  1FDF  00E5               	movwf	(_ins_state)
  7674  1FE0  2FE1               	goto	l38871
  7675                           	line	219
  7676                           ;litterlanguage.c: 219: case 4:
  7677                           	
  7678  1FE1                     l4266:	
  7679                           	line	220
  7680                           	
  7681  1FE1                     l38871:	
  7682                           ;litterlanguage.c: 220: if (get_instruction(&cur_instruction)) {
  7683  1FE1  3068               	movlw	(_cur_instruction)&0ffh
  7684  1FE2  3181  21ED  319E   	fcall	_get_instruction
  7685  1FE5  3A00               	xorlw	0&0ffh
  7686  1FE6  1903               	skipnz
  7687  1FE7  2FE9               	goto	u12931
  7688  1FE8  2FEA               	goto	u12930
  7689  1FE9                     u12931:
  7690  1FE9  2FFF               	goto	l4241
  7691  1FEA                     u12930:
  7692                           	line	222
  7693                           	
  7694  1FEA                     l38873:	
  7695                           ;litterlanguage.c: 222: exe_instruction();
  7696  1FEA  318B  233D  319E   	fcall	_exe_instruction
  7697  1FED  2FFF               	goto	l4241
  7698                           	line	223
  7699                           	
  7700  1FEE                     l4267:	
  7701                           	line	224
  7702                           ;litterlanguage.c: 223: }
  7703                           ;litterlanguage.c: 224: break;
  7704  1FEE  2FFF               	goto	l4241
  7705                           	line	226
  7706                           ;litterlanguage.c: 226: case 5:
  7707                           	
  7708  1FEF                     l4268:	
  7709                           	line	227
  7710                           	
  7711  1FEF                     l38875:	
  7712                           ;litterlanguage.c: 227: wait_instruction();
  7713  1FEF  31A4  24B4  319E   	fcall	_wait_instruction
  7714                           	line	228
  7715                           ;litterlanguage.c: 228: break;
  7716  1FF2  2FFF               	goto	l4241
  7717                           	line	229
  7718                           	
  7719  1FF3                     l38877:	
  7720                           ;litterlanguage.c: 229: }
  7721  1FF3  2FFF               	goto	l4241
  7722                           	line	168
  7723                           	
  7724  1FF4                     l4246:	
  7725                           	
  7726  1FF4                     l38879:	
  7727  1FF4  0020               	movlb 0	; select bank0
  7728  1FF5  0865               	movf	(_ins_state),w
  7729                           	; Switch size 1, requested type "space"
  7730                           ; Number of cases is 6, Range of values is 0 to 5
  7731                           ; switch strategies available:
  7732                           ; Name         Instructions Cycles
  7733                           ; direct_byte           18     6 (fixed)
  7734                           ; simple_byte           19    10 (average)
  7735                           ; jumptable            260     6 (fixed)
  7736                           ; rangetable            10     4 (fixed)
  7737                           ; spacedrange           17     6 (fixed)
  7738                           ; locatedrange           6     3 (fixed)
  7739                           ;	Chosen strategy is direct_byte
  7740                           
  7741  1FF6  0084               	movwf fsr0l
  7742  1FF7  3006               	movlw	6
  7743  1FF8  0204               	subwf	fsr0l,w
  7744  1FF9  1803               skipnc
  7745  1FFA  2FFF               goto l4241
  7746  1FFB  31A0               movlp high(S39231)
  7747  1FFC  3504               	lslf fsr0l,w
  7748  1FFD  3E00               	addlw low(S39231)
  7749  1FFE  0082               	movwf pc
  7750                           psect	swtext1,local,class=CONST,delta=2
  7751                           global __pswtext1
  7752  2000                     __pswtext1:
  7753  2000                     S39231:
  7754  2000  319F  2FFF         	ljmp	l4241
  7755  2002  319F  2F1E         	ljmp	l4249
  7756  2004  319F  2F39         	ljmp	l38833
  7757  2006  319F  2FD1         	ljmp	l38867
  7758  2008  319F  2FE1         	ljmp	l38871
  7759  200A  319F  2FEF         	ljmp	l38875
  7760                           psect	text3310
  7761                           
  7762                           	line	229
  7763                           	
  7764  1FFF                     l4248:	
  7765                           	line	230
  7766                           	
  7767  1FFF                     l4241:	
  7768  1FFF  0008               	return
  7769                           	opt stack 0
  7770                           GLOBAL	__end_of_litterlanguage_work
  7771  2000                     	__end_of_litterlanguage_work:
  7772 ;; =============== function _litterlanguage_work ends ============
  7773                           
  7774                           	signat	_litterlanguage_work,88
  7775                           	global	_exe_instruction
  7776                           psect	text3311,local,class=CODE,delta=2
  7777                           global __ptext3311
  7778  0B3D                     __ptext3311:
  7779                           
  7780 ;; *************** function _exe_instruction *****************
  7781 ;; Defined at:
  7782 ;;		line 478 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;		None
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  temp            2    4[BANK1 ] unsigned int 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;		None               void
  7789 ;; Registers used:
  7790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7797 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
       0       0
  7798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7799 ;;      Totals:         0       1      38       0       0       0       0       0       0       0       0       0       
       0       0
  7800 ;;Total ram usage:       39 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    8
  7803 ;; This function calls:
  7804 ;;		_printtime
  7805 ;;		_printf
  7806 ;;		_set_Bowl
  7807 ;;		_set_Arm
  7808 ;;		_eeprom_read
  7809 ;;		_eeprom_write
  7810 ;;		_water_detected
  7811 ;;		_water_fill
  7812 ;;		_settimeout
  7813 ;;		_timeoutnever
  7814 ;;		_set_Pump
  7815 ;;		_set_Dryer
  7816 ;;		___lmul
  7817 ;;		___wmul
  7818 ;;		___lwdiv
  7819 ;;		___lwmod
  7820 ;;		_set_Dosage
  7821 ;;		_memcpy
  7822 ;;		_litterlanguage_stop
  7823 ;;		_litterlanguage_event
  7824 ;; This function is called by:
  7825 ;;		_litterlanguage_work
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           psect	text3311
  7829                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
  7830                           	line	478
  7831                           	global	__size_of_exe_instruction
  7832  04C3                     	__size_of_exe_instruction	equ	__end_of_exe_instruction-_exe_instruction
  7833                           	
  7834  0B3D                     _exe_instruction:	
  7835                           	opt	stack 6
  7836                           ; Regs used in _exe_instruction: [allreg]
  7837                           	line	483
  7838                           	
  7839  0B3D                     l38537:	
  7840                           ;litterlanguage.c: 479: static struct instruction const * ret_address;
  7841                           ;litterlanguage.c: 480: unsigned int temp;
  7842                           ;litterlanguage.c: 483: printtime();
  7843  0B3D  31AB  233D  318B   	fcall	_printtime
  7844                           	line	484
  7845                           ;litterlanguage.c: 484: printf("IP 0x%04X: ", ins_pointer);
  7846  0B40  3033               	movlw	low(STR_39|8000h)
  7847  0B41  0020               	movlb 0	; select bank0
  7848  0B42  00AF               	movwf	(?_printf)
  7849  0B43  3088               	movlw	high(STR_39|8000h)
  7850  0B44  00B0               	movwf	((?_printf))+1
  7851  0B45  086C               	movf	(_ins_pointer+1),w
  7852  0B46  01B2               	clrf	(1+?_printf+02h)
  7853  0B47  07B2               	addwf	(1+?_printf+02h)
  7854  0B48  086B               	movf	(_ins_pointer),w
  7855  0B49  01B1               	clrf	(0+?_printf+02h)
  7856  0B4A  07B1               	addwf	(0+?_printf+02h)
  7857                           
  7858  0B4B  3194  24A0  318B   	fcall	_printf
  7859                           	line	486
  7860                           ;litterlanguage.c: 486: switch (cur_instruction.opcode) {
  7861  0B4E  2FEC               	goto	l38781
  7862                           	line	487
  7863                           ;litterlanguage.c: 487: case 0x01:
  7864                           	
  7865  0B4F                     l4357:	
  7866                           	line	489
  7867                           	
  7868  0B4F                     l38539:	
  7869                           ;litterlanguage.c: 489: printf("INS_BOWL, %s", (cur_instruction.operant == 0)?"BOWL_STOP
                                 ":((cur_instruction.operant == 1)?"BOWL_CW":"BOWL_CCW"));
  7870  0B4F  3001               	movlw	(01h)
  7871  0B50  3E68               	addlw	_cur_instruction&0ffh
  7872  0B51  0086               	movwf	fsr1l
  7873  0B52  0187               	clrf fsr1h	
  7874                           	
  7875  0B53  0016               	moviw	fsr1++
  7876  0B54  0401               	iorwf	indf1,w
  7877  0B55  1903               	skipnz
  7878  0B56  2B58               	goto	u12471
  7879  0B57  2B59               	goto	u12470
  7880  0B58                     u12471:
  7881  0B58  2B7A               	goto	l38549
  7882  0B59                     u12470:
  7883                           	
  7884  0B59                     l38541:	
  7885  0B59  3001               	movlw	(01h)
  7886  0B5A  3E68               	addlw	_cur_instruction&0ffh
  7887  0B5B  0086               	movwf	fsr1l
  7888  0B5C  0187               	clrf fsr1h	
  7889                           	
  7890  0B5D  3F40               	moviw	[0]fsr1
  7891  0B5E  3A01               	xorlw	low(01h)
  7892  0B5F  1D03               	skipz
  7893  0B60  2B63               	goto	u12485
  7894  0B61  3F41               	moviw	[1]fsr1
  7895  0B62  3A00               	xorlw	high(01h)
  7896  0B63                     u12485:
  7897  0B63  1903               	skipnz
  7898  0B64  2B66               	goto	u12481
  7899  0B65  2B67               	goto	u12480
  7900  0B66                     u12481:
  7901  0B66  2B6D               	goto	l38545
  7902  0B67                     u12480:
  7903                           	
  7904  0B67                     l38543:	
  7905  0B67  30C2               	movlw	low(STR_43|8000h)
  7906  0B68  0021               	movlb 1	; select bank1
  7907  0B69  00A8               	movwf	(_exe_instruction$5958)^080h
  7908  0B6A  3088               	movlw	high(STR_43|8000h)
  7909  0B6B  00A9               	movwf	((_exe_instruction$5958)^080h)+1
  7910  0B6C  2B73               	goto	l38547
  7911                           	
  7912  0B6D                     l4363:	
  7913                           	
  7914  0B6D                     l38545:	
  7915  0B6D  30F4               	movlw	low(STR_42|8000h)
  7916  0B6E  0021               	movlb 1	; select bank1
  7917  0B6F  00A8               	movwf	(_exe_instruction$5958)^080h
  7918  0B70  3088               	movlw	high(STR_42|8000h)
  7919  0B71  00A9               	movwf	((_exe_instruction$5958)^080h)+1
  7920  0B72  2B73               	goto	l38547
  7921                           	
  7922  0B73                     l4365:	
  7923                           	
  7924  0B73                     l38547:	
  7925  0B73  0829               	movf	(_exe_instruction$5958+1)^080h,w
  7926  0B74  01A7               	clrf	(_exe_instruction$5957+1)^080h
  7927  0B75  07A7               	addwf	(_exe_instruction$5957+1)^080h
  7928  0B76  0828               	movf	(_exe_instruction$5958)^080h,w
  7929  0B77  01A6               	clrf	(_exe_instruction$5957)^080h
  7930  0B78  07A6               	addwf	(_exe_instruction$5957)^080h
  7931                           
  7932  0B79  2B80               	goto	l38551
  7933                           	
  7934  0B7A                     l4359:	
  7935                           	
  7936  0B7A                     l38549:	
  7937  0B7A  308A               	movlw	low(STR_41|8000h)
  7938  0B7B  0021               	movlb 1	; select bank1
  7939  0B7C  00A6               	movwf	(_exe_instruction$5957)^080h
  7940  0B7D  3088               	movlw	high(STR_41|8000h)
  7941  0B7E  00A7               	movwf	((_exe_instruction$5957)^080h)+1
  7942  0B7F  2B80               	goto	l38551
  7943                           	
  7944  0B80                     l4361:	
  7945                           	
  7946  0B80                     l38551:	
  7947  0B80  301A               	movlw	low(STR_40|8000h)
  7948  0B81  0020               	movlb 0	; select bank0
  7949  0B82  00AF               	movwf	(?_printf)
  7950  0B83  3088               	movlw	high(STR_40|8000h)
  7951  0B84  00B0               	movwf	((?_printf))+1
  7952  0B85  0021               	movlb 1	; select bank1
  7953  0B86  0827               	movf	(_exe_instruction$5957+1)^080h,w
  7954  0B87  0020               	movlb 0	; select bank0
  7955  0B88  01B2               	clrf	(1+?_printf+02h)
  7956  0B89  07B2               	addwf	(1+?_printf+02h)
  7957  0B8A  0021               	movlb 1	; select bank1
  7958  0B8B  0826               	movf	(_exe_instruction$5957)^080h,w
  7959  0B8C  0020               	movlb 0	; select bank0
  7960  0B8D  01B1               	clrf	(0+?_printf+02h)
  7961  0B8E  07B1               	addwf	(0+?_printf+02h)
  7962                           
  7963  0B8F  3194  24A0  318B   	fcall	_printf
  7964                           	line	491
  7965                           	
  7966  0B92                     l38553:	
  7967                           ;litterlanguage.c: 491: set_Bowl((unsigned char)cur_instruction.operant);
  7968  0B92  0020               	movlb 0	; select bank0
  7969  0B93  0869               	movf	0+(_cur_instruction)+01h,w
  7970  0B94  31AA  2256  318B   	fcall	_set_Bowl
  7971                           	line	492
  7972                           	
  7973  0B97                     l38555:	
  7974                           ;litterlanguage.c: 492: ins_pointer++;
  7975  0B97  3003               	movlw	low(03h)
  7976  0B98  0020               	movlb 0	; select bank0
  7977  0B99  07EB               	addwf	(_ins_pointer),f
  7978  0B9A  3000               	movlw	high(03h)
  7979  0B9B  3DEC               	addwfc	(_ins_pointer+1),f
  7980                           	line	493
  7981                           	
  7982  0B9C                     l38557:	
  7983                           ;litterlanguage.c: 493: ins_state = 3;
  7984  0B9C  3003               	movlw	(03h)
  7985  0B9D  00D9               	movwf	(??_exe_instruction+0)+0
  7986  0B9E  0859               	movf	(??_exe_instruction+0)+0,w
  7987  0B9F  00E5               	movwf	(_ins_state)
  7988                           	line	494
  7989                           ;litterlanguage.c: 494: break;
  7990  0BA0  2FF7               	goto	l38783
  7991                           	line	495
  7992                           ;litterlanguage.c: 495: case 0x02:
  7993                           	
  7994  0BA1                     l4367:	
  7995                           	line	497
  7996                           	
  7997  0BA1                     l38559:	
  7998                           ;litterlanguage.c: 497: printf("INS_ARM, %s", (cur_instruction.operant == 0)?"ARM_STOP":
                                 ((cur_instruction.operant == 1)?"ARM_DOWN":"ARM_UP"));
  7999  0BA1  3001               	movlw	(01h)
  8000  0BA2  3E68               	addlw	_cur_instruction&0ffh
  8001  0BA3  0086               	movwf	fsr1l
  8002  0BA4  0187               	clrf fsr1h	
  8003                           	
  8004  0BA5  0016               	moviw	fsr1++
  8005  0BA6  0401               	iorwf	indf1,w
  8006  0BA7  1903               	skipnz
  8007  0BA8  2BAA               	goto	u12491
  8008  0BA9  2BAB               	goto	u12490
  8009  0BAA                     u12491:
  8010  0BAA  2BCC               	goto	l38569
  8011  0BAB                     u12490:
  8012                           	
  8013  0BAB                     l38561:	
  8014  0BAB  3001               	movlw	(01h)
  8015  0BAC  3E68               	addlw	_cur_instruction&0ffh
  8016  0BAD  0086               	movwf	fsr1l
  8017  0BAE  0187               	clrf fsr1h	
  8018                           	
  8019  0BAF  3F40               	moviw	[0]fsr1
  8020  0BB0  3A01               	xorlw	low(01h)
  8021  0BB1  1D03               	skipz
  8022  0BB2  2BB5               	goto	u12505
  8023  0BB3  3F41               	moviw	[1]fsr1
  8024  0BB4  3A00               	xorlw	high(01h)
  8025  0BB5                     u12505:
  8026  0BB5  1903               	skipnz
  8027  0BB6  2BB8               	goto	u12501
  8028  0BB7  2BB9               	goto	u12500
  8029  0BB8                     u12501:
  8030  0BB8  2BBF               	goto	l38565
  8031  0BB9                     u12500:
  8032                           	
  8033  0BB9                     l38563:	
  8034  0BB9  3011               	movlw	low(STR_47|8000h)
  8035  0BBA  0021               	movlb 1	; select bank1
  8036  0BBB  00AC               	movwf	(_exe_instruction$5964)^080h
  8037  0BBC  3089               	movlw	high(STR_47|8000h)
  8038  0BBD  00AD               	movwf	((_exe_instruction$5964)^080h)+1
  8039  0BBE  2BC5               	goto	l38567
  8040                           	
  8041  0BBF                     l4373:	
  8042                           	
  8043  0BBF                     l38565:	
  8044  0BBF  30B0               	movlw	low(STR_46|8000h)
  8045  0BC0  0021               	movlb 1	; select bank1
  8046  0BC1  00AC               	movwf	(_exe_instruction$5964)^080h
  8047  0BC2  3088               	movlw	high(STR_46|8000h)
  8048  0BC3  00AD               	movwf	((_exe_instruction$5964)^080h)+1
  8049  0BC4  2BC5               	goto	l38567
  8050                           	
  8051  0BC5                     l4375:	
  8052                           	
  8053  0BC5                     l38567:	
  8054  0BC5  082D               	movf	(_exe_instruction$5964+1)^080h,w
  8055  0BC6  01AB               	clrf	(_exe_instruction$5963+1)^080h
  8056  0BC7  07AB               	addwf	(_exe_instruction$5963+1)^080h
  8057  0BC8  082C               	movf	(_exe_instruction$5964)^080h,w
  8058  0BC9  01AA               	clrf	(_exe_instruction$5963)^080h
  8059  0BCA  07AA               	addwf	(_exe_instruction$5963)^080h
  8060                           
  8061  0BCB  2BD2               	goto	l38571
  8062                           	
  8063  0BCC                     l4369:	
  8064                           	
  8065  0BCC                     l38569:	
  8066  0BCC  30B9               	movlw	low(STR_45|8000h)
  8067  0BCD  0021               	movlb 1	; select bank1
  8068  0BCE  00AA               	movwf	(_exe_instruction$5963)^080h
  8069  0BCF  3088               	movlw	high(STR_45|8000h)
  8070  0BD0  00AB               	movwf	((_exe_instruction$5963)^080h)+1
  8071  0BD1  2BD2               	goto	l38571
  8072                           	
  8073  0BD2                     l4371:	
  8074                           	
  8075  0BD2                     l38571:	
  8076  0BD2  303F               	movlw	low(STR_44|8000h)
  8077  0BD3  0020               	movlb 0	; select bank0
  8078  0BD4  00AF               	movwf	(?_printf)
  8079  0BD5  3088               	movlw	high(STR_44|8000h)
  8080  0BD6  00B0               	movwf	((?_printf))+1
  8081  0BD7  0021               	movlb 1	; select bank1
  8082  0BD8  082B               	movf	(_exe_instruction$5963+1)^080h,w
  8083  0BD9  0020               	movlb 0	; select bank0
  8084  0BDA  01B2               	clrf	(1+?_printf+02h)
  8085  0BDB  07B2               	addwf	(1+?_printf+02h)
  8086  0BDC  0021               	movlb 1	; select bank1
  8087  0BDD  082A               	movf	(_exe_instruction$5963)^080h,w
  8088  0BDE  0020               	movlb 0	; select bank0
  8089  0BDF  01B1               	clrf	(0+?_printf+02h)
  8090  0BE0  07B1               	addwf	(0+?_printf+02h)
  8091                           
  8092  0BE1  3194  24A0  318B   	fcall	_printf
  8093                           	line	499
  8094                           	
  8095  0BE4                     l38573:	
  8096                           ;litterlanguage.c: 499: set_Arm((unsigned char)cur_instruction.operant);
  8097  0BE4  0020               	movlb 0	; select bank0
  8098  0BE5  0869               	movf	0+(_cur_instruction)+01h,w
  8099  0BE6  31AA  227A  318B   	fcall	_set_Arm
  8100                           	line	500
  8101                           	
  8102  0BE9                     l38575:	
  8103                           ;litterlanguage.c: 500: ins_pointer++;
  8104  0BE9  3003               	movlw	low(03h)
  8105  0BEA  0020               	movlb 0	; select bank0
  8106  0BEB  07EB               	addwf	(_ins_pointer),f
  8107  0BEC  3000               	movlw	high(03h)
  8108  0BED  3DEC               	addwfc	(_ins_pointer+1),f
  8109                           	line	501
  8110                           	
  8111  0BEE                     l38577:	
  8112                           ;litterlanguage.c: 501: ins_state = 3;
  8113  0BEE  3003               	movlw	(03h)
  8114  0BEF  00D9               	movwf	(??_exe_instruction+0)+0
  8115  0BF0  0859               	movf	(??_exe_instruction+0)+0,w
  8116  0BF1  00E5               	movwf	(_ins_state)
  8117                           	line	502
  8118                           ;litterlanguage.c: 502: break;
  8119  0BF2  2FF7               	goto	l38783
  8120                           	line	503
  8121                           ;litterlanguage.c: 503: case 0x03:
  8122                           	
  8123  0BF3                     l4376:	
  8124                           	line	505
  8125                           ;litterlanguage.c: 505: printf("INS_WATER, %s%s", cur_instruction.operant?"on":"off", we
                                 t_program?"":" (nop)");
  8126  0BF3  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  8127  0BF4  2BF6               	goto	u12511
  8128  0BF5  2BF7               	goto	u12510
  8129  0BF6                     u12511:
  8130  0BF6  2BFD               	goto	l38581
  8131  0BF7                     u12510:
  8132                           	
  8133  0BF7                     l38579:	
  8134  0BF7  300A               	movlw	low(STR_52|8000h)
  8135  0BF8  0021               	movlb 1	; select bank1
  8136  0BF9  00AE               	movwf	(_exe_instruction$5970)^080h
  8137  0BFA  3089               	movlw	high(STR_52|8000h)
  8138  0BFB  00AF               	movwf	((_exe_instruction$5970)^080h)+1
  8139  0BFC  2C03               	goto	l38583
  8140                           	
  8141  0BFD                     l4378:	
  8142                           	
  8143  0BFD                     l38581:	
  8144  0BFD  30F0               	movlw	low(STR_51|8000h)
  8145  0BFE  0021               	movlb 1	; select bank1
  8146  0BFF  00AE               	movwf	(_exe_instruction$5970)^080h
  8147  0C00  3087               	movlw	high(STR_51|8000h)
  8148  0C01  00AF               	movwf	((_exe_instruction$5970)^080h)+1
  8149  0C02  2C03               	goto	l38583
  8150                           	
  8151  0C03                     l4380:	
  8152                           	
  8153  0C03                     l38583:	
  8154  0C03  0020               	movlb 0	; select bank0
  8155  0C04  086A               	movf	(1+(_cur_instruction)+01h),w
  8156  0C05  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8157  0C06  1D03               	skipz
  8158  0C07  2C09               	goto	u12521
  8159  0C08  2C0A               	goto	u12520
  8160  0C09                     u12521:
  8161  0C09  2C10               	goto	l38587
  8162  0C0A                     u12520:
  8163                           	
  8164  0C0A                     l38585:	
  8165  0C0A  302C               	movlw	low(STR_50|8000h)
  8166  0C0B  0021               	movlb 1	; select bank1
  8167  0C0C  00B0               	movwf	(_exe_instruction$5971)^080h
  8168  0C0D  3089               	movlw	high(STR_50|8000h)
  8169  0C0E  00B1               	movwf	((_exe_instruction$5971)^080h)+1
  8170  0C0F  2C16               	goto	l38589
  8171                           	
  8172  0C10                     l4382:	
  8173                           	
  8174  0C10                     l38587:	
  8175  0C10  3042               	movlw	low(STR_49|8000h)
  8176  0C11  0021               	movlb 1	; select bank1
  8177  0C12  00B0               	movwf	(_exe_instruction$5971)^080h
  8178  0C13  3089               	movlw	high(STR_49|8000h)
  8179  0C14  00B1               	movwf	((_exe_instruction$5971)^080h)+1
  8180  0C15  2C16               	goto	l38589
  8181                           	
  8182  0C16                     l4384:	
  8183                           	
  8184  0C16                     l38589:	
  8185  0C16  3059               	movlw	low(STR_48|8000h)
  8186  0C17  0020               	movlb 0	; select bank0
  8187  0C18  00AF               	movwf	(?_printf)
  8188  0C19  3087               	movlw	high(STR_48|8000h)
  8189  0C1A  00B0               	movwf	((?_printf))+1
  8190  0C1B  0021               	movlb 1	; select bank1
  8191  0C1C  0831               	movf	(_exe_instruction$5971+1)^080h,w
  8192  0C1D  0020               	movlb 0	; select bank0
  8193  0C1E  01B2               	clrf	(1+?_printf+02h)
  8194  0C1F  07B2               	addwf	(1+?_printf+02h)
  8195  0C20  0021               	movlb 1	; select bank1
  8196  0C21  0830               	movf	(_exe_instruction$5971)^080h,w
  8197  0C22  0020               	movlb 0	; select bank0
  8198  0C23  01B1               	clrf	(0+?_printf+02h)
  8199  0C24  07B1               	addwf	(0+?_printf+02h)
  8200                           
  8201  0C25  0021               	movlb 1	; select bank1
  8202  0C26  082F               	movf	(_exe_instruction$5970+1)^080h,w
  8203  0C27  0020               	movlb 0	; select bank0
  8204  0C28  01B4               	clrf	(1+?_printf+04h)
  8205  0C29  07B4               	addwf	(1+?_printf+04h)
  8206  0C2A  0021               	movlb 1	; select bank1
  8207  0C2B  082E               	movf	(_exe_instruction$5970)^080h,w
  8208  0C2C  0020               	movlb 0	; select bank0
  8209  0C2D  01B3               	clrf	(0+?_printf+04h)
  8210  0C2E  07B3               	addwf	(0+?_printf+04h)
  8211                           
  8212  0C2F  3194  24A0  318B   	fcall	_printf
  8213                           	line	507
  8214                           	
  8215  0C32                     l38591:	
  8216                           ;litterlanguage.c: 507: if (wet_program)
  8217  0C32  0020               	movlb 0	; select bank0
  8218  0C33  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  8219  0C34  2C36               	goto	u12531
  8220  0C35  2C37               	goto	u12530
  8221  0C36                     u12531:
  8222  0C36  2C93               	goto	l38613
  8223  0C37                     u12530:
  8224                           	line	508
  8225                           	
  8226  0C37                     l38593:	
  8227                           ;litterlanguage.c: 508: if (cur_instruction.operant) {
  8228  0C37  3001               	movlw	(01h)
  8229  0C38  3E68               	addlw	_cur_instruction&0ffh
  8230  0C39  0086               	movwf	fsr1l
  8231  0C3A  0187               	clrf fsr1h	
  8232                           	
  8233  0C3B  0016               	moviw	fsr1++
  8234  0C3C  0401               	iorwf	indf1,w
  8235  0C3D  1903               	skipnz
  8236  0C3E  2C40               	goto	u12541
  8237  0C3F  2C41               	goto	u12540
  8238  0C40                     u12541:
  8239  0C40  2C85               	goto	l38609
  8240  0C41                     u12540:
  8241                           	line	509
  8242                           	
  8243  0C41                     l38595:	
  8244                           ;litterlanguage.c: 509: if (eeprom_read((3)) < 2)
  8245  0C41  3003               	movlw	(03h)
  8246  0C42  31AA  2233  318B   	fcall	_eeprom_read
  8247  0C45  0020               	movlb 0	; select bank0
  8248  0C46  00D9               	movwf	(??_exe_instruction+0)+0
  8249  0C47  3002               	movlw	(02h)
  8250  0C48  0259               	subwf	0+(??_exe_instruction+0)+0,w
  8251  0C49  1803               	skipnc
  8252  0C4A  2C4C               	goto	u12551
  8253  0C4B  2C4D               	goto	u12550
  8254  0C4C                     u12551:
  8255  0C4C  2C56               	goto	l38599
  8256  0C4D                     u12550:
  8257                           	line	510
  8258                           	
  8259  0C4D                     l38597:	
  8260                           ;litterlanguage.c: 510: eeprom_write((3), 2);
  8261  0C4D  3002               	movlw	(02h)
  8262  0C4E  00D9               	movwf	(??_exe_instruction+0)+0
  8263  0C4F  0859               	movf	(??_exe_instruction+0)+0,w
  8264  0C50  00A1               	movwf	(?_eeprom_write)
  8265  0C51  3003               	movlw	(03h)
  8266  0C52  31AB  23F5  318B   	fcall	_eeprom_write
  8267  0C55  2C56               	goto	l38599
  8268                           	
  8269  0C56                     l4387:	
  8270                           	line	512
  8271                           	
  8272  0C56                     l38599:	
  8273                           ;litterlanguage.c: 512: if (!water_detected()) {
  8274  0C56  31B7  270B  318B   	fcall	_water_detected
  8275  0C59  3800               	iorlw	0
  8276  0C5A  1D03               	skipz
  8277  0C5B  2C5D               	goto	u12561
  8278  0C5C  2C5E               	goto	u12560
  8279  0C5D                     u12561:
  8280  0C5D  2C7B               	goto	l38607
  8281  0C5E                     u12560:
  8282                           	line	514
  8283                           	
  8284  0C5E                     l38601:	
  8285                           ;litterlanguage.c: 514: printf(" Filling");
  8286  0C5E  30CB               	movlw	low(STR_53|8000h)
  8287  0C5F  0020               	movlb 0	; select bank0
  8288  0C60  00AF               	movwf	(?_printf)
  8289  0C61  3088               	movlw	high(STR_53|8000h)
  8290  0C62  00B0               	movwf	((?_printf))+1
  8291  0C63  3194  24A0  318B   	fcall	_printf
  8292                           	line	516
  8293                           	
  8294  0C66                     l38603:	
  8295                           ;litterlanguage.c: 516: water_fill(1);
  8296  0C66  3001               	movlw	(01h)
  8297  0C67  31A8  209D  318B   	fcall	_water_fill
  8298                           	line	517
  8299                           	
  8300  0C6A                     l38605:	
  8301                           ;litterlanguage.c: 517: settimeout(&timer_fill, ((3*60+15)*((((4UL * (1000UL * ((1000UL)
                                 ))))/4)/8)));
  8302  0C6A  30EA               	movlw	(_timer_fill&0ffh)
  8303  0C6B  0020               	movlb 0	; select bank0
  8304  0C6C  00AD               	movwf	(?_settimeout)
  8305  0C6D  3000               	movlw	0x1/2
  8306  0C6E  00AE               	movwf	(?_settimeout+1)
  8307  0C6F  3001               	movlw	01h
  8308  0C70  00B2               	movwf	3+(?_settimeout)+02h
  8309  0C71  3073               	movlw	073h
  8310  0C72  00B1               	movwf	2+(?_settimeout)+02h
  8311  0C73  30EE               	movlw	0EEh
  8312  0C74  00B0               	movwf	1+(?_settimeout)+02h
  8313  0C75  30D8               	movlw	0D8h
  8314  0C76  00AF               	movwf	0+(?_settimeout)+02h
  8315                           
  8316  0C77  31A0  20CF  318B   	fcall	_settimeout
  8317                           	line	519
  8318                           ;litterlanguage.c: 519: }
  8319  0C7A  2C93               	goto	l38613
  8320                           	line	521
  8321                           	
  8322  0C7B                     l4388:	
  8323                           	line	522
  8324                           	
  8325  0C7B                     l38607:	
  8326                           ;litterlanguage.c: 521: else
  8327                           ;litterlanguage.c: 522: printf(" (skipped)");
  8328  0C7B  3056               	movlw	low(STR_54|8000h)
  8329  0C7C  0020               	movlb 0	; select bank0
  8330  0C7D  00AF               	movwf	(?_printf)
  8331  0C7E  3088               	movlw	high(STR_54|8000h)
  8332  0C7F  00B0               	movwf	((?_printf))+1
  8333  0C80  3194  24A0  318B   	fcall	_printf
  8334  0C83  2C93               	goto	l38613
  8335                           	
  8336  0C84                     l4389:	
  8337                           	line	524
  8338                           ;litterlanguage.c: 524: } else {
  8339  0C84  2C93               	goto	l38613
  8340                           	
  8341  0C85                     l4386:	
  8342                           	line	526
  8343                           	
  8344  0C85                     l38609:	
  8345                           ;litterlanguage.c: 526: water_fill(0);
  8346  0C85  3000               	movlw	(0)
  8347  0C86  31A8  209D  318B   	fcall	_water_fill
  8348                           	line	527
  8349                           	
  8350  0C89                     l38611:	
  8351                           ;litterlanguage.c: 527: timeoutnever(&timer_fill);
  8352  0C89  30EA               	movlw	(_timer_fill&0ffh)
  8353  0C8A  0020               	movlb 0	; select bank0
  8354  0C8B  00A5               	movwf	(?_timeoutnever)
  8355  0C8C  3000               	movlw	0x1/2
  8356  0C8D  00A6               	movwf	(?_timeoutnever+1)
  8357  0C8E  31A9  2162  318B   	fcall	_timeoutnever
  8358  0C91  2C93               	goto	l38613
  8359                           	line	528
  8360                           	
  8361  0C92                     l4390:	
  8362  0C92  2C93               	goto	l38613
  8363                           	
  8364  0C93                     l4385:	
  8365                           	line	529
  8366                           	
  8367  0C93                     l38613:	
  8368                           ;litterlanguage.c: 528: }
  8369                           ;litterlanguage.c: 529: ins_pointer++;
  8370  0C93  3003               	movlw	low(03h)
  8371  0C94  0020               	movlb 0	; select bank0
  8372  0C95  07EB               	addwf	(_ins_pointer),f
  8373  0C96  3000               	movlw	high(03h)
  8374  0C97  3DEC               	addwfc	(_ins_pointer+1),f
  8375                           	line	530
  8376                           	
  8377  0C98                     l38615:	
  8378                           ;litterlanguage.c: 530: ins_state = 3;
  8379  0C98  3003               	movlw	(03h)
  8380  0C99  00D9               	movwf	(??_exe_instruction+0)+0
  8381  0C9A  0859               	movf	(??_exe_instruction+0)+0,w
  8382  0C9B  00E5               	movwf	(_ins_state)
  8383                           	line	531
  8384                           ;litterlanguage.c: 531: break;
  8385  0C9C  2FF7               	goto	l38783
  8386                           	line	532
  8387                           ;litterlanguage.c: 532: case 0x04:
  8388                           	
  8389  0C9D                     l4391:	
  8390                           	line	534
  8391                           ;litterlanguage.c: 534: printf("INS_PUMP, %s%s", cur_instruction.operant?"on":"off", wet
                                 _program?"":" (nop)");
  8392  0C9D  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  8393  0C9E  2CA0               	goto	u12571
  8394  0C9F  2CA1               	goto	u12570
  8395  0CA0                     u12571:
  8396  0CA0  2CA7               	goto	l38619
  8397  0CA1                     u12570:
  8398                           	
  8399  0CA1                     l38617:	
  8400  0CA1  300A               	movlw	low(STR_59|8000h)
  8401  0CA2  0021               	movlb 1	; select bank1
  8402  0CA3  00B2               	movwf	(_exe_instruction$5979)^080h
  8403  0CA4  3089               	movlw	high(STR_59|8000h)
  8404  0CA5  00B3               	movwf	((_exe_instruction$5979)^080h)+1
  8405  0CA6  2CAD               	goto	l38621
  8406                           	
  8407  0CA7                     l4393:	
  8408                           	
  8409  0CA7                     l38619:	
  8410  0CA7  30F0               	movlw	low(STR_58|8000h)
  8411  0CA8  0021               	movlb 1	; select bank1
  8412  0CA9  00B2               	movwf	(_exe_instruction$5979)^080h
  8413  0CAA  3087               	movlw	high(STR_58|8000h)
  8414  0CAB  00B3               	movwf	((_exe_instruction$5979)^080h)+1
  8415  0CAC  2CAD               	goto	l38621
  8416                           	
  8417  0CAD                     l4395:	
  8418                           	
  8419  0CAD                     l38621:	
  8420  0CAD  0020               	movlb 0	; select bank0
  8421  0CAE  086A               	movf	(1+(_cur_instruction)+01h),w
  8422  0CAF  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8423  0CB0  1D03               	skipz
  8424  0CB1  2CB3               	goto	u12581
  8425  0CB2  2CB4               	goto	u12580
  8426  0CB3                     u12581:
  8427  0CB3  2CBA               	goto	l38625
  8428  0CB4                     u12580:
  8429                           	
  8430  0CB4                     l38623:	
  8431  0CB4  302C               	movlw	low(STR_57|8000h)
  8432  0CB5  0021               	movlb 1	; select bank1
  8433  0CB6  00B4               	movwf	(_exe_instruction$5980)^080h
  8434  0CB7  3089               	movlw	high(STR_57|8000h)
  8435  0CB8  00B5               	movwf	((_exe_instruction$5980)^080h)+1
  8436  0CB9  2CC0               	goto	l38627
  8437                           	
  8438  0CBA                     l4397:	
  8439                           	
  8440  0CBA                     l38625:	
  8441  0CBA  3042               	movlw	low(STR_56|8000h)
  8442  0CBB  0021               	movlb 1	; select bank1
  8443  0CBC  00B4               	movwf	(_exe_instruction$5980)^080h
  8444  0CBD  3089               	movlw	high(STR_56|8000h)
  8445  0CBE  00B5               	movwf	((_exe_instruction$5980)^080h)+1
  8446  0CBF  2CC0               	goto	l38627
  8447                           	
  8448  0CC0                     l4399:	
  8449                           	
  8450  0CC0                     l38627:	
  8451  0CC0  30C6               	movlw	low(STR_55|8000h)
  8452  0CC1  0020               	movlb 0	; select bank0
  8453  0CC2  00AF               	movwf	(?_printf)
  8454  0CC3  3087               	movlw	high(STR_55|8000h)
  8455  0CC4  00B0               	movwf	((?_printf))+1
  8456  0CC5  0021               	movlb 1	; select bank1
  8457  0CC6  0835               	movf	(_exe_instruction$5980+1)^080h,w
  8458  0CC7  0020               	movlb 0	; select bank0
  8459  0CC8  01B2               	clrf	(1+?_printf+02h)
  8460  0CC9  07B2               	addwf	(1+?_printf+02h)
  8461  0CCA  0021               	movlb 1	; select bank1
  8462  0CCB  0834               	movf	(_exe_instruction$5980)^080h,w
  8463  0CCC  0020               	movlb 0	; select bank0
  8464  0CCD  01B1               	clrf	(0+?_printf+02h)
  8465  0CCE  07B1               	addwf	(0+?_printf+02h)
  8466                           
  8467  0CCF  0021               	movlb 1	; select bank1
  8468  0CD0  0833               	movf	(_exe_instruction$5979+1)^080h,w
  8469  0CD1  0020               	movlb 0	; select bank0
  8470  0CD2  01B4               	clrf	(1+?_printf+04h)
  8471  0CD3  07B4               	addwf	(1+?_printf+04h)
  8472  0CD4  0021               	movlb 1	; select bank1
  8473  0CD5  0832               	movf	(_exe_instruction$5979)^080h,w
  8474  0CD6  0020               	movlb 0	; select bank0
  8475  0CD7  01B3               	clrf	(0+?_printf+04h)
  8476  0CD8  07B3               	addwf	(0+?_printf+04h)
  8477                           
  8478  0CD9  3194  24A0  318B   	fcall	_printf
  8479                           	line	536
  8480                           	
  8481  0CDC                     l38629:	
  8482                           ;litterlanguage.c: 536: if (wet_program) {
  8483  0CDC  0020               	movlb 0	; select bank0
  8484  0CDD  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  8485  0CDE  2CE0               	goto	u12591
  8486  0CDF  2CE1               	goto	u12590
  8487  0CE0                     u12591:
  8488  0CE0  2CEE               	goto	l38635
  8489  0CE1                     u12590:
  8490                           	line	538
  8491                           	
  8492  0CE1                     l38631:	
  8493                           ;litterlanguage.c: 538: printf(" Draining");
  8494  0CE1  3094               	movlw	low(STR_60|8000h)
  8495  0CE2  00AF               	movwf	(?_printf)
  8496  0CE3  3088               	movlw	high(STR_60|8000h)
  8497  0CE4  00B0               	movwf	((?_printf))+1
  8498  0CE5  3194  24A0  318B   	fcall	_printf
  8499                           	line	540
  8500                           	
  8501  0CE8                     l38633:	
  8502                           ;litterlanguage.c: 540: set_Pump((unsigned char)cur_instruction.operant);
  8503  0CE8  0020               	movlb 0	; select bank0
  8504  0CE9  0869               	movf	0+(_cur_instruction)+01h,w
  8505  0CEA  31B7  27EF  318B   	fcall	_set_Pump
  8506                           	line	541
  8507                           ;litterlanguage.c: 541: }
  8508  0CED  2CF7               	goto	l38637
  8509                           	line	543
  8510                           	
  8511  0CEE                     l4400:	
  8512                           	line	544
  8513                           	
  8514  0CEE                     l38635:	
  8515                           ;litterlanguage.c: 543: else
  8516                           ;litterlanguage.c: 544: printf(" (skipped)");
  8517  0CEE  3056               	movlw	low(STR_61|8000h)
  8518  0CEF  0020               	movlb 0	; select bank0
  8519  0CF0  00AF               	movwf	(?_printf)
  8520  0CF1  3088               	movlw	high(STR_61|8000h)
  8521  0CF2  00B0               	movwf	((?_printf))+1
  8522  0CF3  3194  24A0  318B   	fcall	_printf
  8523  0CF6  2CF7               	goto	l38637
  8524                           	
  8525  0CF7                     l4401:	
  8526                           	line	546
  8527                           	
  8528  0CF7                     l38637:	
  8529                           ;litterlanguage.c: 546: ins_pointer++;
  8530  0CF7  3003               	movlw	low(03h)
  8531  0CF8  0020               	movlb 0	; select bank0
  8532  0CF9  07EB               	addwf	(_ins_pointer),f
  8533  0CFA  3000               	movlw	high(03h)
  8534  0CFB  3DEC               	addwfc	(_ins_pointer+1),f
  8535                           	line	547
  8536                           	
  8537  0CFC                     l38639:	
  8538                           ;litterlanguage.c: 547: ins_state = 3;
  8539  0CFC  3003               	movlw	(03h)
  8540  0CFD  00D9               	movwf	(??_exe_instruction+0)+0
  8541  0CFE  0859               	movf	(??_exe_instruction+0)+0,w
  8542  0CFF  00E5               	movwf	(_ins_state)
  8543                           	line	548
  8544                           ;litterlanguage.c: 548: break;
  8545  0D00  2FF7               	goto	l38783
  8546                           	line	549
  8547                           ;litterlanguage.c: 549: case 0x05:
  8548                           	
  8549  0D01                     l4402:	
  8550                           	line	551
  8551                           ;litterlanguage.c: 551: printf("INS_DRYER, %s%s", cur_instruction.operant?"on":"off", we
                                 t_program?"":" (nop)");
  8552  0D01  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  8553  0D02  2D04               	goto	u12601
  8554  0D03  2D05               	goto	u12600
  8555  0D04                     u12601:
  8556  0D04  2D0B               	goto	l38643
  8557  0D05                     u12600:
  8558                           	
  8559  0D05                     l38641:	
  8560  0D05  300A               	movlw	low(STR_66|8000h)
  8561  0D06  0021               	movlb 1	; select bank1
  8562  0D07  00B6               	movwf	(_exe_instruction$5988)^080h
  8563  0D08  3089               	movlw	high(STR_66|8000h)
  8564  0D09  00B7               	movwf	((_exe_instruction$5988)^080h)+1
  8565  0D0A  2D11               	goto	l38645
  8566                           	
  8567  0D0B                     l4404:	
  8568                           	
  8569  0D0B                     l38643:	
  8570  0D0B  30F0               	movlw	low(STR_65|8000h)
  8571  0D0C  0021               	movlb 1	; select bank1
  8572  0D0D  00B6               	movwf	(_exe_instruction$5988)^080h
  8573  0D0E  3087               	movlw	high(STR_65|8000h)
  8574  0D0F  00B7               	movwf	((_exe_instruction$5988)^080h)+1
  8575  0D10  2D11               	goto	l38645
  8576                           	
  8577  0D11                     l4406:	
  8578                           	
  8579  0D11                     l38645:	
  8580  0D11  0020               	movlb 0	; select bank0
  8581  0D12  086A               	movf	(1+(_cur_instruction)+01h),w
  8582  0D13  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8583  0D14  1D03               	skipz
  8584  0D15  2D17               	goto	u12611
  8585  0D16  2D18               	goto	u12610
  8586  0D17                     u12611:
  8587  0D17  2D1E               	goto	l38649
  8588  0D18                     u12610:
  8589                           	
  8590  0D18                     l38647:	
  8591  0D18  302C               	movlw	low(STR_64|8000h)
  8592  0D19  0021               	movlb 1	; select bank1
  8593  0D1A  00B8               	movwf	(_exe_instruction$5989)^080h
  8594  0D1B  3089               	movlw	high(STR_64|8000h)
  8595  0D1C  00B9               	movwf	((_exe_instruction$5989)^080h)+1
  8596  0D1D  2D24               	goto	l38651
  8597                           	
  8598  0D1E                     l4408:	
  8599                           	
  8600  0D1E                     l38649:	
  8601  0D1E  3042               	movlw	low(STR_63|8000h)
  8602  0D1F  0021               	movlb 1	; select bank1
  8603  0D20  00B8               	movwf	(_exe_instruction$5989)^080h
  8604  0D21  3089               	movlw	high(STR_63|8000h)
  8605  0D22  00B9               	movwf	((_exe_instruction$5989)^080h)+1
  8606  0D23  2D24               	goto	l38651
  8607                           	
  8608  0D24                     l4410:	
  8609                           	
  8610  0D24                     l38651:	
  8611  0D24  3069               	movlw	low(STR_62|8000h)
  8612  0D25  0020               	movlb 0	; select bank0
  8613  0D26  00AF               	movwf	(?_printf)
  8614  0D27  3087               	movlw	high(STR_62|8000h)
  8615  0D28  00B0               	movwf	((?_printf))+1
  8616  0D29  0021               	movlb 1	; select bank1
  8617  0D2A  0839               	movf	(_exe_instruction$5989+1)^080h,w
  8618  0D2B  0020               	movlb 0	; select bank0
  8619  0D2C  01B2               	clrf	(1+?_printf+02h)
  8620  0D2D  07B2               	addwf	(1+?_printf+02h)
  8621  0D2E  0021               	movlb 1	; select bank1
  8622  0D2F  0838               	movf	(_exe_instruction$5989)^080h,w
  8623  0D30  0020               	movlb 0	; select bank0
  8624  0D31  01B1               	clrf	(0+?_printf+02h)
  8625  0D32  07B1               	addwf	(0+?_printf+02h)
  8626                           
  8627  0D33  0021               	movlb 1	; select bank1
  8628  0D34  0837               	movf	(_exe_instruction$5988+1)^080h,w
  8629  0D35  0020               	movlb 0	; select bank0
  8630  0D36  01B4               	clrf	(1+?_printf+04h)
  8631  0D37  07B4               	addwf	(1+?_printf+04h)
  8632  0D38  0021               	movlb 1	; select bank1
  8633  0D39  0836               	movf	(_exe_instruction$5988)^080h,w
  8634  0D3A  0020               	movlb 0	; select bank0
  8635  0D3B  01B3               	clrf	(0+?_printf+04h)
  8636  0D3C  07B3               	addwf	(0+?_printf+04h)
  8637                           
  8638  0D3D  3194  24A0  318B   	fcall	_printf
  8639                           	line	553
  8640                           	
  8641  0D40                     l38653:	
  8642                           ;litterlanguage.c: 553: if (wet_program)
  8643  0D40  0020               	movlb 0	; select bank0
  8644  0D41  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  8645  0D42  2D44               	goto	u12621
  8646  0D43  2D45               	goto	u12620
  8647  0D44                     u12621:
  8648  0D44  2D4A               	goto	l38657
  8649  0D45                     u12620:
  8650                           	line	554
  8651                           	
  8652  0D45                     l38655:	
  8653                           ;litterlanguage.c: 554: set_Dryer((unsigned char)cur_instruction.operant);
  8654  0D45  0869               	movf	0+(_cur_instruction)+01h,w
  8655  0D46  31A8  203D  318B   	fcall	_set_Dryer
  8656  0D49  2D4A               	goto	l38657
  8657                           	
  8658  0D4A                     l4411:	
  8659                           	line	555
  8660                           	
  8661  0D4A                     l38657:	
  8662                           ;litterlanguage.c: 555: ins_pointer++;
  8663  0D4A  3003               	movlw	low(03h)
  8664  0D4B  0020               	movlb 0	; select bank0
  8665  0D4C  07EB               	addwf	(_ins_pointer),f
  8666  0D4D  3000               	movlw	high(03h)
  8667  0D4E  3DEC               	addwfc	(_ins_pointer+1),f
  8668                           	line	556
  8669                           	
  8670  0D4F                     l38659:	
  8671                           ;litterlanguage.c: 556: ins_state = 3;
  8672  0D4F  3003               	movlw	(03h)
  8673  0D50  00D9               	movwf	(??_exe_instruction+0)+0
  8674  0D51  0859               	movf	(??_exe_instruction+0)+0,w
  8675  0D52  00E5               	movwf	(_ins_state)
  8676                           	line	557
  8677                           ;litterlanguage.c: 557: break;
  8678  0D53  2FF7               	goto	l38783
  8679                           	line	558
  8680                           ;litterlanguage.c: 558: case 0x07:
  8681                           	
  8682  0D54                     l4412:	
  8683                           	line	560
  8684                           	
  8685  0D54                     l38661:	
  8686                           ;litterlanguage.c: 560: printf("INS_WAITTIME, %ums", cur_instruction.operant);
  8687  0D54  302D               	movlw	low(STR_67|8000h)
  8688  0D55  00AF               	movwf	(?_printf)
  8689  0D56  3086               	movlw	high(STR_67|8000h)
  8690  0D57  00B0               	movwf	((?_printf))+1
  8691  0D58  086A               	movf	1+(_cur_instruction)+01h,w
  8692  0D59  01B2               	clrf	1+(?_printf)+02h
  8693  0D5A  07B2               	addwf	1+(?_printf)+02h
  8694  0D5B  0869               	movf	0+(_cur_instruction)+01h,w
  8695  0D5C  01B1               	clrf	0+(?_printf)+02h
  8696  0D5D  07B1               	addwf	0+(?_printf)+02h
  8697                           
  8698  0D5E  3194  24A0  318B   	fcall	_printf
  8699                           	line	563
  8700                           	
  8701  0D61                     l38663:	
  8702                           ;litterlanguage.c: 562: settimeout( &timer_waitins,
  8703                           ;litterlanguage.c: 563: (unsigned long)cur_instruction.operant * (((((4UL * (1000UL * ((
                                 1000UL)))))/4)/8)/1000) );
  8704  0D61  306A               	movlw	(_timer_waitins&0ffh)
  8705  0D62  0020               	movlb 0	; select bank0
  8706  0D63  00AD               	movwf	(?_settimeout)
  8707  0D64  3001               	movlw	0x2/2
  8708  0D65  00AE               	movwf	(?_settimeout+1)
  8709  0D66  0869               	movf	0+(_cur_instruction)+01h,w
  8710  0D67  00A1               	movwf	(?___lmul)
  8711  0D68  086A               	movf	1+(_cur_instruction)+01h,w
  8712  0D69  00A2               	movwf	((?___lmul))+1
  8713  0D6A  01A3               	clrf	2+((?___lmul))
  8714  0D6B  01A4               	clrf	3+((?___lmul))
  8715  0D6C  3000               	movlw	0
  8716  0D6D  00A8               	movwf	3+(?___lmul)+04h
  8717  0D6E  3000               	movlw	0
  8718  0D6F  00A7               	movwf	2+(?___lmul)+04h
  8719  0D70  3000               	movlw	0
  8720  0D71  00A6               	movwf	1+(?___lmul)+04h
  8721  0D72  307D               	movlw	07Dh
  8722  0D73  00A5               	movwf	0+(?___lmul)+04h
  8723                           
  8724  0D74  31AC  242C  318B   	fcall	___lmul
  8725  0D77  0020               	movlb 0	; select bank0
  8726  0D78  0824               	movf	(3+(?___lmul)),w
  8727  0D79  00B2               	movwf	3+(?_settimeout)+02h
  8728  0D7A  0823               	movf	(2+(?___lmul)),w
  8729  0D7B  00B1               	movwf	2+(?_settimeout)+02h
  8730  0D7C  0822               	movf	(1+(?___lmul)),w
  8731  0D7D  00B0               	movwf	1+(?_settimeout)+02h
  8732  0D7E  0821               	movf	(0+(?___lmul)),w
  8733  0D7F  00AF               	movwf	0+(?_settimeout)+02h
  8734                           
  8735  0D80  31A0  20CF  318B   	fcall	_settimeout
  8736                           	line	564
  8737                           	
  8738  0D83                     l38665:	
  8739                           ;litterlanguage.c: 564: ins_state = 5;
  8740  0D83  3005               	movlw	(05h)
  8741  0D84  0020               	movlb 0	; select bank0
  8742  0D85  00D9               	movwf	(??_exe_instruction+0)+0
  8743  0D86  0859               	movf	(??_exe_instruction+0)+0,w
  8744  0D87  00E5               	movwf	(_ins_state)
  8745                           	line	565
  8746                           ;litterlanguage.c: 565: break;
  8747  0D88  2FF7               	goto	l38783
  8748                           	line	566
  8749                           ;litterlanguage.c: 566: case 0x08:
  8750                           	
  8751  0D89                     l4413:	
  8752                           	line	568
  8753                           ;litterlanguage.c: 568: printf("INS_WAITWATER, %s%s", cur_instruction.operant?"high":"lo
                                 w", wet_program?"":" (nop)");
  8754  0D89  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  8755  0D8A  2D8C               	goto	u12631
  8756  0D8B  2D8D               	goto	u12630
  8757  0D8C                     u12631:
  8758  0D8C  2D93               	goto	l38669
  8759  0D8D                     u12630:
  8760                           	
  8761  0D8D                     l38667:	
  8762  0D8D  300A               	movlw	low(STR_72|8000h)
  8763  0D8E  0021               	movlb 1	; select bank1
  8764  0D8F  00BA               	movwf	(_exe_instruction$5996)^080h
  8765  0D90  3089               	movlw	high(STR_72|8000h)
  8766  0D91  00BB               	movwf	((_exe_instruction$5996)^080h)+1
  8767  0D92  2D99               	goto	l38671
  8768                           	
  8769  0D93                     l4415:	
  8770                           	
  8771  0D93                     l38669:	
  8772  0D93  30F0               	movlw	low(STR_71|8000h)
  8773  0D94  0021               	movlb 1	; select bank1
  8774  0D95  00BA               	movwf	(_exe_instruction$5996)^080h
  8775  0D96  3087               	movlw	high(STR_71|8000h)
  8776  0D97  00BB               	movwf	((_exe_instruction$5996)^080h)+1
  8777  0D98  2D99               	goto	l38671
  8778                           	
  8779  0D99                     l4417:	
  8780                           	
  8781  0D99                     l38671:	
  8782  0D99  0020               	movlb 0	; select bank0
  8783  0D9A  086A               	movf	(1+(_cur_instruction)+01h),w
  8784  0D9B  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8785  0D9C  1D03               	skipz
  8786  0D9D  2D9F               	goto	u12641
  8787  0D9E  2DA0               	goto	u12640
  8788  0D9F                     u12641:
  8789  0D9F  2DA6               	goto	l38675
  8790  0DA0                     u12640:
  8791                           	
  8792  0DA0                     l38673:	
  8793  0DA0  3034               	movlw	low(STR_70|8000h)
  8794  0DA1  0021               	movlb 1	; select bank1
  8795  0DA2  00BC               	movwf	(_exe_instruction$5997)^080h
  8796  0DA3  3089               	movlw	high(STR_70|8000h)
  8797  0DA4  00BD               	movwf	((_exe_instruction$5997)^080h)+1
  8798  0DA5  2DAC               	goto	l38677
  8799                           	
  8800  0DA6                     l4419:	
  8801                           	
  8802  0DA6                     l38675:	
  8803  0DA6  3023               	movlw	low(STR_69|8000h)
  8804  0DA7  0021               	movlb 1	; select bank1
  8805  0DA8  00BC               	movwf	(_exe_instruction$5997)^080h
  8806  0DA9  3089               	movlw	high(STR_69|8000h)
  8807  0DAA  00BD               	movwf	((_exe_instruction$5997)^080h)+1
  8808  0DAB  2DAC               	goto	l38677
  8809                           	
  8810  0DAC                     l4421:	
  8811                           	
  8812  0DAC                     l38677:	
  8813  0DAC  30CA               	movlw	low(STR_68|8000h)
  8814  0DAD  0020               	movlb 0	; select bank0
  8815  0DAE  00AF               	movwf	(?_printf)
  8816  0DAF  3085               	movlw	high(STR_68|8000h)
  8817  0DB0  00B0               	movwf	((?_printf))+1
  8818  0DB1  0021               	movlb 1	; select bank1
  8819  0DB2  083D               	movf	(_exe_instruction$5997+1)^080h,w
  8820  0DB3  0020               	movlb 0	; select bank0
  8821  0DB4  01B2               	clrf	(1+?_printf+02h)
  8822  0DB5  07B2               	addwf	(1+?_printf+02h)
  8823  0DB6  0021               	movlb 1	; select bank1
  8824  0DB7  083C               	movf	(_exe_instruction$5997)^080h,w
  8825  0DB8  0020               	movlb 0	; select bank0
  8826  0DB9  01B1               	clrf	(0+?_printf+02h)
  8827  0DBA  07B1               	addwf	(0+?_printf+02h)
  8828                           
  8829  0DBB  0021               	movlb 1	; select bank1
  8830  0DBC  083B               	movf	(_exe_instruction$5996+1)^080h,w
  8831  0DBD  0020               	movlb 0	; select bank0
  8832  0DBE  01B4               	clrf	(1+?_printf+04h)
  8833  0DBF  07B4               	addwf	(1+?_printf+04h)
  8834  0DC0  0021               	movlb 1	; select bank1
  8835  0DC1  083A               	movf	(_exe_instruction$5996)^080h,w
  8836  0DC2  0020               	movlb 0	; select bank0
  8837  0DC3  01B3               	clrf	(0+?_printf+04h)
  8838  0DC4  07B3               	addwf	(0+?_printf+04h)
  8839                           
  8840  0DC5  3194  24A0  318B   	fcall	_printf
  8841                           	line	570
  8842                           	
  8843  0DC8                     l38679:	
  8844                           ;litterlanguage.c: 570: if (wet_program) {
  8845  0DC8  0020               	movlb 0	; select bank0
  8846  0DC9  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  8847  0DCA  2DCC               	goto	u12651
  8848  0DCB  2DCD               	goto	u12650
  8849  0DCC                     u12651:
  8850  0DCC  2DE9               	goto	l38687
  8851  0DCD                     u12650:
  8852                           	line	571
  8853                           	
  8854  0DCD                     l38681:	
  8855                           ;litterlanguage.c: 571: if (!cur_instruction.operant)
  8856  0DCD  086A               	movf	(1+(_cur_instruction)+01h),w
  8857  0DCE  0469               	iorwf	(0+(_cur_instruction)+01h),w
  8858  0DCF  1D03               	skipz
  8859  0DD0  2DD2               	goto	u12661
  8860  0DD1  2DD3               	goto	u12660
  8861  0DD2                     u12661:
  8862  0DD2  2DE3               	goto	l38685
  8863  0DD3                     u12660:
  8864                           	line	573
  8865                           	
  8866  0DD3                     l38683:	
  8867                           ;litterlanguage.c: 573: settimeout(&timer_drain, ((0*60+10)*((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8)));
  8868  0DD3  30E4               	movlw	(_timer_drain&0ffh)
  8869  0DD4  00AD               	movwf	(?_settimeout)
  8870  0DD5  3000               	movlw	0x1/2
  8871  0DD6  00AE               	movwf	(?_settimeout+1)
  8872  0DD7  3000               	movlw	0
  8873  0DD8  00B2               	movwf	3+(?_settimeout)+02h
  8874  0DD9  3013               	movlw	013h
  8875  0DDA  00B1               	movwf	2+(?_settimeout)+02h
  8876  0DDB  3012               	movlw	012h
  8877  0DDC  00B0               	movwf	1+(?_settimeout)+02h
  8878  0DDD  30D0               	movlw	0D0h
  8879  0DDE  00AF               	movwf	0+(?_settimeout)+02h
  8880                           
  8881  0DDF  31A0  20CF  318B   	fcall	_settimeout
  8882  0DE2  2DE3               	goto	l38685
  8883                           	
  8884  0DE3                     l4423:	
  8885                           	line	574
  8886                           	
  8887  0DE3                     l38685:	
  8888                           ;litterlanguage.c: 574: ins_state = 5;
  8889  0DE3  3005               	movlw	(05h)
  8890  0DE4  0020               	movlb 0	; select bank0
  8891  0DE5  00D9               	movwf	(??_exe_instruction+0)+0
  8892  0DE6  0859               	movf	(??_exe_instruction+0)+0,w
  8893  0DE7  00E5               	movwf	(_ins_state)
  8894                           	line	575
  8895                           ;litterlanguage.c: 575: } else {
  8896  0DE8  2FF7               	goto	l38783
  8897                           	
  8898  0DE9                     l4422:	
  8899                           	line	576
  8900                           	
  8901  0DE9                     l38687:	
  8902                           ;litterlanguage.c: 576: ins_pointer++;
  8903  0DE9  3003               	movlw	low(03h)
  8904  0DEA  07EB               	addwf	(_ins_pointer),f
  8905  0DEB  3000               	movlw	high(03h)
  8906  0DEC  3DEC               	addwfc	(_ins_pointer+1),f
  8907                           	line	577
  8908                           ;litterlanguage.c: 577: ins_state = 3;
  8909  0DED  3003               	movlw	(03h)
  8910  0DEE  00D9               	movwf	(??_exe_instruction+0)+0
  8911  0DEF  0859               	movf	(??_exe_instruction+0)+0,w
  8912  0DF0  00E5               	movwf	(_ins_state)
  8913  0DF1  2FF7               	goto	l38783
  8914                           	line	578
  8915                           	
  8916  0DF2                     l4424:	
  8917                           	line	579
  8918                           ;litterlanguage.c: 578: }
  8919                           ;litterlanguage.c: 579: break;
  8920  0DF2  2FF7               	goto	l38783
  8921                           	line	580
  8922                           ;litterlanguage.c: 580: case 0x09:
  8923                           	
  8924  0DF3                     l4425:	
  8925                           	line	582
  8926                           ;litterlanguage.c: 582: printf("INS_WAITDOSAGE%s", wet_program?"":" (nop)");
  8927  0DF3  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  8928  0DF4  2DF6               	goto	u12671
  8929  0DF5  2DF7               	goto	u12670
  8930  0DF6                     u12671:
  8931  0DF6  2DFD               	goto	l38691
  8932  0DF7                     u12670:
  8933                           	
  8934  0DF7                     l38689:	
  8935  0DF7  300A               	movlw	low(STR_75|8000h)
  8936  0DF8  0021               	movlb 1	; select bank1
  8937  0DF9  00BE               	movwf	(_exe_instruction$6001)^080h
  8938  0DFA  3089               	movlw	high(STR_75|8000h)
  8939  0DFB  00BF               	movwf	((_exe_instruction$6001)^080h)+1
  8940  0DFC  2E03               	goto	l38693
  8941                           	
  8942  0DFD                     l4427:	
  8943                           	
  8944  0DFD                     l38691:	
  8945  0DFD  30F0               	movlw	low(STR_74|8000h)
  8946  0DFE  0021               	movlb 1	; select bank1
  8947  0DFF  00BE               	movwf	(_exe_instruction$6001)^080h
  8948  0E00  3087               	movlw	high(STR_74|8000h)
  8949  0E01  00BF               	movwf	((_exe_instruction$6001)^080h)+1
  8950  0E02  2E03               	goto	l38693
  8951                           	
  8952  0E03                     l4429:	
  8953                           	
  8954  0E03                     l38693:	
  8955  0E03  3027               	movlw	low(STR_73|8000h)
  8956  0E04  0020               	movlb 0	; select bank0
  8957  0E05  00AF               	movwf	(?_printf)
  8958  0E06  3087               	movlw	high(STR_73|8000h)
  8959  0E07  00B0               	movwf	((?_printf))+1
  8960  0E08  0021               	movlb 1	; select bank1
  8961  0E09  083F               	movf	(_exe_instruction$6001+1)^080h,w
  8962  0E0A  0020               	movlb 0	; select bank0
  8963  0E0B  01B2               	clrf	(1+?_printf+02h)
  8964  0E0C  07B2               	addwf	(1+?_printf+02h)
  8965  0E0D  0021               	movlb 1	; select bank1
  8966  0E0E  083E               	movf	(_exe_instruction$6001)^080h,w
  8967  0E0F  0020               	movlb 0	; select bank0
  8968  0E10  01B1               	clrf	(0+?_printf+02h)
  8969  0E11  07B1               	addwf	(0+?_printf+02h)
  8970                           
  8971  0E12  3194  24A0  318B   	fcall	_printf
  8972                           	line	584
  8973                           	
  8974  0E15                     l38695:	
  8975                           ;litterlanguage.c: 584: if (wet_program)
  8976  0E15  0020               	movlb 0	; select bank0
  8977  0E16  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  8978  0E17  2E19               	goto	u12681
  8979  0E18  2E1A               	goto	u12680
  8980  0E19                     u12681:
  8981  0E19  2E1F               	goto	l38699
  8982  0E1A                     u12680:
  8983                           	line	585
  8984                           	
  8985  0E1A                     l38697:	
  8986                           ;litterlanguage.c: 585: ins_state = 5;
  8987  0E1A  3005               	movlw	(05h)
  8988  0E1B  00D9               	movwf	(??_exe_instruction+0)+0
  8989  0E1C  0859               	movf	(??_exe_instruction+0)+0,w
  8990  0E1D  00E5               	movwf	(_ins_state)
  8991  0E1E  2FF7               	goto	l38783
  8992                           	line	586
  8993                           	
  8994  0E1F                     l4430:	
  8995                           	line	587
  8996                           	
  8997  0E1F                     l38699:	
  8998                           ;litterlanguage.c: 586: else {
  8999                           ;litterlanguage.c: 587: ins_pointer++;
  9000  0E1F  3003               	movlw	low(03h)
  9001  0E20  07EB               	addwf	(_ins_pointer),f
  9002  0E21  3000               	movlw	high(03h)
  9003  0E22  3DEC               	addwfc	(_ins_pointer+1),f
  9004                           	line	588
  9005                           ;litterlanguage.c: 588: ins_state = 3;
  9006  0E23  3003               	movlw	(03h)
  9007  0E24  00D9               	movwf	(??_exe_instruction+0)+0
  9008  0E25  0859               	movf	(??_exe_instruction+0)+0,w
  9009  0E26  00E5               	movwf	(_ins_state)
  9010  0E27  2FF7               	goto	l38783
  9011                           	line	589
  9012                           	
  9013  0E28                     l4431:	
  9014                           	line	590
  9015                           ;litterlanguage.c: 589: }
  9016                           ;litterlanguage.c: 590: break;
  9017  0E28  2FF7               	goto	l38783
  9018                           	line	591
  9019                           ;litterlanguage.c: 591: case 0x0A:
  9020                           	
  9021  0E29                     l4432:	
  9022                           	line	593
  9023                           ;litterlanguage.c: 593: printf("INS_SKIPIFDRY, %u%s", cur_instruction.operant, wet_progr
                                 am?" (nop)":"");
  9024  0E29  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  9025  0E2A  2E2C               	goto	u12691
  9026  0E2B  2E2D               	goto	u12690
  9027  0E2C                     u12691:
  9028  0E2C  2E33               	goto	l38703
  9029  0E2D                     u12690:
  9030                           	
  9031  0E2D                     l38701:	
  9032  0E2D  30F0               	movlw	low(STR_78|8000h)
  9033  0E2E  0021               	movlb 1	; select bank1
  9034  0E2F  00C0               	movwf	(_exe_instruction$6005)^080h
  9035  0E30  3087               	movlw	high(STR_78|8000h)
  9036  0E31  00C1               	movwf	((_exe_instruction$6005)^080h)+1
  9037  0E32  2E39               	goto	l38705
  9038                           	
  9039  0E33                     l4434:	
  9040                           	
  9041  0E33                     l38703:	
  9042  0E33  300A               	movlw	low(STR_77|8000h)
  9043  0E34  0021               	movlb 1	; select bank1
  9044  0E35  00C0               	movwf	(_exe_instruction$6005)^080h
  9045  0E36  3089               	movlw	high(STR_77|8000h)
  9046  0E37  00C1               	movwf	((_exe_instruction$6005)^080h)+1
  9047  0E38  2E39               	goto	l38705
  9048                           	
  9049  0E39                     l4436:	
  9050                           	
  9051  0E39                     l38705:	
  9052  0E39  30F2               	movlw	low(STR_76|8000h)
  9053  0E3A  0020               	movlb 0	; select bank0
  9054  0E3B  00AF               	movwf	(?_printf)
  9055  0E3C  3085               	movlw	high(STR_76|8000h)
  9056  0E3D  00B0               	movwf	((?_printf))+1
  9057  0E3E  086A               	movf	1+(_cur_instruction)+01h,w
  9058  0E3F  01B2               	clrf	1+(?_printf)+02h
  9059  0E40  07B2               	addwf	1+(?_printf)+02h
  9060  0E41  0869               	movf	0+(_cur_instruction)+01h,w
  9061  0E42  01B1               	clrf	0+(?_printf)+02h
  9062  0E43  07B1               	addwf	0+(?_printf)+02h
  9063                           
  9064  0E44  0021               	movlb 1	; select bank1
  9065  0E45  0841               	movf	(_exe_instruction$6005+1)^080h,w
  9066  0E46  0020               	movlb 0	; select bank0
  9067  0E47  01B4               	clrf	(1+?_printf+04h)
  9068  0E48  07B4               	addwf	(1+?_printf+04h)
  9069  0E49  0021               	movlb 1	; select bank1
  9070  0E4A  0840               	movf	(_exe_instruction$6005)^080h,w
  9071  0E4B  0020               	movlb 0	; select bank0
  9072  0E4C  01B3               	clrf	(0+?_printf+04h)
  9073  0E4D  07B3               	addwf	(0+?_printf+04h)
  9074                           
  9075  0E4E  3194  24A0  318B   	fcall	_printf
  9076                           	line	595
  9077                           	
  9078  0E51                     l38707:	
  9079                           ;litterlanguage.c: 595: if (!wet_program)
  9080  0E51  0020               	movlb 0	; select bank0
  9081  0E52  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  9082  0E53  2E55               	goto	u12701
  9083  0E54  2E56               	goto	u12700
  9084  0E55                     u12701:
  9085  0E55  2E69               	goto	l38711
  9086  0E56                     u12700:
  9087                           	line	596
  9088                           	
  9089  0E56                     l38709:	
  9090                           ;litterlanguage.c: 596: ins_pointer += cur_instruction.operant + 1;
  9091  0E56  0869               	movf	0+(_cur_instruction)+01h,w
  9092  0E57  3E01               	addlw	low(01h)
  9093  0E58  00A1               	movwf	(?___wmul)
  9094  0E59  3000               	movlw	high(01h)
  9095  0E5A  3D6A               	addwfc	1+(_cur_instruction)+01h,w
  9096  0E5B  00A2               	movwf	1+(?___wmul)
  9097  0E5C  3003               	movlw	low(03h)
  9098  0E5D  00A3               	movwf	0+(?___wmul)+02h
  9099  0E5E  3000               	movlw	high(03h)
  9100  0E5F  00A4               	movwf	(0+(?___wmul)+02h)+1
  9101  0E60  31AA  229E  318B   	fcall	___wmul
  9102  0E63  0020               	movlb 0	; select bank0
  9103  0E64  0821               	movf	(0+(?___wmul)),w
  9104  0E65  07EB               	addwf	(_ins_pointer),f
  9105  0E66  0822               	movf	(1+(?___wmul)),w
  9106  0E67  3DEC               	addwfc	(_ins_pointer+1),f
  9107  0E68  2E6D               	goto	l4438
  9108                           	line	597
  9109                           	
  9110  0E69                     l4437:	
  9111                           	line	598
  9112                           	
  9113  0E69                     l38711:	
  9114                           ;litterlanguage.c: 597: else
  9115                           ;litterlanguage.c: 598: ins_pointer++;
  9116  0E69  3003               	movlw	low(03h)
  9117  0E6A  07EB               	addwf	(_ins_pointer),f
  9118  0E6B  3000               	movlw	high(03h)
  9119  0E6C  3DEC               	addwfc	(_ins_pointer+1),f
  9120                           	
  9121  0E6D                     l4438:	
  9122                           	line	599
  9123                           ;litterlanguage.c: 599: ins_state = 3;
  9124  0E6D  3003               	movlw	(03h)
  9125  0E6E  00D9               	movwf	(??_exe_instruction+0)+0
  9126  0E6F  0859               	movf	(??_exe_instruction+0)+0,w
  9127  0E70  00E5               	movwf	(_ins_state)
  9128                           	line	600
  9129                           ;litterlanguage.c: 600: break;
  9130  0E71  2FF7               	goto	l38783
  9131                           	line	601
  9132                           ;litterlanguage.c: 601: case 0x0B:
  9133                           	
  9134  0E72                     l4439:	
  9135                           	line	603
  9136                           ;litterlanguage.c: 603: printf("INS_SKIPIFWET, %u%s", cur_instruction.operant, wet_progr
                                 am?"":" (nop)");
  9137  0E72  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  9138  0E73  2E75               	goto	u12711
  9139  0E74  2E76               	goto	u12710
  9140  0E75                     u12711:
  9141  0E75  2E7C               	goto	l38715
  9142  0E76                     u12710:
  9143                           	
  9144  0E76                     l38713:	
  9145  0E76  300A               	movlw	low(STR_81|8000h)
  9146  0E77  0021               	movlb 1	; select bank1
  9147  0E78  00C2               	movwf	(_exe_instruction$6009)^080h
  9148  0E79  3089               	movlw	high(STR_81|8000h)
  9149  0E7A  00C3               	movwf	((_exe_instruction$6009)^080h)+1
  9150  0E7B  2E82               	goto	l38717
  9151                           	
  9152  0E7C                     l4441:	
  9153                           	
  9154  0E7C                     l38715:	
  9155  0E7C  30F0               	movlw	low(STR_80|8000h)
  9156  0E7D  0021               	movlb 1	; select bank1
  9157  0E7E  00C2               	movwf	(_exe_instruction$6009)^080h
  9158  0E7F  3087               	movlw	high(STR_80|8000h)
  9159  0E80  00C3               	movwf	((_exe_instruction$6009)^080h)+1
  9160  0E81  2E82               	goto	l38717
  9161                           	
  9162  0E82                     l4443:	
  9163                           	
  9164  0E82                     l38717:	
  9165  0E82  30DE               	movlw	low(STR_79|8000h)
  9166  0E83  0020               	movlb 0	; select bank0
  9167  0E84  00AF               	movwf	(?_printf)
  9168  0E85  3085               	movlw	high(STR_79|8000h)
  9169  0E86  00B0               	movwf	((?_printf))+1
  9170  0E87  086A               	movf	1+(_cur_instruction)+01h,w
  9171  0E88  01B2               	clrf	1+(?_printf)+02h
  9172  0E89  07B2               	addwf	1+(?_printf)+02h
  9173  0E8A  0869               	movf	0+(_cur_instruction)+01h,w
  9174  0E8B  01B1               	clrf	0+(?_printf)+02h
  9175  0E8C  07B1               	addwf	0+(?_printf)+02h
  9176                           
  9177  0E8D  0021               	movlb 1	; select bank1
  9178  0E8E  0843               	movf	(_exe_instruction$6009+1)^080h,w
  9179  0E8F  0020               	movlb 0	; select bank0
  9180  0E90  01B4               	clrf	(1+?_printf+04h)
  9181  0E91  07B4               	addwf	(1+?_printf+04h)
  9182  0E92  0021               	movlb 1	; select bank1
  9183  0E93  0842               	movf	(_exe_instruction$6009)^080h,w
  9184  0E94  0020               	movlb 0	; select bank0
  9185  0E95  01B3               	clrf	(0+?_printf+04h)
  9186  0E96  07B3               	addwf	(0+?_printf+04h)
  9187                           
  9188  0E97  3194  24A0  318B   	fcall	_printf
  9189                           	line	605
  9190                           	
  9191  0E9A                     l38719:	
  9192                           ;litterlanguage.c: 605: if (wet_program)
  9193  0E9A  0020               	movlb 0	; select bank0
  9194  0E9B  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  9195  0E9C  2E9E               	goto	u12721
  9196  0E9D  2E9F               	goto	u12720
  9197  0E9E                     u12721:
  9198  0E9E  2EB2               	goto	l38723
  9199  0E9F                     u12720:
  9200                           	line	606
  9201                           	
  9202  0E9F                     l38721:	
  9203                           ;litterlanguage.c: 606: ins_pointer += cur_instruction.operant + 1;
  9204  0E9F  0869               	movf	0+(_cur_instruction)+01h,w
  9205  0EA0  3E01               	addlw	low(01h)
  9206  0EA1  00A1               	movwf	(?___wmul)
  9207  0EA2  3000               	movlw	high(01h)
  9208  0EA3  3D6A               	addwfc	1+(_cur_instruction)+01h,w
  9209  0EA4  00A2               	movwf	1+(?___wmul)
  9210  0EA5  3003               	movlw	low(03h)
  9211  0EA6  00A3               	movwf	0+(?___wmul)+02h
  9212  0EA7  3000               	movlw	high(03h)
  9213  0EA8  00A4               	movwf	(0+(?___wmul)+02h)+1
  9214  0EA9  31AA  229E  318B   	fcall	___wmul
  9215  0EAC  0020               	movlb 0	; select bank0
  9216  0EAD  0821               	movf	(0+(?___wmul)),w
  9217  0EAE  07EB               	addwf	(_ins_pointer),f
  9218  0EAF  0822               	movf	(1+(?___wmul)),w
  9219  0EB0  3DEC               	addwfc	(_ins_pointer+1),f
  9220  0EB1  2EB6               	goto	l4445
  9221                           	line	607
  9222                           	
  9223  0EB2                     l4444:	
  9224                           	line	608
  9225                           	
  9226  0EB2                     l38723:	
  9227                           ;litterlanguage.c: 607: else
  9228                           ;litterlanguage.c: 608: ins_pointer++;
  9229  0EB2  3003               	movlw	low(03h)
  9230  0EB3  07EB               	addwf	(_ins_pointer),f
  9231  0EB4  3000               	movlw	high(03h)
  9232  0EB5  3DEC               	addwfc	(_ins_pointer+1),f
  9233                           	
  9234  0EB6                     l4445:	
  9235                           	line	609
  9236                           ;litterlanguage.c: 609: ins_state = 3;
  9237  0EB6  3003               	movlw	(03h)
  9238  0EB7  00D9               	movwf	(??_exe_instruction+0)+0
  9239  0EB8  0859               	movf	(??_exe_instruction+0)+0,w
  9240  0EB9  00E5               	movwf	(_ins_state)
  9241                           	line	610
  9242                           ;litterlanguage.c: 610: break;
  9243  0EBA  2FF7               	goto	l38783
  9244                           	line	611
  9245                           ;litterlanguage.c: 611: case 0x06:
  9246                           	
  9247  0EBB                     l4446:	
  9248                           	line	613
  9249                           ;litterlanguage.c: 613: printf("INS_AUTODOSE, %u.%uml%s", cur_instruction.operant/10, cu
                                 r_instruction.operant%10, wet_program?"":" (nop)");
  9250  0EBB  1AED               	btfsc	(_wet_program/8),(_wet_program)&7
  9251  0EBC  2EBE               	goto	u12731
  9252  0EBD  2EBF               	goto	u12730
  9253  0EBE                     u12731:
  9254  0EBE  2EC5               	goto	l38727
  9255  0EBF                     u12730:
  9256                           	
  9257  0EBF                     l38725:	
  9258  0EBF  300A               	movlw	low(STR_84|8000h)
  9259  0EC0  0021               	movlb 1	; select bank1
  9260  0EC1  00C4               	movwf	(_exe_instruction$6013)^080h
  9261  0EC2  3089               	movlw	high(STR_84|8000h)
  9262  0EC3  00C5               	movwf	((_exe_instruction$6013)^080h)+1
  9263  0EC4  2ECB               	goto	l38729
  9264                           	
  9265  0EC5                     l4448:	
  9266                           	
  9267  0EC5                     l38727:	
  9268  0EC5  30F0               	movlw	low(STR_83|8000h)
  9269  0EC6  0021               	movlb 1	; select bank1
  9270  0EC7  00C4               	movwf	(_exe_instruction$6013)^080h
  9271  0EC8  3087               	movlw	high(STR_83|8000h)
  9272  0EC9  00C5               	movwf	((_exe_instruction$6013)^080h)+1
  9273  0ECA  2ECB               	goto	l38729
  9274                           	
  9275  0ECB                     l4450:	
  9276                           	
  9277  0ECB                     l38729:	
  9278  0ECB  300A               	movlw	low(0Ah)
  9279  0ECC  0020               	movlb 0	; select bank0
  9280  0ECD  00A1               	movwf	(?___lwdiv)
  9281  0ECE  3000               	movlw	high(0Ah)
  9282  0ECF  00A2               	movwf	((?___lwdiv))+1
  9283  0ED0  086A               	movf	1+(_cur_instruction)+01h,w
  9284  0ED1  01A4               	clrf	1+(?___lwdiv)+02h
  9285  0ED2  07A4               	addwf	1+(?___lwdiv)+02h
  9286  0ED3  0869               	movf	0+(_cur_instruction)+01h,w
  9287  0ED4  01A3               	clrf	0+(?___lwdiv)+02h
  9288  0ED5  07A3               	addwf	0+(?___lwdiv)+02h
  9289                           
  9290  0ED6  3189  2145  318B   	fcall	___lwdiv
  9291  0ED9  0020               	movlb 0	; select bank0
  9292  0EDA  0822               	movf	(1+(?___lwdiv)),w
  9293  0EDB  0021               	movlb 1	; select bank1
  9294  0EDC  01A1               	clrf	(_exe_instruction$30243+1)^080h
  9295  0EDD  07A1               	addwf	(_exe_instruction$30243+1)^080h
  9296  0EDE  0020               	movlb 0	; select bank0
  9297  0EDF  0821               	movf	(0+(?___lwdiv)),w
  9298  0EE0  0021               	movlb 1	; select bank1
  9299  0EE1  01A0               	clrf	(_exe_instruction$30243)^080h
  9300  0EE2  07A0               	addwf	(_exe_instruction$30243)^080h
  9301                           
  9302                           	
  9303  0EE3                     l38731:	
  9304  0EE3  300A               	movlw	low(0Ah)
  9305  0EE4  0020               	movlb 0	; select bank0
  9306  0EE5  00A9               	movwf	(?___lwmod)
  9307  0EE6  3000               	movlw	high(0Ah)
  9308  0EE7  00AA               	movwf	((?___lwmod))+1
  9309  0EE8  086A               	movf	1+(_cur_instruction)+01h,w
  9310  0EE9  01AC               	clrf	1+(?___lwmod)+02h
  9311  0EEA  07AC               	addwf	1+(?___lwmod)+02h
  9312  0EEB  0869               	movf	0+(_cur_instruction)+01h,w
  9313  0EEC  01AB               	clrf	0+(?___lwmod)+02h
  9314  0EED  07AB               	addwf	0+(?___lwmod)+02h
  9315                           
  9316  0EEE  31AC  24D8  318B   	fcall	___lwmod
  9317  0EF1  0020               	movlb 0	; select bank0
  9318  0EF2  082A               	movf	(1+(?___lwmod)),w
  9319  0EF3  0021               	movlb 1	; select bank1
  9320  0EF4  01A3               	clrf	(_exe_instruction$30244+1)^080h
  9321  0EF5  07A3               	addwf	(_exe_instruction$30244+1)^080h
  9322  0EF6  0020               	movlb 0	; select bank0
  9323  0EF7  0829               	movf	(0+(?___lwmod)),w
  9324  0EF8  0021               	movlb 1	; select bank1
  9325  0EF9  01A2               	clrf	(_exe_instruction$30244)^080h
  9326  0EFA  07A2               	addwf	(_exe_instruction$30244)^080h
  9327                           
  9328                           	
  9329  0EFB                     l38733:	
  9330  0EFB  3034               	movlw	low(STR_82|8000h)
  9331  0EFC  0020               	movlb 0	; select bank0
  9332  0EFD  00AF               	movwf	(?_printf)
  9333  0EFE  3085               	movlw	high(STR_82|8000h)
  9334  0EFF  00B0               	movwf	((?_printf))+1
  9335  0F00  0021               	movlb 1	; select bank1
  9336  0F01  0821               	movf	(_exe_instruction$30243+1)^080h,w
  9337  0F02  0020               	movlb 0	; select bank0
  9338  0F03  01B2               	clrf	1+(?_printf)+02h
  9339  0F04  07B2               	addwf	1+(?_printf)+02h
  9340  0F05  0021               	movlb 1	; select bank1
  9341  0F06  0820               	movf	(_exe_instruction$30243)^080h,w
  9342  0F07  0020               	movlb 0	; select bank0
  9343  0F08  01B1               	clrf	0+(?_printf)+02h
  9344  0F09  07B1               	addwf	0+(?_printf)+02h
  9345                           
  9346  0F0A  0021               	movlb 1	; select bank1
  9347  0F0B  0823               	movf	(_exe_instruction$30244+1)^080h,w
  9348  0F0C  0020               	movlb 0	; select bank0
  9349  0F0D  01B4               	clrf	1+(?_printf)+04h
  9350  0F0E  07B4               	addwf	1+(?_printf)+04h
  9351  0F0F  0021               	movlb 1	; select bank1
  9352  0F10  0822               	movf	(_exe_instruction$30244)^080h,w
  9353  0F11  0020               	movlb 0	; select bank0
  9354  0F12  01B3               	clrf	0+(?_printf)+04h
  9355  0F13  07B3               	addwf	0+(?_printf)+04h
  9356                           
  9357  0F14  0021               	movlb 1	; select bank1
  9358  0F15  0845               	movf	(_exe_instruction$6013+1)^080h,w
  9359  0F16  0020               	movlb 0	; select bank0
  9360  0F17  01B6               	clrf	(1+?_printf+06h)
  9361  0F18  07B6               	addwf	(1+?_printf+06h)
  9362  0F19  0021               	movlb 1	; select bank1
  9363  0F1A  0844               	movf	(_exe_instruction$6013)^080h,w
  9364  0F1B  0020               	movlb 0	; select bank0
  9365  0F1C  01B5               	clrf	(0+?_printf+06h)
  9366  0F1D  07B5               	addwf	(0+?_printf+06h)
  9367                           
  9368  0F1E  3194  24A0  318B   	fcall	_printf
  9369                           	line	615
  9370                           	
  9371  0F21                     l38735:	
  9372                           ;litterlanguage.c: 615: if (wet_program) {
  9373  0F21  0020               	movlb 0	; select bank0
  9374  0F22  1EED               	btfss	(_wet_program/8),(_wet_program)&7
  9375  0F23  2F25               	goto	u12741
  9376  0F24  2F26               	goto	u12740
  9377  0F25                     u12741:
  9378  0F25  2F4C               	goto	l38741
  9379  0F26                     u12740:
  9380                           	line	617
  9381                           	
  9382  0F26                     l38737:	
  9383                           ;litterlanguage.c: 616: settimeout(&timer_autodose,
  9384                           ;litterlanguage.c: 617: (unsigned long)cur_instruction.operant * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8) * (10 / 10));
  9385  0F26  3064               	movlw	(_timer_autodose&0ffh)
  9386  0F27  00AD               	movwf	(?_settimeout)
  9387  0F28  3001               	movlw	0x2/2
  9388  0F29  00AE               	movwf	(?_settimeout+1)
  9389  0F2A  0869               	movf	0+(_cur_instruction)+01h,w
  9390  0F2B  00A1               	movwf	(?___lmul)
  9391  0F2C  086A               	movf	1+(_cur_instruction)+01h,w
  9392  0F2D  00A2               	movwf	((?___lmul))+1
  9393  0F2E  01A3               	clrf	2+((?___lmul))
  9394  0F2F  01A4               	clrf	3+((?___lmul))
  9395  0F30  3000               	movlw	0
  9396  0F31  00A8               	movwf	3+(?___lmul)+04h
  9397  0F32  3001               	movlw	01h
  9398  0F33  00A7               	movwf	2+(?___lmul)+04h
  9399  0F34  30E8               	movlw	0E8h
  9400  0F35  00A6               	movwf	1+(?___lmul)+04h
  9401  0F36  3048               	movlw	048h
  9402  0F37  00A5               	movwf	0+(?___lmul)+04h
  9403                           
  9404  0F38  31AC  242C  318B   	fcall	___lmul
  9405  0F3B  0020               	movlb 0	; select bank0
  9406  0F3C  0824               	movf	(3+(?___lmul)),w
  9407  0F3D  00B2               	movwf	3+(?_settimeout)+02h
  9408  0F3E  0823               	movf	(2+(?___lmul)),w
  9409  0F3F  00B1               	movwf	2+(?_settimeout)+02h
  9410  0F40  0822               	movf	(1+(?___lmul)),w
  9411  0F41  00B0               	movwf	1+(?_settimeout)+02h
  9412  0F42  0821               	movf	(0+(?___lmul)),w
  9413  0F43  00AF               	movwf	0+(?_settimeout)+02h
  9414                           
  9415  0F44  31A0  20CF  318B   	fcall	_settimeout
  9416                           	line	618
  9417                           	
  9418  0F47                     l38739:	
  9419                           ;litterlanguage.c: 618: set_Dosage(1);
  9420  0F47  3001               	movlw	(01h)
  9421  0F48  31B7  27DE  318B   	fcall	_set_Dosage
  9422  0F4B  2F4C               	goto	l38741
  9423                           	line	619
  9424                           	
  9425  0F4C                     l4451:	
  9426                           	line	620
  9427                           	
  9428  0F4C                     l38741:	
  9429                           ;litterlanguage.c: 619: }
  9430                           ;litterlanguage.c: 620: ins_pointer++;
  9431  0F4C  3003               	movlw	low(03h)
  9432  0F4D  0020               	movlb 0	; select bank0
  9433  0F4E  07EB               	addwf	(_ins_pointer),f
  9434  0F4F  3000               	movlw	high(03h)
  9435  0F50  3DEC               	addwfc	(_ins_pointer+1),f
  9436                           	line	621
  9437                           	
  9438  0F51                     l38743:	
  9439                           ;litterlanguage.c: 621: ins_state = 3;
  9440  0F51  3003               	movlw	(03h)
  9441  0F52  00D9               	movwf	(??_exe_instruction+0)+0
  9442  0F53  0859               	movf	(??_exe_instruction+0)+0,w
  9443  0F54  00E5               	movwf	(_ins_state)
  9444                           	line	622
  9445                           ;litterlanguage.c: 622: break;
  9446  0F55  2FF7               	goto	l38783
  9447                           	line	623
  9448                           ;litterlanguage.c: 623: case 0x0C:
  9449                           	
  9450  0F56                     l4452:	
  9451                           	line	625
  9452                           	
  9453  0F56                     l38745:	
  9454                           ;litterlanguage.c: 625: printf("INS_CALL, 0x%04X", cur_instruction.operant);
  9455  0F56  3016               	movlw	low(STR_85|8000h)
  9456  0F57  00AF               	movwf	(?_printf)
  9457  0F58  3087               	movlw	high(STR_85|8000h)
  9458  0F59  00B0               	movwf	((?_printf))+1
  9459  0F5A  086A               	movf	1+(_cur_instruction)+01h,w
  9460  0F5B  01B2               	clrf	1+(?_printf)+02h
  9461  0F5C  07B2               	addwf	1+(?_printf)+02h
  9462  0F5D  0869               	movf	0+(_cur_instruction)+01h,w
  9463  0F5E  01B1               	clrf	0+(?_printf)+02h
  9464  0F5F  07B1               	addwf	0+(?_printf)+02h
  9465                           
  9466  0F60  3194  24A0  318B   	fcall	_printf
  9467                           	line	627
  9468                           	
  9469  0F63                     l38747:	
  9470                           ;litterlanguage.c: 627: ret_address = ins_pointer + 1;
  9471  0F63  0020               	movlb 0	; select bank0
  9472  0F64  086B               	movf	(_ins_pointer),w
  9473  0F65  3E03               	addlw	low(03h)
  9474  0F66  0021               	movlb 1	; select bank1
  9475  0F67  00D0               	movwf	(exe_instruction@ret_address)^080h
  9476  0F68  3000               	movlw	high(03h)
  9477  0F69  0020               	movlb 0	; select bank0
  9478  0F6A  3D6C               	addwfc	(_ins_pointer+1),w
  9479  0F6B  0021               	movlb 1	; select bank1
  9480  0F6C  00D1               	movwf	1+(exe_instruction@ret_address)^080h
  9481                           	line	629
  9482                           	
  9483  0F6D                     l38749:	
  9484                           ;litterlanguage.c: 629: temp = 0x8000 | cur_instruction.operant;
  9485  0F6D  3000               	movlw	low(08000h)
  9486  0F6E  0020               	movlb 0	; select bank0
  9487  0F6F  0469               	iorwf	0+(_cur_instruction)+01h,w
  9488  0F70  0021               	movlb 1	; select bank1
  9489  0F71  00A4               	movwf	(exe_instruction@temp)^080h
  9490  0F72  3080               	movlw	high(08000h)
  9491  0F73  0020               	movlb 0	; select bank0
  9492  0F74  046A               	iorwf	1+(_cur_instruction)+01h,w
  9493  0F75  0021               	movlb 1	; select bank1
  9494  0F76  00A5               	movwf	1+(exe_instruction@temp)^080h
  9495                           	line	631
  9496                           	
  9497  0F77                     l38751:	
  9498                           ;litterlanguage.c: 631: memcpy(&ins_pointer, &temp, sizeof(ins_pointer));
  9499  0F77  30A4               	movlw	(exe_instruction@temp)&0ffh
  9500  0F78  0020               	movlb 0	; select bank0
  9501  0F79  00D9               	movwf	(??_exe_instruction+0)+0
  9502  0F7A  0859               	movf	(??_exe_instruction+0)+0,w
  9503  0F7B  00A1               	movwf	(?_memcpy)
  9504  0F7C  3002               	movlw	low(02h)
  9505  0F7D  00A2               	movwf	0+(?_memcpy)+01h
  9506  0F7E  3000               	movlw	high(02h)
  9507  0F7F  00A3               	movwf	(0+(?_memcpy)+01h)+1
  9508  0F80  306B               	movlw	(_ins_pointer)&0ffh
  9509  0F81  31AB  236A  318B   	fcall	_memcpy
  9510                           	line	632
  9511                           	
  9512  0F84                     l38753:	
  9513                           ;litterlanguage.c: 632: ins_state = 3;
  9514  0F84  3003               	movlw	(03h)
  9515  0F85  0020               	movlb 0	; select bank0
  9516  0F86  00D9               	movwf	(??_exe_instruction+0)+0
  9517  0F87  0859               	movf	(??_exe_instruction+0)+0,w
  9518  0F88  00E5               	movwf	(_ins_state)
  9519                           	line	633
  9520                           ;litterlanguage.c: 633: break;
  9521  0F89  2FF7               	goto	l38783
  9522                           	line	634
  9523                           ;litterlanguage.c: 634: case 0x0D:
  9524                           	
  9525  0F8A                     l4453:	
  9526                           	line	636
  9527                           	
  9528  0F8A                     l38755:	
  9529                           ;litterlanguage.c: 636: printf("INS_RETURN, 0x%04X", ret_address);
  9530  0F8A  301A               	movlw	low(STR_86|8000h)
  9531  0F8B  00AF               	movwf	(?_printf)
  9532  0F8C  3086               	movlw	high(STR_86|8000h)
  9533  0F8D  00B0               	movwf	((?_printf))+1
  9534  0F8E  0021               	movlb 1	; select bank1
  9535  0F8F  0851               	movf	(exe_instruction@ret_address+1)^080h,w
  9536  0F90  0020               	movlb 0	; select bank0
  9537  0F91  01B2               	clrf	(1+?_printf+02h)
  9538  0F92  07B2               	addwf	(1+?_printf+02h)
  9539  0F93  0021               	movlb 1	; select bank1
  9540  0F94  0850               	movf	(exe_instruction@ret_address)^080h,w
  9541  0F95  0020               	movlb 0	; select bank0
  9542  0F96  01B1               	clrf	(0+?_printf+02h)
  9543  0F97  07B1               	addwf	(0+?_printf+02h)
  9544                           
  9545  0F98  3194  24A0  318B   	fcall	_printf
  9546                           	line	638
  9547                           	
  9548  0F9B                     l38757:	
  9549                           ;litterlanguage.c: 638: ins_pointer = ret_address;
  9550  0F9B  0021               	movlb 1	; select bank1
  9551  0F9C  0851               	movf	(exe_instruction@ret_address+1)^080h,w
  9552  0F9D  0020               	movlb 0	; select bank0
  9553  0F9E  01EC               	clrf	(_ins_pointer+1)
  9554  0F9F  07EC               	addwf	(_ins_pointer+1)
  9555  0FA0  0021               	movlb 1	; select bank1
  9556  0FA1  0850               	movf	(exe_instruction@ret_address)^080h,w
  9557  0FA2  0020               	movlb 0	; select bank0
  9558  0FA3  01EB               	clrf	(_ins_pointer)
  9559  0FA4  07EB               	addwf	(_ins_pointer)
  9560                           
  9561                           	line	639
  9562                           	
  9563  0FA5                     l38759:	
  9564                           ;litterlanguage.c: 639: ins_state = 3;
  9565  0FA5  3003               	movlw	(03h)
  9566  0FA6  00D9               	movwf	(??_exe_instruction+0)+0
  9567  0FA7  0859               	movf	(??_exe_instruction+0)+0,w
  9568  0FA8  00E5               	movwf	(_ins_state)
  9569                           	line	640
  9570                           ;litterlanguage.c: 640: break;
  9571  0FA9  2FF7               	goto	l38783
  9572                           	line	641
  9573                           ;litterlanguage.c: 641: case 0x0E:
  9574                           	
  9575  0FAA                     l4454:	
  9576                           	line	643
  9577                           	
  9578  0FAA                     l38761:	
  9579                           ;litterlanguage.c: 643: printf("INS_END");
  9580  0FAA  30EC               	movlw	low(STR_87|8000h)
  9581  0FAB  00AF               	movwf	(?_printf)
  9582  0FAC  3088               	movlw	high(STR_87|8000h)
  9583  0FAD  00B0               	movwf	((?_printf))+1
  9584  0FAE  3194  24A0  318B   	fcall	_printf
  9585                           	line	645
  9586                           	
  9587  0FB1                     l38763:	
  9588                           ;litterlanguage.c: 645: eeprom_write((3), 0);
  9589  0FB1  0020               	movlb 0	; select bank0
  9590  0FB2  01A1               	clrf	(?_eeprom_write)
  9591  0FB3  3003               	movlw	(03h)
  9592  0FB4  31AB  23F5  318B   	fcall	_eeprom_write
  9593                           	line	646
  9594                           	
  9595  0FB7                     l38765:	
  9596                           ;litterlanguage.c: 646: litterlanguage_stop();
  9597  0FB7  31A1  219D  318B   	fcall	_litterlanguage_stop
  9598                           	line	647
  9599                           ;litterlanguage.c: 647: break;
  9600  0FBA  2FF7               	goto	l38783
  9601                           	line	648
  9602                           ;litterlanguage.c: 648: case 0x00:
  9603                           	
  9604  0FBB                     l4455:	
  9605                           	line	650
  9606                           	
  9607  0FBB                     l38767:	
  9608                           ;litterlanguage.c: 650: printf("INS_START, unexpected");
  9609  0FBB  3062               	movlw	low(STR_88|8000h)
  9610  0FBC  0020               	movlb 0	; select bank0
  9611  0FBD  00AF               	movwf	(?_printf)
  9612  0FBE  3085               	movlw	high(STR_88|8000h)
  9613  0FBF  00B0               	movwf	((?_printf))+1
  9614  0FC0  3194  24A0  318B   	fcall	_printf
  9615                           	line	652
  9616                           	
  9617  0FC3                     l38769:	
  9618                           ;litterlanguage.c: 652: error_execution = 1;
  9619  0FC3  16F0               	bsf	(_error_execution/8),(_error_execution)&7
  9620                           	line	653
  9621                           	
  9622  0FC4                     l38771:	
  9623                           ;litterlanguage.c: 653: litterlanguage_event(4, error_execution);
  9624  0FC4  3000               	movlw	0
  9625  0FC5  1AF0               	btfsc	(_error_execution/8),(_error_execution)&7
  9626  0FC6  3001               	movlw	1
  9627  0FC7  0020               	movlb 0	; select bank0
  9628  0FC8  00D9               	movwf	(??_exe_instruction+0)+0
  9629  0FC9  0859               	movf	(??_exe_instruction+0)+0,w
  9630  0FCA  00D7               	movwf	(?_litterlanguage_event)
  9631  0FCB  3004               	movlw	(04h)
  9632  0FCC  31A2  2206  318B   	fcall	_litterlanguage_event
  9633                           	line	654
  9634                           ;litterlanguage.c: 654: break;
  9635  0FCF  2FF7               	goto	l38783
  9636                           	line	655
  9637                           ;litterlanguage.c: 655: default:
  9638                           	
  9639  0FD0                     l4456:	
  9640                           	line	658
  9641                           	
  9642  0FD0                     l38773:	
  9643                           ;litterlanguage.c: 658: printf("INS_unknown: 0x%X", cur_instruction.operant);
  9644  0FD0  30AF               	movlw	low(STR_89|8000h)
  9645  0FD1  0020               	movlb 0	; select bank0
  9646  0FD2  00AF               	movwf	(?_printf)
  9647  0FD3  3086               	movlw	high(STR_89|8000h)
  9648  0FD4  00B0               	movwf	((?_printf))+1
  9649  0FD5  086A               	movf	1+(_cur_instruction)+01h,w
  9650  0FD6  01B2               	clrf	1+(?_printf)+02h
  9651  0FD7  07B2               	addwf	1+(?_printf)+02h
  9652  0FD8  0869               	movf	0+(_cur_instruction)+01h,w
  9653  0FD9  01B1               	clrf	0+(?_printf)+02h
  9654  0FDA  07B1               	addwf	0+(?_printf)+02h
  9655                           
  9656  0FDB  3194  24A0  318B   	fcall	_printf
  9657                           	line	660
  9658                           	
  9659  0FDE                     l38775:	
  9660                           ;litterlanguage.c: 660: error_execution = 1;
  9661  0FDE  16F0               	bsf	(_error_execution/8),(_error_execution)&7
  9662                           	line	661
  9663                           	
  9664  0FDF                     l38777:	
  9665                           ;litterlanguage.c: 661: litterlanguage_event(4, error_execution);
  9666  0FDF  3000               	movlw	0
  9667  0FE0  1AF0               	btfsc	(_error_execution/8),(_error_execution)&7
  9668  0FE1  3001               	movlw	1
  9669  0FE2  0020               	movlb 0	; select bank0
  9670  0FE3  00D9               	movwf	(??_exe_instruction+0)+0
  9671  0FE4  0859               	movf	(??_exe_instruction+0)+0,w
  9672  0FE5  00D7               	movwf	(?_litterlanguage_event)
  9673  0FE6  3004               	movlw	(04h)
  9674  0FE7  31A2  2206  318B   	fcall	_litterlanguage_event
  9675                           	line	662
  9676                           ;litterlanguage.c: 662: break;
  9677  0FEA  2FF7               	goto	l38783
  9678                           	line	663
  9679                           	
  9680  0FEB                     l38779:	
  9681                           ;litterlanguage.c: 663: }
  9682  0FEB  2FF7               	goto	l38783
  9683                           	line	486
  9684                           	
  9685  0FEC                     l4356:	
  9686                           	
  9687  0FEC                     l38781:	
  9688  0FEC  0020               	movlb 0	; select bank0
  9689  0FED  0868               	movf	(_cur_instruction),w
  9690                           	; Switch size 1, requested type "space"
  9691                           ; Number of cases is 15, Range of values is 0 to 14
  9692                           ; switch strategies available:
  9693                           ; Name         Instructions Cycles
  9694                           ; direct_byte           36     6 (fixed)
  9695                           ; simple_byte           46    24 (average)
  9696                           ; jumptable            260     6 (fixed)
  9697                           ; rangetable            19     4 (fixed)
  9698                           ; spacedrange           35     6 (fixed)
  9699                           ; locatedrange          15     3 (fixed)
  9700                           ;	Chosen strategy is direct_byte
  9701                           
  9702  0FEE  0084               	movwf fsr0l
  9703  0FEF  300F               	movlw	15
  9704  0FF0  0204               	subwf	fsr0l,w
  9705  0FF1  1803               skipnc
  9706  0FF2  2FD0               goto l38773
  9707  0FF3  31A8               movlp high(S39233)
  9708  0FF4  3504               	lslf fsr0l,w
  9709  0FF5  3E00               	addlw low(S39233)
  9710  0FF6  0082               	movwf pc
  9711                           psect	swtext2,local,class=CONST,delta=2
  9712                           global __pswtext2
  9713  2800                     __pswtext2:
  9714  2800                     S39233:
  9715  2800  318F  2FBB         	ljmp	l38767
  9716  2802  318B  2B4F         	ljmp	l38539
  9717  2804  318B  2BA1         	ljmp	l38559
  9718  2806  318B  2BF3         	ljmp	l4376
  9719  2808  318C  2C9D         	ljmp	l4391
  9720  280A  318D  2D01         	ljmp	l4402
  9721  280C  318E  2EBB         	ljmp	l4446
  9722  280E  318D  2D54         	ljmp	l38661
  9723  2810  318D  2D89         	ljmp	l4413
  9724  2812  318D  2DF3         	ljmp	l4425
  9725  2814  318E  2E29         	ljmp	l4432
  9726  2816  318E  2E72         	ljmp	l4439
  9727  2818  318F  2F56         	ljmp	l38745
  9728  281A  318F  2F8A         	ljmp	l38755
  9729  281C  318F  2FAA         	ljmp	l38761
  9730                           psect	text3311
  9731                           
  9732                           	line	663
  9733                           	
  9734  0FF7                     l4366:	
  9735                           	line	665
  9736                           	
  9737  0FF7                     l38783:	
  9738                           ;litterlanguage.c: 665: printf("\n");
  9739  0FF7  30EF               	movlw	low(STR_90|8000h)
  9740  0FF8  0020               	movlb 0	; select bank0
  9741  0FF9  00AF               	movwf	(?_printf)
  9742  0FFA  3087               	movlw	high(STR_90|8000h)
  9743  0FFB  00B0               	movwf	((?_printf))+1
  9744  0FFC  3194  24A0  318B   	fcall	_printf
  9745                           	line	667
  9746                           	
  9747  0FFF                     l4457:	
  9748  0FFF  0008               	return
  9749                           	opt stack 0
  9750                           GLOBAL	__end_of_exe_instruction
  9751  1000                     	__end_of_exe_instruction:
  9752 ;; =============== function _exe_instruction ends ============
  9753                           
  9754                           	signat	_exe_instruction,88
  9755                           	global	_litterlanguage_event
  9756                           psect	text3312,local,class=CODE,delta=2
  9757                           global __ptext3312
  9758  2206                     __ptext3312:
  9759                           
  9760 ;; *************** function _litterlanguage_event *****************
  9761 ;; Defined at:
  9762 ;;		line 341 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  event           1    wreg     unsigned char 
  9765 ;;  argument        1   54[BANK0 ] unsigned char 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  event           1   55[BANK0 ] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;		None               void
  9770 ;; Registers used:
  9771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9777 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9780 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    6
  9784 ;; This function calls:
  9785 ;;		_litterlanguage_stop
  9786 ;;		_litterlanguage_pause
  9787 ;;		_set_Beeper
  9788 ;; This function is called by:
  9789 ;;		_litterlanguage_work
  9790 ;;		_litterlanguage_pause
  9791 ;;		_litterlanguage_stop
  9792 ;;		_waterdetection_event
  9793 ;;		_heatsensor_event
  9794 ;;		_exe_instruction
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           psect	text3312
  9798                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
  9799                           	line	341
  9800                           	global	__size_of_litterlanguage_event
  9801  0069                     	__size_of_litterlanguage_event	equ	__end_of_litterlanguage_event-_litterlanguage_event
  9802                           	
  9803  2206                     _litterlanguage_event:	
  9804                           	opt	stack 7
  9805                           ; Regs used in _litterlanguage_event: [allreg]
  9806                           ;litterlanguage_event@event stored from wreg
  9807                           	line	344
  9808  2206  0020               	movlb 0	; select bank0
  9809  2207  00D8               	movwf	(litterlanguage_event@event)
  9810                           	
  9811  2208                     l38501:	
  9812                           ;userinterface.c: 343: if ((event == 4) &&
  9813                           ;userinterface.c: 344: (argument)) {
  9814  2208  0858               	movf	(litterlanguage_event@event),w
  9815  2209  3A04               	xorlw	04h&0ffh
  9816  220A  1D03               	skipz
  9817  220B  2A0D               	goto	u12381
  9818  220C  2A0E               	goto	u12380
  9819  220D                     u12381:
  9820  220D  2A16               	goto	l38507
  9821  220E                     u12380:
  9822                           	
  9823  220E                     l38503:	
  9824  220E  0857               	movf	(litterlanguage_event@argument),w
  9825  220F  1D03               	skipz
  9826  2210  2A12               	goto	u12390
  9827  2211  2A16               	goto	l38507
  9828  2212                     u12390:
  9829                           	line	345
  9830                           	
  9831  2212                     l38505:	
  9832                           ;userinterface.c: 345: litterlanguage_stop();
  9833  2212  31A1  219D  31A2   	fcall	_litterlanguage_stop
  9834  2215  2A16               	goto	l38507
  9835                           	line	346
  9836                           	
  9837  2216                     l8705:	
  9838                           	line	351
  9839                           	
  9840  2216                     l38507:	
  9841                           ;userinterface.c: 346: }
  9842                           ;userinterface.c: 348: if (((event == 1) ||
  9843                           ;userinterface.c: 349: (event == 2) ||
  9844                           ;userinterface.c: 350: (event == 3)) &&
  9845                           ;userinterface.c: 351: (argument)) {
  9846  2216  0020               	movlb 0	; select bank0
  9847  2217  0858               	movf	(litterlanguage_event@event),w
  9848  2218  3A01               	xorlw	01h&0ffh
  9849  2219  1903               	skipnz
  9850  221A  2A1C               	goto	u12401
  9851  221B  2A1D               	goto	u12400
  9852  221C                     u12401:
  9853  221C  2A2A               	goto	l38513
  9854  221D                     u12400:
  9855                           	
  9856  221D                     l38509:	
  9857  221D  0858               	movf	(litterlanguage_event@event),w
  9858  221E  3A02               	xorlw	02h&0ffh
  9859  221F  1903               	skipnz
  9860  2220  2A22               	goto	u12411
  9861  2221  2A23               	goto	u12410
  9862  2222                     u12411:
  9863  2222  2A2A               	goto	l38513
  9864  2223                     u12410:
  9865                           	
  9866  2223                     l38511:	
  9867  2223  0858               	movf	(litterlanguage_event@event),w
  9868  2224  3A03               	xorlw	03h&0ffh
  9869  2225  1D03               	skipz
  9870  2226  2A28               	goto	u12421
  9871  2227  2A29               	goto	u12420
  9872  2228                     u12421:
  9873  2228  2A63               	goto	l38531
  9874  2229                     u12420:
  9875  2229  2A2A               	goto	l38513
  9876                           	
  9877  222A                     l8708:	
  9878                           	
  9879  222A                     l38513:	
  9880  222A  0857               	movf	(litterlanguage_event@argument),w
  9881  222B  1D03               	skipz
  9882  222C  2A2E               	goto	u12430
  9883  222D  2A63               	goto	l38531
  9884  222E                     u12430:
  9885                           	line	352
  9886                           	
  9887  222E                     l38515:	
  9888                           ;userinterface.c: 352: litterlanguage_pause(1);
  9889  222E  3001               	movlw	(01h)
  9890  222F  3192  2256  31A2   	fcall	_litterlanguage_pause
  9891  2232  2A63               	goto	l38531
  9892                           	line	353
  9893                           	
  9894  2233                     l8706:	
  9895                           	line	356
  9896                           ;userinterface.c: 353: }
  9897                           ;userinterface.c: 356: switch (event) {
  9898  2233  2A63               	goto	l38531
  9899                           	line	357
  9900                           ;userinterface.c: 357: case 0:
  9901                           	
  9902  2234                     l8710:	
  9903                           	line	358
  9904                           ;userinterface.c: 358: break;
  9905  2234  2A6E               	goto	l8721
  9906                           	line	359
  9907                           ;userinterface.c: 359: case 1:
  9908                           	
  9909  2235                     l8712:	
  9910                           	line	360
  9911                           	
  9912  2235                     l38517:	
  9913                           ;userinterface.c: 360: if (argument)
  9914  2235  0020               	movlb 0	; select bank0
  9915  2236  0857               	movf	(litterlanguage_event@argument),w
  9916  2237  1D03               	skipz
  9917  2238  2A3A               	goto	u12440
  9918  2239  2A6E               	goto	l8721
  9919  223A                     u12440:
  9920                           	line	361
  9921                           	
  9922  223A                     l38519:	
  9923                           ;userinterface.c: 361: set_Beeper(0x01, 1);
  9924  223A  01AE               	clrf	(?_set_Beeper)
  9925  223B  1403               	bsf	status,0
  9926  223C  0DAE               	rlf	(?_set_Beeper),f
  9927  223D  3001               	movlw	(01h)
  9928  223E  31B7  2783  31A2   	fcall	_set_Beeper
  9929  2241  2A6E               	goto	l8721
  9930                           	
  9931  2242                     l8713:	
  9932                           	line	362
  9933                           ;userinterface.c: 362: break;
  9934  2242  2A6E               	goto	l8721
  9935                           	line	363
  9936                           ;userinterface.c: 363: case 2:
  9937                           	
  9938  2243                     l8714:	
  9939                           	line	364
  9940                           	
  9941  2243                     l38521:	
  9942                           ;userinterface.c: 364: if (argument)
  9943  2243  0020               	movlb 0	; select bank0
  9944  2244  0857               	movf	(litterlanguage_event@argument),w
  9945  2245  1D03               	skipz
  9946  2246  2A48               	goto	u12450
  9947  2247  2A6E               	goto	l8721
  9948  2248                     u12450:
  9949                           	line	365
  9950                           	
  9951  2248                     l38523:	
  9952                           ;userinterface.c: 365: set_Beeper(0x05, 1);
  9953  2248  01AE               	clrf	(?_set_Beeper)
  9954  2249  1403               	bsf	status,0
  9955  224A  0DAE               	rlf	(?_set_Beeper),f
  9956  224B  3005               	movlw	(05h)
  9957  224C  31B7  2783  31A2   	fcall	_set_Beeper
  9958  224F  2A6E               	goto	l8721
  9959                           	
  9960  2250                     l8715:	
  9961                           	line	366
  9962                           ;userinterface.c: 366: break;
  9963  2250  2A6E               	goto	l8721
  9964                           	line	367
  9965                           ;userinterface.c: 367: case 3:
  9966                           	
  9967  2251                     l8716:	
  9968                           	line	368
  9969                           	
  9970  2251                     l38525:	
  9971                           ;userinterface.c: 368: if (argument)
  9972  2251  0020               	movlb 0	; select bank0
  9973  2252  0857               	movf	(litterlanguage_event@argument),w
  9974  2253  1D03               	skipz
  9975  2254  2A56               	goto	u12460
  9976  2255  2A6E               	goto	l8721
  9977  2256                     u12460:
  9978                           	line	369
  9979                           	
  9980  2256                     l38527:	
  9981                           ;userinterface.c: 369: set_Beeper(0x15, 1);
  9982  2256  01AE               	clrf	(?_set_Beeper)
  9983  2257  1403               	bsf	status,0
  9984  2258  0DAE               	rlf	(?_set_Beeper),f
  9985  2259  3015               	movlw	(015h)
  9986  225A  31B7  2783  31A2   	fcall	_set_Beeper
  9987  225D  2A6E               	goto	l8721
  9988                           	
  9989  225E                     l8717:	
  9990                           	line	370
  9991                           ;userinterface.c: 370: break;
  9992  225E  2A6E               	goto	l8721
  9993                           	line	371
  9994                           ;userinterface.c: 371: case 4:
  9995                           	
  9996  225F                     l8718:	
  9997                           	line	372
  9998                           ;userinterface.c: 372: break;
  9999  225F  2A6E               	goto	l8721
 10000                           	line	373
 10001                           ;userinterface.c: 373: case 5:
 10002                           	
 10003  2260                     l8719:	
 10004                           	line	374
 10005                           ;userinterface.c: 374: break;
 10006  2260  2A6E               	goto	l8721
 10007                           	line	375
 10008                           ;userinterface.c: 375: default:
 10009                           	
 10010  2261                     l8720:	
 10011                           	line	376
 10012                           ;userinterface.c: 376: break;
 10013  2261  2A6E               	goto	l8721
 10014                           	line	377
 10015                           	
 10016  2262                     l38529:	
 10017                           ;userinterface.c: 377: }
 10018  2262  2A6E               	goto	l8721
 10019                           	line	356
 10020                           	
 10021  2263                     l8709:	
 10022                           	
 10023  2263                     l38531:	
 10024  2263  0020               	movlb 0	; select bank0
 10025  2264  0858               	movf	(litterlanguage_event@event),w
 10026                           	; Switch size 1, requested type "space"
 10027                           ; Number of cases is 6, Range of values is 0 to 5
 10028                           ; switch strategies available:
 10029                           ; Name         Instructions Cycles
 10030                           ; direct_byte           18     6 (fixed)
 10031                           ; simple_byte           19    10 (average)
 10032                           ; jumptable            260     6 (fixed)
 10033                           ; rangetable            10     4 (fixed)
 10034                           ; spacedrange           17     6 (fixed)
 10035                           ; locatedrange           6     3 (fixed)
 10036                           ;	Chosen strategy is direct_byte
 10037                           
 10038  2265  0084               	movwf fsr0l
 10039  2266  3006               	movlw	6
 10040  2267  0204               	subwf	fsr0l,w
 10041  2268  1803               skipnc
 10042  2269  2A6E               goto l8721
 10043  226A  31B0               movlp high(S39235)
 10044  226B  3504               	lslf fsr0l,w
 10045  226C  3E00               	addlw low(S39235)
 10046  226D  0082               	movwf pc
 10047                           psect	swtext3,local,class=CONST,delta=2
 10048                           global __pswtext3
 10049  3000                     __pswtext3:
 10050  3000                     S39235:
 10051  3000  31A2  2A6E         	ljmp	l8721
 10052  3002  31A2  2A35         	ljmp	l38517
 10053  3004  31A2  2A43         	ljmp	l38521
 10054  3006  31A2  2A51         	ljmp	l38525
 10055  3008  31A2  2A6E         	ljmp	l8721
 10056  300A  31A2  2A6E         	ljmp	l8721
 10057                           psect	text3312
 10058                           
 10059                           	line	377
 10060                           	
 10061  226E                     l8711:	
 10062                           	line	378
 10063                           	
 10064  226E                     l8721:	
 10065  226E  0008               	return
 10066                           	opt stack 0
 10067                           GLOBAL	__end_of_litterlanguage_event
 10068  226F                     	__end_of_litterlanguage_event:
 10069 ;; =============== function _litterlanguage_event ends ============
 10070                           
 10071                           	signat	_litterlanguage_event,8312
 10072                           	global	_litterlanguage_stop
 10073                           psect	text3313,local,class=CODE,delta=2
 10074                           global __ptext3313
 10075  219D                     __ptext3313:
 10076                           
 10077 ;; *************** function _litterlanguage_stop *****************
 10078 ;; Defined at:
 10079 ;;		line 347 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;		None
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;		None               void
 10086 ;; Registers used:
 10087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10097 ;;Total ram usage:        1 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    5
 10100 ;; This function calls:
 10101 ;;		_printtime
 10102 ;;		_printf
 10103 ;;		_set_Bowl
 10104 ;;		_set_Arm
 10105 ;;		_water_fill
 10106 ;;		_set_Dosage
 10107 ;;		_set_Pump
 10108 ;;		_set_Dryer
 10109 ;;		_timeoutnever
 10110 ;;		_litterlanguage_event
 10111 ;; This function is called by:
 10112 ;;		_exe_instruction
 10113 ;;		_litterlanguage_event
 10114 ;;		_start_long
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           psect	text3313
 10118                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 10119                           	line	347
 10120                           	global	__size_of_litterlanguage_stop
 10121  0069                     	__size_of_litterlanguage_stop	equ	__end_of_litterlanguage_stop-_litterlanguage_stop
 10122                           	
 10123  219D                     _litterlanguage_stop:	
 10124                           	opt	stack 7
 10125                           ; Regs used in _litterlanguage_stop: [allreg]
 10126                           	line	348
 10127                           	
 10128  219D                     l38459:	
 10129                           ;litterlanguage.c: 348: if (ins_state == 0)
 10130  219D  0020               	movlb 0	; select bank0
 10131  219E  08E5               	movf	(_ins_state),f
 10132  219F  1D03               	skipz
 10133  21A0  29A2               	goto	u12351
 10134  21A1  29A3               	goto	u12350
 10135  21A2                     u12351:
 10136  21A2  29A5               	goto	l38463
 10137  21A3                     u12350:
 10138  21A3  2A05               	goto	l4308
 10139                           	line	349
 10140                           	
 10141  21A4                     l38461:	
 10142                           ;litterlanguage.c: 349: return;
 10143  21A4  2A05               	goto	l4308
 10144                           	
 10145  21A5                     l4307:	
 10146                           	line	351
 10147                           	
 10148  21A5                     l38463:	
 10149                           ;litterlanguage.c: 351: printtime();
 10150  21A5  31AB  233D  31A1   	fcall	_printtime
 10151                           	line	352
 10152                           ;litterlanguage.c: 352: printf("Stopping program\n");
 10153  21A8  309D               	movlw	low(STR_29|8000h)
 10154  21A9  0020               	movlb 0	; select bank0
 10155  21AA  00AF               	movwf	(?_printf)
 10156  21AB  3086               	movlw	high(STR_29|8000h)
 10157  21AC  00B0               	movwf	((?_printf))+1
 10158  21AD  3194  24A0  31A1   	fcall	_printf
 10159                           	line	354
 10160                           	
 10161  21B0                     l38465:	
 10162                           ;litterlanguage.c: 354: set_Bowl(0);
 10163  21B0  3000               	movlw	(0)
 10164  21B1  31AA  2256  31A1   	fcall	_set_Bowl
 10165                           	line	355
 10166                           	
 10167  21B4                     l38467:	
 10168                           ;litterlanguage.c: 355: set_Arm(0);
 10169  21B4  3000               	movlw	(0)
 10170  21B5  31AA  227A  31A1   	fcall	_set_Arm
 10171                           	line	356
 10172                           	
 10173  21B8                     l38469:	
 10174                           ;litterlanguage.c: 356: water_fill(0);
 10175  21B8  3000               	movlw	(0)
 10176  21B9  31A8  209D  31A1   	fcall	_water_fill
 10177                           	line	357
 10178                           	
 10179  21BC                     l38471:	
 10180                           ;litterlanguage.c: 357: set_Dosage(0);
 10181  21BC  3000               	movlw	(0)
 10182  21BD  31B7  27DE  31A1   	fcall	_set_Dosage
 10183                           	line	358
 10184                           	
 10185  21C0                     l38473:	
 10186                           ;litterlanguage.c: 358: set_Pump(0);
 10187  21C0  3000               	movlw	(0)
 10188  21C1  31B7  27EF  31A1   	fcall	_set_Pump
 10189                           	line	359
 10190                           	
 10191  21C4                     l38475:	
 10192                           ;litterlanguage.c: 359: set_Dryer(0);
 10193  21C4  3000               	movlw	(0)
 10194  21C5  31A8  203D  31A1   	fcall	_set_Dryer
 10195                           	line	361
 10196                           	
 10197  21C8                     l38477:	
 10198                           ;litterlanguage.c: 361: timeoutnever(&timer_fill);
 10199  21C8  30EA               	movlw	(_timer_fill&0ffh)
 10200  21C9  0020               	movlb 0	; select bank0
 10201  21CA  00A5               	movwf	(?_timeoutnever)
 10202  21CB  3000               	movlw	0x1/2
 10203  21CC  00A6               	movwf	(?_timeoutnever+1)
 10204  21CD  31A9  2162  31A1   	fcall	_timeoutnever
 10205                           	line	362
 10206                           	
 10207  21D0                     l38479:	
 10208                           ;litterlanguage.c: 362: timeoutnever(&timer_drain);
 10209  21D0  30E4               	movlw	(_timer_drain&0ffh)
 10210  21D1  0020               	movlb 0	; select bank0
 10211  21D2  00A5               	movwf	(?_timeoutnever)
 10212  21D3  3000               	movlw	0x1/2
 10213  21D4  00A6               	movwf	(?_timeoutnever+1)
 10214  21D5  31A9  2162  31A1   	fcall	_timeoutnever
 10215                           	line	363
 10216                           	
 10217  21D8                     l38481:	
 10218                           ;litterlanguage.c: 363: timeoutnever(&timer_autodose);
 10219  21D8  3064               	movlw	(_timer_autodose&0ffh)
 10220  21D9  0020               	movlb 0	; select bank0
 10221  21DA  00A5               	movwf	(?_timeoutnever)
 10222  21DB  3001               	movlw	0x2/2
 10223  21DC  00A6               	movwf	(?_timeoutnever+1)
 10224  21DD  31A9  2162  31A1   	fcall	_timeoutnever
 10225                           	line	365
 10226                           	
 10227  21E0                     l38483:	
 10228                           ;litterlanguage.c: 365: ins_state = 0;
 10229  21E0  0020               	movlb 0	; select bank0
 10230  21E1  01E5               	clrf	(_ins_state)
 10231                           	line	367
 10232                           	
 10233  21E2                     l38485:	
 10234                           ;litterlanguage.c: 367: paused = 0;
 10235  21E2  12F1               	bcf	(_paused/8),(_paused)&7
 10236                           	line	369
 10237                           	
 10238  21E3                     l38487:	
 10239                           ;litterlanguage.c: 369: if (error_fill) {
 10240  21E3  1F70               	btfss	(_error_fill/8),(_error_fill)&7
 10241  21E4  29E6               	goto	u12361
 10242  21E5  29E7               	goto	u12360
 10243  21E6                     u12361:
 10244  21E6  29F3               	goto	l38493
 10245  21E7                     u12360:
 10246                           	line	370
 10247                           	
 10248  21E7                     l38489:	
 10249                           ;litterlanguage.c: 370: error_fill = 0;
 10250  21E7  1370               	bcf	(_error_fill/8),(_error_fill)&7
 10251                           	line	371
 10252                           	
 10253  21E8                     l38491:	
 10254                           ;litterlanguage.c: 371: litterlanguage_event(1, error_fill);
 10255  21E8  3000               	movlw	0
 10256  21E9  1B70               	btfsc	(_error_fill/8),(_error_fill)&7
 10257  21EA  3001               	movlw	1
 10258  21EB  00CF               	movwf	(??_litterlanguage_stop+0)+0
 10259  21EC  084F               	movf	(??_litterlanguage_stop+0)+0,w
 10260  21ED  00D7               	movwf	(?_litterlanguage_event)
 10261  21EE  3001               	movlw	(01h)
 10262  21EF  31A2  2206  31A1   	fcall	_litterlanguage_event
 10263  21F2  29F3               	goto	l38493
 10264                           	line	372
 10265                           	
 10266  21F3                     l4309:	
 10267                           	line	373
 10268                           	
 10269  21F3                     l38493:	
 10270                           ;litterlanguage.c: 372: }
 10271                           ;litterlanguage.c: 373: if (error_drain) {
 10272  21F3  1E70               	btfss	(_error_drain/8),(_error_drain)&7
 10273  21F4  29F6               	goto	u12371
 10274  21F5  29F7               	goto	u12370
 10275  21F6                     u12371:
 10276  21F6  2A04               	goto	l38499
 10277  21F7                     u12370:
 10278                           	line	374
 10279                           	
 10280  21F7                     l38495:	
 10281                           ;litterlanguage.c: 374: error_drain = 0;
 10282  21F7  1270               	bcf	(_error_drain/8),(_error_drain)&7
 10283                           	line	375
 10284                           	
 10285  21F8                     l38497:	
 10286                           ;litterlanguage.c: 375: litterlanguage_event(2, error_drain);
 10287  21F8  3000               	movlw	0
 10288  21F9  1A70               	btfsc	(_error_drain/8),(_error_drain)&7
 10289  21FA  3001               	movlw	1
 10290  21FB  0020               	movlb 0	; select bank0
 10291  21FC  00CF               	movwf	(??_litterlanguage_stop+0)+0
 10292  21FD  084F               	movf	(??_litterlanguage_stop+0)+0,w
 10293  21FE  00D7               	movwf	(?_litterlanguage_event)
 10294  21FF  3002               	movlw	(02h)
 10295  2200  31A2  2206  31A1   	fcall	_litterlanguage_event
 10296  2203  2A04               	goto	l38499
 10297                           	line	376
 10298                           	
 10299  2204                     l4310:	
 10300                           	line	377
 10301                           	
 10302  2204                     l38499:	
 10303                           ;litterlanguage.c: 376: }
 10304                           ;litterlanguage.c: 377: error_flood = 0;
 10305  2204  13F0               	bcf	(_error_flood/8),(_error_flood)&7
 10306                           	line	378
 10307                           	
 10308  2205                     l4308:	
 10309  2205  0008               	return
 10310                           	opt stack 0
 10311                           GLOBAL	__end_of_litterlanguage_stop
 10312  2206                     	__end_of_litterlanguage_stop:
 10313 ;; =============== function _litterlanguage_stop ends ============
 10314                           
 10315                           	signat	_litterlanguage_stop,88
 10316                           	global	_userinterface_work
 10317                           psect	text3314,local,class=CODE,delta=2
 10318                           global __ptext3314
 10319  1D32                     __ptext3314:
 10320                           
 10321 ;; *************** function _userinterface_work *****************
 10322 ;; Defined at:
 10323 ;;		line 129 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;		None
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  update          1   57[BANK0 ] unsigned char 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;		None               void
 10330 ;; Registers used:
 10331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10339 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10341 ;;Total ram usage:        3 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    9
 10344 ;; This function calls:
 10345 ;;		_timeoutexpired
 10346 ;;		_update_autotimer
 10347 ;;		_printtime
 10348 ;;		_printf
 10349 ;;		_litterlanguage_start
 10350 ;;		_litterlanguage_running
 10351 ;;		_timeoutnow
 10352 ;;		_start_short
 10353 ;;		_setup_short
 10354 ;;		_both_short
 10355 ;;		_key_Beep
 10356 ;;		_start_long
 10357 ;;		_setup_long
 10358 ;;		_both_long
 10359 ;;		_timeoutnever
 10360 ;;		_update_display
 10361 ;; This function is called by:
 10362 ;;		_main
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           psect	text3314
 10366                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 10367                           	line	129
 10368                           	global	__size_of_userinterface_work
 10369  015A                     	__size_of_userinterface_work	equ	__end_of_userinterface_work-_userinterface_work
 10370                           	
 10371  1D32                     _userinterface_work:	
 10372                           	opt	stack 6
 10373                           ; Regs used in _userinterface_work: [allreg]
 10374                           	line	130
 10375                           	
 10376  1D32                     l38347:	
 10377                           ;userinterface.c: 130: unsigned char update = 0;
 10378  1D32  0020               	movlb 0	; select bank0
 10379  1D33  01DA               	clrf	(userinterface_work@update)
 10380                           	line	133
 10381                           	
 10382  1D34                     l38349:	
 10383                           ;userinterface.c: 132: if( (panel_mode == 1) &&
 10384                           ;userinterface.c: 133: (timeoutexpired(&cartridgetimeout)) ) {
 10385  1D34  0021               	movlb 1	; select bank1
 10386  1D35  0859               	movf	(_panel_mode)^080h,w
 10387  1D36  3A01               	xorlw	01h&0ffh
 10388  1D37  1D03               	skipz
 10389  1D38  2D3A               	goto	u12241
 10390  1D39  2D3B               	goto	u12240
 10391  1D3A                     u12241:
 10392  1D3A  2DEB               	goto	l38399
 10393  1D3B                     u12240:
 10394                           	
 10395  1D3B                     l38351:	
 10396  1D3B  3040               	movlw	(_cartridgetimeout&0ffh)
 10397  1D3C  0020               	movlb 0	; select bank0
 10398  1D3D  00A9               	movwf	(?_timeoutexpired)
 10399  1D3E  3001               	movlw	0x2/2
 10400  1D3F  00AA               	movwf	(?_timeoutexpired+1)
 10401  1D40  31A3  234C  319D   	fcall	_timeoutexpired
 10402  1D43  3A00               	xorlw	0&0ffh
 10403  1D44  1903               	skipnz
 10404  1D45  2D47               	goto	u12251
 10405  1D46  2D48               	goto	u12250
 10406  1D47                     u12251:
 10407  1D47  2DEB               	goto	l38399
 10408  1D48                     u12250:
 10409                           	line	134
 10410                           	
 10411  1D48                     l38353:	
 10412                           ;userinterface.c: 134: if (error_nr)
 10413  1D48  0020               	movlb 0	; select bank0
 10414  1D49  0863               	movf	(_error_nr),w
 10415  1D4A  1D03               	skipz
 10416  1D4B  2D4D               	goto	u12260
 10417  1D4C  2D53               	goto	l8644
 10418  1D4D                     u12260:
 10419                           	line	135
 10420                           	
 10421  1D4D                     l38355:	
 10422                           ;userinterface.c: 135: panel_mode = 2;
 10423  1D4D  3002               	movlw	(02h)
 10424  1D4E  00D8               	movwf	(??_userinterface_work+0)+0
 10425  1D4F  0858               	movf	(??_userinterface_work+0)+0,w
 10426  1D50  0021               	movlb 1	; select bank1
 10427  1D51  00D9               	movwf	(_panel_mode)^080h
 10428  1D52  2D56               	goto	l38357
 10429                           	line	136
 10430                           	
 10431  1D53                     l8644:	
 10432                           	line	137
 10433                           ;userinterface.c: 136: else
 10434                           ;userinterface.c: 137: panel_mode = 0;
 10435  1D53  0021               	movlb 1	; select bank1
 10436  1D54  01D9               	clrf	(_panel_mode)^080h
 10437  1D55  2D56               	goto	l38357
 10438                           	
 10439  1D56                     l8645:	
 10440                           	line	138
 10441                           	
 10442  1D56                     l38357:	
 10443                           ;userinterface.c: 138: update = 1;
 10444  1D56  0020               	movlb 0	; select bank0
 10445  1D57  01DA               	clrf	(userinterface_work@update)
 10446  1D58  1403               	bsf	status,0
 10447  1D59  0DDA               	rlf	(userinterface_work@update),f
 10448  1D5A  2DEB               	goto	l38399
 10449                           	line	139
 10450                           	
 10451  1D5B                     l8643:	
 10452                           	line	141
 10453                           ;userinterface.c: 139: }
 10454                           ;userinterface.c: 141: switch(state) {
 10455  1D5B  2DEB               	goto	l38399
 10456                           	line	142
 10457                           ;userinterface.c: 142: default:
 10458                           	
 10459  1D5C                     l8647:	
 10460                           	line	143
 10461                           ;userinterface.c: 143: state = 0;
 10462  1D5C  01E6               	clrf	(_state)
 10463  1D5D  2D5E               	goto	l38359
 10464                           	line	144
 10465                           ;userinterface.c: 144: case 0:
 10466                           	
 10467  1D5E                     l8648:	
 10468                           	line	146
 10469                           	
 10470  1D5E                     l38359:	
 10471                           ;userinterface.c: 146: if (timeoutexpired(&autotimer)) {
 10472  1D5E  30DE               	movlw	(_autotimer&0ffh)
 10473  1D5F  00A9               	movwf	(?_timeoutexpired)
 10474  1D60  3000               	movlw	0x1/2
 10475  1D61  00AA               	movwf	(?_timeoutexpired+1)
 10476  1D62  31A3  234C  319D   	fcall	_timeoutexpired
 10477  1D65  3A00               	xorlw	0&0ffh
 10478  1D66  1903               	skipnz
 10479  1D67  2D69               	goto	u12271
 10480  1D68  2D6A               	goto	u12270
 10481  1D69                     u12271:
 10482  1D69  2E13               	goto	l38415
 10483  1D6A                     u12270:
 10484                           	line	148
 10485                           	
 10486  1D6A                     l38361:	
 10487                           ;userinterface.c: 148: update_autotimer(auto_mode);
 10488  1D6A  0020               	movlb 0	; select bank0
 10489  1D6B  0862               	movf	(_auto_mode),w
 10490  1D6C  31A6  26BD  319D   	fcall	_update_autotimer
 10491                           	line	150
 10492                           ;userinterface.c: 150: printtime();
 10493  1D6F  31AB  233D  319D   	fcall	_printtime
 10494                           	line	151
 10495                           ;userinterface.c: 151: printf("Autotimer expired: ");
 10496  1D72  30A2               	movlw	low(STR_91|8000h)
 10497  1D73  0020               	movlb 0	; select bank0
 10498  1D74  00AF               	movwf	(?_printf)
 10499  1D75  3085               	movlw	high(STR_91|8000h)
 10500  1D76  00B0               	movwf	((?_printf))+1
 10501  1D77  3194  24A0  319D   	fcall	_printf
 10502                           	line	154
 10503                           	
 10504  1D7A                     l38363:	
 10505                           ;userinterface.c: 154: if (cat_detected) {
 10506  1D7A  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 10507  1D7B  2D7D               	goto	u12281
 10508  1D7C  2D7E               	goto	u12280
 10509  1D7D                     u12281:
 10510  1D7D  2D8E               	goto	l38371
 10511  1D7E                     u12280:
 10512                           	line	156
 10513                           	
 10514  1D7E                     l38365:	
 10515                           ;userinterface.c: 156: printf("waiting...\n");
 10516  1D7E  3027               	movlw	low(STR_92|8000h)
 10517  1D7F  0020               	movlb 0	; select bank0
 10518  1D80  00AF               	movwf	(?_printf)
 10519  1D81  3088               	movlw	high(STR_92|8000h)
 10520  1D82  00B0               	movwf	((?_printf))+1
 10521  1D83  3194  24A0  319D   	fcall	_printf
 10522                           	line	158
 10523                           	
 10524  1D86                     l38367:	
 10525                           ;userinterface.c: 158: state = 1;
 10526  1D86  0020               	movlb 0	; select bank0
 10527  1D87  01E6               	clrf	(_state)
 10528  1D88  1403               	bsf	status,0
 10529  1D89  0DE6               	rlf	(_state),f
 10530                           	line	159
 10531                           	
 10532  1D8A                     l38369:	
 10533                           ;userinterface.c: 159: update = 1;
 10534  1D8A  01DA               	clrf	(userinterface_work@update)
 10535  1D8B  1403               	bsf	status,0
 10536  1D8C  0DDA               	rlf	(userinterface_work@update),f
 10537                           	line	160
 10538                           ;userinterface.c: 160: }
 10539  1D8D  2E13               	goto	l38415
 10540                           	line	162
 10541                           	
 10542  1D8E                     l8650:	
 10543                           	line	163
 10544                           	
 10545  1D8E                     l38371:	
 10546                           ;userinterface.c: 162: else
 10547                           ;userinterface.c: 163: printf("skipping\n");
 10548  1D8E  3076               	movlw	low(STR_93|8000h)
 10549  1D8F  0020               	movlb 0	; select bank0
 10550  1D90  00AF               	movwf	(?_printf)
 10551  1D91  3088               	movlw	high(STR_93|8000h)
 10552  1D92  00B0               	movwf	((?_printf))+1
 10553  1D93  3194  24A0  319D   	fcall	_printf
 10554  1D96  2E13               	goto	l38415
 10555                           	
 10556  1D97                     l8651:	
 10557  1D97  2E13               	goto	l38415
 10558                           	line	165
 10559                           	
 10560  1D98                     l8649:	
 10561                           	line	166
 10562                           ;userinterface.c: 165: }
 10563                           ;userinterface.c: 166: break;
 10564  1D98  2E13               	goto	l38415
 10565                           	line	167
 10566                           ;userinterface.c: 167: case 1:
 10567                           	
 10568  1D99                     l8653:	
 10569                           	line	169
 10570                           ;userinterface.c: 169: if (!cat_present && timeoutexpired(&cattimer)) {
 10571  1D99  18F0               	btfsc	(_cat_present/8),(_cat_present)&7
 10572  1D9A  2D9C               	goto	u12291
 10573  1D9B  2D9D               	goto	u12290
 10574  1D9C                     u12291:
 10575  1D9C  2E13               	goto	l38415
 10576  1D9D                     u12290:
 10577                           	
 10578  1D9D                     l38373:	
 10579  1D9D  3046               	movlw	(_cattimer&0ffh)
 10580  1D9E  00A9               	movwf	(?_timeoutexpired)
 10581  1D9F  3001               	movlw	0x2/2
 10582  1DA0  00AA               	movwf	(?_timeoutexpired+1)
 10583  1DA1  31A3  234C  319D   	fcall	_timeoutexpired
 10584  1DA4  3A00               	xorlw	0&0ffh
 10585  1DA5  1903               	skipnz
 10586  1DA6  2DA8               	goto	u12301
 10587  1DA7  2DA9               	goto	u12300
 10588  1DA8                     u12301:
 10589  1DA8  2E13               	goto	l38415
 10590  1DA9                     u12300:
 10591                           	line	171
 10592                           	
 10593  1DA9                     l38375:	
 10594                           ;userinterface.c: 171: printtime();
 10595  1DA9  31AB  233D  319D   	fcall	_printtime
 10596                           	line	172
 10597                           ;userinterface.c: 172: printf("Cattimer expired\n");
 10598  1DAC  3079               	movlw	low(STR_94|8000h)
 10599  1DAD  0020               	movlb 0	; select bank0
 10600  1DAE  00AF               	movwf	(?_printf)
 10601  1DAF  3086               	movlw	high(STR_94|8000h)
 10602  1DB0  00B0               	movwf	((?_printf))+1
 10603  1DB1  3194  24A0  319D   	fcall	_printf
 10604                           	line	174
 10605                           ;userinterface.c: 174: litterlanguage_start(full_wash);
 10606  1DB4  3000               	movlw	0
 10607  1DB5  18F1               	btfsc	(_full_wash/8),(_full_wash)&7
 10608  1DB6  3001               	movlw	1
 10609  1DB7  31AD  2517  319D   	fcall	_litterlanguage_start
 10610                           	line	175
 10611                           	
 10612  1DBA                     l38377:	
 10613                           ;userinterface.c: 175: state = 2;
 10614  1DBA  3002               	movlw	(02h)
 10615  1DBB  0020               	movlb 0	; select bank0
 10616  1DBC  00D8               	movwf	(??_userinterface_work+0)+0
 10617  1DBD  0858               	movf	(??_userinterface_work+0)+0,w
 10618  1DBE  00E6               	movwf	(_state)
 10619                           	line	178
 10620                           	
 10621  1DBF                     l38379:	
 10622                           ;userinterface.c: 178: update = 1;
 10623  1DBF  01DA               	clrf	(userinterface_work@update)
 10624  1DC0  1403               	bsf	status,0
 10625  1DC1  0DDA               	rlf	(userinterface_work@update),f
 10626  1DC2  2E13               	goto	l38415
 10627                           	line	179
 10628                           	
 10629  1DC3                     l8654:	
 10630                           	line	180
 10631                           ;userinterface.c: 179: }
 10632                           ;userinterface.c: 180: break;
 10633  1DC3  2E13               	goto	l38415
 10634                           	line	181
 10635                           ;userinterface.c: 181: case 2:
 10636                           	
 10637  1DC4                     l8655:	
 10638                           	line	183
 10639                           	
 10640  1DC4                     l38381:	
 10641                           ;userinterface.c: 183: if (!litterlanguage_running()) {
 10642  1DC4  31B7  2723  319D   	fcall	_litterlanguage_running
 10643  1DC7  3800               	iorlw	0
 10644  1DC8  1D03               	skipz
 10645  1DC9  2DCB               	goto	u12311
 10646  1DCA  2DCC               	goto	u12310
 10647  1DCB                     u12311:
 10648  1DCB  2E13               	goto	l38415
 10649  1DCC                     u12310:
 10650                           	line	184
 10651                           	
 10652  1DCC                     l38383:	
 10653                           ;userinterface.c: 184: timeoutnow(&cattimer);
 10654  1DCC  3046               	movlw	(_cattimer&0ffh)
 10655  1DCD  0020               	movlb 0	; select bank0
 10656  1DCE  00A5               	movwf	(?_timeoutnow)
 10657  1DCF  3001               	movlw	0x2/2
 10658  1DD0  00A6               	movwf	(?_timeoutnow+1)
 10659  1DD1  31A9  217E  319D   	fcall	_timeoutnow
 10660                           	line	185
 10661                           	
 10662  1DD4                     l38385:	
 10663                           ;userinterface.c: 185: cat_detected = 0;
 10664  1DD4  1070               	bcf	(_cat_detected/8),(_cat_detected)&7
 10665                           	line	186
 10666                           	
 10667  1DD5                     l38387:	
 10668                           ;userinterface.c: 186: if (full_wash)
 10669  1DD5  1CF1               	btfss	(_full_wash/8),(_full_wash)&7
 10670  1DD6  2DD8               	goto	u12321
 10671  1DD7  2DD9               	goto	u12320
 10672  1DD8                     u12321:
 10673  1DD8  2DDC               	goto	l38391
 10674  1DD9                     u12320:
 10675                           	line	187
 10676                           	
 10677  1DD9                     l38389:	
 10678                           ;userinterface.c: 187: interval = 0;
 10679  1DD9  0021               	movlb 1	; select bank1
 10680  1DDA  01D8               	clrf	(_interval)^080h
 10681  1DDB  2DE3               	goto	l38393
 10682                           	line	188
 10683                           	
 10684  1DDC                     l8657:	
 10685                           	line	189
 10686                           	
 10687  1DDC                     l38391:	
 10688                           ;userinterface.c: 188: else
 10689                           ;userinterface.c: 189: interval ++;
 10690  1DDC  3001               	movlw	(01h)
 10691  1DDD  0020               	movlb 0	; select bank0
 10692  1DDE  00D8               	movwf	(??_userinterface_work+0)+0
 10693  1DDF  0858               	movf	(??_userinterface_work+0)+0,w
 10694  1DE0  0021               	movlb 1	; select bank1
 10695  1DE1  07D8               	addwf	(_interval)^080h,f
 10696  1DE2  2DE3               	goto	l38393
 10697                           	
 10698  1DE3                     l8658:	
 10699                           	line	190
 10700                           	
 10701  1DE3                     l38393:	
 10702                           ;userinterface.c: 190: state = 0;
 10703  1DE3  0020               	movlb 0	; select bank0
 10704  1DE4  01E6               	clrf	(_state)
 10705                           	line	191
 10706                           	
 10707  1DE5                     l38395:	
 10708                           ;userinterface.c: 191: update = 1;
 10709  1DE5  01DA               	clrf	(userinterface_work@update)
 10710  1DE6  1403               	bsf	status,0
 10711  1DE7  0DDA               	rlf	(userinterface_work@update),f
 10712  1DE8  2E13               	goto	l38415
 10713                           	line	192
 10714                           	
 10715  1DE9                     l8656:	
 10716                           	line	193
 10717                           ;userinterface.c: 192: }
 10718                           ;userinterface.c: 193: break;
 10719  1DE9  2E13               	goto	l38415
 10720                           	line	194
 10721                           	
 10722  1DEA                     l38397:	
 10723                           ;userinterface.c: 194: }
 10724  1DEA  2E13               	goto	l38415
 10725                           	line	141
 10726                           	
 10727  1DEB                     l8646:	
 10728                           	
 10729  1DEB                     l38399:	
 10730  1DEB  0020               	movlb 0	; select bank0
 10731  1DEC  0866               	movf	(_state),w
 10732                           	; Switch size 1, requested type "space"
 10733                           ; Number of cases is 3, Range of values is 0 to 2
 10734                           ; switch strategies available:
 10735                           ; Name         Instructions Cycles
 10736                           ; simple_byte           10     6 (average)
 10737                           ; direct_byte           12     6 (fixed)
 10738                           ; jumptable            260     6 (fixed)
 10739                           ; rangetable             7     4 (fixed)
 10740                           ; spacedrange           11     6 (fixed)
 10741                           ; locatedrange           3     3 (fixed)
 10742                           ;	Chosen strategy is simple_byte
 10743                           
 10744                           	opt asmopt_off
 10745  1DED  3A00               	xorlw	0^0	; case 0
 10746  1DEE  1903               	skipnz
 10747  1DEF  2D5E               	goto	l38359
 10748  1DF0  3A01               	xorlw	1^0	; case 1
 10749  1DF1  1903               	skipnz
 10750  1DF2  2D99               	goto	l8653
 10751  1DF3  3A03               	xorlw	2^1	; case 2
 10752  1DF4  1903               	skipnz
 10753  1DF5  2DC4               	goto	l38381
 10754  1DF6  2D5C               	goto	l8647
 10755                           	opt asmopt_on
 10756                           
 10757                           	line	194
 10758                           	
 10759  1DF7                     l8652:	
 10760                           	line	197
 10761                           ;userinterface.c: 197: switch (buttonmask_evt & ((0x01 << 0) | (0x01 << 1))) {
 10762  1DF7  2E13               	goto	l38415
 10763                           	line	198
 10764                           ;userinterface.c: 198: case 0:
 10765                           	
 10766  1DF8                     l8660:	
 10767                           	line	200
 10768                           ;userinterface.c: 200: break;
 10769  1DF8  2E2C               	goto	l8661
 10770                           	line	202
 10771                           ;userinterface.c: 202: case (0x01 << 0):
 10772                           	
 10773  1DF9                     l8662:	
 10774                           	line	203
 10775                           	
 10776  1DF9                     l38401:	
 10777                           ;userinterface.c: 203: start_short();
 10778  1DF9  31AA  2212  319D   	fcall	_start_short
 10779                           	line	204
 10780                           	
 10781  1DFC                     l38403:	
 10782                           ;userinterface.c: 204: update = 1;
 10783  1DFC  0020               	movlb 0	; select bank0
 10784  1DFD  01DA               	clrf	(userinterface_work@update)
 10785  1DFE  1403               	bsf	status,0
 10786  1DFF  0DDA               	rlf	(userinterface_work@update),f
 10787                           	line	205
 10788                           ;userinterface.c: 205: break;
 10789  1E00  2E2C               	goto	l8661
 10790                           	line	207
 10791                           ;userinterface.c: 207: case (0x01 << 1):
 10792                           	
 10793  1E01                     l8663:	
 10794                           	line	208
 10795                           	
 10796  1E01                     l38405:	
 10797                           ;userinterface.c: 208: setup_short();
 10798  1E01  3198  2001  319D   	fcall	_setup_short
 10799                           	line	209
 10800                           	
 10801  1E04                     l38407:	
 10802                           ;userinterface.c: 209: update = 1;
 10803  1E04  0020               	movlb 0	; select bank0
 10804  1E05  01DA               	clrf	(userinterface_work@update)
 10805  1E06  1403               	bsf	status,0
 10806  1E07  0DDA               	rlf	(userinterface_work@update),f
 10807                           	line	210
 10808                           ;userinterface.c: 210: break;
 10809  1E08  2E2C               	goto	l8661
 10810                           	line	212
 10811                           ;userinterface.c: 212: case ((0x01 << 0) | (0x01 << 1)):
 10812                           	
 10813  1E09                     l8664:	
 10814                           	line	213
 10815                           	
 10816  1E09                     l38409:	
 10817                           ;userinterface.c: 213: both_short();
 10818  1E09  31A8  2073  319D   	fcall	_both_short
 10819                           	line	214
 10820                           	
 10821  1E0C                     l38411:	
 10822                           ;userinterface.c: 214: update = 1;
 10823  1E0C  0020               	movlb 0	; select bank0
 10824  1E0D  01DA               	clrf	(userinterface_work@update)
 10825  1E0E  1403               	bsf	status,0
 10826  1E0F  0DDA               	rlf	(userinterface_work@update),f
 10827                           	line	215
 10828                           ;userinterface.c: 215: break;
 10829  1E10  2E2C               	goto	l8661
 10830                           	line	217
 10831                           ;userinterface.c: 217: default:
 10832                           	
 10833  1E11                     l8665:	
 10834                           	line	218
 10835                           ;userinterface.c: 218: break;
 10836  1E11  2E2C               	goto	l8661
 10837                           	line	219
 10838                           	
 10839  1E12                     l38413:	
 10840                           ;userinterface.c: 219: }
 10841  1E12  2E2C               	goto	l8661
 10842                           	line	197
 10843                           	
 10844  1E13                     l8659:	
 10845                           	
 10846  1E13                     l38415:	
 10847  1E13  0021               	movlb 1	; select bank1
 10848  1E14  0857               	movf	(_buttonmask_evt)^080h,w
 10849  1E15  3903               	andlw	03h
 10850  1E16  0020               	movlb 0	; select bank0
 10851  1E17  00D8               	movwf	(??_userinterface_work+0)+0
 10852  1E18  01D9               	clrf	(??_userinterface_work+0)+0+1
 10853                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10854                           ; Switch size 1, requested type "space"
 10855                           ; Number of cases is 1, Range of values is 0 to 0
 10856                           ; switch strategies available:
 10857                           ; Name         Instructions Cycles
 10858                           ; simple_byte            4     3 (average)
 10859                           ; direct_byte            8     6 (fixed)
 10860                           ; jumptable            260     6 (fixed)
 10861                           ; rangetable             5     4 (fixed)
 10862                           ; spacedrange            7     6 (fixed)
 10863                           ; locatedrange           1     3 (fixed)
 10864                           ;	Chosen strategy is simple_byte
 10865                           
 10866  1E19  0859               	movf 1+(??_userinterface_work+0)+0,w
 10867                           	opt asmopt_off
 10868  1E1A  3A00               	xorlw	0^0	; case 0
 10869  1E1B  1903               	skipnz
 10870  1E1C  2E1E               	goto	l39237
 10871  1E1D  2E2C               	goto	l8661
 10872                           	opt asmopt_on
 10873                           	
 10874  1E1E                     l39237:	
 10875                           ; Switch size 1, requested type "space"
 10876                           ; Number of cases is 4, Range of values is 0 to 3
 10877                           ; switch strategies available:
 10878                           ; Name         Instructions Cycles
 10879                           ; simple_byte           13     7 (average)
 10880                           ; direct_byte           14     6 (fixed)
 10881                           ; jumptable            260     6 (fixed)
 10882                           ; rangetable             8     4 (fixed)
 10883                           ; spacedrange           13     6 (fixed)
 10884                           ; locatedrange           4     3 (fixed)
 10885                           ;	Chosen strategy is simple_byte
 10886                           
 10887  1E1E  0858               	movf 0+(??_userinterface_work+0)+0,w
 10888                           	opt asmopt_off
 10889  1E1F  3A00               	xorlw	0^0	; case 0
 10890  1E20  1903               	skipnz
 10891  1E21  2E2C               	goto	l8661
 10892  1E22  3A01               	xorlw	1^0	; case 1
 10893  1E23  1903               	skipnz
 10894  1E24  2DF9               	goto	l38401
 10895  1E25  3A03               	xorlw	2^1	; case 2
 10896  1E26  1903               	skipnz
 10897  1E27  2E01               	goto	l38405
 10898  1E28  3A01               	xorlw	3^2	; case 3
 10899  1E29  1903               	skipnz
 10900  1E2A  2E09               	goto	l38409
 10901  1E2B  2E2C               	goto	l8661
 10902                           	opt asmopt_on
 10903                           
 10904                           	line	219
 10905                           	
 10906  1E2C                     l8661:	
 10907                           	line	220
 10908                           ;userinterface.c: 220: buttonmask_evt = 0;
 10909  1E2C  0021               	movlb 1	; select bank1
 10910  1E2D  01D7               	clrf	(_buttonmask_evt)^080h
 10911                           	line	223
 10912                           	
 10913  1E2E                     l38417:	
 10914                           ;userinterface.c: 223: if (timeoutexpired(&holdtimeout)) {
 10915  1E2E  305E               	movlw	(_holdtimeout&0ffh)
 10916  1E2F  0020               	movlb 0	; select bank0
 10917  1E30  00A9               	movwf	(?_timeoutexpired)
 10918  1E31  3001               	movlw	0x2/2
 10919  1E32  00AA               	movwf	(?_timeoutexpired+1)
 10920  1E33  31A3  234C  319D   	fcall	_timeoutexpired
 10921  1E36  3A00               	xorlw	0&0ffh
 10922  1E37  1903               	skipnz
 10923  1E38  2E3A               	goto	u12331
 10924  1E39  2E3B               	goto	u12330
 10925  1E3A                     u12331:
 10926  1E3A  2E82               	goto	l38443
 10927  1E3B                     u12330:
 10928  1E3B  2E63               	goto	l38439
 10929                           	line	224
 10930                           	
 10931  1E3C                     l38419:	
 10932                           ;userinterface.c: 224: switch (buttonmask_cum & ((0x01 << 0) | (0x01 << 1))) {
 10933  1E3C  2E63               	goto	l38439
 10934                           	line	225
 10935                           ;userinterface.c: 225: case (0x01 << 0):
 10936                           	
 10937  1E3D                     l8668:	
 10938                           	line	226
 10939                           	
 10940  1E3D                     l38421:	
 10941                           ;userinterface.c: 226: key_Beep(2);
 10942  1E3D  3002               	movlw	(02h)
 10943  1E3E  31AA  22C3  319D   	fcall	_key_Beep
 10944                           	line	227
 10945                           ;userinterface.c: 227: start_long();
 10946  1E41  31A9  212C  319D   	fcall	_start_long
 10947                           	line	228
 10948                           	
 10949  1E44                     l38423:	
 10950                           ;userinterface.c: 228: update = 1;
 10951  1E44  0020               	movlb 0	; select bank0
 10952  1E45  01DA               	clrf	(userinterface_work@update)
 10953  1E46  1403               	bsf	status,0
 10954  1E47  0DDA               	rlf	(userinterface_work@update),f
 10955                           	line	229
 10956                           ;userinterface.c: 229: break;
 10957  1E48  2E79               	goto	l8669
 10958                           	line	231
 10959                           ;userinterface.c: 231: case (0x01 << 1):
 10960                           	
 10961  1E49                     l8670:	
 10962                           	line	232
 10963                           	
 10964  1E49                     l38425:	
 10965                           ;userinterface.c: 232: key_Beep(2);
 10966  1E49  3002               	movlw	(02h)
 10967  1E4A  31AA  22C3  319D   	fcall	_key_Beep
 10968                           	line	233
 10969                           	
 10970  1E4D                     l38427:	
 10971                           ;userinterface.c: 233: setup_long();
 10972  1E4D  3180  20FF  319D   	fcall	_setup_long
 10973                           	line	234
 10974                           	
 10975  1E50                     l38429:	
 10976                           ;userinterface.c: 234: update = 1;
 10977  1E50  0020               	movlb 0	; select bank0
 10978  1E51  01DA               	clrf	(userinterface_work@update)
 10979  1E52  1403               	bsf	status,0
 10980  1E53  0DDA               	rlf	(userinterface_work@update),f
 10981                           	line	235
 10982                           ;userinterface.c: 235: break;
 10983  1E54  2E79               	goto	l8669
 10984                           	line	237
 10985                           ;userinterface.c: 237: case ((0x01 << 0) | (0x01 << 1)):
 10986                           	
 10987  1E55                     l8671:	
 10988                           	line	238
 10989                           	
 10990  1E55                     l38431:	
 10991                           ;userinterface.c: 238: key_Beep(2);
 10992  1E55  3002               	movlw	(02h)
 10993  1E56  31AA  22C3  319D   	fcall	_key_Beep
 10994                           	line	239
 10995                           	
 10996  1E59                     l38433:	
 10997                           ;userinterface.c: 239: both_long();
 10998  1E59  31B7  27CE  319D   	fcall	_both_long
 10999                           	line	240
 11000                           	
 11001  1E5C                     l38435:	
 11002                           ;userinterface.c: 240: update = 1;
 11003  1E5C  0020               	movlb 0	; select bank0
 11004  1E5D  01DA               	clrf	(userinterface_work@update)
 11005  1E5E  1403               	bsf	status,0
 11006  1E5F  0DDA               	rlf	(userinterface_work@update),f
 11007                           	line	241
 11008                           ;userinterface.c: 241: break;
 11009  1E60  2E79               	goto	l8669
 11010                           	line	243
 11011                           ;userinterface.c: 243: default:
 11012                           	
 11013  1E61                     l8672:	
 11014                           	line	244
 11015                           ;userinterface.c: 244: break;
 11016  1E61  2E79               	goto	l8669
 11017                           	line	245
 11018                           	
 11019  1E62                     l38437:	
 11020                           ;userinterface.c: 245: }
 11021  1E62  2E79               	goto	l8669
 11022                           	line	224
 11023                           	
 11024  1E63                     l8667:	
 11025                           	
 11026  1E63                     l38439:	
 11027  1E63  0021               	movlb 1	; select bank1
 11028  1E64  0855               	movf	(_buttonmask_cum)^080h,w
 11029  1E65  3903               	andlw	03h
 11030  1E66  0020               	movlb 0	; select bank0
 11031  1E67  00D8               	movwf	(??_userinterface_work+0)+0
 11032  1E68  01D9               	clrf	(??_userinterface_work+0)+0+1
 11033                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11034                           ; Switch size 1, requested type "space"
 11035                           ; Number of cases is 1, Range of values is 0 to 0
 11036                           ; switch strategies available:
 11037                           ; Name         Instructions Cycles
 11038                           ; simple_byte            4     3 (average)
 11039                           ; direct_byte            8     6 (fixed)
 11040                           ; jumptable            260     6 (fixed)
 11041                           ; rangetable             5     4 (fixed)
 11042                           ; spacedrange            7     6 (fixed)
 11043                           ; locatedrange           1     3 (fixed)
 11044                           ;	Chosen strategy is simple_byte
 11045                           
 11046  1E69  0859               	movf 1+(??_userinterface_work+0)+0,w
 11047                           	opt asmopt_off
 11048  1E6A  3A00               	xorlw	0^0	; case 0
 11049  1E6B  1903               	skipnz
 11050  1E6C  2E6E               	goto	l39239
 11051  1E6D  2E79               	goto	l8669
 11052                           	opt asmopt_on
 11053                           	
 11054  1E6E                     l39239:	
 11055                           ; Switch size 1, requested type "space"
 11056                           ; Number of cases is 3, Range of values is 1 to 3
 11057                           ; switch strategies available:
 11058                           ; Name         Instructions Cycles
 11059                           ; simple_byte           10     6 (average)
 11060                           ; direct_byte           15     9 (fixed)
 11061                           ; jumptable            263     9 (fixed)
 11062                           ;	Chosen strategy is simple_byte
 11063                           
 11064  1E6E  0858               	movf 0+(??_userinterface_work+0)+0,w
 11065                           	opt asmopt_off
 11066  1E6F  3A01               	xorlw	1^0	; case 1
 11067  1E70  1903               	skipnz
 11068  1E71  2E3D               	goto	l38421
 11069  1E72  3A03               	xorlw	2^1	; case 2
 11070  1E73  1903               	skipnz
 11071  1E74  2E49               	goto	l38425
 11072  1E75  3A01               	xorlw	3^2	; case 3
 11073  1E76  1903               	skipnz
 11074  1E77  2E55               	goto	l38431
 11075  1E78  2E79               	goto	l8669
 11076                           	opt asmopt_on
 11077                           
 11078                           	line	245
 11079                           	
 11080  1E79                     l8669:	
 11081                           	line	246
 11082                           ;userinterface.c: 246: longhandled = 1;
 11083  1E79  1671               	bsf	(_longhandled/8),(_longhandled)&7
 11084                           	line	247
 11085                           	
 11086  1E7A                     l38441:	
 11087                           ;userinterface.c: 247: timeoutnever(&holdtimeout);
 11088  1E7A  305E               	movlw	(_holdtimeout&0ffh)
 11089  1E7B  00A5               	movwf	(?_timeoutnever)
 11090  1E7C  3001               	movlw	0x2/2
 11091  1E7D  00A6               	movwf	(?_timeoutnever+1)
 11092  1E7E  31A9  2162  319D   	fcall	_timeoutnever
 11093  1E81  2E82               	goto	l38443
 11094                           	line	248
 11095                           	
 11096  1E82                     l8666:	
 11097                           	line	250
 11098                           	
 11099  1E82                     l38443:	
 11100                           ;userinterface.c: 248: }
 11101                           ;userinterface.c: 250: if (update)
 11102  1E82  0020               	movlb 0	; select bank0
 11103  1E83  085A               	movf	(userinterface_work@update),w
 11104  1E84  1D03               	skipz
 11105  1E85  2E87               	goto	u12340
 11106  1E86  2E8B               	goto	l8674
 11107  1E87                     u12340:
 11108                           	line	251
 11109                           	
 11110  1E87                     l38445:	
 11111                           ;userinterface.c: 251: update_display();
 11112  1E87  3189  218C  319D   	fcall	_update_display
 11113  1E8A  2E8B               	goto	l8674
 11114                           	
 11115  1E8B                     l8673:	
 11116                           	line	253
 11117                           	
 11118  1E8B                     l8674:	
 11119  1E8B  0008               	return
 11120                           	opt stack 0
 11121                           GLOBAL	__end_of_userinterface_work
 11122  1E8C                     	__end_of_userinterface_work:
 11123 ;; =============== function _userinterface_work ends ============
 11124                           
 11125                           	signat	_userinterface_work,88
 11126                           	global	_start_long
 11127                           psect	text3315,local,class=CODE,delta=2
 11128                           global __ptext3315
 11129  292C                     __ptext3315:
 11130                           
 11131 ;; *************** function _start_long *****************
 11132 ;; Defined at:
 11133 ;;		line 577 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;		None
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;		None               void
 11140 ;; Registers used:
 11141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11151 ;;Total ram usage:        1 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:    8
 11154 ;; This function calls:
 11155 ;;		_litterlanguage_running
 11156 ;;		_litterlanguage_start
 11157 ;;		_litterlanguage_stop
 11158 ;; This function is called by:
 11159 ;;		_userinterface_work
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           psect	text3315
 11163                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11164                           	line	577
 11165                           	global	__size_of_start_long
 11166  001A                     	__size_of_start_long	equ	__end_of_start_long-_start_long
 11167                           	
 11168  292C                     _start_long:	
 11169                           	opt	stack 6
 11170                           ; Regs used in _start_long: [allreg]
 11171                           	line	578
 11172                           	
 11173  292C                     l38337:	
 11174                           ;userinterface.c: 578: if (!litterlanguage_running()) {
 11175  292C  31B7  2723  31A9   	fcall	_litterlanguage_running
 11176  292F  3800               	iorlw	0
 11177  2930  1D03               	skipz
 11178  2931  2933               	goto	u12231
 11179  2932  2934               	goto	u12230
 11180  2933                     u12231:
 11181  2933  2941               	goto	l38345
 11182  2934                     u12230:
 11183                           	line	580
 11184                           	
 11185  2934                     l38339:	
 11186                           ;userinterface.c: 580: full_wash = 0;
 11187  2934  10F1               	bcf	(_full_wash/8),(_full_wash)&7
 11188                           	line	582
 11189                           	
 11190  2935                     l38341:	
 11191                           ;userinterface.c: 582: litterlanguage_start(full_wash);
 11192  2935  3000               	movlw	0
 11193  2936  18F1               	btfsc	(_full_wash/8),(_full_wash)&7
 11194  2937  3001               	movlw	1
 11195  2938  31AD  2517  31A9   	fcall	_litterlanguage_start
 11196                           	line	584
 11197                           	
 11198  293B                     l38343:	
 11199                           ;userinterface.c: 584: state = 2;
 11200  293B  3002               	movlw	(02h)
 11201  293C  0020               	movlb 0	; select bank0
 11202  293D  00D2               	movwf	(??_start_long+0)+0
 11203  293E  0852               	movf	(??_start_long+0)+0,w
 11204  293F  00E6               	movwf	(_state)
 11205                           	line	585
 11206                           ;userinterface.c: 585: } else
 11207  2940  2945               	goto	l8812
 11208                           	
 11209  2941                     l8810:	
 11210                           	line	587
 11211                           	
 11212  2941                     l38345:	
 11213                           ;userinterface.c: 587: litterlanguage_stop();
 11214  2941  31A1  219D  31A9   	fcall	_litterlanguage_stop
 11215  2944  2945               	goto	l8812
 11216                           	
 11217  2945                     l8811:	
 11218                           	line	588
 11219                           	
 11220  2945                     l8812:	
 11221  2945  0008               	return
 11222                           	opt stack 0
 11223                           GLOBAL	__end_of_start_long
 11224  2946                     	__end_of_start_long:
 11225 ;; =============== function _start_long ends ============
 11226                           
 11227                           	signat	_start_long,88
 11228                           	global	_start_short
 11229                           psect	text3316,local,class=CODE,delta=2
 11230                           global __ptext3316
 11231  2A12                     __ptext3316:
 11232                           
 11233 ;; *************** function _start_short *****************
 11234 ;; Defined at:
 11235 ;;		line 563 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;		None
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;		None
 11240 ;; Return value:  Size  Location     Type
 11241 ;;		None               void
 11242 ;; Registers used:
 11243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11252 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:    8
 11256 ;; This function calls:
 11257 ;;		_litterlanguage_running
 11258 ;;		_litterlanguage_start
 11259 ;;		_litterlanguage_paused
 11260 ;;		_litterlanguage_pause
 11261 ;; This function is called by:
 11262 ;;		_userinterface_work
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           psect	text3316
 11266                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 11267                           	line	563
 11268                           	global	__size_of_start_short
 11269  0021                     	__size_of_start_short	equ	__end_of_start_short-_start_short
 11270                           	
 11271  2A12                     _start_short:	
 11272                           	opt	stack 6
 11273                           ; Regs used in _start_short: [allreg]
 11274                           	line	564
 11275                           	
 11276  2A12                     l38327:	
 11277                           ;userinterface.c: 564: if (!litterlanguage_running()) {
 11278  2A12  31B7  2723  31AA   	fcall	_litterlanguage_running
 11279  2A15  3800               	iorlw	0
 11280  2A16  1D03               	skipz
 11281  2A17  2A19               	goto	u12221
 11282  2A18  2A1A               	goto	u12220
 11283  2A19                     u12221:
 11284  2A19  2A27               	goto	l38335
 11285  2A1A                     u12220:
 11286                           	line	566
 11287                           	
 11288  2A1A                     l38329:	
 11289                           ;userinterface.c: 566: full_wash = 1;
 11290  2A1A  14F1               	bsf	(_full_wash/8),(_full_wash)&7
 11291                           	line	568
 11292                           	
 11293  2A1B                     l38331:	
 11294                           ;userinterface.c: 568: litterlanguage_start(full_wash);
 11295  2A1B  3000               	movlw	0
 11296  2A1C  18F1               	btfsc	(_full_wash/8),(_full_wash)&7
 11297  2A1D  3001               	movlw	1
 11298  2A1E  31AD  2517  31AA   	fcall	_litterlanguage_start
 11299                           	line	570
 11300                           	
 11301  2A21                     l38333:	
 11302                           ;userinterface.c: 570: state = 2;
 11303  2A21  3002               	movlw	(02h)
 11304  2A22  0020               	movlb 0	; select bank0
 11305  2A23  00D7               	movwf	(??_start_short+0)+0
 11306  2A24  0857               	movf	(??_start_short+0)+0,w
 11307  2A25  00E6               	movwf	(_state)
 11308                           	line	571
 11309                           ;userinterface.c: 571: } else
 11310  2A26  2A32               	goto	l8807
 11311                           	
 11312  2A27                     l8805:	
 11313                           	line	573
 11314                           	
 11315  2A27                     l38335:	
 11316                           ;userinterface.c: 573: litterlanguage_pause(!litterlanguage_paused());
 11317  2A27  31B7  2706  31AA   	fcall	_litterlanguage_paused
 11318  2A2A  3A00               	xorlw	0&0ffh
 11319  2A2B  3000               	movlw	0
 11320  2A2C  1903               	skipnz
 11321  2A2D  3001               	movlw	1
 11322  2A2E  3192  2256  31AA   	fcall	_litterlanguage_pause
 11323  2A31  2A32               	goto	l8807
 11324                           	
 11325  2A32                     l8806:	
 11326                           	line	574
 11327                           	
 11328  2A32                     l8807:	
 11329  2A32  0008               	return
 11330                           	opt stack 0
 11331                           GLOBAL	__end_of_start_short
 11332  2A33                     	__end_of_start_short:
 11333 ;; =============== function _start_short ends ============
 11334                           
 11335                           	signat	_start_short,88
 11336                           	global	_catgenie_work
 11337                           psect	text3317,local,class=CODE,delta=2
 11338                           global __ptext3317
 11339  102B                     __ptext3317:
 11340                           
 11341 ;; *************** function _catgenie_work *****************
 11342 ;; Defined at:
 11343 ;;		line 232 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;		None
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;  mask            1   40[BANK0 ] unsigned char 
 11348 ;;  tempstate       1   42[BANK0 ] unsigned char 
 11349 ;;  temp            1   43[BANK0 ] unsigned char 
 11350 ;;  status          1   41[BANK0 ] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;		None               void
 11353 ;; Registers used:
 11354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11361 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 11362 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 11363 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0
 11364 ;;Total ram usage:       11 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:    8
 11367 ;; This function calls:
 11368 ;;		_heatsensor_event
 11369 ;;		_settimeout
 11370 ;;		___bmul
 11371 ;;		_timeoutexpired
 11372 ;;		_setupbutton_event
 11373 ;;		_startbutton_event
 11374 ;;		_timeoutnever
 11375 ;; This function is called by:
 11376 ;;		_main
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           psect	text3317
 11380                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 11381                           	line	232
 11382                           	global	__size_of_catgenie_work
 11383  022B                     	__size_of_catgenie_work	equ	__end_of_catgenie_work-_catgenie_work
 11384                           	
 11385  102B                     _catgenie_work:	
 11386                           	opt	stack 7
 11387                           ; Regs used in _catgenie_work: [allreg]
 11388                           	line	233
 11389                           	
 11390  102B                     l38255:	
 11391                           ;catgenie120.c: 233: unsigned char temp = 0;
 11392  102B  0020               	movlb 0	; select bank0
 11393  102C  01CC               	clrf	(catgenie_work@temp)
 11394                           	line	237
 11395                           	
 11396  102D                     l38257:	
 11397                           ;catgenie120.c: 234: unsigned char status;
 11398                           ;catgenie120.c: 237: temp = PORTB & (1U << (1));
 11399  102D  080D               	movf	(13),w	;volatile
 11400  102E  3902               	andlw	02h
 11401  102F  00C2               	movwf	(??_catgenie_work+0)+0
 11402  1030  0842               	movf	(??_catgenie_work+0)+0,w
 11403  1031  00CC               	movwf	(catgenie_work@temp)
 11404                           	line	238
 11405                           	
 11406  1032                     l38259:	
 11407                           ;catgenie120.c: 238: if (temp != heat_old) {
 11408  1032  3000               	movlw	0
 11409  1033  1971               	btfsc	(_heat_old/8),(_heat_old)&7
 11410  1034  3001               	movlw	1
 11411  1035  064C               	xorwf	(catgenie_work@temp),w
 11412  1036  1903               	skipnz
 11413  1037  2839               	goto	u12031
 11414  1038  283A               	goto	u12030
 11415  1039                     u12031:
 11416  1039  2844               	goto	l38265
 11417  103A                     u12030:
 11418                           	line	239
 11419                           	
 11420  103A                     l38261:	
 11421                           ;catgenie120.c: 239: heatsensor_event(temp);
 11422  103A  084C               	movf	(catgenie_work@temp),w
 11423  103B  31A8  2088  3190   	fcall	_heatsensor_event
 11424                           	line	240
 11425                           	
 11426  103E                     l38263:	
 11427                           ;catgenie120.c: 240: heat_old = temp;
 11428  103E  1171               	bcf	(_heat_old/8),(_heat_old)&7
 11429  103F  0020               	movlb 0	; select bank0
 11430  1040  1C4C               	btfss	(catgenie_work@temp),0
 11431  1041  2843               	goto	u12045
 11432  1042  1571               	bsf	(_heat_old/8),(_heat_old)&7
 11433  1043                     u12045:
 11434                           
 11435  1043  2844               	goto	l38265
 11436                           	line	241
 11437                           	
 11438  1044                     l10890:	
 11439                           	line	244
 11440                           	
 11441  1044                     l38265:	
 11442                           ;catgenie120.c: 241: }
 11443                           ;catgenie120.c: 244: status = PORTB;
 11444  1044  0020               	movlb 0	; select bank0
 11445  1045  080D               	movf	(13),w	;volatile
 11446  1046  00C2               	movwf	(??_catgenie_work+0)+0
 11447  1047  0842               	movf	(??_catgenie_work+0)+0,w
 11448  1048  00CA               	movwf	(catgenie_work@status)
 11449                           	line	245
 11450                           	
 11451  1049                     l38267:	
 11452                           ;catgenie120.c: 245: temp = status ^ PORTB_old;
 11453  1049  084A               	movf	(catgenie_work@status),w
 11454  104A  0021               	movlb 1	; select bank1
 11455  104B  065B               	xorwf	(catgenie120@PORTB_old)^080h,w
 11456  104C  0020               	movlb 0	; select bank0
 11457  104D  00C2               	movwf	(??_catgenie_work+0)+0
 11458  104E  0842               	movf	(??_catgenie_work+0)+0,w
 11459  104F  00CC               	movwf	(catgenie_work@temp)
 11460                           	line	246
 11461                           	
 11462  1050                     l38269:	
 11463                           ;catgenie120.c: 246: PORTB_old = status;
 11464  1050  084A               	movf	(catgenie_work@status),w
 11465  1051  00C2               	movwf	(??_catgenie_work+0)+0
 11466  1052  0842               	movf	(??_catgenie_work+0)+0,w
 11467  1053  0021               	movlb 1	; select bank1
 11468  1054  00DB               	movwf	(catgenie120@PORTB_old)^080h
 11469                           	line	247
 11470                           	
 11471  1055                     l38271:	
 11472                           ;catgenie120.c: 247: if (temp & (1U << ((0))))
 11473  1055  0020               	movlb 0	; select bank0
 11474  1056  1C4C               	btfss	(catgenie_work@temp),(0)&7
 11475  1057  2859               	goto	u12051
 11476  1058  285A               	goto	u12050
 11477  1059                     u12051:
 11478  1059  286A               	goto	l38275
 11479  105A                     u12050:
 11480                           	line	248
 11481                           	
 11482  105A                     l38273:	
 11483                           ;catgenie120.c: 248: settimeout(&debouncers[0].timer, (((((4UL * (1000UL * ((1000UL)))))
                                 /4)/8)/20));
 11484  105A  30BF               	movlw	(_debouncers&0ffh)
 11485  105B  00AD               	movwf	(?_settimeout)
 11486  105C  3001               	movlw	0x3/2
 11487  105D  00AE               	movwf	(?_settimeout+1)
 11488  105E  3000               	movlw	0
 11489  105F  00B2               	movwf	3+(?_settimeout)+02h
 11490  1060  3000               	movlw	0
 11491  1061  00B1               	movwf	2+(?_settimeout)+02h
 11492  1062  3018               	movlw	018h
 11493  1063  00B0               	movwf	1+(?_settimeout)+02h
 11494  1064  306A               	movlw	06Ah
 11495  1065  00AF               	movwf	0+(?_settimeout)+02h
 11496                           
 11497  1066  31A0  20CF  3190   	fcall	_settimeout
 11498  1069  286A               	goto	l38275
 11499                           	
 11500  106A                     l10891:	
 11501                           	line	249
 11502                           	
 11503  106A                     l38275:	
 11504                           ;catgenie120.c: 249: if (temp & (1U << ((5))))
 11505  106A  0020               	movlb 0	; select bank0
 11506  106B  1ECC               	btfss	(catgenie_work@temp),(5)&7
 11507  106C  286E               	goto	u12061
 11508  106D  286F               	goto	u12060
 11509  106E                     u12061:
 11510  106E  287F               	goto	l38279
 11511  106F                     u12060:
 11512                           	line	250
 11513                           	
 11514  106F                     l38277:	
 11515                           ;catgenie120.c: 250: settimeout(&debouncers[1].timer, (((((4UL * (1000UL * ((1000UL)))))
                                 /4)/8)/20));
 11516  106F  30C8               	movlw	(_debouncers+09h&0ffh)
 11517  1070  00AD               	movwf	(?_settimeout)
 11518  1071  3001               	movlw	0x3/2
 11519  1072  00AE               	movwf	(?_settimeout+1)
 11520  1073  3000               	movlw	0
 11521  1074  00B2               	movwf	3+(?_settimeout)+02h
 11522  1075  3000               	movlw	0
 11523  1076  00B1               	movwf	2+(?_settimeout)+02h
 11524  1077  3018               	movlw	018h
 11525  1078  00B0               	movwf	1+(?_settimeout)+02h
 11526  1079  306A               	movlw	06Ah
 11527  107A  00AF               	movwf	0+(?_settimeout)+02h
 11528                           
 11529  107B  31A0  20CF  3190   	fcall	_settimeout
 11530  107E  287F               	goto	l38279
 11531                           	
 11532  107F                     l10892:	
 11533                           	line	253
 11534                           	
 11535  107F                     l38279:	
 11536                           ;catgenie120.c: 253: for (temp = 0; temp < 2; temp++)
 11537  107F  0020               	movlb 0	; select bank0
 11538  1080  01CC               	clrf	(catgenie_work@temp)
 11539                           	
 11540  1081                     l38281:	
 11541  1081  3002               	movlw	(02h)
 11542  1082  024C               	subwf	(catgenie_work@temp),w
 11543  1083  1C03               	skipc
 11544  1084  2886               	goto	u12071
 11545  1085  2887               	goto	u12070
 11546  1086                     u12071:
 11547  1086  2889               	goto	l38285
 11548  1087                     u12070:
 11549  1087  292E               	goto	l10894
 11550                           	
 11551  1088                     l38283:	
 11552  1088  292E               	goto	l10894
 11553                           	line	254
 11554                           	
 11555  1089                     l10893:	
 11556                           	
 11557  1089                     l38285:	
 11558                           ;catgenie120.c: 254: if (timeoutexpired(&debouncers[temp].timer)) {
 11559  1089  3009               	movlw	(09h)
 11560  108A  00C2               	movwf	(??_catgenie_work+0)+0
 11561  108B  0842               	movf	(??_catgenie_work+0)+0,w
 11562  108C  00A1               	movwf	(?___bmul)
 11563  108D  084C               	movf	(catgenie_work@temp),w
 11564  108E  31A9  2112  3190   	fcall	___bmul
 11565  1091  3EBF               	addlw	_debouncers&0ffh
 11566  1092  0020               	movlb 0	; select bank0
 11567  1093  00A9               	movwf	(?_timeoutexpired)
 11568  1094  3001               	movlw	(0x2/2)
 11569  1095  00AA               	movwf	(?_timeoutexpired+1)
 11570  1096  31A3  234C  3190   	fcall	_timeoutexpired
 11571  1099  3A00               	xorlw	0&0ffh
 11572  109A  1903               	skipnz
 11573  109B  289D               	goto	u12081
 11574  109C  289E               	goto	u12080
 11575  109D                     u12081:
 11576  109D  2923               	goto	l38297
 11577  109E                     u12080:
 11578                           	line	255
 11579                           	
 11580  109E                     l38287:	
 11581                           ;catgenie120.c: 255: unsigned char tempstate = *debouncers[temp].port;
 11582  109E  3009               	movlw	(09h)
 11583  109F  0020               	movlb 0	; select bank0
 11584  10A0  00C2               	movwf	(??_catgenie_work+0)+0
 11585  10A1  0842               	movf	(??_catgenie_work+0)+0,w
 11586  10A2  00A1               	movwf	(?___bmul)
 11587  10A3  084C               	movf	(catgenie_work@temp),w
 11588  10A4  31A9  2112  3190   	fcall	___bmul
 11589  10A7  3E07               	addlw	07h
 11590  10A8  3EBF               	addlw	_debouncers&0ffh
 11591  10A9  0086               	movwf	fsr1l
 11592  10AA  3001               	movlw 1	; select bank3/4
 11593  10AB  0087               	movwf fsr1h	
 11594                           	
 11595  10AC  0801               	movf	indf1,w
 11596  10AD  0086               	movwf	fsr1l
 11597  10AE  0187               	clrf fsr1h	
 11598                           	
 11599  10AF  0801               	movf	indf1,w
 11600  10B0  0020               	movlb 0	; select bank0
 11601  10B1  00C3               	movwf	(??_catgenie_work+1)+0
 11602  10B2  0843               	movf	(??_catgenie_work+1)+0,w
 11603  10B3  00CB               	movwf	(catgenie_work@tempstate)
 11604                           	line	256
 11605                           ;catgenie120.c: 256: tempstate &= 1 << debouncers[temp].port_bit;
 11606  10B4  3001               	movlw	(01h)
 11607  10B5  00C2               	movwf	(??_catgenie_work+0)+0
 11608  10B6  3009               	movlw	(09h)
 11609  10B7  00C3               	movwf	(??_catgenie_work+1)+0
 11610  10B8  0843               	movf	(??_catgenie_work+1)+0,w
 11611  10B9  00A1               	movwf	(?___bmul)
 11612  10BA  084C               	movf	(catgenie_work@temp),w
 11613  10BB  31A9  2112  3190   	fcall	___bmul
 11614  10BE  3E06               	addlw	06h
 11615  10BF  3EBF               	addlw	_debouncers&0ffh
 11616  10C0  0086               	movwf	fsr1l
 11617  10C1  3001               	movlw 1	; select bank3/4
 11618  10C2  0087               	movwf fsr1h	
 11619                           	
 11620  10C3  0C01               	rrf	indf1,w
 11621  10C4  3907               	andlw	(1<<3)-1
 11622  10C5  0A89               	incf	wreg,f
 11623  10C6  0020               	movlb 0	; select bank0
 11624  10C7  28C9               	goto	u12094
 11625  10C8                     u12095:
 11626  10C8  35C2               	lslf	(??_catgenie_work+0)+0,f
 11627  10C9                     u12094:
 11628  10C9  0B89               	decfsz	wreg,f
 11629  10CA  28C8               	goto	u12095
 11630  10CB  0842               	movf	0+(??_catgenie_work+0)+0,w
 11631  10CC  00C4               	movwf	(??_catgenie_work+2)+0
 11632  10CD  0844               	movf	(??_catgenie_work+2)+0,w
 11633  10CE  05CB               	andwf	(catgenie_work@tempstate),f
 11634                           	line	258
 11635                           ;catgenie120.c: 258: if (tempstate != debouncers[temp].state) {
 11636  10CF  3009               	movlw	(09h)
 11637  10D0  00C2               	movwf	(??_catgenie_work+0)+0
 11638  10D1  0842               	movf	(??_catgenie_work+0)+0,w
 11639  10D2  00A1               	movwf	(?___bmul)
 11640  10D3  084C               	movf	(catgenie_work@temp),w
 11641  10D4  31A9  2112  3190   	fcall	___bmul
 11642  10D7  3E06               	addlw	06h
 11643  10D8  3EBF               	addlw	_debouncers&0ffh
 11644  10D9  0086               	movwf	fsr1l
 11645  10DA  3001               	movlw 1	; select bank3/4
 11646  10DB  0087               	movwf fsr1h	
 11647                           	
 11648  10DC  0801               	movf	indf1,w
 11649  10DD  3901               	andlw	(1<<1)-1
 11650  10DE  0020               	movlb 0	; select bank0
 11651  10DF  064B               	xorwf	(catgenie_work@tempstate),w
 11652  10E0  1903               	skipnz
 11653  10E1  28E3               	goto	u12101
 11654  10E2  28E4               	goto	u12100
 11655  10E3                     u12101:
 11656  10E3  2912               	goto	l38295
 11657  10E4                     u12100:
 11658                           	line	260
 11659                           	
 11660  10E4                     l38289:	
 11661                           ;catgenie120.c: 260: debouncers[temp].handler(tempstate);
 11662  10E4  3009               	movlw	(09h)
 11663  10E5  00C2               	movwf	(??_catgenie_work+0)+0
 11664  10E6  0842               	movf	(??_catgenie_work+0)+0,w
 11665  10E7  00A1               	movwf	(?___bmul)
 11666  10E8  084C               	movf	(catgenie_work@temp),w
 11667  10E9  31A9  2112  3190   	fcall	___bmul
 11668  10EC  3E08               	addlw	08h
 11669  10ED  3EBF               	addlw	_debouncers&0ffh
 11670  10EE  0086               	movwf	fsr1l
 11671  10EF  3001               	movlw 1	; select bank3/4
 11672  10F0  0087               	movwf fsr1h	
 11673                           	
 11674  10F1  0801               	movf	indf1,w
 11675  10F2  0020               	movlb 0	; select bank0
 11676  10F3  00C3               	movwf	(??_catgenie_work+1)+0
 11677  10F4  0843               	movf	(??_catgenie_work+1)+0,w
 11678  10F5  00C8               	movwf	(_catgenie_work$30516)
 11679                           	
 11680  10F6                     l38291:	
 11681                           ;catgenie120.c: 260: debouncers[temp].handler(tempstate);
 11682  10F6  084B               	movf	(catgenie_work@tempstate),w
 11683  10F7  00C2               	movwf	(??_catgenie_work+0)+0
 11684  10F8  0842               	movf	(??_catgenie_work+0)+0,w
 11685  10F9  00C0               	movwf	(?_setupbutton_event)
 11686  10FA  0848               	movf	(_catgenie_work$30516),w
 11687  10FB  3181  2100  3190   	fcall	fptable
 11688                           	line	261
 11689                           	
 11690  10FE                     l38293:	
 11691                           ;catgenie120.c: 261: debouncers[temp].state = tempstate;
 11692  10FE  3009               	movlw	(09h)
 11693  10FF  0020               	movlb 0	; select bank0
 11694  1100  00C2               	movwf	(??_catgenie_work+0)+0
 11695  1101  0842               	movf	(??_catgenie_work+0)+0,w
 11696  1102  00A1               	movwf	(?___bmul)
 11697  1103  084C               	movf	(catgenie_work@temp),w
 11698  1104  31A9  2112  3190   	fcall	___bmul
 11699  1107  3E06               	addlw	06h
 11700  1108  3EBF               	addlw	_debouncers&0ffh
 11701  1109  0086               	movwf	fsr1l
 11702  110A  3001               	movlw 1	; select bank3/4
 11703  110B  0087               	movwf fsr1h	
 11704                           	
 11705  110C  0020               	movlb 0	; select bank0
 11706  110D  084B               	movf	(catgenie_work@tempstate),w
 11707  110E  1001               	bcf	indf1,0
 11708  110F  1D03               	skipz
 11709  1110  1401               	bsf	indf1,0
 11710  1111  2912               	goto	l38295
 11711                           	line	262
 11712                           	
 11713  1112                     l10896:	
 11714                           	line	263
 11715                           	
 11716  1112                     l38295:	
 11717                           ;catgenie120.c: 262: }
 11718                           ;catgenie120.c: 263: timeoutnever(&debouncers[temp].timer);
 11719  1112  3009               	movlw	(09h)
 11720  1113  00C2               	movwf	(??_catgenie_work+0)+0
 11721  1114  0842               	movf	(??_catgenie_work+0)+0,w
 11722  1115  00A1               	movwf	(?___bmul)
 11723  1116  084C               	movf	(catgenie_work@temp),w
 11724  1117  31A9  2112  3190   	fcall	___bmul
 11725  111A  3EBF               	addlw	_debouncers&0ffh
 11726  111B  0020               	movlb 0	; select bank0
 11727  111C  00A5               	movwf	(?_timeoutnever)
 11728  111D  3001               	movlw	(0x3/2)
 11729  111E  00A6               	movwf	(?_timeoutnever+1)
 11730  111F  31A9  2162  3190   	fcall	_timeoutnever
 11731  1122  2923               	goto	l38297
 11732                           	line	264
 11733                           	
 11734  1123                     l10895:	
 11735                           	line	253
 11736                           	
 11737  1123                     l38297:	
 11738  1123  3001               	movlw	(01h)
 11739  1124  0020               	movlb 0	; select bank0
 11740  1125  00C2               	movwf	(??_catgenie_work+0)+0
 11741  1126  0842               	movf	(??_catgenie_work+0)+0,w
 11742  1127  07CC               	addwf	(catgenie_work@temp),f
 11743                           	
 11744  1128                     l38299:	
 11745  1128  3002               	movlw	(02h)
 11746  1129  024C               	subwf	(catgenie_work@temp),w
 11747  112A  1C03               	skipc
 11748  112B  292D               	goto	u12111
 11749  112C  292E               	goto	u12110
 11750  112D                     u12111:
 11751  112D  2889               	goto	l38285
 11752  112E                     u12110:
 11753                           	
 11754  112E                     l10894:	
 11755                           	line	267
 11756                           ;catgenie120.c: 264: }
 11757                           ;catgenie120.c: 267: for (temp = 0; temp < 6; temp++)
 11758  112E  01CC               	clrf	(catgenie_work@temp)
 11759                           	
 11760  112F                     l38301:	
 11761  112F  3006               	movlw	(06h)
 11762  1130  024C               	subwf	(catgenie_work@temp),w
 11763  1131  1C03               	skipc
 11764  1132  2934               	goto	u12121
 11765  1133  2935               	goto	u12120
 11766  1134                     u12121:
 11767  1134  2937               	goto	l38305
 11768  1135                     u12120:
 11769  1135  2A46               	goto	l38321
 11770                           	
 11771  1136                     l38303:	
 11772  1136  2A46               	goto	l38321
 11773                           	line	268
 11774                           	
 11775  1137                     l10897:	
 11776                           	
 11777  1137                     l38305:	
 11778                           ;catgenie120.c: 268: if (timeoutexpired(&pacers[temp].timer)) {
 11779  1137  300A               	movlw	(0Ah)
 11780  1138  00C2               	movwf	(??_catgenie_work+0)+0
 11781  1139  0842               	movf	(??_catgenie_work+0)+0,w
 11782  113A  00A1               	movwf	(?___bmul)
 11783  113B  084C               	movf	(catgenie_work@temp),w
 11784  113C  31A9  2112  3190   	fcall	___bmul
 11785  113F  3E20               	addlw	_pacers&0ffh
 11786  1140  0020               	movlb 0	; select bank0
 11787  1141  00A9               	movwf	(?_timeoutexpired)
 11788  1142  3002               	movlw	(0x4/2)
 11789  1143  00AA               	movwf	(?_timeoutexpired+1)
 11790  1144  31A3  234C  3190   	fcall	_timeoutexpired
 11791  1147  3A00               	xorlw	0&0ffh
 11792  1148  1903               	skipnz
 11793  1149  294B               	goto	u12131
 11794  114A  294C               	goto	u12130
 11795  114B                     u12131:
 11796  114B  2A3A               	goto	l38317
 11797  114C                     u12130:
 11798                           	line	269
 11799                           	
 11800  114C                     l38307:	
 11801                           ;catgenie120.c: 269: unsigned char mask = 1 << pacers[temp].pattern_bit;
 11802  114C  3001               	movlw	(01h)
 11803  114D  0020               	movlb 0	; select bank0
 11804  114E  00C2               	movwf	(??_catgenie_work+0)+0
 11805  114F  300A               	movlw	(0Ah)
 11806  1150  00C3               	movwf	(??_catgenie_work+1)+0
 11807  1151  0843               	movf	(??_catgenie_work+1)+0,w
 11808  1152  00A1               	movwf	(?___bmul)
 11809  1153  084C               	movf	(catgenie_work@temp),w
 11810  1154  31A9  2112  3190   	fcall	___bmul
 11811  1157  3E07               	addlw	07h
 11812  1158  3E20               	addlw	_pacers&0ffh
 11813  1159  0086               	movwf	fsr1l
 11814  115A  3002               	movlw 2	; select bank4/5
 11815  115B  0087               	movwf fsr1h	
 11816                           	
 11817  115C  0801               	movf	indf1,w
 11818  115D  3907               	andlw	(1<<3)-1
 11819  115E  0A89               	incf	wreg,f
 11820  115F  0020               	movlb 0	; select bank0
 11821  1160  2962               	goto	u12144
 11822  1161                     u12145:
 11823  1161  35C2               	lslf	(??_catgenie_work+0)+0,f
 11824  1162                     u12144:
 11825  1162  0B89               	decfsz	wreg,f
 11826  1163  2961               	goto	u12145
 11827  1164  0842               	movf	0+(??_catgenie_work+0)+0,w
 11828  1165  00C4               	movwf	(??_catgenie_work+2)+0
 11829  1166  0844               	movf	(??_catgenie_work+2)+0,w
 11830  1167  00C9               	movwf	(catgenie_work@mask)
 11831                           	line	272
 11832                           ;catgenie120.c: 272: settimeout(&pacers[temp].timer, (((((4UL * (1000UL * ((1000UL)))))/
                                 4)/8)/8));
 11833  1168  300A               	movlw	(0Ah)
 11834  1169  00C2               	movwf	(??_catgenie_work+0)+0
 11835  116A  0842               	movf	(??_catgenie_work+0)+0,w
 11836  116B  00A1               	movwf	(?___bmul)
 11837  116C  084C               	movf	(catgenie_work@temp),w
 11838  116D  31A9  2112  3190   	fcall	___bmul
 11839  1170  3E20               	addlw	_pacers&0ffh
 11840  1171  0020               	movlb 0	; select bank0
 11841  1172  00AD               	movwf	(?_settimeout)
 11842  1173  3002               	movlw	(0x4/2)
 11843  1174  00AE               	movwf	(?_settimeout+1)
 11844  1175  3000               	movlw	0
 11845  1176  00B2               	movwf	3+(?_settimeout)+02h
 11846  1177  3000               	movlw	0
 11847  1178  00B1               	movwf	2+(?_settimeout)+02h
 11848  1179  303D               	movlw	03Dh
 11849  117A  00B0               	movwf	1+(?_settimeout)+02h
 11850  117B  3009               	movlw	09h
 11851  117C  00AF               	movwf	0+(?_settimeout)+02h
 11852                           
 11853  117D  31A0  20CF  3190   	fcall	_settimeout
 11854                           	line	274
 11855                           ;catgenie120.c: 274: if (pacers[temp].pattern & mask)
 11856  1180  300A               	movlw	(0Ah)
 11857  1181  0020               	movlb 0	; select bank0
 11858  1182  00C2               	movwf	(??_catgenie_work+0)+0
 11859  1183  0842               	movf	(??_catgenie_work+0)+0,w
 11860  1184  00A1               	movwf	(?___bmul)
 11861  1185  084C               	movf	(catgenie_work@temp),w
 11862  1186  31A9  2112  3190   	fcall	___bmul
 11863  1189  3E06               	addlw	06h
 11864  118A  3E20               	addlw	_pacers&0ffh
 11865  118B  0086               	movwf	fsr1l
 11866  118C  3002               	movlw 2	; select bank4/5
 11867  118D  0087               	movwf fsr1h	
 11868                           	
 11869  118E  0801               	movf	indf1,w
 11870  118F  0020               	movlb 0	; select bank0
 11871  1190  0549               	andwf	(catgenie_work@mask),w
 11872  1191  1903               	btfsc	status,2
 11873  1192  2994               	goto	u12151
 11874  1193  2995               	goto	u12150
 11875  1194                     u12151:
 11876  1194  29C7               	goto	l38311
 11877  1195                     u12150:
 11878                           	line	275
 11879                           	
 11880  1195                     l38309:	
 11881                           ;catgenie120.c: 275: *pacers[temp].port |= (1 << pacers[temp].port_bit);
 11882  1195  3001               	movlw	(01h)
 11883  1196  00C2               	movwf	(??_catgenie_work+0)+0
 11884  1197  300A               	movlw	(0Ah)
 11885  1198  00C3               	movwf	(??_catgenie_work+1)+0
 11886  1199  0843               	movf	(??_catgenie_work+1)+0,w
 11887  119A  00A1               	movwf	(?___bmul)
 11888  119B  084C               	movf	(catgenie_work@temp),w
 11889  119C  31A9  2112  3190   	fcall	___bmul
 11890  119F  3E07               	addlw	07h
 11891  11A0  3E20               	addlw	_pacers&0ffh
 11892  11A1  0086               	movwf	fsr1l
 11893  11A2  3002               	movlw 2	; select bank4/5
 11894  11A3  0087               	movwf fsr1h	
 11895                           	
 11896  11A4  0E01               	swapf	indf1,w
 11897  11A5  3907               	andlw	(1<<3)-1
 11898  11A6  0A89               	incf	wreg,f
 11899  11A7  0020               	movlb 0	; select bank0
 11900  11A8  29AA               	goto	u12164
 11901  11A9                     u12165:
 11902  11A9  35C2               	lslf	(??_catgenie_work+0)+0,f
 11903  11AA                     u12164:
 11904  11AA  0B89               	decfsz	wreg,f
 11905  11AB  29A9               	goto	u12165
 11906  11AC  0842               	movf	0+(??_catgenie_work+0)+0,w
 11907  11AD  00C4               	movwf	(??_catgenie_work+2)+0
 11908  11AE  300A               	movlw	(0Ah)
 11909  11AF  00C5               	movwf	(??_catgenie_work+3)+0
 11910  11B0  0845               	movf	(??_catgenie_work+3)+0,w
 11911  11B1  00A1               	movwf	(?___bmul)
 11912  11B2  084C               	movf	(catgenie_work@temp),w
 11913  11B3  31A9  2112  3190   	fcall	___bmul
 11914  11B6  3E08               	addlw	08h
 11915  11B7  3E20               	addlw	_pacers&0ffh
 11916  11B8  0086               	movwf	fsr1l
 11917  11B9  3002               	movlw 2	; select bank4/5
 11918  11BA  0087               	movwf fsr1h	
 11919                           	
 11920  11BB  3F40               	moviw	[0]fsr1
 11921  11BC  0020               	movlb 0	; select bank0
 11922  11BD  00C6               	movwf	(??_catgenie_work+4)+0
 11923  11BE  3F41               	moviw	[1]fsr1
 11924  11BF  00C7               	movwf	(??_catgenie_work+4)+0+1
 11925  11C0  0846               	movf	0+(??_catgenie_work+4)+0,w
 11926  11C1  0086               	movwf	fsr1l
 11927  11C2  0847               	movf	1+(??_catgenie_work+4)+0,w
 11928  11C3  0087               	movwf	fsr1h
 11929                           
 11930  11C4  0844               	movf	(??_catgenie_work+2)+0,w
 11931  11C5  0481               	iorwf	indf1,f
 11932  11C6  29F9               	goto	l10901
 11933                           	line	276
 11934                           	
 11935  11C7                     l10900:	
 11936                           	line	277
 11937                           	
 11938  11C7                     l38311:	
 11939                           ;catgenie120.c: 276: else
 11940                           ;catgenie120.c: 277: *pacers[temp].port &= ~(1 << pacers[temp].port_bit);
 11941  11C7  3001               	movlw	(01h)
 11942  11C8  00C2               	movwf	(??_catgenie_work+0)+0
 11943  11C9  300A               	movlw	(0Ah)
 11944  11CA  00C3               	movwf	(??_catgenie_work+1)+0
 11945  11CB  0843               	movf	(??_catgenie_work+1)+0,w
 11946  11CC  00A1               	movwf	(?___bmul)
 11947  11CD  084C               	movf	(catgenie_work@temp),w
 11948  11CE  31A9  2112  3190   	fcall	___bmul
 11949  11D1  3E07               	addlw	07h
 11950  11D2  3E20               	addlw	_pacers&0ffh
 11951  11D3  0086               	movwf	fsr1l
 11952  11D4  3002               	movlw 2	; select bank4/5
 11953  11D5  0087               	movwf fsr1h	
 11954                           	
 11955  11D6  0E01               	swapf	indf1,w
 11956  11D7  3907               	andlw	(1<<3)-1
 11957  11D8  0A89               	incf	wreg,f
 11958  11D9  0020               	movlb 0	; select bank0
 11959  11DA  29DC               	goto	u12174
 11960  11DB                     u12175:
 11961  11DB  35C2               	lslf	(??_catgenie_work+0)+0,f
 11962  11DC                     u12174:
 11963  11DC  0B89               	decfsz	wreg,f
 11964  11DD  29DB               	goto	u12175
 11965  11DE  0842               	movf	0+(??_catgenie_work+0)+0,w
 11966  11DF  3AFF               	xorlw	0ffh
 11967  11E0  00C4               	movwf	(??_catgenie_work+2)+0
 11968  11E1  300A               	movlw	(0Ah)
 11969  11E2  00C5               	movwf	(??_catgenie_work+3)+0
 11970  11E3  0845               	movf	(??_catgenie_work+3)+0,w
 11971  11E4  00A1               	movwf	(?___bmul)
 11972  11E5  084C               	movf	(catgenie_work@temp),w
 11973  11E6  31A9  2112  3190   	fcall	___bmul
 11974  11E9  3E08               	addlw	08h
 11975  11EA  3E20               	addlw	_pacers&0ffh
 11976  11EB  0086               	movwf	fsr1l
 11977  11EC  3002               	movlw 2	; select bank4/5
 11978  11ED  0087               	movwf fsr1h	
 11979                           	
 11980  11EE  3F40               	moviw	[0]fsr1
 11981  11EF  0020               	movlb 0	; select bank0
 11982  11F0  00C6               	movwf	(??_catgenie_work+4)+0
 11983  11F1  3F41               	moviw	[1]fsr1
 11984  11F2  00C7               	movwf	(??_catgenie_work+4)+0+1
 11985  11F3  0846               	movf	0+(??_catgenie_work+4)+0,w
 11986  11F4  0086               	movwf	fsr1l
 11987  11F5  0847               	movf	1+(??_catgenie_work+4)+0,w
 11988  11F6  0087               	movwf	fsr1h
 11989                           
 11990  11F7  0844               	movf	(??_catgenie_work+2)+0,w
 11991  11F8  0581               	andwf	indf1,f
 11992                           	
 11993  11F9                     l10901:	
 11994                           	line	279
 11995                           ;catgenie120.c: 279: if (!++pacers[temp].pattern_bit) {
 11996  11F9  300A               	movlw	(0Ah)
 11997  11FA  00C2               	movwf	(??_catgenie_work+0)+0
 11998  11FB  0842               	movf	(??_catgenie_work+0)+0,w
 11999  11FC  00A1               	movwf	(?___bmul)
 12000  11FD  084C               	movf	(catgenie_work@temp),w
 12001  11FE  31A9  2112  3190   	fcall	___bmul
 12002  1201  3E07               	addlw	07h
 12003  1202  3E20               	addlw	_pacers&0ffh
 12004  1203  0086               	movwf	fsr1l
 12005  1204  3002               	movlw 2	; select bank4/5
 12006  1205  0087               	movwf fsr1h	
 12007                           	
 12008  1206  0801               	movf	indf1,w
 12009  1207  3907               	andlw	(1<<3)-1
 12010  1208  0020               	movlb 0	; select bank0
 12011  1209  00C3               	movwf	((??_catgenie_work+1)+0)
 12012  120A  0AC3               	incf	(??_catgenie_work+1)+0
 12013  120B  0801               	movf	indf1,w
 12014  120C  0643               	xorwf	((??_catgenie_work+1)+0),w
 12015  120D  39F8               	andlw	not ((1<<3)-1)
 12016  120E  0643               	xorwf	((??_catgenie_work+1)+0),w
 12017  120F  0081               	movwf	indf1
 12018  1210  0801               	movf	indf1,w
 12019  1211  3907               	andlw	(1<<3)-1
 12020  1212  3800               	iorlw	0
 12021  1213  1D03               	skipz
 12022  1214  2A16               	goto	u12181
 12023  1215  2A17               	goto	u12180
 12024  1216                     u12181:
 12025  1216  2A3A               	goto	l38317
 12026  1217                     u12180:
 12027                           	line	281
 12028                           	
 12029  1217                     l38313:	
 12030                           ;catgenie120.c: 281: if (!pacers[temp].repeat)
 12031  1217  300A               	movlw	(0Ah)
 12032  1218  00C2               	movwf	(??_catgenie_work+0)+0
 12033  1219  0842               	movf	(??_catgenie_work+0)+0,w
 12034  121A  00A1               	movwf	(?___bmul)
 12035  121B  084C               	movf	(catgenie_work@temp),w
 12036  121C  31A9  2112  3190   	fcall	___bmul
 12037  121F  3E07               	addlw	07h
 12038  1220  3E20               	addlw	_pacers&0ffh
 12039  1221  0086               	movwf	fsr1l
 12040  1222  3002               	movlw 2	; select bank4/5
 12041  1223  0087               	movwf fsr1h	
 12042                           	
 12043  1224  1981               	btfsc	indf1,3
 12044  1225  2A27               	goto	u12191
 12045  1226  2A28               	goto	u12190
 12046  1227                     u12191:
 12047  1227  2A3A               	goto	l38317
 12048  1228                     u12190:
 12049                           	line	282
 12050                           	
 12051  1228                     l38315:	
 12052                           ;catgenie120.c: 282: pacers[temp].pattern = 0;
 12053  1228  300A               	movlw	(0Ah)
 12054  1229  0020               	movlb 0	; select bank0
 12055  122A  00C2               	movwf	(??_catgenie_work+0)+0
 12056  122B  0842               	movf	(??_catgenie_work+0)+0,w
 12057  122C  00A1               	movwf	(?___bmul)
 12058  122D  084C               	movf	(catgenie_work@temp),w
 12059  122E  31A9  2112  3190   	fcall	___bmul
 12060  1231  3E06               	addlw	06h
 12061  1232  3E20               	addlw	_pacers&0ffh
 12062  1233  0086               	movwf	fsr1l
 12063  1234  3002               	movlw 2	; select bank4/5
 12064  1235  0087               	movwf fsr1h	
 12065                           	
 12066  1236  0181               	clrf	indf1
 12067  1237  2A3A               	goto	l38317
 12068                           	
 12069  1238                     l10903:	
 12070  1238  2A3A               	goto	l38317
 12071                           	line	283
 12072                           	
 12073  1239                     l10902:	
 12074  1239  2A3A               	goto	l38317
 12075                           	line	284
 12076                           	
 12077  123A                     l10899:	
 12078                           	line	267
 12079                           	
 12080  123A                     l38317:	
 12081  123A  3001               	movlw	(01h)
 12082  123B  0020               	movlb 0	; select bank0
 12083  123C  00C2               	movwf	(??_catgenie_work+0)+0
 12084  123D  0842               	movf	(??_catgenie_work+0)+0,w
 12085  123E  07CC               	addwf	(catgenie_work@temp),f
 12086                           	
 12087  123F                     l38319:	
 12088  123F  3006               	movlw	(06h)
 12089  1240  024C               	subwf	(catgenie_work@temp),w
 12090  1241  1C03               	skipc
 12091  1242  2A44               	goto	u12201
 12092  1243  2A45               	goto	u12200
 12093  1244                     u12201:
 12094  1244  2937               	goto	l38305
 12095  1245                     u12200:
 12096  1245  2A46               	goto	l38321
 12097                           	
 12098  1246                     l10898:	
 12099                           	line	287
 12100                           	
 12101  1246                     l38321:	
 12102                           ;catgenie120.c: 283: }
 12103                           ;catgenie120.c: 284: }
 12104                           ;catgenie120.c: 287: if (beep_bits)
 12105  1246  0021               	movlb 1	; select bank1
 12106  1247  085D               	movf	(_beep_bits)^080h,w
 12107  1248  1D03               	skipz
 12108  1249  2A4B               	goto	u12210
 12109  124A  2A4E               	goto	l38325
 12110  124B                     u12210:
 12111                           	line	288
 12112                           	
 12113  124B                     l38323:	
 12114                           ;catgenie120.c: 288: LATC |= (1U << (1));
 12115  124B  0022               	movlb 2	; select bank2
 12116  124C  148E               	bsf	(270)^0100h+(1/8),(1)&7	;volatile
 12117  124D  2A55               	goto	l10906
 12118                           	line	289
 12119                           	
 12120  124E                     l10904:	
 12121                           	line	290
 12122                           	
 12123  124E                     l38325:	
 12124                           ;catgenie120.c: 289: else
 12125                           ;catgenie120.c: 290: LATC &= ~(1U << (1));
 12126  124E  30FD               	movlw	(0FDh)
 12127  124F  0020               	movlb 0	; select bank0
 12128  1250  00C2               	movwf	(??_catgenie_work+0)+0
 12129  1251  0842               	movf	(??_catgenie_work+0)+0,w
 12130  1252  0022               	movlb 2	; select bank2
 12131  1253  058E               	andwf	(270)^0100h,f	;volatile
 12132  1254  2A55               	goto	l10906
 12133                           	
 12134  1255                     l10905:	
 12135                           	line	291
 12136                           	
 12137  1255                     l10906:	
 12138  1255  0008               	return
 12139                           	opt stack 0
 12140                           GLOBAL	__end_of_catgenie_work
 12141  1256                     	__end_of_catgenie_work:
 12142 ;; =============== function _catgenie_work ends ============
 12143                           
 12144                           	signat	_catgenie_work,88
 12145                           	global	_water_work
 12146                           psect	text3318,local,class=CODE,delta=2
 12147                           global __ptext3318
 12148  010B                     __ptext3318:
 12149                           
 12150 ;; *************** function _water_work *****************
 12151 ;; Defined at:
 12152 ;;		line 125 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;		None
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;		None
 12157 ;; Return value:  Size  Location     Type
 12158 ;;		None               void
 12159 ;; Registers used:
 12160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12170 ;;Total ram usage:        1 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:    8
 12173 ;; This function calls:
 12174 ;;		_timeoutexpired
 12175 ;;		_settimeout
 12176 ;;		_waterdetection_event
 12177 ;;		_watersensor_event
 12178 ;; This function is called by:
 12179 ;;		_main
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           psect	text3318
 12183                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 12184                           	line	125
 12185                           	global	__size_of_water_work
 12186  00E2                     	__size_of_water_work	equ	__end_of_water_work-_water_work
 12187                           	
 12188  010B                     _water_work:	
 12189                           	opt	stack 7
 12190                           ; Regs used in _water_work: [allreg]
 12191                           	line	129
 12192                           	
 12193  010B                     l38193:	
 12194                           ;water.c: 126: static unsigned int cur_reflectionquality = 0;
 12195                           ;water.c: 127: static unsigned int old_reflectionquality = 0;
 12196                           ;water.c: 129: switch (state) {
 12197  010B  29E0               	goto	l38253
 12198                           	line	130
 12199                           ;water.c: 130: default:
 12200                           	
 12201  010C                     l23482:	
 12202                           	line	131
 12203                           ;water.c: 131: state = 0;
 12204  010C  01DC               	clrf	(water@state)^080h
 12205  010D  290E               	goto	l38195
 12206                           	line	132
 12207                           ;water.c: 132: case 0:
 12208                           	
 12209  010E                     l23483:	
 12210                           	line	133
 12211                           	
 12212  010E                     l38195:	
 12213                           ;water.c: 133: if (!timeoutexpired(&sensortimer))
 12214  010E  3052               	movlw	(_sensortimer&0ffh)
 12215  010F  0020               	movlb 0	; select bank0
 12216  0110  00A9               	movwf	(?_timeoutexpired)
 12217  0111  3001               	movlw	0x2/2
 12218  0112  00AA               	movwf	(?_timeoutexpired+1)
 12219  0113  31A3  234C  3181   	fcall	_timeoutexpired
 12220  0116  3800               	iorlw	0
 12221  0117  1D03               	skipz
 12222  0118  291A               	goto	u11901
 12223  0119  291B               	goto	u11900
 12224  011A                     u11901:
 12225  011A  291D               	goto	l23484
 12226  011B                     u11900:
 12227  011B  29EC               	goto	l23496
 12228                           	line	134
 12229                           	
 12230  011C                     l38197:	
 12231                           ;water.c: 134: break;
 12232  011C  29EC               	goto	l23496
 12233                           	
 12234  011D                     l23484:	
 12235                           	line	136
 12236                           ;water.c: 136: LATB |= (1U << (2));
 12237  011D  0022               	movlb 2	; select bank2
 12238  011E  150D               	bsf	(269)^0100h+(2/8),(2)&7	;volatile
 12239                           	line	138
 12240                           	
 12241  011F                     l38199:	
 12242                           ;water.c: 138: settimeout(&sensortimer, (((((4UL * (1000UL * ((1000UL)))))/4)/8)/1000));
 12243  011F  3052               	movlw	(_sensortimer&0ffh)
 12244  0120  0020               	movlb 0	; select bank0
 12245  0121  00AD               	movwf	(?_settimeout)
 12246  0122  3001               	movlw	0x2/2
 12247  0123  00AE               	movwf	(?_settimeout+1)
 12248  0124  3000               	movlw	0
 12249  0125  00B2               	movwf	3+(?_settimeout)+02h
 12250  0126  3000               	movlw	0
 12251  0127  00B1               	movwf	2+(?_settimeout)+02h
 12252  0128  3000               	movlw	0
 12253  0129  00B0               	movwf	1+(?_settimeout)+02h
 12254  012A  307D               	movlw	07Dh
 12255  012B  00AF               	movwf	0+(?_settimeout)+02h
 12256                           
 12257  012C  31A0  20CF  3181   	fcall	_settimeout
 12258                           	line	140
 12259                           	
 12260  012F                     l38201:	
 12261                           ;water.c: 140: state = 1;
 12262  012F  0021               	movlb 1	; select bank1
 12263  0130  01DC               	clrf	(water@state)^080h
 12264  0131  1403               	bsf	status,0
 12265  0132  0DDC               	rlf	(water@state)^080h,f
 12266                           	line	144
 12267                           ;water.c: 144: break;
 12268  0133  29EC               	goto	l23496
 12269                           	line	145
 12270                           ;water.c: 145: case 1:
 12271                           	
 12272  0134                     l23486:	
 12273                           	line	146
 12274                           	
 12275  0134                     l38203:	
 12276                           ;water.c: 146: if (!timeoutexpired(&sensortimer))
 12277  0134  3052               	movlw	(_sensortimer&0ffh)
 12278  0135  0020               	movlb 0	; select bank0
 12279  0136  00A9               	movwf	(?_timeoutexpired)
 12280  0137  3001               	movlw	0x2/2
 12281  0138  00AA               	movwf	(?_timeoutexpired+1)
 12282  0139  31A3  234C  3181   	fcall	_timeoutexpired
 12283  013C  3800               	iorlw	0
 12284  013D  1D03               	skipz
 12285  013E  2940               	goto	u11911
 12286  013F  2941               	goto	u11910
 12287  0140                     u11911:
 12288  0140  2943               	goto	l23487
 12289  0141                     u11910:
 12290  0141  29EC               	goto	l23496
 12291                           	line	147
 12292                           	
 12293  0142                     l38205:	
 12294                           ;water.c: 147: break;
 12295  0142  29EC               	goto	l23496
 12296                           	
 12297  0143                     l23487:	
 12298                           	line	149
 12299                           ;water.c: 149: ADCON0bits.GO = 1;
 12300  0143  0021               	movlb 1	; select bank1
 12301  0144  149D               	bsf	(157)^080h,1	;volatile
 12302                           	line	150
 12303                           	
 12304  0145                     l38207:	
 12305                           ;water.c: 150: state = 2;
 12306  0145  3002               	movlw	(02h)
 12307  0146  0020               	movlb 0	; select bank0
 12308  0147  00D3               	movwf	(??_water_work+0)+0
 12309  0148  0853               	movf	(??_water_work+0)+0,w
 12310  0149  0021               	movlb 1	; select bank1
 12311  014A  00DC               	movwf	(water@state)^080h
 12312                           	line	151
 12313                           ;water.c: 151: break;
 12314  014B  29EC               	goto	l23496
 12315                           	line	152
 12316                           ;water.c: 152: case 2:
 12317                           	
 12318  014C                     l23488:	
 12319                           	line	154
 12320                           ;water.c: 154: if (ADCON0bits.nDONE)
 12321  014C  1C9D               	btfss	(157)^080h,1	;volatile
 12322  014D  294F               	goto	u11921
 12323  014E  2950               	goto	u11920
 12324  014F                     u11921:
 12325  014F  2952               	goto	l38211
 12326  0150                     u11920:
 12327  0150  29EC               	goto	l23496
 12328                           	line	155
 12329                           	
 12330  0151                     l38209:	
 12331                           ;water.c: 155: break;
 12332  0151  29EC               	goto	l23496
 12333                           	
 12334  0152                     l23489:	
 12335                           	line	157
 12336                           	
 12337  0152                     l38211:	
 12338                           ;water.c: 157: cur_reflectionquality = ADRES;
 12339  0152  081C               	movf	(155+1)^080h,w	;volatile
 12340  0153  01D3               	clrf	(water_work@cur_reflectionquality+1)^080h
 12341  0154  07D3               	addwf	(water_work@cur_reflectionquality+1)^080h
 12342  0155  081B               	movf	(155)^080h,w	;volatile
 12343  0156  01D2               	clrf	(water_work@cur_reflectionquality)^080h
 12344  0157  07D2               	addwf	(water_work@cur_reflectionquality)^080h
 12345                           
 12346                           	line	165
 12347                           	
 12348  0158                     l38213:	
 12349                           ;water.c: 165: if (!filling && !ledalwayson)
 12350  0158  0020               	movlb 0	; select bank0
 12351  0159  19ED               	btfsc	(_filling/8),(_filling)&7
 12352  015A  295C               	goto	u11931
 12353  015B  295D               	goto	u11930
 12354  015C                     u11931:
 12355  015C  2967               	goto	l38219
 12356  015D                     u11930:
 12357                           	
 12358  015D                     l38215:	
 12359  015D  1A6D               	btfsc	(_ledalwayson/8),(_ledalwayson)&7
 12360  015E  2960               	goto	u11941
 12361  015F  2961               	goto	u11940
 12362  0160                     u11941:
 12363  0160  2967               	goto	l38219
 12364  0161                     u11940:
 12365                           	line	166
 12366                           	
 12367  0161                     l38217:	
 12368                           ;water.c: 166: LATB &= ~(1U << (2));
 12369  0161  30FB               	movlw	(0FBh)
 12370  0162  00D3               	movwf	(??_water_work+0)+0
 12371  0163  0853               	movf	(??_water_work+0)+0,w
 12372  0164  0022               	movlb 2	; select bank2
 12373  0165  058D               	andwf	(269)^0100h,f	;volatile
 12374  0166  2967               	goto	l38219
 12375                           	
 12376  0167                     l23490:	
 12377                           	line	168
 12378                           	
 12379  0167                     l38219:	
 12380                           ;water.c: 168: if (cur_reflectionquality <= (503 - ((520)-(503)))) {
 12381  0167  3001               	movlw	high(01E7h)
 12382  0168  0021               	movlb 1	; select bank1
 12383  0169  0253               	subwf	(water_work@cur_reflectionquality+1)^080h,w
 12384  016A  30E7               	movlw	low(01E7h)
 12385  016B  1903               	skipnz
 12386  016C  0252               	subwf	(water_work@cur_reflectionquality)^080h,w
 12387  016D  1803               	skipnc
 12388  016E  2970               	goto	u11951
 12389  016F  2971               	goto	u11950
 12390  0170                     u11951:
 12391  0170  2989               	goto	l38231
 12392  0171                     u11950:
 12393                           	line	170
 12394                           	
 12395  0171                     l38221:	
 12396                           ;water.c: 169: if ((hysteresis > 0) &&
 12397                           ;water.c: 170: (!--hysteresis && detected)) {
 12398  0171  0020               	movlb 0	; select bank0
 12399  0172  0864               	movf	(_hysteresis),w
 12400  0173  1D03               	skipz
 12401  0174  2976               	goto	u11960
 12402  0175  29A7               	goto	l38241
 12403  0176                     u11960:
 12404                           	
 12405  0176                     l38223:	
 12406  0176  3001               	movlw	low(01h)
 12407  0177  02E4               	subwf	(_hysteresis),f
 12408  0178  1D03               	btfss	status,2
 12409  0179  297B               	goto	u11971
 12410  017A  297C               	goto	u11970
 12411  017B                     u11971:
 12412  017B  29A7               	goto	l38241
 12413  017C                     u11970:
 12414                           	
 12415  017C                     l38225:	
 12416  017C  1C6D               	btfss	(_detected/8),(_detected)&7
 12417  017D  297F               	goto	u11981
 12418  017E  2980               	goto	u11980
 12419  017F                     u11981:
 12420  017F  29A7               	goto	l38241
 12421  0180                     u11980:
 12422                           	line	171
 12423                           	
 12424  0180                     l38227:	
 12425                           ;water.c: 171: detected = 0;
 12426  0180  106D               	bcf	(_detected/8),(_detected)&7
 12427                           	line	172
 12428                           	
 12429  0181                     l38229:	
 12430                           ;water.c: 172: waterdetection_event(detected);
 12431  0181  3000               	movlw	0
 12432  0182  186D               	btfsc	(_detected/8),(_detected)&7
 12433  0183  3001               	movlw	1
 12434  0184  31A2  22DB  3181   	fcall	_waterdetection_event
 12435  0187  29A7               	goto	l38241
 12436                           	line	173
 12437                           	
 12438  0188                     l23492:	
 12439                           	line	174
 12440                           ;water.c: 173: }
 12441                           ;water.c: 174: } else {
 12442  0188  29A7               	goto	l38241
 12443                           	
 12444  0189                     l23491:	
 12445                           	line	176
 12446                           	
 12447  0189                     l38231:	
 12448                           ;water.c: 175: if ((hysteresis < 8) &&
 12449                           ;water.c: 176: (++hysteresis >= 8) && !detected) {
 12450  0189  3008               	movlw	(08h)
 12451  018A  0020               	movlb 0	; select bank0
 12452  018B  0264               	subwf	(_hysteresis),w
 12453  018C  1803               	skipnc
 12454  018D  298F               	goto	u11991
 12455  018E  2990               	goto	u11990
 12456  018F                     u11991:
 12457  018F  29A7               	goto	l38241
 12458  0190                     u11990:
 12459                           	
 12460  0190                     l38233:	
 12461  0190  3001               	movlw	(01h)
 12462  0191  00D3               	movwf	(??_water_work+0)+0
 12463  0192  0853               	movf	(??_water_work+0)+0,w
 12464  0193  07E4               	addwf	(_hysteresis),f
 12465  0194  3008               	movlw	(08h)
 12466  0195  0264               	subwf	((_hysteresis)),w
 12467  0196  1C03               	skipc
 12468  0197  2999               	goto	u12001
 12469  0198  299A               	goto	u12000
 12470  0199                     u12001:
 12471  0199  29A7               	goto	l38241
 12472  019A                     u12000:
 12473                           	
 12474  019A                     l38235:	
 12475  019A  186D               	btfsc	(_detected/8),(_detected)&7
 12476  019B  299D               	goto	u12011
 12477  019C  299E               	goto	u12010
 12478  019D                     u12011:
 12479  019D  29A7               	goto	l38241
 12480  019E                     u12010:
 12481                           	line	177
 12482                           	
 12483  019E                     l38237:	
 12484                           ;water.c: 177: detected = 1;
 12485  019E  146D               	bsf	(_detected/8),(_detected)&7
 12486                           	line	178
 12487                           	
 12488  019F                     l38239:	
 12489                           ;water.c: 178: waterdetection_event(detected);
 12490  019F  3000               	movlw	0
 12491  01A0  186D               	btfsc	(_detected/8),(_detected)&7
 12492  01A1  3001               	movlw	1
 12493  01A2  31A2  22DB  3181   	fcall	_waterdetection_event
 12494  01A5  29A7               	goto	l38241
 12495                           	line	179
 12496                           	
 12497  01A6                     l23494:	
 12498  01A6  29A7               	goto	l38241
 12499                           	line	180
 12500                           	
 12501  01A7                     l23493:	
 12502                           	line	182
 12503                           	
 12504  01A7                     l38241:	
 12505                           ;water.c: 179: }
 12506                           ;water.c: 180: }
 12507                           ;water.c: 182: if (cur_reflectionquality != old_reflectionquality) {
 12508  01A7  0022               	movlb 2	; select bank2
 12509  01A8  083F               	movf	(water_work@old_reflectionquality+1)^0100h,w
 12510  01A9  0021               	movlb 1	; select bank1
 12511  01AA  0653               	xorwf	(water_work@cur_reflectionquality+1)^080h,w
 12512  01AB  1D03               	skipz
 12513  01AC  29B1               	goto	u12025
 12514  01AD  0022               	movlb 2	; select bank2
 12515  01AE  083E               	movf	(water_work@old_reflectionquality)^0100h,w
 12516  01AF  0021               	movlb 1	; select bank1
 12517  01B0  0652               	xorwf	(water_work@cur_reflectionquality)^080h,w
 12518  01B1                     u12025:
 12519                           
 12520  01B1  1903               	skipnz
 12521  01B2  29B4               	goto	u12021
 12522  01B3  29B5               	goto	u12020
 12523  01B4                     u12021:
 12524  01B4  29CC               	goto	l38247
 12525  01B5                     u12020:
 12526                           	line	183
 12527                           	
 12528  01B5                     l38243:	
 12529                           ;water.c: 183: watersensor_event(cur_reflectionquality);
 12530  01B5  0853               	movf	(water_work@cur_reflectionquality+1)^080h,w
 12531  01B6  0020               	movlb 0	; select bank0
 12532  01B7  01A2               	clrf	(?_watersensor_event+1)
 12533  01B8  07A2               	addwf	(?_watersensor_event+1)
 12534  01B9  0021               	movlb 1	; select bank1
 12535  01BA  0852               	movf	(water_work@cur_reflectionquality)^080h,w
 12536  01BB  0020               	movlb 0	; select bank0
 12537  01BC  01A1               	clrf	(?_watersensor_event)
 12538  01BD  07A1               	addwf	(?_watersensor_event)
 12539                           
 12540  01BE  3190  2002  3181   	fcall	_watersensor_event
 12541                           	line	184
 12542                           	
 12543  01C1                     l38245:	
 12544                           ;water.c: 184: old_reflectionquality = cur_reflectionquality;
 12545  01C1  0021               	movlb 1	; select bank1
 12546  01C2  0853               	movf	(water_work@cur_reflectionquality+1)^080h,w
 12547  01C3  0022               	movlb 2	; select bank2
 12548  01C4  01BF               	clrf	(water_work@old_reflectionquality+1)^0100h
 12549  01C5  07BF               	addwf	(water_work@old_reflectionquality+1)^0100h
 12550  01C6  0021               	movlb 1	; select bank1
 12551  01C7  0852               	movf	(water_work@cur_reflectionquality)^080h,w
 12552  01C8  0022               	movlb 2	; select bank2
 12553  01C9  01BE               	clrf	(water_work@old_reflectionquality)^0100h
 12554  01CA  07BE               	addwf	(water_work@old_reflectionquality)^0100h
 12555                           
 12556  01CB  29CC               	goto	l38247
 12557                           	line	185
 12558                           	
 12559  01CC                     l23495:	
 12560                           	line	187
 12561                           	
 12562  01CC                     l38247:	
 12563                           ;water.c: 185: }
 12564                           ;water.c: 187: settimeout(&sensortimer, (((((4UL * (1000UL * ((1000UL)))))/4)/8)/4));
 12565  01CC  3052               	movlw	(_sensortimer&0ffh)
 12566  01CD  0020               	movlb 0	; select bank0
 12567  01CE  00AD               	movwf	(?_settimeout)
 12568  01CF  3001               	movlw	0x2/2
 12569  01D0  00AE               	movwf	(?_settimeout+1)
 12570  01D1  3000               	movlw	0
 12571  01D2  00B2               	movwf	3+(?_settimeout)+02h
 12572  01D3  3000               	movlw	0
 12573  01D4  00B1               	movwf	2+(?_settimeout)+02h
 12574  01D5  307A               	movlw	07Ah
 12575  01D6  00B0               	movwf	1+(?_settimeout)+02h
 12576  01D7  3012               	movlw	012h
 12577  01D8  00AF               	movwf	0+(?_settimeout)+02h
 12578                           
 12579  01D9  31A0  20CF  3181   	fcall	_settimeout
 12580                           	line	188
 12581                           	
 12582  01DC                     l38249:	
 12583                           ;water.c: 188: state = 0;
 12584  01DC  0021               	movlb 1	; select bank1
 12585  01DD  01DC               	clrf	(water@state)^080h
 12586                           	line	189
 12587                           ;water.c: 189: break;
 12588  01DE  29EC               	goto	l23496
 12589                           	line	190
 12590                           	
 12591  01DF                     l38251:	
 12592                           ;water.c: 190: }
 12593  01DF  29EC               	goto	l23496
 12594                           	line	129
 12595                           	
 12596  01E0                     l23481:	
 12597                           	
 12598  01E0                     l38253:	
 12599  01E0  0021               	movlb 1	; select bank1
 12600  01E1  085C               	movf	(water@state)^080h,w
 12601                           	; Switch size 1, requested type "space"
 12602                           ; Number of cases is 3, Range of values is 0 to 2
 12603                           ; switch strategies available:
 12604                           ; Name         Instructions Cycles
 12605                           ; simple_byte           10     6 (average)
 12606                           ; direct_byte           12     6 (fixed)
 12607                           ; jumptable            260     6 (fixed)
 12608                           ; rangetable             7     4 (fixed)
 12609                           ; spacedrange           11     6 (fixed)
 12610                           ; locatedrange           3     3 (fixed)
 12611                           ;	Chosen strategy is simple_byte
 12612                           
 12613                           	opt asmopt_off
 12614  01E2  3A00               	xorlw	0^0	; case 0
 12615  01E3  1903               	skipnz
 12616  01E4  290E               	goto	l38195
 12617  01E5  3A01               	xorlw	1^0	; case 1
 12618  01E6  1903               	skipnz
 12619  01E7  2934               	goto	l38203
 12620  01E8  3A03               	xorlw	2^1	; case 2
 12621  01E9  1903               	skipnz
 12622  01EA  294C               	goto	l23488
 12623  01EB  290C               	goto	l23482
 12624                           	opt asmopt_on
 12625                           
 12626                           	line	190
 12627                           	
 12628  01EC                     l23485:	
 12629                           	line	191
 12630                           	
 12631  01EC                     l23496:	
 12632  01EC  0008               	return
 12633                           	opt stack 0
 12634                           GLOBAL	__end_of_water_work
 12635  01ED                     	__end_of_water_work:
 12636 ;; =============== function _water_work ends ============
 12637                           
 12638                           	signat	_water_work,88
 12639                           	global	_setupbutton_event
 12640                           	global	_startbutton_event
 12641                           psect	text3319,local,class=CODE,delta=2
 12642                           global __ptext3319
 12643  3766                     __ptext3319:
 12644                           
 12645 ;; *************** function _startbutton_event *****************
 12646 ;; Defined at:
 12647 ;;		line 264 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  up              1   31[BANK0 ] unsigned char 
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;		None               void
 12654 ;; Registers used:
 12655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12661 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12663 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12665 ;;Total ram usage:        2 bytes
 12666 ;; Hardware stack levels used:    1
 12667 ;; Hardware stack levels required when called:    7
 12668 ;; This function calls:
 12669 ;;		_process_button
 12670 ;; This function is called by:
 12671 ;;		_catgenie_work
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           psect	text3319
 12675                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12676                           	line	264
 12677                           	global	__size_of_startbutton_event
 12678  000E                     	__size_of_startbutton_event	equ	__end_of_startbutton_event-_startbutton_event
 12679                           	
 12680  3766                     _startbutton_event:	
 12681                           	opt	stack 7
 12682                           ; Regs used in _startbutton_event: [allreg]
 12683                           	line	265
 12684                           	
 12685  3766                     l38189:	
 12686                           ;userinterface.c: 265: process_button ((0x01 << 0), !up);
 12687  3766  0020               	movlb 0	; select bank0
 12688  3767  0840               	movf	(startbutton_event@up),w
 12689  3768  3A00               	xorlw	0&0ffh
 12690  3769  3000               	movlw	0
 12691  376A  1903               	skipnz
 12692  376B  3001               	movlw	1
 12693  376C  00C1               	movwf	(??_startbutton_event+0)+0
 12694  376D  0841               	movf	(??_startbutton_event+0)+0,w
 12695  376E  00BD               	movwf	(?_process_button)
 12696  376F  3001               	movlw	(01h)
 12697  3770  31A1  2134  31B7   	fcall	_process_button
 12698                           	line	266
 12699                           	
 12700  3773                     l8677:	
 12701  3773  0008               	return
 12702                           	opt stack 0
 12703                           GLOBAL	__end_of_startbutton_event
 12704  3774                     	__end_of_startbutton_event:
 12705 ;; =============== function _startbutton_event ends ============
 12706                           
 12707                           	signat	_startbutton_event,4216
 12708                           psect	text3320,local,class=CODE,delta=2
 12709                           global __ptext3320
 12710  3758                     __ptext3320:
 12711                           
 12712 ;; *************** function _setupbutton_event *****************
 12713 ;; Defined at:
 12714 ;;		line 277 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;  up              1   31[BANK0 ] unsigned char 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;		None               void
 12721 ;; Registers used:
 12722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12728 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12732 ;;Total ram usage:        2 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    7
 12735 ;; This function calls:
 12736 ;;		_process_button
 12737 ;; This function is called by:
 12738 ;;		_catgenie_work
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           psect	text3320
 12742                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 12743                           	line	277
 12744                           	global	__size_of_setupbutton_event
 12745  000E                     	__size_of_setupbutton_event	equ	__end_of_setupbutton_event-_setupbutton_event
 12746                           	
 12747  3758                     _setupbutton_event:	
 12748                           	opt	stack 7
 12749                           ; Regs used in _setupbutton_event: [allreg]
 12750                           	line	278
 12751                           	
 12752  3758                     l38191:	
 12753                           ;userinterface.c: 278: process_button ((0x01 << 1), !up);
 12754  3758  0020               	movlb 0	; select bank0
 12755  3759  0840               	movf	(setupbutton_event@up),w
 12756  375A  3A00               	xorlw	0&0ffh
 12757  375B  3000               	movlw	0
 12758  375C  1903               	skipnz
 12759  375D  3001               	movlw	1
 12760  375E  00C1               	movwf	(??_setupbutton_event+0)+0
 12761  375F  0841               	movf	(??_setupbutton_event+0)+0,w
 12762  3760  00BD               	movwf	(?_process_button)
 12763  3761  3002               	movlw	(02h)
 12764  3762  31A1  2134  31B7   	fcall	_process_button
 12765                           	line	279
 12766                           	
 12767  3765                     l8680:	
 12768  3765  0008               	return
 12769                           	opt stack 0
 12770                           GLOBAL	__end_of_setupbutton_event
 12771  3766                     	__end_of_setupbutton_event:
 12772 ;; =============== function _setupbutton_event ends ============
 12773                           
 12774                           	signat	_setupbutton_event,4216
 12775                           	global	_heatsensor_event
 12776                           psect	text3321,local,class=CODE,delta=2
 12777                           global __ptext3321
 12778  2888                     __ptext3321:
 12779                           
 12780 ;; *************** function _heatsensor_event *****************
 12781 ;; Defined at:
 12782 ;;		line 435 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;  detected        1    wreg     unsigned char 
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;  detected        1    1[BANK0 ] unsigned char 
 12787 ;; Return value:  Size  Location     Type
 12788 ;;		None               void
 12789 ;; Registers used:
 12790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12800 ;;Total ram usage:        2 bytes
 12801 ;; Hardware stack levels used:    1
 12802 ;; Hardware stack levels required when called:    7
 12803 ;; This function calls:
 12804 ;;		_litterlanguage_event
 12805 ;; This function is called by:
 12806 ;;		_catgenie_work
 12807 ;; This function uses a non-reentrant model
 12808 ;;
 12809                           psect	text3321
 12810                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12811                           	line	435
 12812                           	global	__size_of_heatsensor_event
 12813  0015                     	__size_of_heatsensor_event	equ	__end_of_heatsensor_event-_heatsensor_event
 12814                           	
 12815  2888                     _heatsensor_event:	
 12816                           	opt	stack 7
 12817                           ; Regs used in _heatsensor_event: [allreg]
 12818                           ;heatsensor_event@detected stored from wreg
 12819  2888  0020               	movlb 0	; select bank0
 12820  2889  00A2               	movwf	(heatsensor_event@detected)
 12821                           	line	436
 12822                           	
 12823  288A                     l38185:	
 12824                           ;litterlanguage.c: 436: error_overheat = detected ? 1 : 0;
 12825  288A  08A2               	movf	(heatsensor_event@detected),f
 12826  288B  1D03               	skipz
 12827  288C  288E               	goto	u11881
 12828  288D  2890               	goto	u11880
 12829                           	
 12830  288E                     u11881:
 12831  288E  1471               	bsf	(_error_overheat/8),(_error_overheat)&7
 12832  288F  2891               	goto	u11894
 12833  2890                     u11880:
 12834  2890  1071               	bcf	(_error_overheat/8),(_error_overheat)&7
 12835  2891                     u11894:
 12836                           	line	437
 12837                           	
 12838  2891                     l38187:	
 12839                           ;litterlanguage.c: 437: litterlanguage_event(3, error_overheat);
 12840  2891  3000               	movlw	0
 12841  2892  1871               	btfsc	(_error_overheat/8),(_error_overheat)&7
 12842  2893  3001               	movlw	1
 12843  2894  0020               	movlb 0	; select bank0
 12844  2895  00A1               	movwf	(??_heatsensor_event+0)+0
 12845  2896  0821               	movf	(??_heatsensor_event+0)+0,w
 12846  2897  00D7               	movwf	(?_litterlanguage_event)
 12847  2898  3003               	movlw	(03h)
 12848  2899  31A2  2206  31A8   	fcall	_litterlanguage_event
 12849                           	line	438
 12850                           	
 12851  289C                     l4328:	
 12852  289C  0008               	return
 12853                           	opt stack 0
 12854                           GLOBAL	__end_of_heatsensor_event
 12855  289D                     	__end_of_heatsensor_event:
 12856 ;; =============== function _heatsensor_event ends ============
 12857                           
 12858                           	signat	_heatsensor_event,4216
 12859                           	global	_waterdetection_event
 12860                           psect	text3322,local,class=CODE,delta=2
 12861                           global __ptext3322
 12862  22DB                     __ptext3322:
 12863                           
 12864 ;; *************** function _waterdetection_event *****************
 12865 ;; Defined at:
 12866 ;;		line 388 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;  detected        1    wreg     unsigned char 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  detected        1   49[BANK0 ] unsigned char 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;		None               void
 12873 ;; Registers used:
 12874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12881 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12883 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12884 ;;Total ram usage:        4 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    7
 12887 ;; This function calls:
 12888 ;;		_printtime
 12889 ;;		_printf
 12890 ;;		_water_fill
 12891 ;;		_timeoutnever
 12892 ;;		_litterlanguage_event
 12893 ;; This function is called by:
 12894 ;;		_water_work
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           psect	text3322
 12898                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 12899                           	line	388
 12900                           	global	__size_of_waterdetection_event
 12901  0071                     	__size_of_waterdetection_event	equ	__end_of_waterdetection_event-_waterdetection_event
 12902                           	
 12903  22DB                     _waterdetection_event:	
 12904                           	opt	stack 7
 12905                           ; Regs used in _waterdetection_event: [allreg]
 12906                           ;waterdetection_event@detected stored from wreg
 12907  22DB  0020               	movlb 0	; select bank0
 12908  22DC  00D2               	movwf	(waterdetection_event@detected)
 12909                           	line	389
 12910                           	
 12911  22DD                     l38157:	
 12912                           ;litterlanguage.c: 389: printtime();
 12913  22DD  31AB  233D  31A2   	fcall	_printtime
 12914                           	line	390
 12915                           	
 12916  22E0                     l38159:	
 12917                           ;litterlanguage.c: 390: printf("Water %s\n", detected?"high":"low");
 12918  22E0  0020               	movlb 0	; select bank0
 12919  22E1  08D2               	movf	(waterdetection_event@detected),f
 12920  22E2  1D03               	skipz
 12921  22E3  2AE5               	goto	u11831
 12922  22E4  2AE6               	goto	u11830
 12923  22E5                     u11831:
 12924  22E5  2AEB               	goto	l38163
 12925  22E6                     u11830:
 12926                           	
 12927  22E6                     l38161:	
 12928  22E6  3034               	movlw	low(STR_32|8000h)
 12929  22E7  00D0               	movwf	(_waterdetection_event$5930)
 12930  22E8  3089               	movlw	high(STR_32|8000h)
 12931  22E9  00D1               	movwf	((_waterdetection_event$5930))+1
 12932  22EA  2AF0               	goto	l38165
 12933                           	
 12934  22EB                     l4314:	
 12935                           	
 12936  22EB                     l38163:	
 12937  22EB  3023               	movlw	low(STR_31|8000h)
 12938  22EC  00D0               	movwf	(_waterdetection_event$5930)
 12939  22ED  3089               	movlw	high(STR_31|8000h)
 12940  22EE  00D1               	movwf	((_waterdetection_event$5930))+1
 12941  22EF  2AF0               	goto	l38165
 12942                           	
 12943  22F0                     l4316:	
 12944                           	
 12945  22F0                     l38165:	
 12946  22F0  3080               	movlw	low(STR_30|8000h)
 12947  22F1  00AF               	movwf	(?_printf)
 12948  22F2  3088               	movlw	high(STR_30|8000h)
 12949  22F3  00B0               	movwf	((?_printf))+1
 12950  22F4  0851               	movf	(_waterdetection_event$5930+1),w
 12951  22F5  01B2               	clrf	(1+?_printf+02h)
 12952  22F6  07B2               	addwf	(1+?_printf+02h)
 12953  22F7  0850               	movf	(_waterdetection_event$5930),w
 12954  22F8  01B1               	clrf	(0+?_printf+02h)
 12955  22F9  07B1               	addwf	(0+?_printf+02h)
 12956                           
 12957  22FA  3194  24A0  31A2   	fcall	_printf
 12958                           	line	391
 12959                           	
 12960  22FD                     l38167:	
 12961                           ;litterlanguage.c: 391: if (ins_state != 0) {
 12962  22FD  0020               	movlb 0	; select bank0
 12963  22FE  0865               	movf	(_ins_state),w
 12964  22FF  1D03               	skipz
 12965  2300  2B02               	goto	u11840
 12966  2301  2B2B               	goto	l4317
 12967  2302                     u11840:
 12968                           	line	393
 12969                           	
 12970  2302                     l38169:	
 12971                           ;litterlanguage.c: 393: if (detected) {
 12972  2302  0852               	movf	(waterdetection_event@detected),w
 12973  2303  1D03               	skipz
 12974  2304  2B06               	goto	u11850
 12975  2305  2B1E               	goto	l38179
 12976  2306                     u11850:
 12977                           	line	395
 12978                           	
 12979  2306                     l38171:	
 12980                           ;litterlanguage.c: 395: water_fill(0);
 12981  2306  3000               	movlw	(0)
 12982  2307  31A8  209D  31A2   	fcall	_water_fill
 12983                           	line	396
 12984                           	
 12985  230A                     l38173:	
 12986                           ;litterlanguage.c: 396: timeoutnever(&timer_fill);
 12987  230A  30EA               	movlw	(_timer_fill&0ffh)
 12988  230B  0020               	movlb 0	; select bank0
 12989  230C  00A5               	movwf	(?_timeoutnever)
 12990  230D  3000               	movlw	0x1/2
 12991  230E  00A6               	movwf	(?_timeoutnever+1)
 12992  230F  31A9  2162  31A2   	fcall	_timeoutnever
 12993                           	line	397
 12994                           	
 12995  2312                     l38175:	
 12996                           ;litterlanguage.c: 397: printtime();
 12997  2312  31AB  233D  31A2   	fcall	_printtime
 12998                           	line	398
 12999                           	
 13000  2315                     l38177:	
 13001                           ;litterlanguage.c: 398: printf("Filled\n");
 13002  2315  30DC               	movlw	low(STR_33|8000h)
 13003  2316  0020               	movlb 0	; select bank0
 13004  2317  00AF               	movwf	(?_printf)
 13005  2318  3088               	movlw	high(STR_33|8000h)
 13006  2319  00B0               	movwf	((?_printf))+1
 13007  231A  3194  24A0  31A2   	fcall	_printf
 13008                           	line	399
 13009                           ;litterlanguage.c: 399: } else {
 13010  231D  2B4B               	goto	l4322
 13011                           	
 13012  231E                     l4318:	
 13013                           	line	400
 13014                           	
 13015  231E                     l38179:	
 13016                           ;litterlanguage.c: 400: printtime();
 13017  231E  31AB  233D  31A2   	fcall	_printtime
 13018                           	line	401
 13019                           ;litterlanguage.c: 401: printf("Drained\n");
 13020  2321  309E               	movlw	low(STR_34|8000h)
 13021  2322  0020               	movlb 0	; select bank0
 13022  2323  00AF               	movwf	(?_printf)
 13023  2324  3088               	movlw	high(STR_34|8000h)
 13024  2325  00B0               	movwf	((?_printf))+1
 13025  2326  3194  24A0  31A2   	fcall	_printf
 13026  2329  2B4B               	goto	l4322
 13027                           	line	402
 13028                           	
 13029  232A                     l4319:	
 13030                           	line	403
 13031                           ;litterlanguage.c: 402: }
 13032                           ;litterlanguage.c: 403: } else {
 13033  232A  2B4B               	goto	l4322
 13034                           	
 13035  232B                     l4317:	
 13036                           	line	404
 13037                           ;litterlanguage.c: 404: error_flood = detected;
 13038  232B  13F0               	bcf	(_error_flood/8),(_error_flood)&7
 13039  232C  1C52               	btfss	(waterdetection_event@detected),0
 13040  232D  2B2F               	goto	u11865
 13041  232E  17F0               	bsf	(_error_flood/8),(_error_flood)&7
 13042  232F                     u11865:
 13043                           
 13044                           	line	405
 13045                           ;litterlanguage.c: 405: if (error_flood) {
 13046  232F  1FF0               	btfss	(_error_flood/8),(_error_flood)&7
 13047  2330  2B32               	goto	u11871
 13048  2331  2B33               	goto	u11870
 13049  2332                     u11871:
 13050  2332  2B3F               	goto	l38183
 13051  2333                     u11870:
 13052                           	line	406
 13053                           	
 13054  2333                     l38181:	
 13055                           ;litterlanguage.c: 406: printtime();
 13056  2333  31AB  233D  31A2   	fcall	_printtime
 13057                           	line	407
 13058                           ;litterlanguage.c: 407: printf("Box flooded!\n");
 13059  2336  30E3               	movlw	low(STR_35|8000h)
 13060  2337  0020               	movlb 0	; select bank0
 13061  2338  00AF               	movwf	(?_printf)
 13062  2339  3087               	movlw	high(STR_35|8000h)
 13063  233A  00B0               	movwf	((?_printf))+1
 13064  233B  3194  24A0  31A2   	fcall	_printf
 13065  233E  2B3F               	goto	l38183
 13066                           	line	408
 13067                           	
 13068  233F                     l4321:	
 13069                           	line	409
 13070                           	
 13071  233F                     l38183:	
 13072                           ;litterlanguage.c: 408: }
 13073                           ;litterlanguage.c: 409: litterlanguage_event(5, error_flood);
 13074  233F  3000               	movlw	0
 13075  2340  1BF0               	btfsc	(_error_flood/8),(_error_flood)&7
 13076  2341  3001               	movlw	1
 13077  2342  0020               	movlb 0	; select bank0
 13078  2343  00CF               	movwf	(??_waterdetection_event+0)+0
 13079  2344  084F               	movf	(??_waterdetection_event+0)+0,w
 13080  2345  00D7               	movwf	(?_litterlanguage_event)
 13081  2346  3005               	movlw	(05h)
 13082  2347  31A2  2206  31A2   	fcall	_litterlanguage_event
 13083  234A  2B4B               	goto	l4322
 13084                           	line	410
 13085                           	
 13086  234B                     l4320:	
 13087                           	line	412
 13088                           	
 13089  234B                     l4322:	
 13090  234B  0008               	return
 13091                           	opt stack 0
 13092                           GLOBAL	__end_of_waterdetection_event
 13093  234C                     	__end_of_waterdetection_event:
 13094 ;; =============== function _waterdetection_event ends ============
 13095                           
 13096                           	signat	_waterdetection_event,4216
 13097                           	global	_litterlanguage_pause
 13098                           psect	text3323,local,class=CODE,delta=2
 13099                           global __ptext3323
 13100  1256                     __ptext3323:
 13101                           
 13102 ;; *************** function _litterlanguage_pause *****************
 13103 ;; Defined at:
 13104 ;;		line 258 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  pause           1    wreg     unsigned char 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;  pause           1   47[BANK0 ] unsigned char 
 13109 ;;  timer_now       6   48[BANK0 ] struct timer
 13110 ;; Return value:  Size  Location     Type
 13111 ;;		None               void
 13112 ;; Registers used:
 13113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/0
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13120 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 13121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13122 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 13123 ;;Total ram usage:        8 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:    5
 13126 ;; This function calls:
 13127 ;;		_printtime
 13128 ;;		_get_Bowl
 13129 ;;		_set_Bowl
 13130 ;;		_get_Arm
 13131 ;;		_set_Arm
 13132 ;;		_water_filling
 13133 ;;		_water_fill
 13134 ;;		_get_Dosage
 13135 ;;		_set_Dosage
 13136 ;;		_get_Pump
 13137 ;;		_set_Pump
 13138 ;;		_get_Dryer
 13139 ;;		_set_Dryer
 13140 ;;		_gettimestamp
 13141 ;;		_timestampdiff
 13142 ;;		_timeoutnever
 13143 ;;		_printf
 13144 ;;		_settimeout
 13145 ;;		_litterlanguage_event
 13146 ;; This function is called by:
 13147 ;;		_litterlanguage_event
 13148 ;;		_start_short
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           psect	text3323
 13152                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 13153                           	line	258
 13154                           	global	__size_of_litterlanguage_pause
 13155  024A                     	__size_of_litterlanguage_pause	equ	__end_of_litterlanguage_pause-_litterlanguage_pause
 13156                           	
 13157  1256                     _litterlanguage_pause:	
 13158                           	opt	stack 7
 13159                           ; Regs used in _litterlanguage_pause: [allreg]
 13160                           ;litterlanguage_pause@pause stored from wreg
 13161                           	line	272
 13162  1256  0020               	movlb 0	; select bank0
 13163  1257  00D0               	movwf	(litterlanguage_pause@pause)
 13164                           	
 13165  1258                     l38061:	
 13166                           ;litterlanguage.c: 259: static struct {
 13167                           ;litterlanguage.c: 260: unsigned bowl : 2;
 13168                           ;litterlanguage.c: 261: unsigned arm : 2;
 13169                           ;litterlanguage.c: 262: unsigned water : 1;
 13170                           ;litterlanguage.c: 263: unsigned pump : 1;
 13171                           ;litterlanguage.c: 264: unsigned dosage : 1;
 13172                           ;litterlanguage.c: 265: unsigned dryer : 1;
 13173                           ;litterlanguage.c: 266: unsigned long wait;
 13174                           ;litterlanguage.c: 267: unsigned long fill;
 13175                           ;litterlanguage.c: 268: unsigned long drain;
 13176                           ;litterlanguage.c: 269: unsigned long autodose;
 13177                           ;litterlanguage.c: 270: } context;
 13178  1258  3000               	movlw	0
 13179  1259  1AF1               	btfsc	(_paused/8),(_paused)&7
 13180  125A  3001               	movlw	1
 13181  125B  0650               	xorwf	(litterlanguage_pause@pause),w
 13182  125C  1D03               	skipz
 13183  125D  2A5F               	goto	u11731
 13184  125E  2A60               	goto	u11730
 13185  125F                     u11731:
 13186  125F  2A62               	goto	l38065
 13187  1260                     u11730:
 13188  1260  2C9F               	goto	l4290
 13189                           	line	273
 13190                           	
 13191  1261                     l38063:	
 13192                           ;litterlanguage.c: 273: return;
 13193  1261  2C9F               	goto	l4290
 13194                           	
 13195  1262                     l4289:	
 13196                           	line	275
 13197                           	
 13198  1262                     l38065:	
 13199                           ;litterlanguage.c: 275: printtime();
 13200  1262  31AB  233D  3192   	fcall	_printtime
 13201                           	line	276
 13202                           	
 13203  1265                     l38067:	
 13204                           ;litterlanguage.c: 276: if (pause) {
 13205  1265  0020               	movlb 0	; select bank0
 13206  1266  0850               	movf	(litterlanguage_pause@pause),w
 13207  1267  1D03               	skipz
 13208  1268  2A6A               	goto	u11740
 13209  1269  2B7B               	goto	l4291
 13210  126A                     u11740:
 13211                           	line	280
 13212                           	
 13213  126A                     l38069:	
 13214                           ;litterlanguage.c: 277: struct timer timer_now;
 13215                           ;litterlanguage.c: 280: context.bowl = get_Bowl();
 13216  126A  31A9  21B7  3192   	fcall	_get_Bowl
 13217  126D  0020               	movlb 0	; select bank0
 13218  126E  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13219  126F  0022               	movlb 2	; select bank2
 13220  1270  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13221  1271  0020               	movlb 0	; select bank0
 13222  1272  064F               	xorwf	0+(??_litterlanguage_pause+0)+0,w
 13223  1273  39FC               	andlw	not ((1<<2)-1)
 13224  1274  064F               	xorwf	0+(??_litterlanguage_pause+0)+0,w
 13225  1275  0022               	movlb 2	; select bank2
 13226  1276  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13227                           	line	281
 13228                           ;litterlanguage.c: 281: set_Bowl(0);
 13229  1277  3000               	movlw	(0)
 13230  1278  31AA  2256  3192   	fcall	_set_Bowl
 13231                           	line	282
 13232                           ;litterlanguage.c: 282: context.arm = get_Arm();
 13233  127B  31A9  21D5  3192   	fcall	_get_Arm
 13234  127E  0020               	movlb 0	; select bank0
 13235  127F  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13236  1280  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13237  1281  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13238  1282  0022               	movlb 2	; select bank2
 13239  1283  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13240  1284  0020               	movlb 0	; select bank0
 13241  1285  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13242  1286  39F3               	andlw	not (((1<<2)-1)<<2)
 13243  1287  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13244  1288  0022               	movlb 2	; select bank2
 13245  1289  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13246                           	line	283
 13247                           ;litterlanguage.c: 283: set_Arm(0);
 13248  128A  3000               	movlw	(0)
 13249  128B  31AA  227A  3192   	fcall	_set_Arm
 13250                           	line	284
 13251                           	
 13252  128E                     l38071:	
 13253                           ;litterlanguage.c: 284: context.water = water_filling();
 13254  128E  31B7  2711  3192   	fcall	_water_filling
 13255  1291  0020               	movlb 0	; select bank0
 13256  1292  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13257  1293  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 13258  1294  0022               	movlb 2	; select bank2
 13259  1295  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13260  1296  0020               	movlb 0	; select bank0
 13261  1297  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13262  1298  39EF               	andlw	not (((1<<1)-1)<<4)
 13263  1299  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13264  129A  0022               	movlb 2	; select bank2
 13265  129B  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13266                           	line	285
 13267                           	
 13268  129C                     l38073:	
 13269                           ;litterlanguage.c: 285: water_fill(0);
 13270  129C  3000               	movlw	(0)
 13271  129D  31A8  209D  3192   	fcall	_water_fill
 13272                           	line	286
 13273                           	
 13274  12A0                     l38075:	
 13275                           ;litterlanguage.c: 286: context.dosage = get_Dosage();
 13276  12A0  31B6  26FC  3192   	fcall	_get_Dosage
 13277  12A3  0020               	movlb 0	; select bank0
 13278  12A4  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13279  12A5  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 13280  12A6  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13281  12A7  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13282  12A8  0022               	movlb 2	; select bank2
 13283  12A9  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13284  12AA  0020               	movlb 0	; select bank0
 13285  12AB  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13286  12AC  39BF               	andlw	not (((1<<1)-1)<<6)
 13287  12AD  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13288  12AE  0022               	movlb 2	; select bank2
 13289  12AF  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13290                           	line	287
 13291                           	
 13292  12B0                     l38077:	
 13293                           ;litterlanguage.c: 287: set_Dosage(0);
 13294  12B0  3000               	movlw	(0)
 13295  12B1  31B7  27DE  3192   	fcall	_set_Dosage
 13296                           	line	288
 13297                           	
 13298  12B4                     l38079:	
 13299                           ;litterlanguage.c: 288: context.pump = get_Pump();
 13300  12B4  31B6  26F7  3192   	fcall	_get_Pump
 13301  12B7  0020               	movlb 0	; select bank0
 13302  12B8  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13303  12B9  0ECF               	swapf	(??_litterlanguage_pause+0)+0,f
 13304  12BA  0DCF               	rlf	(??_litterlanguage_pause+0)+0,f
 13305  12BB  0022               	movlb 2	; select bank2
 13306  12BC  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13307  12BD  0020               	movlb 0	; select bank0
 13308  12BE  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13309  12BF  39DF               	andlw	not (((1<<1)-1)<<5)
 13310  12C0  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13311  12C1  0022               	movlb 2	; select bank2
 13312  12C2  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13313                           	line	289
 13314                           	
 13315  12C3                     l38081:	
 13316                           ;litterlanguage.c: 289: set_Pump(0);
 13317  12C3  3000               	movlw	(0)
 13318  12C4  31B7  27EF  3192   	fcall	_set_Pump
 13319                           	line	290
 13320                           	
 13321  12C7                     l38083:	
 13322                           ;litterlanguage.c: 290: context.dryer = get_Dryer();
 13323  12C7  31B7  2701  3192   	fcall	_get_Dryer
 13324  12CA  0020               	movlb 0	; select bank0
 13325  12CB  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13326  12CC  0CCF               	rrf	(??_litterlanguage_pause+0)+0,f
 13327  12CD  0CCF               	rrf	(??_litterlanguage_pause+0)+0,f
 13328  12CE  0022               	movlb 2	; select bank2
 13329  12CF  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13330  12D0  0020               	movlb 0	; select bank0
 13331  12D1  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13332  12D2  397F               	andlw	not (((1<<1)-1)<<7)
 13333  12D3  064F               	xorwf	(??_litterlanguage_pause+0)+0,w
 13334  12D4  0022               	movlb 2	; select bank2
 13335  12D5  00A0               	movwf	(litterlanguage_pause@context)^0100h
 13336                           	line	291
 13337                           	
 13338  12D6                     l38085:	
 13339                           ;litterlanguage.c: 291: set_Dryer(0);
 13340  12D6  3000               	movlw	(0)
 13341  12D7  31A8  203D  3192   	fcall	_set_Dryer
 13342                           	line	293
 13343                           	
 13344  12DA                     l38087:	
 13345                           ;litterlanguage.c: 293: gettimestamp(&timer_now);
 13346  12DA  3051               	movlw	(litterlanguage_pause@timer_now&0ffh)
 13347  12DB  0020               	movlb 0	; select bank0
 13348  12DC  00A1               	movwf	(?_gettimestamp)
 13349  12DD  3000               	movlw	0x0/2
 13350  12DE  00A2               	movwf	(?_gettimestamp+1)
 13351  12DF  31AD  2557  3192   	fcall	_gettimestamp
 13352                           	line	297
 13353                           	
 13354  12E2                     l38089:	
 13355                           ;litterlanguage.c: 297: context.wait = timestampdiff(&timer_waitins, &timer_now);
 13356  12E2  306A               	movlw	(_timer_waitins&0ffh)
 13357  12E3  0020               	movlb 0	; select bank0
 13358  12E4  00A1               	movwf	(?_timestampdiff)
 13359  12E5  3001               	movlw	0x2/2
 13360  12E6  00A2               	movwf	(?_timestampdiff+1)
 13361  12E7  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13362  12E8  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13363  12E9  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13364  12EA  00A3               	movwf	(0+?_timestampdiff+02h)
 13365  12EB  319B  23F4  3192   	fcall	_timestampdiff
 13366  12EE  0020               	movlb 0	; select bank0
 13367  12EF  0824               	movf	(3+(?_timestampdiff)),w
 13368  12F0  0022               	movlb 2	; select bank2
 13369  12F1  00A4               	movwf	3+(litterlanguage_pause@context)^0100h+01h
 13370  12F2  0020               	movlb 0	; select bank0
 13371  12F3  0823               	movf	(2+(?_timestampdiff)),w
 13372  12F4  0022               	movlb 2	; select bank2
 13373  12F5  00A3               	movwf	2+(litterlanguage_pause@context)^0100h+01h
 13374  12F6  0020               	movlb 0	; select bank0
 13375  12F7  0822               	movf	(1+(?_timestampdiff)),w
 13376  12F8  0022               	movlb 2	; select bank2
 13377  12F9  00A2               	movwf	1+(litterlanguage_pause@context)^0100h+01h
 13378  12FA  0020               	movlb 0	; select bank0
 13379  12FB  0821               	movf	(0+(?_timestampdiff)),w
 13380  12FC  0022               	movlb 2	; select bank2
 13381  12FD  00A1               	movwf	0+(litterlanguage_pause@context)^0100h+01h
 13382                           
 13383                           	line	298
 13384                           	
 13385  12FE                     l38091:	
 13386                           ;litterlanguage.c: 298: timeoutnever(&timer_waitins);
 13387  12FE  306A               	movlw	(_timer_waitins&0ffh)
 13388  12FF  0020               	movlb 0	; select bank0
 13389  1300  00A5               	movwf	(?_timeoutnever)
 13390  1301  3001               	movlw	0x2/2
 13391  1302  00A6               	movwf	(?_timeoutnever+1)
 13392  1303  31A9  2162  3192   	fcall	_timeoutnever
 13393                           	line	299
 13394                           	
 13395  1306                     l38093:	
 13396                           ;litterlanguage.c: 299: context.fill = timestampdiff(&timer_fill, &timer_now);
 13397  1306  30EA               	movlw	(_timer_fill&0ffh)
 13398  1307  0020               	movlb 0	; select bank0
 13399  1308  00A1               	movwf	(?_timestampdiff)
 13400  1309  3000               	movlw	0x1/2
 13401  130A  00A2               	movwf	(?_timestampdiff+1)
 13402  130B  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13403  130C  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13404  130D  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13405  130E  00A3               	movwf	(0+?_timestampdiff+02h)
 13406  130F  319B  23F4  3192   	fcall	_timestampdiff
 13407  1312  0020               	movlb 0	; select bank0
 13408  1313  0824               	movf	(3+(?_timestampdiff)),w
 13409  1314  0022               	movlb 2	; select bank2
 13410  1315  00A8               	movwf	3+(litterlanguage_pause@context)^0100h+05h
 13411  1316  0020               	movlb 0	; select bank0
 13412  1317  0823               	movf	(2+(?_timestampdiff)),w
 13413  1318  0022               	movlb 2	; select bank2
 13414  1319  00A7               	movwf	2+(litterlanguage_pause@context)^0100h+05h
 13415  131A  0020               	movlb 0	; select bank0
 13416  131B  0822               	movf	(1+(?_timestampdiff)),w
 13417  131C  0022               	movlb 2	; select bank2
 13418  131D  00A6               	movwf	1+(litterlanguage_pause@context)^0100h+05h
 13419  131E  0020               	movlb 0	; select bank0
 13420  131F  0821               	movf	(0+(?_timestampdiff)),w
 13421  1320  0022               	movlb 2	; select bank2
 13422  1321  00A5               	movwf	0+(litterlanguage_pause@context)^0100h+05h
 13423                           
 13424                           	line	300
 13425                           	
 13426  1322                     l38095:	
 13427                           ;litterlanguage.c: 300: timeoutnever(&timer_fill);
 13428  1322  30EA               	movlw	(_timer_fill&0ffh)
 13429  1323  0020               	movlb 0	; select bank0
 13430  1324  00A5               	movwf	(?_timeoutnever)
 13431  1325  3000               	movlw	0x1/2
 13432  1326  00A6               	movwf	(?_timeoutnever+1)
 13433  1327  31A9  2162  3192   	fcall	_timeoutnever
 13434                           	line	301
 13435                           	
 13436  132A                     l38097:	
 13437                           ;litterlanguage.c: 301: context.drain = timestampdiff(&timer_drain, &timer_now);
 13438  132A  30E4               	movlw	(_timer_drain&0ffh)
 13439  132B  0020               	movlb 0	; select bank0
 13440  132C  00A1               	movwf	(?_timestampdiff)
 13441  132D  3000               	movlw	0x1/2
 13442  132E  00A2               	movwf	(?_timestampdiff+1)
 13443  132F  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13444  1330  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13445  1331  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13446  1332  00A3               	movwf	(0+?_timestampdiff+02h)
 13447  1333  319B  23F4  3192   	fcall	_timestampdiff
 13448  1336  0020               	movlb 0	; select bank0
 13449  1337  0824               	movf	(3+(?_timestampdiff)),w
 13450  1338  0022               	movlb 2	; select bank2
 13451  1339  00AC               	movwf	3+(litterlanguage_pause@context)^0100h+09h
 13452  133A  0020               	movlb 0	; select bank0
 13453  133B  0823               	movf	(2+(?_timestampdiff)),w
 13454  133C  0022               	movlb 2	; select bank2
 13455  133D  00AB               	movwf	2+(litterlanguage_pause@context)^0100h+09h
 13456  133E  0020               	movlb 0	; select bank0
 13457  133F  0822               	movf	(1+(?_timestampdiff)),w
 13458  1340  0022               	movlb 2	; select bank2
 13459  1341  00AA               	movwf	1+(litterlanguage_pause@context)^0100h+09h
 13460  1342  0020               	movlb 0	; select bank0
 13461  1343  0821               	movf	(0+(?_timestampdiff)),w
 13462  1344  0022               	movlb 2	; select bank2
 13463  1345  00A9               	movwf	0+(litterlanguage_pause@context)^0100h+09h
 13464                           
 13465                           	line	302
 13466                           	
 13467  1346                     l38099:	
 13468                           ;litterlanguage.c: 302: timeoutnever(&timer_drain);
 13469  1346  30E4               	movlw	(_timer_drain&0ffh)
 13470  1347  0020               	movlb 0	; select bank0
 13471  1348  00A5               	movwf	(?_timeoutnever)
 13472  1349  3000               	movlw	0x1/2
 13473  134A  00A6               	movwf	(?_timeoutnever+1)
 13474  134B  31A9  2162  3192   	fcall	_timeoutnever
 13475                           	line	303
 13476                           	
 13477  134E                     l38101:	
 13478                           ;litterlanguage.c: 303: context.autodose = timestampdiff(&timer_autodose, &timer_now);
 13479  134E  3064               	movlw	(_timer_autodose&0ffh)
 13480  134F  0020               	movlb 0	; select bank0
 13481  1350  00A1               	movwf	(?_timestampdiff)
 13482  1351  3001               	movlw	0x2/2
 13483  1352  00A2               	movwf	(?_timestampdiff+1)
 13484  1353  3051               	movlw	(litterlanguage_pause@timer_now)&0ffh
 13485  1354  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13486  1355  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13487  1356  00A3               	movwf	(0+?_timestampdiff+02h)
 13488  1357  319B  23F4  3192   	fcall	_timestampdiff
 13489  135A  0020               	movlb 0	; select bank0
 13490  135B  0824               	movf	(3+(?_timestampdiff)),w
 13491  135C  0022               	movlb 2	; select bank2
 13492  135D  00B0               	movwf	3+(litterlanguage_pause@context)^0100h+0Dh
 13493  135E  0020               	movlb 0	; select bank0
 13494  135F  0823               	movf	(2+(?_timestampdiff)),w
 13495  1360  0022               	movlb 2	; select bank2
 13496  1361  00AF               	movwf	2+(litterlanguage_pause@context)^0100h+0Dh
 13497  1362  0020               	movlb 0	; select bank0
 13498  1363  0822               	movf	(1+(?_timestampdiff)),w
 13499  1364  0022               	movlb 2	; select bank2
 13500  1365  00AE               	movwf	1+(litterlanguage_pause@context)^0100h+0Dh
 13501  1366  0020               	movlb 0	; select bank0
 13502  1367  0821               	movf	(0+(?_timestampdiff)),w
 13503  1368  0022               	movlb 2	; select bank2
 13504  1369  00AD               	movwf	0+(litterlanguage_pause@context)^0100h+0Dh
 13505                           
 13506                           	line	304
 13507                           	
 13508  136A                     l38103:	
 13509                           ;litterlanguage.c: 304: timeoutnever(&timer_autodose);
 13510  136A  3064               	movlw	(_timer_autodose&0ffh)
 13511  136B  0020               	movlb 0	; select bank0
 13512  136C  00A5               	movwf	(?_timeoutnever)
 13513  136D  3001               	movlw	0x2/2
 13514  136E  00A6               	movwf	(?_timeoutnever+1)
 13515  136F  31A9  2162  3192   	fcall	_timeoutnever
 13516                           	line	305
 13517                           	
 13518  1372                     l38105:	
 13519                           ;litterlanguage.c: 305: printf("Paused program\n");
 13520  1372  3049               	movlw	low(STR_27|8000h)
 13521  1373  0020               	movlb 0	; select bank0
 13522  1374  00AF               	movwf	(?_printf)
 13523  1375  3087               	movlw	high(STR_27|8000h)
 13524  1376  00B0               	movwf	((?_printf))+1
 13525  1377  3194  24A0  3192   	fcall	_printf
 13526                           	line	306
 13527                           ;litterlanguage.c: 306: } else {
 13528  137A  2C9A               	goto	l38155
 13529                           	
 13530  137B                     l4291:	
 13531                           	line	308
 13532                           ;litterlanguage.c: 308: if (error_overheat)
 13533  137B  1C71               	btfss	(_error_overheat/8),(_error_overheat)&7
 13534  137C  2B7E               	goto	u11751
 13535  137D  2B7F               	goto	u11750
 13536  137E                     u11751:
 13537  137E  2B81               	goto	l38109
 13538  137F                     u11750:
 13539  137F  2C9F               	goto	l4290
 13540                           	line	309
 13541                           	
 13542  1380                     l38107:	
 13543                           ;litterlanguage.c: 309: return;
 13544  1380  2C9F               	goto	l4290
 13545                           	
 13546  1381                     l4293:	
 13547                           	line	310
 13548                           	
 13549  1381                     l38109:	
 13550                           ;litterlanguage.c: 310: printf("Resuming program\n");
 13551  1381  308B               	movlw	low(STR_28|8000h)
 13552  1382  00AF               	movwf	(?_printf)
 13553  1383  3086               	movlw	high(STR_28|8000h)
 13554  1384  00B0               	movwf	((?_printf))+1
 13555  1385  3194  24A0  3192   	fcall	_printf
 13556                           	line	312
 13557                           	
 13558  1388                     l38111:	
 13559                           ;litterlanguage.c: 312: if (context.wait != 0xFFFFFFFF)
 13560  1388  30FF               	movlw	0FFh
 13561  1389  0022               	movlb 2	; select bank2
 13562  138A  0624               	xorwf	3+(litterlanguage_pause@context)^0100h+01h,w
 13563  138B  1D03               	skipz
 13564  138C  2B97               	goto	u11765
 13565  138D  30FF               	movlw	0FFh
 13566  138E  0623               	xorwf	2+(litterlanguage_pause@context)^0100h+01h,w
 13567  138F  1D03               	skipz
 13568  1390  2B97               	goto	u11765
 13569  1391  30FF               	movlw	0FFh
 13570  1392  0622               	xorwf	1+(litterlanguage_pause@context)^0100h+01h,w
 13571  1393  1D03               	skipz
 13572  1394  2B97               	goto	u11765
 13573  1395  30FF               	movlw	0FFh
 13574  1396  0621               	xorwf	0+(litterlanguage_pause@context)^0100h+01h,w
 13575  1397                     u11765:
 13576  1397  1903               	skipnz
 13577  1398  2B9A               	goto	u11761
 13578  1399  2B9B               	goto	u11760
 13579  139A                     u11761:
 13580  139A  2BB1               	goto	l38115
 13581  139B                     u11760:
 13582                           	line	313
 13583                           	
 13584  139B                     l38113:	
 13585                           ;litterlanguage.c: 313: settimeout(&timer_waitins, context.wait);
 13586  139B  306A               	movlw	(_timer_waitins&0ffh)
 13587  139C  0020               	movlb 0	; select bank0
 13588  139D  00AD               	movwf	(?_settimeout)
 13589  139E  3001               	movlw	0x2/2
 13590  139F  00AE               	movwf	(?_settimeout+1)
 13591  13A0  3001               	movlw	(01h)
 13592  13A1  3E20               	addlw	litterlanguage_pause@context&0ffh
 13593  13A2  0086               	movwf	fsr1l
 13594  13A3  3001               	movlw 1	; select bank2/3
 13595  13A4  0087               	movwf fsr1h	
 13596                           	
 13597  13A5  3F40               	moviw	[0]fsr1
 13598  13A6  00AF               	movwf	0+(?_settimeout)+02h
 13599  13A7  3F41               	moviw	[1]fsr1
 13600  13A8  00B0               	movwf	1+(?_settimeout)+02h
 13601  13A9  3F42               	moviw	[2]fsr1
 13602  13AA  00B1               	movwf	2+(?_settimeout)+02h
 13603  13AB  3F43               	moviw	[3]fsr1
 13604  13AC  00B2               	movwf	3+(?_settimeout)+02h
 13605  13AD  31A0  20CF  3192   	fcall	_settimeout
 13606  13B0  2BB1               	goto	l38115
 13607                           	
 13608  13B1                     l4294:	
 13609                           	line	314
 13610                           	
 13611  13B1                     l38115:	
 13612                           ;litterlanguage.c: 314: if (error_fill) {
 13613  13B1  1F70               	btfss	(_error_fill/8),(_error_fill)&7
 13614  13B2  2BB4               	goto	u11771
 13615  13B3  2BB5               	goto	u11770
 13616  13B4                     u11771:
 13617  13B4  2BD2               	goto	l38123
 13618  13B5                     u11770:
 13619                           	line	315
 13620                           	
 13621  13B5                     l38117:	
 13622                           ;litterlanguage.c: 315: error_fill = 0;
 13623  13B5  1370               	bcf	(_error_fill/8),(_error_fill)&7
 13624                           	line	316
 13625                           	
 13626  13B6                     l38119:	
 13627                           ;litterlanguage.c: 316: litterlanguage_event(1, error_fill);
 13628  13B6  3000               	movlw	0
 13629  13B7  1B70               	btfsc	(_error_fill/8),(_error_fill)&7
 13630  13B8  3001               	movlw	1
 13631  13B9  0020               	movlb 0	; select bank0
 13632  13BA  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13633  13BB  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13634  13BC  00D7               	movwf	(?_litterlanguage_event)
 13635  13BD  3001               	movlw	(01h)
 13636  13BE  31A2  2206  3192   	fcall	_litterlanguage_event
 13637                           	line	317
 13638                           	
 13639  13C1                     l38121:	
 13640                           ;litterlanguage.c: 317: settimeout(&timer_fill, ((3*60+15)*((((4UL * (1000UL * ((1000UL)
                                 ))))/4)/8)));
 13641  13C1  30EA               	movlw	(_timer_fill&0ffh)
 13642  13C2  0020               	movlb 0	; select bank0
 13643  13C3  00AD               	movwf	(?_settimeout)
 13644  13C4  3000               	movlw	0x1/2
 13645  13C5  00AE               	movwf	(?_settimeout+1)
 13646  13C6  3001               	movlw	01h
 13647  13C7  00B2               	movwf	3+(?_settimeout)+02h
 13648  13C8  3073               	movlw	073h
 13649  13C9  00B1               	movwf	2+(?_settimeout)+02h
 13650  13CA  30EE               	movlw	0EEh
 13651  13CB  00B0               	movwf	1+(?_settimeout)+02h
 13652  13CC  30D8               	movlw	0D8h
 13653  13CD  00AF               	movwf	0+(?_settimeout)+02h
 13654                           
 13655  13CE  31A0  20CF  3192   	fcall	_settimeout
 13656                           	line	318
 13657                           ;litterlanguage.c: 318: } else if (context.fill != 0xFFFFFFFF)
 13658  13D1  2BFC               	goto	l38127
 13659                           	
 13660  13D2                     l4295:	
 13661                           	
 13662  13D2                     l38123:	
 13663  13D2  30FF               	movlw	0FFh
 13664  13D3  0022               	movlb 2	; select bank2
 13665  13D4  0628               	xorwf	3+(litterlanguage_pause@context)^0100h+05h,w
 13666  13D5  1D03               	skipz
 13667  13D6  2BE1               	goto	u11785
 13668  13D7  30FF               	movlw	0FFh
 13669  13D8  0627               	xorwf	2+(litterlanguage_pause@context)^0100h+05h,w
 13670  13D9  1D03               	skipz
 13671  13DA  2BE1               	goto	u11785
 13672  13DB  30FF               	movlw	0FFh
 13673  13DC  0626               	xorwf	1+(litterlanguage_pause@context)^0100h+05h,w
 13674  13DD  1D03               	skipz
 13675  13DE  2BE1               	goto	u11785
 13676  13DF  30FF               	movlw	0FFh
 13677  13E0  0625               	xorwf	0+(litterlanguage_pause@context)^0100h+05h,w
 13678  13E1                     u11785:
 13679  13E1  1903               	skipnz
 13680  13E2  2BE4               	goto	u11781
 13681  13E3  2BE5               	goto	u11780
 13682  13E4                     u11781:
 13683  13E4  2BFC               	goto	l38127
 13684  13E5                     u11780:
 13685                           	line	319
 13686                           	
 13687  13E5                     l38125:	
 13688                           ;litterlanguage.c: 319: settimeout(&timer_fill, context.fill);
 13689  13E5  30EA               	movlw	(_timer_fill&0ffh)
 13690  13E6  0020               	movlb 0	; select bank0
 13691  13E7  00AD               	movwf	(?_settimeout)
 13692  13E8  3000               	movlw	0x1/2
 13693  13E9  00AE               	movwf	(?_settimeout+1)
 13694  13EA  3005               	movlw	(05h)
 13695  13EB  3E20               	addlw	litterlanguage_pause@context&0ffh
 13696  13EC  0086               	movwf	fsr1l
 13697  13ED  3001               	movlw 1	; select bank2/3
 13698  13EE  0087               	movwf fsr1h	
 13699                           	
 13700  13EF  3F40               	moviw	[0]fsr1
 13701  13F0  00AF               	movwf	0+(?_settimeout)+02h
 13702  13F1  3F41               	moviw	[1]fsr1
 13703  13F2  00B0               	movwf	1+(?_settimeout)+02h
 13704  13F3  3F42               	moviw	[2]fsr1
 13705  13F4  00B1               	movwf	2+(?_settimeout)+02h
 13706  13F5  3F43               	moviw	[3]fsr1
 13707  13F6  00B2               	movwf	3+(?_settimeout)+02h
 13708  13F7  31A0  20CF  3192   	fcall	_settimeout
 13709  13FA  2BFC               	goto	l38127
 13710                           	
 13711  13FB                     l4297:	
 13712  13FB  2BFC               	goto	l38127
 13713                           	line	320
 13714                           	
 13715  13FC                     l4296:	
 13716                           	
 13717  13FC                     l38127:	
 13718                           ;litterlanguage.c: 320: if (error_drain) {
 13719  13FC  1E70               	btfss	(_error_drain/8),(_error_drain)&7
 13720  13FD  2BFF               	goto	u11791
 13721  13FE  2C00               	goto	u11790
 13722  13FF                     u11791:
 13723  13FF  2C1D               	goto	l38135
 13724  1400                     u11790:
 13725                           	line	321
 13726                           	
 13727  1400                     l38129:	
 13728                           ;litterlanguage.c: 321: error_drain = 0;
 13729  1400  1270               	bcf	(_error_drain/8),(_error_drain)&7
 13730                           	line	322
 13731                           	
 13732  1401                     l38131:	
 13733                           ;litterlanguage.c: 322: litterlanguage_event(2, error_drain);
 13734  1401  3000               	movlw	0
 13735  1402  1A70               	btfsc	(_error_drain/8),(_error_drain)&7
 13736  1403  3001               	movlw	1
 13737  1404  0020               	movlb 0	; select bank0
 13738  1405  00CF               	movwf	(??_litterlanguage_pause+0)+0
 13739  1406  084F               	movf	(??_litterlanguage_pause+0)+0,w
 13740  1407  00D7               	movwf	(?_litterlanguage_event)
 13741  1408  3002               	movlw	(02h)
 13742  1409  31A2  2206  3192   	fcall	_litterlanguage_event
 13743                           	line	323
 13744                           	
 13745  140C                     l38133:	
 13746                           ;litterlanguage.c: 323: settimeout(&timer_drain, ((0*60+10)*((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8)));
 13747  140C  30E4               	movlw	(_timer_drain&0ffh)
 13748  140D  0020               	movlb 0	; select bank0
 13749  140E  00AD               	movwf	(?_settimeout)
 13750  140F  3000               	movlw	0x1/2
 13751  1410  00AE               	movwf	(?_settimeout+1)
 13752  1411  3000               	movlw	0
 13753  1412  00B2               	movwf	3+(?_settimeout)+02h
 13754  1413  3013               	movlw	013h
 13755  1414  00B1               	movwf	2+(?_settimeout)+02h
 13756  1415  3012               	movlw	012h
 13757  1416  00B0               	movwf	1+(?_settimeout)+02h
 13758  1417  30D0               	movlw	0D0h
 13759  1418  00AF               	movwf	0+(?_settimeout)+02h
 13760                           
 13761  1419  31A0  20CF  3192   	fcall	_settimeout
 13762                           	line	324
 13763                           ;litterlanguage.c: 324: } else if (context.drain != 0xFFFFFFFF)
 13764  141C  2C47               	goto	l38139
 13765                           	
 13766  141D                     l4298:	
 13767                           	
 13768  141D                     l38135:	
 13769  141D  30FF               	movlw	0FFh
 13770  141E  0022               	movlb 2	; select bank2
 13771  141F  062C               	xorwf	3+(litterlanguage_pause@context)^0100h+09h,w
 13772  1420  1D03               	skipz
 13773  1421  2C2C               	goto	u11805
 13774  1422  30FF               	movlw	0FFh
 13775  1423  062B               	xorwf	2+(litterlanguage_pause@context)^0100h+09h,w
 13776  1424  1D03               	skipz
 13777  1425  2C2C               	goto	u11805
 13778  1426  30FF               	movlw	0FFh
 13779  1427  062A               	xorwf	1+(litterlanguage_pause@context)^0100h+09h,w
 13780  1428  1D03               	skipz
 13781  1429  2C2C               	goto	u11805
 13782  142A  30FF               	movlw	0FFh
 13783  142B  0629               	xorwf	0+(litterlanguage_pause@context)^0100h+09h,w
 13784  142C                     u11805:
 13785  142C  1903               	skipnz
 13786  142D  2C2F               	goto	u11801
 13787  142E  2C30               	goto	u11800
 13788  142F                     u11801:
 13789  142F  2C47               	goto	l38139
 13790  1430                     u11800:
 13791                           	line	325
 13792                           	
 13793  1430                     l38137:	
 13794                           ;litterlanguage.c: 325: settimeout(&timer_drain, context.drain);
 13795  1430  30E4               	movlw	(_timer_drain&0ffh)
 13796  1431  0020               	movlb 0	; select bank0
 13797  1432  00AD               	movwf	(?_settimeout)
 13798  1433  3000               	movlw	0x1/2
 13799  1434  00AE               	movwf	(?_settimeout+1)
 13800  1435  3009               	movlw	(09h)
 13801  1436  3E20               	addlw	litterlanguage_pause@context&0ffh
 13802  1437  0086               	movwf	fsr1l
 13803  1438  3001               	movlw 1	; select bank2/3
 13804  1439  0087               	movwf fsr1h	
 13805                           	
 13806  143A  3F40               	moviw	[0]fsr1
 13807  143B  00AF               	movwf	0+(?_settimeout)+02h
 13808  143C  3F41               	moviw	[1]fsr1
 13809  143D  00B0               	movwf	1+(?_settimeout)+02h
 13810  143E  3F42               	moviw	[2]fsr1
 13811  143F  00B1               	movwf	2+(?_settimeout)+02h
 13812  1440  3F43               	moviw	[3]fsr1
 13813  1441  00B2               	movwf	3+(?_settimeout)+02h
 13814  1442  31A0  20CF  3192   	fcall	_settimeout
 13815  1445  2C47               	goto	l38139
 13816                           	
 13817  1446                     l4300:	
 13818  1446  2C47               	goto	l38139
 13819                           	line	326
 13820                           	
 13821  1447                     l4299:	
 13822                           	
 13823  1447                     l38139:	
 13824                           ;litterlanguage.c: 326: if (context.autodose != 0xFFFFFFFF)
 13825  1447  30FF               	movlw	0FFh
 13826  1448  0022               	movlb 2	; select bank2
 13827  1449  0630               	xorwf	3+(litterlanguage_pause@context)^0100h+0Dh,w
 13828  144A  1D03               	skipz
 13829  144B  2C56               	goto	u11815
 13830  144C  30FF               	movlw	0FFh
 13831  144D  062F               	xorwf	2+(litterlanguage_pause@context)^0100h+0Dh,w
 13832  144E  1D03               	skipz
 13833  144F  2C56               	goto	u11815
 13834  1450  30FF               	movlw	0FFh
 13835  1451  062E               	xorwf	1+(litterlanguage_pause@context)^0100h+0Dh,w
 13836  1452  1D03               	skipz
 13837  1453  2C56               	goto	u11815
 13838  1454  30FF               	movlw	0FFh
 13839  1455  062D               	xorwf	0+(litterlanguage_pause@context)^0100h+0Dh,w
 13840  1456                     u11815:
 13841  1456  1903               	skipnz
 13842  1457  2C59               	goto	u11811
 13843  1458  2C5A               	goto	u11810
 13844  1459                     u11811:
 13845  1459  2C70               	goto	l38143
 13846  145A                     u11810:
 13847                           	line	327
 13848                           	
 13849  145A                     l38141:	
 13850                           ;litterlanguage.c: 327: settimeout(&timer_autodose, context.autodose);
 13851  145A  3064               	movlw	(_timer_autodose&0ffh)
 13852  145B  0020               	movlb 0	; select bank0
 13853  145C  00AD               	movwf	(?_settimeout)
 13854  145D  3001               	movlw	0x2/2
 13855  145E  00AE               	movwf	(?_settimeout+1)
 13856  145F  300D               	movlw	(0Dh)
 13857  1460  3E20               	addlw	litterlanguage_pause@context&0ffh
 13858  1461  0086               	movwf	fsr1l
 13859  1462  3001               	movlw 1	; select bank2/3
 13860  1463  0087               	movwf fsr1h	
 13861                           	
 13862  1464  3F40               	moviw	[0]fsr1
 13863  1465  00AF               	movwf	0+(?_settimeout)+02h
 13864  1466  3F41               	moviw	[1]fsr1
 13865  1467  00B0               	movwf	1+(?_settimeout)+02h
 13866  1468  3F42               	moviw	[2]fsr1
 13867  1469  00B1               	movwf	2+(?_settimeout)+02h
 13868  146A  3F43               	moviw	[3]fsr1
 13869  146B  00B2               	movwf	3+(?_settimeout)+02h
 13870  146C  31A0  20CF  3192   	fcall	_settimeout
 13871  146F  2C70               	goto	l38143
 13872                           	
 13873  1470                     l4301:	
 13874                           	line	329
 13875                           	
 13876  1470                     l38143:	
 13877                           ;litterlanguage.c: 329: set_Bowl(context.bowl);
 13878  1470  0022               	movlb 2	; select bank2
 13879  1471  0820               	movf	(litterlanguage_pause@context)^0100h,w
 13880  1472  3903               	andlw	(1<<2)-1
 13881  1473  31AA  2256  3192   	fcall	_set_Bowl
 13882                           	line	330
 13883                           	
 13884  1476                     l38145:	
 13885                           ;litterlanguage.c: 330: set_Arm(context.arm);
 13886  1476  0022               	movlb 2	; select bank2
 13887  1477  0C20               	rrf	(litterlanguage_pause@context)^0100h,w
 13888  1478  0C89               	rrf	wreg,f
 13889  1479  3903               	andlw	(1<<2)-1
 13890  147A  31AA  227A  3192   	fcall	_set_Arm
 13891                           	line	331
 13892                           	
 13893  147D                     l38147:	
 13894                           ;litterlanguage.c: 331: water_fill(context.water);
 13895  147D  0022               	movlb 2	; select bank2
 13896  147E  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 13897  147F  3901               	andlw	(1<<1)-1
 13898  1480  31A8  209D  3192   	fcall	_water_fill
 13899                           	line	332
 13900                           	
 13901  1483                     l38149:	
 13902                           ;litterlanguage.c: 332: set_Dosage(context.dosage);
 13903  1483  0022               	movlb 2	; select bank2
 13904  1484  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 13905  1485  0C89               	rrf	wreg,f
 13906  1486  0C89               	rrf	wreg,f
 13907  1487  3901               	andlw	(1<<1)-1
 13908  1488  31B7  27DE  3192   	fcall	_set_Dosage
 13909                           	line	333
 13910                           	
 13911  148B                     l38151:	
 13912                           ;litterlanguage.c: 333: set_Pump(context.pump);
 13913  148B  0022               	movlb 2	; select bank2
 13914  148C  0E20               	swapf	(litterlanguage_pause@context)^0100h,w
 13915  148D  0C89               	rrf	wreg,f
 13916  148E  3901               	andlw	(1<<1)-1
 13917  148F  31B7  27EF  3192   	fcall	_set_Pump
 13918                           	line	334
 13919                           	
 13920  1492                     l38153:	
 13921                           ;litterlanguage.c: 334: set_Dryer(context.dryer);
 13922  1492  0022               	movlb 2	; select bank2
 13923  1493  0D20               	rlf	(litterlanguage_pause@context)^0100h,w
 13924  1494  0D20               	rlf	(litterlanguage_pause@context)^0100h,w
 13925  1495  3901               	andlw	1
 13926  1496  31A8  203D  3192   	fcall	_set_Dryer
 13927  1499  2C9A               	goto	l38155
 13928                           	line	335
 13929                           	
 13930  149A                     l4292:	
 13931                           	line	336
 13932                           	
 13933  149A                     l38155:	
 13934                           ;litterlanguage.c: 335: }
 13935                           ;litterlanguage.c: 336: paused = pause;
 13936  149A  12F1               	bcf	(_paused/8),(_paused)&7
 13937  149B  0020               	movlb 0	; select bank0
 13938  149C  1C50               	btfss	(litterlanguage_pause@pause),0
 13939  149D  2C9F               	goto	u11825
 13940  149E  16F1               	bsf	(_paused/8),(_paused)&7
 13941  149F                     u11825:
 13942                           
 13943                           	line	337
 13944                           	
 13945  149F                     l4290:	
 13946  149F  0008               	return
 13947                           	opt stack 0
 13948                           GLOBAL	__end_of_litterlanguage_pause
 13949  14A0                     	__end_of_litterlanguage_pause:
 13950 ;; =============== function _litterlanguage_pause ends ============
 13951                           
 13952                           	signat	_litterlanguage_pause,4216
 13953                           	global	_cmdline_work
 13954                           psect	text3324,local,class=CODE,delta=2
 13955                           global __ptext3324
 13956  29F3                     __ptext3324:
 13957                           
 13958 ;; *************** function _cmdline_work *****************
 13959 ;; Defined at:
 13960 ;;		line 72 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;		None
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  rxd             1   62[BANK0 ] unsigned char 
 13965 ;; Return value:  Size  Location     Type
 13966 ;;		None               void
 13967 ;; Registers used:
 13968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13977 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13978 ;;Total ram usage:        1 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:    7
 13981 ;; This function calls:
 13982 ;;		_putch
 13983 ;;		_proc_char
 13984 ;;		_readch
 13985 ;; This function is called by:
 13986 ;;		_main
 13987 ;; This function uses a non-reentrant model
 13988 ;;
 13989                           psect	text3324
 13990                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 13991                           	line	72
 13992                           	global	__size_of_cmdline_work
 13993  001F                     	__size_of_cmdline_work	equ	__end_of_cmdline_work-_cmdline_work
 13994                           	
 13995  29F3                     _cmdline_work:	
 13996                           	opt	stack 8
 13997                           ; Regs used in _cmdline_work: [allreg]
 13998                           	line	75
 13999                           	
 14000  29F3                     l38051:	
 14001                           ;cmdline.c: 73: char rxd ;
 14002                           ;cmdline.c: 75: while (readch(&rxd))
 14003  29F3  2A07               	goto	l38059
 14004                           	
 14005  29F4                     l15117:	
 14006                           	line	76
 14007                           ;cmdline.c: 76: switch(rxd) {
 14008  29F4  2A00               	goto	l38057
 14009                           	line	77
 14010                           ;cmdline.c: 77: case 0x05:
 14011                           	
 14012  29F5                     l15119:	
 14013                           	line	78
 14014                           	
 14015  29F5                     l38053:	
 14016                           ;cmdline.c: 78: putch(0x06);
 14017  29F5  3006               	movlw	(06h)
 14018  29F6  31AB  2310  31A9   	fcall	_putch
 14019                           	line	79
 14020                           ;cmdline.c: 79: break;
 14021  29F9  2A07               	goto	l38059
 14022                           	line	80
 14023                           ;cmdline.c: 80: default:
 14024                           	
 14025  29FA                     l15121:	
 14026                           	line	81
 14027                           	
 14028  29FA                     l38055:	
 14029                           ;cmdline.c: 81: proc_char(rxd);
 14030  29FA  0020               	movlb 0	; select bank0
 14031  29FB  085F               	movf	(cmdline_work@rxd),w
 14032  29FC  31A5  25AD  31A9   	fcall	_proc_char
 14033                           	line	82
 14034                           ;cmdline.c: 82: }
 14035  29FF  2A07               	goto	l38059
 14036                           	line	76
 14037                           	
 14038  2A00                     l15118:	
 14039                           	
 14040  2A00                     l38057:	
 14041  2A00  0020               	movlb 0	; select bank0
 14042  2A01  085F               	movf	(cmdline_work@rxd),w
 14043                           	; Switch size 1, requested type "space"
 14044                           ; Number of cases is 1, Range of values is 5 to 5
 14045                           ; switch strategies available:
 14046                           ; Name         Instructions Cycles
 14047                           ; simple_byte            4     3 (average)
 14048                           ; direct_byte           11     9 (fixed)
 14049                           ; jumptable            263     9 (fixed)
 14050                           ;	Chosen strategy is simple_byte
 14051                           
 14052                           	opt asmopt_off
 14053  2A02  3A05               	xorlw	5^0	; case 5
 14054  2A03  1903               	skipnz
 14055  2A04  29F5               	goto	l38053
 14056  2A05  29FA               	goto	l38055
 14057                           	opt asmopt_on
 14058                           
 14059                           	line	82
 14060                           	
 14061  2A06                     l15120:	
 14062  2A06  2A07               	goto	l38059
 14063                           	
 14064  2A07                     l15116:	
 14065                           	line	75
 14066                           	
 14067  2A07                     l38059:	
 14068  2A07  305F               	movlw	(cmdline_work@rxd)&0ffh
 14069  2A08  31A2  226F  31A9   	fcall	_readch
 14070  2A0B  3800               	iorlw	0
 14071  2A0C  1D03               	skipz
 14072  2A0D  2A0F               	goto	u11721
 14073  2A0E  2A10               	goto	u11720
 14074  2A0F                     u11721:
 14075  2A0F  2A00               	goto	l38057
 14076  2A10                     u11720:
 14077  2A10  2A11               	goto	l15123
 14078                           	
 14079  2A11                     l15122:	
 14080                           	line	83
 14081                           	
 14082  2A11                     l15123:	
 14083  2A11  0008               	return
 14084                           	opt stack 0
 14085                           GLOBAL	__end_of_cmdline_work
 14086  2A12                     	__end_of_cmdline_work:
 14087 ;; =============== function _cmdline_work ends ============
 14088                           
 14089                           	signat	_cmdline_work,88
 14090                           	global	_catsensor_work
 14091                           psect	text3325,local,class=CODE,delta=2
 14092                           global __ptext3325
 14093  262E                     __ptext3325:
 14094                           
 14095 ;; *************** function _catsensor_work *****************
 14096 ;; Defined at:
 14097 ;;		line 86 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;		None
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;		None
 14102 ;; Return value:  Size  Location     Type
 14103 ;;		None               void
 14104 ;; Registers used:
 14105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14115 ;;Total ram usage:        1 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    7
 14118 ;; This function calls:
 14119 ;;		_timeoutexpired
 14120 ;;		_settimeout
 14121 ;;		_timeoutnever
 14122 ;;		_catsensor_event
 14123 ;; This function is called by:
 14124 ;;		_main
 14125 ;; This function uses a non-reentrant model
 14126 ;;
 14127                           psect	text3325
 14128                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 14129                           	line	86
 14130                           	global	__size_of_catsensor_work
 14131  008F                     	__size_of_catsensor_work	equ	__end_of_catsensor_work-_catsensor_work
 14132                           	
 14133  262E                     _catsensor_work:	
 14134                           	opt	stack 8
 14135                           ; Regs used in _catsensor_work: [wreg-status,0+pclath+cstack]
 14136                           	line	88
 14137                           	
 14138  262E                     l38015:	
 14139                           ;catsensor.c: 87: if (!pinging &&
 14140                           ;catsensor.c: 88: timeoutexpired(&pingtime)) {
 14141  262E  1B71               	btfsc	(_pinging/8),(_pinging)&7
 14142  262F  2E31               	goto	u11611
 14143  2630  2E32               	goto	u11610
 14144  2631                     u11611:
 14145  2631  2E60               	goto	l38037
 14146  2632                     u11610:
 14147                           	
 14148  2632                     l38017:	
 14149  2632  30B4               	movlw	(_pingtime&0ffh)
 14150  2633  0020               	movlb 0	; select bank0
 14151  2634  00A9               	movwf	(?_timeoutexpired)
 14152  2635  3001               	movlw	0x3/2
 14153  2636  00AA               	movwf	(?_timeoutexpired+1)
 14154  2637  31A3  234C  31A6   	fcall	_timeoutexpired
 14155  263A  3A00               	xorlw	0&0ffh
 14156  263B  1903               	skipnz
 14157  263C  2E3E               	goto	u11621
 14158  263D  2E3F               	goto	u11620
 14159  263E                     u11621:
 14160  263E  2E60               	goto	l38037
 14161  263F                     u11620:
 14162                           	line	90
 14163                           	
 14164  263F                     l38019:	
 14165                           ;catsensor.c: 90: settimeout(&pingtime, (((((4UL * (1000UL * ((1000UL)))))/4)/8) / 10));
 14166  263F  30B4               	movlw	(_pingtime&0ffh)
 14167  2640  0020               	movlb 0	; select bank0
 14168  2641  00AD               	movwf	(?_settimeout)
 14169  2642  3001               	movlw	0x3/2
 14170  2643  00AE               	movwf	(?_settimeout+1)
 14171  2644  3000               	movlw	0
 14172  2645  00B2               	movwf	3+(?_settimeout)+02h
 14173  2646  3000               	movlw	0
 14174  2647  00B1               	movwf	2+(?_settimeout)+02h
 14175  2648  3030               	movlw	030h
 14176  2649  00B0               	movwf	1+(?_settimeout)+02h
 14177  264A  30D4               	movlw	0D4h
 14178  264B  00AF               	movwf	0+(?_settimeout)+02h
 14179                           
 14180  264C  31A0  20CF  31A6   	fcall	_settimeout
 14181                           	line	92
 14182                           	
 14183  264F                     l38021:	
 14184                           ;catsensor.c: 92: echoed = 0;
 14185  264F  11F0               	bcf	(_echoed/8),(_echoed)&7
 14186                           	line	94
 14187                           	
 14188  2650                     l38023:	
 14189                           ;catsensor.c: 94: pinging = 1;
 14190  2650  1771               	bsf	(_pinging/8),(_pinging)&7
 14191                           	line	97
 14192                           	
 14193  2651                     l38025:	
 14194                           ;catsensor.c: 97: PR2 = 0x54 ;
 14195  2651  3054               	movlw	(054h)
 14196  2652  0020               	movlb 0	; select bank0
 14197  2653  009B               	movwf	(27)	;volatile
 14198                           	line	101
 14199                           	
 14200  2654                     l38027:	
 14201                           ;catsensor.c: 101: T2CON = 0x7D ;
 14202  2654  307D               	movlw	(07Dh)
 14203  2655  009C               	movwf	(28)	;volatile
 14204                           	line	103
 14205                           	
 14206  2656                     l38029:	
 14207                           ;catsensor.c: 103: CCPR1L = 0x2A ;
 14208  2656  302A               	movlw	(02Ah)
 14209  2657  0025               	movlb 5	; select bank5
 14210  2658  0091               	movwf	(657)^0280h	;volatile
 14211                           	line	106
 14212                           	
 14213  2659                     l38031:	
 14214                           ;catsensor.c: 106: CCP1CON = 0x1F ;
 14215  2659  301F               	movlw	(01Fh)
 14216  265A  0093               	movwf	(659)^0280h	;volatile
 14217                           	line	108
 14218                           	
 14219  265B                     l38033:	
 14220                           ;catsensor.c: 108: TMR2IF = 0;
 14221  265B  0020               	movlb 0	; select bank0
 14222  265C  1091               	bcf	(137/8),(137)&7
 14223                           	line	110
 14224                           	
 14225  265D                     l38035:	
 14226                           ;catsensor.c: 110: TMR2IE = 1;
 14227  265D  0021               	movlb 1	; select bank1
 14228  265E  1491               	bsf	(1161/8)^080h,(1161)&7
 14229  265F  2E60               	goto	l38037
 14230                           	line	111
 14231                           	
 14232  2660                     l13051:	
 14233                           	line	113
 14234                           	
 14235  2660                     l38037:	
 14236                           ;catsensor.c: 111: }
 14237                           ;catsensor.c: 113: if (detected_cur != detected_old) {
 14238  2660  0020               	movlb 0	; select bank0
 14239  2661  196D               	btfsc	(_detected_old/8),(_detected_old)&7
 14240  2662  2E64               	goto	u11631
 14241  2663  2E66               	goto	u11630
 14242  2664                     u11631:
 14243  2664  3001               	movlw	1
 14244  2665  2E67               	goto	u11632
 14245  2666                     u11630:
 14246  2666  3000               	movlw	0
 14247  2667                     u11632:
 14248  2667  00D2               	movwf	(??_catsensor_work+0)+0
 14249  2668  1970               	btfsc	(_detected_cur/8),(_detected_cur)&7
 14250  2669  2E6B               	goto	u11641
 14251  266A  2E6D               	goto	u11640
 14252  266B                     u11641:
 14253  266B  3001               	movlw	1
 14254  266C  2E6E               	goto	u11642
 14255  266D                     u11640:
 14256  266D  3000               	movlw	0
 14257  266E                     u11642:
 14258  266E  0652               	xorwf	(??_catsensor_work+0)+0,w
 14259  266F  1903               	skipnz
 14260  2670  2E72               	goto	u11651
 14261  2671  2E73               	goto	u11650
 14262  2672                     u11651:
 14263  2672  2E87               	goto	l13052
 14264  2673                     u11650:
 14265                           	line	114
 14266                           	
 14267  2673                     l38039:	
 14268                           ;catsensor.c: 114: settimeout(&debouncer, (3 * (((((4UL * (1000UL * ((1000UL)))))/4)/8) 
                                 / 10)));
 14269  2673  3058               	movlw	(_debouncer&0ffh)
 14270  2674  00AD               	movwf	(?_settimeout)
 14271  2675  3001               	movlw	0x2/2
 14272  2676  00AE               	movwf	(?_settimeout+1)
 14273  2677  3000               	movlw	0
 14274  2678  00B2               	movwf	3+(?_settimeout)+02h
 14275  2679  3000               	movlw	0
 14276  267A  00B1               	movwf	2+(?_settimeout)+02h
 14277  267B  3092               	movlw	092h
 14278  267C  00B0               	movwf	1+(?_settimeout)+02h
 14279  267D  307C               	movlw	07Ch
 14280  267E  00AF               	movwf	0+(?_settimeout)+02h
 14281                           
 14282  267F  31A0  20CF  31A6   	fcall	_settimeout
 14283                           	line	115
 14284                           	
 14285  2682                     l38041:	
 14286                           ;catsensor.c: 115: detected_old = detected_cur;
 14287  2682  0020               	movlb 0	; select bank0
 14288  2683  116D               	bcf	(_detected_old/8),(_detected_old)&7
 14289  2684  1D70               	btfss	(_detected_cur/8),(_detected_cur)&7
 14290  2685  2E87               	goto	u11665
 14291  2686  156D               	bsf	(_detected_old/8),(_detected_old)&7
 14292  2687                     u11665:
 14293                           
 14294                           	line	116
 14295                           	
 14296  2687                     l13052:	
 14297                           	line	119
 14298                           ;catsensor.c: 116: }
 14299                           ;catsensor.c: 119: if (timeoutexpired(&debouncer)) {
 14300  2687  3058               	movlw	(_debouncer&0ffh)
 14301  2688  0020               	movlb 0	; select bank0
 14302  2689  00A9               	movwf	(?_timeoutexpired)
 14303  268A  3001               	movlw	0x2/2
 14304  268B  00AA               	movwf	(?_timeoutexpired+1)
 14305  268C  31A3  234C  31A6   	fcall	_timeoutexpired
 14306  268F  3A00               	xorlw	0&0ffh
 14307  2690  1903               	skipnz
 14308  2691  2E93               	goto	u11671
 14309  2692  2E94               	goto	u11670
 14310  2693                     u11671:
 14311  2693  2EBC               	goto	l13055
 14312  2694                     u11670:
 14313                           	line	120
 14314                           	
 14315  2694                     l38043:	
 14316                           ;catsensor.c: 120: timeoutnever(&debouncer);
 14317  2694  3058               	movlw	(_debouncer&0ffh)
 14318  2695  0020               	movlb 0	; select bank0
 14319  2696  00A5               	movwf	(?_timeoutnever)
 14320  2697  3001               	movlw	0x2/2
 14321  2698  00A6               	movwf	(?_timeoutnever+1)
 14322  2699  31A9  2162  31A6   	fcall	_timeoutnever
 14323                           	line	121
 14324                           	
 14325  269C                     l38045:	
 14326                           ;catsensor.c: 121: if (detected_cur != detected_dbc) {
 14327  269C  0020               	movlb 0	; select bank0
 14328  269D  18ED               	btfsc	(_detected_dbc/8),(_detected_dbc)&7
 14329  269E  2EA0               	goto	u11681
 14330  269F  2EA2               	goto	u11680
 14331  26A0                     u11681:
 14332  26A0  3001               	movlw	1
 14333  26A1  2EA3               	goto	u11682
 14334  26A2                     u11680:
 14335  26A2  3000               	movlw	0
 14336  26A3                     u11682:
 14337  26A3  00D2               	movwf	(??_catsensor_work+0)+0
 14338  26A4  1970               	btfsc	(_detected_cur/8),(_detected_cur)&7
 14339  26A5  2EA7               	goto	u11691
 14340  26A6  2EA9               	goto	u11690
 14341  26A7                     u11691:
 14342  26A7  3001               	movlw	1
 14343  26A8  2EAA               	goto	u11692
 14344  26A9                     u11690:
 14345  26A9  3000               	movlw	0
 14346  26AA                     u11692:
 14347  26AA  0652               	xorwf	(??_catsensor_work+0)+0,w
 14348  26AB  1903               	skipnz
 14349  26AC  2EAE               	goto	u11701
 14350  26AD  2EAF               	goto	u11700
 14351  26AE                     u11701:
 14352  26AE  2EBC               	goto	l13055
 14353  26AF                     u11700:
 14354                           	line	122
 14355                           	
 14356  26AF                     l38047:	
 14357                           ;catsensor.c: 122: detected_dbc = detected_cur;
 14358  26AF  10ED               	bcf	(_detected_dbc/8),(_detected_dbc)&7
 14359  26B0  1D70               	btfss	(_detected_cur/8),(_detected_cur)&7
 14360  26B1  2EB3               	goto	u11715
 14361  26B2  14ED               	bsf	(_detected_dbc/8),(_detected_dbc)&7
 14362  26B3                     u11715:
 14363                           
 14364                           	line	123
 14365                           	
 14366  26B3                     l38049:	
 14367                           ;catsensor.c: 123: catsensor_event(detected_dbc);
 14368  26B3  3000               	movlw	0
 14369  26B4  0020               	movlb 0	; select bank0
 14370  26B5  18ED               	btfsc	(_detected_dbc/8),(_detected_dbc)&7
 14371  26B6  3001               	movlw	1
 14372  26B7  3198  2078  31A6   	fcall	_catsensor_event
 14373  26BA  2EBC               	goto	l13055
 14374                           	line	124
 14375                           	
 14376  26BB                     l13054:	
 14377  26BB  2EBC               	goto	l13055
 14378                           	line	125
 14379                           	
 14380  26BC                     l13053:	
 14381                           	line	126
 14382                           	
 14383  26BC                     l13055:	
 14384  26BC  0008               	return
 14385                           	opt stack 0
 14386                           GLOBAL	__end_of_catsensor_work
 14387  26BD                     	__end_of_catsensor_work:
 14388 ;; =============== function _catsensor_work ends ============
 14389                           
 14390                           	signat	_catsensor_work,88
 14391                           	global	_proc_char
 14392                           psect	text3326,local,class=CODE,delta=2
 14393                           global __ptext3326
 14394  25AD                     __ptext3326:
 14395                           
 14396 ;; *************** function _proc_char *****************
 14397 ;; Defined at:
 14398 ;;		line 92 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  rxd             1    wreg     unsigned char 
 14401 ;; Auto vars:     Size  Location     Type
 14402 ;;  rxd             1   61[BANK0 ] unsigned char 
 14403 ;; Return value:  Size  Location     Type
 14404 ;;		None               void
 14405 ;; Registers used:
 14406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14416 ;;Total ram usage:        2 bytes
 14417 ;; Hardware stack levels used:    1
 14418 ;; Hardware stack levels required when called:    6
 14419 ;; This function calls:
 14420 ;;		_putch
 14421 ;;		_proc_line
 14422 ;;		_printf
 14423 ;; This function is called by:
 14424 ;;		_cmdline_work
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           psect	text3326
 14428                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 14429                           	line	92
 14430                           	global	__size_of_proc_char
 14431  0081                     	__size_of_proc_char	equ	__end_of_proc_char-_proc_char
 14432                           	
 14433  25AD                     _proc_char:	
 14434                           	opt	stack 8
 14435                           ; Regs used in _proc_char: [allreg]
 14436                           ;proc_char@rxd stored from wreg
 14437                           	line	95
 14438  25AD  0020               	movlb 0	; select bank0
 14439  25AE  00DE               	movwf	(proc_char@rxd)
 14440                           	
 14441  25AF                     l37969:	
 14442                           ;cmdline.c: 93: static unsigned char curcolumn = 0;
 14443                           ;cmdline.c: 95: if ((rxd >= ' ') && (rxd <= '~')) {
 14444  25AF  3020               	movlw	(020h)
 14445  25B0  025E               	subwf	(proc_char@rxd),w
 14446  25B1  1C03               	skipc
 14447  25B2  2DB4               	goto	u11491
 14448  25B3  2DB5               	goto	u11490
 14449  25B4                     u11491:
 14450  25B4  2DE4               	goto	l37987
 14451  25B5                     u11490:
 14452                           	
 14453  25B5                     l37971:	
 14454  25B5  307F               	movlw	(07Fh)
 14455  25B6  025E               	subwf	(proc_char@rxd),w
 14456  25B7  1803               	skipnc
 14457  25B8  2DBA               	goto	u11501
 14458  25B9  2DBB               	goto	u11500
 14459  25BA                     u11501:
 14460  25BA  2DE4               	goto	l37987
 14461  25BB                     u11500:
 14462                           	line	96
 14463                           	
 14464  25BB                     l37973:	
 14465                           ;cmdline.c: 96: if (curcolumn < ((20)-1)) {
 14466  25BB  3013               	movlw	(013h)
 14467  25BC  0267               	subwf	(proc_char@curcolumn),w
 14468  25BD  1803               	skipnc
 14469  25BE  2DC0               	goto	u11511
 14470  25BF  2DC1               	goto	u11510
 14471  25C0                     u11511:
 14472  25C0  2DD8               	goto	l37983
 14473  25C1                     u11510:
 14474                           	line	98
 14475                           	
 14476  25C1                     l37975:	
 14477                           ;cmdline.c: 98: linebuffer[curcolumn] = rxd;
 14478  25C1  085E               	movf	(proc_char@rxd),w
 14479  25C2  00DD               	movwf	(??_proc_char+0)+0
 14480  25C3  0867               	movf	(proc_char@curcolumn),w
 14481  25C4  3EA0               	addlw	_linebuffer&0ffh
 14482  25C5  0086               	movwf	fsr1l
 14483  25C6  3001               	movlw 1	; select bank3/4
 14484  25C7  0087               	movwf fsr1h	
 14485                           	
 14486  25C8  085D               	movf	(??_proc_char+0)+0,w
 14487  25C9  0081               	movwf	indf1
 14488                           	line	99
 14489                           	
 14490  25CA                     l37977:	
 14491                           ;cmdline.c: 99: curcolumn++;
 14492  25CA  3001               	movlw	(01h)
 14493  25CB  00DD               	movwf	(??_proc_char+0)+0
 14494  25CC  085D               	movf	(??_proc_char+0)+0,w
 14495  25CD  07E7               	addwf	(proc_char@curcolumn),f
 14496                           	line	101
 14497                           	
 14498  25CE                     l37979:	
 14499                           ;cmdline.c: 101: if (localecho)
 14500  25CE  086F               	movf	(_localecho),w
 14501  25CF  1D03               	skipz
 14502  25D0  2DD2               	goto	u11520
 14503  25D1  2E2D               	goto	l15142
 14504  25D2                     u11520:
 14505                           	line	102
 14506                           	
 14507  25D2                     l37981:	
 14508                           ;cmdline.c: 102: putch(rxd);
 14509  25D2  085E               	movf	(proc_char@rxd),w
 14510  25D3  31AB  2310  31A5   	fcall	_putch
 14511  25D6  2E2D               	goto	l15142
 14512                           	
 14513  25D7                     l15130:	
 14514                           	line	103
 14515                           ;cmdline.c: 103: } else
 14516  25D7  2E2D               	goto	l15142
 14517                           	
 14518  25D8                     l15129:	
 14519                           	line	105
 14520                           	
 14521  25D8                     l37983:	
 14522                           ;cmdline.c: 105: if (localecho)
 14523  25D8  0020               	movlb 0	; select bank0
 14524  25D9  086F               	movf	(_localecho),w
 14525  25DA  1D03               	skipz
 14526  25DB  2DDD               	goto	u11530
 14527  25DC  2E2D               	goto	l15142
 14528  25DD                     u11530:
 14529                           	line	106
 14530                           	
 14531  25DD                     l37985:	
 14532                           ;cmdline.c: 106: putch('\a');
 14533  25DD  3007               	movlw	(07h)
 14534  25DE  31AB  2310  31A5   	fcall	_putch
 14535  25E1  2E2D               	goto	l15142
 14536                           	
 14537  25E2                     l15132:	
 14538  25E2  2E2D               	goto	l15142
 14539                           	line	107
 14540                           	
 14541  25E3                     l15131:	
 14542                           ;cmdline.c: 107: } else if (rxd == '\r') {
 14543  25E3  2E2D               	goto	l15142
 14544                           	
 14545  25E4                     l15128:	
 14546                           	
 14547  25E4                     l37987:	
 14548  25E4  0020               	movlb 0	; select bank0
 14549  25E5  085E               	movf	(proc_char@rxd),w
 14550  25E6  3A0D               	xorlw	0Dh&0ffh
 14551  25E7  1D03               	skipz
 14552  25E8  2DEA               	goto	u11541
 14553  25E9  2DEB               	goto	u11540
 14554  25EA                     u11541:
 14555  25EA  2E13               	goto	l38005
 14556  25EB                     u11540:
 14557                           	line	108
 14558                           	
 14559  25EB                     l37989:	
 14560                           ;cmdline.c: 108: if (localecho)
 14561  25EB  086F               	movf	(_localecho),w
 14562  25EC  1D03               	skipz
 14563  25ED  2DEF               	goto	u11550
 14564  25EE  2DF4               	goto	l37993
 14565  25EF                     u11550:
 14566                           	line	109
 14567                           	
 14568  25EF                     l37991:	
 14569                           ;cmdline.c: 109: putch('\n');
 14570  25EF  300A               	movlw	(0Ah)
 14571  25F0  31AB  2310  31A5   	fcall	_putch
 14572  25F3  2DF4               	goto	l37993
 14573                           	
 14574  25F4                     l15135:	
 14575                           	line	111
 14576                           	
 14577  25F4                     l37993:	
 14578                           ;cmdline.c: 111: if (curcolumn) {
 14579  25F4  0020               	movlb 0	; select bank0
 14580  25F5  0867               	movf	(proc_char@curcolumn),w
 14581  25F6  1D03               	skipz
 14582  25F7  2DF9               	goto	u11560
 14583  25F8  2E04               	goto	l37999
 14584  25F9                     u11560:
 14585                           	line	113
 14586                           	
 14587  25F9                     l37995:	
 14588                           ;cmdline.c: 113: linebuffer[curcolumn] = 0;
 14589  25F9  0867               	movf	(proc_char@curcolumn),w
 14590  25FA  3EA0               	addlw	_linebuffer&0ffh
 14591  25FB  0086               	movwf	fsr1l
 14592  25FC  3001               	movlw 1	; select bank3/4
 14593  25FD  0087               	movwf fsr1h	
 14594                           	
 14595  25FE  0181               	clrf	indf1
 14596                           	line	115
 14597                           	
 14598  25FF                     l37997:	
 14599                           ;cmdline.c: 115: proc_line(linebuffer);
 14600  25FF  30A0               	movlw	(_linebuffer)&0ffh
 14601  2600  319A  22CA  31A5   	fcall	_proc_line
 14602  2603  2E04               	goto	l37999
 14603                           	line	116
 14604                           	
 14605  2604                     l15136:	
 14606                           	line	117
 14607                           	
 14608  2604                     l37999:	
 14609                           ;cmdline.c: 116: }
 14610                           ;cmdline.c: 117: curcolumn = 0;
 14611  2604  0020               	movlb 0	; select bank0
 14612  2605  01E7               	clrf	(proc_char@curcolumn)
 14613                           	line	119
 14614                           	
 14615  2606                     l38001:	
 14616                           ;cmdline.c: 119: if (localecho)
 14617  2606  086F               	movf	(_localecho),w
 14618  2607  1D03               	skipz
 14619  2608  2E0A               	goto	u11570
 14620  2609  2E2D               	goto	l15142
 14621  260A                     u11570:
 14622                           	line	120
 14623                           	
 14624  260A                     l38003:	
 14625                           ;cmdline.c: 120: printf("# ");
 14626  260A  303C               	movlw	low(STR_100|8000h)
 14627  260B  00AF               	movwf	(?_printf)
 14628  260C  3089               	movlw	high(STR_100|8000h)
 14629  260D  00B0               	movwf	((?_printf))+1
 14630  260E  3194  24A0  31A5   	fcall	_printf
 14631  2611  2E2D               	goto	l15142
 14632                           	
 14633  2612                     l15137:	
 14634                           	line	121
 14635                           ;cmdline.c: 121: } else if (rxd == 0x7f) {
 14636  2612  2E2D               	goto	l15142
 14637                           	
 14638  2613                     l15134:	
 14639                           	
 14640  2613                     l38005:	
 14641  2613  0020               	movlb 0	; select bank0
 14642  2614  085E               	movf	(proc_char@rxd),w
 14643  2615  3A7F               	xorlw	07Fh&0ffh
 14644  2616  1D03               	skipz
 14645  2617  2E19               	goto	u11581
 14646  2618  2E1A               	goto	u11580
 14647  2619                     u11581:
 14648  2619  2E2D               	goto	l15142
 14649  261A                     u11580:
 14650                           	line	123
 14651                           	
 14652  261A                     l38007:	
 14653                           ;cmdline.c: 123: if (curcolumn) {
 14654  261A  0867               	movf	(proc_char@curcolumn),w
 14655  261B  1D03               	skipz
 14656  261C  2E1E               	goto	u11590
 14657  261D  2E2D               	goto	l15142
 14658  261E                     u11590:
 14659                           	line	125
 14660                           	
 14661  261E                     l38009:	
 14662                           ;cmdline.c: 125: curcolumn--;
 14663  261E  3001               	movlw	low(01h)
 14664  261F  02E7               	subwf	(proc_char@curcolumn),f
 14665                           	line	127
 14666                           	
 14667  2620                     l38011:	
 14668                           ;cmdline.c: 127: if (localecho)
 14669  2620  086F               	movf	(_localecho),w
 14670  2621  1D03               	skipz
 14671  2622  2E24               	goto	u11600
 14672  2623  2E2D               	goto	l15142
 14673  2624                     u11600:
 14674                           	line	128
 14675                           	
 14676  2624                     l38013:	
 14677                           ;cmdline.c: 128: putch(rxd);
 14678  2624  085E               	movf	(proc_char@rxd),w
 14679  2625  31AB  2310  31A5   	fcall	_putch
 14680  2628  2E2D               	goto	l15142
 14681                           	
 14682  2629                     l15141:	
 14683  2629  2E2D               	goto	l15142
 14684                           	line	129
 14685                           	
 14686  262A                     l15140:	
 14687  262A  2E2D               	goto	l15142
 14688                           	line	130
 14689                           	
 14690  262B                     l15139:	
 14691  262B  2E2D               	goto	l15142
 14692                           	line	131
 14693                           	
 14694  262C                     l15138:	
 14695  262C  2E2D               	goto	l15142
 14696                           	
 14697  262D                     l15133:	
 14698                           	
 14699  262D                     l15142:	
 14700  262D  0008               	return
 14701                           	opt stack 0
 14702                           GLOBAL	__end_of_proc_char
 14703  262E                     	__end_of_proc_char:
 14704 ;; =============== function _proc_char ends ============
 14705                           
 14706                           	signat	_proc_char,4216
 14707                           	global	_catsensor_event
 14708                           psect	text3327,local,class=CODE,delta=2
 14709                           global __ptext3327
 14710  1878                     __ptext3327:
 14711                           
 14712 ;; *************** function _catsensor_event *****************
 14713 ;; Defined at:
 14714 ;;		line 290 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;  detected        1    wreg     unsigned char 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;  detected        1   48[BANK0 ] unsigned char 
 14719 ;; Return value:  Size  Location     Type
 14720 ;;		None               void
 14721 ;; Registers used:
 14722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14729 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14731 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14732 ;;Total ram usage:        3 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:    6
 14735 ;; This function calls:
 14736 ;;		_printtime
 14737 ;;		_printf
 14738 ;;		_timeoutnever
 14739 ;;		_settimeout
 14740 ;;		_update_display
 14741 ;; This function is called by:
 14742 ;;		_catsensor_work
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           psect	text3327
 14746                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 14747                           	line	290
 14748                           	global	__size_of_catsensor_event
 14749  00B5                     	__size_of_catsensor_event	equ	__end_of_catsensor_event-_catsensor_event
 14750                           	
 14751  1878                     _catsensor_event:	
 14752                           	opt	stack 8
 14753                           ; Regs used in _catsensor_event: [wreg-status,0+pclath+cstack]
 14754                           ;catsensor_event@detected stored from wreg
 14755                           	line	292
 14756  1878  0020               	movlb 0	; select bank0
 14757  1879  00D1               	movwf	(catsensor_event@detected)
 14758                           	
 14759  187A                     l37919:	
 14760                           ;userinterface.c: 292: cat_present = detected;
 14761  187A  10F0               	bcf	(_cat_present/8),(_cat_present)&7
 14762  187B  1C51               	btfss	(catsensor_event@detected),0
 14763  187C  287E               	goto	u11315
 14764  187D  14F0               	bsf	(_cat_present/8),(_cat_present)&7
 14765  187E                     u11315:
 14766                           
 14767                           	line	294
 14768                           	
 14769  187E                     l37921:	
 14770                           ;userinterface.c: 294: printtime();
 14771  187E  31AB  233D  3198   	fcall	_printtime
 14772                           	line	295
 14773                           	
 14774  1881                     l37923:	
 14775                           ;userinterface.c: 295: printf("Cat %s\n", detected?"in":"out");
 14776  1881  0020               	movlb 0	; select bank0
 14777  1882  08D1               	movf	(catsensor_event@detected),f
 14778  1883  1D03               	skipz
 14779  1884  2886               	goto	u11321
 14780  1885  2887               	goto	u11320
 14781  1886                     u11321:
 14782  1886  288C               	goto	l37927
 14783  1887                     u11320:
 14784                           	
 14785  1887                     l37925:	
 14786  1887  3028               	movlw	low(STR_97|8000h)
 14787  1888  00CF               	movwf	(_catsensor_event$10731)
 14788  1889  3089               	movlw	high(STR_97|8000h)
 14789  188A  00D0               	movwf	((_catsensor_event$10731))+1
 14790  188B  2891               	goto	l37929
 14791                           	
 14792  188C                     l8684:	
 14793                           	
 14794  188C                     l37927:	
 14795  188C  303F               	movlw	low(STR_96|8000h)
 14796  188D  00CF               	movwf	(_catsensor_event$10731)
 14797  188E  3089               	movlw	high(STR_96|8000h)
 14798  188F  00D0               	movwf	((_catsensor_event$10731))+1
 14799  1890  2891               	goto	l37929
 14800                           	
 14801  1891                     l8686:	
 14802                           	
 14803  1891                     l37929:	
 14804  1891  30D4               	movlw	low(STR_95|8000h)
 14805  1892  00AF               	movwf	(?_printf)
 14806  1893  3088               	movlw	high(STR_95|8000h)
 14807  1894  00B0               	movwf	((?_printf))+1
 14808  1895  0850               	movf	(_catsensor_event$10731+1),w
 14809  1896  01B2               	clrf	(1+?_printf+02h)
 14810  1897  07B2               	addwf	(1+?_printf+02h)
 14811  1898  084F               	movf	(_catsensor_event$10731),w
 14812  1899  01B1               	clrf	(0+?_printf+02h)
 14813  189A  07B1               	addwf	(0+?_printf+02h)
 14814                           
 14815  189B  3194  24A0  3198   	fcall	_printf
 14816                           	line	298
 14817                           	
 14818  189E                     l37931:	
 14819                           ;userinterface.c: 298: if (detected)
 14820  189E  0020               	movlb 0	; select bank0
 14821  189F  0851               	movf	(catsensor_event@detected),w
 14822  18A0  1D03               	skipz
 14823  18A1  28A3               	goto	u11330
 14824  18A2  28A4               	goto	l8687
 14825  18A3                     u11330:
 14826                           	line	299
 14827                           	
 14828  18A3                     l37933:	
 14829                           ;userinterface.c: 299: cat_detected = 1;
 14830  18A3  1470               	bsf	(_cat_detected/8),(_cat_detected)&7
 14831                           	
 14832  18A4                     l8687:	
 14833                           	line	302
 14834                           ;userinterface.c: 302: if (cat_detected)
 14835  18A4  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 14836  18A5  28A7               	goto	u11341
 14837  18A6  28A8               	goto	u11340
 14838  18A7                     u11341:
 14839  18A7  28C6               	goto	l37941
 14840  18A8                     u11340:
 14841                           	line	303
 14842                           	
 14843  18A8                     l37935:	
 14844                           ;userinterface.c: 303: if (detected)
 14845  18A8  0851               	movf	(catsensor_event@detected),w
 14846  18A9  1D03               	skipz
 14847  18AA  28AC               	goto	u11350
 14848  18AB  28B4               	goto	l37939
 14849  18AC                     u11350:
 14850                           	line	304
 14851                           	
 14852  18AC                     l37937:	
 14853                           ;userinterface.c: 304: timeoutnever(&cattimer);
 14854  18AC  3046               	movlw	(_cattimer&0ffh)
 14855  18AD  00A5               	movwf	(?_timeoutnever)
 14856  18AE  3001               	movlw	0x2/2
 14857  18AF  00A6               	movwf	(?_timeoutnever+1)
 14858  18B0  31A9  2162  3198   	fcall	_timeoutnever
 14859  18B3  28C6               	goto	l37941
 14860                           	line	305
 14861                           	
 14862  18B4                     l8689:	
 14863                           	line	306
 14864                           	
 14865  18B4                     l37939:	
 14866                           ;userinterface.c: 305: else
 14867                           ;userinterface.c: 306: settimeout(&cattimer, (4 * 60 * ((((4UL * (1000UL * ((1000UL)))))
                                 /4)/8)));
 14868  18B4  3046               	movlw	(_cattimer&0ffh)
 14869  18B5  0020               	movlb 0	; select bank0
 14870  18B6  00AD               	movwf	(?_settimeout)
 14871  18B7  3001               	movlw	0x2/2
 14872  18B8  00AE               	movwf	(?_settimeout+1)
 14873  18B9  3001               	movlw	01h
 14874  18BA  00B2               	movwf	3+(?_settimeout)+02h
 14875  18BB  30C9               	movlw	0C9h
 14876  18BC  00B1               	movwf	2+(?_settimeout)+02h
 14877  18BD  30C3               	movlw	0C3h
 14878  18BE  00B0               	movwf	1+(?_settimeout)+02h
 14879  18BF  3080               	movlw	080h
 14880  18C0  00AF               	movwf	0+(?_settimeout)+02h
 14881                           
 14882  18C1  31A0  20CF  3198   	fcall	_settimeout
 14883  18C4  28C6               	goto	l37941
 14884                           	
 14885  18C5                     l8690:	
 14886  18C5  28C6               	goto	l37941
 14887                           	
 14888  18C6                     l8688:	
 14889                           	line	312
 14890                           	
 14891  18C6                     l37941:	
 14892                           ;userinterface.c: 308: if ( (auto_mode == 5) ||
 14893                           ;userinterface.c: 309: (auto_mode == 6) ||
 14894                           ;userinterface.c: 310: (auto_mode == 7) ||
 14895                           ;userinterface.c: 311: (auto_mode == 8) ||
 14896                           ;userinterface.c: 312: (auto_mode == 9) ) {
 14897  18C6  0020               	movlb 0	; select bank0
 14898  18C7  0862               	movf	(_auto_mode),w
 14899  18C8  3A05               	xorlw	05h&0ffh
 14900  18C9  1903               	skipnz
 14901  18CA  28CC               	goto	u11361
 14902  18CB  28CD               	goto	u11360
 14903  18CC                     u11361:
 14904  18CC  28E5               	goto	l8693
 14905  18CD                     u11360:
 14906                           	
 14907  18CD                     l37943:	
 14908  18CD  0862               	movf	(_auto_mode),w
 14909  18CE  3A06               	xorlw	06h&0ffh
 14910  18CF  1903               	skipnz
 14911  18D0  28D2               	goto	u11371
 14912  18D1  28D3               	goto	u11370
 14913  18D2                     u11371:
 14914  18D2  28E5               	goto	l8693
 14915  18D3                     u11370:
 14916                           	
 14917  18D3                     l37945:	
 14918  18D3  0862               	movf	(_auto_mode),w
 14919  18D4  3A07               	xorlw	07h&0ffh
 14920  18D5  1903               	skipnz
 14921  18D6  28D8               	goto	u11381
 14922  18D7  28D9               	goto	u11380
 14923  18D8                     u11381:
 14924  18D8  28E5               	goto	l8693
 14925  18D9                     u11380:
 14926                           	
 14927  18D9                     l37947:	
 14928  18D9  0862               	movf	(_auto_mode),w
 14929  18DA  3A08               	xorlw	08h&0ffh
 14930  18DB  1903               	skipnz
 14931  18DC  28DE               	goto	u11391
 14932  18DD  28DF               	goto	u11390
 14933  18DE                     u11391:
 14934  18DE  28E5               	goto	l8693
 14935  18DF                     u11390:
 14936                           	
 14937  18DF                     l37949:	
 14938  18DF  0862               	movf	(_auto_mode),w
 14939  18E0  3A09               	xorlw	09h&0ffh
 14940  18E1  1D03               	skipz
 14941  18E2  28E4               	goto	u11401
 14942  18E3  28E5               	goto	u11400
 14943  18E4                     u11401:
 14944  18E4  292C               	goto	l8702
 14945  18E5                     u11400:
 14946                           	
 14947  18E5                     l8693:	
 14948                           	line	313
 14949                           ;userinterface.c: 313: if (cat_detected && state == 0) {
 14950  18E5  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 14951  18E6  28E8               	goto	u11411
 14952  18E7  28E9               	goto	u11410
 14953  18E8                     u11411:
 14954  18E8  2928               	goto	l37967
 14955  18E9                     u11410:
 14956                           	
 14957  18E9                     l37951:	
 14958  18E9  08E6               	movf	(_state),f
 14959  18EA  1D03               	skipz
 14960  18EB  28ED               	goto	u11421
 14961  18EC  28EE               	goto	u11420
 14962  18ED                     u11421:
 14963  18ED  2928               	goto	l37967
 14964  18EE                     u11420:
 14965  18EE  2912               	goto	l37963
 14966                           	line	314
 14967                           	
 14968  18EF                     l37953:	
 14969                           ;userinterface.c: 314: switch(auto_mode) {
 14970  18EF  2912               	goto	l37963
 14971                           	line	315
 14972                           ;userinterface.c: 315: case 5:
 14973                           	
 14974  18F0                     l8696:	
 14975                           	line	316
 14976                           ;userinterface.c: 316: full_wash = 1;
 14977  18F0  14F1               	bsf	(_full_wash/8),(_full_wash)&7
 14978                           	line	317
 14979                           ;userinterface.c: 317: break;
 14980  18F1  2923               	goto	l37965
 14981                           	line	318
 14982                           ;userinterface.c: 318: case 6:
 14983                           	
 14984  18F2                     l8698:	
 14985                           	line	319
 14986                           	
 14987  18F2                     l37955:	
 14988                           ;userinterface.c: 319: full_wash = (interval >= 1);
 14989  18F2  0021               	movlb 1	; select bank1
 14990  18F3  08D8               	movf	(_interval)^080h,f
 14991  18F4  1D03               	skipz
 14992  18F5  28F7               	goto	u11431
 14993  18F6  28F9               	goto	u11430
 14994                           	
 14995  18F7                     u11431:
 14996  18F7  14F1               	bsf	(_full_wash/8),(_full_wash)&7
 14997  18F8  28FA               	goto	u11444
 14998  18F9                     u11430:
 14999  18F9  10F1               	bcf	(_full_wash/8),(_full_wash)&7
 15000  18FA                     u11444:
 15001                           	line	320
 15002                           ;userinterface.c: 320: break;
 15003  18FA  2923               	goto	l37965
 15004                           	line	321
 15005                           ;userinterface.c: 321: case 7:
 15006                           	
 15007  18FB                     l8699:	
 15008                           	line	322
 15009                           	
 15010  18FB                     l37957:	
 15011                           ;userinterface.c: 322: full_wash = (interval >= 2);
 15012  18FB  3002               	movlw	(02h)
 15013  18FC  0021               	movlb 1	; select bank1
 15014  18FD  0258               	subwf	(_interval)^080h,w
 15015  18FE  1803               	skipnc
 15016  18FF  2901               	goto	u11451
 15017  1900  2903               	goto	u11450
 15018                           	
 15019  1901                     u11451:
 15020  1901  14F1               	bsf	(_full_wash/8),(_full_wash)&7
 15021  1902  2904               	goto	u11464
 15022  1903                     u11450:
 15023  1903  10F1               	bcf	(_full_wash/8),(_full_wash)&7
 15024  1904                     u11464:
 15025                           	line	323
 15026                           ;userinterface.c: 323: break;
 15027  1904  2923               	goto	l37965
 15028                           	line	324
 15029                           ;userinterface.c: 324: case 8:
 15030                           	
 15031  1905                     l8700:	
 15032                           	line	325
 15033                           	
 15034  1905                     l37959:	
 15035                           ;userinterface.c: 325: full_wash = (interval >= 3);
 15036  1905  3003               	movlw	(03h)
 15037  1906  0021               	movlb 1	; select bank1
 15038  1907  0258               	subwf	(_interval)^080h,w
 15039  1908  1803               	skipnc
 15040  1909  290B               	goto	u11471
 15041  190A  290D               	goto	u11470
 15042                           	
 15043  190B                     u11471:
 15044  190B  14F1               	bsf	(_full_wash/8),(_full_wash)&7
 15045  190C  290E               	goto	u11484
 15046  190D                     u11470:
 15047  190D  10F1               	bcf	(_full_wash/8),(_full_wash)&7
 15048  190E                     u11484:
 15049                           	line	326
 15050                           ;userinterface.c: 326: break;
 15051  190E  2923               	goto	l37965
 15052                           	line	327
 15053                           ;userinterface.c: 327: case 9:
 15054                           	
 15055  190F                     l8701:	
 15056                           	line	328
 15057                           ;userinterface.c: 328: full_wash = 0;
 15058  190F  10F1               	bcf	(_full_wash/8),(_full_wash)&7
 15059                           	line	329
 15060                           ;userinterface.c: 329: break;
 15061  1910  2923               	goto	l37965
 15062                           	line	330
 15063                           	
 15064  1911                     l37961:	
 15065                           ;userinterface.c: 330: }
 15066  1911  2923               	goto	l37965
 15067                           	line	314
 15068                           	
 15069  1912                     l8695:	
 15070                           	
 15071  1912                     l37963:	
 15072  1912  0862               	movf	(_auto_mode),w
 15073                           	; Switch size 1, requested type "space"
 15074                           ; Number of cases is 5, Range of values is 5 to 9
 15075                           ; switch strategies available:
 15076                           ; Name         Instructions Cycles
 15077                           ; simple_byte           16     9 (average)
 15078                           ; direct_byte           19     9 (fixed)
 15079                           ; jumptable            263     9 (fixed)
 15080                           ;	Chosen strategy is simple_byte
 15081                           
 15082                           	opt asmopt_off
 15083  1913  3A05               	xorlw	5^0	; case 5
 15084  1914  1903               	skipnz
 15085  1915  28F0               	goto	l8696
 15086  1916  3A03               	xorlw	6^5	; case 6
 15087  1917  1903               	skipnz
 15088  1918  28F2               	goto	l37955
 15089  1919  3A01               	xorlw	7^6	; case 7
 15090  191A  1903               	skipnz
 15091  191B  28FB               	goto	l37957
 15092  191C  3A0F               	xorlw	8^7	; case 8
 15093  191D  1903               	skipnz
 15094  191E  2905               	goto	l37959
 15095  191F  3A01               	xorlw	9^8	; case 9
 15096  1920  1903               	skipnz
 15097  1921  290F               	goto	l8701
 15098  1922  2923               	goto	l37965
 15099                           	opt asmopt_on
 15100                           
 15101                           	line	330
 15102                           	
 15103  1923                     l8697:	
 15104                           	line	331
 15105                           	
 15106  1923                     l37965:	
 15107                           ;userinterface.c: 331: state = 1;
 15108  1923  0020               	movlb 0	; select bank0
 15109  1924  01E6               	clrf	(_state)
 15110  1925  1403               	bsf	status,0
 15111  1926  0DE6               	rlf	(_state),f
 15112  1927  2928               	goto	l37967
 15113                           	line	332
 15114                           	
 15115  1928                     l8694:	
 15116                           	line	334
 15117                           	
 15118  1928                     l37967:	
 15119                           ;userinterface.c: 332: }
 15120                           ;userinterface.c: 334: update_display();
 15121  1928  3189  218C  3198   	fcall	_update_display
 15122  192B  292C               	goto	l8702
 15123                           	line	335
 15124                           	
 15125  192C                     l8691:	
 15126                           	line	336
 15127                           	
 15128  192C                     l8702:	
 15129  192C  0008               	return
 15130                           	opt stack 0
 15131                           GLOBAL	__end_of_catsensor_event
 15132  192D                     	__end_of_catsensor_event:
 15133 ;; =============== function _catsensor_event ends ============
 15134                           
 15135                           	signat	_catsensor_event,4216
 15136                           	global	_process_button
 15137                           psect	text3328,local,class=CODE,delta=2
 15138                           global __ptext3328
 15139  2134                     __ptext3328:
 15140                           
 15141 ;; *************** function _process_button *****************
 15142 ;; Defined at:
 15143 ;;		line 387 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;  button_mask     1    wreg     unsigned char 
 15146 ;;  down            1   28[BANK0 ] unsigned char 
 15147 ;; Auto vars:     Size  Location     Type
 15148 ;;  button_mask     1   30[BANK0 ] unsigned char 
 15149 ;; Return value:  Size  Location     Type
 15150 ;;		None               void
 15151 ;; Registers used:
 15152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 15153 ;; Tracked objects:
 15154 ;;		On entry : 0/0
 15155 ;;		On exit  : 0/0
 15156 ;;		Unchanged: 0/0
 15157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15158 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15161 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15162 ;;Total ram usage:        3 bytes
 15163 ;; Hardware stack levels used:    1
 15164 ;; Hardware stack levels required when called:    6
 15165 ;; This function calls:
 15166 ;;		_key_Beep
 15167 ;;		_settimeout
 15168 ;;		_timeoutnever
 15169 ;;		_update_display
 15170 ;; This function is called by:
 15171 ;;		_startbutton_event
 15172 ;;		_setupbutton_event
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           psect	text3328
 15176                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15177                           	line	387
 15178                           	global	__size_of_process_button
 15179  0069                     	__size_of_process_button	equ	__end_of_process_button-_process_button
 15180                           	
 15181  2134                     _process_button:	
 15182                           	opt	stack 7
 15183                           ; Regs used in _process_button: [allreg]
 15184                           ;process_button@button_mask stored from wreg
 15185                           	line	389
 15186  2134  0020               	movlb 0	; select bank0
 15187  2135  00BF               	movwf	(process_button@button_mask)
 15188                           	
 15189  2136                     l37883:	
 15190                           ;userinterface.c: 389: if (((buttonmask_cur & button_mask)?1:0) == down)
 15191  2136  0021               	movlb 1	; select bank1
 15192  2137  0856               	movf	(_buttonmask_cur)^080h,w
 15193  2138  0020               	movlb 0	; select bank0
 15194  2139  053F               	andwf	(process_button@button_mask),w
 15195  213A  3000               	movlw	0
 15196  213B  1D03               	btfss	status,2
 15197  213C  3001               	movlw	1
 15198  213D  063D               	xorwf	(process_button@down),w
 15199  213E  1D03               	skipz
 15200  213F  2941               	goto	u11241
 15201  2140  2942               	goto	u11240
 15202  2141                     u11241:
 15203  2141  2944               	goto	l37887
 15204  2142                     u11240:
 15205  2142  299C               	goto	l8725
 15206                           	line	390
 15207                           	
 15208  2143                     l37885:	
 15209                           ;userinterface.c: 390: return;
 15210  2143  299C               	goto	l8725
 15211                           	
 15212  2144                     l8724:	
 15213                           	line	392
 15214                           	
 15215  2144                     l37887:	
 15216                           ;userinterface.c: 392: if (down) {
 15217  2144  083D               	movf	(process_button@down),w
 15218  2145  1D03               	skipz
 15219  2146  2948               	goto	u11250
 15220  2147  296F               	goto	l37901
 15221  2148                     u11250:
 15222                           	line	393
 15223                           	
 15224  2148                     l37889:	
 15225                           ;userinterface.c: 393: if (!locked)
 15226  2148  19F1               	btfsc	(_locked/8),(_locked)&7
 15227  2149  294B               	goto	u11261
 15228  214A  294C               	goto	u11260
 15229  214B                     u11261:
 15230  214B  2951               	goto	l37893
 15231  214C                     u11260:
 15232                           	line	394
 15233                           	
 15234  214C                     l37891:	
 15235                           ;userinterface.c: 394: key_Beep(1);
 15236  214C  3001               	movlw	(01h)
 15237  214D  31AA  22C3  31A1   	fcall	_key_Beep
 15238  2150  2951               	goto	l37893
 15239                           	
 15240  2151                     l8727:	
 15241                           	line	396
 15242                           	
 15243  2151                     l37893:	
 15244                           ;userinterface.c: 396: settimeout(&holdtimeout, (2 * ((((4UL * (1000UL * ((1000UL)))))/4
                                 )/8)));
 15245  2151  305E               	movlw	(_holdtimeout&0ffh)
 15246  2152  0020               	movlb 0	; select bank0
 15247  2153  00AD               	movwf	(?_settimeout)
 15248  2154  3001               	movlw	0x2/2
 15249  2155  00AE               	movwf	(?_settimeout+1)
 15250  2156  3000               	movlw	0
 15251  2157  00B2               	movwf	3+(?_settimeout)+02h
 15252  2158  3003               	movlw	03h
 15253  2159  00B1               	movwf	2+(?_settimeout)+02h
 15254  215A  30D0               	movlw	0D0h
 15255  215B  00B0               	movwf	1+(?_settimeout)+02h
 15256  215C  3090               	movlw	090h
 15257  215D  00AF               	movwf	0+(?_settimeout)+02h
 15258                           
 15259  215E  31A0  20CF  31A1   	fcall	_settimeout
 15260                           	line	397
 15261                           	
 15262  2161                     l37895:	
 15263                           ;userinterface.c: 397: longhandled = 0;
 15264  2161  1271               	bcf	(_longhandled/8),(_longhandled)&7
 15265                           	line	399
 15266                           	
 15267  2162                     l37897:	
 15268                           ;userinterface.c: 399: buttonmask_cur |= button_mask;
 15269  2162  0020               	movlb 0	; select bank0
 15270  2163  083F               	movf	(process_button@button_mask),w
 15271  2164  00BE               	movwf	(??_process_button+0)+0
 15272  2165  083E               	movf	(??_process_button+0)+0,w
 15273  2166  0021               	movlb 1	; select bank1
 15274  2167  04D6               	iorwf	(_buttonmask_cur)^080h,f
 15275                           	line	400
 15276                           	
 15277  2168                     l37899:	
 15278                           ;userinterface.c: 400: buttonmask_cum |= button_mask;
 15279  2168  0020               	movlb 0	; select bank0
 15280  2169  083F               	movf	(process_button@button_mask),w
 15281  216A  00BE               	movwf	(??_process_button+0)+0
 15282  216B  083E               	movf	(??_process_button+0)+0,w
 15283  216C  0021               	movlb 1	; select bank1
 15284  216D  04D5               	iorwf	(_buttonmask_cum)^080h,f
 15285                           	line	401
 15286                           ;userinterface.c: 401: } else {
 15287  216E  2994               	goto	l37915
 15288                           	
 15289  216F                     l8726:	
 15290                           	line	403
 15291                           	
 15292  216F                     l37901:	
 15293                           ;userinterface.c: 403: timeoutnever(&holdtimeout);
 15294  216F  305E               	movlw	(_holdtimeout&0ffh)
 15295  2170  0020               	movlb 0	; select bank0
 15296  2171  00A5               	movwf	(?_timeoutnever)
 15297  2172  3001               	movlw	0x2/2
 15298  2173  00A6               	movwf	(?_timeoutnever+1)
 15299  2174  31A9  2162  31A1   	fcall	_timeoutnever
 15300                           	line	405
 15301                           	
 15302  2177                     l37903:	
 15303                           ;userinterface.c: 405: buttonmask_cur &= ~button_mask;
 15304  2177  0020               	movlb 0	; select bank0
 15305  2178  093F               	comf	(process_button@button_mask),w
 15306  2179  00BE               	movwf	(??_process_button+0)+0
 15307  217A  083E               	movf	(??_process_button+0)+0,w
 15308  217B  0021               	movlb 1	; select bank1
 15309  217C  05D6               	andwf	(_buttonmask_cur)^080h,f
 15310                           	line	406
 15311                           	
 15312  217D                     l37905:	
 15313                           ;userinterface.c: 406: if (!buttonmask_cur) {
 15314  217D  08D6               	movf	(_buttonmask_cur)^080h,f
 15315  217E  1D03               	skipz
 15316  217F  2981               	goto	u11271
 15317  2180  2982               	goto	u11270
 15318  2181                     u11271:
 15319  2181  2994               	goto	l37915
 15320  2182                     u11270:
 15321                           	line	407
 15322                           	
 15323  2182                     l37907:	
 15324                           ;userinterface.c: 407: if( (!locked) && (!longhandled) )
 15325  2182  19F1               	btfsc	(_locked/8),(_locked)&7
 15326  2183  2985               	goto	u11281
 15327  2184  2986               	goto	u11280
 15328  2185                     u11281:
 15329  2185  2991               	goto	l37913
 15330  2186                     u11280:
 15331                           	
 15332  2186                     l37909:	
 15333  2186  1A71               	btfsc	(_longhandled/8),(_longhandled)&7
 15334  2187  2989               	goto	u11291
 15335  2188  298A               	goto	u11290
 15336  2189                     u11291:
 15337  2189  2991               	goto	l37913
 15338  218A                     u11290:
 15339                           	line	409
 15340                           	
 15341  218A                     l37911:	
 15342                           ;userinterface.c: 409: buttonmask_evt = buttonmask_cum;
 15343  218A  0855               	movf	(_buttonmask_cum)^080h,w
 15344  218B  0020               	movlb 0	; select bank0
 15345  218C  00BE               	movwf	(??_process_button+0)+0
 15346  218D  083E               	movf	(??_process_button+0)+0,w
 15347  218E  0021               	movlb 1	; select bank1
 15348  218F  00D7               	movwf	(_buttonmask_evt)^080h
 15349  2190  2991               	goto	l37913
 15350                           	
 15351  2191                     l8730:	
 15352                           	line	411
 15353                           	
 15354  2191                     l37913:	
 15355                           ;userinterface.c: 411: buttonmask_cum = 0;
 15356  2191  01D5               	clrf	(_buttonmask_cum)^080h
 15357  2192  2994               	goto	l37915
 15358                           	line	412
 15359                           	
 15360  2193                     l8729:	
 15361  2193  2994               	goto	l37915
 15362                           	line	413
 15363                           	
 15364  2194                     l8728:	
 15365                           	line	414
 15366                           	
 15367  2194                     l37915:	
 15368                           ;userinterface.c: 412: }
 15369                           ;userinterface.c: 413: }
 15370                           ;userinterface.c: 414: if (locked)
 15371  2194  1DF1               	btfss	(_locked/8),(_locked)&7
 15372  2195  2997               	goto	u11301
 15373  2196  2998               	goto	u11300
 15374  2197                     u11301:
 15375  2197  299C               	goto	l8725
 15376  2198                     u11300:
 15377                           	line	415
 15378                           	
 15379  2198                     l37917:	
 15380                           ;userinterface.c: 415: update_display();
 15381  2198  3189  218C  31A1   	fcall	_update_display
 15382  219B  299C               	goto	l8725
 15383                           	
 15384  219C                     l8731:	
 15385                           	line	416
 15386                           	
 15387  219C                     l8725:	
 15388  219C  0008               	return
 15389                           	opt stack 0
 15390                           GLOBAL	__end_of_process_button
 15391  219D                     	__end_of_process_button:
 15392 ;; =============== function _process_button ends ============
 15393                           
 15394                           	signat	_process_button,8312
 15395                           	global	_setup_short
 15396                           psect	text3329,local,class=CODE,delta=2
 15397                           global __ptext3329
 15398  1801                     __ptext3329:
 15399                           
 15400 ;; *************** function _setup_short *****************
 15401 ;; Defined at:
 15402 ;;		line 528 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;		None
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;		None               void
 15409 ;; Registers used:
 15410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15419 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15420 ;;Total ram usage:        3 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; Hardware stack levels required when called:    6
 15423 ;; This function calls:
 15424 ;;		_set_mode
 15425 ;;		_settimeout
 15426 ;; This function is called by:
 15427 ;;		_userinterface_work
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           psect	text3329
 15431                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 15432                           	line	528
 15433                           	global	__size_of_setup_short
 15434  0077                     	__size_of_setup_short	equ	__end_of_setup_short-_setup_short
 15435                           	
 15436  1801                     _setup_short:	
 15437                           	opt	stack 8
 15438                           ; Regs used in _setup_short: [wreg-status,0+pclath+cstack]
 15439                           	line	529
 15440                           	
 15441  1801                     l37847:	
 15442                           ;userinterface.c: 529: switch (panel_mode) {
 15443  1801  286B               	goto	l37881
 15444                           	line	530
 15445                           ;userinterface.c: 530: default:
 15446                           	
 15447  1802                     l8780:	
 15448                           	line	531
 15449                           ;userinterface.c: 531: panel_mode = 0;
 15450  1802  01D9               	clrf	(_panel_mode)^080h
 15451  1803  2804               	goto	l37849
 15452                           	line	532
 15453                           ;userinterface.c: 532: case 0:
 15454                           	
 15455  1804                     l8781:	
 15456                           	line	533
 15457                           	
 15458  1804                     l37849:	
 15459                           ;userinterface.c: 533: set_mode((auto_mode==9)?0:auto_mode+1);
 15460  1804  0020               	movlb 0	; select bank0
 15461  1805  0862               	movf	(_auto_mode),w
 15462  1806  3A09               	xorlw	09h&0ffh
 15463  1807  1903               	skipnz
 15464  1808  280A               	goto	u11181
 15465  1809  280B               	goto	u11180
 15466  180A                     u11181:
 15467  180A  2813               	goto	l37853
 15468  180B                     u11180:
 15469                           	
 15470  180B                     l37851:	
 15471  180B  0862               	movf	(_auto_mode),w
 15472  180C  3E01               	addlw	low(01h)
 15473  180D  00CB               	movwf	(_setup_short$10743)
 15474  180E  3000               	movlw	high(01h)
 15475  180F  1803               	skipnc
 15476  1810  3001               	movlw	(high(01h)+1)&0ffh
 15477  1811  00CC               	movwf	((_setup_short$10743))+1
 15478  1812  2816               	goto	l37855
 15479                           	
 15480  1813                     l8783:	
 15481                           	
 15482  1813                     l37853:	
 15483  1813  01CB               	clrf	(_setup_short$10743)
 15484  1814  01CC               	clrf	(_setup_short$10743+1)
 15485  1815  2816               	goto	l37855
 15486                           	
 15487  1816                     l8785:	
 15488                           	
 15489  1816                     l37855:	
 15490  1816  084B               	movf	(_setup_short$10743),w
 15491  1817  31AE  268E  3198   	fcall	_set_mode
 15492                           	line	534
 15493                           ;userinterface.c: 534: break;
 15494  181A  2877               	goto	l8799
 15495                           	line	536
 15496                           ;userinterface.c: 536: case 1:
 15497                           	
 15498  181B                     l8787:	
 15499                           	line	537
 15500                           	
 15501  181B                     l37857:	
 15502                           ;userinterface.c: 537: if (cart_level < 10)
 15503  181B  300A               	movlw	(0Ah)
 15504  181C  0020               	movlb 0	; select bank0
 15505  181D  026E               	subwf	(_cart_level),w
 15506  181E  1803               	skipnc
 15507  181F  2821               	goto	u11191
 15508  1820  2822               	goto	u11190
 15509  1821                     u11191:
 15510  1821  2827               	goto	l37861
 15511  1822                     u11190:
 15512                           	line	538
 15513                           	
 15514  1822                     l37859:	
 15515                           ;userinterface.c: 538: cart_level = 10;
 15516  1822  300A               	movlw	(0Ah)
 15517  1823  00CA               	movwf	(??_setup_short+0)+0
 15518  1824  084A               	movf	(??_setup_short+0)+0,w
 15519  1825  00EE               	movwf	(_cart_level)
 15520  1826  2859               	goto	l37877
 15521                           	line	539
 15522                           	
 15523  1827                     l8788:	
 15524                           	
 15525  1827                     l37861:	
 15526                           ;userinterface.c: 539: else if (cart_level < 25)
 15527  1827  3019               	movlw	(019h)
 15528  1828  026E               	subwf	(_cart_level),w
 15529  1829  1803               	skipnc
 15530  182A  282C               	goto	u11201
 15531  182B  282D               	goto	u11200
 15532  182C                     u11201:
 15533  182C  2832               	goto	l37865
 15534  182D                     u11200:
 15535                           	line	540
 15536                           	
 15537  182D                     l37863:	
 15538                           ;userinterface.c: 540: cart_level = 25;
 15539  182D  3019               	movlw	(019h)
 15540  182E  00CA               	movwf	(??_setup_short+0)+0
 15541  182F  084A               	movf	(??_setup_short+0)+0,w
 15542  1830  00EE               	movwf	(_cart_level)
 15543  1831  2859               	goto	l37877
 15544                           	line	541
 15545                           	
 15546  1832                     l8790:	
 15547                           	
 15548  1832                     l37865:	
 15549                           ;userinterface.c: 541: else if (cart_level < 50)
 15550  1832  3032               	movlw	(032h)
 15551  1833  026E               	subwf	(_cart_level),w
 15552  1834  1803               	skipnc
 15553  1835  2837               	goto	u11211
 15554  1836  2838               	goto	u11210
 15555  1837                     u11211:
 15556  1837  283D               	goto	l37869
 15557  1838                     u11210:
 15558                           	line	542
 15559                           	
 15560  1838                     l37867:	
 15561                           ;userinterface.c: 542: cart_level = 50;
 15562  1838  3032               	movlw	(032h)
 15563  1839  00CA               	movwf	(??_setup_short+0)+0
 15564  183A  084A               	movf	(??_setup_short+0)+0,w
 15565  183B  00EE               	movwf	(_cart_level)
 15566  183C  2859               	goto	l37877
 15567                           	line	543
 15568                           	
 15569  183D                     l8792:	
 15570                           	
 15571  183D                     l37869:	
 15572                           ;userinterface.c: 543: else if (cart_level < 75)
 15573  183D  304B               	movlw	(04Bh)
 15574  183E  026E               	subwf	(_cart_level),w
 15575  183F  1803               	skipnc
 15576  1840  2842               	goto	u11221
 15577  1841  2843               	goto	u11220
 15578  1842                     u11221:
 15579  1842  2848               	goto	l37873
 15580  1843                     u11220:
 15581                           	line	544
 15582                           	
 15583  1843                     l37871:	
 15584                           ;userinterface.c: 544: cart_level = 75;
 15585  1843  304B               	movlw	(04Bh)
 15586  1844  00CA               	movwf	(??_setup_short+0)+0
 15587  1845  084A               	movf	(??_setup_short+0)+0,w
 15588  1846  00EE               	movwf	(_cart_level)
 15589  1847  2859               	goto	l37877
 15590                           	line	545
 15591                           	
 15592  1848                     l8794:	
 15593                           	
 15594  1848                     l37873:	
 15595                           ;userinterface.c: 545: else if (cart_level < 100)
 15596  1848  3064               	movlw	(064h)
 15597  1849  026E               	subwf	(_cart_level),w
 15598  184A  1803               	skipnc
 15599  184B  284D               	goto	u11231
 15600  184C  284E               	goto	u11230
 15601  184D                     u11231:
 15602  184D  2853               	goto	l8796
 15603  184E                     u11230:
 15604                           	line	546
 15605                           	
 15606  184E                     l37875:	
 15607                           ;userinterface.c: 546: cart_level = 100;
 15608  184E  3064               	movlw	(064h)
 15609  184F  00CA               	movwf	(??_setup_short+0)+0
 15610  1850  084A               	movf	(??_setup_short+0)+0,w
 15611  1851  00EE               	movwf	(_cart_level)
 15612  1852  2859               	goto	l37877
 15613                           	line	547
 15614                           	
 15615  1853                     l8796:	
 15616                           	line	548
 15617                           ;userinterface.c: 547: else
 15618                           ;userinterface.c: 548: cart_level = 0;
 15619  1853  01EE               	clrf	(_cart_level)
 15620  1854  2859               	goto	l37877
 15621                           	
 15622  1855                     l8797:	
 15623  1855  2859               	goto	l37877
 15624                           	
 15625  1856                     l8795:	
 15626  1856  2859               	goto	l37877
 15627                           	
 15628  1857                     l8793:	
 15629  1857  2859               	goto	l37877
 15630                           	
 15631  1858                     l8791:	
 15632  1858  2859               	goto	l37877
 15633                           	
 15634  1859                     l8789:	
 15635                           	line	550
 15636                           	
 15637  1859                     l37877:	
 15638                           ;userinterface.c: 550: settimeout(&cartridgetimeout, (5 * ((((4UL * (1000UL * ((1000UL))
                                 )))/4)/8)));
 15639  1859  3040               	movlw	(_cartridgetimeout&0ffh)
 15640  185A  00AD               	movwf	(?_settimeout)
 15641  185B  3001               	movlw	0x2/2
 15642  185C  00AE               	movwf	(?_settimeout+1)
 15643  185D  3000               	movlw	0
 15644  185E  00B2               	movwf	3+(?_settimeout)+02h
 15645  185F  3009               	movlw	09h
 15646  1860  00B1               	movwf	2+(?_settimeout)+02h
 15647  1861  3089               	movlw	089h
 15648  1862  00B0               	movwf	1+(?_settimeout)+02h
 15649  1863  3068               	movlw	068h
 15650  1864  00AF               	movwf	0+(?_settimeout)+02h
 15651                           
 15652  1865  31A0  20CF  3198   	fcall	_settimeout
 15653                           	line	551
 15654                           ;userinterface.c: 551: break;
 15655  1868  2877               	goto	l8799
 15656                           	line	553
 15657                           ;userinterface.c: 553: case 2:
 15658                           	
 15659  1869                     l8798:	
 15660                           	line	554
 15661                           ;userinterface.c: 554: break;
 15662  1869  2877               	goto	l8799
 15663                           	line	555
 15664                           	
 15665  186A                     l37879:	
 15666                           ;userinterface.c: 555: }
 15667  186A  2877               	goto	l8799
 15668                           	line	529
 15669                           	
 15670  186B                     l8779:	
 15671                           	
 15672  186B                     l37881:	
 15673  186B  0021               	movlb 1	; select bank1
 15674  186C  0859               	movf	(_panel_mode)^080h,w
 15675                           	; Switch size 1, requested type "space"
 15676                           ; Number of cases is 3, Range of values is 0 to 2
 15677                           ; switch strategies available:
 15678                           ; Name         Instructions Cycles
 15679                           ; simple_byte           10     6 (average)
 15680                           ; direct_byte           12     6 (fixed)
 15681                           ; jumptable            260     6 (fixed)
 15682                           ; rangetable             7     4 (fixed)
 15683                           ; spacedrange           11     6 (fixed)
 15684                           ; locatedrange           3     3 (fixed)
 15685                           ;	Chosen strategy is simple_byte
 15686                           
 15687                           	opt asmopt_off
 15688  186D  3A00               	xorlw	0^0	; case 0
 15689  186E  1903               	skipnz
 15690  186F  2804               	goto	l37849
 15691  1870  3A01               	xorlw	1^0	; case 1
 15692  1871  1903               	skipnz
 15693  1872  281B               	goto	l37857
 15694  1873  3A03               	xorlw	2^1	; case 2
 15695  1874  1903               	skipnz
 15696  1875  2877               	goto	l8799
 15697  1876  2802               	goto	l8780
 15698                           	opt asmopt_on
 15699                           
 15700                           	line	555
 15701                           	
 15702  1877                     l8786:	
 15703                           	line	556
 15704                           	
 15705  1877                     l8799:	
 15706  1877  0008               	return
 15707                           	opt stack 0
 15708                           GLOBAL	__end_of_setup_short
 15709  1878                     	__end_of_setup_short:
 15710 ;; =============== function _setup_short ends ============
 15711                           
 15712                           	signat	_setup_short,88
 15713                           	global	_litterlanguage_init
 15714                           psect	text3330,local,class=CODE,delta=2
 15715                           global __ptext3330
 15716  2530                     __ptext3330:
 15717                           
 15718 ;; *************** function _litterlanguage_init *****************
 15719 ;; Defined at:
 15720 ;;		line 85 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;  flags           1    wreg     unsigned char 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;  flags           1   51[BANK0 ] unsigned char 
 15725 ;; Return value:  Size  Location     Type
 15726 ;;		None               void
 15727 ;; Registers used:
 15728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15729 ;; Tracked objects:
 15730 ;;		On entry : 0/0
 15731 ;;		On exit  : 0/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15737 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15738 ;;Total ram usage:        3 bytes
 15739 ;; Hardware stack levels used:    1
 15740 ;; Hardware stack levels required when called:    6
 15741 ;; This function calls:
 15742 ;;		_printf
 15743 ;;		_litterlanguage_cleanup
 15744 ;;		_eeprom_write
 15745 ;;		_eeprom_read
 15746 ;; This function is called by:
 15747 ;;		_main
 15748 ;; This function uses a non-reentrant model
 15749 ;;
 15750                           psect	text3330
 15751                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 15752                           	line	85
 15753                           	global	__size_of_litterlanguage_init
 15754  007D                     	__size_of_litterlanguage_init	equ	__end_of_litterlanguage_init-_litterlanguage_init
 15755                           	
 15756  2530                     _litterlanguage_init:	
 15757                           	opt	stack 9
 15758                           ; Regs used in _litterlanguage_init: [wreg-status,0+pclath+cstack]
 15759                           ;litterlanguage_init@flags stored from wreg
 15760  2530  0020               	movlb 0	; select bank0
 15761  2531  00D4               	movwf	(litterlanguage_init@flags)
 15762                           	line	86
 15763                           	
 15764  2532                     l37817:	
 15765                           ;litterlanguage.c: 86: switch(flags & ((0x01 << 0) | (0x01 << 1))) {
 15766  2532  2D94               	goto	l37841
 15767                           	line	87
 15768                           ;litterlanguage.c: 87: case 0:
 15769                           	
 15770  2533                     l4225:	
 15771                           	line	88
 15772                           	
 15773  2533                     l37819:	
 15774                           ;litterlanguage.c: 88: printf("Box is ");
 15775  2533  30E4               	movlw	low(STR_9|8000h)
 15776  2534  00AF               	movwf	(?_printf)
 15777  2535  3088               	movlw	high(STR_9|8000h)
 15778  2536  00B0               	movwf	((?_printf))+1
 15779  2537  3194  24A0  31A5   	fcall	_printf
 15780                           	line	89
 15781                           ;litterlanguage.c: 89: switch (eeprom_read((3))){
 15782  253A  2D6E               	goto	l37833
 15783                           	line	90
 15784                           ;litterlanguage.c: 90: case 0:
 15785                           	
 15786  253B                     l4227:	
 15787                           	line	91
 15788                           	
 15789  253B                     l37821:	
 15790                           ;litterlanguage.c: 91: printf("tidy\n");
 15791  253B  3018               	movlw	low(STR_10|8000h)
 15792  253C  0020               	movlb 0	; select bank0
 15793  253D  00AF               	movwf	(?_printf)
 15794  253E  3089               	movlw	high(STR_10|8000h)
 15795  253F  00B0               	movwf	((?_printf))+1
 15796  2540  3194  24A0  31A5   	fcall	_printf
 15797                           	line	92
 15798                           ;litterlanguage.c: 92: break;
 15799  2543  2DAC               	goto	l4237
 15800                           	line	93
 15801                           ;litterlanguage.c: 93: case 1:
 15802                           	
 15803  2544                     l4229:	
 15804                           	line	94
 15805                           	
 15806  2544                     l37823:	
 15807                           ;litterlanguage.c: 94: printf("messy\n");
 15808  2544  3003               	movlw	low(STR_11|8000h)
 15809  2545  0020               	movlb 0	; select bank0
 15810  2546  00AF               	movwf	(?_printf)
 15811  2547  3089               	movlw	high(STR_11|8000h)
 15812  2548  00B0               	movwf	((?_printf))+1
 15813  2549  3194  24A0  31A5   	fcall	_printf
 15814                           	line	95
 15815                           ;litterlanguage.c: 95: litterlanguage_cleanup(0);
 15816  254C  3000               	movlw	(0)
 15817  254D  31AC  2464  31A5   	fcall	_litterlanguage_cleanup
 15818                           	line	96
 15819                           ;litterlanguage.c: 96: break;
 15820  2550  2DAC               	goto	l4237
 15821                           	line	97
 15822                           ;litterlanguage.c: 97: case 2:
 15823                           	
 15824  2551                     l4230:	
 15825                           	line	98
 15826                           	
 15827  2551                     l37825:	
 15828                           ;litterlanguage.c: 98: printf("wet\n");
 15829  2551  301E               	movlw	low(STR_12|8000h)
 15830  2552  0020               	movlb 0	; select bank0
 15831  2553  00AF               	movwf	(?_printf)
 15832  2554  3089               	movlw	high(STR_12|8000h)
 15833  2555  00B0               	movwf	((?_printf))+1
 15834  2556  3194  24A0  31A5   	fcall	_printf
 15835                           	line	99
 15836                           ;litterlanguage.c: 99: litterlanguage_cleanup(1);
 15837  2559  3001               	movlw	(01h)
 15838  255A  31AC  2464  31A5   	fcall	_litterlanguage_cleanup
 15839                           	line	100
 15840                           ;litterlanguage.c: 100: break;
 15841  255D  2DAC               	goto	l4237
 15842                           	line	101
 15843                           ;litterlanguage.c: 101: default:
 15844                           	
 15845  255E                     l4231:	
 15846                           	line	102
 15847                           	
 15848  255E                     l37827:	
 15849                           ;litterlanguage.c: 102: printf("unknown\n");
 15850  255E  30A7               	movlw	low(STR_13|8000h)
 15851  255F  0020               	movlb 0	; select bank0
 15852  2560  00AF               	movwf	(?_printf)
 15853  2561  3088               	movlw	high(STR_13|8000h)
 15854  2562  00B0               	movwf	((?_printf))+1
 15855  2563  3194  24A0  31A5   	fcall	_printf
 15856                           	line	103
 15857                           	
 15858  2566                     l37829:	
 15859                           ;litterlanguage.c: 103: eeprom_write((3), 0);
 15860  2566  0020               	movlb 0	; select bank0
 15861  2567  01A1               	clrf	(?_eeprom_write)
 15862  2568  3003               	movlw	(03h)
 15863  2569  31AB  23F5  31A5   	fcall	_eeprom_write
 15864                           	line	104
 15865                           ;litterlanguage.c: 104: break;
 15866  256C  2DAC               	goto	l4237
 15867                           	line	105
 15868                           	
 15869  256D                     l37831:	
 15870                           ;litterlanguage.c: 105: }
 15871  256D  2DAC               	goto	l4237
 15872                           	line	89
 15873                           	
 15874  256E                     l4226:	
 15875                           	
 15876  256E                     l37833:	
 15877  256E  3003               	movlw	(03h)
 15878  256F  31AA  2233  31A5   	fcall	_eeprom_read
 15879                           	; Switch size 1, requested type "space"
 15880                           ; Number of cases is 3, Range of values is 0 to 2
 15881                           ; switch strategies available:
 15882                           ; Name         Instructions Cycles
 15883                           ; simple_byte           10     6 (average)
 15884                           ; direct_byte           12     6 (fixed)
 15885                           ; jumptable            260     6 (fixed)
 15886                           ; rangetable             7     4 (fixed)
 15887                           ; spacedrange           11     6 (fixed)
 15888                           ; locatedrange           3     3 (fixed)
 15889                           ;	Chosen strategy is simple_byte
 15890                           
 15891                           	opt asmopt_off
 15892  2572  3A00               	xorlw	0^0	; case 0
 15893  2573  1903               	skipnz
 15894  2574  2D3B               	goto	l37821
 15895  2575  3A01               	xorlw	1^0	; case 1
 15896  2576  1903               	skipnz
 15897  2577  2D44               	goto	l37823
 15898  2578  3A03               	xorlw	2^1	; case 2
 15899  2579  1903               	skipnz
 15900  257A  2D51               	goto	l37825
 15901  257B  2D5E               	goto	l37827
 15902                           	opt asmopt_on
 15903                           
 15904                           	line	105
 15905                           	
 15906  257C                     l4228:	
 15907                           	line	106
 15908                           ;litterlanguage.c: 106: break;
 15909  257C  2DAC               	goto	l4237
 15910                           	line	107
 15911                           ;litterlanguage.c: 107: case (0x01 << 0):
 15912                           	
 15913  257D                     l4233:	
 15914                           	line	109
 15915                           	
 15916  257D                     l37835:	
 15917                           ;litterlanguage.c: 109: printf("Wet cleanup forced\n");
 15918  257D  30B6               	movlw	low(STR_14|8000h)
 15919  257E  0020               	movlb 0	; select bank0
 15920  257F  00AF               	movwf	(?_printf)
 15921  2580  3085               	movlw	high(STR_14|8000h)
 15922  2581  00B0               	movwf	((?_printf))+1
 15923  2582  3194  24A0  31A5   	fcall	_printf
 15924                           	line	110
 15925                           ;litterlanguage.c: 110: litterlanguage_cleanup(1);
 15926  2585  3001               	movlw	(01h)
 15927  2586  31AC  2464  31A5   	fcall	_litterlanguage_cleanup
 15928                           	line	111
 15929                           ;litterlanguage.c: 111: break;
 15930  2589  2DAC               	goto	l4237
 15931                           	line	112
 15932                           ;litterlanguage.c: 112: case (0x01 << 1):
 15933                           	
 15934  258A                     l4234:	
 15935                           	line	114
 15936                           ;litterlanguage.c: 114: break;
 15937  258A  2DAC               	goto	l4237
 15938                           	line	115
 15939                           ;litterlanguage.c: 115: case (0x01 << 0) | (0x01 << 1):
 15940                           	
 15941  258B                     l4235:	
 15942  258B  2D8C               	goto	l37837
 15943                           	line	116
 15944                           ;litterlanguage.c: 116: default:
 15945                           	
 15946  258C                     l4236:	
 15947                           	line	118
 15948                           	
 15949  258C                     l37837:	
 15950                           ;litterlanguage.c: 118: eeprom_write((3), 0);
 15951  258C  0020               	movlb 0	; select bank0
 15952  258D  01A1               	clrf	(?_eeprom_write)
 15953  258E  3003               	movlw	(03h)
 15954  258F  31AB  23F5  31A5   	fcall	_eeprom_write
 15955                           	line	119
 15956                           ;litterlanguage.c: 119: break;
 15957  2592  2DAC               	goto	l4237
 15958                           	line	120
 15959                           	
 15960  2593                     l37839:	
 15961                           ;litterlanguage.c: 120: }
 15962  2593  2DAC               	goto	l4237
 15963                           	line	86
 15964                           	
 15965  2594                     l4224:	
 15966                           	
 15967  2594                     l37841:	
 15968  2594  0020               	movlb 0	; select bank0
 15969  2595  0854               	movf	(litterlanguage_init@flags),w
 15970  2596  3903               	andlw	03h
 15971  2597  00D2               	movwf	(??_litterlanguage_init+0)+0
 15972  2598  01D3               	clrf	(??_litterlanguage_init+0)+0+1
 15973                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15974                           ; Switch size 1, requested type "space"
 15975                           ; Number of cases is 1, Range of values is 0 to 0
 15976                           ; switch strategies available:
 15977                           ; Name         Instructions Cycles
 15978                           ; simple_byte            4     3 (average)
 15979                           ; direct_byte            8     6 (fixed)
 15980                           ; jumptable            260     6 (fixed)
 15981                           ; rangetable             5     4 (fixed)
 15982                           ; spacedrange            7     6 (fixed)
 15983                           ; locatedrange           1     3 (fixed)
 15984                           ;	Chosen strategy is simple_byte
 15985                           
 15986  2599  0853               	movf 1+(??_litterlanguage_init+0)+0,w
 15987                           	opt asmopt_off
 15988  259A  3A00               	xorlw	0^0	; case 0
 15989  259B  1903               	skipnz
 15990  259C  2D9E               	goto	l39241
 15991  259D  2D8C               	goto	l37837
 15992                           	opt asmopt_on
 15993                           	
 15994  259E                     l39241:	
 15995                           ; Switch size 1, requested type "space"
 15996                           ; Number of cases is 4, Range of values is 0 to 3
 15997                           ; switch strategies available:
 15998                           ; Name         Instructions Cycles
 15999                           ; simple_byte           13     7 (average)
 16000                           ; direct_byte           14     6 (fixed)
 16001                           ; jumptable            260     6 (fixed)
 16002                           ; rangetable             8     4 (fixed)
 16003                           ; spacedrange           13     6 (fixed)
 16004                           ; locatedrange           4     3 (fixed)
 16005                           ;	Chosen strategy is simple_byte
 16006                           
 16007  259E  0852               	movf 0+(??_litterlanguage_init+0)+0,w
 16008                           	opt asmopt_off
 16009  259F  3A00               	xorlw	0^0	; case 0
 16010  25A0  1903               	skipnz
 16011  25A1  2D33               	goto	l37819
 16012  25A2  3A01               	xorlw	1^0	; case 1
 16013  25A3  1903               	skipnz
 16014  25A4  2D7D               	goto	l37835
 16015  25A5  3A03               	xorlw	2^1	; case 2
 16016  25A6  1903               	skipnz
 16017  25A7  2DAC               	goto	l4237
 16018  25A8  3A01               	xorlw	3^2	; case 3
 16019  25A9  1903               	skipnz
 16020  25AA  2D8C               	goto	l37837
 16021  25AB  2D8C               	goto	l37837
 16022                           	opt asmopt_on
 16023                           
 16024                           	line	120
 16025                           	
 16026  25AC                     l4232:	
 16027                           	line	121
 16028                           	
 16029  25AC                     l4237:	
 16030  25AC  0008               	return
 16031                           	opt stack 0
 16032                           GLOBAL	__end_of_litterlanguage_init
 16033  25AD                     	__end_of_litterlanguage_init:
 16034 ;; =============== function _litterlanguage_init ends ============
 16035                           
 16036                           	signat	_litterlanguage_init,4216
 16037                           	global	_userinterface_init
 16038                           psect	text3331,local,class=CODE,delta=2
 16039                           global __ptext3331
 16040  2B98                     __ptext3331:
 16041                           
 16042 ;; *************** function _userinterface_init *****************
 16043 ;; Defined at:
 16044 ;;		line 104 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 16045 ;; Parameters:    Size  Location     Type
 16046 ;;  flags           1    wreg     unsigned char 
 16047 ;; Auto vars:     Size  Location     Type
 16048 ;;  flags           1   42[BANK0 ] unsigned char 
 16049 ;; Return value:  Size  Location     Type
 16050 ;;		None               void
 16051 ;; Registers used:
 16052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16053 ;; Tracked objects:
 16054 ;;		On entry : 0/0
 16055 ;;		On exit  : 0/0
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16062 ;;Total ram usage:        2 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:    6
 16065 ;; This function calls:
 16066 ;;		_eeprom_write
 16067 ;;		_eeprom_read
 16068 ;;		_set_mode
 16069 ;;		_update_display
 16070 ;; This function is called by:
 16071 ;;		_main
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           psect	text3331
 16075                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 16076                           	line	104
 16077                           	global	__size_of_userinterface_init
 16078  002E                     	__size_of_userinterface_init	equ	__end_of_userinterface_init-_userinterface_init
 16079                           	
 16080  2B98                     _userinterface_init:	
 16081                           	opt	stack 9
 16082                           ; Regs used in _userinterface_init: [wreg-status,0+pclath+cstack]
 16083                           ;userinterface_init@flags stored from wreg
 16084                           	line	106
 16085  2B98  0020               	movlb 0	; select bank0
 16086  2B99  00CB               	movwf	(userinterface_init@flags)
 16087                           	
 16088  2B9A                     l37807:	
 16089                           ;userinterface.c: 105: if ((flags & (0x01 << 0)) &&
 16090                           ;userinterface.c: 106: (flags & (0x01 << 1))) {
 16091  2B9A  1C4B               	btfss	(userinterface_init@flags),(0)&7
 16092  2B9B  2B9D               	goto	u11141
 16093  2B9C  2B9E               	goto	u11140
 16094  2B9D                     u11141:
 16095  2B9D  2BB0               	goto	l8639
 16096  2B9E                     u11140:
 16097                           	
 16098  2B9E                     l37809:	
 16099  2B9E  1CCB               	btfss	(userinterface_init@flags),(1)&7
 16100  2B9F  2BA1               	goto	u11151
 16101  2BA0  2BA2               	goto	u11150
 16102  2BA1                     u11151:
 16103  2BA1  2BB0               	goto	l8639
 16104  2BA2                     u11150:
 16105                           	line	108
 16106                           	
 16107  2BA2                     l37811:	
 16108                           ;userinterface.c: 108: eeprom_write((1), 0);
 16109  2BA2  01A1               	clrf	(?_eeprom_write)
 16110  2BA3  3001               	movlw	(01h)
 16111  2BA4  31AB  23F5  31AB   	fcall	_eeprom_write
 16112                           	line	109
 16113                           ;userinterface.c: 109: eeprom_write((2), 0xFF);
 16114  2BA7  30FF               	movlw	(0FFh)
 16115  2BA8  0020               	movlb 0	; select bank0
 16116  2BA9  00CA               	movwf	(??_userinterface_init+0)+0
 16117  2BAA  084A               	movf	(??_userinterface_init+0)+0,w
 16118  2BAB  00A1               	movwf	(?_eeprom_write)
 16119  2BAC  3002               	movlw	(02h)
 16120  2BAD  31AB  23F5  31AB   	fcall	_eeprom_write
 16121                           	line	110
 16122                           	
 16123  2BB0                     l8639:	
 16124                           	line	113
 16125                           ;userinterface.c: 110: }
 16126                           ;userinterface.c: 113: locked = !eeprom_read((2));
 16127  2BB0  3002               	movlw	(02h)
 16128  2BB1  31AA  2233  31AB   	fcall	_eeprom_read
 16129  2BB4  3A00               	xorlw	0&0ffh
 16130  2BB5  1903               	skipnz
 16131  2BB6  2BB8               	goto	u11161
 16132  2BB7  2BBA               	goto	u11160
 16133                           	
 16134  2BB8                     u11161:
 16135  2BB8  15F1               	bsf	(_locked/8),(_locked)&7
 16136  2BB9  2BBB               	goto	u11174
 16137  2BBA                     u11160:
 16138  2BBA  11F1               	bcf	(_locked/8),(_locked)&7
 16139  2BBB                     u11174:
 16140                           	line	115
 16141                           	
 16142  2BBB                     l37813:	
 16143                           ;userinterface.c: 115: set_mode(eeprom_read((1)));
 16144  2BBB  3001               	movlw	(01h)
 16145  2BBC  31AA  2233  31AB   	fcall	_eeprom_read
 16146  2BBF  31AE  268E  31AB   	fcall	_set_mode
 16147                           	line	117
 16148                           	
 16149  2BC2                     l37815:	
 16150                           ;userinterface.c: 117: update_display();
 16151  2BC2  3189  218C  31AB   	fcall	_update_display
 16152                           	line	118
 16153                           	
 16154  2BC5                     l8640:	
 16155  2BC5  0008               	return
 16156                           	opt stack 0
 16157                           GLOBAL	__end_of_userinterface_init
 16158  2BC6                     	__end_of_userinterface_init:
 16159 ;; =============== function _userinterface_init ends ============
 16160                           
 16161                           	signat	_userinterface_init,4216
 16162                           	global	_proc_line
 16163                           psect	text3332,local,class=CODE,delta=2
 16164                           global __ptext3332
 16165  1ACA                     __ptext3332:
 16166                           
 16167 ;; *************** function _proc_line *****************
 16168 ;; Defined at:
 16169 ;;		line 135 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;  line            1    wreg     PTR unsigned char 
 16172 ;;		 -> linebuffer(20), 
 16173 ;; Auto vars:     Size  Location     Type
 16174 ;;  line            1   59[BANK0 ] PTR unsigned char 
 16175 ;;		 -> linebuffer(20), 
 16176 ;;  argv            4   48[BANK0 ] PTR unsigned char [4]
 16177 ;;		 -> linebuffer(20), 
 16178 ;;  len             2   57[BANK0 ] unsigned int 
 16179 ;;  argc            2   55[BANK0 ] int 
 16180 ;;  index           2   53[BANK0 ] int 
 16181 ;; Return value:  Size  Location     Type
 16182 ;;		None               void
 16183 ;; Registers used:
 16184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 16185 ;; Tracked objects:
 16186 ;;		On entry : 0/0
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16191 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 16192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16193 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 16194 ;;Total ram usage:       14 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; Hardware stack levels required when called:    5
 16197 ;; This function calls:
 16198 ;;		_strlen
 16199 ;;		_cmd2index
 16200 ;;		_printf
 16201 ;;		___bmul
 16202 ;;		Absolute function
 16203 ;;		_echo
 16204 ;;		_help
 16205 ;; This function is called by:
 16206 ;;		_proc_char
 16207 ;; This function uses a non-reentrant model
 16208 ;;
 16209                           psect	text3332
 16210                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 16211                           	line	135
 16212                           	global	__size_of_proc_line
 16213  012A                     	__size_of_proc_line	equ	__end_of_proc_line-_proc_line
 16214                           	
 16215  1ACA                     _proc_line:	
 16216                           	opt	stack 8
 16217                           ; Regs used in _proc_line: [allreg]
 16218                           ;proc_line@line stored from wreg
 16219  1ACA  0020               	movlb 0	; select bank0
 16220  1ACB  00DC               	movwf	(proc_line@line)
 16221                           	line	136
 16222                           	
 16223  1ACC                     l37741:	
 16224                           ;cmdline.c: 136: unsigned int len = strlen(line);
 16225  1ACC  085C               	movf	(proc_line@line),w
 16226  1ACD  31AB  23C6  319A   	fcall	_strlen
 16227  1AD0  0020               	movlb 0	; select bank0
 16228  1AD1  0822               	movf	(1+(?_strlen)),w
 16229  1AD2  01DB               	clrf	(proc_line@len+1)
 16230  1AD3  07DB               	addwf	(proc_line@len+1)
 16231  1AD4  0821               	movf	(0+(?_strlen)),w
 16232  1AD5  01DA               	clrf	(proc_line@len)
 16233  1AD6  07DA               	addwf	(proc_line@len)
 16234                           
 16235                           	line	137
 16236                           	
 16237  1AD7                     l37743:	
 16238                           ;cmdline.c: 137: int argc = 0;
 16239  1AD7  01D8               	clrf	(proc_line@argc)
 16240  1AD8  01D9               	clrf	(proc_line@argc+1)
 16241                           	line	142
 16242                           ;cmdline.c: 138: char* argv[(4)];
 16243                           ;cmdline.c: 139: int index;
 16244                           ;cmdline.c: 142: while (len && (line[len-1] == ' ' || line[len-1] == '\t')) {
 16245  1AD9  2AE8               	goto	l37749
 16246                           	
 16247  1ADA                     l15146:	
 16248                           	line	143
 16249                           	
 16250  1ADA                     l37745:	
 16251                           ;cmdline.c: 143: line[len-1] = 0;
 16252  1ADA  085A               	movf	(proc_line@len),w
 16253  1ADB  3EFF               	addlw	0FFh
 16254  1ADC  075C               	addwf	(proc_line@line),w
 16255  1ADD  00CF               	movwf	(??_proc_line+0)+0
 16256  1ADE  084F               	movf	0+(??_proc_line+0)+0,w
 16257  1ADF  0086               	movwf	fsr1l
 16258  1AE0  3001               	movlw 1	; select bank2/3
 16259  1AE1  0087               	movwf fsr1h	
 16260                           	
 16261  1AE2  0181               	clrf	indf1
 16262                           	line	144
 16263                           	
 16264  1AE3                     l37747:	
 16265                           ;cmdline.c: 144: len--;
 16266  1AE3  3001               	movlw	low(01h)
 16267  1AE4  02DA               	subwf	(proc_line@len),f
 16268  1AE5  3000               	movlw	high(01h)
 16269  1AE6  3BDB               	subwfb	(proc_line@len+1),f
 16270  1AE7  2AE8               	goto	l37749
 16271                           	line	145
 16272                           	
 16273  1AE8                     l15145:	
 16274                           	line	142
 16275                           	
 16276  1AE8                     l37749:	
 16277  1AE8  085B               	movf	(proc_line@len+1),w
 16278  1AE9  045A               	iorwf	(proc_line@len),w
 16279  1AEA  1903               	skipnz
 16280  1AEB  2AED               	goto	u11031
 16281  1AEC  2AEE               	goto	u11030
 16282  1AED                     u11031:
 16283  1AED  2B6B               	goto	l37777
 16284  1AEE                     u11030:
 16285                           	
 16286  1AEE                     l37751:	
 16287  1AEE  085A               	movf	(proc_line@len),w
 16288  1AEF  3EFF               	addlw	0FFh
 16289  1AF0  075C               	addwf	(proc_line@line),w
 16290  1AF1  00CF               	movwf	(??_proc_line+0)+0
 16291  1AF2  084F               	movf	0+(??_proc_line+0)+0,w
 16292  1AF3  0086               	movwf	fsr1l
 16293  1AF4  3001               	movlw 1	; select bank2/3
 16294  1AF5  0087               	movwf fsr1h	
 16295                           	
 16296  1AF6  0801               	movf	indf1,w
 16297  1AF7  3A20               	xorlw	020h&0ffh
 16298  1AF8  1903               	skipnz
 16299  1AF9  2AFB               	goto	u11041
 16300  1AFA  2AFC               	goto	u11040
 16301  1AFB                     u11041:
 16302  1AFB  2ADA               	goto	l37745
 16303  1AFC                     u11040:
 16304                           	
 16305  1AFC                     l37753:	
 16306  1AFC  085A               	movf	(proc_line@len),w
 16307  1AFD  3EFF               	addlw	0FFh
 16308  1AFE  075C               	addwf	(proc_line@line),w
 16309  1AFF  00CF               	movwf	(??_proc_line+0)+0
 16310  1B00  084F               	movf	0+(??_proc_line+0)+0,w
 16311  1B01  0086               	movwf	fsr1l
 16312  1B02  3001               	movlw 1	; select bank2/3
 16313  1B03  0087               	movwf fsr1h	
 16314                           	
 16315  1B04  0801               	movf	indf1,w
 16316  1B05  3A09               	xorlw	09h&0ffh
 16317  1B06  1903               	skipnz
 16318  1B07  2B09               	goto	u11051
 16319  1B08  2B0A               	goto	u11050
 16320  1B09                     u11051:
 16321  1B09  2ADA               	goto	l37745
 16322  1B0A                     u11050:
 16323  1B0A  2B6B               	goto	l37777
 16324                           	
 16325  1B0B                     l15148:	
 16326  1B0B  2B6B               	goto	l37777
 16327                           	
 16328  1B0C                     l15149:	
 16329                           	line	148
 16330                           ;cmdline.c: 145: }
 16331                           ;cmdline.c: 148: while (*line) {
 16332  1B0C  2B6B               	goto	l37777
 16333                           	
 16334  1B0D                     l15151:	
 16335                           	line	150
 16336                           ;cmdline.c: 150: while ((*line == ' ') || (*line == '\t')) {
 16337  1B0D  2B18               	goto	l37759
 16338                           	
 16339  1B0E                     l15153:	
 16340                           	line	151
 16341                           	
 16342  1B0E                     l37755:	
 16343                           ;cmdline.c: 151: *line = 0;
 16344  1B0E  085C               	movf	(proc_line@line),w
 16345  1B0F  0086               	movwf	fsr1l
 16346  1B10  3001               	movlw 1	; select bank2/3
 16347  1B11  0087               	movwf fsr1h	
 16348                           	
 16349  1B12  0181               	clrf	indf1
 16350                           	line	152
 16351                           	
 16352  1B13                     l37757:	
 16353                           ;cmdline.c: 152: line++;
 16354  1B13  3001               	movlw	(01h)
 16355  1B14  00CF               	movwf	(??_proc_line+0)+0
 16356  1B15  084F               	movf	(??_proc_line+0)+0,w
 16357  1B16  07DC               	addwf	(proc_line@line),f
 16358  1B17  2B18               	goto	l37759
 16359                           	line	153
 16360                           	
 16361  1B18                     l15152:	
 16362                           	line	150
 16363                           	
 16364  1B18                     l37759:	
 16365  1B18  085C               	movf	(proc_line@line),w
 16366  1B19  0086               	movwf	fsr1l
 16367  1B1A  3001               	movlw 1	; select bank2/3
 16368  1B1B  0087               	movwf fsr1h	
 16369                           	
 16370  1B1C  0801               	movf	indf1,w
 16371  1B1D  3A20               	xorlw	020h&0ffh
 16372  1B1E  1903               	skipnz
 16373  1B1F  2B21               	goto	u11061
 16374  1B20  2B22               	goto	u11060
 16375  1B21                     u11061:
 16376  1B21  2B0E               	goto	l37755
 16377  1B22                     u11060:
 16378                           	
 16379  1B22                     l37761:	
 16380  1B22  085C               	movf	(proc_line@line),w
 16381  1B23  0086               	movwf	fsr1l
 16382  1B24  3001               	movlw 1	; select bank2/3
 16383  1B25  0087               	movwf fsr1h	
 16384                           	
 16385  1B26  0801               	movf	indf1,w
 16386  1B27  3A09               	xorlw	09h&0ffh
 16387  1B28  1903               	skipnz
 16388  1B29  2B2B               	goto	u11071
 16389  1B2A  2B2C               	goto	u11070
 16390  1B2B                     u11071:
 16391  1B2B  2B0E               	goto	l37755
 16392  1B2C                     u11070:
 16393  1B2C  2B2D               	goto	l37763
 16394                           	
 16395  1B2D                     l15154:	
 16396                           	line	156
 16397                           	
 16398  1B2D                     l37763:	
 16399                           ;cmdline.c: 153: }
 16400                           ;cmdline.c: 156: if (*line) {
 16401  1B2D  085C               	movf	(proc_line@line),w
 16402  1B2E  0086               	movwf	fsr1l
 16403  1B2F  3001               	movlw 1	; select bank2/3
 16404  1B30  0087               	movwf fsr1h	
 16405                           	
 16406  1B31  0801               	movf	indf1,w
 16407  1B32  3A00               	xorlw	0&0ffh
 16408  1B33  1903               	skipnz
 16409  1B34  2B36               	goto	u11081
 16410  1B35  2B37               	goto	u11080
 16411  1B36                     u11081:
 16412  1B36  2B4A               	goto	l37771
 16413  1B37                     u11080:
 16414                           	line	157
 16415                           	
 16416  1B37                     l37765:	
 16417                           ;cmdline.c: 157: argv[argc] = line;
 16418  1B37  085C               	movf	(proc_line@line),w
 16419  1B38  00CF               	movwf	(??_proc_line+0)+0
 16420  1B39  0858               	movf	(proc_line@argc),w
 16421  1B3A  3E51               	addlw	proc_line@argv&0ffh
 16422  1B3B  0086               	movwf	fsr1l
 16423  1B3C  0187               	clrf fsr1h	
 16424                           	
 16425  1B3D  084F               	movf	(??_proc_line+0)+0,w
 16426  1B3E  0081               	movwf	indf1
 16427                           	line	158
 16428                           	
 16429  1B3F                     l37767:	
 16430                           ;cmdline.c: 158: argc++;
 16431  1B3F  3001               	movlw	low(01h)
 16432  1B40  07D8               	addwf	(proc_line@argc),f
 16433  1B41  3000               	movlw	high(01h)
 16434  1B42  3DD9               	addwfc	(proc_line@argc+1),f
 16435  1B43  2B4A               	goto	l37771
 16436                           	line	159
 16437                           	
 16438  1B44                     l15155:	
 16439                           	line	162
 16440                           ;cmdline.c: 159: }
 16441                           ;cmdline.c: 162: while (*line && *line != ' ' && *line != '\t')
 16442  1B44  2B4A               	goto	l37771
 16443                           	
 16444  1B45                     l15157:	
 16445                           	line	163
 16446                           	
 16447  1B45                     l37769:	
 16448                           ;cmdline.c: 163: line++;
 16449  1B45  3001               	movlw	(01h)
 16450  1B46  00CF               	movwf	(??_proc_line+0)+0
 16451  1B47  084F               	movf	(??_proc_line+0)+0,w
 16452  1B48  07DC               	addwf	(proc_line@line),f
 16453  1B49  2B4A               	goto	l37771
 16454                           	
 16455  1B4A                     l15156:	
 16456                           	line	162
 16457                           	
 16458  1B4A                     l37771:	
 16459  1B4A  085C               	movf	(proc_line@line),w
 16460  1B4B  0086               	movwf	fsr1l
 16461  1B4C  3001               	movlw 1	; select bank2/3
 16462  1B4D  0087               	movwf fsr1h	
 16463                           	
 16464  1B4E  0801               	movf	indf1,w
 16465  1B4F  3A00               	xorlw	0&0ffh
 16466  1B50  1903               	skipnz
 16467  1B51  2B53               	goto	u11091
 16468  1B52  2B54               	goto	u11090
 16469  1B53                     u11091:
 16470  1B53  2B6B               	goto	l37777
 16471  1B54                     u11090:
 16472                           	
 16473  1B54                     l37773:	
 16474  1B54  085C               	movf	(proc_line@line),w
 16475  1B55  0086               	movwf	fsr1l
 16476  1B56  3001               	movlw 1	; select bank2/3
 16477  1B57  0087               	movwf fsr1h	
 16478                           	
 16479  1B58  0801               	movf	indf1,w
 16480  1B59  3A20               	xorlw	020h&0ffh
 16481  1B5A  1903               	skipnz
 16482  1B5B  2B5D               	goto	u11101
 16483  1B5C  2B5E               	goto	u11100
 16484  1B5D                     u11101:
 16485  1B5D  2B6B               	goto	l37777
 16486  1B5E                     u11100:
 16487                           	
 16488  1B5E                     l37775:	
 16489  1B5E  085C               	movf	(proc_line@line),w
 16490  1B5F  0086               	movwf	fsr1l
 16491  1B60  3001               	movlw 1	; select bank2/3
 16492  1B61  0087               	movwf fsr1h	
 16493                           	
 16494  1B62  0801               	movf	indf1,w
 16495  1B63  3A09               	xorlw	09h&0ffh
 16496  1B64  1D03               	skipz
 16497  1B65  2B67               	goto	u11111
 16498  1B66  2B68               	goto	u11110
 16499  1B67                     u11111:
 16500  1B67  2B45               	goto	l37769
 16501  1B68                     u11110:
 16502  1B68  2B6B               	goto	l37777
 16503                           	
 16504  1B69                     l15159:	
 16505  1B69  2B6B               	goto	l37777
 16506                           	
 16507  1B6A                     l15160:	
 16508  1B6A  2B6B               	goto	l37777
 16509                           	line	164
 16510                           	
 16511  1B6B                     l15150:	
 16512                           	line	148
 16513                           	
 16514  1B6B                     l37777:	
 16515  1B6B  085C               	movf	(proc_line@line),w
 16516  1B6C  0086               	movwf	fsr1l
 16517  1B6D  3001               	movlw 1	; select bank2/3
 16518  1B6E  0087               	movwf fsr1h	
 16519                           	
 16520  1B6F  0881               	movf	indf1,f
 16521  1B70  1D03               	skipz
 16522  1B71  2B73               	goto	u11121
 16523  1B72  2B74               	goto	u11120
 16524  1B73                     u11121:
 16525  1B73  2B18               	goto	l37759
 16526  1B74                     u11120:
 16527  1B74  2B75               	goto	l37779
 16528                           	
 16529  1B75                     l15161:	
 16530                           	line	166
 16531                           	
 16532  1B75                     l37779:	
 16533                           ;cmdline.c: 164: }
 16534                           ;cmdline.c: 166: index = cmd2index(argv[0]);
 16535  1B75  0851               	movf	(proc_line@argv),w
 16536  1B76  31AD  25ED  319A   	fcall	_cmd2index
 16537  1B79  0020               	movlb 0	; select bank0
 16538  1B7A  082D               	movf	(1+(?_cmd2index)),w
 16539  1B7B  01D7               	clrf	(proc_line@index+1)
 16540  1B7C  07D7               	addwf	(proc_line@index+1)
 16541  1B7D  082C               	movf	(0+(?_cmd2index)),w
 16542  1B7E  01D6               	clrf	(proc_line@index)
 16543  1B7F  07D6               	addwf	(proc_line@index)
 16544                           
 16545                           	line	167
 16546                           	
 16547  1B80                     l37781:	
 16548                           ;cmdline.c: 167: if (index >= 0) {
 16549  1B80  1BD7               	btfsc	(proc_line@index+1),7
 16550  1B81  2B83               	goto	u11131
 16551  1B82  2B84               	goto	u11130
 16552  1B83                     u11131:
 16553  1B83  2BE7               	goto	l37797
 16554  1B84                     u11130:
 16555  1B84  2BAA               	goto	l37793
 16556                           	line	168
 16557                           	
 16558  1B85                     l37783:	
 16559                           ;cmdline.c: 168: switch (commands[index].function(argc, argv)) {
 16560  1B85  2BAA               	goto	l37793
 16561                           	line	169
 16562                           ;cmdline.c: 169: case (0):
 16563                           	
 16564  1B86                     l15164:	
 16565                           	line	170
 16566                           ;cmdline.c: 170: break;
 16567  1B86  2BF3               	goto	l15171
 16568                           	line	171
 16569                           ;cmdline.c: 171: case (-1):
 16570                           	
 16571  1B87                     l15166:	
 16572                           	line	172
 16573                           	
 16574  1B87                     l37785:	
 16575                           ;cmdline.c: 172: printf("Syntax error\n");
 16576  1B87  30D5               	movlw	low(STR_101|8000h)
 16577  1B88  00AF               	movwf	(?_printf)
 16578  1B89  3087               	movlw	high(STR_101|8000h)
 16579  1B8A  00B0               	movwf	((?_printf))+1
 16580  1B8B  3194  24A0  319A   	fcall	_printf
 16581                           	line	173
 16582                           ;cmdline.c: 173: break;
 16583  1B8E  2BF3               	goto	l15171
 16584                           	line	174
 16585                           ;cmdline.c: 174: case (-2):
 16586                           	
 16587  1B8F                     l15167:	
 16588                           	line	175
 16589                           	
 16590  1B8F                     l37787:	
 16591                           ;cmdline.c: 175: printf("I/O error\n");
 16592  1B8F  304B               	movlw	low(STR_102|8000h)
 16593  1B90  0020               	movlb 0	; select bank0
 16594  1B91  00AF               	movwf	(?_printf)
 16595  1B92  3088               	movlw	high(STR_102|8000h)
 16596  1B93  00B0               	movwf	((?_printf))+1
 16597  1B94  3194  24A0  319A   	fcall	_printf
 16598                           	line	176
 16599                           ;cmdline.c: 176: break;
 16600  1B97  2BF3               	goto	l15171
 16601                           	line	177
 16602                           ;cmdline.c: 177: case (-3):
 16603                           	
 16604  1B98                     l15168:	
 16605                           	line	178
 16606                           	
 16607  1B98                     l37789:	
 16608                           ;cmdline.c: 178: printf("Parameter error\n");
 16609  1B98  30F4               	movlw	low(STR_103|8000h)
 16610  1B99  0020               	movlb 0	; select bank0
 16611  1B9A  00AF               	movwf	(?_printf)
 16612  1B9B  3086               	movlw	high(STR_103|8000h)
 16613  1B9C  00B0               	movwf	((?_printf))+1
 16614  1B9D  3194  24A0  319A   	fcall	_printf
 16615                           	line	179
 16616                           ;cmdline.c: 179: break;
 16617  1BA0  2BF3               	goto	l15171
 16618                           	line	180
 16619                           ;cmdline.c: 180: default:
 16620                           	
 16621  1BA1                     l15169:	
 16622                           	line	181
 16623                           	
 16624  1BA1                     l37791:	
 16625                           ;cmdline.c: 181: printf("Unknown error\n");
 16626  1BA1  3099               	movlw	low(STR_104|8000h)
 16627  1BA2  0020               	movlb 0	; select bank0
 16628  1BA3  00AF               	movwf	(?_printf)
 16629  1BA4  3087               	movlw	high(STR_104|8000h)
 16630  1BA5  00B0               	movwf	((?_printf))+1
 16631  1BA6  3194  24A0  319A   	fcall	_printf
 16632                           	line	182
 16633                           ;cmdline.c: 182: }
 16634  1BA9  2BF3               	goto	l15171
 16635                           	line	168
 16636                           	
 16637  1BAA                     l15163:	
 16638                           	
 16639  1BAA                     l37793:	
 16640  1BAA  3009               	movlw	(09h)
 16641  1BAB  0020               	movlb 0	; select bank0
 16642  1BAC  00CF               	movwf	(??_proc_line+0)+0
 16643  1BAD  084F               	movf	(??_proc_line+0)+0,w
 16644  1BAE  00A1               	movwf	(?___bmul)
 16645  1BAF  0856               	movf	(proc_line@index),w
 16646  1BB0  31A9  2112  319A   	fcall	___bmul
 16647  1BB3  3E08               	addlw	08h
 16648  1BB4  3E10               	addlw	low(_commands|8000h)
 16649  1BB5  0084               	movwf	fsr0l
 16650  1BB6  3085               	movlw	high(_commands|8000h)
 16651  1BB7  1803               	skipnc
 16652  1BB8  3E01               	addlw	1
 16653  1BB9  0085               	movwf	fsr0h
 16654  1BBA  0800               	movf	indf0,w ;code access
 16655  1BBB  0020               	movlb 0	; select bank0
 16656  1BBC  00D0               	movwf	(??_proc_line+1)+0
 16657  1BBD  0850               	movf	(??_proc_line+1)+0,w
 16658  1BBE  00D5               	movwf	(_proc_line$30521)
 16659                           	
 16660  1BBF                     l37795:	
 16661  1BBF  0859               	movf	(proc_line@argc+1),w
 16662  1BC0  01C8               	clrf	(?_echo+1)
 16663  1BC1  07C8               	addwf	(?_echo+1)
 16664  1BC2  0858               	movf	(proc_line@argc),w
 16665  1BC3  01C7               	clrf	(?_echo)
 16666  1BC4  07C7               	addwf	(?_echo)
 16667                           
 16668  1BC5  3051               	movlw	(proc_line@argv)&0ffh
 16669  1BC6  00CF               	movwf	(??_proc_line+0)+0
 16670  1BC7  084F               	movf	(??_proc_line+0)+0,w
 16671  1BC8  00C9               	movwf	(0+?_echo+02h)
 16672  1BC9  0855               	movf	(_proc_line$30521),w
 16673  1BCA  3181  2100  319A   	fcall	fptable
 16674                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
 16675                           ; Switch size 1, requested type "space"
 16676                           ; Number of cases is 2, Range of values is 0 to 255
 16677                           ; switch strategies available:
 16678                           ; Name         Instructions Cycles
 16679                           ; simple_byte            7     4 (average)
 16680                           ; jumptable            260     6 (fixed)
 16681                           ; rangetable           260     6 (fixed)
 16682                           ; spacedrange          517     8 (fixed)
 16683                           ; locatedrange         256     3 (fixed)
 16684                           ;	Chosen strategy is simple_byte
 16685                           
 16686  1BCD  0020               	movlb 0	; select bank0
 16687  1BCE  0848               	movf (1+(?_echo)),w
 16688                           	opt asmopt_off
 16689  1BCF  3A00               	xorlw	0^0	; case 0
 16690  1BD0  1903               	skipnz
 16691  1BD1  2BD6               	goto	l39243
 16692  1BD2  3AFF               	xorlw	255^0	; case 255
 16693  1BD3  1903               	skipnz
 16694  1BD4  2BDB               	goto	l39245
 16695  1BD5  2BA1               	goto	l37791
 16696                           	opt asmopt_on
 16697                           	
 16698  1BD6                     l39243:	
 16699                           ; Switch size 1, requested type "space"
 16700                           ; Number of cases is 1, Range of values is 0 to 0
 16701                           ; switch strategies available:
 16702                           ; Name         Instructions Cycles
 16703                           ; simple_byte            4     3 (average)
 16704                           ; direct_byte            8     6 (fixed)
 16705                           ; jumptable            260     6 (fixed)
 16706                           ; rangetable             5     4 (fixed)
 16707                           ; spacedrange            7     6 (fixed)
 16708                           ; locatedrange           1     3 (fixed)
 16709                           ;	Chosen strategy is simple_byte
 16710                           
 16711  1BD6  0847               	movf (0+(?_echo)),w
 16712                           	opt asmopt_off
 16713  1BD7  3A00               	xorlw	0^0	; case 0
 16714  1BD8  1903               	skipnz
 16715  1BD9  2BF3               	goto	l15171
 16716  1BDA  2BA1               	goto	l37791
 16717                           	opt asmopt_on
 16718                           	
 16719  1BDB                     l39245:	
 16720                           ; Switch size 1, requested type "space"
 16721                           ; Number of cases is 3, Range of values is 253 to 255
 16722                           ; switch strategies available:
 16723                           ; Name         Instructions Cycles
 16724                           ; simple_byte           10     6 (average)
 16725                           ; direct_byte           11     5 (fixed)
 16726                           ; jumptable            263     9 (fixed)
 16727                           ;	Chosen strategy is simple_byte
 16728                           
 16729  1BDB  0847               	movf (0+(?_echo)),w
 16730                           	opt asmopt_off
 16731  1BDC  3AFD               	xorlw	253^0	; case 253
 16732  1BDD  1903               	skipnz
 16733  1BDE  2B98               	goto	l37789
 16734  1BDF  3A03               	xorlw	254^253	; case 254
 16735  1BE0  1903               	skipnz
 16736  1BE1  2B8F               	goto	l37787
 16737  1BE2  3A01               	xorlw	255^254	; case 255
 16738  1BE3  1903               	skipnz
 16739  1BE4  2B87               	goto	l37785
 16740  1BE5  2BA1               	goto	l37791
 16741                           	opt asmopt_on
 16742                           
 16743                           	line	182
 16744                           	
 16745  1BE6                     l15165:	
 16746                           	line	183
 16747                           ;cmdline.c: 183: } else
 16748  1BE6  2BF3               	goto	l15171
 16749                           	
 16750  1BE7                     l15162:	
 16751                           	line	184
 16752                           	
 16753  1BE7                     l37797:	
 16754                           ;cmdline.c: 184: printf("Unknown command '%s'\n", argv[0]);
 16755  1BE7  304C               	movlw	low(STR_105|8000h)
 16756  1BE8  00AF               	movwf	(?_printf)
 16757  1BE9  3085               	movlw	high(STR_105|8000h)
 16758  1BEA  00B0               	movwf	((?_printf))+1
 16759  1BEB  0851               	movf	(proc_line@argv),w
 16760  1BEC  00B1               	movwf	(0+?_printf+02h)
 16761  1BED  3001               	movlw	(0x2/2)
 16762  1BEE  00B2               	movwf	(1+?_printf+02h)
 16763  1BEF  3194  24A0  319A   	fcall	_printf
 16764  1BF2  2BF3               	goto	l15171
 16765                           	
 16766  1BF3                     l15170:	
 16767                           	line	185
 16768                           	
 16769  1BF3                     l15171:	
 16770  1BF3  0008               	return
 16771                           	opt stack 0
 16772                           GLOBAL	__end_of_proc_line
 16773  1BF4                     	__end_of_proc_line:
 16774 ;; =============== function _proc_line ends ============
 16775                           
 16776                           	signat	_proc_line,4216
 16777                           	global	_update_display
 16778                           psect	text3333,local,class=CODE,delta=2
 16779                           global __ptext3333
 16780  098C                     __ptext3333:
 16781                           
 16782 ;; *************** function _update_display *****************
 16783 ;; Defined at:
 16784 ;;		line 450 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;		None
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;		None
 16789 ;; Return value:  Size  Location     Type
 16790 ;;		None               void
 16791 ;; Registers used:
 16792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16793 ;; Tracked objects:
 16794 ;;		On entry : 0/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16801 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16802 ;;Total ram usage:        1 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:    5
 16805 ;; This function calls:
 16806 ;;		_set_LED_Error
 16807 ;;		_set_LED_Cartridge
 16808 ;;		_set_LED
 16809 ;;		_set_LED_Cat
 16810 ;;		_set_LED_Locked
 16811 ;; This function is called by:
 16812 ;;		_userinterface_init
 16813 ;;		_userinterface_work
 16814 ;;		_catsensor_event
 16815 ;;		_process_button
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           psect	text3333
 16819                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 16820                           	line	450
 16821                           	global	__size_of_update_display
 16822  01B1                     	__size_of_update_display	equ	__end_of_update_display-_update_display
 16823                           	
 16824  098C                     _update_display:	
 16825                           	opt	stack 9
 16826                           ; Regs used in _update_display: [wreg-status,0+pclath+cstack]
 16827                           	line	451
 16828                           	
 16829  098C                     l37663:	
 16830                           ;userinterface.c: 451: switch (panel_mode) {
 16831  098C  2B0D               	goto	l37727
 16832                           	line	452
 16833                           ;userinterface.c: 452: default:
 16834                           	
 16835  098D                     l8744:	
 16836                           	line	453
 16837                           ;userinterface.c: 453: panel_mode = 0;
 16838  098D  01D9               	clrf	(_panel_mode)^080h
 16839  098E  298F               	goto	l37665
 16840                           	line	454
 16841                           ;userinterface.c: 454: case 0:
 16842                           	
 16843  098F                     l8745:	
 16844                           	line	455
 16845                           	
 16846  098F                     l37665:	
 16847                           ;userinterface.c: 455: set_LED_Error(0x00, 0);
 16848  098F  0020               	movlb 0	; select bank0
 16849  0990  01AE               	clrf	(?_set_LED_Error)
 16850  0991  3000               	movlw	(0)
 16851  0992  31B7  2792  3189   	fcall	_set_LED_Error
 16852                           	line	456
 16853                           	
 16854  0995                     l37667:	
 16855                           ;userinterface.c: 456: if (cart_level >= 10)
 16856  0995  300A               	movlw	(0Ah)
 16857  0996  0020               	movlb 0	; select bank0
 16858  0997  026E               	subwf	(_cart_level),w
 16859  0998  1C03               	skipc
 16860  0999  299B               	goto	u10941
 16861  099A  299C               	goto	u10940
 16862  099B                     u10941:
 16863  099B  29A2               	goto	l37671
 16864  099C                     u10940:
 16865                           	line	457
 16866                           	
 16867  099C                     l37669:	
 16868                           ;userinterface.c: 457: set_LED_Cartridge(0x00, 0);
 16869  099C  01AE               	clrf	(?_set_LED_Cartridge)
 16870  099D  3000               	movlw	(0)
 16871  099E  31B7  27A1  3189   	fcall	_set_LED_Cartridge
 16872  09A1  2A64               	goto	l37697
 16873                           	line	458
 16874                           	
 16875  09A2                     l8746:	
 16876                           	line	459
 16877                           	
 16878  09A2                     l37671:	
 16879                           ;userinterface.c: 458: else
 16880                           ;userinterface.c: 459: set_LED_Cartridge(0x55, 1);
 16881  09A2  0020               	movlb 0	; select bank0
 16882  09A3  01AE               	clrf	(?_set_LED_Cartridge)
 16883  09A4  1403               	bsf	status,0
 16884  09A5  0DAE               	rlf	(?_set_LED_Cartridge),f
 16885  09A6  3055               	movlw	(055h)
 16886  09A7  31B7  27A1  3189   	fcall	_set_LED_Cartridge
 16887  09AA  2A64               	goto	l37697
 16888                           	
 16889  09AB                     l8747:	
 16890                           	line	460
 16891                           ;userinterface.c: 460: switch (auto_mode) {
 16892  09AB  2A64               	goto	l37697
 16893                           	line	461
 16894                           ;userinterface.c: 461: default:
 16895                           	
 16896  09AC                     l8749:	
 16897                           	line	462
 16898                           ;userinterface.c: 462: auto_mode = 0;
 16899  09AC  01E2               	clrf	(_auto_mode)
 16900  09AD  29B2               	goto	l37673
 16901                           	line	463
 16902                           ;userinterface.c: 463: case 0:
 16903                           	
 16904  09AE                     l8750:	
 16905  09AE  29B2               	goto	l37673
 16906                           	line	464
 16907                           	
 16908  09AF                     l8751:	
 16909  09AF  29B2               	goto	l37673
 16910                           	line	465
 16911                           	
 16912  09B0                     l8752:	
 16913  09B0  29B2               	goto	l37673
 16914                           	line	466
 16915                           	
 16916  09B1                     l8753:	
 16917  09B1  29B2               	goto	l37673
 16918                           	line	467
 16919                           	
 16920  09B2                     l8754:	
 16921                           	line	468
 16922                           	
 16923  09B2                     l37673:	
 16924                           ;userinterface.c: 464: case 1:
 16925                           ;userinterface.c: 465: case 2:
 16926                           ;userinterface.c: 466: case 3:
 16927                           ;userinterface.c: 467: case 4:
 16928                           ;userinterface.c: 468: set_LED(1, auto_mode == 1);
 16929  09B2  0862               	movf	(_auto_mode),w
 16930  09B3  3A01               	xorlw	01h&0ffh
 16931  09B4  3000               	movlw	0
 16932  09B5  1903               	skipnz
 16933  09B6  3001               	movlw	1
 16934  09B7  00B2               	movwf	(??_update_display+0)+0
 16935  09B8  0832               	movf	(??_update_display+0)+0,w
 16936  09B9  00A1               	movwf	(?_set_LED)
 16937  09BA  3001               	movlw	(01h)
 16938  09BB  31AD  259F  3189   	fcall	_set_LED
 16939                           	line	469
 16940                           ;userinterface.c: 469: set_LED(2, auto_mode == 2);
 16941  09BE  0020               	movlb 0	; select bank0
 16942  09BF  0862               	movf	(_auto_mode),w
 16943  09C0  3A02               	xorlw	02h&0ffh
 16944  09C1  3000               	movlw	0
 16945  09C2  1903               	skipnz
 16946  09C3  3001               	movlw	1
 16947  09C4  00B2               	movwf	(??_update_display+0)+0
 16948  09C5  0832               	movf	(??_update_display+0)+0,w
 16949  09C6  00A1               	movwf	(?_set_LED)
 16950  09C7  3002               	movlw	(02h)
 16951  09C8  31AD  259F  3189   	fcall	_set_LED
 16952                           	line	470
 16953                           ;userinterface.c: 470: set_LED(3, auto_mode == 3);
 16954  09CB  0020               	movlb 0	; select bank0
 16955  09CC  0862               	movf	(_auto_mode),w
 16956  09CD  3A03               	xorlw	03h&0ffh
 16957  09CE  3000               	movlw	0
 16958  09CF  1903               	skipnz
 16959  09D0  3001               	movlw	1
 16960  09D1  00B2               	movwf	(??_update_display+0)+0
 16961  09D2  0832               	movf	(??_update_display+0)+0,w
 16962  09D3  00A1               	movwf	(?_set_LED)
 16963  09D4  3003               	movlw	(03h)
 16964  09D5  31AD  259F  3189   	fcall	_set_LED
 16965                           	line	471
 16966                           ;userinterface.c: 471: set_LED(4, auto_mode == 4);
 16967  09D8  0020               	movlb 0	; select bank0
 16968  09D9  0862               	movf	(_auto_mode),w
 16969  09DA  3A04               	xorlw	04h&0ffh
 16970  09DB  3000               	movlw	0
 16971  09DC  1903               	skipnz
 16972  09DD  3001               	movlw	1
 16973  09DE  00B2               	movwf	(??_update_display+0)+0
 16974  09DF  0832               	movf	(??_update_display+0)+0,w
 16975  09E0  00A1               	movwf	(?_set_LED)
 16976  09E1  3004               	movlw	(04h)
 16977  09E2  31AD  259F  3189   	fcall	_set_LED
 16978                           	line	472
 16979                           	
 16980  09E5                     l37675:	
 16981                           ;userinterface.c: 472: set_LED_Cat(0x00, 0);
 16982  09E5  0020               	movlb 0	; select bank0
 16983  09E6  01AE               	clrf	(?_set_LED_Cat)
 16984  09E7  3000               	movlw	(0)
 16985  09E8  31B7  27B0  3189   	fcall	_set_LED_Cat
 16986                           	line	473
 16987                           ;userinterface.c: 473: break;
 16988  09EB  2B19               	goto	l8767
 16989                           	line	474
 16990                           ;userinterface.c: 474: case 5:
 16991                           	
 16992  09EC                     l8756:	
 16993  09EC  29F0               	goto	l37677
 16994                           	line	475
 16995                           	
 16996  09ED                     l8757:	
 16997  09ED  29F0               	goto	l37677
 16998                           	line	476
 16999                           	
 17000  09EE                     l8758:	
 17001  09EE  29F0               	goto	l37677
 17002                           	line	477
 17003                           	
 17004  09EF                     l8759:	
 17005  09EF  29F0               	goto	l37677
 17006                           	line	478
 17007                           	
 17008  09F0                     l8760:	
 17009                           	line	479
 17010                           	
 17011  09F0                     l37677:	
 17012                           ;userinterface.c: 475: case 6:
 17013                           ;userinterface.c: 476: case 7:
 17014                           ;userinterface.c: 477: case 8:
 17015                           ;userinterface.c: 478: case 9:
 17016                           ;userinterface.c: 479: set_LED(1, auto_mode != 9);
 17017  09F0  0020               	movlb 0	; select bank0
 17018  09F1  0862               	movf	(_auto_mode),w
 17019  09F2  3A09               	xorlw	09h&0ffh
 17020  09F3  3000               	movlw	0
 17021  09F4  1D03               	skipz
 17022  09F5  3001               	movlw	1
 17023  09F6  00B2               	movwf	(??_update_display+0)+0
 17024  09F7  0832               	movf	(??_update_display+0)+0,w
 17025  09F8  00A1               	movwf	(?_set_LED)
 17026  09F9  3001               	movlw	(01h)
 17027  09FA  31AD  259F  3189   	fcall	_set_LED
 17028                           	line	480
 17029                           ;userinterface.c: 480: set_LED(2, auto_mode == 6);
 17030  09FD  0020               	movlb 0	; select bank0
 17031  09FE  0862               	movf	(_auto_mode),w
 17032  09FF  3A06               	xorlw	06h&0ffh
 17033  0A00  3000               	movlw	0
 17034  0A01  1903               	skipnz
 17035  0A02  3001               	movlw	1
 17036  0A03  00B2               	movwf	(??_update_display+0)+0
 17037  0A04  0832               	movf	(??_update_display+0)+0,w
 17038  0A05  00A1               	movwf	(?_set_LED)
 17039  0A06  3002               	movlw	(02h)
 17040  0A07  31AD  259F  3189   	fcall	_set_LED
 17041                           	line	481
 17042                           ;userinterface.c: 481: set_LED(3, auto_mode == 7);
 17043  0A0A  0020               	movlb 0	; select bank0
 17044  0A0B  0862               	movf	(_auto_mode),w
 17045  0A0C  3A07               	xorlw	07h&0ffh
 17046  0A0D  3000               	movlw	0
 17047  0A0E  1903               	skipnz
 17048  0A0F  3001               	movlw	1
 17049  0A10  00B2               	movwf	(??_update_display+0)+0
 17050  0A11  0832               	movf	(??_update_display+0)+0,w
 17051  0A12  00A1               	movwf	(?_set_LED)
 17052  0A13  3003               	movlw	(03h)
 17053  0A14  31AD  259F  3189   	fcall	_set_LED
 17054                           	line	482
 17055                           ;userinterface.c: 482: set_LED(4, auto_mode == 8);
 17056  0A17  0020               	movlb 0	; select bank0
 17057  0A18  0862               	movf	(_auto_mode),w
 17058  0A19  3A08               	xorlw	08h&0ffh
 17059  0A1A  3000               	movlw	0
 17060  0A1B  1903               	skipnz
 17061  0A1C  3001               	movlw	1
 17062  0A1D  00B2               	movwf	(??_update_display+0)+0
 17063  0A1E  0832               	movf	(??_update_display+0)+0,w
 17064  0A1F  00A1               	movwf	(?_set_LED)
 17065  0A20  3004               	movlw	(04h)
 17066  0A21  31AD  259F  3189   	fcall	_set_LED
 17067                           	line	483
 17068                           	
 17069  0A24                     l37679:	
 17070                           ;userinterface.c: 483: if ((cat_present) && (state != 2))
 17071  0A24  1CF0               	btfss	(_cat_present/8),(_cat_present)&7
 17072  0A25  2A27               	goto	u10951
 17073  0A26  2A28               	goto	u10950
 17074  0A27                     u10951:
 17075  0A27  2A37               	goto	l8761
 17076  0A28                     u10950:
 17077                           	
 17078  0A28                     l37681:	
 17079  0A28  0020               	movlb 0	; select bank0
 17080  0A29  0866               	movf	(_state),w
 17081  0A2A  3A02               	xorlw	02h&0ffh
 17082  0A2B  1903               	skipnz
 17083  0A2C  2A2E               	goto	u10961
 17084  0A2D  2A2F               	goto	u10960
 17085  0A2E                     u10961:
 17086  0A2E  2A37               	goto	l8761
 17087  0A2F                     u10960:
 17088                           	line	484
 17089                           	
 17090  0A2F                     l37683:	
 17091                           ;userinterface.c: 484: set_LED_Cat(0x55, 1);
 17092  0A2F  01AE               	clrf	(?_set_LED_Cat)
 17093  0A30  1403               	bsf	status,0
 17094  0A31  0DAE               	rlf	(?_set_LED_Cat),f
 17095  0A32  3055               	movlw	(055h)
 17096  0A33  31B7  27B0  3189   	fcall	_set_LED_Cat
 17097  0A36  2B19               	goto	l8767
 17098                           	line	485
 17099                           	
 17100  0A37                     l8761:	
 17101                           ;userinterface.c: 485: else if ((cat_detected) && (state != 2))
 17102  0A37  1C70               	btfss	(_cat_detected/8),(_cat_detected)&7
 17103  0A38  2A3A               	goto	u10971
 17104  0A39  2A3B               	goto	u10970
 17105  0A3A                     u10971:
 17106  0A3A  2A58               	goto	l37693
 17107  0A3B                     u10970:
 17108                           	
 17109  0A3B                     l37685:	
 17110  0A3B  0020               	movlb 0	; select bank0
 17111  0A3C  0866               	movf	(_state),w
 17112  0A3D  3A02               	xorlw	02h&0ffh
 17113  0A3E  1903               	skipnz
 17114  0A3F  2A41               	goto	u10981
 17115  0A40  2A42               	goto	u10980
 17116  0A41                     u10981:
 17117  0A41  2A58               	goto	l37693
 17118  0A42                     u10980:
 17119                           	line	486
 17120                           	
 17121  0A42                     l37687:	
 17122                           ;userinterface.c: 486: if (full_wash)
 17123  0A42  1CF1               	btfss	(_full_wash/8),(_full_wash)&7
 17124  0A43  2A45               	goto	u10991
 17125  0A44  2A46               	goto	u10990
 17126  0A45                     u10991:
 17127  0A45  2A4E               	goto	l37691
 17128  0A46                     u10990:
 17129                           	line	487
 17130                           	
 17131  0A46                     l37689:	
 17132                           ;userinterface.c: 487: set_LED_Cat(0xFA, 1);
 17133  0A46  01AE               	clrf	(?_set_LED_Cat)
 17134  0A47  1403               	bsf	status,0
 17135  0A48  0DAE               	rlf	(?_set_LED_Cat),f
 17136  0A49  30FA               	movlw	(0FAh)
 17137  0A4A  31B7  27B0  3189   	fcall	_set_LED_Cat
 17138  0A4D  2B19               	goto	l8767
 17139                           	line	488
 17140                           	
 17141  0A4E                     l8764:	
 17142                           	line	489
 17143                           	
 17144  0A4E                     l37691:	
 17145                           ;userinterface.c: 488: else
 17146                           ;userinterface.c: 489: set_LED_Cat(0xFE, 1);
 17147  0A4E  0020               	movlb 0	; select bank0
 17148  0A4F  01AE               	clrf	(?_set_LED_Cat)
 17149  0A50  1403               	bsf	status,0
 17150  0A51  0DAE               	rlf	(?_set_LED_Cat),f
 17151  0A52  30FE               	movlw	(0FEh)
 17152  0A53  31B7  27B0  3189   	fcall	_set_LED_Cat
 17153  0A56  2B19               	goto	l8767
 17154                           	
 17155  0A57                     l8765:	
 17156  0A57  2B19               	goto	l8767
 17157                           	line	490
 17158                           	
 17159  0A58                     l8763:	
 17160                           	line	491
 17161                           	
 17162  0A58                     l37693:	
 17163                           ;userinterface.c: 490: else
 17164                           ;userinterface.c: 491: set_LED_Cat(0xFF, 1);
 17165  0A58  0020               	movlb 0	; select bank0
 17166  0A59  01AE               	clrf	(?_set_LED_Cat)
 17167  0A5A  1403               	bsf	status,0
 17168  0A5B  0DAE               	rlf	(?_set_LED_Cat),f
 17169  0A5C  30FF               	movlw	(0FFh)
 17170  0A5D  31B7  27B0  3189   	fcall	_set_LED_Cat
 17171  0A60  2B19               	goto	l8767
 17172                           	
 17173  0A61                     l8766:	
 17174  0A61  2B19               	goto	l8767
 17175                           	
 17176  0A62                     l8762:	
 17177                           	line	492
 17178                           ;userinterface.c: 492: break;
 17179  0A62  2B19               	goto	l8767
 17180                           	line	493
 17181                           	
 17182  0A63                     l37695:	
 17183                           ;userinterface.c: 493: }
 17184  0A63  2B19               	goto	l8767
 17185                           	line	460
 17186                           	
 17187  0A64                     l8748:	
 17188                           	
 17189  0A64                     l37697:	
 17190  0A64  0020               	movlb 0	; select bank0
 17191  0A65  0862               	movf	(_auto_mode),w
 17192                           	; Switch size 1, requested type "space"
 17193                           ; Number of cases is 10, Range of values is 0 to 9
 17194                           ; switch strategies available:
 17195                           ; Name         Instructions Cycles
 17196                           ; direct_byte           26     6 (fixed)
 17197                           ; simple_byte           31    16 (average)
 17198                           ; jumptable            260     6 (fixed)
 17199                           ; rangetable            14     4 (fixed)
 17200                           ; spacedrange           25     6 (fixed)
 17201                           ; locatedrange          10     3 (fixed)
 17202                           ;	Chosen strategy is direct_byte
 17203                           
 17204  0A66  0084               	movwf fsr0l
 17205  0A67  300A               	movlw	10
 17206  0A68  0204               	subwf	fsr0l,w
 17207  0A69  1803               skipnc
 17208  0A6A  29AC               goto l8749
 17209  0A6B  31A8               movlp high(S39247)
 17210  0A6C  3504               	lslf fsr0l,w
 17211  0A6D  3E1E               	addlw low(S39247)
 17212  0A6E  0082               	movwf pc
 17213                           psect	swtext4,local,class=CONST,delta=2
 17214                           global __pswtext4
 17215  281E                     __pswtext4:
 17216  281E                     S39247:
 17217  281E  3189  29B2         	ljmp	l37673
 17218  2820  3189  29B2         	ljmp	l37673
 17219  2822  3189  29B2         	ljmp	l37673
 17220  2824  3189  29B2         	ljmp	l37673
 17221  2826  3189  29B2         	ljmp	l37673
 17222  2828  3189  29F0         	ljmp	l37677
 17223  282A  3189  29F0         	ljmp	l37677
 17224  282C  3189  29F0         	ljmp	l37677
 17225  282E  3189  29F0         	ljmp	l37677
 17226  2830  3189  29F0         	ljmp	l37677
 17227                           psect	text3333
 17228                           
 17229                           	line	493
 17230                           	
 17231  0A6F                     l8755:	
 17232                           	line	494
 17233                           ;userinterface.c: 494: break;
 17234  0A6F  2B19               	goto	l8767
 17235                           	line	495
 17236                           ;userinterface.c: 495: case 1:
 17237                           	
 17238  0A70                     l8768:	
 17239                           	line	496
 17240                           	
 17241  0A70                     l37699:	
 17242                           ;userinterface.c: 496: set_LED_Error(0x00, 0);
 17243  0A70  0020               	movlb 0	; select bank0
 17244  0A71  01AE               	clrf	(?_set_LED_Error)
 17245  0A72  3000               	movlw	(0)
 17246  0A73  31B7  2792  3189   	fcall	_set_LED_Error
 17247                           	line	497
 17248                           ;userinterface.c: 497: set_LED_Cartridge(0xFF, 1);
 17249  0A76  0020               	movlb 0	; select bank0
 17250  0A77  01AE               	clrf	(?_set_LED_Cartridge)
 17251  0A78  1403               	bsf	status,0
 17252  0A79  0DAE               	rlf	(?_set_LED_Cartridge),f
 17253  0A7A  30FF               	movlw	(0FFh)
 17254  0A7B  31B7  27A1  3189   	fcall	_set_LED_Cartridge
 17255                           	line	498
 17256                           	
 17257  0A7E                     l37701:	
 17258                           ;userinterface.c: 498: set_LED(1, cart_level >= 10);
 17259  0A7E  300A               	movlw	(0Ah)
 17260  0A7F  0020               	movlb 0	; select bank0
 17261  0A80  026E               	subwf	(_cart_level),w
 17262  0A81  3000               	movlw	0
 17263  0A82  1803               	skipnc
 17264  0A83  3001               	movlw	1
 17265  0A84  00B2               	movwf	(??_update_display+0)+0
 17266  0A85  0832               	movf	(??_update_display+0)+0,w
 17267  0A86  00A1               	movwf	(?_set_LED)
 17268  0A87  3001               	movlw	(01h)
 17269  0A88  31AD  259F  3189   	fcall	_set_LED
 17270                           	line	499
 17271                           	
 17272  0A8B                     l37703:	
 17273                           ;userinterface.c: 499: set_LED(2, cart_level >= 25);
 17274  0A8B  3019               	movlw	(019h)
 17275  0A8C  0020               	movlb 0	; select bank0
 17276  0A8D  026E               	subwf	(_cart_level),w
 17277  0A8E  3000               	movlw	0
 17278  0A8F  1803               	skipnc
 17279  0A90  3001               	movlw	1
 17280  0A91  00B2               	movwf	(??_update_display+0)+0
 17281  0A92  0832               	movf	(??_update_display+0)+0,w
 17282  0A93  00A1               	movwf	(?_set_LED)
 17283  0A94  3002               	movlw	(02h)
 17284  0A95  31AD  259F  3189   	fcall	_set_LED
 17285                           	line	500
 17286                           	
 17287  0A98                     l37705:	
 17288                           ;userinterface.c: 500: set_LED(3, cart_level >= 50);
 17289  0A98  3032               	movlw	(032h)
 17290  0A99  0020               	movlb 0	; select bank0
 17291  0A9A  026E               	subwf	(_cart_level),w
 17292  0A9B  3000               	movlw	0
 17293  0A9C  1803               	skipnc
 17294  0A9D  3001               	movlw	1
 17295  0A9E  00B2               	movwf	(??_update_display+0)+0
 17296  0A9F  0832               	movf	(??_update_display+0)+0,w
 17297  0AA0  00A1               	movwf	(?_set_LED)
 17298  0AA1  3003               	movlw	(03h)
 17299  0AA2  31AD  259F  3189   	fcall	_set_LED
 17300                           	line	501
 17301                           	
 17302  0AA5                     l37707:	
 17303                           ;userinterface.c: 501: set_LED(4, cart_level >= 75);
 17304  0AA5  304B               	movlw	(04Bh)
 17305  0AA6  0020               	movlb 0	; select bank0
 17306  0AA7  026E               	subwf	(_cart_level),w
 17307  0AA8  3000               	movlw	0
 17308  0AA9  1803               	skipnc
 17309  0AAA  3001               	movlw	1
 17310  0AAB  00B2               	movwf	(??_update_display+0)+0
 17311  0AAC  0832               	movf	(??_update_display+0)+0,w
 17312  0AAD  00A1               	movwf	(?_set_LED)
 17313  0AAE  3004               	movlw	(04h)
 17314  0AAF  31AD  259F  3189   	fcall	_set_LED
 17315                           	line	502
 17316                           	
 17317  0AB2                     l37709:	
 17318                           ;userinterface.c: 502: if (cart_level >= 100)
 17319  0AB2  3064               	movlw	(064h)
 17320  0AB3  0020               	movlb 0	; select bank0
 17321  0AB4  026E               	subwf	(_cart_level),w
 17322  0AB5  1C03               	skipc
 17323  0AB6  2AB8               	goto	u11001
 17324  0AB7  2AB9               	goto	u11000
 17325  0AB8                     u11001:
 17326  0AB8  2AC1               	goto	l37713
 17327  0AB9                     u11000:
 17328                           	line	503
 17329                           	
 17330  0AB9                     l37711:	
 17331                           ;userinterface.c: 503: set_LED_Cat(0xFF, 1);
 17332  0AB9  01AE               	clrf	(?_set_LED_Cat)
 17333  0ABA  1403               	bsf	status,0
 17334  0ABB  0DAE               	rlf	(?_set_LED_Cat),f
 17335  0ABC  30FF               	movlw	(0FFh)
 17336  0ABD  31B7  27B0  3189   	fcall	_set_LED_Cat
 17337  0AC0  2B19               	goto	l8767
 17338                           	line	504
 17339                           	
 17340  0AC1                     l8769:	
 17341                           	line	505
 17342                           	
 17343  0AC1                     l37713:	
 17344                           ;userinterface.c: 504: else
 17345                           ;userinterface.c: 505: set_LED_Cat(0x00, 0);
 17346  0AC1  0020               	movlb 0	; select bank0
 17347  0AC2  01AE               	clrf	(?_set_LED_Cat)
 17348  0AC3  3000               	movlw	(0)
 17349  0AC4  31B7  27B0  3189   	fcall	_set_LED_Cat
 17350  0AC7  2B19               	goto	l8767
 17351                           	
 17352  0AC8                     l8770:	
 17353                           	line	506
 17354                           ;userinterface.c: 506: break;
 17355  0AC8  2B19               	goto	l8767
 17356                           	line	507
 17357                           ;userinterface.c: 507: case 2:
 17358                           	
 17359  0AC9                     l8771:	
 17360                           	line	508
 17361                           	
 17362  0AC9                     l37715:	
 17363                           ;userinterface.c: 508: set_LED_Error(0x55, 1);
 17364  0AC9  0020               	movlb 0	; select bank0
 17365  0ACA  01AE               	clrf	(?_set_LED_Error)
 17366  0ACB  1403               	bsf	status,0
 17367  0ACC  0DAE               	rlf	(?_set_LED_Error),f
 17368  0ACD  3055               	movlw	(055h)
 17369  0ACE  31B7  2792  3189   	fcall	_set_LED_Error
 17370                           	line	509
 17371                           ;userinterface.c: 509: set_LED_Cartridge(0x00, 0);
 17372  0AD1  0020               	movlb 0	; select bank0
 17373  0AD2  01AE               	clrf	(?_set_LED_Cartridge)
 17374  0AD3  3000               	movlw	(0)
 17375  0AD4  31B7  27A1  3189   	fcall	_set_LED_Cartridge
 17376                           	line	510
 17377                           	
 17378  0AD7                     l37717:	
 17379                           ;userinterface.c: 510: set_LED(1, error_nr == 1);
 17380  0AD7  0020               	movlb 0	; select bank0
 17381  0AD8  0863               	movf	(_error_nr),w
 17382  0AD9  3A01               	xorlw	01h&0ffh
 17383  0ADA  3000               	movlw	0
 17384  0ADB  1903               	skipnz
 17385  0ADC  3001               	movlw	1
 17386  0ADD  00B2               	movwf	(??_update_display+0)+0
 17387  0ADE  0832               	movf	(??_update_display+0)+0,w
 17388  0ADF  00A1               	movwf	(?_set_LED)
 17389  0AE0  3001               	movlw	(01h)
 17390  0AE1  31AD  259F  3189   	fcall	_set_LED
 17391                           	line	511
 17392                           	
 17393  0AE4                     l37719:	
 17394                           ;userinterface.c: 511: set_LED(2, error_nr == 2);
 17395  0AE4  0020               	movlb 0	; select bank0
 17396  0AE5  0863               	movf	(_error_nr),w
 17397  0AE6  3A02               	xorlw	02h&0ffh
 17398  0AE7  3000               	movlw	0
 17399  0AE8  1903               	skipnz
 17400  0AE9  3001               	movlw	1
 17401  0AEA  00B2               	movwf	(??_update_display+0)+0
 17402  0AEB  0832               	movf	(??_update_display+0)+0,w
 17403  0AEC  00A1               	movwf	(?_set_LED)
 17404  0AED  3002               	movlw	(02h)
 17405  0AEE  31AD  259F  3189   	fcall	_set_LED
 17406                           	line	512
 17407                           	
 17408  0AF1                     l37721:	
 17409                           ;userinterface.c: 512: set_LED(3, error_nr == 3);
 17410  0AF1  0020               	movlb 0	; select bank0
 17411  0AF2  0863               	movf	(_error_nr),w
 17412  0AF3  3A03               	xorlw	03h&0ffh
 17413  0AF4  3000               	movlw	0
 17414  0AF5  1903               	skipnz
 17415  0AF6  3001               	movlw	1
 17416  0AF7  00B2               	movwf	(??_update_display+0)+0
 17417  0AF8  0832               	movf	(??_update_display+0)+0,w
 17418  0AF9  00A1               	movwf	(?_set_LED)
 17419  0AFA  3003               	movlw	(03h)
 17420  0AFB  31AD  259F  3189   	fcall	_set_LED
 17421                           	line	513
 17422                           	
 17423  0AFE                     l37723:	
 17424                           ;userinterface.c: 513: set_LED(4, error_nr == 4);
 17425  0AFE  0020               	movlb 0	; select bank0
 17426  0AFF  0863               	movf	(_error_nr),w
 17427  0B00  3A04               	xorlw	04h&0ffh
 17428  0B01  3000               	movlw	0
 17429  0B02  1903               	skipnz
 17430  0B03  3001               	movlw	1
 17431  0B04  00B2               	movwf	(??_update_display+0)+0
 17432  0B05  0832               	movf	(??_update_display+0)+0,w
 17433  0B06  00A1               	movwf	(?_set_LED)
 17434  0B07  3004               	movlw	(04h)
 17435  0B08  31AD  259F  3189   	fcall	_set_LED
 17436                           	line	514
 17437                           ;userinterface.c: 514: break;
 17438  0B0B  2B19               	goto	l8767
 17439                           	line	515
 17440                           	
 17441  0B0C                     l37725:	
 17442                           ;userinterface.c: 515: }
 17443  0B0C  2B19               	goto	l8767
 17444                           	line	451
 17445                           	
 17446  0B0D                     l8743:	
 17447                           	
 17448  0B0D                     l37727:	
 17449  0B0D  0021               	movlb 1	; select bank1
 17450  0B0E  0859               	movf	(_panel_mode)^080h,w
 17451                           	; Switch size 1, requested type "space"
 17452                           ; Number of cases is 3, Range of values is 0 to 2
 17453                           ; switch strategies available:
 17454                           ; Name         Instructions Cycles
 17455                           ; simple_byte           10     6 (average)
 17456                           ; direct_byte           12     6 (fixed)
 17457                           ; jumptable            260     6 (fixed)
 17458                           ; rangetable             7     4 (fixed)
 17459                           ; spacedrange           11     6 (fixed)
 17460                           ; locatedrange           3     3 (fixed)
 17461                           ;	Chosen strategy is simple_byte
 17462                           
 17463                           	opt asmopt_off
 17464  0B0F  3A00               	xorlw	0^0	; case 0
 17465  0B10  1903               	skipnz
 17466  0B11  298F               	goto	l37665
 17467  0B12  3A01               	xorlw	1^0	; case 1
 17468  0B13  1903               	skipnz
 17469  0B14  2A70               	goto	l37699
 17470  0B15  3A03               	xorlw	2^1	; case 2
 17471  0B16  1903               	skipnz
 17472  0B17  2AC9               	goto	l37715
 17473  0B18  298D               	goto	l8744
 17474                           	opt asmopt_on
 17475                           
 17476                           	line	515
 17477                           	
 17478  0B19                     l8767:	
 17479                           	line	518
 17480                           ;userinterface.c: 518: if (locked) {
 17481  0B19  1DF1               	btfss	(_locked/8),(_locked)&7
 17482  0B1A  2B1C               	goto	u11011
 17483  0B1B  2B1D               	goto	u11010
 17484  0B1C                     u11011:
 17485  0B1C  2B35               	goto	l37735
 17486  0B1D                     u11010:
 17487                           	line	519
 17488                           	
 17489  0B1D                     l37729:	
 17490                           ;userinterface.c: 519: if (buttonmask_cur)
 17491  0B1D  0021               	movlb 1	; select bank1
 17492  0B1E  0856               	movf	(_buttonmask_cur)^080h,w
 17493  0B1F  1D03               	skipz
 17494  0B20  2B22               	goto	u11020
 17495  0B21  2B2B               	goto	l37733
 17496  0B22                     u11020:
 17497                           	line	520
 17498                           	
 17499  0B22                     l37731:	
 17500                           ;userinterface.c: 520: set_LED_Locked(0xAA, 1);
 17501  0B22  0020               	movlb 0	; select bank0
 17502  0B23  01AE               	clrf	(?_set_LED_Locked)
 17503  0B24  1403               	bsf	status,0
 17504  0B25  0DAE               	rlf	(?_set_LED_Locked),f
 17505  0B26  30AA               	movlw	(0AAh)
 17506  0B27  31B7  27BF  3189   	fcall	_set_LED_Locked
 17507  0B2A  2B3C               	goto	l8776
 17508                           	line	521
 17509                           	
 17510  0B2B                     l8773:	
 17511                           	line	522
 17512                           	
 17513  0B2B                     l37733:	
 17514                           ;userinterface.c: 521: else
 17515                           ;userinterface.c: 522: set_LED_Locked(0xFF, 1);
 17516  0B2B  0020               	movlb 0	; select bank0
 17517  0B2C  01AE               	clrf	(?_set_LED_Locked)
 17518  0B2D  1403               	bsf	status,0
 17519  0B2E  0DAE               	rlf	(?_set_LED_Locked),f
 17520  0B2F  30FF               	movlw	(0FFh)
 17521  0B30  31B7  27BF  3189   	fcall	_set_LED_Locked
 17522  0B33  2B3C               	goto	l8776
 17523                           	
 17524  0B34                     l8774:	
 17525                           	line	523
 17526                           ;userinterface.c: 523: } else
 17527  0B34  2B3C               	goto	l8776
 17528                           	
 17529  0B35                     l8772:	
 17530                           	line	524
 17531                           	
 17532  0B35                     l37735:	
 17533                           ;userinterface.c: 524: set_LED_Locked(0x00, 0);
 17534  0B35  0020               	movlb 0	; select bank0
 17535  0B36  01AE               	clrf	(?_set_LED_Locked)
 17536  0B37  3000               	movlw	(0)
 17537  0B38  31B7  27BF  3189   	fcall	_set_LED_Locked
 17538  0B3B  2B3C               	goto	l8776
 17539                           	
 17540  0B3C                     l8775:	
 17541                           	line	525
 17542                           	
 17543  0B3C                     l8776:	
 17544  0B3C  0008               	return
 17545                           	opt stack 0
 17546                           GLOBAL	__end_of_update_display
 17547  0B3D                     	__end_of_update_display:
 17548 ;; =============== function _update_display ends ============
 17549                           
 17550                           	signat	_update_display,88
 17551                           	global	_set_mode
 17552                           psect	text3334,local,class=CODE,delta=2
 17553                           global __ptext3334
 17554  2E8E                     __ptext3334:
 17555                           
 17556 ;; *************** function _set_mode *****************
 17557 ;; Defined at:
 17558 ;;		line 419 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 17559 ;; Parameters:    Size  Location     Type
 17560 ;;  mode            1    wreg     unsigned char 
 17561 ;; Auto vars:     Size  Location     Type
 17562 ;;  mode            1   40[BANK0 ] unsigned char 
 17563 ;; Return value:  Size  Location     Type
 17564 ;;		None               void
 17565 ;; Registers used:
 17566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17567 ;; Tracked objects:
 17568 ;;		On entry : 0/0
 17569 ;;		On exit  : 0/0
 17570 ;;		Unchanged: 0/0
 17571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 17574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 17575 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17576 ;;Total ram usage:        3 bytes
 17577 ;; Hardware stack levels used:    1
 17578 ;; Hardware stack levels required when called:    5
 17579 ;; This function calls:
 17580 ;;		_printf
 17581 ;;		_update_autotimer
 17582 ;;		_timeoutnow
 17583 ;;		_eeprom_write
 17584 ;; This function is called by:
 17585 ;;		_userinterface_init
 17586 ;;		_setup_short
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           psect	text3334
 17590                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 17591                           	line	419
 17592                           	global	__size_of_set_mode
 17593  005A                     	__size_of_set_mode	equ	__end_of_set_mode-_set_mode
 17594                           	
 17595  2E8E                     _set_mode:	
 17596                           	opt	stack 8
 17597                           ; Regs used in _set_mode: [wreg-status,0+pclath+cstack]
 17598                           ;set_mode@mode stored from wreg
 17599  2E8E  0020               	movlb 0	; select bank0
 17600  2E8F  00C9               	movwf	(set_mode@mode)
 17601                           	line	420
 17602                           	
 17603  2E90                     l37635:	
 17604                           ;userinterface.c: 420: if (mode > 9)
 17605  2E90  300A               	movlw	(0Ah)
 17606  2E91  0249               	subwf	(set_mode@mode),w
 17607  2E92  1C03               	skipc
 17608  2E93  2E95               	goto	u10881
 17609  2E94  2E96               	goto	u10880
 17610  2E95                     u10881:
 17611  2E95  2E98               	goto	l37639
 17612  2E96                     u10880:
 17613                           	line	421
 17614                           	
 17615  2E96                     l37637:	
 17616                           ;userinterface.c: 421: auto_mode = 0;
 17617  2E96  01E2               	clrf	(_auto_mode)
 17618  2E97  2E9D               	goto	l37641
 17619                           	line	422
 17620                           	
 17621  2E98                     l8734:	
 17622                           	line	423
 17623                           	
 17624  2E98                     l37639:	
 17625                           ;userinterface.c: 422: else
 17626                           ;userinterface.c: 423: auto_mode = mode;
 17627  2E98  0849               	movf	(set_mode@mode),w
 17628  2E99  00C7               	movwf	(??_set_mode+0)+0
 17629  2E9A  0847               	movf	(??_set_mode+0)+0,w
 17630  2E9B  00E2               	movwf	(_auto_mode)
 17631  2E9C  2E9D               	goto	l37641
 17632                           	
 17633  2E9D                     l8735:	
 17634                           	line	425
 17635                           	
 17636  2E9D                     l37641:	
 17637                           ;userinterface.c: 425: printf("Set mode %u\n", auto_mode);
 17638  2E9D  300D               	movlw	low(STR_98|8000h)
 17639  2E9E  00AF               	movwf	(?_printf)
 17640  2E9F  3088               	movlw	high(STR_98|8000h)
 17641  2EA0  00B0               	movwf	((?_printf))+1
 17642  2EA1  0862               	movf	(_auto_mode),w
 17643  2EA2  00C7               	movwf	(??_set_mode+0)+0
 17644  2EA3  01C8               	clrf	(??_set_mode+0)+0+1
 17645  2EA4  0847               	movf	0+(??_set_mode+0)+0,w
 17646  2EA5  00B1               	movwf	0+(?_printf)+02h
 17647  2EA6  0848               	movf	1+(??_set_mode+0)+0,w
 17648  2EA7  00B2               	movwf	1+(?_printf)+02h
 17649  2EA8  3194  24A0  31AE   	fcall	_printf
 17650                           	line	431
 17651                           	
 17652  2EAB                     l37643:	
 17653                           ;userinterface.c: 428: if ( (auto_mode == 1) ||
 17654                           ;userinterface.c: 429: (auto_mode == 2) ||
 17655                           ;userinterface.c: 430: (auto_mode == 3) ||
 17656                           ;userinterface.c: 431: (auto_mode == 4) ) {
 17657  2EAB  0020               	movlb 0	; select bank0
 17658  2EAC  0862               	movf	(_auto_mode),w
 17659  2EAD  3A01               	xorlw	01h&0ffh
 17660  2EAE  1903               	skipnz
 17661  2EAF  2EB1               	goto	u10891
 17662  2EB0  2EB2               	goto	u10890
 17663  2EB1                     u10891:
 17664  2EB1  2EC4               	goto	l8738
 17665  2EB2                     u10890:
 17666                           	
 17667  2EB2                     l37645:	
 17668  2EB2  0862               	movf	(_auto_mode),w
 17669  2EB3  3A02               	xorlw	02h&0ffh
 17670  2EB4  1903               	skipnz
 17671  2EB5  2EB7               	goto	u10901
 17672  2EB6  2EB8               	goto	u10900
 17673  2EB7                     u10901:
 17674  2EB7  2EC4               	goto	l8738
 17675  2EB8                     u10900:
 17676                           	
 17677  2EB8                     l37647:	
 17678  2EB8  0862               	movf	(_auto_mode),w
 17679  2EB9  3A03               	xorlw	03h&0ffh
 17680  2EBA  1903               	skipnz
 17681  2EBB  2EBD               	goto	u10911
 17682  2EBC  2EBE               	goto	u10910
 17683  2EBD                     u10911:
 17684  2EBD  2EC4               	goto	l8738
 17685  2EBE                     u10910:
 17686                           	
 17687  2EBE                     l37649:	
 17688  2EBE  0862               	movf	(_auto_mode),w
 17689  2EBF  3A04               	xorlw	04h&0ffh
 17690  2EC0  1D03               	skipz
 17691  2EC1  2EC3               	goto	u10921
 17692  2EC2  2EC4               	goto	u10920
 17693  2EC3                     u10921:
 17694  2EC3  2EC6               	goto	l37651
 17695  2EC4                     u10920:
 17696                           	
 17697  2EC4                     l8738:	
 17698                           	line	432
 17699                           ;userinterface.c: 432: full_wash = 1;
 17700  2EC4  14F1               	bsf	(_full_wash/8),(_full_wash)&7
 17701  2EC5  2EC6               	goto	l37651
 17702                           	line	433
 17703                           	
 17704  2EC6                     l8736:	
 17705                           	line	435
 17706                           	
 17707  2EC6                     l37651:	
 17708                           ;userinterface.c: 433: }
 17709                           ;userinterface.c: 435: if (state != 2) {
 17710  2EC6  0866               	movf	(_state),w
 17711  2EC7  3A02               	xorlw	02h&0ffh
 17712  2EC8  1903               	skipnz
 17713  2EC9  2ECB               	goto	u10931
 17714  2ECA  2ECC               	goto	u10930
 17715  2ECB                     u10931:
 17716  2ECB  2ED0               	goto	l37655
 17717  2ECC                     u10930:
 17718                           	line	437
 17719                           	
 17720  2ECC                     l37653:	
 17721                           ;userinterface.c: 437: state = 0;
 17722  2ECC  01E6               	clrf	(_state)
 17723                           	line	438
 17724                           ;userinterface.c: 438: interval = 0;
 17725  2ECD  0021               	movlb 1	; select bank1
 17726  2ECE  01D8               	clrf	(_interval)^080h
 17727  2ECF  2ED0               	goto	l37655
 17728                           	line	439
 17729                           	
 17730  2ED0                     l8739:	
 17731                           	line	441
 17732                           	
 17733  2ED0                     l37655:	
 17734                           ;userinterface.c: 439: }
 17735                           ;userinterface.c: 441: update_autotimer(auto_mode);
 17736  2ED0  0020               	movlb 0	; select bank0
 17737  2ED1  0862               	movf	(_auto_mode),w
 17738  2ED2  31A6  26BD  31AE   	fcall	_update_autotimer
 17739                           	line	442
 17740                           	
 17741  2ED5                     l37657:	
 17742                           ;userinterface.c: 442: timeoutnow(&cattimer);
 17743  2ED5  3046               	movlw	(_cattimer&0ffh)
 17744  2ED6  0020               	movlb 0	; select bank0
 17745  2ED7  00A5               	movwf	(?_timeoutnow)
 17746  2ED8  3001               	movlw	0x2/2
 17747  2ED9  00A6               	movwf	(?_timeoutnow+1)
 17748  2EDA  31A9  217E  31AE   	fcall	_timeoutnow
 17749                           	line	443
 17750                           	
 17751  2EDD                     l37659:	
 17752                           ;userinterface.c: 443: cat_detected = 0;
 17753  2EDD  1070               	bcf	(_cat_detected/8),(_cat_detected)&7
 17754                           	line	446
 17755                           	
 17756  2EDE                     l37661:	
 17757                           ;userinterface.c: 446: eeprom_write((1), auto_mode);
 17758  2EDE  0020               	movlb 0	; select bank0
 17759  2EDF  0862               	movf	(_auto_mode),w
 17760  2EE0  00C7               	movwf	(??_set_mode+0)+0
 17761  2EE1  0847               	movf	(??_set_mode+0)+0,w
 17762  2EE2  00A1               	movwf	(?_eeprom_write)
 17763  2EE3  3001               	movlw	(01h)
 17764  2EE4  31AB  23F5  31AE   	fcall	_eeprom_write
 17765                           	line	447
 17766                           	
 17767  2EE7                     l8740:	
 17768  2EE7  0008               	return
 17769                           	opt stack 0
 17770                           GLOBAL	__end_of_set_mode
 17771  2EE8                     	__end_of_set_mode:
 17772 ;; =============== function _set_mode ends ============
 17773                           
 17774                           	signat	_set_mode,4216
 17775                           	global	_litterlanguage_start
 17776                           psect	text3335,local,class=CODE,delta=2
 17777                           global __ptext3335
 17778  2D17                     __ptext3335:
 17779                           
 17780 ;; *************** function _litterlanguage_start *****************
 17781 ;; Defined at:
 17782 ;;		line 235 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;  wet             1    wreg     unsigned char 
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;  wet             1   48[BANK0 ] unsigned char 
 17787 ;; Return value:  Size  Location     Type
 17788 ;;		None               void
 17789 ;; Registers used:
 17790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17791 ;; Tracked objects:
 17792 ;;		On entry : 0/0
 17793 ;;		On exit  : 0/0
 17794 ;;		Unchanged: 0/0
 17795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17797 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17799 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17800 ;;Total ram usage:        3 bytes
 17801 ;; Hardware stack levels used:    1
 17802 ;; Hardware stack levels required when called:    5
 17803 ;; This function calls:
 17804 ;;		_printtime
 17805 ;;		_printf
 17806 ;; This function is called by:
 17807 ;;		_userinterface_work
 17808 ;;		_start_short
 17809 ;;		_start_long
 17810 ;; This function uses a non-reentrant model
 17811 ;;
 17812                           psect	text3335
 17813                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17814                           	line	235
 17815                           	global	__size_of_litterlanguage_start
 17816  0040                     	__size_of_litterlanguage_start	equ	__end_of_litterlanguage_start-_litterlanguage_start
 17817                           	
 17818  2D17                     _litterlanguage_start:	
 17819                           	opt	stack 8
 17820                           ; Regs used in _litterlanguage_start: [wreg-status,0+pclath+cstack]
 17821                           ;litterlanguage_start@wet stored from wreg
 17822                           	line	237
 17823  2D17  0020               	movlb 0	; select bank0
 17824  2D18  00D1               	movwf	(litterlanguage_start@wet)
 17825                           	
 17826  2D19                     l37615:	
 17827                           ;litterlanguage.c: 236: extern const struct instruction washprogram[];
 17828                           ;litterlanguage.c: 237: if (ins_state == 0) {
 17829  2D19  08E5               	movf	(_ins_state),f
 17830  2D1A  1D03               	skipz
 17831  2D1B  2D1D               	goto	u10851
 17832  2D1C  2D1E               	goto	u10850
 17833  2D1D                     u10851:
 17834  2D1D  2D56               	goto	l4281
 17835  2D1E                     u10850:
 17836                           	line	238
 17837                           	
 17838  2D1E                     l37617:	
 17839                           ;litterlanguage.c: 238: printtime();
 17840  2D1E  31AB  233D  31AD   	fcall	_printtime
 17841                           	line	239
 17842                           	
 17843  2D21                     l37619:	
 17844                           ;litterlanguage.c: 239: printf("Starting %s program\n", wet?"wet":"dry");
 17845  2D21  0020               	movlb 0	; select bank0
 17846  2D22  08D1               	movf	(litterlanguage_start@wet),f
 17847  2D23  1D03               	skipz
 17848  2D24  2D26               	goto	u10861
 17849  2D25  2D27               	goto	u10860
 17850  2D26                     u10861:
 17851  2D26  2D2C               	goto	l37623
 17852  2D27                     u10860:
 17853                           	
 17854  2D27                     l37621:	
 17855  2D27  3038               	movlw	low(STR_26|8000h)
 17856  2D28  00CF               	movwf	(_litterlanguage_start$5891)
 17857  2D29  3089               	movlw	high(STR_26|8000h)
 17858  2D2A  00D0               	movwf	((_litterlanguage_start$5891))+1
 17859  2D2B  2D31               	goto	l37625
 17860                           	
 17861  2D2C                     l4275:	
 17862                           	
 17863  2D2C                     l37623:	
 17864  2D2C  3030               	movlw	low(STR_25|8000h)
 17865  2D2D  00CF               	movwf	(_litterlanguage_start$5891)
 17866  2D2E  3089               	movlw	high(STR_25|8000h)
 17867  2D2F  00D0               	movwf	((_litterlanguage_start$5891))+1
 17868  2D30  2D31               	goto	l37625
 17869                           	
 17870  2D31                     l4277:	
 17871                           	
 17872  2D31                     l37625:	
 17873  2D31  3078               	movlw	low(STR_24|8000h)
 17874  2D32  00AF               	movwf	(?_printf)
 17875  2D33  3085               	movlw	high(STR_24|8000h)
 17876  2D34  00B0               	movwf	((?_printf))+1
 17877  2D35  0850               	movf	(_litterlanguage_start$5891+1),w
 17878  2D36  01B2               	clrf	(1+?_printf+02h)
 17879  2D37  07B2               	addwf	(1+?_printf+02h)
 17880  2D38  084F               	movf	(_litterlanguage_start$5891),w
 17881  2D39  01B1               	clrf	(0+?_printf+02h)
 17882  2D3A  07B1               	addwf	(0+?_printf+02h)
 17883                           
 17884  2D3B  3194  24A0  31AD   	fcall	_printf
 17885                           	line	240
 17886                           ;litterlanguage.c: 240: switch (prg_source) {
 17887  2D3E  2D46               	goto	l37631
 17888                           	line	241
 17889                           ;litterlanguage.c: 241: case 0:
 17890                           	
 17891  2D3F                     l4279:	
 17892                           	line	242
 17893                           	
 17894  2D3F                     l37627:	
 17895                           ;litterlanguage.c: 242: ins_pointer = &washprogram[0];
 17896  2D3F  3013               	movlw	low(_washprogram|8000h)
 17897  2D40  0020               	movlb 0	; select bank0
 17898  2D41  00EB               	movwf	(_ins_pointer)
 17899  2D42  3082               	movlw	high(_washprogram|8000h)
 17900  2D43  00EC               	movwf	((_ins_pointer))+1
 17901                           	line	243
 17902                           ;litterlanguage.c: 243: break;
 17903  2D44  2D4C               	goto	l4280
 17904                           	line	244
 17905                           	
 17906  2D45                     l37629:	
 17907                           ;litterlanguage.c: 244: }
 17908  2D45  2D4C               	goto	l4280
 17909                           	line	240
 17910                           	
 17911  2D46                     l4278:	
 17912                           	
 17913  2D46                     l37631:	
 17914  2D46  0021               	movlb 1	; select bank1
 17915  2D47  085A               	movf	(_prg_source)^080h,w
 17916                           	; Switch size 1, requested type "space"
 17917                           ; Number of cases is 1, Range of values is 0 to 0
 17918                           ; switch strategies available:
 17919                           ; Name         Instructions Cycles
 17920                           ; simple_byte            4     3 (average)
 17921                           ; direct_byte            8     6 (fixed)
 17922                           ; jumptable            260     6 (fixed)
 17923                           ; rangetable             5     4 (fixed)
 17924                           ; spacedrange            7     6 (fixed)
 17925                           ; locatedrange           1     3 (fixed)
 17926                           ;	Chosen strategy is simple_byte
 17927                           
 17928                           	opt asmopt_off
 17929  2D48  3A00               	xorlw	0^0	; case 0
 17930  2D49  1903               	skipnz
 17931  2D4A  2D3F               	goto	l37627
 17932  2D4B  2D4C               	goto	l4280
 17933                           	opt asmopt_on
 17934                           
 17935                           	line	244
 17936                           	
 17937  2D4C                     l4280:	
 17938                           	line	245
 17939                           ;litterlanguage.c: 245: wet_program = wet;
 17940  2D4C  0020               	movlb 0	; select bank0
 17941  2D4D  12ED               	bcf	(_wet_program/8),(_wet_program)&7
 17942  2D4E  1C51               	btfss	(litterlanguage_start@wet),0
 17943  2D4F  2D51               	goto	u10875
 17944  2D50  16ED               	bsf	(_wet_program/8),(_wet_program)&7
 17945  2D51                     u10875:
 17946                           
 17947                           	line	246
 17948                           	
 17949  2D51                     l37633:	
 17950                           ;litterlanguage.c: 246: ins_state = 1 ;
 17951  2D51  0020               	movlb 0	; select bank0
 17952  2D52  01E5               	clrf	(_ins_state)
 17953  2D53  1403               	bsf	status,0
 17954  2D54  0DE5               	rlf	(_ins_state),f
 17955  2D55  2D56               	goto	l4281
 17956                           	line	247
 17957                           	
 17958  2D56                     l4273:	
 17959                           	line	248
 17960                           	
 17961  2D56                     l4281:	
 17962  2D56  0008               	return
 17963                           	opt stack 0
 17964                           GLOBAL	__end_of_litterlanguage_start
 17965  2D57                     	__end_of_litterlanguage_start:
 17966 ;; =============== function _litterlanguage_start ends ============
 17967                           
 17968                           	signat	_litterlanguage_start,4216
 17969                           	global	_litterlanguage_cleanup
 17970                           psect	text3336,local,class=CODE,delta=2
 17971                           global __ptext3336
 17972  2C64                     __ptext3336:
 17973                           
 17974 ;; *************** function _litterlanguage_cleanup *****************
 17975 ;; Defined at:
 17976 ;;		line 447 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;  wet             1    wreg     unsigned char 
 17979 ;; Auto vars:     Size  Location     Type
 17980 ;;  wet             1   48[BANK0 ] unsigned char 
 17981 ;; Return value:  Size  Location     Type
 17982 ;;		None               void
 17983 ;; Registers used:
 17984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17985 ;; Tracked objects:
 17986 ;;		On entry : 0/0
 17987 ;;		On exit  : 0/0
 17988 ;;		Unchanged: 0/0
 17989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 17993 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17994 ;;Total ram usage:        3 bytes
 17995 ;; Hardware stack levels used:    1
 17996 ;; Hardware stack levels required when called:    5
 17997 ;; This function calls:
 17998 ;;		_printtime
 17999 ;;		_printf
 18000 ;; This function is called by:
 18001 ;;		_litterlanguage_init
 18002 ;; This function uses a non-reentrant model
 18003 ;;
 18004                           psect	text3336
 18005                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 18006                           	line	447
 18007                           	global	__size_of_litterlanguage_cleanup
 18008  0038                     	__size_of_litterlanguage_cleanup	equ	__end_of_litterlanguage_cleanup-_litterlanguage_cl
                                 eanup
 18009                           	
 18010  2C64                     _litterlanguage_cleanup:	
 18011                           	opt	stack 9
 18012                           ; Regs used in _litterlanguage_cleanup: [wreg-status,0+pclath+cstack]
 18013                           ;litterlanguage_cleanup@wet stored from wreg
 18014                           	line	449
 18015  2C64  0020               	movlb 0	; select bank0
 18016  2C65  00D1               	movwf	(litterlanguage_cleanup@wet)
 18017                           	
 18018  2C66                     l37595:	
 18019                           ;litterlanguage.c: 448: extern const struct instruction cleanupprogram[];
 18020                           ;litterlanguage.c: 449: if (ins_state == 0) {
 18021  2C66  08E5               	movf	(_ins_state),f
 18022  2C67  1D03               	skipz
 18023  2C68  2C6A               	goto	u10821
 18024  2C69  2C6B               	goto	u10820
 18025  2C6A                     u10821:
 18026  2C6A  2C9B               	goto	l4338
 18027  2C6B                     u10820:
 18028                           	line	450
 18029                           	
 18030  2C6B                     l37597:	
 18031                           ;litterlanguage.c: 450: printtime();
 18032  2C6B  31AB  233D  31AC   	fcall	_printtime
 18033                           	line	451
 18034                           	
 18035  2C6E                     l37599:	
 18036                           ;litterlanguage.c: 451: printf("Starting %s cleanup\n", wet?"wet":"dry");
 18037  2C6E  0020               	movlb 0	; select bank0
 18038  2C6F  08D1               	movf	(litterlanguage_cleanup@wet),f
 18039  2C70  1D03               	skipz
 18040  2C71  2C73               	goto	u10831
 18041  2C72  2C74               	goto	u10830
 18042  2C73                     u10831:
 18043  2C73  2C79               	goto	l37603
 18044  2C74                     u10830:
 18045                           	
 18046  2C74                     l37601:	
 18047  2C74  3038               	movlw	low(STR_38|8000h)
 18048  2C75  00CF               	movwf	(_litterlanguage_cleanup$5944)
 18049  2C76  3089               	movlw	high(STR_38|8000h)
 18050  2C77  00D0               	movwf	((_litterlanguage_cleanup$5944))+1
 18051  2C78  2C7E               	goto	l37605
 18052                           	
 18053  2C79                     l4335:	
 18054                           	
 18055  2C79                     l37603:	
 18056  2C79  3030               	movlw	low(STR_37|8000h)
 18057  2C7A  00CF               	movwf	(_litterlanguage_cleanup$5944)
 18058  2C7B  3089               	movlw	high(STR_37|8000h)
 18059  2C7C  00D0               	movwf	((_litterlanguage_cleanup$5944))+1
 18060  2C7D  2C7E               	goto	l37605
 18061                           	
 18062  2C7E                     l4337:	
 18063                           	
 18064  2C7E                     l37605:	
 18065  2C7E  308D               	movlw	low(STR_36|8000h)
 18066  2C7F  00AF               	movwf	(?_printf)
 18067  2C80  3085               	movlw	high(STR_36|8000h)
 18068  2C81  00B0               	movwf	((?_printf))+1
 18069  2C82  0850               	movf	(_litterlanguage_cleanup$5944+1),w
 18070  2C83  01B2               	clrf	(1+?_printf+02h)
 18071  2C84  07B2               	addwf	(1+?_printf+02h)
 18072  2C85  084F               	movf	(_litterlanguage_cleanup$5944),w
 18073  2C86  01B1               	clrf	(0+?_printf+02h)
 18074  2C87  07B1               	addwf	(0+?_printf+02h)
 18075                           
 18076  2C88  3194  24A0  31AC   	fcall	_printf
 18077                           	line	452
 18078                           	
 18079  2C8B                     l37607:	
 18080                           ;litterlanguage.c: 452: prg_source = 0;
 18081  2C8B  0021               	movlb 1	; select bank1
 18082  2C8C  01DA               	clrf	(_prg_source)^080h
 18083                           	line	453
 18084                           	
 18085  2C8D                     l37609:	
 18086                           ;litterlanguage.c: 453: ins_pointer = &cleanupprogram[0];
 18087  2C8D  30EC               	movlw	low(_cleanupprogram|8000h)
 18088  2C8E  0020               	movlb 0	; select bank0
 18089  2C8F  00EB               	movwf	(_ins_pointer)
 18090  2C90  3084               	movlw	high(_cleanupprogram|8000h)
 18091  2C91  00EC               	movwf	((_ins_pointer))+1
 18092                           	line	454
 18093                           	
 18094  2C92                     l37611:	
 18095                           ;litterlanguage.c: 454: wet_program = wet;
 18096  2C92  12ED               	bcf	(_wet_program/8),(_wet_program)&7
 18097  2C93  1C51               	btfss	(litterlanguage_cleanup@wet),0
 18098  2C94  2C96               	goto	u10845
 18099  2C95  16ED               	bsf	(_wet_program/8),(_wet_program)&7
 18100  2C96                     u10845:
 18101                           
 18102                           	line	455
 18103                           	
 18104  2C96                     l37613:	
 18105                           ;litterlanguage.c: 455: ins_state = 1 ;
 18106  2C96  0020               	movlb 0	; select bank0
 18107  2C97  01E5               	clrf	(_ins_state)
 18108  2C98  1403               	bsf	status,0
 18109  2C99  0DE5               	rlf	(_ins_state),f
 18110  2C9A  2C9B               	goto	l4338
 18111                           	line	456
 18112                           	
 18113  2C9B                     l4333:	
 18114                           	line	457
 18115                           	
 18116  2C9B                     l4338:	
 18117  2C9B  0008               	return
 18118                           	opt stack 0
 18119                           GLOBAL	__end_of_litterlanguage_cleanup
 18120  2C9C                     	__end_of_litterlanguage_cleanup:
 18121 ;; =============== function _litterlanguage_cleanup ends ============
 18122                           
 18123                           	signat	_litterlanguage_cleanup,4216
 18124                           	global	_help
 18125                           	global	_echo
 18126                           psect	text3337,local,class=CODE,delta=2
 18127                           global __ptext3337
 18128  243A                     __ptext3337:
 18129                           
 18130 ;; *************** function _echo *****************
 18131 ;; Defined at:
 18132 ;;		line 203 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;  argc            2   38[BANK0 ] int 
 18135 ;;  argv            1   40[BANK0 ] PTR PTR unsigned char 
 18136 ;;		 -> proc_line@argv(4), 
 18137 ;; Auto vars:     Size  Location     Type
 18138 ;;		None
 18139 ;; Return value:  Size  Location     Type
 18140 ;;                  2   38[BANK0 ] int 
 18141 ;; Registers used:
 18142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 18143 ;; Tracked objects:
 18144 ;;		On entry : 0/0
 18145 ;;		On exit  : 0/0
 18146 ;;		Unchanged: 0/0
 18147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18148 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 18149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18151 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 18152 ;;Total ram usage:        5 bytes
 18153 ;; Hardware stack levels used:    1
 18154 ;; Hardware stack levels required when called:    4
 18155 ;; This function calls:
 18156 ;;		_strncmp
 18157 ;;		_printf
 18158 ;; This function is called by:
 18159 ;;		_proc_line
 18160 ;; This function uses a non-reentrant model
 18161 ;;
 18162                           psect	text3337
 18163                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 18164                           	line	203
 18165                           	global	__size_of_echo
 18166  007A                     	__size_of_echo	equ	__end_of_echo-_echo
 18167                           	
 18168  243A                     _echo:	
 18169                           	opt	stack 8
 18170                           ; Regs used in _echo: [allreg]
 18171                           	line	204
 18172                           	
 18173  243A                     l37541:	
 18174                           ;cmdline.c: 204: if (argc > 2)
 18175  243A  0020               	movlb 0	; select bank0
 18176  243B  0848               	movf	(echo@argc+1),w
 18177  243C  3A80               	xorlw	80h
 18178  243D  00FF               	movwf	btemp+1
 18179  243E  3080               	movlw	(high(03h))^80h
 18180  243F  027F               	subwf	btemp+1,w
 18181  2440  1D03               	skipz
 18182  2441  2C44               	goto	u10755
 18183  2442  3003               	movlw	low(03h)
 18184  2443  0247               	subwf	(echo@argc),w
 18185  2444                     u10755:
 18186                           
 18187  2444  1C03               	skipc
 18188  2445  2C47               	goto	u10751
 18189  2446  2C48               	goto	u10750
 18190  2447                     u10751:
 18191  2447  2C4F               	goto	l37547
 18192  2448                     u10750:
 18193                           	line	205
 18194                           	
 18195  2448                     l37543:	
 18196                           ;cmdline.c: 205: return (-1);
 18197  2448  30FF               	movlw	low(-1)
 18198  2449  0020               	movlb 0	; select bank0
 18199  244A  00C7               	movwf	(?_echo)
 18200  244B  30FF               	movlw	high(-1)
 18201  244C  00C8               	movwf	((?_echo))+1
 18202  244D  2CB3               	goto	l15182
 18203                           	
 18204  244E                     l37545:	
 18205  244E  2CB3               	goto	l15182
 18206                           	
 18207  244F                     l15181:	
 18208                           	line	207
 18209                           	
 18210  244F                     l37547:	
 18211                           ;cmdline.c: 207: if (argc == 2) {
 18212  244F  3002               	movlw	02h
 18213  2450  0020               	movlb 0	; select bank0
 18214  2451  0647               	xorwf	(echo@argc),w
 18215  2452  0448               	iorwf	(echo@argc+1),w
 18216  2453  1D03               	skipz
 18217  2454  2C56               	goto	u10761
 18218  2455  2C57               	goto	u10760
 18219  2456                     u10761:
 18220  2456  2C93               	goto	l37561
 18221  2457                     u10760:
 18222                           	line	208
 18223                           	
 18224  2457                     l37549:	
 18225                           ;cmdline.c: 208: if (!strncmp (argv[1], "on", (20)))
 18226  2457  3042               	movlw	low(STR_106|8000h)
 18227  2458  00A5               	movwf	(?_strncmp)
 18228  2459  3089               	movlw	high(STR_106|8000h)
 18229  245A  00A6               	movwf	((?_strncmp))+1
 18230  245B  3014               	movlw	low(014h)
 18231  245C  00A7               	movwf	0+(?_strncmp)+02h
 18232  245D  3000               	movlw	high(014h)
 18233  245E  00A8               	movwf	(0+(?_strncmp)+02h)+1
 18234  245F  0849               	movf	(echo@argv),w
 18235  2460  3E01               	addlw	01h
 18236  2461  0086               	movwf	fsr1l
 18237  2462  0187               	clrf fsr1h	
 18238                           	
 18239  2463  0801               	movf	indf1,w
 18240  2464  31AE  263B  31A4   	fcall	_strncmp
 18241  2467  0020               	movlb 0	; select bank0
 18242  2468  0826               	movf	((1+(?_strncmp))),w
 18243  2469  0425               	iorwf	((0+(?_strncmp))),w
 18244  246A  1D03               	skipz
 18245  246B  2C6D               	goto	u10771
 18246  246C  2C6E               	goto	u10770
 18247  246D                     u10771:
 18248  246D  2C72               	goto	l37553
 18249  246E                     u10770:
 18250                           	line	209
 18251                           	
 18252  246E                     l37551:	
 18253                           ;cmdline.c: 209: localecho = 1;
 18254  246E  01EF               	clrf	(_localecho)
 18255  246F  1403               	bsf	status,0
 18256  2470  0DEF               	rlf	(_localecho),f
 18257  2471  2C93               	goto	l37561
 18258                           	line	210
 18259                           	
 18260  2472                     l15184:	
 18261                           	
 18262  2472                     l37553:	
 18263                           ;cmdline.c: 210: else if (!strncmp (argv[1], "off", (20)))
 18264  2472  302C               	movlw	low(STR_107|8000h)
 18265  2473  00A5               	movwf	(?_strncmp)
 18266  2474  3089               	movlw	high(STR_107|8000h)
 18267  2475  00A6               	movwf	((?_strncmp))+1
 18268  2476  3014               	movlw	low(014h)
 18269  2477  00A7               	movwf	0+(?_strncmp)+02h
 18270  2478  3000               	movlw	high(014h)
 18271  2479  00A8               	movwf	(0+(?_strncmp)+02h)+1
 18272  247A  0849               	movf	(echo@argv),w
 18273  247B  3E01               	addlw	01h
 18274  247C  0086               	movwf	fsr1l
 18275  247D  0187               	clrf fsr1h	
 18276                           	
 18277  247E  0801               	movf	indf1,w
 18278  247F  31AE  263B  31A4   	fcall	_strncmp
 18279  2482  0020               	movlb 0	; select bank0
 18280  2483  0826               	movf	((1+(?_strncmp))),w
 18281  2484  0425               	iorwf	((0+(?_strncmp))),w
 18282  2485  1D03               	skipz
 18283  2486  2C88               	goto	u10781
 18284  2487  2C89               	goto	u10780
 18285  2488                     u10781:
 18286  2488  2C8B               	goto	l37557
 18287  2489                     u10780:
 18288                           	line	211
 18289                           	
 18290  2489                     l37555:	
 18291                           ;cmdline.c: 211: localecho = 0;
 18292  2489  01EF               	clrf	(_localecho)
 18293  248A  2C93               	goto	l37561
 18294                           	line	212
 18295                           	
 18296  248B                     l15186:	
 18297                           	line	213
 18298                           	
 18299  248B                     l37557:	
 18300                           ;cmdline.c: 212: else
 18301                           ;cmdline.c: 213: return (-1);
 18302  248B  30FF               	movlw	low(-1)
 18303  248C  00C7               	movwf	(?_echo)
 18304  248D  30FF               	movlw	high(-1)
 18305  248E  00C8               	movwf	((?_echo))+1
 18306  248F  2CB3               	goto	l15182
 18307                           	
 18308  2490                     l37559:	
 18309  2490  2CB3               	goto	l15182
 18310                           	
 18311  2491                     l15187:	
 18312  2491  2C93               	goto	l37561
 18313                           	
 18314  2492                     l15185:	
 18315  2492  2C93               	goto	l37561
 18316                           	line	214
 18317                           	
 18318  2493                     l15183:	
 18319                           	line	215
 18320                           	
 18321  2493                     l37561:	
 18322                           ;cmdline.c: 214: }
 18323                           ;cmdline.c: 215: printf("Echo: %s\n", localecho?"on":"off");
 18324  2493  08EF               	movf	(_localecho),f
 18325  2494  1D03               	skipz
 18326  2495  2C97               	goto	u10791
 18327  2496  2C98               	goto	u10790
 18328  2497                     u10791:
 18329  2497  2C9D               	goto	l37565
 18330  2498                     u10790:
 18331                           	
 18332  2498                     l37563:	
 18333  2498  302C               	movlw	low(STR_110|8000h)
 18334  2499  00CA               	movwf	(_echo$17766)
 18335  249A  3089               	movlw	high(STR_110|8000h)
 18336  249B  00CB               	movwf	((_echo$17766))+1
 18337  249C  2CA2               	goto	l37567
 18338                           	
 18339  249D                     l15189:	
 18340                           	
 18341  249D                     l37565:	
 18342  249D  3042               	movlw	low(STR_109|8000h)
 18343  249E  00CA               	movwf	(_echo$17766)
 18344  249F  3089               	movlw	high(STR_109|8000h)
 18345  24A0  00CB               	movwf	((_echo$17766))+1
 18346  24A1  2CA2               	goto	l37567
 18347                           	
 18348  24A2                     l15191:	
 18349                           	
 18350  24A2                     l37567:	
 18351  24A2  306C               	movlw	low(STR_108|8000h)
 18352  24A3  00AF               	movwf	(?_printf)
 18353  24A4  3088               	movlw	high(STR_108|8000h)
 18354  24A5  00B0               	movwf	((?_printf))+1
 18355  24A6  084B               	movf	(_echo$17766+1),w
 18356  24A7  01B2               	clrf	(1+?_printf+02h)
 18357  24A8  07B2               	addwf	(1+?_printf+02h)
 18358  24A9  084A               	movf	(_echo$17766),w
 18359  24AA  01B1               	clrf	(0+?_printf+02h)
 18360  24AB  07B1               	addwf	(0+?_printf+02h)
 18361                           
 18362  24AC  3194  24A0  31A4   	fcall	_printf
 18363                           	line	217
 18364                           	
 18365  24AF                     l37569:	
 18366                           ;cmdline.c: 217: return (0);
 18367  24AF  0020               	movlb 0	; select bank0
 18368  24B0  01C7               	clrf	(?_echo)
 18369  24B1  01C8               	clrf	(?_echo+1)
 18370  24B2  2CB3               	goto	l15182
 18371                           	
 18372  24B3                     l37571:	
 18373                           	line	218
 18374                           	
 18375  24B3                     l15182:	
 18376  24B3  0008               	return
 18377                           	opt stack 0
 18378                           GLOBAL	__end_of_echo
 18379  24B4                     	__end_of_echo:
 18380 ;; =============== function _echo ends ============
 18381                           
 18382                           	signat	_echo,8314
 18383                           psect	text3338,local,class=CODE,delta=2
 18384                           global __ptext3338
 18385  2FA1                     __ptext3338:
 18386                           
 18387 ;; *************** function _help *****************
 18388 ;; Defined at:
 18389 ;;		line 222 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;  argc            2   38[BANK0 ] int 
 18392 ;;  argv            1   40[BANK0 ] PTR PTR unsigned char 
 18393 ;;		 -> proc_line@argv(4), 
 18394 ;; Auto vars:     Size  Location     Type
 18395 ;;  index           2   44[BANK0 ] int 
 18396 ;; Return value:  Size  Location     Type
 18397 ;;                  2   38[BANK0 ] int 
 18398 ;; Registers used:
 18399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 18400 ;; Tracked objects:
 18401 ;;		On entry : 0/0
 18402 ;;		On exit  : 0/0
 18403 ;;		Unchanged: 0/0
 18404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18405 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 18406 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18408 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 18409 ;;Total ram usage:        8 bytes
 18410 ;; Hardware stack levels used:    1
 18411 ;; Hardware stack levels required when called:    4
 18412 ;; This function calls:
 18413 ;;		_printf
 18414 ;;		___bmul
 18415 ;; This function is called by:
 18416 ;;		_proc_line
 18417 ;; This function uses a non-reentrant model
 18418 ;;
 18419                           psect	text3338
 18420                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 18421                           	line	222
 18422                           	global	__size_of_help
 18423  005F                     	__size_of_help	equ	__end_of_help-_help
 18424                           	
 18425  2FA1                     _help:	
 18426                           	opt	stack 8
 18427                           ; Regs used in _help: [allreg]
 18428                           	line	223
 18429                           	
 18430  2FA1                     l37573:	
 18431                           ;cmdline.c: 223: int index = 0;
 18432  2FA1  0020               	movlb 0	; select bank0
 18433  2FA2  01CD               	clrf	(help@index)
 18434  2FA3  01CE               	clrf	(help@index+1)
 18435                           	line	225
 18436                           	
 18437  2FA4                     l37575:	
 18438                           ;cmdline.c: 225: if (argc > 1)
 18439  2FA4  0848               	movf	(help@argc+1),w
 18440  2FA5  3A80               	xorlw	80h
 18441  2FA6  00FF               	movwf	btemp+1
 18442  2FA7  3080               	movlw	(high(02h))^80h
 18443  2FA8  027F               	subwf	btemp+1,w
 18444  2FA9  1D03               	skipz
 18445  2FAA  2FAD               	goto	u10805
 18446  2FAB  3002               	movlw	low(02h)
 18447  2FAC  0247               	subwf	(help@argc),w
 18448  2FAD                     u10805:
 18449                           
 18450  2FAD  1C03               	skipc
 18451  2FAE  2FB0               	goto	u10801
 18452  2FAF  2FB1               	goto	u10800
 18453  2FB0                     u10801:
 18454  2FB0  2FB8               	goto	l37581
 18455  2FB1                     u10800:
 18456                           	line	226
 18457                           	
 18458  2FB1                     l37577:	
 18459                           ;cmdline.c: 226: return (-1);
 18460  2FB1  30FF               	movlw	low(-1)
 18461  2FB2  0020               	movlb 0	; select bank0
 18462  2FB3  00C7               	movwf	(?_echo)
 18463  2FB4  30FF               	movlw	high(-1)
 18464  2FB5  00C8               	movwf	((?_echo))+1
 18465  2FB6  2FFF               	goto	l15195
 18466                           	
 18467  2FB7                     l37579:	
 18468  2FB7  2FFF               	goto	l15195
 18469                           	
 18470  2FB8                     l15194:	
 18471                           	line	228
 18472                           	
 18473  2FB8                     l37581:	
 18474                           ;cmdline.c: 228: printf("Known commands:\n");
 18475  2FB8  30E3               	movlw	low(STR_111|8000h)
 18476  2FB9  0020               	movlb 0	; select bank0
 18477  2FBA  00AF               	movwf	(?_printf)
 18478  2FBB  3086               	movlw	high(STR_111|8000h)
 18479  2FBC  00B0               	movwf	((?_printf))+1
 18480  2FBD  3194  24A0  31AF   	fcall	_printf
 18481                           	line	229
 18482                           ;cmdline.c: 229: while (commands[index].function) {
 18483  2FC0  2FE4               	goto	l37589
 18484                           	
 18485  2FC1                     l15197:	
 18486                           	line	230
 18487                           	
 18488  2FC1                     l37583:	
 18489                           ;cmdline.c: 230: printf("%s\n", (char*)commands[index].cmd);
 18490  2FC1  3009               	movlw	(09h)
 18491  2FC2  0020               	movlb 0	; select bank0
 18492  2FC3  00CA               	movwf	(??_help+0)+0
 18493  2FC4  084A               	movf	(??_help+0)+0,w
 18494  2FC5  00A1               	movwf	(?___bmul)
 18495  2FC6  084D               	movf	(help@index),w
 18496  2FC7  31A9  2112  31AF   	fcall	___bmul
 18497  2FCA  3E10               	addlw	low(_commands|8000h)
 18498  2FCB  0020               	movlb 0	; select bank0
 18499  2FCC  00CB               	movwf	(_help$30527)
 18500  2FCD  3085               	movlw	high(_commands|8000h)
 18501  2FCE  1803               	skipnc
 18502  2FCF  0A89               	incf	wreg,f
 18503  2FD0  00CC               	movwf	1+(_help$30527)
 18504                           	
 18505  2FD1                     l37585:	
 18506                           ;cmdline.c: 230: printf("%s\n", (char*)commands[index].cmd);
 18507  2FD1  3072               	movlw	low(STR_112|8000h)
 18508  2FD2  00AF               	movwf	(?_printf)
 18509  2FD3  3088               	movlw	high(STR_112|8000h)
 18510  2FD4  00B0               	movwf	((?_printf))+1
 18511  2FD5  084C               	movf	(_help$30527+1),w
 18512  2FD6  01B2               	clrf	(1+?_printf+02h)
 18513  2FD7  07B2               	addwf	(1+?_printf+02h)
 18514  2FD8  084B               	movf	(_help$30527),w
 18515  2FD9  01B1               	clrf	(0+?_printf+02h)
 18516  2FDA  07B1               	addwf	(0+?_printf+02h)
 18517                           
 18518  2FDB  3194  24A0  31AF   	fcall	_printf
 18519                           	line	231
 18520                           	
 18521  2FDE                     l37587:	
 18522                           ;cmdline.c: 231: index++;
 18523  2FDE  3001               	movlw	low(01h)
 18524  2FDF  0020               	movlb 0	; select bank0
 18525  2FE0  07CD               	addwf	(help@index),f
 18526  2FE1  3000               	movlw	high(01h)
 18527  2FE2  3DCE               	addwfc	(help@index+1),f
 18528  2FE3  2FE4               	goto	l37589
 18529                           	line	232
 18530                           	
 18531  2FE4                     l15196:	
 18532                           	line	229
 18533                           	
 18534  2FE4                     l37589:	
 18535  2FE4  3009               	movlw	(09h)
 18536  2FE5  0020               	movlb 0	; select bank0
 18537  2FE6  00CA               	movwf	(??_help+0)+0
 18538  2FE7  084A               	movf	(??_help+0)+0,w
 18539  2FE8  00A1               	movwf	(?___bmul)
 18540  2FE9  084D               	movf	(help@index),w
 18541  2FEA  31A9  2112  31AF   	fcall	___bmul
 18542  2FED  3E08               	addlw	08h
 18543  2FEE  3E10               	addlw	low(_commands|8000h)
 18544  2FEF  0084               	movwf	fsr0l
 18545  2FF0  3085               	movlw	high(_commands|8000h)
 18546  2FF1  1803               	skipnc
 18547  2FF2  3E01               	addlw	1
 18548  2FF3  0085               	movwf	fsr0h
 18549  2FF4  0800               	movf	indf0,w ;code access
 18550  2FF5  3800               	iorlw	0
 18551  2FF6  1D03               	skipz
 18552  2FF7  2FF9               	goto	u10811
 18553  2FF8  2FFA               	goto	u10810
 18554  2FF9                     u10811:
 18555  2FF9  2FC1               	goto	l37583
 18556  2FFA                     u10810:
 18557  2FFA  2FFB               	goto	l37591
 18558                           	
 18559  2FFB                     l15198:	
 18560                           	line	234
 18561                           	
 18562  2FFB                     l37591:	
 18563                           ;cmdline.c: 232: }
 18564                           ;cmdline.c: 234: return (0);
 18565  2FFB  0020               	movlb 0	; select bank0
 18566  2FFC  01C7               	clrf	(?_echo)
 18567  2FFD  01C8               	clrf	(?_echo+1)
 18568  2FFE  2FFF               	goto	l15195
 18569                           	
 18570  2FFF                     l37593:	
 18571                           	line	235
 18572                           	
 18573  2FFF                     l15195:	
 18574  2FFF  0008               	return
 18575                           	opt stack 0
 18576                           GLOBAL	__end_of_help
 18577  3000                     	__end_of_help:
 18578 ;; =============== function _help ends ============
 18579                           
 18580                           	signat	_help,8314
 18581                           	global	_set_LED_Locked
 18582                           psect	text3339,local,class=CODE,delta=2
 18583                           global __ptext3339
 18584  37BF                     __ptext3339:
 18585                           
 18586 ;; *************** function _set_LED_Locked *****************
 18587 ;; Defined at:
 18588 ;;		line 333 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;  pattern         1    wreg     unsigned char 
 18591 ;;  repeat          1   13[BANK0 ] unsigned char 
 18592 ;; Auto vars:     Size  Location     Type
 18593 ;;  pattern         1   16[BANK0 ] unsigned char 
 18594 ;; Return value:  Size  Location     Type
 18595 ;;		None               void
 18596 ;; Registers used:
 18597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18598 ;; Tracked objects:
 18599 ;;		On entry : 0/0
 18600 ;;		On exit  : 0/0
 18601 ;;		Unchanged: 0/0
 18602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18603 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18605 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18606 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18607 ;;Total ram usage:        4 bytes
 18608 ;; Hardware stack levels used:    1
 18609 ;; Hardware stack levels required when called:    4
 18610 ;; This function calls:
 18611 ;;		_set_pacer
 18612 ;; This function is called by:
 18613 ;;		_update_display
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           psect	text3339
 18617                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18618                           	line	333
 18619                           	global	__size_of_set_LED_Locked
 18620  000F                     	__size_of_set_LED_Locked	equ	__end_of_set_LED_Locked-_set_LED_Locked
 18621                           	
 18622  37BF                     _set_LED_Locked:	
 18623                           	opt	stack 9
 18624                           ; Regs used in _set_LED_Locked: [wreg+fsr1l-status,0+pclath+cstack]
 18625                           ;set_LED_Locked@pattern stored from wreg
 18626  37BF  0020               	movlb 0	; select bank0
 18627  37C0  00B1               	movwf	(set_LED_Locked@pattern)
 18628                           	line	334
 18629                           	
 18630  37C1                     l37539:	
 18631                           ;catgenie120.c: 334: set_pacer(3, pattern, repeat);
 18632  37C1  0831               	movf	(set_LED_Locked@pattern),w
 18633  37C2  00AF               	movwf	(??_set_LED_Locked+0)+0
 18634  37C3  082F               	movf	(??_set_LED_Locked+0)+0,w
 18635  37C4  00A9               	movwf	(?_set_pacer)
 18636  37C5  082E               	movf	(set_LED_Locked@repeat),w
 18637  37C6  00B0               	movwf	(??_set_LED_Locked+1)+0
 18638  37C7  0830               	movf	(??_set_LED_Locked+1)+0,w
 18639  37C8  00AA               	movwf	0+(?_set_pacer)+01h
 18640  37C9  3003               	movlw	(03h)
 18641  37CA  31A3  23C0  31B7   	fcall	_set_pacer
 18642                           	line	335
 18643                           	
 18644  37CD                     l10924:	
 18645  37CD  0008               	return
 18646                           	opt stack 0
 18647                           GLOBAL	__end_of_set_LED_Locked
 18648  37CE                     	__end_of_set_LED_Locked:
 18649 ;; =============== function _set_LED_Locked ends ============
 18650                           
 18651                           	signat	_set_LED_Locked,8312
 18652                           	global	_set_LED_Cat
 18653                           psect	text3340,local,class=CODE,delta=2
 18654                           global __ptext3340
 18655  37B0                     __ptext3340:
 18656                           
 18657 ;; *************** function _set_LED_Cat *****************
 18658 ;; Defined at:
 18659 ;;		line 345 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  pattern         1    wreg     unsigned char 
 18662 ;;  repeat          1   13[BANK0 ] unsigned char 
 18663 ;; Auto vars:     Size  Location     Type
 18664 ;;  pattern         1   16[BANK0 ] unsigned char 
 18665 ;; Return value:  Size  Location     Type
 18666 ;;		None               void
 18667 ;; Registers used:
 18668 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18669 ;; Tracked objects:
 18670 ;;		On entry : 0/0
 18671 ;;		On exit  : 0/0
 18672 ;;		Unchanged: 0/0
 18673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18674 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18677 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18678 ;;Total ram usage:        4 bytes
 18679 ;; Hardware stack levels used:    1
 18680 ;; Hardware stack levels required when called:    4
 18681 ;; This function calls:
 18682 ;;		_set_pacer
 18683 ;; This function is called by:
 18684 ;;		_update_display
 18685 ;; This function uses a non-reentrant model
 18686 ;;
 18687                           psect	text3340
 18688                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18689                           	line	345
 18690                           	global	__size_of_set_LED_Cat
 18691  000F                     	__size_of_set_LED_Cat	equ	__end_of_set_LED_Cat-_set_LED_Cat
 18692                           	
 18693  37B0                     _set_LED_Cat:	
 18694                           	opt	stack 9
 18695                           ; Regs used in _set_LED_Cat: [wreg+fsr1l-status,0+pclath+cstack]
 18696                           ;set_LED_Cat@pattern stored from wreg
 18697  37B0  0020               	movlb 0	; select bank0
 18698  37B1  00B1               	movwf	(set_LED_Cat@pattern)
 18699                           	line	346
 18700                           	
 18701  37B2                     l37537:	
 18702                           ;catgenie120.c: 346: set_pacer(5, pattern, repeat);
 18703  37B2  0831               	movf	(set_LED_Cat@pattern),w
 18704  37B3  00AF               	movwf	(??_set_LED_Cat+0)+0
 18705  37B4  082F               	movf	(??_set_LED_Cat+0)+0,w
 18706  37B5  00A9               	movwf	(?_set_pacer)
 18707  37B6  082E               	movf	(set_LED_Cat@repeat),w
 18708  37B7  00B0               	movwf	(??_set_LED_Cat+1)+0
 18709  37B8  0830               	movf	(??_set_LED_Cat+1)+0,w
 18710  37B9  00AA               	movwf	0+(?_set_pacer)+01h
 18711  37BA  3005               	movlw	(05h)
 18712  37BB  31A3  23C0  31B7   	fcall	_set_pacer
 18713                           	line	347
 18714                           	
 18715  37BE                     l10930:	
 18716  37BE  0008               	return
 18717                           	opt stack 0
 18718                           GLOBAL	__end_of_set_LED_Cat
 18719  37BF                     	__end_of_set_LED_Cat:
 18720 ;; =============== function _set_LED_Cat ends ============
 18721                           
 18722                           	signat	_set_LED_Cat,8312
 18723                           	global	_set_LED_Cartridge
 18724                           psect	text3341,local,class=CODE,delta=2
 18725                           global __ptext3341
 18726  37A1                     __ptext3341:
 18727                           
 18728 ;; *************** function _set_LED_Cartridge *****************
 18729 ;; Defined at:
 18730 ;;		line 339 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18731 ;; Parameters:    Size  Location     Type
 18732 ;;  pattern         1    wreg     unsigned char 
 18733 ;;  repeat          1   13[BANK0 ] unsigned char 
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;  pattern         1   16[BANK0 ] unsigned char 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;		None               void
 18738 ;; Registers used:
 18739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18745 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18749 ;;Total ram usage:        4 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:    4
 18752 ;; This function calls:
 18753 ;;		_set_pacer
 18754 ;; This function is called by:
 18755 ;;		_update_display
 18756 ;; This function uses a non-reentrant model
 18757 ;;
 18758                           psect	text3341
 18759                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18760                           	line	339
 18761                           	global	__size_of_set_LED_Cartridge
 18762  000F                     	__size_of_set_LED_Cartridge	equ	__end_of_set_LED_Cartridge-_set_LED_Cartridge
 18763                           	
 18764  37A1                     _set_LED_Cartridge:	
 18765                           	opt	stack 9
 18766                           ; Regs used in _set_LED_Cartridge: [wreg+fsr1l-status,0+pclath+cstack]
 18767                           ;set_LED_Cartridge@pattern stored from wreg
 18768  37A1  0020               	movlb 0	; select bank0
 18769  37A2  00B1               	movwf	(set_LED_Cartridge@pattern)
 18770                           	line	340
 18771                           	
 18772  37A3                     l37535:	
 18773                           ;catgenie120.c: 340: set_pacer(4, pattern, repeat);
 18774  37A3  0831               	movf	(set_LED_Cartridge@pattern),w
 18775  37A4  00AF               	movwf	(??_set_LED_Cartridge+0)+0
 18776  37A5  082F               	movf	(??_set_LED_Cartridge+0)+0,w
 18777  37A6  00A9               	movwf	(?_set_pacer)
 18778  37A7  082E               	movf	(set_LED_Cartridge@repeat),w
 18779  37A8  00B0               	movwf	(??_set_LED_Cartridge+1)+0
 18780  37A9  0830               	movf	(??_set_LED_Cartridge+1)+0,w
 18781  37AA  00AA               	movwf	0+(?_set_pacer)+01h
 18782  37AB  3004               	movlw	(04h)
 18783  37AC  31A3  23C0  31B7   	fcall	_set_pacer
 18784                           	line	341
 18785                           	
 18786  37AF                     l10927:	
 18787  37AF  0008               	return
 18788                           	opt stack 0
 18789                           GLOBAL	__end_of_set_LED_Cartridge
 18790  37B0                     	__end_of_set_LED_Cartridge:
 18791 ;; =============== function _set_LED_Cartridge ends ============
 18792                           
 18793                           	signat	_set_LED_Cartridge,8312
 18794                           	global	_set_LED_Error
 18795                           psect	text3342,local,class=CODE,delta=2
 18796                           global __ptext3342
 18797  3792                     __ptext3342:
 18798                           
 18799 ;; *************** function _set_LED_Error *****************
 18800 ;; Defined at:
 18801 ;;		line 327 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18802 ;; Parameters:    Size  Location     Type
 18803 ;;  pattern         1    wreg     unsigned char 
 18804 ;;  repeat          1   13[BANK0 ] unsigned char 
 18805 ;; Auto vars:     Size  Location     Type
 18806 ;;  pattern         1   16[BANK0 ] unsigned char 
 18807 ;; Return value:  Size  Location     Type
 18808 ;;		None               void
 18809 ;; Registers used:
 18810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 0/0
 18813 ;;		On exit  : 0/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18816 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18819 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18820 ;;Total ram usage:        4 bytes
 18821 ;; Hardware stack levels used:    1
 18822 ;; Hardware stack levels required when called:    4
 18823 ;; This function calls:
 18824 ;;		_set_pacer
 18825 ;; This function is called by:
 18826 ;;		_update_display
 18827 ;; This function uses a non-reentrant model
 18828 ;;
 18829                           psect	text3342
 18830                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18831                           	line	327
 18832                           	global	__size_of_set_LED_Error
 18833  000F                     	__size_of_set_LED_Error	equ	__end_of_set_LED_Error-_set_LED_Error
 18834                           	
 18835  3792                     _set_LED_Error:	
 18836                           	opt	stack 9
 18837                           ; Regs used in _set_LED_Error: [wreg+fsr1l-status,0+pclath+cstack]
 18838                           ;set_LED_Error@pattern stored from wreg
 18839  3792  0020               	movlb 0	; select bank0
 18840  3793  00B1               	movwf	(set_LED_Error@pattern)
 18841                           	line	328
 18842                           	
 18843  3794                     l37533:	
 18844                           ;catgenie120.c: 328: set_pacer(2, pattern, repeat);
 18845  3794  0831               	movf	(set_LED_Error@pattern),w
 18846  3795  00AF               	movwf	(??_set_LED_Error+0)+0
 18847  3796  082F               	movf	(??_set_LED_Error+0)+0,w
 18848  3797  00A9               	movwf	(?_set_pacer)
 18849  3798  082E               	movf	(set_LED_Error@repeat),w
 18850  3799  00B0               	movwf	(??_set_LED_Error+1)+0
 18851  379A  0830               	movf	(??_set_LED_Error+1)+0,w
 18852  379B  00AA               	movwf	0+(?_set_pacer)+01h
 18853  379C  3002               	movlw	(02h)
 18854  379D  31A3  23C0  31B7   	fcall	_set_pacer
 18855                           	line	329
 18856                           	
 18857  37A0                     l10921:	
 18858  37A0  0008               	return
 18859                           	opt stack 0
 18860                           GLOBAL	__end_of_set_LED_Error
 18861  37A1                     	__end_of_set_LED_Error:
 18862 ;; =============== function _set_LED_Error ends ============
 18863                           
 18864                           	signat	_set_LED_Error,8312
 18865                           	global	_set_Beeper
 18866                           psect	text3343,local,class=CODE,delta=2
 18867                           global __ptext3343
 18868  3783                     __ptext3343:
 18869                           
 18870 ;; *************** function _set_Beeper *****************
 18871 ;; Defined at:
 18872 ;;		line 351 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18873 ;; Parameters:    Size  Location     Type
 18874 ;;  pattern         1    wreg     unsigned char 
 18875 ;;  repeat          1   13[BANK0 ] unsigned char 
 18876 ;; Auto vars:     Size  Location     Type
 18877 ;;  pattern         1   16[BANK0 ] unsigned char 
 18878 ;; Return value:  Size  Location     Type
 18879 ;;		None               void
 18880 ;; Registers used:
 18881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18882 ;; Tracked objects:
 18883 ;;		On entry : 0/0
 18884 ;;		On exit  : 0/0
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18887 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18890 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 18891 ;;Total ram usage:        4 bytes
 18892 ;; Hardware stack levels used:    1
 18893 ;; Hardware stack levels required when called:    4
 18894 ;; This function calls:
 18895 ;;		_set_pacer
 18896 ;; This function is called by:
 18897 ;;		_litterlanguage_event
 18898 ;; This function uses a non-reentrant model
 18899 ;;
 18900                           psect	text3343
 18901                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18902                           	line	351
 18903                           	global	__size_of_set_Beeper
 18904  000F                     	__size_of_set_Beeper	equ	__end_of_set_Beeper-_set_Beeper
 18905                           	
 18906  3783                     _set_Beeper:	
 18907                           	opt	stack 8
 18908                           ; Regs used in _set_Beeper: [wreg+fsr1l-status,0+pclath+cstack]
 18909                           ;set_Beeper@pattern stored from wreg
 18910  3783  0020               	movlb 0	; select bank0
 18911  3784  00B1               	movwf	(set_Beeper@pattern)
 18912                           	line	352
 18913                           	
 18914  3785                     l37531:	
 18915                           ;catgenie120.c: 352: set_pacer(1, pattern, repeat);
 18916  3785  0831               	movf	(set_Beeper@pattern),w
 18917  3786  00AF               	movwf	(??_set_Beeper+0)+0
 18918  3787  082F               	movf	(??_set_Beeper+0)+0,w
 18919  3788  00A9               	movwf	(?_set_pacer)
 18920  3789  082E               	movf	(set_Beeper@repeat),w
 18921  378A  00B0               	movwf	(??_set_Beeper+1)+0
 18922  378B  0830               	movf	(??_set_Beeper+1)+0,w
 18923  378C  00AA               	movwf	0+(?_set_pacer)+01h
 18924  378D  3001               	movlw	(01h)
 18925  378E  31A3  23C0  31B7   	fcall	_set_pacer
 18926                           	line	353
 18927                           	
 18928  3791                     l10933:	
 18929  3791  0008               	return
 18930                           	opt stack 0
 18931                           GLOBAL	__end_of_set_Beeper
 18932  3792                     	__end_of_set_Beeper:
 18933 ;; =============== function _set_Beeper ends ============
 18934                           
 18935                           	signat	_set_Beeper,8312
 18936                           	global	_key_Beep
 18937                           psect	text3344,local,class=CODE,delta=2
 18938                           global __ptext3344
 18939  2AC3                     __ptext3344:
 18940                           
 18941 ;; *************** function _key_Beep *****************
 18942 ;; Defined at:
 18943 ;;		line 357 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;  beeps           1    wreg     unsigned char 
 18946 ;; Auto vars:     Size  Location     Type
 18947 ;;  beeps           1   19[BANK0 ] unsigned char 
 18948 ;;  pattern         5   14[BANK0 ] unsigned char [5]
 18949 ;; Return value:  Size  Location     Type
 18950 ;;		None               void
 18951 ;; Registers used:
 18952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 18953 ;; Tracked objects:
 18954 ;;		On entry : 0/0
 18955 ;;		On exit  : 0/0
 18956 ;;		Unchanged: 0/0
 18957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18959 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 18960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18961 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 18962 ;;Total ram usage:        7 bytes
 18963 ;; Hardware stack levels used:    1
 18964 ;; Hardware stack levels required when called:    4
 18965 ;; This function calls:
 18966 ;;		_set_pacer
 18967 ;; This function is called by:
 18968 ;;		_userinterface_work
 18969 ;;		_process_button
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           psect	text3344
 18973                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 18974                           	line	357
 18975                           	global	__size_of_key_Beep
 18976  0026                     	__size_of_key_Beep	equ	__end_of_key_Beep-_key_Beep
 18977                           	
 18978  2AC3                     _key_Beep:	
 18979                           	opt	stack 10
 18980                           ; Regs used in _key_Beep: [allreg]
 18981                           ;key_Beep@beeps stored from wreg
 18982                           	line	358
 18983  2AC3  0020               	movlb 0	; select bank0
 18984  2AC4  00B4               	movwf	(key_Beep@beeps)
 18985                           	
 18986  2AC5                     l37523:	
 18987                           ;catgenie120.c: 358: unsigned char pattern[] = {0x00, 0x01, 0x05, 0x15, 0x55};
 18988  2AC5  30BA               	movlw	low(key_Beep@F3155)
 18989  2AC6  0086               	movwf	fsr1l
 18990  2AC7  3001               	movlw	high(key_Beep@F3155)
 18991  2AC8  0087               	movwf	fsr1h
 18992  2AC9  302F               	movlw	low(key_Beep@pattern)
 18993  2ACA  0084               	movwf	fsr0l
 18994  2ACB  3000               	movlw	high(key_Beep@pattern)
 18995  2ACC  0085               	movwf	fsr0h
 18996  2ACD  3005               	movlw	5
 18997  2ACE  00FF               	movwf	btemp+1
 18998  2ACF                     u10730:
 18999  2ACF  0016               	moviw	fsr1++
 19000  2AD0  001A               	movwi	fsr0++
 19001  2AD1  0BFF               	decfsz	btemp+1,f
 19002  2AD2  2ACF               	goto	u10730
 19003                           	line	360
 19004                           	
 19005  2AD3                     l37525:	
 19006                           ;catgenie120.c: 360: if (beeps > 4)
 19007  2AD3  3005               	movlw	(05h)
 19008  2AD4  0234               	subwf	(key_Beep@beeps),w
 19009  2AD5  1C03               	skipc
 19010  2AD6  2AD8               	goto	u10741
 19011  2AD7  2AD9               	goto	u10740
 19012  2AD8                     u10741:
 19013  2AD8  2ADB               	goto	l37529
 19014  2AD9                     u10740:
 19015  2AD9  2AE8               	goto	l10939
 19016                           	line	361
 19017                           	
 19018  2ADA                     l37527:	
 19019                           ;catgenie120.c: 361: return;
 19020  2ADA  2AE8               	goto	l10939
 19021                           	
 19022  2ADB                     l10938:	
 19023                           	line	363
 19024                           	
 19025  2ADB                     l37529:	
 19026                           ;catgenie120.c: 363: set_pacer(0, pattern[beeps], 0);
 19027  2ADB  0834               	movf	(key_Beep@beeps),w
 19028  2ADC  3E2F               	addlw	key_Beep@pattern&0ffh
 19029  2ADD  0086               	movwf	fsr1l
 19030  2ADE  0187               	clrf fsr1h	
 19031                           	
 19032  2ADF  0801               	movf	indf1,w
 19033  2AE0  00AE               	movwf	(??_key_Beep+0)+0
 19034  2AE1  082E               	movf	(??_key_Beep+0)+0,w
 19035  2AE2  00A9               	movwf	(?_set_pacer)
 19036  2AE3  01AA               	clrf	0+(?_set_pacer)+01h
 19037  2AE4  3000               	movlw	(0)
 19038  2AE5  31A3  23C0  31AA   	fcall	_set_pacer
 19039                           	line	364
 19040                           	
 19041  2AE8                     l10939:	
 19042  2AE8  0008               	return
 19043                           	opt stack 0
 19044                           GLOBAL	__end_of_key_Beep
 19045  2AE9                     	__end_of_key_Beep:
 19046 ;; =============== function _key_Beep ends ============
 19047                           
 19048                           	signat	_key_Beep,4216
 19049                           	global	_both_short
 19050                           psect	text3345,local,class=CODE,delta=2
 19051                           global __ptext3345
 19052  2873                     __ptext3345:
 19053                           
 19054 ;; *************** function _both_short *****************
 19055 ;; Defined at:
 19056 ;;		line 591 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;		None
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;		None
 19061 ;; Return value:  Size  Location     Type
 19062 ;;		None               void
 19063 ;; Registers used:
 19064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; Hardware stack levels required when called:    4
 19077 ;; This function calls:
 19078 ;;		_settimeout
 19079 ;; This function is called by:
 19080 ;;		_userinterface_work
 19081 ;; This function uses a non-reentrant model
 19082 ;;
 19083                           psect	text3345
 19084                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 19085                           	line	591
 19086                           	global	__size_of_both_short
 19087  0015                     	__size_of_both_short	equ	__end_of_both_short-_both_short
 19088                           	
 19089  2873                     _both_short:	
 19090                           	opt	stack 10
 19091                           ; Regs used in _both_short: [wreg+fsr1l-status,0+pclath+cstack]
 19092                           	line	593
 19093                           	
 19094  2873                     l37519:	
 19095                           ;userinterface.c: 593: panel_mode = 1;
 19096  2873  0021               	movlb 1	; select bank1
 19097  2874  01D9               	clrf	(_panel_mode)^080h
 19098  2875  1403               	bsf	status,0
 19099  2876  0DD9               	rlf	(_panel_mode)^080h,f
 19100                           	line	595
 19101                           	
 19102  2877                     l37521:	
 19103                           ;userinterface.c: 595: settimeout(&cartridgetimeout, (5 * ((((4UL * (1000UL * ((1000UL))
                                 )))/4)/8)));
 19104  2877  3040               	movlw	(_cartridgetimeout&0ffh)
 19105  2878  0020               	movlb 0	; select bank0
 19106  2879  00AD               	movwf	(?_settimeout)
 19107  287A  3001               	movlw	0x2/2
 19108  287B  00AE               	movwf	(?_settimeout+1)
 19109  287C  3000               	movlw	0
 19110  287D  00B2               	movwf	3+(?_settimeout)+02h
 19111  287E  3009               	movlw	09h
 19112  287F  00B1               	movwf	2+(?_settimeout)+02h
 19113  2880  3089               	movlw	089h
 19114  2881  00B0               	movwf	1+(?_settimeout)+02h
 19115  2882  3068               	movlw	068h
 19116  2883  00AF               	movwf	0+(?_settimeout)+02h
 19117                           
 19118  2884  31A0  20CF  31A8   	fcall	_settimeout
 19119                           	line	596
 19120                           	
 19121  2887                     l8815:	
 19122  2887  0008               	return
 19123                           	opt stack 0
 19124                           GLOBAL	__end_of_both_short
 19125  2888                     	__end_of_both_short:
 19126 ;; =============== function _both_short ends ============
 19127                           
 19128                           	signat	_both_short,88
 19129                           	global	_update_autotimer
 19130                           psect	text3346,local,class=CODE,delta=2
 19131                           global __ptext3346
 19132  26BD                     __ptext3346:
 19133                           
 19134 ;; *************** function _update_autotimer *****************
 19135 ;; Defined at:
 19136 ;;		line 607 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 19137 ;; Parameters:    Size  Location     Type
 19138 ;;  mode            1    wreg     unsigned char 
 19139 ;; Auto vars:     Size  Location     Type
 19140 ;;  mode            1   28[BANK0 ] unsigned char 
 19141 ;; Return value:  Size  Location     Type
 19142 ;;		None               void
 19143 ;; Registers used:
 19144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19145 ;; Tracked objects:
 19146 ;;		On entry : 0/0
 19147 ;;		On exit  : 0/0
 19148 ;;		Unchanged: 0/0
 19149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19154 ;;Total ram usage:        1 bytes
 19155 ;; Hardware stack levels used:    1
 19156 ;; Hardware stack levels required when called:    4
 19157 ;; This function calls:
 19158 ;;		_settimeout
 19159 ;;		_postponetimeout
 19160 ;;		_timeoutnever
 19161 ;; This function is called by:
 19162 ;;		_userinterface_work
 19163 ;;		_set_mode
 19164 ;; This function uses a non-reentrant model
 19165 ;;
 19166                           psect	text3346
 19167                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 19168                           	line	607
 19169                           	global	__size_of_update_autotimer
 19170  0090                     	__size_of_update_autotimer	equ	__end_of_update_autotimer-_update_autotimer
 19171                           	
 19172  26BD                     _update_autotimer:	
 19173                           	opt	stack 8
 19174                           ; Regs used in _update_autotimer: [wreg-status,0+pclath+cstack]
 19175                           ;update_autotimer@mode stored from wreg
 19176  26BD  0020               	movlb 0	; select bank0
 19177  26BE  00BD               	movwf	(update_autotimer@mode)
 19178                           	line	614
 19179                           	
 19180  26BF                     l37503:	
 19181                           ;userinterface.c: 614: switch (mode) {
 19182  26BF  2F3D               	goto	l37517
 19183                           	line	615
 19184                           ;userinterface.c: 615: case 1:
 19185                           	
 19186  26C0                     l8822:	
 19187                           	line	616
 19188                           	
 19189  26C0                     l37505:	
 19190                           ;userinterface.c: 616: settimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 19191  26C0  30DE               	movlw	(_autotimer&0ffh)
 19192  26C1  00AD               	movwf	(?_settimeout)
 19193  26C2  3000               	movlw	0x1/2
 19194  26C3  00AE               	movwf	(?_settimeout+1)
 19195  26C4  30F1               	movlw	0F1h
 19196  26C5  00B2               	movwf	3+(?_settimeout)+02h
 19197  26C6  3066               	movlw	066h
 19198  26C7  00B1               	movwf	2+(?_settimeout)+02h
 19199  26C8  3018               	movlw	018h
 19200  26C9  00B0               	movwf	1+(?_settimeout)+02h
 19201  26CA  3080               	movlw	080h
 19202  26CB  00AF               	movwf	0+(?_settimeout)+02h
 19203                           
 19204  26CC  31A0  20CF  31A6   	fcall	_settimeout
 19205                           	line	617
 19206                           ;userinterface.c: 617: postponetimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 19207  26CF  30DE               	movlw	(_autotimer&0ffh)
 19208  26D0  0020               	movlb 0	; select bank0
 19209  26D1  00A1               	movwf	(?_postponetimeout)
 19210  26D2  3000               	movlw	0x1/2
 19211  26D3  00A2               	movwf	(?_postponetimeout+1)
 19212  26D4  30F1               	movlw	0F1h
 19213  26D5  00A6               	movwf	3+(?_postponetimeout)+02h
 19214  26D6  3066               	movlw	066h
 19215  26D7  00A5               	movwf	2+(?_postponetimeout)+02h
 19216  26D8  3018               	movlw	018h
 19217  26D9  00A4               	movwf	1+(?_postponetimeout)+02h
 19218  26DA  3080               	movlw	080h
 19219  26DB  00A3               	movwf	0+(?_postponetimeout)+02h
 19220                           
 19221  26DC  31AE  26E8  31A6   	fcall	_postponetimeout
 19222                           	line	618
 19223                           ;userinterface.c: 618: postponetimeout(&autotimer, 6 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 19224  26DF  30DE               	movlw	(_autotimer&0ffh)
 19225  26E0  0020               	movlb 0	; select bank0
 19226  26E1  00A1               	movwf	(?_postponetimeout)
 19227  26E2  3000               	movlw	0x1/2
 19228  26E3  00A2               	movwf	(?_postponetimeout+1)
 19229  26E4  30A0               	movlw	0A0h
 19230  26E5  00A6               	movwf	3+(?_postponetimeout)+02h
 19231  26E6  30EE               	movlw	0EEh
 19232  26E7  00A5               	movwf	2+(?_postponetimeout)+02h
 19233  26E8  30BB               	movlw	0BBh
 19234  26E9  00A4               	movwf	1+(?_postponetimeout)+02h
 19235  26EA  3000               	movlw	0
 19236  26EB  00A3               	movwf	0+(?_postponetimeout)+02h
 19237                           
 19238  26EC  31AE  26E8  31A6   	fcall	_postponetimeout
 19239                           	line	619
 19240                           ;userinterface.c: 619: break;
 19241  26EF  2F4C               	goto	l8828
 19242                           	line	620
 19243                           ;userinterface.c: 620: case 2:
 19244                           	
 19245  26F0                     l8824:	
 19246                           	line	621
 19247                           	
 19248  26F0                     l37507:	
 19249                           ;userinterface.c: 621: settimeout(&autotimer, 9 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 19250  26F0  30DE               	movlw	(_autotimer&0ffh)
 19251  26F1  0020               	movlb 0	; select bank0
 19252  26F2  00AD               	movwf	(?_settimeout)
 19253  26F3  3000               	movlw	0x1/2
 19254  26F4  00AE               	movwf	(?_settimeout+1)
 19255  26F5  30F1               	movlw	0F1h
 19256  26F6  00B2               	movwf	3+(?_settimeout)+02h
 19257  26F7  3066               	movlw	066h
 19258  26F8  00B1               	movwf	2+(?_settimeout)+02h
 19259  26F9  3018               	movlw	018h
 19260  26FA  00B0               	movwf	1+(?_settimeout)+02h
 19261  26FB  3080               	movlw	080h
 19262  26FC  00AF               	movwf	0+(?_settimeout)+02h
 19263                           
 19264  26FD  31A0  20CF  31A6   	fcall	_settimeout
 19265                           	line	622
 19266                           ;userinterface.c: 622: postponetimeout(&autotimer, 3 * 60 * 60 * ((((4UL * (1000UL * ((1
                                 000UL)))))/4)/8));
 19267  2700  30DE               	movlw	(_autotimer&0ffh)
 19268  2701  0020               	movlb 0	; select bank0
 19269  2702  00A1               	movwf	(?_postponetimeout)
 19270  2703  3000               	movlw	0x1/2
 19271  2704  00A2               	movwf	(?_postponetimeout+1)
 19272  2705  3050               	movlw	050h
 19273  2706  00A6               	movwf	3+(?_postponetimeout)+02h
 19274  2707  3077               	movlw	077h
 19275  2708  00A5               	movwf	2+(?_postponetimeout)+02h
 19276  2709  305D               	movlw	05Dh
 19277  270A  00A4               	movwf	1+(?_postponetimeout)+02h
 19278  270B  3080               	movlw	080h
 19279  270C  00A3               	movwf	0+(?_postponetimeout)+02h
 19280                           
 19281  270D  31AE  26E8  31A6   	fcall	_postponetimeout
 19282                           	line	623
 19283                           ;userinterface.c: 623: break;
 19284  2710  2F4C               	goto	l8828
 19285                           	line	624
 19286                           ;userinterface.c: 624: case 3:
 19287                           	
 19288  2711                     l8825:	
 19289                           	line	625
 19290                           	
 19291  2711                     l37509:	
 19292                           ;userinterface.c: 625: settimeout(&autotimer, 8 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 19293  2711  30DE               	movlw	(_autotimer&0ffh)
 19294  2712  0020               	movlb 0	; select bank0
 19295  2713  00AD               	movwf	(?_settimeout)
 19296  2714  3000               	movlw	0x1/2
 19297  2715  00AE               	movwf	(?_settimeout+1)
 19298  2716  30D6               	movlw	0D6h
 19299  2717  00B2               	movwf	3+(?_settimeout)+02h
 19300  2718  3093               	movlw	093h
 19301  2719  00B1               	movwf	2+(?_settimeout)+02h
 19302  271A  30A4               	movlw	0A4h
 19303  271B  00B0               	movwf	1+(?_settimeout)+02h
 19304  271C  3000               	movlw	0
 19305  271D  00AF               	movwf	0+(?_settimeout)+02h
 19306                           
 19307  271E  31A0  20CF  31A6   	fcall	_settimeout
 19308                           	line	626
 19309                           ;userinterface.c: 626: break;
 19310  2721  2F4C               	goto	l8828
 19311                           	line	627
 19312                           ;userinterface.c: 627: case 4:
 19313                           	
 19314  2722                     l8826:	
 19315                           	line	628
 19316                           	
 19317  2722                     l37511:	
 19318                           ;userinterface.c: 628: settimeout(&autotimer, 6 * 60 * 60 * ((((4UL * (1000UL * ((1000UL
                                 )))))/4)/8));
 19319  2722  30DE               	movlw	(_autotimer&0ffh)
 19320  2723  0020               	movlb 0	; select bank0
 19321  2724  00AD               	movwf	(?_settimeout)
 19322  2725  3000               	movlw	0x1/2
 19323  2726  00AE               	movwf	(?_settimeout+1)
 19324  2727  30A0               	movlw	0A0h
 19325  2728  00B2               	movwf	3+(?_settimeout)+02h
 19326  2729  30EE               	movlw	0EEh
 19327  272A  00B1               	movwf	2+(?_settimeout)+02h
 19328  272B  30BB               	movlw	0BBh
 19329  272C  00B0               	movwf	1+(?_settimeout)+02h
 19330  272D  3000               	movlw	0
 19331  272E  00AF               	movwf	0+(?_settimeout)+02h
 19332                           
 19333  272F  31A0  20CF  31A6   	fcall	_settimeout
 19334                           	line	629
 19335                           ;userinterface.c: 629: break;
 19336  2732  2F4C               	goto	l8828
 19337                           	line	630
 19338                           ;userinterface.c: 630: default:
 19339                           	
 19340  2733                     l8827:	
 19341                           	line	631
 19342                           	
 19343  2733                     l37513:	
 19344                           ;userinterface.c: 631: timeoutnever(&autotimer);
 19345  2733  30DE               	movlw	(_autotimer&0ffh)
 19346  2734  0020               	movlb 0	; select bank0
 19347  2735  00A5               	movwf	(?_timeoutnever)
 19348  2736  3000               	movlw	0x1/2
 19349  2737  00A6               	movwf	(?_timeoutnever+1)
 19350  2738  31A9  2162  31A6   	fcall	_timeoutnever
 19351                           	line	632
 19352                           ;userinterface.c: 632: break;
 19353  273B  2F4C               	goto	l8828
 19354                           	line	633
 19355                           	
 19356  273C                     l37515:	
 19357                           ;userinterface.c: 633: }
 19358  273C  2F4C               	goto	l8828
 19359                           	line	614
 19360                           	
 19361  273D                     l8821:	
 19362                           	
 19363  273D                     l37517:	
 19364  273D  0020               	movlb 0	; select bank0
 19365  273E  083D               	movf	(update_autotimer@mode),w
 19366                           	; Switch size 1, requested type "space"
 19367                           ; Number of cases is 4, Range of values is 1 to 4
 19368                           ; switch strategies available:
 19369                           ; Name         Instructions Cycles
 19370                           ; simple_byte           13     7 (average)
 19371                           ; direct_byte           17     9 (fixed)
 19372                           ; jumptable            263     9 (fixed)
 19373                           ;	Chosen strategy is simple_byte
 19374                           
 19375                           	opt asmopt_off
 19376  273F  3A01               	xorlw	1^0	; case 1
 19377  2740  1903               	skipnz
 19378  2741  2EC0               	goto	l37505
 19379  2742  3A03               	xorlw	2^1	; case 2
 19380  2743  1903               	skipnz
 19381  2744  2EF0               	goto	l37507
 19382  2745  3A01               	xorlw	3^2	; case 3
 19383  2746  1903               	skipnz
 19384  2747  2F11               	goto	l37509
 19385  2748  3A07               	xorlw	4^3	; case 4
 19386  2749  1903               	skipnz
 19387  274A  2F22               	goto	l37511
 19388  274B  2F33               	goto	l37513
 19389                           	opt asmopt_on
 19390                           
 19391                           	line	633
 19392                           	
 19393  274C                     l8823:	
 19394                           	line	634
 19395                           	
 19396  274C                     l8828:	
 19397  274C  0008               	return
 19398                           	opt stack 0
 19399                           GLOBAL	__end_of_update_autotimer
 19400  274D                     	__end_of_update_autotimer:
 19401 ;; =============== function _update_autotimer ends ============
 19402                           
 19403                           	signat	_update_autotimer,4216
 19404                           	global	_wait_instruction
 19405                           psect	text3347,local,class=CODE,delta=2
 19406                           global __ptext3347
 19407  24B4                     __ptext3347:
 19408                           
 19409 ;; *************** function _wait_instruction *****************
 19410 ;; Defined at:
 19411 ;;		line 670 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 19412 ;; Parameters:    Size  Location     Type
 19413 ;;		None
 19414 ;; Auto vars:     Size  Location     Type
 19415 ;;		None
 19416 ;; Return value:  Size  Location     Type
 19417 ;;		None               void
 19418 ;; Registers used:
 19419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19420 ;; Tracked objects:
 19421 ;;		On entry : 0/0
 19422 ;;		On exit  : 0/0
 19423 ;;		Unchanged: 0/0
 19424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19429 ;;Total ram usage:        1 bytes
 19430 ;; Hardware stack levels used:    1
 19431 ;; Hardware stack levels required when called:    4
 19432 ;; This function calls:
 19433 ;;		_timeoutexpired
 19434 ;;		_water_detected
 19435 ;;		_timeoutnever
 19436 ;;		_get_Dosage
 19437 ;; This function is called by:
 19438 ;;		_litterlanguage_work
 19439 ;; This function uses a non-reentrant model
 19440 ;;
 19441                           psect	text3347
 19442                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 19443                           	line	670
 19444                           	global	__size_of_wait_instruction
 19445  007C                     	__size_of_wait_instruction	equ	__end_of_wait_instruction-_wait_instruction
 19446                           	
 19447  24B4                     _wait_instruction:	
 19448                           	opt	stack 10
 19449                           ; Regs used in _wait_instruction: [wreg-status,0+pclath+cstack]
 19450                           	line	671
 19451                           	
 19452  24B4                     l37473:	
 19453                           ;litterlanguage.c: 671: switch (cur_instruction.opcode) {
 19454  24B4  2D23               	goto	l37501
 19455                           	line	672
 19456                           ;litterlanguage.c: 672: case 0x07:
 19457                           	
 19458  24B5                     l4461:	
 19459                           	line	673
 19460                           	
 19461  24B5                     l37475:	
 19462                           ;litterlanguage.c: 673: if (timeoutexpired(&timer_waitins)) {
 19463  24B5  306A               	movlw	(_timer_waitins&0ffh)
 19464  24B6  0020               	movlb 0	; select bank0
 19465  24B7  00A9               	movwf	(?_timeoutexpired)
 19466  24B8  3001               	movlw	0x2/2
 19467  24B9  00AA               	movwf	(?_timeoutexpired+1)
 19468  24BA  31A3  234C  31A4   	fcall	_timeoutexpired
 19469  24BD  3A00               	xorlw	0&0ffh
 19470  24BE  1903               	skipnz
 19471  24BF  2CC1               	goto	u10681
 19472  24C0  2CC2               	goto	u10680
 19473  24C1                     u10681:
 19474  24C1  2D2F               	goto	l4472
 19475  24C2                     u10680:
 19476                           	line	674
 19477                           	
 19478  24C2                     l37477:	
 19479                           ;litterlanguage.c: 674: ins_pointer++;
 19480  24C2  3003               	movlw	low(03h)
 19481  24C3  0020               	movlb 0	; select bank0
 19482  24C4  07EB               	addwf	(_ins_pointer),f
 19483  24C5  3000               	movlw	high(03h)
 19484  24C6  3DEC               	addwfc	(_ins_pointer+1),f
 19485                           	line	675
 19486                           ;litterlanguage.c: 675: ins_state = 3;
 19487  24C7  3003               	movlw	(03h)
 19488  24C8  00B7               	movwf	(??_wait_instruction+0)+0
 19489  24C9  0837               	movf	(??_wait_instruction+0)+0,w
 19490  24CA  00E5               	movwf	(_ins_state)
 19491  24CB  2D2F               	goto	l4472
 19492                           	line	676
 19493                           	
 19494  24CC                     l4462:	
 19495                           	line	677
 19496                           ;litterlanguage.c: 676: }
 19497                           ;litterlanguage.c: 677: break;
 19498  24CC  2D2F               	goto	l4472
 19499                           	line	678
 19500                           ;litterlanguage.c: 678: case 0x08:
 19501                           	
 19502  24CD                     l4464:	
 19503                           	line	679
 19504                           	
 19505  24CD                     l37479:	
 19506                           ;litterlanguage.c: 679: if (cur_instruction.operant) {
 19507  24CD  3001               	movlw	(01h)
 19508  24CE  3E68               	addlw	_cur_instruction&0ffh
 19509  24CF  0086               	movwf	fsr1l
 19510  24D0  0187               	clrf fsr1h	
 19511                           	
 19512  24D1  0016               	moviw	fsr1++
 19513  24D2  0401               	iorwf	indf1,w
 19514  24D3  1903               	skipnz
 19515  24D4  2CD6               	goto	u10691
 19516  24D5  2CD7               	goto	u10690
 19517  24D6                     u10691:
 19518  24D6  2CEA               	goto	l37485
 19519  24D7                     u10690:
 19520                           	line	680
 19521                           	
 19522  24D7                     l37481:	
 19523                           ;litterlanguage.c: 680: if (water_detected()) {
 19524  24D7  31B7  270B  31A4   	fcall	_water_detected
 19525  24DA  3A00               	xorlw	0&0ffh
 19526  24DB  1903               	skipnz
 19527  24DC  2CDE               	goto	u10701
 19528  24DD  2CDF               	goto	u10700
 19529  24DE                     u10701:
 19530  24DE  2D2F               	goto	l4472
 19531  24DF                     u10700:
 19532                           	line	681
 19533                           	
 19534  24DF                     l37483:	
 19535                           ;litterlanguage.c: 681: ins_pointer++;
 19536  24DF  3003               	movlw	low(03h)
 19537  24E0  0020               	movlb 0	; select bank0
 19538  24E1  07EB               	addwf	(_ins_pointer),f
 19539  24E2  3000               	movlw	high(03h)
 19540  24E3  3DEC               	addwfc	(_ins_pointer+1),f
 19541                           	line	682
 19542                           ;litterlanguage.c: 682: ins_state = 3;
 19543  24E4  3003               	movlw	(03h)
 19544  24E5  00B7               	movwf	(??_wait_instruction+0)+0
 19545  24E6  0837               	movf	(??_wait_instruction+0)+0,w
 19546  24E7  00E5               	movwf	(_ins_state)
 19547  24E8  2D2F               	goto	l4472
 19548                           	line	683
 19549                           	
 19550  24E9                     l4466:	
 19551                           	line	684
 19552                           ;litterlanguage.c: 683: }
 19553                           ;litterlanguage.c: 684: } else {
 19554  24E9  2D2F               	goto	l4472
 19555                           	
 19556  24EA                     l4465:	
 19557                           	line	685
 19558                           	
 19559  24EA                     l37485:	
 19560                           ;litterlanguage.c: 685: if (!water_detected()) {
 19561  24EA  31B7  270B  31A4   	fcall	_water_detected
 19562  24ED  3800               	iorlw	0
 19563  24EE  1D03               	skipz
 19564  24EF  2CF1               	goto	u10711
 19565  24F0  2CF2               	goto	u10710
 19566  24F1                     u10711:
 19567  24F1  2D2F               	goto	l4472
 19568  24F2                     u10710:
 19569                           	line	687
 19570                           	
 19571  24F2                     l37487:	
 19572                           ;litterlanguage.c: 687: timeoutnever(&timer_drain);
 19573  24F2  30E4               	movlw	(_timer_drain&0ffh)
 19574  24F3  0020               	movlb 0	; select bank0
 19575  24F4  00A5               	movwf	(?_timeoutnever)
 19576  24F5  3000               	movlw	0x1/2
 19577  24F6  00A6               	movwf	(?_timeoutnever+1)
 19578  24F7  31A9  2162  31A4   	fcall	_timeoutnever
 19579                           	line	688
 19580                           	
 19581  24FA                     l37489:	
 19582                           ;litterlanguage.c: 688: ins_pointer++;
 19583  24FA  3003               	movlw	low(03h)
 19584  24FB  0020               	movlb 0	; select bank0
 19585  24FC  07EB               	addwf	(_ins_pointer),f
 19586  24FD  3000               	movlw	high(03h)
 19587  24FE  3DEC               	addwfc	(_ins_pointer+1),f
 19588                           	line	689
 19589                           	
 19590  24FF                     l37491:	
 19591                           ;litterlanguage.c: 689: ins_state = 3;
 19592  24FF  3003               	movlw	(03h)
 19593  2500  00B7               	movwf	(??_wait_instruction+0)+0
 19594  2501  0837               	movf	(??_wait_instruction+0)+0,w
 19595  2502  00E5               	movwf	(_ins_state)
 19596  2503  2D2F               	goto	l4472
 19597                           	line	690
 19598                           	
 19599  2504                     l4468:	
 19600  2504  2D2F               	goto	l4472
 19601                           	line	691
 19602                           	
 19603  2505                     l4467:	
 19604                           	line	692
 19605                           ;litterlanguage.c: 690: }
 19606                           ;litterlanguage.c: 691: }
 19607                           ;litterlanguage.c: 692: break;
 19608  2505  2D2F               	goto	l4472
 19609                           	line	693
 19610                           ;litterlanguage.c: 693: case 0x09:
 19611                           	
 19612  2506                     l4469:	
 19613                           	line	694
 19614                           	
 19615  2506                     l37493:	
 19616                           ;litterlanguage.c: 694: if (!get_Dosage()) {
 19617  2506  31B6  26FC  31A4   	fcall	_get_Dosage
 19618  2509  3800               	iorlw	0
 19619  250A  1D03               	skipz
 19620  250B  2D0D               	goto	u10721
 19621  250C  2D0E               	goto	u10720
 19622  250D                     u10721:
 19623  250D  2D2F               	goto	l4472
 19624  250E                     u10720:
 19625                           	line	695
 19626                           	
 19627  250E                     l37495:	
 19628                           ;litterlanguage.c: 695: ins_pointer++;
 19629  250E  3003               	movlw	low(03h)
 19630  250F  0020               	movlb 0	; select bank0
 19631  2510  07EB               	addwf	(_ins_pointer),f
 19632  2511  3000               	movlw	high(03h)
 19633  2512  3DEC               	addwfc	(_ins_pointer+1),f
 19634                           	line	696
 19635                           ;litterlanguage.c: 696: ins_state = 3;
 19636  2513  3003               	movlw	(03h)
 19637  2514  00B7               	movwf	(??_wait_instruction+0)+0
 19638  2515  0837               	movf	(??_wait_instruction+0)+0,w
 19639  2516  00E5               	movwf	(_ins_state)
 19640  2517  2D2F               	goto	l4472
 19641                           	line	697
 19642                           	
 19643  2518                     l4470:	
 19644                           	line	698
 19645                           ;litterlanguage.c: 697: }
 19646                           ;litterlanguage.c: 698: break;
 19647  2518  2D2F               	goto	l4472
 19648                           	line	699
 19649                           ;litterlanguage.c: 699: default:
 19650                           	
 19651  2519                     l4471:	
 19652                           	line	700
 19653                           	
 19654  2519                     l37497:	
 19655                           ;litterlanguage.c: 700: ins_pointer++;
 19656  2519  3003               	movlw	low(03h)
 19657  251A  07EB               	addwf	(_ins_pointer),f
 19658  251B  3000               	movlw	high(03h)
 19659  251C  3DEC               	addwfc	(_ins_pointer+1),f
 19660                           	line	701
 19661                           ;litterlanguage.c: 701: ins_state = 3;
 19662  251D  3003               	movlw	(03h)
 19663  251E  00B7               	movwf	(??_wait_instruction+0)+0
 19664  251F  0837               	movf	(??_wait_instruction+0)+0,w
 19665  2520  00E5               	movwf	(_ins_state)
 19666                           	line	702
 19667                           ;litterlanguage.c: 702: break;
 19668  2521  2D2F               	goto	l4472
 19669                           	line	703
 19670                           	
 19671  2522                     l37499:	
 19672                           ;litterlanguage.c: 703: }
 19673  2522  2D2F               	goto	l4472
 19674                           	line	671
 19675                           	
 19676  2523                     l4460:	
 19677                           	
 19678  2523                     l37501:	
 19679  2523  0020               	movlb 0	; select bank0
 19680  2524  0868               	movf	(_cur_instruction),w
 19681                           	; Switch size 1, requested type "space"
 19682                           ; Number of cases is 3, Range of values is 7 to 9
 19683                           ; switch strategies available:
 19684                           ; Name         Instructions Cycles
 19685                           ; simple_byte           10     6 (average)
 19686                           ; direct_byte           15     9 (fixed)
 19687                           ; jumptable            263     9 (fixed)
 19688                           ;	Chosen strategy is simple_byte
 19689                           
 19690                           	opt asmopt_off
 19691  2525  3A07               	xorlw	7^0	; case 7
 19692  2526  1903               	skipnz
 19693  2527  2CB5               	goto	l37475
 19694  2528  3A0F               	xorlw	8^7	; case 8
 19695  2529  1903               	skipnz
 19696  252A  2CCD               	goto	l37479
 19697  252B  3A01               	xorlw	9^8	; case 9
 19698  252C  1903               	skipnz
 19699  252D  2D06               	goto	l37493
 19700  252E  2D19               	goto	l37497
 19701                           	opt asmopt_on
 19702                           
 19703                           	line	703
 19704                           	
 19705  252F                     l4463:	
 19706                           	line	704
 19707                           	
 19708  252F                     l4472:	
 19709  252F  0008               	return
 19710                           	opt stack 0
 19711                           GLOBAL	__end_of_wait_instruction
 19712  2530                     	__end_of_wait_instruction:
 19713 ;; =============== function _wait_instruction ends ============
 19714                           
 19715                           	signat	_wait_instruction,88
 19716                           	global	_printtime
 19717                           psect	text3348,local,class=CODE,delta=2
 19718                           global __ptext3348
 19719  2B3D                     __ptext3348:
 19720                           
 19721 ;; *************** function _printtime *****************
 19722 ;; Defined at:
 19723 ;;		line 89 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;		None
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;		None
 19728 ;; Return value:  Size  Location     Type
 19729 ;;		None               void
 19730 ;; Registers used:
 19731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19732 ;; Tracked objects:
 19733 ;;		On entry : 0/0
 19734 ;;		On exit  : 0/0
 19735 ;;		Unchanged: 0/0
 19736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19739 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 19740 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 19741 ;;Total ram usage:        8 bytes
 19742 ;; Hardware stack levels used:    1
 19743 ;; Hardware stack levels required when called:    4
 19744 ;; This function calls:
 19745 ;;		_printf
 19746 ;; This function is called by:
 19747 ;;		_litterlanguage_work
 19748 ;;		_litterlanguage_start
 19749 ;;		_litterlanguage_pause
 19750 ;;		_litterlanguage_stop
 19751 ;;		_waterdetection_event
 19752 ;;		_litterlanguage_cleanup
 19753 ;;		_exe_instruction
 19754 ;;		_userinterface_work
 19755 ;;		_catsensor_event
 19756 ;;		_incminutes
 19757 ;; This function uses a non-reentrant model
 19758 ;;
 19759                           psect	text3348
 19760                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19761                           	line	89
 19762                           	global	__size_of_printtime
 19763  002D                     	__size_of_printtime	equ	__end_of_printtime-_printtime
 19764                           	
 19765  2B3D                     _printtime:	
 19766                           	opt	stack 7
 19767                           ; Regs used in _printtime: [wreg-status,0+pclath+cstack]
 19768                           	line	92
 19769                           	
 19770  2B3D                     l37471:	
 19771                           ;rtc.c: 90: printf( "%d %d:%.2d.%.2d ",
 19772                           ;rtc.c: 91: currenttime.weekday, currenttime.hours,
 19773                           ;rtc.c: 92: currenttime.minutes, currenttime.seconds );
 19774  2B3D  30D2               	movlw	low(STR_113|8000h)
 19775  2B3E  0020               	movlb 0	; select bank0
 19776  2B3F  00AF               	movwf	(?_printf)
 19777  2B40  3086               	movlw	high(STR_113|8000h)
 19778  2B41  00B0               	movwf	((?_printf))+1
 19779  2B42  0021               	movlb 1	; select bank1
 19780  2B43  0849               	movf	0+(_currenttime)^080h+03h,w
 19781  2B44  0020               	movlb 0	; select bank0
 19782  2B45  00C7               	movwf	(??_printtime+0)+0
 19783  2B46  01C8               	clrf	(??_printtime+0)+0+1
 19784  2B47  0847               	movf	0+(??_printtime+0)+0,w
 19785  2B48  00B1               	movwf	0+(?_printf)+02h
 19786  2B49  0848               	movf	1+(??_printtime+0)+0,w
 19787  2B4A  00B2               	movwf	1+(?_printf)+02h
 19788  2B4B  0021               	movlb 1	; select bank1
 19789  2B4C  0848               	movf	0+(_currenttime)^080h+02h,w
 19790  2B4D  0020               	movlb 0	; select bank0
 19791  2B4E  00C9               	movwf	(??_printtime+2)+0
 19792  2B4F  01CA               	clrf	(??_printtime+2)+0+1
 19793  2B50  0849               	movf	0+(??_printtime+2)+0,w
 19794  2B51  00B3               	movwf	0+(?_printf)+04h
 19795  2B52  084A               	movf	1+(??_printtime+2)+0,w
 19796  2B53  00B4               	movwf	1+(?_printf)+04h
 19797  2B54  0021               	movlb 1	; select bank1
 19798  2B55  0847               	movf	0+(_currenttime)^080h+01h,w
 19799  2B56  0020               	movlb 0	; select bank0
 19800  2B57  00CB               	movwf	(??_printtime+4)+0
 19801  2B58  01CC               	clrf	(??_printtime+4)+0+1
 19802  2B59  084B               	movf	0+(??_printtime+4)+0,w
 19803  2B5A  00B5               	movwf	0+(?_printf)+06h
 19804  2B5B  084C               	movf	1+(??_printtime+4)+0,w
 19805  2B5C  00B6               	movwf	1+(?_printf)+06h
 19806  2B5D  0021               	movlb 1	; select bank1
 19807  2B5E  0846               	movf	(_currenttime)^080h,w
 19808  2B5F  0020               	movlb 0	; select bank0
 19809  2B60  00CD               	movwf	(??_printtime+6)+0
 19810  2B61  01CE               	clrf	(??_printtime+6)+0+1
 19811  2B62  084D               	movf	0+(??_printtime+6)+0,w
 19812  2B63  00B7               	movwf	0+(?_printf)+08h
 19813  2B64  084E               	movf	1+(??_printtime+6)+0,w
 19814  2B65  00B8               	movwf	1+(?_printf)+08h
 19815  2B66  3194  24A0  31AB   	fcall	_printf
 19816                           	line	93
 19817                           	
 19818  2B69                     l17251:	
 19819  2B69  0008               	return
 19820                           	opt stack 0
 19821                           GLOBAL	__end_of_printtime
 19822  2B6A                     	__end_of_printtime:
 19823 ;; =============== function _printtime ends ============
 19824                           
 19825                           	signat	_printtime,88
 19826                           	global	_rtc_work
 19827                           psect	text3349,local,class=CODE,delta=2
 19828                           global __ptext3349
 19829  200C                     __ptext3349:
 19830                           
 19831 ;; *************** function _rtc_work *****************
 19832 ;; Defined at:
 19833 ;;		line 68 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;		None
 19836 ;; Auto vars:     Size  Location     Type
 19837 ;;		None
 19838 ;; Return value:  Size  Location     Type
 19839 ;;		None               void
 19840 ;; Registers used:
 19841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19851 ;;Total ram usage:        1 bytes
 19852 ;; Hardware stack levels used:    1
 19853 ;; Hardware stack levels required when called:    4
 19854 ;; This function calls:
 19855 ;;		_timeoutexpired
 19856 ;;		_postponetimeout
 19857 ;; This function is called by:
 19858 ;;		_main
 19859 ;; This function uses a non-reentrant model
 19860 ;;
 19861                           psect	text3349
 19862                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 19863                           	line	68
 19864                           	global	__size_of_rtc_work
 19865  0060                     	__size_of_rtc_work	equ	__end_of_rtc_work-_rtc_work
 19866                           	
 19867  200C                     _rtc_work:	
 19868                           	opt	stack 11
 19869                           ; Regs used in _rtc_work: [wreg+fsr1l-status,0+pclath+cstack]
 19870                           	line	69
 19871                           	
 19872  200C                     l37449:	
 19873                           ;rtc.c: 69: if (timeoutexpired(&second)) {
 19874  200C  304C               	movlw	(_second&0ffh)
 19875  200D  0020               	movlb 0	; select bank0
 19876  200E  00A9               	movwf	(?_timeoutexpired)
 19877  200F  3001               	movlw	0x2/2
 19878  2010  00AA               	movwf	(?_timeoutexpired+1)
 19879  2011  31A3  234C  31A0   	fcall	_timeoutexpired
 19880  2014  3A00               	xorlw	0&0ffh
 19881  2015  1903               	skipnz
 19882  2016  2818               	goto	u10631
 19883  2017  2819               	goto	u10630
 19884  2018                     u10631:
 19885  2018  286B               	goto	l17248
 19886  2019                     u10630:
 19887                           	line	70
 19888                           	
 19889  2019                     l37451:	
 19890                           ;rtc.c: 70: postponetimeout(&second, ((((4UL * (1000UL * ((1000UL)))))/4)/8));
 19891  2019  304C               	movlw	(_second&0ffh)
 19892  201A  0020               	movlb 0	; select bank0
 19893  201B  00A1               	movwf	(?_postponetimeout)
 19894  201C  3001               	movlw	0x2/2
 19895  201D  00A2               	movwf	(?_postponetimeout+1)
 19896  201E  3000               	movlw	0
 19897  201F  00A6               	movwf	3+(?_postponetimeout)+02h
 19898  2020  3001               	movlw	01h
 19899  2021  00A5               	movwf	2+(?_postponetimeout)+02h
 19900  2022  30E8               	movlw	0E8h
 19901  2023  00A4               	movwf	1+(?_postponetimeout)+02h
 19902  2024  3048               	movlw	048h
 19903  2025  00A3               	movwf	0+(?_postponetimeout)+02h
 19904                           
 19905  2026  31AE  26E8  31A0   	fcall	_postponetimeout
 19906                           	line	71
 19907                           	
 19908  2029                     l37453:	
 19909                           ;rtc.c: 71: uptime++;
 19910  2029  3001               	movlw	01h
 19911  202A  0022               	movlb 2	; select bank2
 19912  202B  07BA               	addwf	(_uptime)^0100h,f
 19913  202C  3000               	movlw	0
 19914  202D  3DBB               	addwfc	(_uptime+1)^0100h,f
 19915  202E  3000               	movlw	0
 19916  202F  3DBC               	addwfc	(_uptime+2)^0100h,f
 19917  2030  3000               	movlw	0
 19918  2031  3DBD               	addwfc	(_uptime+3)^0100h,f
 19919                           	line	72
 19920                           	
 19921  2032                     l37455:	
 19922                           ;rtc.c: 72: if (++currenttime.seconds >= 60) {
 19923  2032  3001               	movlw	(01h)
 19924  2033  0020               	movlb 0	; select bank0
 19925  2034  00B7               	movwf	(??_rtc_work+0)+0
 19926  2035  0837               	movf	(??_rtc_work+0)+0,w
 19927  2036  0021               	movlb 1	; select bank1
 19928  2037  07C6               	addwf	(_currenttime)^080h,f
 19929  2038  303C               	movlw	(03Ch)
 19930  2039  0246               	subwf	((_currenttime)^080h),w
 19931  203A  1C03               	skipc
 19932  203B  283D               	goto	u10641
 19933  203C  283E               	goto	u10640
 19934  203D                     u10641:
 19935  203D  286B               	goto	l17248
 19936  203E                     u10640:
 19937                           	line	73
 19938                           	
 19939  203E                     l37457:	
 19940                           ;rtc.c: 73: currenttime.seconds = 0;
 19941  203E  01C6               	clrf	(_currenttime)^080h
 19942                           	line	74
 19943                           	
 19944  203F                     l37459:	
 19945                           ;rtc.c: 74: if (++currenttime.minutes >=60) {
 19946  203F  3001               	movlw	(01h)
 19947  2040  0020               	movlb 0	; select bank0
 19948  2041  00B7               	movwf	(??_rtc_work+0)+0
 19949  2042  0837               	movf	(??_rtc_work+0)+0,w
 19950  2043  0021               	movlb 1	; select bank1
 19951  2044  07C7               	addwf	0+(_currenttime)^080h+01h,f
 19952  2045  303C               	movlw	(03Ch)
 19953  2046  0247               	subwf	(0+(_currenttime)^080h+01h),w
 19954  2047  1C03               	skipc
 19955  2048  284A               	goto	u10651
 19956  2049  284B               	goto	u10650
 19957  204A                     u10651:
 19958  204A  286B               	goto	l17248
 19959  204B                     u10650:
 19960                           	line	75
 19961                           	
 19962  204B                     l37461:	
 19963                           ;rtc.c: 75: currenttime.minutes = 0;
 19964  204B  01C7               	clrf	0+(_currenttime)^080h+01h
 19965                           	line	76
 19966                           	
 19967  204C                     l37463:	
 19968                           ;rtc.c: 76: if (++currenttime.hours >=24) {
 19969  204C  3001               	movlw	(01h)
 19970  204D  0020               	movlb 0	; select bank0
 19971  204E  00B7               	movwf	(??_rtc_work+0)+0
 19972  204F  0837               	movf	(??_rtc_work+0)+0,w
 19973  2050  0021               	movlb 1	; select bank1
 19974  2051  07C8               	addwf	0+(_currenttime)^080h+02h,f
 19975  2052  3018               	movlw	(018h)
 19976  2053  0248               	subwf	(0+(_currenttime)^080h+02h),w
 19977  2054  1C03               	skipc
 19978  2055  2857               	goto	u10661
 19979  2056  2858               	goto	u10660
 19980  2057                     u10661:
 19981  2057  286B               	goto	l17248
 19982  2058                     u10660:
 19983                           	line	77
 19984                           	
 19985  2058                     l37465:	
 19986                           ;rtc.c: 77: currenttime.hours = 0;
 19987  2058  01C8               	clrf	0+(_currenttime)^080h+02h
 19988                           	line	78
 19989                           	
 19990  2059                     l37467:	
 19991                           ;rtc.c: 78: if (++currenttime.weekday >=7)
 19992  2059  3001               	movlw	(01h)
 19993  205A  0020               	movlb 0	; select bank0
 19994  205B  00B7               	movwf	(??_rtc_work+0)+0
 19995  205C  0837               	movf	(??_rtc_work+0)+0,w
 19996  205D  0021               	movlb 1	; select bank1
 19997  205E  07C9               	addwf	0+(_currenttime)^080h+03h,f
 19998  205F  3007               	movlw	(07h)
 19999  2060  0249               	subwf	(0+(_currenttime)^080h+03h),w
 20000  2061  1C03               	skipc
 20001  2062  2864               	goto	u10671
 20002  2063  2865               	goto	u10670
 20003  2064                     u10671:
 20004  2064  286B               	goto	l17248
 20005  2065                     u10670:
 20006                           	line	79
 20007                           	
 20008  2065                     l37469:	
 20009                           ;rtc.c: 79: currenttime.weekday = 0;
 20010  2065  01C9               	clrf	0+(_currenttime)^080h+03h
 20011  2066  286B               	goto	l17248
 20012                           	
 20013  2067                     l17247:	
 20014  2067  286B               	goto	l17248
 20015                           	line	80
 20016                           	
 20017  2068                     l17246:	
 20018  2068  286B               	goto	l17248
 20019                           	line	81
 20020                           	
 20021  2069                     l17245:	
 20022  2069  286B               	goto	l17248
 20023                           	line	82
 20024                           	
 20025  206A                     l17244:	
 20026  206A  286B               	goto	l17248
 20027                           	line	83
 20028                           	
 20029  206B                     l17243:	
 20030                           	line	84
 20031                           	
 20032  206B                     l17248:	
 20033  206B  0008               	return
 20034                           	opt stack 0
 20035                           GLOBAL	__end_of_rtc_work
 20036  206C                     	__end_of_rtc_work:
 20037 ;; =============== function _rtc_work ends ============
 20038                           
 20039                           	signat	_rtc_work,88
 20040                           	global	_cmdline_init
 20041                           psect	text3350,local,class=CODE,delta=2
 20042                           global __ptext3350
 20043  374A                     __ptext3350:
 20044                           
 20045 ;; *************** function _cmdline_init *****************
 20046 ;; Defined at:
 20047 ;;		line 58 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;		None
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;		None
 20052 ;; Return value:  Size  Location     Type
 20053 ;;		None               void
 20054 ;; Registers used:
 20055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20056 ;; Tracked objects:
 20057 ;;		On entry : 0/0
 20058 ;;		On exit  : 0/0
 20059 ;;		Unchanged: 0/0
 20060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20065 ;;Total ram usage:        0 bytes
 20066 ;; Hardware stack levels used:    1
 20067 ;; Hardware stack levels required when called:    4
 20068 ;; This function calls:
 20069 ;;		_printf
 20070 ;; This function is called by:
 20071 ;;		_main
 20072 ;; This function uses a non-reentrant model
 20073 ;;
 20074                           psect	text3350
 20075                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 20076                           	line	58
 20077                           	global	__size_of_cmdline_init
 20078  000E                     	__size_of_cmdline_init	equ	__end_of_cmdline_init-_cmdline_init
 20079                           	
 20080  374A                     _cmdline_init:	
 20081                           	opt	stack 11
 20082                           ; Regs used in _cmdline_init: [wreg-status,0+pclath+cstack]
 20083                           	line	59
 20084                           	
 20085  374A                     l37445:	
 20086                           ;cmdline.c: 59: if (localecho)
 20087  374A  0020               	movlb 0	; select bank0
 20088  374B  086F               	movf	(_localecho),w
 20089  374C  1D03               	skipz
 20090  374D  2F4F               	goto	u10620
 20091  374E  2F57               	goto	l15113
 20092  374F                     u10620:
 20093                           	line	60
 20094                           	
 20095  374F                     l37447:	
 20096                           ;cmdline.c: 60: printf("# ");
 20097  374F  303C               	movlw	low(STR_99|8000h)
 20098  3750  00AF               	movwf	(?_printf)
 20099  3751  3089               	movlw	high(STR_99|8000h)
 20100  3752  00B0               	movwf	((?_printf))+1
 20101  3753  3194  24A0  31B7   	fcall	_printf
 20102  3756  2F57               	goto	l15113
 20103                           	
 20104  3757                     l15112:	
 20105                           	line	61
 20106                           	
 20107  3757                     l15113:	
 20108  3757  0008               	return
 20109                           	opt stack 0
 20110                           GLOBAL	__end_of_cmdline_init
 20111  3758                     	__end_of_cmdline_init:
 20112 ;; =============== function _cmdline_init ends ============
 20113                           
 20114                           	signat	_cmdline_init,88
 20115                           	global	_rtc_init
 20116                           psect	text3351,local,class=CODE,delta=2
 20117                           global __ptext3351
 20118  299A                     __ptext3351:
 20119                           
 20120 ;; *************** function _rtc_init *****************
 20121 ;; Defined at:
 20122 ;;		line 48 in file "D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 20123 ;; Parameters:    Size  Location     Type
 20124 ;;  flags           1    wreg     unsigned char 
 20125 ;; Auto vars:     Size  Location     Type
 20126 ;;  flags           1   28[BANK0 ] unsigned char 
 20127 ;; Return value:  Size  Location     Type
 20128 ;;		None               void
 20129 ;; Registers used:
 20130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20131 ;; Tracked objects:
 20132 ;;		On entry : 0/0
 20133 ;;		On exit  : 0/0
 20134 ;;		Unchanged: 0/0
 20135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20140 ;;Total ram usage:        1 bytes
 20141 ;; Hardware stack levels used:    1
 20142 ;; Hardware stack levels required when called:    4
 20143 ;; This function calls:
 20144 ;;		_settimeout
 20145 ;; This function is called by:
 20146 ;;		_main
 20147 ;; This function uses a non-reentrant model
 20148 ;;
 20149                           psect	text3351
 20150                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\rtc.c"
 20151                           	line	48
 20152                           	global	__size_of_rtc_init
 20153  001D                     	__size_of_rtc_init	equ	__end_of_rtc_init-_rtc_init
 20154                           	
 20155  299A                     _rtc_init:	
 20156                           	opt	stack 11
 20157                           ; Regs used in _rtc_init: [wreg+fsr1l-status,0+pclath+cstack]
 20158                           ;rtc_init@flags stored from wreg
 20159  299A  0020               	movlb 0	; select bank0
 20160  299B  00BD               	movwf	(rtc_init@flags)
 20161                           	line	49
 20162                           	
 20163  299C                     l37439:	
 20164                           ;rtc.c: 49: settimeout(&second, ((((4UL * (1000UL * ((1000UL)))))/4)/8));
 20165  299C  304C               	movlw	(_second&0ffh)
 20166  299D  00AD               	movwf	(?_settimeout)
 20167  299E  3001               	movlw	0x2/2
 20168  299F  00AE               	movwf	(?_settimeout+1)
 20169  29A0  3000               	movlw	0
 20170  29A1  00B2               	movwf	3+(?_settimeout)+02h
 20171  29A2  3001               	movlw	01h
 20172  29A3  00B1               	movwf	2+(?_settimeout)+02h
 20173  29A4  30E8               	movlw	0E8h
 20174  29A5  00B0               	movwf	1+(?_settimeout)+02h
 20175  29A6  3048               	movlw	048h
 20176  29A7  00AF               	movwf	0+(?_settimeout)+02h
 20177                           
 20178  29A8  31A0  20CF  31A9   	fcall	_settimeout
 20179                           	line	51
 20180                           	
 20181  29AB                     l37441:	
 20182                           ;rtc.c: 51: if (flags & (0x01 << 7)) {
 20183  29AB  0020               	movlb 0	; select bank0
 20184  29AC  1FBD               	btfss	(rtc_init@flags),(7)&7
 20185  29AD  29AF               	goto	u10611
 20186  29AE  29B0               	goto	u10610
 20187  29AF                     u10611:
 20188  29AF  29B6               	goto	l17240
 20189  29B0                     u10610:
 20190                           	line	52
 20191                           	
 20192  29B0                     l37443:	
 20193                           ;rtc.c: 52: currenttime.seconds = 0;
 20194  29B0  0021               	movlb 1	; select bank1
 20195  29B1  01C6               	clrf	(_currenttime)^080h
 20196                           	line	53
 20197                           ;rtc.c: 53: currenttime.minutes = 0;
 20198  29B2  01C7               	clrf	0+(_currenttime)^080h+01h
 20199                           	line	54
 20200                           ;rtc.c: 54: currenttime.hours = 0;
 20201  29B3  01C8               	clrf	0+(_currenttime)^080h+02h
 20202                           	line	55
 20203                           ;rtc.c: 55: currenttime.weekday = 0;
 20204  29B4  01C9               	clrf	0+(_currenttime)^080h+03h
 20205  29B5  29B6               	goto	l17240
 20206                           	line	56
 20207                           	
 20208  29B6                     l17239:	
 20209                           	line	57
 20210                           	
 20211  29B6                     l17240:	
 20212  29B6  0008               	return
 20213                           	opt stack 0
 20214                           GLOBAL	__end_of_rtc_init
 20215  29B7                     	__end_of_rtc_init:
 20216 ;; =============== function _rtc_init ends ============
 20217                           
 20218                           	signat	_rtc_init,4216
 20219                           	global	_cmd2index
 20220                           psect	text3352,local,class=CODE,delta=2
 20221                           global __ptext3352
 20222  2DED                     __ptext3352:
 20223                           
 20224 ;; *************** function _cmd2index *****************
 20225 ;; Defined at:
 20226 ;;		line 189 in file "D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 20227 ;; Parameters:    Size  Location     Type
 20228 ;;  cmd             1    wreg     PTR unsigned char 
 20229 ;;		 -> linebuffer(20), 
 20230 ;; Auto vars:     Size  Location     Type
 20231 ;;  cmd             1   14[BANK0 ] PTR unsigned char 
 20232 ;;		 -> linebuffer(20), 
 20233 ;;  index           2   15[BANK0 ] int 
 20234 ;; Return value:  Size  Location     Type
 20235 ;;                  2   11[BANK0 ] int 
 20236 ;; Registers used:
 20237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20238 ;; Tracked objects:
 20239 ;;		On entry : 0/0
 20240 ;;		On exit  : 0/0
 20241 ;;		Unchanged: 0/0
 20242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20244 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 20245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20246 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20247 ;;Total ram usage:        6 bytes
 20248 ;; Hardware stack levels used:    1
 20249 ;; Hardware stack levels required when called:    3
 20250 ;; This function calls:
 20251 ;;		___bmul
 20252 ;;		_strncmp
 20253 ;; This function is called by:
 20254 ;;		_proc_line
 20255 ;; This function uses a non-reentrant model
 20256 ;;
 20257                           psect	text3352
 20258                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\cmdline.c"
 20259                           	line	189
 20260                           	global	__size_of_cmd2index
 20261  004E                     	__size_of_cmd2index	equ	__end_of_cmd2index-_cmd2index
 20262                           	
 20263  2DED                     _cmd2index:	
 20264                           	opt	stack 9
 20265                           ; Regs used in _cmd2index: [wreg-status,0+pclath+cstack]
 20266                           ;cmd2index@cmd stored from wreg
 20267  2DED  0020               	movlb 0	; select bank0
 20268  2DEE  00AF               	movwf	(cmd2index@cmd)
 20269                           	line	190
 20270                           	
 20271  2DEF                     l37423:	
 20272                           ;cmdline.c: 190: int index = 0;
 20273  2DEF  01B0               	clrf	(cmd2index@index)
 20274  2DF0  01B1               	clrf	(cmd2index@index+1)
 20275                           	line	192
 20276                           ;cmdline.c: 192: while (commands[index].function) {
 20277  2DF1  2E1E               	goto	l37433
 20278                           	
 20279  2DF2                     l15175:	
 20280                           	line	193
 20281                           	
 20282  2DF2                     l37425:	
 20283                           ;cmdline.c: 193: if (!strncmp (cmd, commands[index].cmd, (8)))
 20284  2DF2  3009               	movlw	(09h)
 20285  2DF3  0020               	movlb 0	; select bank0
 20286  2DF4  00AE               	movwf	(??_cmd2index+0)+0
 20287  2DF5  082E               	movf	(??_cmd2index+0)+0,w
 20288  2DF6  00A1               	movwf	(?___bmul)
 20289  2DF7  0830               	movf	(cmd2index@index),w
 20290  2DF8  31A9  2112  31AD   	fcall	___bmul
 20291  2DFB  3E10               	addlw	low(_commands|8000h)
 20292  2DFC  0020               	movlb 0	; select bank0
 20293  2DFD  00A5               	movwf	(?_strncmp)
 20294  2DFE  3085               	movlw	high(_commands|8000h)
 20295  2DFF  1803               	skipnc
 20296  2E00  0A89               	incf	wreg,f
 20297  2E01  00A6               	movwf	1+(?_strncmp)
 20298  2E02  3008               	movlw	low(08h)
 20299  2E03  00A7               	movwf	0+(?_strncmp)+02h
 20300  2E04  3000               	movlw	high(08h)
 20301  2E05  00A8               	movwf	(0+(?_strncmp)+02h)+1
 20302  2E06  082F               	movf	(cmd2index@cmd),w
 20303  2E07  31AE  263B  31AD   	fcall	_strncmp
 20304  2E0A  0020               	movlb 0	; select bank0
 20305  2E0B  0826               	movf	((1+(?_strncmp))),w
 20306  2E0C  0425               	iorwf	((0+(?_strncmp))),w
 20307  2E0D  1D03               	skipz
 20308  2E0E  2E10               	goto	u10591
 20309  2E0F  2E11               	goto	u10590
 20310  2E10                     u10591:
 20311  2E10  2E19               	goto	l37431
 20312  2E11                     u10590:
 20313                           	line	194
 20314                           	
 20315  2E11                     l37427:	
 20316                           ;cmdline.c: 194: return index;
 20317  2E11  0831               	movf	(cmd2index@index+1),w
 20318  2E12  01AD               	clrf	(?_cmd2index+1)
 20319  2E13  07AD               	addwf	(?_cmd2index+1)
 20320  2E14  0830               	movf	(cmd2index@index),w
 20321  2E15  01AC               	clrf	(?_cmd2index)
 20322  2E16  07AC               	addwf	(?_cmd2index)
 20323                           
 20324  2E17  2E3A               	goto	l15177
 20325                           	
 20326  2E18                     l37429:	
 20327  2E18  2E3A               	goto	l15177
 20328                           	
 20329  2E19                     l15176:	
 20330                           	line	195
 20331                           	
 20332  2E19                     l37431:	
 20333                           ;cmdline.c: 195: index++;
 20334  2E19  3001               	movlw	low(01h)
 20335  2E1A  07B0               	addwf	(cmd2index@index),f
 20336  2E1B  3000               	movlw	high(01h)
 20337  2E1C  3DB1               	addwfc	(cmd2index@index+1),f
 20338  2E1D  2E1E               	goto	l37433
 20339                           	line	196
 20340                           	
 20341  2E1E                     l15174:	
 20342                           	line	192
 20343                           	
 20344  2E1E                     l37433:	
 20345  2E1E  3009               	movlw	(09h)
 20346  2E1F  00AE               	movwf	(??_cmd2index+0)+0
 20347  2E20  082E               	movf	(??_cmd2index+0)+0,w
 20348  2E21  00A1               	movwf	(?___bmul)
 20349  2E22  0830               	movf	(cmd2index@index),w
 20350  2E23  31A9  2112  31AD   	fcall	___bmul
 20351  2E26  3E08               	addlw	08h
 20352  2E27  3E10               	addlw	low(_commands|8000h)
 20353  2E28  0084               	movwf	fsr0l
 20354  2E29  3085               	movlw	high(_commands|8000h)
 20355  2E2A  1803               	skipnc
 20356  2E2B  3E01               	addlw	1
 20357  2E2C  0085               	movwf	fsr0h
 20358  2E2D  0800               	movf	indf0,w ;code access
 20359  2E2E  3800               	iorlw	0
 20360  2E2F  1D03               	skipz
 20361  2E30  2E32               	goto	u10601
 20362  2E31  2E33               	goto	u10600
 20363  2E32                     u10601:
 20364  2E32  2DF2               	goto	l37425
 20365  2E33                     u10600:
 20366  2E33  2E34               	goto	l37435
 20367                           	
 20368  2E34                     l15178:	
 20369                           	line	198
 20370                           	
 20371  2E34                     l37435:	
 20372                           ;cmdline.c: 196: }
 20373                           ;cmdline.c: 198: return (-1);
 20374  2E34  30FF               	movlw	low(-1)
 20375  2E35  0020               	movlb 0	; select bank0
 20376  2E36  00AC               	movwf	(?_cmd2index)
 20377  2E37  30FF               	movlw	high(-1)
 20378  2E38  00AD               	movwf	((?_cmd2index))+1
 20379  2E39  2E3A               	goto	l15177
 20380                           	
 20381  2E3A                     l37437:	
 20382                           	line	199
 20383                           	
 20384  2E3A                     l15177:	
 20385  2E3A  0008               	return
 20386                           	opt stack 0
 20387                           GLOBAL	__end_of_cmd2index
 20388  2E3B                     	__end_of_cmd2index:
 20389 ;; =============== function _cmd2index ends ============
 20390                           
 20391                           	signat	_cmd2index,4218
 20392                           	global	_set_pacer
 20393                           psect	text3353,local,class=CODE,delta=2
 20394                           global __ptext3353
 20395  23C0                     __ptext3353:
 20396                           
 20397 ;; *************** function _set_pacer *****************
 20398 ;; Defined at:
 20399 ;;		line 479 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  pacer           1    wreg     unsigned char 
 20402 ;;  pattern         1    8[BANK0 ] unsigned char 
 20403 ;;  repeat          1    9[BANK0 ] unsigned char 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;  pacer           1   12[BANK0 ] unsigned char 
 20406 ;; Return value:  Size  Location     Type
 20407 ;;		None               void
 20408 ;; Registers used:
 20409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20418 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 20419 ;;Total ram usage:        5 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:    3
 20422 ;; This function calls:
 20423 ;;		___bmul
 20424 ;;		_timeoutnow
 20425 ;; This function is called by:
 20426 ;;		_set_LED_Error
 20427 ;;		_set_LED_Locked
 20428 ;;		_set_LED_Cartridge
 20429 ;;		_set_LED_Cat
 20430 ;;		_set_Beeper
 20431 ;;		_key_Beep
 20432 ;; This function uses a non-reentrant model
 20433 ;;
 20434                           psect	text3353
 20435                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 20436                           	line	479
 20437                           	global	__size_of_set_pacer
 20438  007A                     	__size_of_set_pacer	equ	__end_of_set_pacer-_set_pacer
 20439                           	
 20440  23C0                     _set_pacer:	
 20441                           	opt	stack 8
 20442                           ; Regs used in _set_pacer: [wreg+fsr1l-status,0+pclath+cstack]
 20443                           ;set_pacer@pacer stored from wreg
 20444                           	line	482
 20445  23C0  0020               	movlb 0	; select bank0
 20446  23C1  00AD               	movwf	(set_pacer@pacer)
 20447                           	
 20448  23C2                     l37413:	
 20449                           ;catgenie120.c: 480: if( repeat &&
 20450                           ;catgenie120.c: 481: (pacers[pacer].pattern == pattern) &&
 20451                           ;catgenie120.c: 482: (pacers[pacer].repeat == repeat) )
 20452  23C2  082A               	movf	(set_pacer@repeat),w
 20453  23C3  1D03               	skipz
 20454  23C4  2BC6               	goto	u10560
 20455  23C5  2BF4               	goto	l37421
 20456  23C6                     u10560:
 20457                           	
 20458  23C6                     l37415:	
 20459  23C6  300A               	movlw	(0Ah)
 20460  23C7  00AB               	movwf	(??_set_pacer+0)+0
 20461  23C8  082B               	movf	(??_set_pacer+0)+0,w
 20462  23C9  00A1               	movwf	(?___bmul)
 20463  23CA  082D               	movf	(set_pacer@pacer),w
 20464  23CB  31A9  2112  31A3   	fcall	___bmul
 20465  23CE  3E06               	addlw	06h
 20466  23CF  3E20               	addlw	_pacers&0ffh
 20467  23D0  0086               	movwf	fsr1l
 20468  23D1  3002               	movlw 2	; select bank4/5
 20469  23D2  0087               	movwf fsr1h	
 20470                           	
 20471  23D3  0801               	movf	indf1,w
 20472  23D4  0020               	movlb 0	; select bank0
 20473  23D5  0629               	xorwf	(set_pacer@pattern),w
 20474  23D6  1D03               	skipz
 20475  23D7  2BD9               	goto	u10571
 20476  23D8  2BDA               	goto	u10570
 20477  23D9                     u10571:
 20478  23D9  2BF4               	goto	l37421
 20479  23DA                     u10570:
 20480                           	
 20481  23DA                     l37417:	
 20482  23DA  300A               	movlw	(0Ah)
 20483  23DB  00AB               	movwf	(??_set_pacer+0)+0
 20484  23DC  082B               	movf	(??_set_pacer+0)+0,w
 20485  23DD  00A1               	movwf	(?___bmul)
 20486  23DE  082D               	movf	(set_pacer@pacer),w
 20487  23DF  31A9  2112  31A3   	fcall	___bmul
 20488  23E2  3E07               	addlw	07h
 20489  23E3  3E20               	addlw	_pacers&0ffh
 20490  23E4  0086               	movwf	fsr1l
 20491  23E5  3002               	movlw 2	; select bank4/5
 20492  23E6  0087               	movwf fsr1h	
 20493                           	
 20494  23E7  0C01               	rrf	indf1,w
 20495  23E8  0020               	movlb 0	; select bank0
 20496  23E9  00AC               	movwf	(??_set_pacer+1)+0
 20497  23EA  0CAC               	rrf	(??_set_pacer+1)+0,f
 20498  23EB  0C2C               	rrf	(??_set_pacer+1)+0,w
 20499  23EC  3901               	andlw	(1<<1)-1
 20500  23ED  062A               	xorwf	(set_pacer@repeat),w
 20501  23EE  1D03               	skipz
 20502  23EF  2BF1               	goto	u10581
 20503  23F0  2BF2               	goto	u10580
 20504  23F1                     u10581:
 20505  23F1  2BF4               	goto	l37421
 20506  23F2                     u10580:
 20507  23F2  2C39               	goto	l10999
 20508                           	line	483
 20509                           	
 20510  23F3                     l37419:	
 20511                           ;catgenie120.c: 483: return;
 20512  23F3  2C39               	goto	l10999
 20513                           	
 20514  23F4                     l10998:	
 20515                           	line	486
 20516                           	
 20517  23F4                     l37421:	
 20518                           ;catgenie120.c: 486: timeoutnow(&pacers[pacer].timer);
 20519  23F4  300A               	movlw	(0Ah)
 20520  23F5  00AB               	movwf	(??_set_pacer+0)+0
 20521  23F6  082B               	movf	(??_set_pacer+0)+0,w
 20522  23F7  00A1               	movwf	(?___bmul)
 20523  23F8  082D               	movf	(set_pacer@pacer),w
 20524  23F9  31A9  2112  31A3   	fcall	___bmul
 20525  23FC  3E20               	addlw	_pacers&0ffh
 20526  23FD  0020               	movlb 0	; select bank0
 20527  23FE  00A5               	movwf	(?_timeoutnow)
 20528  23FF  3002               	movlw	(0x4/2)
 20529  2400  00A6               	movwf	(?_timeoutnow+1)
 20530  2401  31A9  217E  31A3   	fcall	_timeoutnow
 20531                           	line	488
 20532                           ;catgenie120.c: 488: pacers[pacer].pattern_bit = 0x0;
 20533  2404  300A               	movlw	(0Ah)
 20534  2405  0020               	movlb 0	; select bank0
 20535  2406  00AB               	movwf	(??_set_pacer+0)+0
 20536  2407  082B               	movf	(??_set_pacer+0)+0,w
 20537  2408  00A1               	movwf	(?___bmul)
 20538  2409  082D               	movf	(set_pacer@pacer),w
 20539  240A  31A9  2112  31A3   	fcall	___bmul
 20540  240D  3E07               	addlw	07h
 20541  240E  3E20               	addlw	_pacers&0ffh
 20542  240F  0086               	movwf	fsr1l
 20543  2410  3002               	movlw 2	; select bank4/5
 20544  2411  0087               	movwf fsr1h	
 20545                           	
 20546  2412  30F8               	movlw	((0 & ((1<<3)-1))<<0)|not (((1<<3)-1)<<0)
 20547  2413  0581               	andwf	indf1,f
 20548                           	line	490
 20549                           ;catgenie120.c: 490: pacers[pacer].pattern = pattern;
 20550  2414  0020               	movlb 0	; select bank0
 20551  2415  0829               	movf	(set_pacer@pattern),w
 20552  2416  00AB               	movwf	(??_set_pacer+0)+0
 20553  2417  300A               	movlw	(0Ah)
 20554  2418  00AC               	movwf	(??_set_pacer+1)+0
 20555  2419  082C               	movf	(??_set_pacer+1)+0,w
 20556  241A  00A1               	movwf	(?___bmul)
 20557  241B  082D               	movf	(set_pacer@pacer),w
 20558  241C  31A9  2112  31A3   	fcall	___bmul
 20559  241F  3E06               	addlw	06h
 20560  2420  3E20               	addlw	_pacers&0ffh
 20561  2421  0086               	movwf	fsr1l
 20562  2422  3002               	movlw 2	; select bank4/5
 20563  2423  0087               	movwf fsr1h	
 20564                           	
 20565  2424  0020               	movlb 0	; select bank0
 20566  2425  082B               	movf	(??_set_pacer+0)+0,w
 20567  2426  0081               	movwf	indf1
 20568                           	line	492
 20569                           ;catgenie120.c: 492: pacers[pacer].repeat = repeat;
 20570  2427  300A               	movlw	(0Ah)
 20571  2428  00AB               	movwf	(??_set_pacer+0)+0
 20572  2429  082B               	movf	(??_set_pacer+0)+0,w
 20573  242A  00A1               	movwf	(?___bmul)
 20574  242B  082D               	movf	(set_pacer@pacer),w
 20575  242C  31A9  2112  31A3   	fcall	___bmul
 20576  242F  3E07               	addlw	07h
 20577  2430  3E20               	addlw	_pacers&0ffh
 20578  2431  0086               	movwf	fsr1l
 20579  2432  3002               	movlw 2	; select bank4/5
 20580  2433  0087               	movwf fsr1h	
 20581                           	
 20582  2434  0020               	movlb 0	; select bank0
 20583  2435  082A               	movf	(set_pacer@repeat),w
 20584  2436  1181               	bcf	indf1,3
 20585  2437  1D03               	skipz
 20586  2438  1581               	bsf	indf1,3
 20587                           	line	493
 20588                           	
 20589  2439                     l10999:	
 20590  2439  0008               	return
 20591                           	opt stack 0
 20592                           GLOBAL	__end_of_set_pacer
 20593  243A                     	__end_of_set_pacer:
 20594 ;; =============== function _set_pacer ends ============
 20595                           
 20596                           	signat	_set_pacer,12408
 20597                           	global	_both_long
 20598                           psect	text3354,local,class=CODE,delta=2
 20599                           global __ptext3354
 20600  37CE                     __ptext3354:
 20601                           
 20602 ;; *************** function _both_long *****************
 20603 ;; Defined at:
 20604 ;;		line 600 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 20605 ;; Parameters:    Size  Location     Type
 20606 ;;		None
 20607 ;; Auto vars:     Size  Location     Type
 20608 ;;		None
 20609 ;; Return value:  Size  Location     Type
 20610 ;;		None               void
 20611 ;; Registers used:
 20612 ;;		wreg, status,2, status,0, pclath, cstack
 20613 ;; Tracked objects:
 20614 ;;		On entry : 0/0
 20615 ;;		On exit  : 0/0
 20616 ;;		Unchanged: 0/0
 20617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20621 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20622 ;;Total ram usage:        1 bytes
 20623 ;; Hardware stack levels used:    1
 20624 ;; Hardware stack levels required when called:    3
 20625 ;; This function calls:
 20626 ;;		_eeprom_write
 20627 ;; This function is called by:
 20628 ;;		_userinterface_work
 20629 ;; This function uses a non-reentrant model
 20630 ;;
 20631                           psect	text3354
 20632                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 20633                           	line	600
 20634                           	global	__size_of_both_long
 20635  0010                     	__size_of_both_long	equ	__end_of_both_long-_both_long
 20636                           	
 20637  37CE                     _both_long:	
 20638                           	opt	stack 11
 20639                           ; Regs used in _both_long: [wreg+status,2+status,0+pclath+cstack]
 20640                           	line	601
 20641                           	
 20642  37CE                     l37409:	
 20643                           ;userinterface.c: 601: locked = !locked;
 20644  37CE  3008               	movlw	1<<((_locked)&7)
 20645  37CF  06F1               	xorwf	((_locked)/8),f
 20646                           	line	602
 20647                           	
 20648  37D0                     l37411:	
 20649                           ;userinterface.c: 602: eeprom_write((2), !locked);
 20650  37D0  1003               	clrc
 20651  37D1  1DF1               	btfss	(_locked/8),(_locked)&7
 20652  37D2  1403               	setc
 20653  37D3  3000               	movlw	0
 20654  37D4  3D09               	addwfc	wreg,w
 20655  37D5  0020               	movlb 0	; select bank0
 20656  37D6  00A5               	movwf	(??_both_long+0)+0
 20657  37D7  0825               	movf	(??_both_long+0)+0,w
 20658  37D8  00A1               	movwf	(?_eeprom_write)
 20659  37D9  3002               	movlw	(02h)
 20660  37DA  31AB  23F5  31B7   	fcall	_eeprom_write
 20661                           	line	603
 20662                           	
 20663  37DD                     l8818:	
 20664  37DD  0008               	return
 20665                           	opt stack 0
 20666                           GLOBAL	__end_of_both_long
 20667  37DE                     	__end_of_both_long:
 20668 ;; =============== function _both_long ends ============
 20669                           
 20670                           	signat	_both_long,88
 20671                           	global	_settimeout
 20672                           psect	text3355,local,class=CODE,delta=2
 20673                           global __ptext3355
 20674  20CF                     __ptext3355:
 20675                           
 20676 ;; *************** function _settimeout *****************
 20677 ;; Defined at:
 20678 ;;		line 82 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20679 ;; Parameters:    Size  Location     Type
 20680 ;;  timer_p         2   12[BANK0 ] const PTR struct timer
 20681 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 20682 ;;		 -> pacers(60), debouncers(18), cattimer(6), autotimer(6), 
 20683 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 20684 ;;		 -> timer_fill(6), timer_waitins(6), 
 20685 ;;  timout          4   14[BANK0 ] const unsigned long 
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;  tempLongTick    4   22[BANK0 ] unsigned long 
 20688 ;;  longshort       2   26[BANK0 ] PTR struct longshort
 20689 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 20690 ;;		 -> pacers(60), debouncers(18), cattimer(6), autotimer(6), 
 20691 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 20692 ;;		 -> timer_fill(6), timer_waitins(6), 
 20693 ;; Return value:  Size  Location     Type
 20694 ;;		None               void
 20695 ;; Registers used:
 20696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20697 ;; Tracked objects:
 20698 ;;		On entry : 0/0
 20699 ;;		On exit  : 0/0
 20700 ;;		Unchanged: 0/0
 20701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20702 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20703 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 20704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 20705 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 20706 ;;Total ram usage:       16 bytes
 20707 ;; Hardware stack levels used:    1
 20708 ;; Hardware stack levels required when called:    3
 20709 ;; This function calls:
 20710 ;;		_gettimestamp
 20711 ;; This function is called by:
 20712 ;;		_litterlanguage_pause
 20713 ;;		_exe_instruction
 20714 ;;		_catsensor_event
 20715 ;;		_process_button
 20716 ;;		_setup_short
 20717 ;;		_both_short
 20718 ;;		_update_autotimer
 20719 ;;		_catgenie_work
 20720 ;;		_catsensor_work
 20721 ;;		_rtc_init
 20722 ;;		_water_work
 20723 ;;		_incminutes
 20724 ;;		_inchours
 20725 ;;		_incweekday
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           psect	text3355
 20729                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 20730                           	line	82
 20731                           	global	__size_of_settimeout
 20732  0065                     	__size_of_settimeout	equ	__end_of_settimeout-_settimeout
 20733                           	
 20734  20CF                     _settimeout:	
 20735                           	opt	stack 8
 20736                           ; Regs used in _settimeout: [wreg+fsr1l-status,0+pclath+cstack]
 20737                           	line	84
 20738                           	
 20739  20CF                     l37397:	
 20740                           ;timer.c: 83: unsigned long tempLongTicks;
 20741                           ;timer.c: 84: struct longshort *longshort = (struct longshort*)timer_p;
 20742  20CF  0020               	movlb 0	; select bank0
 20743  20D0  082E               	movf	(settimeout@timer_p+1),w
 20744  20D1  01BC               	clrf	(settimeout@longshort+1)
 20745  20D2  07BC               	addwf	(settimeout@longshort+1)
 20746  20D3  082D               	movf	(settimeout@timer_p),w
 20747  20D4  01BB               	clrf	(settimeout@longshort)
 20748  20D5  07BB               	addwf	(settimeout@longshort)
 20749                           
 20750                           	line	87
 20751                           	
 20752  20D6                     l37399:	
 20753                           ;timer.c: 87: gettimestamp(timer_p);
 20754  20D6  082E               	movf	(settimeout@timer_p+1),w
 20755  20D7  01A2               	clrf	(?_gettimestamp+1)
 20756  20D8  07A2               	addwf	(?_gettimestamp+1)
 20757  20D9  082D               	movf	(settimeout@timer_p),w
 20758  20DA  01A1               	clrf	(?_gettimestamp)
 20759  20DB  07A1               	addwf	(?_gettimestamp)
 20760                           
 20761  20DC  31AD  2557  31A0   	fcall	_gettimestamp
 20762                           	line	90
 20763                           	
 20764  20DF                     l37401:	
 20765                           ;timer.c: 90: if (!timout)
 20766  20DF  0020               	movlb 0	; select bank0
 20767  20E0  0832               	movf	(settimeout@timout+3),w
 20768  20E1  0431               	iorwf	(settimeout@timout+2),w
 20769  20E2  0430               	iorwf	(settimeout@timout+1),w
 20770  20E3  042F               	iorwf	(settimeout@timout),w
 20771  20E4  1D03               	skipz
 20772  20E5  28E7               	goto	u10541
 20773  20E6  28E8               	goto	u10540
 20774  20E7                     u10541:
 20775  20E7  28EA               	goto	l37405
 20776  20E8                     u10540:
 20777  20E8  2933               	goto	l21374
 20778                           	line	91
 20779                           	
 20780  20E9                     l37403:	
 20781                           ;timer.c: 91: return;
 20782  20E9  2933               	goto	l21374
 20783                           	
 20784  20EA                     l21373:	
 20785                           	line	94
 20786                           	
 20787  20EA                     l37405:	
 20788                           ;timer.c: 94: tempLongTicks = longshort->ls_longTicks;
 20789  20EA  083B               	movf	(settimeout@longshort),w
 20790  20EB  0086               	movwf	fsr1l
 20791  20EC  083C               	movf	(settimeout@longshort+1),w
 20792  20ED  0087               	movwf	fsr1h
 20793                           
 20794  20EE  3F40               	moviw	[0]fsr1
 20795  20EF  00B7               	movwf	(settimeout@tempLongTicks)
 20796  20F0  3F41               	moviw	[1]fsr1
 20797  20F1  00B8               	movwf	(settimeout@tempLongTicks+1)
 20798  20F2  3F42               	moviw	[2]fsr1
 20799  20F3  00B9               	movwf	(settimeout@tempLongTicks+2)
 20800  20F4  3F43               	moviw	[3]fsr1
 20801  20F5  00BA               	movwf	(settimeout@tempLongTicks+3)
 20802                           	line	97
 20803                           ;timer.c: 97: longshort->ls_longTicks += timout;
 20804  20F6  083B               	movf	(settimeout@longshort),w
 20805  20F7  0086               	movwf	fsr1l
 20806  20F8  083C               	movf	(settimeout@longshort+1),w
 20807  20F9  0087               	movwf	fsr1h
 20808                           
 20809  20FA  082F               	movf	(settimeout@timout),w
 20810  20FB  0781               	addwf	indf1,f
 20811  20FC  3141               	addfsr	fsr1,1
 20812  20FD  0830               	movf	(settimeout@timout+1),w
 20813  20FE  3D81               	addwfc	indf1,f
 20814  20FF  3141               	addfsr	fsr1,1
 20815  2100  0831               	movf	(settimeout@timout+2),w
 20816  2101  3D81               	addwfc	indf1,f
 20817  2102  3141               	addfsr	fsr1,1
 20818  2103  0832               	movf	(settimeout@timout+3),w
 20819  2104  3D81               	addwfc	indf1,f
 20820                           
 20821                           	line	100
 20822                           ;timer.c: 100: if (longshort->ls_longTicks <= tempLongTicks)
 20823  2105  083B               	movf	(settimeout@longshort),w
 20824  2106  0086               	movwf	fsr1l
 20825  2107  083C               	movf	(settimeout@longshort+1),w
 20826  2108  0087               	movwf	fsr1h
 20827                           
 20828  2109  3F40               	moviw	[0]fsr1
 20829  210A  00B3               	movwf	((??_settimeout+0)+0+0)
 20830  210B  3F41               	moviw	[1]fsr1
 20831  210C  00B4               	movwf	((??_settimeout+0)+0+1)
 20832  210D  3F42               	moviw	[2]fsr1
 20833  210E  00B5               	movwf	((??_settimeout+0)+0+2)
 20834  210F  3F43               	moviw	[3]fsr1
 20835  2110  00B6               	movwf	((??_settimeout+0)+0+3)
 20836  2111  0836               	movf	3+(??_settimeout+0)+0,w
 20837  2112  023A               	subwf	(settimeout@tempLongTicks+3),w
 20838  2113  1D03               	skipz
 20839  2114  291F               	goto	u10555
 20840  2115  0835               	movf	2+(??_settimeout+0)+0,w
 20841  2116  0239               	subwf	(settimeout@tempLongTicks+2),w
 20842  2117  1D03               	skipz
 20843  2118  291F               	goto	u10555
 20844  2119  0834               	movf	1+(??_settimeout+0)+0,w
 20845  211A  0238               	subwf	(settimeout@tempLongTicks+1),w
 20846  211B  1D03               	skipz
 20847  211C  291F               	goto	u10555
 20848  211D  0833               	movf	0+(??_settimeout+0)+0,w
 20849  211E  0237               	subwf	(settimeout@tempLongTicks),w
 20850  211F                     u10555:
 20851  211F  1C03               	skipc
 20852  2120  2922               	goto	u10551
 20853  2121  2923               	goto	u10550
 20854  2122                     u10551:
 20855  2122  2933               	goto	l21374
 20856  2123                     u10550:
 20857                           	line	101
 20858                           	
 20859  2123                     l37407:	
 20860                           ;timer.c: 101: longshort->ms_shortTicks++;
 20861  2123  083B               	movf	(settimeout@longshort),w
 20862  2124  3E04               	addlw	low(04h)
 20863  2125  00B3               	movwf	(??_settimeout+0)+0
 20864  2126  3000               	movlw	high(04h)
 20865  2127  3D3C               	addwfc	(settimeout@longshort+1),w
 20866  2128  00B4               	movwf	1+(??_settimeout+0)+0
 20867  2129  0833               	movf	0+(??_settimeout+0)+0,w
 20868  212A  0086               	movwf	fsr1l
 20869  212B  0834               	movf	1+(??_settimeout+0)+0,w
 20870  212C  0087               	movwf	fsr1h
 20871                           
 20872  212D  3001               	movlw	01h
 20873  212E  0781               	addwf	indf1,f
 20874  212F  3141               	addfsr	fsr1,1
 20875  2130  1803               	skipnc
 20876  2131  0A81               	incf	indf1,f
 20877  2132  2933               	goto	l21374
 20878                           	
 20879  2133                     l21375:	
 20880                           	line	102
 20881                           	
 20882  2133                     l21374:	
 20883  2133  0008               	return
 20884                           	opt stack 0
 20885                           GLOBAL	__end_of_settimeout
 20886  2134                     	__end_of_settimeout:
 20887 ;; =============== function _settimeout ends ============
 20888                           
 20889                           	signat	_settimeout,8312
 20890                           	global	_get_instruction
 20891                           psect	text3356,local,class=CODE,delta=2
 20892                           global __ptext3356
 20893  01ED                     __ptext3356:
 20894                           
 20895 ;; *************** function _get_instruction *****************
 20896 ;; Defined at:
 20897 ;;		line 469 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;  instruction     1    wreg     PTR struct instruction
 20900 ;;		 -> cur_instruction(3), 
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;  instruction     1    4[BANK0 ] PTR struct instruction
 20903 ;;		 -> cur_instruction(3), 
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1    wreg      unsigned char 
 20906 ;; Registers used:
 20907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/0
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20917 ;;Total ram usage:        1 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    3
 20920 ;; This function calls:
 20921 ;;		_romwashprogram_getins
 20922 ;; This function is called by:
 20923 ;;		_litterlanguage_work
 20924 ;; This function uses a non-reentrant model
 20925 ;;
 20926                           psect	text3356
 20927                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 20928                           	line	469
 20929                           	global	__size_of_get_instruction
 20930  0013                     	__size_of_get_instruction	equ	__end_of_get_instruction-_get_instruction
 20931                           	
 20932  01ED                     _get_instruction:	
 20933                           	opt	stack 11
 20934                           ; Regs used in _get_instruction: [wreg-status,0+pclath+cstack]
 20935                           ;get_instruction@instruction stored from wreg
 20936  01ED  0020               	movlb 0	; select bank0
 20937  01EE  00A5               	movwf	(get_instruction@instruction)
 20938                           	line	470
 20939                           	
 20940  01EF                     l37387:	
 20941                           ;litterlanguage.c: 470: switch (prg_source) {
 20942  01EF  29F9               	goto	l37395
 20943                           	line	471
 20944                           ;litterlanguage.c: 471: default:
 20945                           	
 20946  01F0                     l4348:	
 20947  01F0  29F1               	goto	l37389
 20948                           	line	472
 20949                           ;litterlanguage.c: 472: case 0:
 20950                           	
 20951  01F1                     l4349:	
 20952                           	line	473
 20953                           	
 20954  01F1                     l37389:	
 20955                           ;litterlanguage.c: 473: return romwashprogram_getins(instruction);
 20956  01F1  0020               	movlb 0	; select bank0
 20957  01F2  0825               	movf	(get_instruction@instruction),w
 20958  01F3  31A8  20F8  3181   	fcall	_romwashprogram_getins
 20959  01F6  29FF               	goto	l4350
 20960                           	
 20961  01F7                     l37391:	
 20962  01F7  29FF               	goto	l4350
 20963                           	line	474
 20964                           	
 20965  01F8                     l37393:	
 20966                           ;litterlanguage.c: 474: }
 20967  01F8  29FF               	goto	l4350
 20968                           	line	470
 20969                           	
 20970  01F9                     l4347:	
 20971                           	
 20972  01F9                     l37395:	
 20973  01F9  0021               	movlb 1	; select bank1
 20974  01FA  085A               	movf	(_prg_source)^080h,w
 20975                           	; Switch size 1, requested type "space"
 20976                           ; Number of cases is 1, Range of values is 0 to 0
 20977                           ; switch strategies available:
 20978                           ; Name         Instructions Cycles
 20979                           ; simple_byte            4     3 (average)
 20980                           ; direct_byte            8     6 (fixed)
 20981                           ; jumptable            260     6 (fixed)
 20982                           ; rangetable             5     4 (fixed)
 20983                           ; spacedrange            7     6 (fixed)
 20984                           ; locatedrange           1     3 (fixed)
 20985                           ;	Chosen strategy is simple_byte
 20986                           
 20987                           	opt asmopt_off
 20988  01FB  3A00               	xorlw	0^0	; case 0
 20989  01FC  1903               	skipnz
 20990  01FD  29F1               	goto	l37389
 20991  01FE  29F1               	goto	l37389
 20992                           	opt asmopt_on
 20993                           
 20994                           	line	474
 20995                           	
 20996  01FF                     l4351:	
 20997                           	line	475
 20998                           	
 20999  01FF                     l4350:	
 21000  01FF  0008               	return
 21001                           	opt stack 0
 21002                           GLOBAL	__end_of_get_instruction
 21003  0200                     	__end_of_get_instruction:
 21004 ;; =============== function _get_instruction ends ============
 21005                           
 21006                           	signat	_get_instruction,4217
 21007                           	global	_req_instruction
 21008                           psect	text3357,local,class=CODE,delta=2
 21009                           global __ptext3357
 21010  2860                     __ptext3357:
 21011                           
 21012 ;; *************** function _req_instruction *****************
 21013 ;; Defined at:
 21014 ;;		line 461 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 21015 ;; Parameters:    Size  Location     Type
 21016 ;;  instruction     2    2[BANK0 ] PTR const struct instruc
 21017 ;;		 -> cleanupprogram(36), washprogram(303), cur_instruction(3), ROM(16384), 
 21018 ;; Auto vars:     Size  Location     Type
 21019 ;;		None
 21020 ;; Return value:  Size  Location     Type
 21021 ;;		None               void
 21022 ;; Registers used:
 21023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21024 ;; Tracked objects:
 21025 ;;		On entry : 0/0
 21026 ;;		On exit  : 0/0
 21027 ;;		Unchanged: 0/0
 21028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21033 ;;Total ram usage:        2 bytes
 21034 ;; Hardware stack levels used:    1
 21035 ;; Hardware stack levels required when called:    3
 21036 ;; This function calls:
 21037 ;;		_romwashprogram_reqins
 21038 ;; This function is called by:
 21039 ;;		_litterlanguage_work
 21040 ;; This function uses a non-reentrant model
 21041 ;;
 21042                           psect	text3357
 21043                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 21044                           	line	461
 21045                           	global	__size_of_req_instruction
 21046  0013                     	__size_of_req_instruction	equ	__end_of_req_instruction-_req_instruction
 21047                           	
 21048  2860                     _req_instruction:	
 21049                           	opt	stack 11
 21050                           ; Regs used in _req_instruction: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21051                           	line	462
 21052                           	
 21053  2860                     l37381:	
 21054                           ;litterlanguage.c: 462: switch (prg_source) {
 21055  2860  286C               	goto	l37385
 21056                           	line	463
 21057                           ;litterlanguage.c: 463: case 0:
 21058                           	
 21059  2861                     l4342:	
 21060                           	line	464
 21061                           	
 21062  2861                     l37383:	
 21063                           ;litterlanguage.c: 464: romwashprogram_reqins(instruction);
 21064  2861  0020               	movlb 0	; select bank0
 21065  2862  0824               	movf	(req_instruction@instruction+1),w
 21066  2863  01A2               	clrf	(?_romwashprogram_reqins+1)
 21067  2864  07A2               	addwf	(?_romwashprogram_reqins+1)
 21068  2865  0823               	movf	(req_instruction@instruction),w
 21069  2866  01A1               	clrf	(?_romwashprogram_reqins)
 21070  2867  07A1               	addwf	(?_romwashprogram_reqins)
 21071                           
 21072  2868  31A8  2032  31A8   	fcall	_romwashprogram_reqins
 21073                           	line	465
 21074                           ;litterlanguage.c: 465: }
 21075  286B  2872               	goto	l4344
 21076                           	line	462
 21077                           	
 21078  286C                     l4341:	
 21079                           	
 21080  286C                     l37385:	
 21081  286C  0021               	movlb 1	; select bank1
 21082  286D  085A               	movf	(_prg_source)^080h,w
 21083                           	; Switch size 1, requested type "space"
 21084                           ; Number of cases is 1, Range of values is 0 to 0
 21085                           ; switch strategies available:
 21086                           ; Name         Instructions Cycles
 21087                           ; simple_byte            4     3 (average)
 21088                           ; direct_byte            8     6 (fixed)
 21089                           ; jumptable            260     6 (fixed)
 21090                           ; rangetable             5     4 (fixed)
 21091                           ; spacedrange            7     6 (fixed)
 21092                           ; locatedrange           1     3 (fixed)
 21093                           ;	Chosen strategy is simple_byte
 21094                           
 21095                           	opt asmopt_off
 21096  286E  3A00               	xorlw	0^0	; case 0
 21097  286F  1903               	skipnz
 21098  2870  2861               	goto	l37383
 21099  2871  2872               	goto	l4344
 21100                           	opt asmopt_on
 21101                           
 21102                           	line	465
 21103                           	
 21104  2872                     l4343:	
 21105                           	line	466
 21106                           	
 21107  2872                     l4344:	
 21108  2872  0008               	return
 21109                           	opt stack 0
 21110                           GLOBAL	__end_of_req_instruction
 21111  2873                     	__end_of_req_instruction:
 21112 ;; =============== function _req_instruction ends ============
 21113                           
 21114                           	signat	_req_instruction,4216
 21115                           	global	_timeoutexpired
 21116                           psect	text3358,local,class=CODE,delta=2
 21117                           global __ptext3358
 21118  234C                     __ptext3358:
 21119                           
 21120 ;; *************** function _timeoutexpired *****************
 21121 ;; Defined at:
 21122 ;;		line 170 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 21123 ;; Parameters:    Size  Location     Type
 21124 ;;  timer_p         2    8[BANK0 ] const PTR const struct t
 21125 ;;		 -> sensortimer(6), second(6), pingtime(6), debouncer(6), 
 21126 ;;		 -> pacers(60), debouncers(18), cattimer(6), autotimer(6), 
 21127 ;;		 -> holdtimeout(6), cartridgetimeout(6), timer_autodose(6), timer_drain(6), 
 21128 ;;		 -> timer_fill(6), timer_waitins(6), 
 21129 ;; Auto vars:     Size  Location     Type
 21130 ;;  currentTime     6   16[BANK0 ] struct timer
 21131 ;; Return value:  Size  Location     Type
 21132 ;;                  1    wreg      unsigned char 
 21133 ;; Registers used:
 21134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21135 ;; Tracked objects:
 21136 ;;		On entry : 0/0
 21137 ;;		On exit  : 0/0
 21138 ;;		Unchanged: 0/0
 21139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21141 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 21142 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 21143 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 21144 ;;Total ram usage:       14 bytes
 21145 ;; Hardware stack levels used:    1
 21146 ;; Hardware stack levels required when called:    3
 21147 ;; This function calls:
 21148 ;;		_gettimestamp
 21149 ;; This function is called by:
 21150 ;;		_litterlanguage_work
 21151 ;;		_wait_instruction
 21152 ;;		_userinterface_work
 21153 ;;		_catgenie_work
 21154 ;;		_catsensor_work
 21155 ;;		_rtc_work
 21156 ;;		_water_work
 21157 ;; This function uses a non-reentrant model
 21158 ;;
 21159                           psect	text3358
 21160                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 21161                           	line	170
 21162                           	global	__size_of_timeoutexpired
 21163  0074                     	__size_of_timeoutexpired	equ	__end_of_timeoutexpired-_timeoutexpired
 21164                           	
 21165  234C                     _timeoutexpired:	
 21166                           	opt	stack 10
 21167                           ; Regs used in _timeoutexpired: [wreg+fsr1l-status,0+pclath+cstack]
 21168                           	line	174
 21169                           	
 21170  234C                     l37353:	
 21171                           ;timer.c: 171: struct timer currentTime;
 21172                           ;timer.c: 174: gettimestamp (&currentTime);
 21173  234C  3031               	movlw	(timeoutexpired@currentTime&0ffh)
 21174  234D  0020               	movlb 0	; select bank0
 21175  234E  00A1               	movwf	(?_gettimestamp)
 21176  234F  3000               	movlw	0x0/2
 21177  2350  00A2               	movwf	(?_gettimestamp+1)
 21178  2351  31AD  2557  31A3   	fcall	_gettimestamp
 21179                           	line	176
 21180                           	
 21181  2354                     l37355:	
 21182                           ;timer.c: 176: if (currentTime.overflows == timer_p->overflows) {
 21183  2354  0020               	movlb 0	; select bank0
 21184  2355  0829               	movf	(timeoutexpired@timer_p),w
 21185  2356  3E02               	addlw	low(02h)
 21186  2357  00AB               	movwf	(??_timeoutexpired+0)+0
 21187  2358  3000               	movlw	high(02h)
 21188  2359  3D2A               	addwfc	(timeoutexpired@timer_p+1),w
 21189  235A  00AC               	movwf	1+(??_timeoutexpired+0)+0
 21190  235B  082B               	movf	0+(??_timeoutexpired+0)+0,w
 21191  235C  0086               	movwf	fsr1l
 21192  235D  082C               	movf	1+(??_timeoutexpired+0)+0,w
 21193  235E  0087               	movwf	fsr1h
 21194                           
 21195  235F  3F40               	moviw	[0]fsr1
 21196  2360  00AD               	movwf	((??_timeoutexpired+2)+0+0)
 21197  2361  3F41               	moviw	[1]fsr1
 21198  2362  00AE               	movwf	((??_timeoutexpired+2)+0+1)
 21199  2363  3F42               	moviw	[2]fsr1
 21200  2364  00AF               	movwf	((??_timeoutexpired+2)+0+2)
 21201  2365  3F43               	moviw	[3]fsr1
 21202  2366  00B0               	movwf	((??_timeoutexpired+2)+0+3)
 21203  2367  0830               	movf	3+(??_timeoutexpired+2)+0,w
 21204  2368  0636               	xorwf	3+(timeoutexpired@currentTime)+02h,w
 21205  2369  1D03               	skipz
 21206  236A  2B75               	goto	u10515
 21207  236B  082F               	movf	2+(??_timeoutexpired+2)+0,w
 21208  236C  0635               	xorwf	2+(timeoutexpired@currentTime)+02h,w
 21209  236D  1D03               	skipz
 21210  236E  2B75               	goto	u10515
 21211  236F  082E               	movf	1+(??_timeoutexpired+2)+0,w
 21212  2370  0634               	xorwf	1+(timeoutexpired@currentTime)+02h,w
 21213  2371  1D03               	skipz
 21214  2372  2B75               	goto	u10515
 21215  2373  082D               	movf	0+(??_timeoutexpired+2)+0,w
 21216  2374  0633               	xorwf	0+(timeoutexpired@currentTime)+02h,w
 21217  2375                     u10515:
 21218  2375  1D03               	skipz
 21219  2376  2B78               	goto	u10511
 21220  2377  2B79               	goto	u10510
 21221  2378                     u10511:
 21222  2378  2B93               	goto	l37369
 21223  2379                     u10510:
 21224                           	line	177
 21225                           	
 21226  2379                     l37357:	
 21227                           ;timer.c: 177: if (currentTime.timer1 >= timer_p->timer1)
 21228  2379  0829               	movf	(timeoutexpired@timer_p),w
 21229  237A  0086               	movwf	fsr1l
 21230  237B  082A               	movf	(timeoutexpired@timer_p+1),w
 21231  237C  0087               	movwf	fsr1h
 21232                           
 21233  237D  3F40               	moviw	[0]fsr1
 21234  237E  00AB               	movwf	(??_timeoutexpired+0)+0
 21235  237F  3F41               	moviw	[1]fsr1
 21236  2380  00AC               	movwf	(??_timeoutexpired+0)+0+1
 21237  2381  082C               	movf	1+(??_timeoutexpired+0)+0,w
 21238  2382  0232               	subwf	(timeoutexpired@currentTime+1),w
 21239  2383  1D03               	skipz
 21240  2384  2B87               	goto	u10525
 21241  2385  082B               	movf	0+(??_timeoutexpired+0)+0,w
 21242  2386  0231               	subwf	(timeoutexpired@currentTime),w
 21243  2387                     u10525:
 21244  2387  1C03               	skipc
 21245  2388  2B8A               	goto	u10521
 21246  2389  2B8B               	goto	u10520
 21247  238A                     u10521:
 21248  238A  2B8F               	goto	l37365
 21249  238B                     u10520:
 21250                           	line	178
 21251                           	
 21252  238B                     l37359:	
 21253                           ;timer.c: 178: return 1;
 21254  238B  3001               	movlw	(01h)
 21255  238C  2BBF               	goto	l21391
 21256                           	
 21257  238D                     l37361:	
 21258  238D  2BBF               	goto	l21391
 21259                           	
 21260  238E                     l37363:	
 21261  238E  2BBF               	goto	l21391
 21262                           	line	179
 21263                           	
 21264  238F                     l21390:	
 21265                           	line	180
 21266                           	
 21267  238F                     l37365:	
 21268                           ;timer.c: 179: else
 21269                           ;timer.c: 180: return 0;
 21270  238F  3000               	movlw	(0)
 21271  2390  2BBF               	goto	l21391
 21272                           	
 21273  2391                     l37367:	
 21274  2391  2BBF               	goto	l21391
 21275                           	
 21276  2392                     l21392:	
 21277                           	line	181
 21278                           ;timer.c: 181: } else {
 21279  2392  2BBF               	goto	l21391
 21280                           	
 21281  2393                     l21389:	
 21282                           	line	182
 21283                           	
 21284  2393                     l37369:	
 21285                           ;timer.c: 182: if (currentTime.overflows > timer_p->overflows)
 21286  2393  0829               	movf	(timeoutexpired@timer_p),w
 21287  2394  3E02               	addlw	low(02h)
 21288  2395  00AB               	movwf	(??_timeoutexpired+0)+0
 21289  2396  3000               	movlw	high(02h)
 21290  2397  3D2A               	addwfc	(timeoutexpired@timer_p+1),w
 21291  2398  00AC               	movwf	1+(??_timeoutexpired+0)+0
 21292  2399  082B               	movf	0+(??_timeoutexpired+0)+0,w
 21293  239A  0086               	movwf	fsr1l
 21294  239B  082C               	movf	1+(??_timeoutexpired+0)+0,w
 21295  239C  0087               	movwf	fsr1h
 21296                           
 21297  239D  3F40               	moviw	[0]fsr1
 21298  239E  00AD               	movwf	((??_timeoutexpired+2)+0+0)
 21299  239F  3F41               	moviw	[1]fsr1
 21300  23A0  00AE               	movwf	((??_timeoutexpired+2)+0+1)
 21301  23A1  3F42               	moviw	[2]fsr1
 21302  23A2  00AF               	movwf	((??_timeoutexpired+2)+0+2)
 21303  23A3  3F43               	moviw	[3]fsr1
 21304  23A4  00B0               	movwf	((??_timeoutexpired+2)+0+3)
 21305  23A5  0836               	movf	3+(timeoutexpired@currentTime)+02h,w
 21306  23A6  0230               	subwf	3+(??_timeoutexpired+2)+0,w
 21307  23A7  1D03               	skipz
 21308  23A8  2BB3               	goto	u10535
 21309  23A9  0835               	movf	2+(timeoutexpired@currentTime)+02h,w
 21310  23AA  022F               	subwf	2+(??_timeoutexpired+2)+0,w
 21311  23AB  1D03               	skipz
 21312  23AC  2BB3               	goto	u10535
 21313  23AD  0834               	movf	1+(timeoutexpired@currentTime)+02h,w
 21314  23AE  022E               	subwf	1+(??_timeoutexpired+2)+0,w
 21315  23AF  1D03               	skipz
 21316  23B0  2BB3               	goto	u10535
 21317  23B1  0833               	movf	0+(timeoutexpired@currentTime)+02h,w
 21318  23B2  022D               	subwf	0+(??_timeoutexpired+2)+0,w
 21319  23B3                     u10535:
 21320  23B3  1803               	skipnc
 21321  23B4  2BB6               	goto	u10531
 21322  23B5  2BB7               	goto	u10530
 21323  23B6                     u10531:
 21324  23B6  2BBB               	goto	l37377
 21325  23B7                     u10530:
 21326                           	line	183
 21327                           	
 21328  23B7                     l37371:	
 21329                           ;timer.c: 183: return 1;
 21330  23B7  3001               	movlw	(01h)
 21331  23B8  2BBF               	goto	l21391
 21332                           	
 21333  23B9                     l37373:	
 21334  23B9  2BBF               	goto	l21391
 21335                           	
 21336  23BA                     l37375:	
 21337  23BA  2BBF               	goto	l21391
 21338                           	line	184
 21339                           	
 21340  23BB                     l21394:	
 21341                           	line	185
 21342                           	
 21343  23BB                     l37377:	
 21344                           ;timer.c: 184: else
 21345                           ;timer.c: 185: return 0;
 21346  23BB  3000               	movlw	(0)
 21347  23BC  2BBF               	goto	l21391
 21348                           	
 21349  23BD                     l37379:	
 21350  23BD  2BBF               	goto	l21391
 21351                           	
 21352  23BE                     l21395:	
 21353  23BE  2BBF               	goto	l21391
 21354                           	line	186
 21355                           	
 21356  23BF                     l21393:	
 21357                           	line	187
 21358                           	
 21359  23BF                     l21391:	
 21360  23BF  0008               	return
 21361                           	opt stack 0
 21362                           GLOBAL	__end_of_timeoutexpired
 21363  23C0                     	__end_of_timeoutexpired:
 21364 ;; =============== function _timeoutexpired ends ============
 21365                           
 21366                           	signat	_timeoutexpired,4217
 21367                           	global	_printf
 21368                           psect	text3359,local,class=CODE,delta=2
 21369                           global __ptext3359
 21370  14A0                     __ptext3359:
 21371                           
 21372 ;; *************** function _printf *****************
 21373 ;; Defined at:
 21374 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 21377 ;;		 -> STR_113(17), STR_112(4), STR_111(17), STR_108(10), 
 21378 ;;		 -> STR_105(22), STR_104(15), STR_103(17), STR_102(11), 
 21379 ;;		 -> STR_101(14), STR_100(3), STR_99(3), STR_98(13), 
 21380 ;;		 -> STR_95(8), STR_94(18), STR_93(10), STR_92(12), 
 21381 ;;		 -> STR_91(20), STR_90(2), STR_89(18), STR_88(22), 
 21382 ;;		 -> STR_87(8), STR_86(19), STR_85(17), STR_82(24), 
 21383 ;;		 -> STR_79(20), STR_76(20), STR_73(17), STR_68(20), 
 21384 ;;		 -> STR_67(19), STR_62(16), STR_61(11), STR_60(10), 
 21385 ;;		 -> STR_55(15), STR_54(11), STR_53(9), STR_48(16), 
 21386 ;;		 -> STR_44(12), STR_40(13), STR_39(12), STR_36(21), 
 21387 ;;		 -> STR_35(14), STR_34(9), STR_33(8), STR_30(10), 
 21388 ;;		 -> STR_29(18), STR_28(18), STR_27(16), STR_24(21), 
 21389 ;;		 -> STR_23(2), STR_22(17), STR_21(15), STR_18(14), 
 21390 ;;		 -> STR_17(12), STR_16(15), STR_15(14), STR_14(20), 
 21391 ;;		 -> STR_13(9), STR_12(5), STR_11(7), STR_10(6), 
 21392 ;;		 -> STR_9(8), STR_8(19), STR_7(19), STR_6(11), 
 21393 ;;		 -> STR_5(19), STR_4(16), STR_3(17), STR_2(16), 
 21394 ;;		 -> STR_1(20), 
 21395 ;; Auto vars:     Size  Location     Type
 21396 ;;  _val            4   34[BANK0 ] struct .
 21397 ;;  width           2   30[BANK0 ] int 
 21398 ;;  c               1   33[BANK0 ] char 
 21399 ;;  prec            1   32[BANK0 ] char 
 21400 ;;  flag            1   29[BANK0 ] unsigned char 
 21401 ;;  ap              1   28[BANK0 ] PTR void [1]
 21402 ;;		 -> ?_printf(2), 
 21403 ;; Return value:  Size  Location     Type
 21404 ;;                  2   14[BANK0 ] int 
 21405 ;; Registers used:
 21406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21407 ;; Tracked objects:
 21408 ;;		On entry : 0/0
 21409 ;;		On exit  : 0/0
 21410 ;;		Unchanged: 0/0
 21411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21412 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 21413 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 21414 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21415 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
       0       0
 21416 ;;Total ram usage:       24 bytes
 21417 ;; Hardware stack levels used:    1
 21418 ;; Hardware stack levels required when called:    3
 21419 ;; This function calls:
 21420 ;;		_putch
 21421 ;;		_isdigit
 21422 ;;		___wmul
 21423 ;;		___bmul
 21424 ;;		___lwdiv
 21425 ;;		___lwmod
 21426 ;; This function is called by:
 21427 ;;		_main
 21428 ;;		_litterlanguage_init
 21429 ;;		_litterlanguage_work
 21430 ;;		_litterlanguage_start
 21431 ;;		_litterlanguage_pause
 21432 ;;		_litterlanguage_stop
 21433 ;;		_waterdetection_event
 21434 ;;		_litterlanguage_cleanup
 21435 ;;		_exe_instruction
 21436 ;;		_userinterface_work
 21437 ;;		_catsensor_event
 21438 ;;		_set_mode
 21439 ;;		_cmdline_init
 21440 ;;		_proc_char
 21441 ;;		_proc_line
 21442 ;;		_echo
 21443 ;;		_help
 21444 ;;		_printtime
 21445 ;; This function uses a non-reentrant model
 21446 ;;
 21447                           psect	text3359
 21448                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
 21449                           	line	461
 21450                           	global	__size_of_printf
 21451  0360                     	__size_of_printf	equ	__end_of_printf-_printf
 21452                           	
 21453  14A0                     _printf:	
 21454                           	opt	stack 8
 21455                           ; Regs used in _printf: [wreg-status,0+pclath+cstack]
 21456                           	line	537
 21457                           	
 21458  14A0                     l37159:	
 21459  14A0  3031               	movlw	(?_printf+02h)&0ffh
 21460  14A1  0020               	movlb 0	; select bank0
 21461  14A2  00B9               	movwf	(??_printf+0)+0
 21462  14A3  0839               	movf	(??_printf+0)+0,w
 21463  14A4  00BD               	movwf	(printf@ap)
 21464                           	line	540
 21465  14A5  2FE7               	goto	l37351
 21466                           	
 21467  14A6                     l23526:	
 21468                           	line	542
 21469                           	
 21470  14A6                     l37161:	
 21471  14A6  0842               	movf	(printf@c),w
 21472  14A7  3A25               	xorlw	025h&0ffh
 21473  14A8  1903               	skipnz
 21474  14A9  2CAB               	goto	u10141
 21475  14AA  2CAC               	goto	u10140
 21476  14AB                     u10141:
 21477  14AB  2CB1               	goto	l37165
 21478  14AC                     u10140:
 21479                           	line	545
 21480                           	
 21481  14AC                     l37163:	
 21482  14AC  0842               	movf	(printf@c),w
 21483  14AD  31AB  2310  3194   	fcall	_putch
 21484                           	line	546
 21485  14B0  2FE7               	goto	l37351
 21486                           	line	547
 21487                           	
 21488  14B1                     l23527:	
 21489                           	line	550
 21490                           	
 21491  14B1                     l37165:	
 21492  14B1  0020               	movlb 0	; select bank0
 21493  14B2  01BF               	clrf	(printf@width)
 21494  14B3  01C0               	clrf	(printf@width+1)
 21495                           	line	552
 21496                           	
 21497  14B4                     l37167:	
 21498  14B4  01BE               	clrf	(printf@flag)
 21499  14B5  2CBE               	goto	l37173
 21500                           	line	554
 21501                           	
 21502  14B6                     l23528:	
 21503                           	line	555
 21504  14B6  2CBE               	goto	l37173
 21505                           	line	583
 21506                           	
 21507  14B7                     l23530:	
 21508                           	line	584
 21509  14B7  153E               	bsf	(printf@flag)+(2/8),(2)&7
 21510                           	line	585
 21511                           	
 21512  14B8                     l37169:	
 21513  14B8  3001               	movlw	low(01h)
 21514  14B9  07AF               	addwf	(printf@f),f
 21515  14BA  3000               	movlw	high(01h)
 21516  14BB  3DB0               	addwfc	(printf@f+1),f
 21517                           	line	586
 21518  14BC  2CBE               	goto	l37173
 21519                           	line	588
 21520                           	
 21521  14BD                     l37171:	
 21522  14BD  2CC9               	goto	l37175
 21523                           	line	555
 21524                           	
 21525  14BE                     l23529:	
 21526                           	
 21527  14BE                     l37173:	
 21528  14BE  082F               	movf	(printf@f),w
 21529  14BF  0084               	movwf	fsr0l
 21530  14C0  0830               	movf	((printf@f+1)),w
 21531  14C1  0085               	movwf	fsr0h
 21532  14C2  0800               	movf	indf0,w ;code access
 21533                           	; Switch size 1, requested type "space"
 21534                           ; Number of cases is 1, Range of values is 48 to 48
 21535                           ; switch strategies available:
 21536                           ; Name         Instructions Cycles
 21537                           ; simple_byte            4     3 (average)
 21538                           ; direct_byte           11     9 (fixed)
 21539                           ; jumptable            263     9 (fixed)
 21540                           ;	Chosen strategy is simple_byte
 21541                           
 21542                           	opt asmopt_off
 21543  14C3  3A30               	xorlw	48^0	; case 48
 21544  14C4  1903               	skipnz
 21545  14C5  2CB7               	goto	l23530
 21546  14C6  2CC9               	goto	l37175
 21547                           	opt asmopt_on
 21548                           
 21549                           	line	588
 21550                           	
 21551  14C7                     l23532:	
 21552                           	line	589
 21553  14C7  2CC9               	goto	l37175
 21554                           	line	590
 21555                           	
 21556  14C8                     l23531:	
 21557  14C8  2CBE               	goto	l37173
 21558                           	
 21559  14C9                     l23533:	
 21560                           	line	601
 21561                           	
 21562  14C9                     l37175:	
 21563  14C9  082F               	movf	(printf@f),w
 21564  14CA  0084               	movwf	fsr0l
 21565  14CB  0830               	movf	((printf@f+1)),w
 21566  14CC  0085               	movwf	fsr0h
 21567  14CD  0800               	movf	indf0,w ;code access
 21568  14CE  31A8  20B3  3194   	fcall	_isdigit
 21569  14D1  1C03               	btfss	status,0
 21570  14D2  2CD4               	goto	u10151
 21571  14D3  2CD5               	goto	u10150
 21572  14D4                     u10151:
 21573  14D4  2D0D               	goto	l37185
 21574  14D5                     u10150:
 21575                           	line	602
 21576                           	
 21577  14D5                     l37177:	
 21578  14D5  0020               	movlb 0	; select bank0
 21579  14D6  01BF               	clrf	(printf@width)
 21580  14D7  01C0               	clrf	(printf@width+1)
 21581  14D8  2CD9               	goto	l37179
 21582                           	line	603
 21583                           	
 21584  14D9                     l23535:	
 21585                           	line	604
 21586                           	
 21587  14D9                     l37179:	
 21588  14D9  0020               	movlb 0	; select bank0
 21589  14DA  082F               	movf	(printf@f),w
 21590  14DB  0084               	movwf	fsr0l
 21591  14DC  0830               	movf	((printf@f+1)),w
 21592  14DD  0085               	movwf	fsr0h
 21593  14DE  0800               	movf	indf0,w ;code access
 21594  14DF  00B9               	movwf	(??_printf+0)+0
 21595  14E0  01BA               	clrf	(??_printf+0)+0+1
 21596  14E1  0840               	movf	(printf@width+1),w
 21597  14E2  01A2               	clrf	(?___wmul+1)
 21598  14E3  07A2               	addwf	(?___wmul+1)
 21599  14E4  083F               	movf	(printf@width),w
 21600  14E5  01A1               	clrf	(?___wmul)
 21601  14E6  07A1               	addwf	(?___wmul)
 21602                           
 21603  14E7  300A               	movlw	low(0Ah)
 21604  14E8  00A3               	movwf	0+(?___wmul)+02h
 21605  14E9  3000               	movlw	high(0Ah)
 21606  14EA  00A4               	movwf	(0+(?___wmul)+02h)+1
 21607  14EB  31AA  229E  3194   	fcall	___wmul
 21608  14EE  0020               	movlb 0	; select bank0
 21609  14EF  0839               	movf	0+(??_printf+0)+0,w
 21610  14F0  0721               	addwf	(0+(?___wmul)),w
 21611  14F1  00BB               	movwf	(??_printf+2)+0
 21612  14F2  083A               	movf	1+(??_printf+0)+0,w
 21613  14F3  3D22               	addwfc	(1+(?___wmul)),w
 21614  14F4  00BC               	movwf	1+(??_printf+2)+0
 21615  14F5  083B               	movf	0+(??_printf+2)+0,w
 21616  14F6  3ED0               	addlw	low(0FFD0h)
 21617  14F7  00BF               	movwf	(printf@width)
 21618  14F8  30FF               	movlw	high(0FFD0h)
 21619  14F9  3D3C               	addwfc	1+(??_printf+2)+0,w
 21620  14FA  00C0               	movwf	1+(printf@width)
 21621                           	
 21622  14FB                     l37181:	
 21623  14FB  3001               	movlw	low(01h)
 21624  14FC  07AF               	addwf	(printf@f),f
 21625  14FD  3000               	movlw	high(01h)
 21626  14FE  3DB0               	addwfc	(printf@f+1),f
 21627                           	line	605
 21628                           	
 21629  14FF                     l37183:	
 21630  14FF  082F               	movf	(printf@f),w
 21631  1500  0084               	movwf	fsr0l
 21632  1501  0830               	movf	((printf@f+1)),w
 21633  1502  0085               	movwf	fsr0h
 21634  1503  0800               	movf	indf0,w ;code access
 21635  1504  31A8  20B3  3194   	fcall	_isdigit
 21636  1507  1803               	btfsc	status,0
 21637  1508  2D0A               	goto	u10161
 21638  1509  2D0B               	goto	u10160
 21639  150A                     u10161:
 21640  150A  2CD9               	goto	l37179
 21641  150B                     u10160:
 21642  150B  2D0D               	goto	l37185
 21643                           	
 21644  150C                     l23536:	
 21645  150C  2D0D               	goto	l37185
 21646                           	line	611
 21647                           	
 21648  150D                     l23534:	
 21649                           	line	614
 21650                           	
 21651  150D                     l37185:	
 21652  150D  0020               	movlb 0	; select bank0
 21653  150E  082F               	movf	(printf@f),w
 21654  150F  0084               	movwf	fsr0l
 21655  1510  0830               	movf	((printf@f+1)),w
 21656  1511  0085               	movwf	fsr0h
 21657  1512  0800               	movf	indf0,w ;code access
 21658  1513  3A2E               	xorlw	02Eh
 21659  1514  1D03               	skipz
 21660  1515  2D17               	goto	u10171
 21661  1516  2D18               	goto	u10170
 21662  1517                     u10171:
 21663  1517  2D46               	goto	l23537
 21664  1518                     u10170:
 21665                           	line	616
 21666                           	
 21667  1518                     l37187:	
 21668  1518  3001               	movlw	low(01h)
 21669  1519  07AF               	addwf	(printf@f),f
 21670  151A  3000               	movlw	high(01h)
 21671  151B  3DB0               	addwfc	(printf@f+1),f
 21672                           	line	624
 21673                           	
 21674  151C                     l37189:	
 21675  151C  01C1               	clrf	(printf@prec)
 21676                           	line	625
 21677  151D  2D38               	goto	l37195
 21678                           	
 21679  151E                     l23539:	
 21680                           	line	626
 21681                           	
 21682  151E                     l37191:	
 21683  151E  300A               	movlw	(0Ah)
 21684  151F  0020               	movlb 0	; select bank0
 21685  1520  00B9               	movwf	(??_printf+0)+0
 21686  1521  0839               	movf	(??_printf+0)+0,w
 21687  1522  00A1               	movwf	(?___bmul)
 21688  1523  0841               	movf	(printf@prec),w
 21689  1524  31A9  2112  3194   	fcall	___bmul
 21690  1527  0020               	movlb 0	; select bank0
 21691  1528  00BA               	movwf	(??_printf+1)+0
 21692  1529  082F               	movf	(printf@f),w
 21693  152A  0084               	movwf	fsr0l
 21694  152B  0830               	movf	((printf@f+1)),w
 21695  152C  0085               	movwf	fsr0h
 21696  152D  0800               	movf	indf0,w ;code access
 21697  152E  073A               	addwf	0+(??_printf+1)+0,w
 21698  152F  3ED0               	addlw	-48
 21699  1530  00BB               	movwf	(??_printf+2)+0
 21700  1531  083B               	movf	(??_printf+2)+0,w
 21701  1532  00C1               	movwf	(printf@prec)
 21702                           	
 21703  1533                     l37193:	
 21704  1533  3001               	movlw	low(01h)
 21705  1534  07AF               	addwf	(printf@f),f
 21706  1535  3000               	movlw	high(01h)
 21707  1536  3DB0               	addwfc	(printf@f+1),f
 21708  1537  2D38               	goto	l37195
 21709                           	
 21710  1538                     l23538:	
 21711                           	line	625
 21712                           	
 21713  1538                     l37195:	
 21714  1538  082F               	movf	(printf@f),w
 21715  1539  0084               	movwf	fsr0l
 21716  153A  0830               	movf	((printf@f+1)),w
 21717  153B  0085               	movwf	fsr0h
 21718  153C  0800               	movf	indf0,w ;code access
 21719  153D  31A8  20B3  3194   	fcall	_isdigit
 21720  1540  1803               	btfsc	status,0
 21721  1541  2D43               	goto	u10181
 21722  1542  2D44               	goto	u10180
 21723  1543                     u10181:
 21724  1543  2D1E               	goto	l37191
 21725  1544                     u10180:
 21726  1544  2DE6               	goto	l37237
 21727                           	
 21728  1545                     l23540:	
 21729                           	line	628
 21730  1545  2DE6               	goto	l37237
 21731                           	
 21732  1546                     l23537:	
 21733                           	line	629
 21734  1546  01C1               	clrf	(printf@prec)
 21735  1547  2DE6               	goto	l37237
 21736                           	line	633
 21737                           	
 21738  1548                     l23541:	
 21739                           	line	638
 21740  1548  2DE6               	goto	l37237
 21741                           	line	640
 21742                           	
 21743  1549                     l23543:	
 21744                           	line	641
 21745  1549  2FFF               	goto	l23609
 21746                           	line	700
 21747                           	
 21748  154A                     l23545:	
 21749  154A  2E0B               	goto	l37239
 21750                           	line	701
 21751                           	
 21752  154B                     l23546:	
 21753                           	line	702
 21754  154B  2E0B               	goto	l37239
 21755                           	line	715
 21756                           	
 21757  154C                     l23548:	
 21758                           	line	721
 21759                           	
 21760  154C                     l23549:	
 21761                           	line	724
 21762  154C  17BE               	bsf	(printf@flag)+(7/8),(7)&7
 21763                           	line	726
 21764  154D  2E0B               	goto	l37239
 21765                           	line	731
 21766                           	
 21767  154E                     l23550:	
 21768                           	line	737
 21769                           	
 21770  154E                     l37197:	
 21771  154E  083D               	movf	(printf@ap),w
 21772  154F  0086               	movwf	fsr1l
 21773  1550  0187               	clrf fsr1h	
 21774                           	
 21775  1551  3F40               	moviw	[0]fsr1
 21776  1552  00C3               	movwf	(printf@_val)
 21777  1553  3F41               	moviw	[1]fsr1
 21778  1554  00C4               	movwf	(printf@_val+1)
 21779                           	
 21780  1555                     l37199:	
 21781  1555  3002               	movlw	(02h)
 21782  1556  00B9               	movwf	(??_printf+0)+0
 21783  1557  0839               	movf	(??_printf+0)+0,w
 21784  1558  07BD               	addwf	(printf@ap),f
 21785                           	line	743
 21786                           	
 21787  1559                     l37201:	
 21788  1559  0844               	movf	((printf@_val+1)),w
 21789  155A  0443               	iorwf	((printf@_val)),w
 21790  155B  1D03               	skipz
 21791  155C  2D5E               	goto	u10191
 21792  155D  2D5F               	goto	u10190
 21793  155E                     u10191:
 21794  155E  2D64               	goto	l37205
 21795  155F                     u10190:
 21796                           	line	744
 21797                           	
 21798  155F                     l37203:	
 21799  155F  30FC               	movlw	low(STR_114|8000h)
 21800  1560  00C3               	movwf	(printf@_val)
 21801  1561  3088               	movlw	high(STR_114|8000h)
 21802  1562  00C4               	movwf	((printf@_val))+1
 21803  1563  2D64               	goto	l37205
 21804                           	
 21805  1564                     l23551:	
 21806                           	line	748
 21807                           	
 21808  1564                     l37205:	
 21809  1564  01C5               	clrf	0+(printf@_val)+02h
 21810  1565  01C6               	clrf	1+(printf@_val)+02h
 21811                           	line	749
 21812  1566  2D6C               	goto	l37209
 21813                           	
 21814  1567                     l23553:	
 21815                           	line	750
 21816                           	
 21817  1567                     l37207:	
 21818  1567  3001               	movlw	low(01h)
 21819  1568  07C5               	addwf	0+(printf@_val)+02h,f
 21820  1569  3000               	movlw	high(01h)
 21821  156A  3DC6               	addwfc	1+(printf@_val)+02h,f
 21822  156B  2D6C               	goto	l37209
 21823                           	
 21824  156C                     l23552:	
 21825                           	line	749
 21826                           	
 21827  156C                     l37209:	
 21828  156C  0843               	movf	(printf@_val),w
 21829  156D  0745               	addwf	0+(printf@_val)+02h,w
 21830  156E  0084               	movwf	fsr0l
 21831  156F  0844               	movf	(printf@_val+1),w
 21832  1570  3D46               	addwfc	1+(printf@_val)+02h,w
 21833  1571  0085               	movwf	fsr0h
 21834  1572  0800               	movf	indf0,w ;code access
 21835  1573  3800               	iorlw	0
 21836  1574  1D03               	skipz
 21837  1575  2D77               	goto	u10201
 21838  1576  2D78               	goto	u10200
 21839  1577                     u10201:
 21840  1577  2D67               	goto	l37207
 21841  1578                     u10200:
 21842  1578  2D79               	goto	l37211
 21843                           	
 21844  1579                     l23554:	
 21845                           	line	756
 21846                           	
 21847  1579                     l37211:	
 21848  1579  0841               	movf	(printf@prec),w
 21849  157A  1D03               	skipz
 21850  157B  2D7D               	goto	u10210
 21851  157C  2D92               	goto	l37217
 21852  157D                     u10210:
 21853                           	
 21854  157D                     l37213:	
 21855  157D  0841               	movf	(printf@prec),w
 21856  157E  00B9               	movwf	(??_printf+0)+0
 21857  157F  01BA               	clrf	(??_printf+0)+0+1
 21858  1580  1BB9               	btfsc	(??_printf+0)+0,7
 21859  1581  03BA               	decf	(??_printf+0)+0+1,f
 21860  1582  0846               	movf	1+(printf@_val)+02h,w
 21861  1583  023A               	subwf	1+(??_printf+0)+0,w
 21862  1584  1D03               	skipz
 21863  1585  2D88               	goto	u10225
 21864  1586  0845               	movf	0+(printf@_val)+02h,w
 21865  1587  0239               	subwf	0+(??_printf+0)+0,w
 21866  1588                     u10225:
 21867  1588  1803               	skipnc
 21868  1589  2D8B               	goto	u10221
 21869  158A  2D8C               	goto	u10220
 21870  158B                     u10221:
 21871  158B  2D92               	goto	l37217
 21872  158C                     u10220:
 21873                           	line	757
 21874                           	
 21875  158C                     l37215:	
 21876  158C  0841               	movf	(printf@prec),w
 21877  158D  00C5               	movwf	0+(printf@_val)+02h
 21878  158E  01C6               	clrf	1+(printf@_val)+02h
 21879  158F  1BC5               	btfsc	0+(printf@_val)+02h,7
 21880  1590  03C6               	decf	1+(printf@_val)+02h,f
 21881  1591  2D92               	goto	l37217
 21882                           	
 21883  1592                     l23555:	
 21884                           	line	760
 21885                           	
 21886  1592                     l37217:	
 21887  1592  0840               	movf	(printf@width+1),w
 21888  1593  0246               	subwf	1+(printf@_val)+02h,w
 21889  1594  1D03               	skipz
 21890  1595  2D98               	goto	u10235
 21891  1596  083F               	movf	(printf@width),w
 21892  1597  0245               	subwf	0+(printf@_val)+02h,w
 21893  1598                     u10235:
 21894  1598  1803               	skipnc
 21895  1599  2D9B               	goto	u10231
 21896  159A  2D9C               	goto	u10230
 21897  159B                     u10231:
 21898  159B  2DA1               	goto	l37221
 21899  159C                     u10230:
 21900                           	line	761
 21901                           	
 21902  159C                     l37219:	
 21903  159C  0845               	movf	0+(printf@_val)+02h,w
 21904  159D  02BF               	subwf	(printf@width),f
 21905  159E  0846               	movf	1+(printf@_val)+02h,w
 21906  159F  3BC0               	subwfb	(printf@width+1),f
 21907  15A0  2DAA               	goto	l37225
 21908                           	line	762
 21909                           	
 21910  15A1                     l23556:	
 21911                           	line	763
 21912                           	
 21913  15A1                     l37221:	
 21914  15A1  01BF               	clrf	(printf@width)
 21915  15A2  01C0               	clrf	(printf@width+1)
 21916  15A3  2DAA               	goto	l37225
 21917                           	
 21918  15A4                     l23557:	
 21919                           	line	767
 21920  15A4  2DAA               	goto	l37225
 21921                           	
 21922  15A5                     l23559:	
 21923                           	line	768
 21924                           	
 21925  15A5                     l37223:	
 21926  15A5  3020               	movlw	(020h)
 21927  15A6  31AB  2310  3194   	fcall	_putch
 21928  15A9  2DAA               	goto	l37225
 21929                           	
 21930  15AA                     l23558:	
 21931                           	line	767
 21932                           	
 21933  15AA                     l37225:	
 21934  15AA  30FF               	movlw	low(-1)
 21935  15AB  0020               	movlb 0	; select bank0
 21936  15AC  07BF               	addwf	(printf@width),f
 21937  15AD  30FF               	movlw	high(-1)
 21938  15AE  3DC0               	addwfc	(printf@width+1),f
 21939  15AF  30FF               	movlw	high(-1)
 21940  15B0  0640               	xorwf	((printf@width+1)),w
 21941  15B1  1D03               	skipz
 21942  15B2  2DB5               	goto	u10245
 21943  15B3  30FF               	movlw	low(-1)
 21944  15B4  063F               	xorwf	((printf@width)),w
 21945  15B5                     u10245:
 21946                           
 21947  15B5  1D03               	skipz
 21948  15B6  2DB8               	goto	u10241
 21949  15B7  2DB9               	goto	u10240
 21950  15B8                     u10241:
 21951  15B8  2DA5               	goto	l37223
 21952  15B9                     u10240:
 21953  15B9  2DC9               	goto	l37231
 21954                           	
 21955  15BA                     l23560:	
 21956                           	line	770
 21957  15BA  2DC9               	goto	l37231
 21958                           	
 21959  15BB                     l23562:	
 21960                           	line	771
 21961                           	
 21962  15BB                     l37227:	
 21963  15BB  0843               	movf	(printf@_val),w
 21964  15BC  0084               	movwf	fsr0l
 21965  15BD  0844               	movf	((printf@_val+1)),w
 21966  15BE  0085               	movwf	fsr0h
 21967  15BF  0800               	movf	indf0,w ;code access
 21968  15C0  31AB  2310  3194   	fcall	_putch
 21969                           	
 21970  15C3                     l37229:	
 21971  15C3  3001               	movlw	low(01h)
 21972  15C4  0020               	movlb 0	; select bank0
 21973  15C5  07C3               	addwf	(printf@_val),f
 21974  15C6  3000               	movlw	high(01h)
 21975  15C7  3DC4               	addwfc	(printf@_val+1),f
 21976  15C8  2DC9               	goto	l37231
 21977                           	
 21978  15C9                     l23561:	
 21979                           	line	770
 21980                           	
 21981  15C9                     l37231:	
 21982  15C9  3002               	movlw	(02h)
 21983  15CA  3E43               	addlw	printf@_val&0ffh
 21984  15CB  0086               	movwf	fsr1l
 21985  15CC  0187               	clrf fsr1h	
 21986                           	
 21987  15CD  3001               	movlw	low(01h)
 21988  15CE  0281               	subwf	indf1,f
 21989  15CF  3141               	addfsr	fsr1,1
 21990  15D0  3000               	movlw	high(01h)
 21991  15D1  3B81               	subwfb	indf1,f
 21992  15D2  317F               	addfsr	fsr1,-1
 21993  15D3  3F40               	moviw	[0]fsr1
 21994  15D4  3AFF               	xorlw	low(0FFFFh)
 21995  15D5  1D03               	skipz
 21996  15D6  2DD9               	goto	u10255
 21997  15D7  3F41               	moviw	[1]fsr1
 21998  15D8  3AFF               	xorlw	high(0FFFFh)
 21999  15D9                     u10255:
 22000  15D9  1D03               	skipz
 22001  15DA  2DDC               	goto	u10251
 22002  15DB  2DDD               	goto	u10250
 22003  15DC                     u10251:
 22004  15DC  2DBB               	goto	l37227
 22005  15DD                     u10250:
 22006  15DD  2FE7               	goto	l37351
 22007                           	
 22008  15DE                     l23563:	
 22009                           	line	777
 22010  15DE  2FE7               	goto	l37351
 22011                           	line	805
 22012                           	
 22013  15DF                     l23564:	
 22014                           	line	816
 22015  15DF  2FE7               	goto	l37351
 22016                           	line	820
 22017                           	
 22018  15E0                     l23565:	
 22019                           	line	821
 22020                           	
 22021  15E0                     l37233:	
 22022  15E0  30C0               	movlw	(0C0h)
 22023  15E1  00B9               	movwf	(??_printf+0)+0
 22024  15E2  0839               	movf	(??_printf+0)+0,w
 22025  15E3  04BE               	iorwf	(printf@flag),f
 22026                           	line	822
 22027  15E4  2E0B               	goto	l37239
 22028                           	line	825
 22029                           	
 22030  15E5                     l37235:	
 22031  15E5  2E0B               	goto	l37239
 22032                           	line	638
 22033                           	
 22034  15E6                     l23542:	
 22035                           	
 22036  15E6                     l37237:	
 22037  15E6  0020               	movlb 0	; select bank0
 22038  15E7  0830               	movf	(printf@f+1),w
 22039  15E8  00BA               	movwf	(??_printf+0)+0+1
 22040  15E9  082F               	movf	(printf@f),w
 22041  15EA  00B9               	movwf	(??_printf+0)+0
 22042  15EB  3001               	movlw	(01h)
 22043  15EC  07AF               	addwf	(printf@f),f
 22044  15ED  1803               	skipnc
 22045  15EE  0AB0               	incf	(printf@f+1),f
 22046  15EF  0839               	movf	0+(??_printf+0)+0,w
 22047  15F0  0084               	movwf	fsr0l
 22048  15F1  083A               	movf	(1+(??_printf+0)+0),w
 22049  15F2  0085               	movwf	fsr0h
 22050  15F3  0800               	movf	indf0,w ;code access
 22051  15F4  00C2               	movwf	(printf@c)
 22052                           	; Switch size 1, requested type "space"
 22053                           ; Number of cases is 7, Range of values is 0 to 120
 22054                           ; switch strategies available:
 22055                           ; Name         Instructions Cycles
 22056                           ; simple_byte           22    12 (average)
 22057                           ; direct_byte          248     6 (fixed)
 22058                           ; jumptable            260     6 (fixed)
 22059                           ; rangetable           125     4 (fixed)
 22060                           ; spacedrange          247     6 (fixed)
 22061                           ; locatedrange         121     3 (fixed)
 22062                           ;	Chosen strategy is simple_byte
 22063                           
 22064                           	opt asmopt_off
 22065  15F5  3A00               	xorlw	0^0	; case 0
 22066  15F6  1903               	skipnz
 22067  15F7  2FFF               	goto	l23609
 22068  15F8  3A58               	xorlw	88^0	; case 88
 22069  15F9  1903               	skipnz
 22070  15FA  2D4C               	goto	l23549
 22071  15FB  3A3C               	xorlw	100^88	; case 100
 22072  15FC  1903               	skipnz
 22073  15FD  2E0B               	goto	l37239
 22074  15FE  3A0D               	xorlw	105^100	; case 105
 22075  15FF  1903               	skipnz
 22076  1600  2E0B               	goto	l37239
 22077  1601  3A1A               	xorlw	115^105	; case 115
 22078  1602  1903               	skipnz
 22079  1603  2D4E               	goto	l37197
 22080  1604  3A06               	xorlw	117^115	; case 117
 22081  1605  1903               	skipnz
 22082  1606  2DE0               	goto	l37233
 22083  1607  3A0D               	xorlw	120^117	; case 120
 22084  1608  1903               	skipnz
 22085  1609  2D4C               	goto	l23549
 22086  160A  2FE7               	goto	l37351
 22087                           	opt asmopt_on
 22088                           
 22089                           	line	825
 22090                           	
 22091  160B                     l23547:	
 22092                           	line	1246
 22093                           	
 22094  160B                     l37239:	
 22095  160B  083E               	movf	(printf@flag),w
 22096  160C  39C0               	andlw	0C0h
 22097  160D  1D03               	btfss	status,2
 22098  160E  2E10               	goto	u10261
 22099  160F  2E11               	goto	u10260
 22100  1610                     u10261:
 22101  1610  2E2B               	goto	l37251
 22102  1611                     u10260:
 22103                           	line	1254
 22104                           	
 22105  1611                     l37241:	
 22106  1611  083D               	movf	(printf@ap),w
 22107  1612  0086               	movwf	fsr1l
 22108  1613  0187               	clrf fsr1h	
 22109                           	
 22110  1614  3F40               	moviw	[0]fsr1
 22111  1615  00C3               	movwf	(printf@_val)
 22112  1616  3F41               	moviw	[1]fsr1
 22113  1617  00C4               	movwf	(printf@_val+1)
 22114                           	
 22115  1618                     l37243:	
 22116  1618  3002               	movlw	(02h)
 22117  1619  00B9               	movwf	(??_printf+0)+0
 22118  161A  0839               	movf	(??_printf+0)+0,w
 22119  161B  07BD               	addwf	(printf@ap),f
 22120                           	line	1256
 22121                           	
 22122  161C                     l37245:	
 22123  161C  1FC4               	btfss	(printf@_val+1),7
 22124  161D  2E1F               	goto	u10271
 22125  161E  2E20               	goto	u10270
 22126  161F                     u10271:
 22127  161F  2E37               	goto	l37255
 22128  1620                     u10270:
 22129                           	line	1257
 22130                           	
 22131  1620                     l37247:	
 22132  1620  3003               	movlw	(03h)
 22133  1621  00B9               	movwf	(??_printf+0)+0
 22134  1622  0839               	movf	(??_printf+0)+0,w
 22135  1623  04BE               	iorwf	(printf@flag),f
 22136                           	line	1258
 22137                           	
 22138  1624                     l37249:	
 22139  1624  09C3               	comf	(printf@_val),f
 22140  1625  09C4               	comf	(printf@_val+1),f
 22141  1626  0AC3               	incf	(printf@_val),f
 22142  1627  1903               	skipnz
 22143  1628  0AC4               	incf	(printf@_val+1),f
 22144  1629  2E37               	goto	l37255
 22145                           	line	1259
 22146                           	
 22147  162A                     l23567:	
 22148                           	line	1261
 22149  162A  2E37               	goto	l37255
 22150                           	line	1263
 22151                           	
 22152  162B                     l23566:	
 22153                           	line	1281
 22154                           	
 22155  162B                     l37251:	
 22156  162B  083D               	movf	(printf@ap),w
 22157  162C  0086               	movwf	fsr1l
 22158  162D  0187               	clrf fsr1h	
 22159                           	
 22160  162E  3F40               	moviw	[0]fsr1
 22161  162F  00C3               	movwf	(printf@_val)
 22162  1630  3F41               	moviw	[1]fsr1
 22163  1631  00C4               	movwf	(printf@_val+1)
 22164                           	
 22165  1632                     l37253:	
 22166  1632  3002               	movlw	(02h)
 22167  1633  00B9               	movwf	(??_printf+0)+0
 22168  1634  0839               	movf	(??_printf+0)+0,w
 22169  1635  07BD               	addwf	(printf@ap),f
 22170  1636  2E37               	goto	l37255
 22171                           	line	1282
 22172                           	
 22173  1637                     l23568:	
 22174                           	line	1285
 22175                           	
 22176  1637                     l37255:	
 22177  1637  08C1               	movf	(printf@prec),f
 22178  1638  1D03               	skipz
 22179  1639  2E3B               	goto	u10281
 22180  163A  2E3C               	goto	u10280
 22181  163B                     u10281:
 22182  163B  2EA8               	goto	l37291
 22183  163C                     u10280:
 22184                           	
 22185  163C                     l37257:	
 22186  163C  0844               	movf	((printf@_val+1)),w
 22187  163D  0443               	iorwf	((printf@_val)),w
 22188  163E  1D03               	skipz
 22189  163F  2E41               	goto	u10291
 22190  1640  2E42               	goto	u10290
 22191  1641                     u10291:
 22192  1641  2EA8               	goto	l37291
 22193  1642                     u10290:
 22194                           	line	1286
 22195                           	
 22196  1642                     l37259:	
 22197  1642  3001               	movlw	(01h)
 22198  1643  00B9               	movwf	(??_printf+0)+0
 22199  1644  0839               	movf	(??_printf+0)+0,w
 22200  1645  07C1               	addwf	(printf@prec),f
 22201  1646  2EA8               	goto	l37291
 22202                           	
 22203  1647                     l23569:	
 22204                           	line	1289
 22205  1647  2EA8               	goto	l37291
 22206                           	line	1294
 22207                           	
 22208  1648                     l23571:	
 22209  1648  2E49               	goto	l37261
 22210                           	line	1297
 22211                           	
 22212  1649                     l23572:	
 22213                           	line	1300
 22214                           	
 22215  1649                     l37261:	
 22216  1649  01C2               	clrf	(printf@c)
 22217  164A  1403               	bsf	status,0
 22218  164B  0DC2               	rlf	(printf@c),f
 22219                           	
 22220  164C                     l37263:	
 22221  164C  0842               	movf	(printf@c),w
 22222  164D  3A05               	xorlw	05h&0ffh
 22223  164E  1D03               	skipz
 22224  164F  2E51               	goto	u10301
 22225  1650  2E52               	goto	u10300
 22226  1651                     u10301:
 22227  1651  2E54               	goto	l37267
 22228  1652                     u10300:
 22229  1652  2EB4               	goto	l37293
 22230                           	
 22231  1653                     l37265:	
 22232  1653  2EB4               	goto	l37293
 22233                           	line	1301
 22234                           	
 22235  1654                     l23573:	
 22236                           	
 22237  1654                     l37267:	
 22238  1654  0842               	movf	(printf@c),w
 22239  1655  0709               	addwf	wreg,w
 22240  1656  3E01               	addlw	low(_dpowers|8000h)
 22241  1657  0084               	movwf	fsr0l
 22242  1658  3082               	movlw	high(_dpowers|8000h)
 22243  1659  1803               	skipnc
 22244  165A  3E01               	addlw	1
 22245  165B  0085               	movwf	fsr0h
 22246  165C  3F00               	moviw	[0]fsr0
 22247  165D  00B9               	movwf	(??_printf+0)+0
 22248  165E  3F01               	moviw	[1]fsr0
 22249  165F  00BA               	movwf	(??_printf+0)+0+1
 22250  1660  083A               	movf	1+(??_printf+0)+0,w
 22251  1661  0244               	subwf	(printf@_val+1),w
 22252  1662  1D03               	skipz
 22253  1663  2E66               	goto	u10315
 22254  1664  0839               	movf	0+(??_printf+0)+0,w
 22255  1665  0243               	subwf	(printf@_val),w
 22256  1666                     u10315:
 22257  1666  1803               	skipnc
 22258  1667  2E69               	goto	u10311
 22259  1668  2E6A               	goto	u10310
 22260  1669                     u10311:
 22261  1669  2E6C               	goto	l37271
 22262  166A                     u10310:
 22263  166A  2EB4               	goto	l37293
 22264                           	line	1302
 22265                           	
 22266  166B                     l37269:	
 22267  166B  2EB4               	goto	l37293
 22268                           	
 22269  166C                     l23575:	
 22270                           	line	1300
 22271                           	
 22272  166C                     l37271:	
 22273  166C  3001               	movlw	(01h)
 22274  166D  00B9               	movwf	(??_printf+0)+0
 22275  166E  0839               	movf	(??_printf+0)+0,w
 22276  166F  07C2               	addwf	(printf@c),f
 22277                           	
 22278  1670                     l37273:	
 22279  1670  0842               	movf	(printf@c),w
 22280  1671  3A05               	xorlw	05h&0ffh
 22281  1672  1D03               	skipz
 22282  1673  2E75               	goto	u10321
 22283  1674  2E76               	goto	u10320
 22284  1675                     u10321:
 22285  1675  2E54               	goto	l37267
 22286  1676                     u10320:
 22287  1676  2EB4               	goto	l37293
 22288                           	
 22289  1677                     l23574:	
 22290                           	line	1304
 22291  1677  2EB4               	goto	l37293
 22292                           	line	1309
 22293                           	
 22294  1678                     l23577:	
 22295                           	line	1311
 22296                           	
 22297  1678                     l37275:	
 22298  1678  01C2               	clrf	(printf@c)
 22299  1679  1403               	bsf	status,0
 22300  167A  0DC2               	rlf	(printf@c),f
 22301                           	
 22302  167B                     l37277:	
 22303  167B  0842               	movf	(printf@c),w
 22304  167C  3A04               	xorlw	04h&0ffh
 22305  167D  1D03               	skipz
 22306  167E  2E80               	goto	u10331
 22307  167F  2E81               	goto	u10330
 22308  1680                     u10331:
 22309  1680  2E83               	goto	l37281
 22310  1681                     u10330:
 22311  1681  2EB4               	goto	l37293
 22312                           	
 22313  1682                     l37279:	
 22314  1682  2EB4               	goto	l37293
 22315                           	line	1312
 22316                           	
 22317  1683                     l23578:	
 22318                           	
 22319  1683                     l37281:	
 22320  1683  0842               	movf	(printf@c),w
 22321  1684  0709               	addwf	wreg,w
 22322  1685  3E0B               	addlw	low(_hexpowers|8000h)
 22323  1686  0084               	movwf	fsr0l
 22324  1687  3082               	movlw	high(_hexpowers|8000h)
 22325  1688  1803               	skipnc
 22326  1689  3E01               	addlw	1
 22327  168A  0085               	movwf	fsr0h
 22328  168B  3F00               	moviw	[0]fsr0
 22329  168C  00B9               	movwf	(??_printf+0)+0
 22330  168D  3F01               	moviw	[1]fsr0
 22331  168E  00BA               	movwf	(??_printf+0)+0+1
 22332  168F  083A               	movf	1+(??_printf+0)+0,w
 22333  1690  0244               	subwf	(printf@_val+1),w
 22334  1691  1D03               	skipz
 22335  1692  2E95               	goto	u10345
 22336  1693  0839               	movf	0+(??_printf+0)+0,w
 22337  1694  0243               	subwf	(printf@_val),w
 22338  1695                     u10345:
 22339  1695  1803               	skipnc
 22340  1696  2E98               	goto	u10341
 22341  1697  2E99               	goto	u10340
 22342  1698                     u10341:
 22343  1698  2E9B               	goto	l37285
 22344  1699                     u10340:
 22345  1699  2EB4               	goto	l37293
 22346                           	line	1313
 22347                           	
 22348  169A                     l37283:	
 22349  169A  2EB4               	goto	l37293
 22350                           	
 22351  169B                     l23580:	
 22352                           	line	1311
 22353                           	
 22354  169B                     l37285:	
 22355  169B  3001               	movlw	(01h)
 22356  169C  00B9               	movwf	(??_printf+0)+0
 22357  169D  0839               	movf	(??_printf+0)+0,w
 22358  169E  07C2               	addwf	(printf@c),f
 22359                           	
 22360  169F                     l37287:	
 22361  169F  0842               	movf	(printf@c),w
 22362  16A0  3A04               	xorlw	04h&0ffh
 22363  16A1  1D03               	skipz
 22364  16A2  2EA4               	goto	u10351
 22365  16A3  2EA5               	goto	u10350
 22366  16A4                     u10351:
 22367  16A4  2E83               	goto	l37281
 22368  16A5                     u10350:
 22369  16A5  2EB4               	goto	l37293
 22370                           	
 22371  16A6                     l23579:	
 22372                           	line	1315
 22373  16A6  2EB4               	goto	l37293
 22374                           	line	1331
 22375                           	
 22376  16A7                     l37289:	
 22377  16A7  2EB4               	goto	l37293
 22378                           	line	1289
 22379                           	
 22380  16A8                     l23570:	
 22381                           	
 22382  16A8                     l37291:	
 22383  16A8  083E               	movf	(printf@flag),w
 22384  16A9  39C0               	andlw	0C0h
 22385                           	; Switch size 1, requested type "space"
 22386                           ; Number of cases is 3, Range of values is 0 to 192
 22387                           ; switch strategies available:
 22388                           ; Name         Instructions Cycles
 22389                           ; simple_byte           10     6 (average)
 22390                           ; jumptable            260     6 (fixed)
 22391                           ; rangetable           197     6 (fixed)
 22392                           ; spacedrange          391     8 (fixed)
 22393                           ; locatedrange         193     3 (fixed)
 22394                           ;	Chosen strategy is simple_byte
 22395                           
 22396                           	opt asmopt_off
 22397  16AA  3A00               	xorlw	0^0	; case 0
 22398  16AB  1903               	skipnz
 22399  16AC  2E49               	goto	l37261
 22400  16AD  3A80               	xorlw	128^0	; case 128
 22401  16AE  1903               	skipnz
 22402  16AF  2E78               	goto	l37275
 22403  16B0  3A40               	xorlw	192^128	; case 192
 22404  16B1  1903               	skipnz
 22405  16B2  2E49               	goto	l37261
 22406  16B3  2EB4               	goto	l37293
 22407                           	opt asmopt_on
 22408                           
 22409                           	line	1331
 22410                           	
 22411  16B4                     l23576:	
 22412                           	line	1334
 22413                           	
 22414  16B4                     l37293:	
 22415  16B4  0842               	movf	(printf@c),w
 22416  16B5  3A80               	xorlw	80h
 22417  16B6  00B9               	movwf	(??_printf+0)+0
 22418  16B7  0841               	movf	(printf@prec),w
 22419  16B8  3A80               	xorlw	80h
 22420  16B9  02B9               	subwf	(??_printf+0)+0
 22421  16BA  1803               	skipnc
 22422  16BB  2EBD               	goto	u10361
 22423  16BC  2EBE               	goto	u10360
 22424  16BD                     u10361:
 22425  16BD  2EC3               	goto	l37297
 22426  16BE                     u10360:
 22427                           	line	1335
 22428                           	
 22429  16BE                     l37295:	
 22430  16BE  0841               	movf	(printf@prec),w
 22431  16BF  00B9               	movwf	(??_printf+0)+0
 22432  16C0  0839               	movf	(??_printf+0)+0,w
 22433  16C1  00C2               	movwf	(printf@c)
 22434  16C2  2ED2               	goto	l23582
 22435                           	line	1336
 22436                           	
 22437  16C3                     l23581:	
 22438                           	
 22439  16C3                     l37297:	
 22440  16C3  0841               	movf	(printf@prec),w
 22441  16C4  3A80               	xorlw	80h
 22442  16C5  00B9               	movwf	(??_printf+0)+0
 22443  16C6  0842               	movf	(printf@c),w
 22444  16C7  3A80               	xorlw	80h
 22445  16C8  02B9               	subwf	(??_printf+0)+0
 22446  16C9  1803               	skipnc
 22447  16CA  2ECC               	goto	u10371
 22448  16CB  2ECD               	goto	u10370
 22449  16CC                     u10371:
 22450  16CC  2ED2               	goto	l23582
 22451  16CD                     u10370:
 22452                           	line	1337
 22453                           	
 22454  16CD                     l37299:	
 22455  16CD  0842               	movf	(printf@c),w
 22456  16CE  00B9               	movwf	(??_printf+0)+0
 22457  16CF  0839               	movf	(??_printf+0)+0,w
 22458  16D0  00C1               	movwf	(printf@prec)
 22459  16D1  2ED2               	goto	l23582
 22460                           	
 22461  16D2                     l23583:	
 22462                           	line	1340
 22463                           	
 22464  16D2                     l23582:	
 22465  16D2  0840               	movf	(printf@width+1),w
 22466  16D3  043F               	iorwf	(printf@width),w
 22467  16D4  1903               	skipnz
 22468  16D5  2ED7               	goto	u10381
 22469  16D6  2ED8               	goto	u10380
 22470  16D7                     u10381:
 22471  16D7  2F07               	goto	l37311
 22472  16D8                     u10380:
 22473                           	
 22474  16D8                     l37301:	
 22475  16D8  083E               	movf	(printf@flag),w
 22476  16D9  3903               	andlw	03h
 22477  16DA  1903               	btfsc	status,2
 22478  16DB  2EDD               	goto	u10391
 22479  16DC  2EDE               	goto	u10390
 22480  16DD                     u10391:
 22481  16DD  2F07               	goto	l37311
 22482  16DE                     u10390:
 22483                           	line	1341
 22484                           	
 22485  16DE                     l37303:	
 22486  16DE  30FF               	movlw	low(-1)
 22487  16DF  07BF               	addwf	(printf@width),f
 22488  16E0  30FF               	movlw	high(-1)
 22489  16E1  3DC0               	addwfc	(printf@width+1),f
 22490  16E2  2F07               	goto	l37311
 22491                           	
 22492  16E3                     l23584:	
 22493                           	line	1343
 22494  16E3  2F07               	goto	l37311
 22495                           	line	1344
 22496                           	
 22497  16E4                     l37305:	
 22498  16E4  0841               	movf	(printf@prec),w
 22499  16E5  00B9               	movwf	(??_printf+0)+0
 22500  16E6  01BA               	clrf	(??_printf+0)+0+1
 22501  16E7  1BB9               	btfsc	(??_printf+0)+0,7
 22502  16E8  03BA               	decf	(??_printf+0)+0+1,f
 22503  16E9  083A               	movf	1+(??_printf+0)+0,w
 22504  16EA  3A80               	xorlw	80h
 22505  16EB  00BB               	movwf	(??_printf+2)+0
 22506  16EC  0840               	movf	(printf@width+1),w
 22507  16ED  3A80               	xorlw	80h
 22508  16EE  023B               	subwf	(??_printf+2)+0,w
 22509  16EF  1D03               	skipz
 22510  16F0  2EF3               	goto	u10405
 22511  16F1  083F               	movf	(printf@width),w
 22512  16F2  0239               	subwf	0+(??_printf+0)+0,w
 22513  16F3                     u10405:
 22514                           
 22515  16F3  1803               	skipnc
 22516  16F4  2EF6               	goto	u10401
 22517  16F5  2EF7               	goto	u10400
 22518  16F6                     u10401:
 22519  16F6  2F02               	goto	l37309
 22520  16F7                     u10400:
 22521                           	line	1345
 22522                           	
 22523  16F7                     l37307:	
 22524  16F7  0020               	movlb 0	; select bank0
 22525  16F8  0841               	movf	(printf@prec),w
 22526  16F9  00B9               	movwf	(??_printf+0)+0
 22527  16FA  01BA               	clrf	(??_printf+0)+0+1
 22528  16FB  1BB9               	btfsc	(??_printf+0)+0,7
 22529  16FC  03BA               	decf	(??_printf+0)+0+1,f
 22530  16FD  0839               	movf	0+(??_printf+0)+0,w
 22531  16FE  02BF               	subwf	(printf@width),f
 22532  16FF  083A               	movf	1+(??_printf+0)+0,w
 22533  1700  3BC0               	subwfb	(printf@width+1),f
 22534  1701  2F07               	goto	l37311
 22535                           	line	1346
 22536                           	
 22537  1702                     l23586:	
 22538                           	line	1347
 22539                           	
 22540  1702                     l37309:	
 22541  1702  0020               	movlb 0	; select bank0
 22542  1703  01BF               	clrf	(printf@width)
 22543  1704  01C0               	clrf	(printf@width+1)
 22544  1705  2F07               	goto	l37311
 22545                           	
 22546  1706                     l23587:	
 22547  1706  2F07               	goto	l37311
 22548                           	line	1348
 22549                           	
 22550  1707                     l23585:	
 22551                           	line	1376
 22552                           	
 22553  1707                     l37311:	
 22554  1707  0842               	movf	(printf@c),w
 22555  1708  00B9               	movwf	(??_printf+0)+0
 22556  1709  01BA               	clrf	(??_printf+0)+0+1
 22557  170A  1BB9               	btfsc	(??_printf+0)+0,7
 22558  170B  03BA               	decf	(??_printf+0)+0+1,f
 22559  170C  083A               	movf	1+(??_printf+0)+0,w
 22560  170D  3A80               	xorlw	80h
 22561  170E  00BB               	movwf	(??_printf+2)+0
 22562  170F  0840               	movf	(printf@width+1),w
 22563  1710  3A80               	xorlw	80h
 22564  1711  023B               	subwf	(??_printf+2)+0,w
 22565  1712  1D03               	skipz
 22566  1713  2F16               	goto	u10415
 22567  1714  083F               	movf	(printf@width),w
 22568  1715  0239               	subwf	0+(??_printf+0)+0,w
 22569  1716                     u10415:
 22570                           
 22571  1716  1803               	skipnc
 22572  1717  2F19               	goto	u10411
 22573  1718  2F1A               	goto	u10410
 22574  1719                     u10411:
 22575  1719  2F25               	goto	l37315
 22576  171A                     u10410:
 22577                           	line	1377
 22578                           	
 22579  171A                     l37313:	
 22580  171A  0020               	movlb 0	; select bank0
 22581  171B  0842               	movf	(printf@c),w
 22582  171C  00B9               	movwf	(??_printf+0)+0
 22583  171D  01BA               	clrf	(??_printf+0)+0+1
 22584  171E  1BB9               	btfsc	(??_printf+0)+0,7
 22585  171F  03BA               	decf	(??_printf+0)+0+1,f
 22586  1720  0839               	movf	0+(??_printf+0)+0,w
 22587  1721  02BF               	subwf	(printf@width),f
 22588  1722  083A               	movf	1+(??_printf+0)+0,w
 22589  1723  3BC0               	subwfb	(printf@width+1),f
 22590  1724  2F29               	goto	l37317
 22591                           	line	1378
 22592                           	
 22593  1725                     l23588:	
 22594                           	line	1379
 22595                           	
 22596  1725                     l37315:	
 22597  1725  0020               	movlb 0	; select bank0
 22598  1726  01BF               	clrf	(printf@width)
 22599  1727  01C0               	clrf	(printf@width+1)
 22600  1728  2F29               	goto	l37317
 22601                           	
 22602  1729                     l23589:	
 22603                           	line	1382
 22604                           	
 22605  1729                     l37317:	
 22606  1729  1D3E               	btfss	(printf@flag),(2)&7
 22607  172A  2F2C               	goto	u10421
 22608  172B  2F2D               	goto	u10420
 22609  172C                     u10421:
 22610  172C  2F52               	goto	l37329
 22611  172D                     u10420:
 22612                           	line	1387
 22613                           	
 22614  172D                     l37319:	
 22615  172D  083E               	movf	(printf@flag),w
 22616  172E  3903               	andlw	03h
 22617  172F  1903               	btfsc	status,2
 22618  1730  2F32               	goto	u10431
 22619  1731  2F33               	goto	u10430
 22620  1732                     u10431:
 22621  1732  2F38               	goto	l37323
 22622  1733                     u10430:
 22623                           	line	1388
 22624                           	
 22625  1733                     l37321:	
 22626  1733  302D               	movlw	(02Dh)
 22627  1734  31AB  2310  3194   	fcall	_putch
 22628  1737  2F38               	goto	l37323
 22629                           	
 22630  1738                     l23591:	
 22631                           	line	1410
 22632                           	
 22633  1738                     l37323:	
 22634  1738  0020               	movlb 0	; select bank0
 22635  1739  0840               	movf	(printf@width+1),w
 22636  173A  043F               	iorwf	(printf@width),w
 22637  173B  1903               	skipnz
 22638  173C  2F3E               	goto	u10441
 22639  173D  2F3F               	goto	u10440
 22640  173E                     u10441:
 22641  173E  2FDA               	goto	l37349
 22642  173F                     u10440:
 22643  173F  2F40               	goto	l37325
 22644                           	line	1411
 22645                           	
 22646  1740                     l23593:	
 22647                           	line	1412
 22648                           	
 22649  1740                     l37325:	
 22650  1740  3030               	movlw	(030h)
 22651  1741  31AB  2310  3194   	fcall	_putch
 22652                           	line	1413
 22653                           	
 22654  1744                     l37327:	
 22655  1744  30FF               	movlw	low(-1)
 22656  1745  0020               	movlb 0	; select bank0
 22657  1746  07BF               	addwf	(printf@width),f
 22658  1747  30FF               	movlw	high(-1)
 22659  1748  3DC0               	addwfc	(printf@width+1),f
 22660  1749  0840               	movf	(((printf@width+1))),w
 22661  174A  043F               	iorwf	(((printf@width))),w
 22662  174B  1D03               	skipz
 22663  174C  2F4E               	goto	u10451
 22664  174D  2F4F               	goto	u10450
 22665  174E                     u10451:
 22666  174E  2F40               	goto	l37325
 22667  174F                     u10450:
 22668  174F  2FDA               	goto	l37349
 22669                           	
 22670  1750                     l23594:	
 22671  1750  2FDA               	goto	l37349
 22672                           	
 22673  1751                     l23592:	
 22674                           	line	1415
 22675  1751  2FDA               	goto	l37349
 22676                           	
 22677  1752                     l23590:	
 22678                           	line	1423
 22679                           	
 22680  1752                     l37329:	
 22681  1752  0840               	movf	(printf@width+1),w
 22682  1753  043F               	iorwf	(printf@width),w
 22683  1754  1903               	skipnz
 22684  1755  2F57               	goto	u10461
 22685  1756  2F58               	goto	u10460
 22686  1757                     u10461:
 22687  1757  2F6A               	goto	l37335
 22688  1758                     u10460:
 22689  1758  2F59               	goto	l37331
 22690                           	line	1424
 22691                           	
 22692  1759                     l23597:	
 22693                           	line	1425
 22694                           	
 22695  1759                     l37331:	
 22696  1759  3020               	movlw	(020h)
 22697  175A  31AB  2310  3194   	fcall	_putch
 22698                           	line	1426
 22699                           	
 22700  175D                     l37333:	
 22701  175D  30FF               	movlw	low(-1)
 22702  175E  0020               	movlb 0	; select bank0
 22703  175F  07BF               	addwf	(printf@width),f
 22704  1760  30FF               	movlw	high(-1)
 22705  1761  3DC0               	addwfc	(printf@width+1),f
 22706  1762  0840               	movf	(((printf@width+1))),w
 22707  1763  043F               	iorwf	(((printf@width))),w
 22708  1764  1D03               	skipz
 22709  1765  2F67               	goto	u10471
 22710  1766  2F68               	goto	u10470
 22711  1767                     u10471:
 22712  1767  2F59               	goto	l37331
 22713  1768                     u10470:
 22714  1768  2F6A               	goto	l37335
 22715                           	
 22716  1769                     l23598:	
 22717  1769  2F6A               	goto	l37335
 22718                           	
 22719  176A                     l23596:	
 22720                           	line	1433
 22721                           	
 22722  176A                     l37335:	
 22723  176A  083E               	movf	(printf@flag),w
 22724  176B  3903               	andlw	03h
 22725  176C  1903               	btfsc	status,2
 22726  176D  2F6F               	goto	u10481
 22727  176E  2F70               	goto	u10480
 22728  176F                     u10481:
 22729  176F  2FDA               	goto	l37349
 22730  1770                     u10480:
 22731                           	line	1434
 22732                           	
 22733  1770                     l37337:	
 22734  1770  302D               	movlw	(02Dh)
 22735  1771  31AB  2310  3194   	fcall	_putch
 22736  1774  2FDA               	goto	l37349
 22737                           	
 22738  1775                     l23599:	
 22739  1775  2FDA               	goto	l37349
 22740                           	line	1464
 22741                           	
 22742  1776                     l23595:	
 22743                           	line	1469
 22744  1776  2FDA               	goto	l37349
 22745                           	
 22746  1777                     l23601:	
 22747                           	line	1471
 22748  1777  2FC8               	goto	l37345
 22749                           	line	1478
 22750                           	
 22751  1778                     l23603:	
 22752  1778  2F79               	goto	l37339
 22753                           	line	1481
 22754                           	
 22755  1779                     l23604:	
 22756                           	line	1484
 22757                           	
 22758  1779                     l37339:	
 22759  1779  300A               	movlw	low(0Ah)
 22760  177A  0020               	movlb 0	; select bank0
 22761  177B  00A9               	movwf	(?___lwmod)
 22762  177C  3000               	movlw	high(0Ah)
 22763  177D  00AA               	movwf	((?___lwmod))+1
 22764  177E  0841               	movf	(printf@prec),w
 22765  177F  0709               	addwf	wreg,w
 22766  1780  3E01               	addlw	low(_dpowers|8000h)
 22767  1781  0084               	movwf	fsr0l
 22768  1782  3082               	movlw	high(_dpowers|8000h)
 22769  1783  1803               	skipnc
 22770  1784  3E01               	addlw	1
 22771  1785  0085               	movwf	fsr0h
 22772  1786  3F00               	moviw	[0]fsr0
 22773  1787  00A1               	movwf	(?___lwdiv)
 22774  1788  3F01               	moviw	[1]fsr0
 22775  1789  00A2               	movwf	(?___lwdiv+1)
 22776  178A  0844               	movf	(printf@_val+1),w
 22777  178B  01A4               	clrf	1+(?___lwdiv)+02h
 22778  178C  07A4               	addwf	1+(?___lwdiv)+02h
 22779  178D  0843               	movf	(printf@_val),w
 22780  178E  01A3               	clrf	0+(?___lwdiv)+02h
 22781  178F  07A3               	addwf	0+(?___lwdiv)+02h
 22782                           
 22783  1790  3189  2145  3194   	fcall	___lwdiv
 22784  1793  0020               	movlb 0	; select bank0
 22785  1794  0822               	movf	(1+(?___lwdiv)),w
 22786  1795  01AC               	clrf	1+(?___lwmod)+02h
 22787  1796  07AC               	addwf	1+(?___lwmod)+02h
 22788  1797  0821               	movf	(0+(?___lwdiv)),w
 22789  1798  01AB               	clrf	0+(?___lwmod)+02h
 22790  1799  07AB               	addwf	0+(?___lwmod)+02h
 22791                           
 22792  179A  31AC  24D8  3194   	fcall	___lwmod
 22793  179D  0020               	movlb 0	; select bank0
 22794  179E  0829               	movf	(0+(?___lwmod)),w
 22795  179F  3E30               	addlw	030h
 22796  17A0  00B9               	movwf	(??_printf+0)+0
 22797  17A1  0839               	movf	(??_printf+0)+0,w
 22798  17A2  00C2               	movwf	(printf@c)
 22799                           	line	1486
 22800  17A3  2FD5               	goto	l37347
 22801                           	line	1492
 22802                           	
 22803  17A4                     l23606:	
 22804                           	line	1497
 22805                           	
 22806  17A4                     l37341:	
 22807  17A4  0841               	movf	(printf@prec),w
 22808  17A5  0709               	addwf	wreg,w
 22809  17A6  3E0B               	addlw	low(_hexpowers|8000h)
 22810  17A7  0084               	movwf	fsr0l
 22811  17A8  3082               	movlw	high(_hexpowers|8000h)
 22812  17A9  1803               	skipnc
 22813  17AA  3E01               	addlw	1
 22814  17AB  0085               	movwf	fsr0h
 22815  17AC  3F00               	moviw	[0]fsr0
 22816  17AD  00A1               	movwf	(?___lwdiv)
 22817  17AE  3F01               	moviw	[1]fsr0
 22818  17AF  00A2               	movwf	(?___lwdiv+1)
 22819  17B0  0844               	movf	(printf@_val+1),w
 22820  17B1  01A4               	clrf	1+(?___lwdiv)+02h
 22821  17B2  07A4               	addwf	1+(?___lwdiv)+02h
 22822  17B3  0843               	movf	(printf@_val),w
 22823  17B4  01A3               	clrf	0+(?___lwdiv)+02h
 22824  17B5  07A3               	addwf	0+(?___lwdiv)+02h
 22825                           
 22826  17B6  3189  2145  3194   	fcall	___lwdiv
 22827  17B9  0020               	movlb 0	; select bank0
 22828  17BA  0821               	movf	(0+(?___lwdiv)),w
 22829  17BB  390F               	andlw	0Fh
 22830  17BC  3EC1               	addlw	low(STR_115|8000h)
 22831  17BD  0084               	movwf	fsr0l
 22832  17BE  3086               	movlw	high(STR_115|8000h)
 22833  17BF  1803               	skipnc
 22834  17C0  3E01               	addlw	1
 22835  17C1  0085               	movwf	fsr0h
 22836  17C2  0800               	movf	indf0,w ;code access
 22837  17C3  00B9               	movwf	(??_printf+0)+0
 22838  17C4  0839               	movf	(??_printf+0)+0,w
 22839  17C5  00C2               	movwf	(printf@c)
 22840                           	line	1502
 22841  17C6  2FD5               	goto	l37347
 22842                           	line	1515
 22843                           	
 22844  17C7                     l37343:	
 22845  17C7  2FD5               	goto	l37347
 22846                           	line	1471
 22847                           	
 22848  17C8                     l23602:	
 22849                           	
 22850  17C8                     l37345:	
 22851  17C8  0020               	movlb 0	; select bank0
 22852  17C9  083E               	movf	(printf@flag),w
 22853  17CA  39C0               	andlw	0C0h
 22854                           	; Switch size 1, requested type "space"
 22855                           ; Number of cases is 3, Range of values is 0 to 192
 22856                           ; switch strategies available:
 22857                           ; Name         Instructions Cycles
 22858                           ; simple_byte           10     6 (average)
 22859                           ; jumptable            260     6 (fixed)
 22860                           ; rangetable           197     6 (fixed)
 22861                           ; spacedrange          391     8 (fixed)
 22862                           ; locatedrange         193     3 (fixed)
 22863                           ;	Chosen strategy is simple_byte
 22864                           
 22865                           	opt asmopt_off
 22866  17CB  3A00               	xorlw	0^0	; case 0
 22867  17CC  1903               	skipnz
 22868  17CD  2F79               	goto	l37339
 22869  17CE  3A80               	xorlw	128^0	; case 128
 22870  17CF  1903               	skipnz
 22871  17D0  2FA4               	goto	l37341
 22872  17D1  3A40               	xorlw	192^128	; case 192
 22873  17D2  1903               	skipnz
 22874  17D3  2F79               	goto	l37339
 22875  17D4  2FD5               	goto	l37347
 22876                           	opt asmopt_on
 22877                           
 22878                           	line	1515
 22879                           	
 22880  17D5                     l23605:	
 22881                           	line	1516
 22882                           	
 22883  17D5                     l37347:	
 22884  17D5  0842               	movf	(printf@c),w
 22885  17D6  31AB  2310  3194   	fcall	_putch
 22886  17D9  2FDA               	goto	l37349
 22887                           	line	1517
 22888                           	
 22889  17DA                     l23600:	
 22890                           	line	1469
 22891                           	
 22892  17DA                     l37349:	
 22893  17DA  30FF               	movlw	(-1)
 22894  17DB  0020               	movlb 0	; select bank0
 22895  17DC  00B9               	movwf	(??_printf+0)+0
 22896  17DD  0839               	movf	(??_printf+0)+0,w
 22897  17DE  07C1               	addwf	(printf@prec),f
 22898  17DF  0841               	movf	((printf@prec)),w
 22899  17E0  3AFF               	xorlw	-1&0ffh
 22900  17E1  1D03               	skipz
 22901  17E2  2FE4               	goto	u10491
 22902  17E3  2FE5               	goto	u10490
 22903  17E4                     u10491:
 22904  17E4  2FC8               	goto	l37345
 22905  17E5                     u10490:
 22906  17E5  2FE7               	goto	l37351
 22907                           	
 22908  17E6                     l23607:	
 22909  17E6  2FE7               	goto	l37351
 22910                           	line	1525
 22911                           	
 22912  17E7                     l23525:	
 22913                           	line	540
 22914                           	
 22915  17E7                     l37351:	
 22916  17E7  0020               	movlb 0	; select bank0
 22917  17E8  0830               	movf	(printf@f+1),w
 22918  17E9  00BA               	movwf	(??_printf+0)+0+1
 22919  17EA  082F               	movf	(printf@f),w
 22920  17EB  00B9               	movwf	(??_printf+0)+0
 22921  17EC  3001               	movlw	(01h)
 22922  17ED  07AF               	addwf	(printf@f),f
 22923  17EE  1803               	skipnc
 22924  17EF  0AB0               	incf	(printf@f+1),f
 22925  17F0  0839               	movf	0+(??_printf+0)+0,w
 22926  17F1  0084               	movwf	fsr0l
 22927  17F2  083A               	movf	(1+(??_printf+0)+0),w
 22928  17F3  0085               	movwf	fsr0h
 22929  17F4  0800               	movf	indf0,w ;code access
 22930  17F5  00BB               	movwf	(??_printf+2)+0
 22931  17F6  083B               	movf	(??_printf+2)+0,w
 22932  17F7  00C2               	movwf	(printf@c)
 22933  17F8  08C2               	movf	((printf@c)),f
 22934  17F9  1D03               	skipz
 22935  17FA  2FFC               	goto	u10501
 22936  17FB  2FFD               	goto	u10500
 22937  17FC                     u10501:
 22938  17FC  2CA6               	goto	l37161
 22939  17FD                     u10500:
 22940  17FD  2FFF               	goto	l23609
 22941                           	
 22942  17FE                     l23608:	
 22943  17FE  2FFF               	goto	l23609
 22944                           	line	1527
 22945                           	
 22946  17FF                     l23544:	
 22947                           	line	1533
 22948                           ;	Return value of _printf is never used
 22949                           	
 22950  17FF                     l23609:	
 22951  17FF  0008               	return
 22952                           	opt stack 0
 22953                           GLOBAL	__end_of_printf
 22954  1800                     	__end_of_printf:
 22955 ;; =============== function _printf ends ============
 22956                           
 22957                           	signat	_printf,602
 22958                           	global	_serial_init
 22959                           psect	text3360,local,class=CODE,delta=2
 22960                           global __ptext3360
 22961  192D                     __ptext3360:
 22962                           
 22963 ;; *************** function _serial_init *****************
 22964 ;; Defined at:
 22965 ;;		line 37 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 22966 ;; Parameters:    Size  Location     Type
 22967 ;;  bitrate         4   14[BANK0 ] unsigned long 
 22968 ;;  flow            1   18[BANK0 ] unsigned char 
 22969 ;; Auto vars:     Size  Location     Type
 22970 ;;  divider         4   31[BANK0 ] unsigned long 
 22971 ;; Return value:  Size  Location     Type
 22972 ;;		None               void
 22973 ;; Registers used:
 22974 ;;		wreg, status,2, status,0, pclath, cstack
 22975 ;; Tracked objects:
 22976 ;;		On entry : 0/0
 22977 ;;		On exit  : 0/0
 22978 ;;		Unchanged: 0/0
 22979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22980 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 22981 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22982 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 22983 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
       0       0
 22984 ;;Total ram usage:       21 bytes
 22985 ;; Hardware stack levels used:    1
 22986 ;; Hardware stack levels required when called:    3
 22987 ;; This function calls:
 22988 ;;		___lldiv
 22989 ;; This function is called by:
 22990 ;;		_main
 22991 ;; This function uses a non-reentrant model
 22992 ;;
 22993                           psect	text3360
 22994                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 22995                           	line	37
 22996                           	global	__size_of_serial_init
 22997  00CC                     	__size_of_serial_init	equ	__end_of_serial_init-_serial_init
 22998                           	
 22999  192D                     _serial_init:	
 23000                           	opt	stack 12
 23001                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
 23002                           	line	39
 23003                           	
 23004  192D                     l34549:	
 23005                           ;serial.c: 39: rx.head = 0;
 23006  192D  30F8               	movlw	((0 & ((1<<3)-1))<<0)|not (((1<<3)-1)<<0)
 23007  192E  0022               	movlb 2	; select bank2
 23008  192F  05B9               	andwf	0+(_rx)^0100h+08h,f
 23009                           	line	40
 23010                           ;serial.c: 40: rx.tail = 0;
 23011  1930  30C7               	movlw	((0 & ((1<<3)-1))<<3)|not (((1<<3)-1)<<3)
 23012  1931  05B9               	andwf	0+(_rx)^0100h+08h,f
 23013                           	line	41
 23014                           	
 23015  1932                     l34551:	
 23016                           ;serial.c: 41: rx.xon_enabled = flow;
 23017  1932  0020               	movlb 0	; select bank0
 23018  1933  0833               	movf	(serial_init@flow),w
 23019  1934  0022               	movlb 2	; select bank2
 23020  1935  1339               	bcf	0+(_rx)^0100h+08h,6
 23021  1936  1D03               	skipz
 23022  1937  1739               	bsf	0+(_rx)^0100h+08h,6
 23023                           	line	42
 23024                           	
 23025  1938                     l34553:	
 23026                           ;serial.c: 42: rx.xon_state = 1;
 23027  1938  17B9               	bsf	0+(_rx)^0100h+08h,7
 23028                           	line	55
 23029                           	
 23030  1939                     l34555:	
 23031                           ;serial.c: 55: BRG16 = 1;
 23032  1939  0023               	movlb 3	; select bank3
 23033  193A  159F               	bsf	(3323/8)^0180h,(3323)&7
 23034                           	line	56
 23035                           	
 23036  193B                     l34557:	
 23037                           ;serial.c: 56: if (BRG16) {
 23038  193B  1D9F               	btfss	(3323/8)^0180h,(3323)&7
 23039  193C  293E               	goto	u6701
 23040  193D  293F               	goto	u6700
 23041  193E                     u6701:
 23042  193E  298A               	goto	l34565
 23043  193F                     u6700:
 23044                           	line	58
 23045                           	
 23046  193F                     l34559:	
 23047                           ;serial.c: 58: unsigned long divider = ((2*(((2*((4UL * (1000UL * ((1000UL)))))+(4UL))/(
                                 2*(4UL))))+(bitrate))/(2*(bitrate)))-1;
 23048  193F  0020               	movlb 0	; select bank0
 23049  1940  082F               	movf	(serial_init@bitrate),w
 23050  1941  00B4               	movwf	(??_serial_init+0)+0
 23051  1942  0830               	movf	(serial_init@bitrate+1),w
 23052  1943  00B5               	movwf	((??_serial_init+0)+0+1)
 23053  1944  0831               	movf	(serial_init@bitrate+2),w
 23054  1945  00B6               	movwf	((??_serial_init+0)+0+2)
 23055  1946  0832               	movf	(serial_init@bitrate+3),w
 23056  1947  00B7               	movwf	((??_serial_init+0)+0+3)
 23057  1948  3001               	movlw	01h
 23058  1949                     u6715:
 23059  1949  35B4               	lslf	(??_serial_init+0)+0,f
 23060  194A  0DB5               	rlf	(??_serial_init+0)+1,f
 23061  194B  0DB6               	rlf	(??_serial_init+0)+2,f
 23062  194C  0DB7               	rlf	(??_serial_init+0)+3,f
 23063  194D                     u6710:
 23064  194D  0B89               	decfsz	wreg,f
 23065  194E  2949               	goto	u6715
 23066  194F  0837               	movf	3+(??_serial_init+0)+0,w
 23067  1950  00A4               	movwf	(?___lldiv+3)
 23068  1951  0836               	movf	2+(??_serial_init+0)+0,w
 23069  1952  00A3               	movwf	(?___lldiv+2)
 23070  1953  0835               	movf	1+(??_serial_init+0)+0,w
 23071  1954  00A2               	movwf	(?___lldiv+1)
 23072  1955  0834               	movf	0+(??_serial_init+0)+0,w
 23073  1956  00A1               	movwf	(?___lldiv)
 23074                           
 23075  1957  3080               	movlw	080h
 23076  1958  072F               	addwf	((serial_init@bitrate)),w
 23077  1959  00A5               	movwf	0+(?___lldiv)+04h
 23078  195A  3084               	movlw	084h
 23079  195B  3D30               	addwfc	((serial_init@bitrate+1)),w
 23080  195C  00A6               	movwf	1+0+(?___lldiv)+04h
 23081  195D  301E               	movlw	01Eh
 23082  195E  3D31               	addwfc	((serial_init@bitrate+2)),w
 23083  195F  00A7               	movwf	2+0+(?___lldiv)+04h
 23084  1960  3000               	movlw	0
 23085  1961  3D32               	addwfc	((serial_init@bitrate+3)),w
 23086  1962  00A8               	movwf	3+0+(?___lldiv)+04h
 23087  1963  31A0  206C  3199   	fcall	___lldiv
 23088  1966  30FF               	movlw	0FFh
 23089  1967  0020               	movlb 0	; select bank0
 23090  1968  0721               	addwf	((0+(?___lldiv))),w
 23091  1969  00C0               	movwf	(serial_init@divider)
 23092  196A  30FF               	movlw	0FFh
 23093  196B  3D22               	addwfc	((1+(?___lldiv))),w
 23094  196C  00C1               	movwf	1+(serial_init@divider)
 23095  196D  30FF               	movlw	0FFh
 23096  196E  3D23               	addwfc	((2+(?___lldiv))),w
 23097  196F  00C2               	movwf	2+(serial_init@divider)
 23098  1970  30FF               	movlw	0FFh
 23099  1971  3D24               	addwfc	((3+(?___lldiv))),w
 23100  1972  00C3               	movwf	3+(serial_init@divider)
 23101                           	line	60
 23102                           	
 23103  1973                     l34561:	
 23104                           ;serial.c: 60: SPBRG = divider & 0x00FF;
 23105  1973  0840               	movf	(serial_init@divider),w
 23106  1974  0023               	movlb 3	; select bank3
 23107  1975  009B               	movwf	(411)^0180h	;volatile
 23108                           	line	61
 23109                           	
 23110  1976                     l34563:	
 23111                           ;serial.c: 61: SPBRGH = (divider & 0xFF00) >> 8;
 23112  1976  0020               	movlb 0	; select bank0
 23113  1977  0840               	movf	(serial_init@divider),w
 23114  1978  00B4               	movwf	(??_serial_init+0)+0
 23115  1979  0841               	movf	(serial_init@divider+1),w
 23116  197A  00B5               	movwf	((??_serial_init+0)+0+1)
 23117  197B  0842               	movf	(serial_init@divider+2),w
 23118  197C  00B6               	movwf	((??_serial_init+0)+0+2)
 23119  197D  0843               	movf	(serial_init@divider+3),w
 23120  197E  00B7               	movwf	((??_serial_init+0)+0+3)
 23121  197F  3008               	movlw	08h
 23122  1980                     u6725:
 23123  1980  36B7               	lsrf	(??_serial_init+0)+3,f
 23124  1981  0CB6               	rrf	(??_serial_init+0)+2,f
 23125  1982  0CB5               	rrf	(??_serial_init+0)+1,f
 23126  1983  0CB4               	rrf	(??_serial_init+0)+0,f
 23127  1984                     u6720:
 23128  1984  0B89               	decfsz	wreg,f
 23129  1985  2980               	goto	u6725
 23130  1986  0834               	movf	0+(??_serial_init+0)+0,w
 23131  1987  0023               	movlb 3	; select bank3
 23132  1988  009C               	movwf	(412)^0180h	;volatile
 23133                           	line	62
 23134                           ;serial.c: 62: } else
 23135  1989  29DD               	goto	l34567
 23136                           	
 23137  198A                     l19292:	
 23138                           	line	64
 23139                           	
 23140  198A                     l34565:	
 23141                           ;serial.c: 64: SPBRG = ((2*(((2*((4UL * (1000UL * ((1000UL)))))+(bitrate))/(2*(bitrate))
                                 ))+(16UL))/(2*(16UL)))-1;
 23142  198A  3010               	movlw	010h
 23143  198B  0020               	movlb 0	; select bank0
 23144  198C  00B4               	movwf	((??_serial_init+0)+0)
 23145  198D  3000               	movlw	0
 23146  198E  00B5               	movwf	((??_serial_init+0)+0+1)
 23147  198F  3000               	movlw	0
 23148  1990  00B6               	movwf	((??_serial_init+0)+0+2)
 23149  1991  3000               	movlw	0
 23150  1992  00B7               	movwf	((??_serial_init+0)+0+3)
 23151  1993  082F               	movf	(serial_init@bitrate),w
 23152  1994  00B8               	movwf	(??_serial_init+4)+0
 23153  1995  0830               	movf	(serial_init@bitrate+1),w
 23154  1996  00B9               	movwf	((??_serial_init+4)+0+1)
 23155  1997  0831               	movf	(serial_init@bitrate+2),w
 23156  1998  00BA               	movwf	((??_serial_init+4)+0+2)
 23157  1999  0832               	movf	(serial_init@bitrate+3),w
 23158  199A  00BB               	movwf	((??_serial_init+4)+0+3)
 23159  199B  3001               	movlw	01h
 23160  199C                     u6735:
 23161  199C  35B8               	lslf	(??_serial_init+4)+0,f
 23162  199D  0DB9               	rlf	(??_serial_init+4)+1,f
 23163  199E  0DBA               	rlf	(??_serial_init+4)+2,f
 23164  199F  0DBB               	rlf	(??_serial_init+4)+3,f
 23165  19A0                     u6730:
 23166  19A0  0B89               	decfsz	wreg,f
 23167  19A1  299C               	goto	u6735
 23168  19A2  083B               	movf	3+(??_serial_init+4)+0,w
 23169  19A3  00A4               	movwf	(?___lldiv+3)
 23170  19A4  083A               	movf	2+(??_serial_init+4)+0,w
 23171  19A5  00A3               	movwf	(?___lldiv+2)
 23172  19A6  0839               	movf	1+(??_serial_init+4)+0,w
 23173  19A7  00A2               	movwf	(?___lldiv+1)
 23174  19A8  0838               	movf	0+(??_serial_init+4)+0,w
 23175  19A9  00A1               	movwf	(?___lldiv)
 23176                           
 23177  19AA  3000               	movlw	0
 23178  19AB  072F               	addwf	((serial_init@bitrate)),w
 23179  19AC  00A5               	movwf	0+(?___lldiv)+04h
 23180  19AD  3012               	movlw	012h
 23181  19AE  3D30               	addwfc	((serial_init@bitrate+1)),w
 23182  19AF  00A6               	movwf	1+0+(?___lldiv)+04h
 23183  19B0  307A               	movlw	07Ah
 23184  19B1  3D31               	addwfc	((serial_init@bitrate+2)),w
 23185  19B2  00A7               	movwf	2+0+(?___lldiv)+04h
 23186  19B3  3000               	movlw	0
 23187  19B4  3D32               	addwfc	((serial_init@bitrate+3)),w
 23188  19B5  00A8               	movwf	3+0+(?___lldiv)+04h
 23189  19B6  31A0  206C  3199   	fcall	___lldiv
 23190  19B9  0020               	movlb 0	; select bank0
 23191  19BA  0821               	movf	(0+?___lldiv),w
 23192  19BB  00BC               	movwf	(??_serial_init+8)+0
 23193  19BC  0822               	movf	(1+?___lldiv),w
 23194  19BD  00BD               	movwf	((??_serial_init+8)+0+1)
 23195  19BE  0823               	movf	(2+?___lldiv),w
 23196  19BF  00BE               	movwf	((??_serial_init+8)+0+2)
 23197  19C0  0824               	movf	(3+?___lldiv),w
 23198  19C1  00BF               	movwf	((??_serial_init+8)+0+3)
 23199  19C2  3001               	movlw	01h
 23200  19C3                     u6745:
 23201  19C3  35BC               	lslf	(??_serial_init+8)+0,f
 23202  19C4  0DBD               	rlf	(??_serial_init+8)+1,f
 23203  19C5  0DBE               	rlf	(??_serial_init+8)+2,f
 23204  19C6  0DBF               	rlf	(??_serial_init+8)+3,f
 23205  19C7                     u6740:
 23206  19C7  0B89               	decfsz	wreg,f
 23207  19C8  29C3               	goto	u6745
 23208  19C9  083C               	movf	0+(??_serial_init+8)+0,w
 23209  19CA  07B4               	addwf	(??_serial_init+0)+0,f
 23210  19CB  083D               	movf	1+(??_serial_init+8)+0,w
 23211  19CC  3DB5               	addwfc	(??_serial_init+0)+1,f
 23212  19CD  083E               	movf	2+(??_serial_init+8)+0,w
 23213  19CE  3DB6               	addwfc	(??_serial_init+0)+2,f
 23214  19CF  083F               	movf	3+(??_serial_init+8)+0,w
 23215  19D0  3DB7               	addwfc	(??_serial_init+0)+3,f
 23216  19D1  3005               	movlw	05h
 23217  19D2                     u6755:
 23218  19D2  36B7               	lsrf	(??_serial_init+0)+3,f
 23219  19D3  0CB6               	rrf	(??_serial_init+0)+2,f
 23220  19D4  0CB5               	rrf	(??_serial_init+0)+1,f
 23221  19D5  0CB4               	rrf	(??_serial_init+0)+0,f
 23222  19D6                     u6750:
 23223  19D6  0B89               	decfsz	wreg,f
 23224  19D7  29D2               	goto	u6755
 23225  19D8  0834               	movf	0+(??_serial_init+0)+0,w
 23226  19D9  3EFF               	addlw	0FFh
 23227  19DA  0023               	movlb 3	; select bank3
 23228  19DB  009B               	movwf	(411)^0180h	;volatile
 23229  19DC  29DD               	goto	l34567
 23230                           	
 23231  19DD                     l19293:	
 23232                           	line	67
 23233                           	
 23234  19DD                     l34567:	
 23235                           ;serial.c: 67: CSRC = 1;
 23236  19DD  179E               	bsf	(3319/8)^0180h,(3319)&7
 23237                           	line	68
 23238                           	
 23239  19DE                     l34569:	
 23240                           ;serial.c: 68: BRGH = 1;
 23241  19DE  151E               	bsf	(3314/8)^0180h,(3314)&7
 23242                           	line	69
 23243                           	
 23244  19DF                     l34571:	
 23245                           ;serial.c: 69: SYNC = 0;
 23246  19DF  121E               	bcf	(3316/8)^0180h,(3316)&7
 23247                           	line	70
 23248                           	
 23249  19E0                     l34573:	
 23250                           ;serial.c: 70: SPEN = 1;
 23251  19E0  179D               	bsf	(3311/8)^0180h,(3311)&7
 23252                           	line	71
 23253                           	
 23254  19E1                     l34575:	
 23255                           ;serial.c: 71: RCIE = 0;
 23256  19E1  0021               	movlb 1	; select bank1
 23257  19E2  1291               	bcf	(1165/8)^080h,(1165)&7
 23258                           	line	72
 23259                           	
 23260  19E3                     l34577:	
 23261                           ;serial.c: 72: TXIE = 0;
 23262  19E3  1211               	bcf	(1164/8)^080h,(1164)&7
 23263                           	line	73
 23264                           	
 23265  19E4                     l34579:	
 23266                           ;serial.c: 73: RX9 = 0;
 23267  19E4  0023               	movlb 3	; select bank3
 23268  19E5  131D               	bcf	(3310/8)^0180h,(3310)&7
 23269                           	line	74
 23270                           	
 23271  19E6                     l34581:	
 23272                           ;serial.c: 74: TX9 = 0;
 23273  19E6  131E               	bcf	(3318/8)^0180h,(3318)&7
 23274                           	line	75
 23275                           	
 23276  19E7                     l34583:	
 23277                           ;serial.c: 75: CREN = 0;
 23278  19E7  121D               	bcf	(3308/8)^0180h,(3308)&7
 23279                           	line	76
 23280                           	
 23281  19E8                     l34585:	
 23282                           ;serial.c: 76: CREN = 1;
 23283  19E8  161D               	bsf	(3308/8)^0180h,(3308)&7
 23284                           	line	77
 23285                           	
 23286  19E9                     l34587:	
 23287                           ;serial.c: 77: TXEN = 0;
 23288  19E9  129E               	bcf	(3317/8)^0180h,(3317)&7
 23289                           	line	78
 23290                           	
 23291  19EA                     l34589:	
 23292                           ;serial.c: 78: TXEN = 1;
 23293  19EA  169E               	bsf	(3317/8)^0180h,(3317)&7
 23294                           	line	81
 23295                           	
 23296  19EB                     l34591:	
 23297                           ;serial.c: 81: RCIE = 1;
 23298  19EB  0021               	movlb 1	; select bank1
 23299  19EC  1691               	bsf	(1165/8)^080h,(1165)&7
 23300                           	line	83
 23301                           	
 23302  19ED                     l34593:	
 23303                           ;serial.c: 83: if (rx.xon_enabled) {
 23304  19ED  0022               	movlb 2	; select bank2
 23305  19EE  1F39               	btfss	0+(_rx)^0100h+08h,6
 23306  19EF  29F1               	goto	u6761
 23307  19F0  29F2               	goto	u6760
 23308  19F1                     u6761:
 23309  19F1  29F8               	goto	l19295
 23310  19F2                     u6760:
 23311                           	line	84
 23312                           	
 23313  19F2                     l34595:	
 23314                           ;serial.c: 84: TXREG = 0x11;
 23315  19F2  3011               	movlw	(011h)
 23316  19F3  0023               	movlb 3	; select bank3
 23317  19F4  009A               	movwf	(410)^0180h	;volatile
 23318                           	line	85
 23319                           	
 23320  19F5                     l34597:	
 23321                           ;serial.c: 85: rx.xon_state = 1;
 23322  19F5  0022               	movlb 2	; select bank2
 23323  19F6  17B9               	bsf	0+(_rx)^0100h+08h,7
 23324  19F7  29F8               	goto	l19295
 23325                           	line	86
 23326                           	
 23327  19F8                     l19294:	
 23328                           	line	88
 23329                           	
 23330  19F8                     l19295:	
 23331  19F8  0008               	return
 23332                           	opt stack 0
 23333                           GLOBAL	__end_of_serial_init
 23334  19F9                     	__end_of_serial_init:
 23335 ;; =============== function _serial_init ends ============
 23336                           
 23337                           	signat	_serial_init,8312
 23338                           	global	_catgenie_init
 23339                           psect	text3361,local,class=CODE,delta=2
 23340                           global __ptext3361
 23341  0053                     __ptext3361:
 23342                           
 23343 ;; *************** function _catgenie_init *****************
 23344 ;; Defined at:
 23345 ;;		line 102 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 23346 ;; Parameters:    Size  Location     Type
 23347 ;;		None
 23348 ;; Auto vars:     Size  Location     Type
 23349 ;;  mask            1    7[BANK0 ] unsigned char 
 23350 ;;  temp            1    8[BANK0 ] unsigned char 
 23351 ;; Return value:  Size  Location     Type
 23352 ;;                  1    wreg      unsigned char 
 23353 ;; Registers used:
 23354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23355 ;; Tracked objects:
 23356 ;;		On entry : 0/0
 23357 ;;		On exit  : 0/0
 23358 ;;		Unchanged: 0/0
 23359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23362 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23363 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 23364 ;;Total ram usage:        5 bytes
 23365 ;; Hardware stack levels used:    1
 23366 ;; Hardware stack levels required when called:    3
 23367 ;; This function calls:
 23368 ;;		___bmul
 23369 ;; This function is called by:
 23370 ;;		_main
 23371 ;; This function uses a non-reentrant model
 23372 ;;
 23373                           psect	text3361
 23374                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 23375                           	line	102
 23376                           	global	__size_of_catgenie_init
 23377  00AC                     	__size_of_catgenie_init	equ	__end_of_catgenie_init-_catgenie_init
 23378                           	
 23379  0053                     _catgenie_init:	
 23380                           	opt	stack 12
 23381                           ; Regs used in _catgenie_init: [wreg+fsr1l-status,0+pclath+cstack]
 23382                           	line	107
 23383                           	
 23384  0053                     l37107:	
 23385                           ;catgenie120.c: 103: unsigned char temp ;
 23386                           ;catgenie120.c: 107: nWPUEN = 0;
 23387  0053  0021               	movlb 1	; select bank1
 23388  0054  1395               	bcf	(1199/8)^080h,(1199)&7
 23389                           	line	115
 23390                           	
 23391  0055                     l37109:	
 23392                           ;catgenie120.c: 113: TRISA = (1U << (0)) |
 23393                           ;catgenie120.c: 114: (1U << (4)) |
 23394                           ;catgenie120.c: 115: (1U << (1));
 23395  0055  3013               	movlw	(013h)
 23396  0056  008C               	movwf	(140)^080h	;volatile
 23397                           	line	116
 23398                           	
 23399  0057                     l37111:	
 23400                           ;catgenie120.c: 116: PORTA = 0x00;
 23401  0057  0020               	movlb 0	; select bank0
 23402  0058  018C               	clrf	(12)	;volatile
 23403                           	line	123
 23404                           	
 23405  0059                     l37113:	
 23406                           ;catgenie120.c: 123: ANSELA = (1U << (1));
 23407  0059  3002               	movlw	(02h)
 23408  005A  0023               	movlb 3	; select bank3
 23409  005B  008C               	movwf	(396)^0180h	;volatile
 23410                           	line	139
 23411                           	
 23412  005C                     l37115:	
 23413                           ;catgenie120.c: 133: TRISB = (1U << ((0))) |
 23414                           ;catgenie120.c: 134: (1U << (3)) |
 23415                           ;catgenie120.c: 135: (1U << (1)) |
 23416                           ;catgenie120.c: 136: (1U << (4)) |
 23417                           ;catgenie120.c: 137: (1U << ((5))) |
 23418                           ;catgenie120.c: 138: (1U << (6)) |
 23419                           ;catgenie120.c: 139: (1U << (7)) ;
 23420  005C  30FB               	movlw	(0FBh)
 23421  005D  0021               	movlb 1	; select bank1
 23422  005E  008D               	movwf	(141)^080h	;volatile
 23423                           	line	140
 23424                           	
 23425  005F                     l37117:	
 23426                           ;catgenie120.c: 140: PORTB = 0x00;
 23427  005F  0020               	movlb 0	; select bank0
 23428  0060  018D               	clrf	(13)	;volatile
 23429                           	line	146
 23430                           	
 23431  0061                     l37119:	
 23432                           ;catgenie120.c: 146: ANSELB = 0;
 23433  0061  0023               	movlb 3	; select bank3
 23434  0062  018D               	clrf	(397)^0180h	;volatile
 23435                           	line	148
 23436                           	
 23437  0063                     l37121:	
 23438                           ;catgenie120.c: 148: WPUB = ~(1U << (3));
 23439  0063  30F7               	movlw	(0F7h)
 23440  0064  0024               	movlb 4	; select bank4
 23441  0065  008D               	movwf	(525)^0200h	;volatile
 23442                           	line	155
 23443                           	
 23444  0066                     l37123:	
 23445                           ;catgenie120.c: 155: IOCBP = (1U << (4));
 23446  0066  3010               	movlw	(010h)
 23447  0067  0027               	movlb 7	; select bank7
 23448  0068  0094               	movwf	(916)^0380h	;volatile
 23449                           	line	156
 23450                           	
 23451  0069                     l37125:	
 23452                           ;catgenie120.c: 156: IOCBN = (1U << (4));
 23453  0069  3010               	movlw	(010h)
 23454  006A  0095               	movwf	(917)^0380h	;volatile
 23455                           	line	157
 23456                           ;catgenie120.c: 157: IOCBF = 0;
 23457  006B  0196               	clrf	(918)^0380h	;volatile
 23458                           	line	158
 23459                           	
 23460  006C                     l37127:	
 23461                           ;catgenie120.c: 158: IOCIF = 0;
 23462  006C  100B               	bcf	(88/8),(88)&7
 23463                           	line	164
 23464                           	
 23465  006D                     l37129:	
 23466                           ;catgenie120.c: 164: IOCIE = 1;
 23467  006D  158B               	bsf	(91/8),(91)&7
 23468                           	line	169
 23469                           	
 23470  006E                     l37131:	
 23471                           ;catgenie120.c: 167: PORTB_old = (1U << ((0))) |
 23472                           ;catgenie120.c: 168: (1U << ((5))) |
 23473                           ;catgenie120.c: 169: (1U << (1)) ;
 23474  006E  3023               	movlw	(023h)
 23475  006F  0020               	movlb 0	; select bank0
 23476  0070  00A5               	movwf	(??_catgenie_init+0)+0
 23477  0071  0825               	movf	(??_catgenie_init+0)+0,w
 23478  0072  0021               	movlb 1	; select bank1
 23479  0073  00DB               	movwf	(catgenie120@PORTB_old)^080h
 23480                           	line	176
 23481                           	
 23482  0074                     l37133:	
 23483                           ;catgenie120.c: 174: TRISC = (1U << (3)) |
 23484                           ;catgenie120.c: 175: (1U << (4)) |
 23485                           ;catgenie120.c: 176: (1U << (7)) ;
 23486  0074  3098               	movlw	(098h)
 23487  0075  008E               	movwf	(142)^080h	;volatile
 23488                           	line	178
 23489                           ;catgenie120.c: 178: PORTC = 0x00;
 23490  0076  0020               	movlb 0	; select bank0
 23491  0077  018E               	clrf	(14)	;volatile
 23492                           	line	183
 23493                           ;catgenie120.c: 183: TRISD = 0;
 23494  0078  0021               	movlb 1	; select bank1
 23495  0079  018F               	clrf	(143)^080h	;volatile
 23496                           	line	184
 23497                           ;catgenie120.c: 184: PORTD = 0;
 23498  007A  0020               	movlb 0	; select bank0
 23499  007B  018F               	clrf	(15)	;volatile
 23500                           	line	187
 23501                           ;catgenie120.c: 187: ANSELD = 0;
 23502  007C  0023               	movlb 3	; select bank3
 23503  007D  018F               	clrf	(399)^0180h	;volatile
 23504                           	line	193
 23505                           ;catgenie120.c: 193: TRISE = 0x00;
 23506  007E  0021               	movlb 1	; select bank1
 23507  007F  0190               	clrf	(144)^080h	;volatile
 23508                           	line	194
 23509                           ;catgenie120.c: 194: PORTE = 0x00;
 23510  0080  0020               	movlb 0	; select bank0
 23511  0081  0190               	clrf	(16)	;volatile
 23512                           	line	197
 23513                           ;catgenie120.c: 197: ANSELE = 0;
 23514  0082  0023               	movlb 3	; select bank3
 23515  0083  0190               	clrf	(400)^0180h	;volatile
 23516                           	line	199
 23517                           ;catgenie120.c: 199: WPUE = 0x00;
 23518  0084  0024               	movlb 4	; select bank4
 23519  0085  0190               	clrf	(528)^0200h	;volatile
 23520                           	line	203
 23521                           	
 23522  0086                     l37135:	
 23523                           ;catgenie120.c: 203: _delay((unsigned long)((100)*((4UL * (1000UL * ((1000UL))))/4000.0)
                                 ));
 23524                           	opt asmopt_off
 23525  0086  3082               movlw	130
 23526  0087  0020               	movlb 0	; select bank0
 23527  0088  00A6               movwf	((??_catgenie_init+0)+0+1),f
 23528  0089  30DD               	movlw	221
 23529  008A  00A5               movwf	((??_catgenie_init+0)+0),f
 23530  008B                     u13007:
 23531  008B  0BA5               	decfsz	((??_catgenie_init+0)+0),f
 23532  008C  288B               	goto	u13007
 23533  008D  0BA6               	decfsz	((??_catgenie_init+0)+0+1),f
 23534  008E  288B               	goto	u13007
 23535  008F  2890               	nop2
 23536                           opt asmopt_on
 23537                           
 23538                           	line	204
 23539                           	
 23540  0090                     l37137:	
 23541                           ;catgenie120.c: 204: _delay((unsigned long)((100)*((4UL * (1000UL * ((1000UL))))/4000.0)
                                 ));
 23542                           	opt asmopt_off
 23543  0090  3082               movlw	130
 23544  0091  0020               	movlb 0	; select bank0
 23545  0092  00A6               movwf	((??_catgenie_init+0)+0+1),f
 23546  0093  30DD               	movlw	221
 23547  0094  00A5               movwf	((??_catgenie_init+0)+0),f
 23548  0095                     u13017:
 23549  0095  0BA5               	decfsz	((??_catgenie_init+0)+0),f
 23550  0096  2895               	goto	u13017
 23551  0097  0BA6               	decfsz	((??_catgenie_init+0)+0+1),f
 23552  0098  2895               	goto	u13017
 23553  0099  289A               	nop2
 23554                           opt asmopt_on
 23555                           
 23556                           	line	207
 23557                           	
 23558  009A                     l37139:	
 23559                           ;catgenie120.c: 207: for (temp = 0; temp < 2; temp++) {
 23560  009A  0020               	movlb 0	; select bank0
 23561  009B  01A9               	clrf	(catgenie_init@temp)
 23562                           	
 23563  009C                     l37141:	
 23564  009C  3002               	movlw	(02h)
 23565  009D  0229               	subwf	(catgenie_init@temp),w
 23566  009E  1C03               	skipc
 23567  009F  28A1               	goto	u10091
 23568  00A0  28A2               	goto	u10090
 23569  00A1                     u10091:
 23570  00A1  28A4               	goto	l37145
 23571  00A2                     u10090:
 23572  00A2  28F0               	goto	l10884
 23573                           	
 23574  00A3                     l37143:	
 23575  00A3  28F0               	goto	l10884
 23576                           	
 23577  00A4                     l10883:	
 23578                           	line	208
 23579                           	
 23580  00A4                     l37145:	
 23581                           ;catgenie120.c: 208: unsigned char mask = 1 << debouncers[temp].port_bit;
 23582  00A4  3001               	movlw	(01h)
 23583  00A5  00A5               	movwf	(??_catgenie_init+0)+0
 23584  00A6  3009               	movlw	(09h)
 23585  00A7  00A6               	movwf	(??_catgenie_init+1)+0
 23586  00A8  0826               	movf	(??_catgenie_init+1)+0,w
 23587  00A9  00A1               	movwf	(?___bmul)
 23588  00AA  0829               	movf	(catgenie_init@temp),w
 23589  00AB  31A9  2112  3180   	fcall	___bmul
 23590  00AE  3E06               	addlw	06h
 23591  00AF  3EBF               	addlw	_debouncers&0ffh
 23592  00B0  0086               	movwf	fsr1l
 23593  00B1  3001               	movlw 1	; select bank3/4
 23594  00B2  0087               	movwf fsr1h	
 23595                           	
 23596  00B3  0C01               	rrf	indf1,w
 23597  00B4  3907               	andlw	(1<<3)-1
 23598  00B5  0A89               	incf	wreg,f
 23599  00B6  0020               	movlb 0	; select bank0
 23600  00B7  28B9               	goto	u10104
 23601  00B8                     u10105:
 23602  00B8  35A5               	lslf	(??_catgenie_init+0)+0,f
 23603  00B9                     u10104:
 23604  00B9  0B89               	decfsz	wreg,f
 23605  00BA  28B8               	goto	u10105
 23606  00BB  0825               	movf	0+(??_catgenie_init+0)+0,w
 23607  00BC  00A7               	movwf	(??_catgenie_init+2)+0
 23608  00BD  0827               	movf	(??_catgenie_init+2)+0,w
 23609  00BE  00A8               	movwf	(catgenie_init@mask)
 23610                           	line	210
 23611                           ;catgenie120.c: 210: debouncers[temp].state = *debouncers[temp].port & mask;
 23612  00BF  3009               	movlw	(09h)
 23613  00C0  00A5               	movwf	(??_catgenie_init+0)+0
 23614  00C1  0825               	movf	(??_catgenie_init+0)+0,w
 23615  00C2  00A1               	movwf	(?___bmul)
 23616  00C3  0829               	movf	(catgenie_init@temp),w
 23617  00C4  31A9  2112  3180   	fcall	___bmul
 23618  00C7  3E07               	addlw	07h
 23619  00C8  3EBF               	addlw	_debouncers&0ffh
 23620  00C9  0086               	movwf	fsr1l
 23621  00CA  3001               	movlw 1	; select bank3/4
 23622  00CB  0087               	movwf fsr1h	
 23623                           	
 23624  00CC  0801               	movf	indf1,w
 23625  00CD  0086               	movwf	fsr1l
 23626  00CE  0187               	clrf fsr1h	
 23627                           	
 23628  00CF  0020               	movlb 0	; select bank0
 23629  00D0  0828               	movf	(catgenie_init@mask),w
 23630  00D1  0501               	andwf	indf1,w
 23631  00D2  00A6               	movwf	(??_catgenie_init+1)+0
 23632  00D3  3009               	movlw	(09h)
 23633  00D4  00A7               	movwf	(??_catgenie_init+2)+0
 23634  00D5  0827               	movf	(??_catgenie_init+2)+0,w
 23635  00D6  00A1               	movwf	(?___bmul)
 23636  00D7  0829               	movf	(catgenie_init@temp),w
 23637  00D8  31A9  2112  3180   	fcall	___bmul
 23638  00DB  3E06               	addlw	06h
 23639  00DC  3EBF               	addlw	_debouncers&0ffh
 23640  00DD  0086               	movwf	fsr1l
 23641  00DE  3001               	movlw 1	; select bank3/4
 23642  00DF  0087               	movwf fsr1h	
 23643                           	
 23644  00E0  0801               	movf	indf1,w
 23645  00E1  0020               	movlb 0	; select bank0
 23646  00E2  0626               	xorwf	0+(??_catgenie_init+1)+0,w
 23647  00E3  39FE               	andlw	not ((1<<1)-1)
 23648  00E4  0626               	xorwf	0+(??_catgenie_init+1)+0,w
 23649  00E5  0081               	movwf	indf1
 23650                           	line	207
 23651                           	
 23652  00E6                     l37147:	
 23653  00E6  3001               	movlw	(01h)
 23654  00E7  00A5               	movwf	(??_catgenie_init+0)+0
 23655  00E8  0825               	movf	(??_catgenie_init+0)+0,w
 23656  00E9  07A9               	addwf	(catgenie_init@temp),f
 23657                           	
 23658  00EA                     l37149:	
 23659  00EA  3002               	movlw	(02h)
 23660  00EB  0229               	subwf	(catgenie_init@temp),w
 23661  00EC  1C03               	skipc
 23662  00ED  28EF               	goto	u10111
 23663  00EE  28F0               	goto	u10110
 23664  00EF                     u10111:
 23665  00EF  28A4               	goto	l37145
 23666  00F0                     u10110:
 23667                           	
 23668  00F0                     l10884:	
 23669                           	line	214
 23670                           ;catgenie120.c: 211: }
 23671                           ;catgenie120.c: 214: temp = 0;
 23672  00F0  01A9               	clrf	(catgenie_init@temp)
 23673                           	line	215
 23674                           ;catgenie120.c: 215: if (!(PORTB & (1U << ((0)))))
 23675  00F1  180D               	btfsc	(13),(0)&7	;volatile
 23676  00F2  28F4               	goto	u10121
 23677  00F3  28F5               	goto	u10120
 23678  00F4                     u10121:
 23679  00F4  28F6               	goto	l10885
 23680  00F5                     u10120:
 23681                           	line	216
 23682                           	
 23683  00F5                     l37151:	
 23684                           ;catgenie120.c: 216: temp |= (0x01 << 0);
 23685  00F5  1429               	bsf	(catgenie_init@temp)+(0/8),(0)&7
 23686                           	
 23687  00F6                     l10885:	
 23688                           	line	217
 23689                           ;catgenie120.c: 217: if (!(PORTB & (1U << ((5)))))
 23690  00F6  1A8D               	btfsc	(13),(5)&7	;volatile
 23691  00F7  28F9               	goto	u10131
 23692  00F8  28FA               	goto	u10130
 23693  00F9                     u10131:
 23694  00F9  28FC               	goto	l37155
 23695  00FA                     u10130:
 23696                           	line	218
 23697                           	
 23698  00FA                     l37153:	
 23699                           ;catgenie120.c: 218: temp |= (0x01 << 1);
 23700  00FA  14A9               	bsf	(catgenie_init@temp)+(1/8),(1)&7
 23701  00FB  28FC               	goto	l37155
 23702                           	
 23703  00FC                     l10886:	
 23704                           	line	220
 23705                           	
 23706  00FC                     l37155:	
 23707                           ;catgenie120.c: 220: return temp;
 23708  00FC  0829               	movf	(catgenie_init@temp),w
 23709  00FD  28FE               	goto	l10887
 23710                           	
 23711  00FE                     l37157:	
 23712                           	line	221
 23713                           	
 23714  00FE                     l10887:	
 23715  00FE  0008               	return
 23716                           	opt stack 0
 23717                           GLOBAL	__end_of_catgenie_init
 23718  00FF                     	__end_of_catgenie_init:
 23719 ;; =============== function _catgenie_init ends ============
 23720                           
 23721                           	signat	_catgenie_init,89
 23722                           	global	___lldiv
 23723                           psect	text3362,local,class=CODE,delta=2
 23724                           global __ptext3362
 23725  206C                     __ptext3362:
 23726                           
 23727 ;; *************** function ___lldiv *****************
 23728 ;; Defined at:
 23729 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 23730 ;; Parameters:    Size  Location     Type
 23731 ;;  divisor         4    0[BANK0 ] unsigned long 
 23732 ;;  dividend        4    4[BANK0 ] unsigned long 
 23733 ;; Auto vars:     Size  Location     Type
 23734 ;;  quotient        4    9[BANK0 ] unsigned long 
 23735 ;;  counter         1   13[BANK0 ] unsigned char 
 23736 ;; Return value:  Size  Location     Type
 23737 ;;                  4    0[BANK0 ] unsigned long 
 23738 ;; Registers used:
 23739 ;;		wreg, status,2, status,0
 23740 ;; Tracked objects:
 23741 ;;		On entry : 0/0
 23742 ;;		On exit  : 0/0
 23743 ;;		Unchanged: 0/0
 23744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23745 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 23746 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 23747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23748 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 23749 ;;Total ram usage:       14 bytes
 23750 ;; Hardware stack levels used:    1
 23751 ;; Hardware stack levels required when called:    2
 23752 ;; This function calls:
 23753 ;;		Nothing
 23754 ;; This function is called by:
 23755 ;;		_serial_init
 23756 ;; This function uses a non-reentrant model
 23757 ;;
 23758                           psect	text3362
 23759                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
 23760                           	line	5
 23761                           	global	__size_of___lldiv
 23762  0063                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 23763                           	
 23764  206C                     ___lldiv:	
 23765                           	opt	stack 12
 23766                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 23767                           	line	9
 23768                           	
 23769  206C                     l34473:	
 23770  206C  3000               	movlw	0
 23771  206D  0020               	movlb 0	; select bank0
 23772  206E  00AD               	movwf	(___lldiv@quotient+3)
 23773  206F  3000               	movlw	0
 23774  2070  00AC               	movwf	(___lldiv@quotient+2)
 23775  2071  3000               	movlw	0
 23776  2072  00AB               	movwf	(___lldiv@quotient+1)
 23777  2073  3000               	movlw	0
 23778  2074  00AA               	movwf	(___lldiv@quotient)
 23779                           
 23780                           	line	10
 23781  2075  0824               	movf	(___lldiv@divisor+3),w
 23782  2076  0423               	iorwf	(___lldiv@divisor+2),w
 23783  2077  0422               	iorwf	(___lldiv@divisor+1),w
 23784  2078  0421               	iorwf	(___lldiv@divisor),w
 23785  2079  1903               	skipnz
 23786  207A  287C               	goto	u6581
 23787  207B  287D               	goto	u6580
 23788  207C                     u6581:
 23789  207C  28C5               	goto	l34493
 23790  207D                     u6580:
 23791                           	line	11
 23792                           	
 23793  207D                     l34475:	
 23794  207D  01AE               	clrf	(___lldiv@counter)
 23795  207E  1403               	bsf	status,0
 23796  207F  0DAE               	rlf	(___lldiv@counter),f
 23797                           	line	12
 23798  2080  288D               	goto	l34479
 23799                           	
 23800  2081                     l29277:	
 23801                           	line	13
 23802                           	
 23803  2081                     l34477:	
 23804  2081  3001               	movlw	01h
 23805  2082                     u6595:
 23806  2082  35A1               	lslf	(___lldiv@divisor),f
 23807  2083  0DA2               	rlf	(___lldiv@divisor+1),f
 23808  2084  0DA3               	rlf	(___lldiv@divisor+2),f
 23809  2085  0DA4               	rlf	(___lldiv@divisor+3),f
 23810  2086  0B89               	decfsz	wreg,f
 23811  2087  2882               	goto	u6595
 23812                           	line	14
 23813  2088  3001               	movlw	(01h)
 23814  2089  00A9               	movwf	(??___lldiv+0)+0
 23815  208A  0829               	movf	(??___lldiv+0)+0,w
 23816  208B  07AE               	addwf	(___lldiv@counter),f
 23817  208C  288D               	goto	l34479
 23818                           	line	15
 23819                           	
 23820  208D                     l29276:	
 23821                           	line	12
 23822                           	
 23823  208D                     l34479:	
 23824  208D  1FA4               	btfss	(___lldiv@divisor+3),(31)&7
 23825  208E  2890               	goto	u6601
 23826  208F  2891               	goto	u6600
 23827  2090                     u6601:
 23828  2090  2881               	goto	l34477
 23829  2091                     u6600:
 23830  2091  2893               	goto	l34481
 23831                           	
 23832  2092                     l29278:	
 23833  2092  2893               	goto	l34481
 23834                           	line	16
 23835                           	
 23836  2093                     l29279:	
 23837                           	line	17
 23838                           	
 23839  2093                     l34481:	
 23840  2093  3001               	movlw	01h
 23841  2094                     u6615:
 23842  2094  35AA               	lslf	(___lldiv@quotient),f
 23843  2095  0DAB               	rlf	(___lldiv@quotient+1),f
 23844  2096  0DAC               	rlf	(___lldiv@quotient+2),f
 23845  2097  0DAD               	rlf	(___lldiv@quotient+3),f
 23846  2098  0B89               	decfsz	wreg,f
 23847  2099  2894               	goto	u6615
 23848                           	line	18
 23849                           	
 23850  209A                     l34483:	
 23851  209A  0824               	movf	(___lldiv@divisor+3),w
 23852  209B  0228               	subwf	(___lldiv@dividend+3),w
 23853  209C  1D03               	skipz
 23854  209D  28A8               	goto	u6625
 23855  209E  0823               	movf	(___lldiv@divisor+2),w
 23856  209F  0227               	subwf	(___lldiv@dividend+2),w
 23857  20A0  1D03               	skipz
 23858  20A1  28A8               	goto	u6625
 23859  20A2  0822               	movf	(___lldiv@divisor+1),w
 23860  20A3  0226               	subwf	(___lldiv@dividend+1),w
 23861  20A4  1D03               	skipz
 23862  20A5  28A8               	goto	u6625
 23863  20A6  0821               	movf	(___lldiv@divisor),w
 23864  20A7  0225               	subwf	(___lldiv@dividend),w
 23865  20A8                     u6625:
 23866  20A8  1C03               	skipc
 23867  20A9  28AB               	goto	u6621
 23868  20AA  28AC               	goto	u6620
 23869  20AB                     u6621:
 23870  20AB  28B6               	goto	l34489
 23871  20AC                     u6620:
 23872                           	line	19
 23873                           	
 23874  20AC                     l34485:	
 23875  20AC  0821               	movf	(___lldiv@divisor),w
 23876  20AD  02A5               	subwf	(___lldiv@dividend),f
 23877  20AE  0822               	movf	(___lldiv@divisor+1),w
 23878  20AF  3BA6               	subwfb	(___lldiv@dividend+1),f
 23879  20B0  0823               	movf	(___lldiv@divisor+2),w
 23880  20B1  3BA7               	subwfb	(___lldiv@dividend+2),f
 23881  20B2  0824               	movf	(___lldiv@divisor+3),w
 23882  20B3  3BA8               	subwfb	(___lldiv@dividend+3),f
 23883                           	line	20
 23884                           	
 23885  20B4                     l34487:	
 23886  20B4  142A               	bsf	(___lldiv@quotient)+(0/8),(0)&7
 23887  20B5  28B6               	goto	l34489
 23888                           	line	21
 23889                           	
 23890  20B6                     l29280:	
 23891                           	line	22
 23892                           	
 23893  20B6                     l34489:	
 23894  20B6  3001               	movlw	01h
 23895  20B7                     u6635:
 23896  20B7  36A4               	lsrf	(___lldiv@divisor+3),f
 23897  20B8  0CA3               	rrf	(___lldiv@divisor+2),f
 23898  20B9  0CA2               	rrf	(___lldiv@divisor+1),f
 23899  20BA  0CA1               	rrf	(___lldiv@divisor),f
 23900  20BB  0B89               	decfsz	wreg,f
 23901  20BC  28B7               	goto	u6635
 23902                           
 23903                           	line	23
 23904                           	
 23905  20BD                     l34491:	
 23906  20BD  3001               	movlw	low(01h)
 23907  20BE  02AE               	subwf	(___lldiv@counter),f
 23908  20BF  1D03               	btfss	status,2
 23909  20C0  28C2               	goto	u6641
 23910  20C1  28C3               	goto	u6640
 23911  20C2                     u6641:
 23912  20C2  2893               	goto	l34481
 23913  20C3                     u6640:
 23914  20C3  28C5               	goto	l34493
 23915                           	
 23916  20C4                     l29281:	
 23917  20C4  28C5               	goto	l34493
 23918                           	line	24
 23919                           	
 23920  20C5                     l29275:	
 23921                           	line	25
 23922                           	
 23923  20C5                     l34493:	
 23924  20C5  082D               	movf	(___lldiv@quotient+3),w
 23925  20C6  00A4               	movwf	(?___lldiv+3)
 23926  20C7  082C               	movf	(___lldiv@quotient+2),w
 23927  20C8  00A3               	movwf	(?___lldiv+2)
 23928  20C9  082B               	movf	(___lldiv@quotient+1),w
 23929  20CA  00A2               	movwf	(?___lldiv+1)
 23930  20CB  082A               	movf	(___lldiv@quotient),w
 23931  20CC  00A1               	movwf	(?___lldiv)
 23932                           
 23933  20CD  28CE               	goto	l29282
 23934                           	
 23935  20CE                     l34495:	
 23936                           	line	26
 23937                           	
 23938  20CE                     l29282:	
 23939  20CE  0008               	return
 23940                           	opt stack 0
 23941                           GLOBAL	__end_of___lldiv
 23942  20CF                     	__end_of___lldiv:
 23943 ;; =============== function ___lldiv ends ============
 23944                           
 23945                           	signat	___lldiv,8316
 23946                           	global	___lmul
 23947                           psect	text3363,local,class=CODE,delta=2
 23948                           global __ptext3363
 23949  2C2C                     __ptext3363:
 23950                           
 23951 ;; *************** function ___lmul *****************
 23952 ;; Defined at:
 23953 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
 23954 ;; Parameters:    Size  Location     Type
 23955 ;;  multiplier      4    0[BANK0 ] unsigned long 
 23956 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 23957 ;; Auto vars:     Size  Location     Type
 23958 ;;  product         4    8[BANK0 ] unsigned long 
 23959 ;; Return value:  Size  Location     Type
 23960 ;;                  4    0[BANK0 ] unsigned long 
 23961 ;; Registers used:
 23962 ;;		wreg, status,2, status,0
 23963 ;; Tracked objects:
 23964 ;;		On entry : 0/0
 23965 ;;		On exit  : 0/0
 23966 ;;		Unchanged: 0/0
 23967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23968 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 23969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 23970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23971 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0
 23972 ;;Total ram usage:       12 bytes
 23973 ;; Hardware stack levels used:    1
 23974 ;; Hardware stack levels required when called:    2
 23975 ;; This function calls:
 23976 ;;		Nothing
 23977 ;; This function is called by:
 23978 ;;		_exe_instruction
 23979 ;; This function uses a non-reentrant model
 23980 ;;
 23981                           psect	text3363
 23982                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
 23983                           	line	3
 23984                           	global	__size_of___lmul
 23985  0038                     	__size_of___lmul	equ	__end_of___lmul-___lmul
 23986                           	
 23987  2C2C                     ___lmul:	
 23988                           	opt	stack 11
 23989                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 23990                           	line	4
 23991                           	
 23992  2C2C                     l37093:	
 23993  2C2C  3000               	movlw	0
 23994  2C2D  0020               	movlb 0	; select bank0
 23995  2C2E  00AC               	movwf	(___lmul@product+3)
 23996  2C2F  3000               	movlw	0
 23997  2C30  00AB               	movwf	(___lmul@product+2)
 23998  2C31  3000               	movlw	0
 23999  2C32  00AA               	movwf	(___lmul@product+1)
 24000  2C33  3000               	movlw	0
 24001  2C34  00A9               	movwf	(___lmul@product)
 24002                           
 24003  2C35  2C36               	goto	l37095
 24004                           	line	6
 24005                           	
 24006  2C36                     l29178:	
 24007                           	line	7
 24008                           	
 24009  2C36                     l37095:	
 24010  2C36  1C21               	btfss	(___lmul@multiplier),(0)&7
 24011  2C37  2C39               	goto	u10051
 24012  2C38  2C3A               	goto	u10050
 24013  2C39                     u10051:
 24014  2C39  2C43               	goto	l37099
 24015  2C3A                     u10050:
 24016                           	line	8
 24017                           	
 24018  2C3A                     l37097:	
 24019  2C3A  0825               	movf	(___lmul@multiplicand),w
 24020  2C3B  07A9               	addwf	(___lmul@product),f
 24021  2C3C  0826               	movf	(___lmul@multiplicand+1),w
 24022  2C3D  3DAA               	addwfc	(___lmul@product+1),f
 24023  2C3E  0827               	movf	(___lmul@multiplicand+2),w
 24024  2C3F  3DAB               	addwfc	(___lmul@product+2),f
 24025  2C40  0828               	movf	(___lmul@multiplicand+3),w
 24026  2C41  3DAC               	addwfc	(___lmul@product+3),f
 24027  2C42  2C43               	goto	l37099
 24028                           	
 24029  2C43                     l29179:	
 24030                           	line	9
 24031                           	
 24032  2C43                     l37099:	
 24033  2C43  3001               	movlw	01h
 24034  2C44                     u10065:
 24035  2C44  35A5               	lslf	(___lmul@multiplicand),f
 24036  2C45  0DA6               	rlf	(___lmul@multiplicand+1),f
 24037  2C46  0DA7               	rlf	(___lmul@multiplicand+2),f
 24038  2C47  0DA8               	rlf	(___lmul@multiplicand+3),f
 24039  2C48  0B89               	decfsz	wreg,f
 24040  2C49  2C44               	goto	u10065
 24041                           	line	10
 24042                           	
 24043  2C4A                     l37101:	
 24044  2C4A  3001               	movlw	01h
 24045  2C4B                     u10075:
 24046  2C4B  36A4               	lsrf	(___lmul@multiplier+3),f
 24047  2C4C  0CA3               	rrf	(___lmul@multiplier+2),f
 24048  2C4D  0CA2               	rrf	(___lmul@multiplier+1),f
 24049  2C4E  0CA1               	rrf	(___lmul@multiplier),f
 24050  2C4F  0B89               	decfsz	wreg,f
 24051  2C50  2C4B               	goto	u10075
 24052                           
 24053                           	line	11
 24054  2C51  0824               	movf	(___lmul@multiplier+3),w
 24055  2C52  0423               	iorwf	(___lmul@multiplier+2),w
 24056  2C53  0422               	iorwf	(___lmul@multiplier+1),w
 24057  2C54  0421               	iorwf	(___lmul@multiplier),w
 24058  2C55  1D03               	skipz
 24059  2C56  2C58               	goto	u10081
 24060  2C57  2C59               	goto	u10080
 24061  2C58                     u10081:
 24062  2C58  2C36               	goto	l37095
 24063  2C59                     u10080:
 24064  2C59  2C5A               	goto	l37103
 24065                           	
 24066  2C5A                     l29180:	
 24067                           	line	12
 24068                           	
 24069  2C5A                     l37103:	
 24070  2C5A  082C               	movf	(___lmul@product+3),w
 24071  2C5B  00A4               	movwf	(?___lmul+3)
 24072  2C5C  082B               	movf	(___lmul@product+2),w
 24073  2C5D  00A3               	movwf	(?___lmul+2)
 24074  2C5E  082A               	movf	(___lmul@product+1),w
 24075  2C5F  00A2               	movwf	(?___lmul+1)
 24076  2C60  0829               	movf	(___lmul@product),w
 24077  2C61  00A1               	movwf	(?___lmul)
 24078                           
 24079  2C62  2C63               	goto	l29181
 24080                           	
 24081  2C63                     l37105:	
 24082                           	line	13
 24083                           	
 24084  2C63                     l29181:	
 24085  2C63  0008               	return
 24086                           	opt stack 0
 24087                           GLOBAL	__end_of___lmul
 24088  2C64                     	__end_of___lmul:
 24089 ;; =============== function ___lmul ends ============
 24090                           
 24091                           	signat	___lmul,8316
 24092                           	global	___lwmod
 24093                           psect	text3364,local,class=CODE,delta=2
 24094                           global __ptext3364
 24095  2CD8                     __ptext3364:
 24096                           
 24097 ;; *************** function ___lwmod *****************
 24098 ;; Defined at:
 24099 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 24100 ;; Parameters:    Size  Location     Type
 24101 ;;  divisor         2    8[BANK0 ] unsigned int 
 24102 ;;  dividend        2   10[BANK0 ] unsigned int 
 24103 ;; Auto vars:     Size  Location     Type
 24104 ;;  counter         1   13[BANK0 ] unsigned char 
 24105 ;; Return value:  Size  Location     Type
 24106 ;;                  2    8[BANK0 ] unsigned int 
 24107 ;; Registers used:
 24108 ;;		wreg, status,2, status,0
 24109 ;; Tracked objects:
 24110 ;;		On entry : 0/0
 24111 ;;		On exit  : 0/0
 24112 ;;		Unchanged: 0/0
 24113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24114 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24118 ;;Total ram usage:        6 bytes
 24119 ;; Hardware stack levels used:    1
 24120 ;; Hardware stack levels required when called:    2
 24121 ;; This function calls:
 24122 ;;		Nothing
 24123 ;; This function is called by:
 24124 ;;		_exe_instruction
 24125 ;;		_printf
 24126 ;; This function uses a non-reentrant model
 24127 ;;
 24128                           psect	text3364
 24129                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 24130                           	line	5
 24131                           	global	__size_of___lwmod
 24132  003F                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 24133                           	
 24134  2CD8                     ___lwmod:	
 24135                           	opt	stack 8
 24136                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 24137                           	line	8
 24138                           	
 24139  2CD8                     l37071:	
 24140  2CD8  0020               	movlb 0	; select bank0
 24141  2CD9  082A               	movf	(___lwmod@divisor+1),w
 24142  2CDA  0429               	iorwf	(___lwmod@divisor),w
 24143  2CDB  1903               	skipnz
 24144  2CDC  2CDE               	goto	u9991
 24145  2CDD  2CDF               	goto	u9990
 24146  2CDE                     u9991:
 24147  2CDE  2D0F               	goto	l37089
 24148  2CDF                     u9990:
 24149                           	line	9
 24150                           	
 24151  2CDF                     l37073:	
 24152  2CDF  01AE               	clrf	(___lwmod@counter)
 24153  2CE0  1403               	bsf	status,0
 24154  2CE1  0DAE               	rlf	(___lwmod@counter),f
 24155                           	line	10
 24156  2CE2  2CED               	goto	l37079
 24157                           	
 24158  2CE3                     l29121:	
 24159                           	line	11
 24160                           	
 24161  2CE3                     l37075:	
 24162  2CE3  3001               	movlw	01h
 24163                           	
 24164  2CE4                     u10005:
 24165  2CE4  35A9               	lslf	(___lwmod@divisor),f
 24166  2CE5  0DAA               	rlf	(___lwmod@divisor+1),f
 24167  2CE6  0B89               	decfsz	wreg,f
 24168  2CE7  2CE4               	goto	u10005
 24169                           	line	12
 24170                           	
 24171  2CE8                     l37077:	
 24172  2CE8  3001               	movlw	(01h)
 24173  2CE9  00AD               	movwf	(??___lwmod+0)+0
 24174  2CEA  082D               	movf	(??___lwmod+0)+0,w
 24175  2CEB  07AE               	addwf	(___lwmod@counter),f
 24176  2CEC  2CED               	goto	l37079
 24177                           	line	13
 24178                           	
 24179  2CED                     l29120:	
 24180                           	line	10
 24181                           	
 24182  2CED                     l37079:	
 24183  2CED  1FAA               	btfss	(___lwmod@divisor+1),(15)&7
 24184  2CEE  2CF0               	goto	u10011
 24185  2CEF  2CF1               	goto	u10010
 24186  2CF0                     u10011:
 24187  2CF0  2CE3               	goto	l37075
 24188  2CF1                     u10010:
 24189  2CF1  2CF3               	goto	l37081
 24190                           	
 24191  2CF2                     l29122:	
 24192  2CF2  2CF3               	goto	l37081
 24193                           	line	14
 24194                           	
 24195  2CF3                     l29123:	
 24196                           	line	15
 24197                           	
 24198  2CF3                     l37081:	
 24199  2CF3  082A               	movf	(___lwmod@divisor+1),w
 24200  2CF4  022C               	subwf	(___lwmod@dividend+1),w
 24201  2CF5  1D03               	skipz
 24202  2CF6  2CF9               	goto	u10025
 24203  2CF7  0829               	movf	(___lwmod@divisor),w
 24204  2CF8  022B               	subwf	(___lwmod@dividend),w
 24205  2CF9                     u10025:
 24206  2CF9  1C03               	skipc
 24207  2CFA  2CFC               	goto	u10021
 24208  2CFB  2CFD               	goto	u10020
 24209  2CFC                     u10021:
 24210  2CFC  2D02               	goto	l37085
 24211  2CFD                     u10020:
 24212                           	line	16
 24213                           	
 24214  2CFD                     l37083:	
 24215  2CFD  0829               	movf	(___lwmod@divisor),w
 24216  2CFE  02AB               	subwf	(___lwmod@dividend),f
 24217  2CFF  082A               	movf	(___lwmod@divisor+1),w
 24218  2D00  3BAC               	subwfb	(___lwmod@dividend+1),f
 24219  2D01  2D02               	goto	l37085
 24220                           	
 24221  2D02                     l29124:	
 24222                           	line	17
 24223                           	
 24224  2D02                     l37085:	
 24225  2D02  3001               	movlw	01h
 24226                           	
 24227  2D03                     u10035:
 24228  2D03  36AA               	lsrf	(___lwmod@divisor+1),f
 24229  2D04  0CA9               	rrf	(___lwmod@divisor),f
 24230  2D05  0B89               	decfsz	wreg,f
 24231  2D06  2D03               	goto	u10035
 24232                           	line	18
 24233                           	
 24234  2D07                     l37087:	
 24235  2D07  3001               	movlw	low(01h)
 24236  2D08  02AE               	subwf	(___lwmod@counter),f
 24237  2D09  1D03               	btfss	status,2
 24238  2D0A  2D0C               	goto	u10041
 24239  2D0B  2D0D               	goto	u10040
 24240  2D0C                     u10041:
 24241  2D0C  2CF3               	goto	l37081
 24242  2D0D                     u10040:
 24243  2D0D  2D0F               	goto	l37089
 24244                           	
 24245  2D0E                     l29125:	
 24246  2D0E  2D0F               	goto	l37089
 24247                           	line	19
 24248                           	
 24249  2D0F                     l29119:	
 24250                           	line	20
 24251                           	
 24252  2D0F                     l37089:	
 24253  2D0F  082C               	movf	(___lwmod@dividend+1),w
 24254  2D10  01AA               	clrf	(?___lwmod+1)
 24255  2D11  07AA               	addwf	(?___lwmod+1)
 24256  2D12  082B               	movf	(___lwmod@dividend),w
 24257  2D13  01A9               	clrf	(?___lwmod)
 24258  2D14  07A9               	addwf	(?___lwmod)
 24259                           
 24260  2D15  2D16               	goto	l29126
 24261                           	
 24262  2D16                     l37091:	
 24263                           	line	21
 24264                           	
 24265  2D16                     l29126:	
 24266  2D16  0008               	return
 24267                           	opt stack 0
 24268                           GLOBAL	__end_of___lwmod
 24269  2D17                     	__end_of___lwmod:
 24270 ;; =============== function ___lwmod ends ============
 24271                           
 24272                           	signat	___lwmod,8314
 24273                           	global	___lwdiv
 24274                           psect	text3365,local,class=CODE,delta=2
 24275                           global __ptext3365
 24276  0945                     __ptext3365:
 24277                           
 24278 ;; *************** function ___lwdiv *****************
 24279 ;; Defined at:
 24280 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 24281 ;; Parameters:    Size  Location     Type
 24282 ;;  divisor         2    0[BANK0 ] unsigned int 
 24283 ;;  dividend        2    2[BANK0 ] unsigned int 
 24284 ;; Auto vars:     Size  Location     Type
 24285 ;;  quotient        2    6[BANK0 ] unsigned int 
 24286 ;;  counter         1    5[BANK0 ] unsigned char 
 24287 ;; Return value:  Size  Location     Type
 24288 ;;                  2    0[BANK0 ] unsigned int 
 24289 ;; Registers used:
 24290 ;;		wreg, status,2, status,0
 24291 ;; Tracked objects:
 24292 ;;		On entry : 0/0
 24293 ;;		On exit  : 0/0
 24294 ;;		Unchanged: 0/0
 24295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24296 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24297 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 24298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24299 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 24300 ;;Total ram usage:        8 bytes
 24301 ;; Hardware stack levels used:    1
 24302 ;; Hardware stack levels required when called:    2
 24303 ;; This function calls:
 24304 ;;		Nothing
 24305 ;; This function is called by:
 24306 ;;		_exe_instruction
 24307 ;;		_printf
 24308 ;; This function uses a non-reentrant model
 24309 ;;
 24310                           psect	text3365
 24311                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 24312                           	line	5
 24313                           	global	__size_of___lwdiv
 24314  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 24315                           	
 24316  0945                     ___lwdiv:	
 24317                           	opt	stack 8
 24318                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 24319                           	line	9
 24320                           	
 24321  0945                     l37045:	
 24322  0945  0020               	movlb 0	; select bank0
 24323  0946  01A7               	clrf	(___lwdiv@quotient)
 24324  0947  01A8               	clrf	(___lwdiv@quotient+1)
 24325                           	line	10
 24326                           	
 24327  0948                     l37047:	
 24328  0948  0822               	movf	(___lwdiv@divisor+1),w
 24329  0949  0421               	iorwf	(___lwdiv@divisor),w
 24330  094A  1903               	skipnz
 24331  094B  294D               	goto	u9921
 24332  094C  294E               	goto	u9920
 24333  094D                     u9921:
 24334  094D  2984               	goto	l37067
 24335  094E                     u9920:
 24336                           	line	11
 24337                           	
 24338  094E                     l37049:	
 24339  094E  01A6               	clrf	(___lwdiv@counter)
 24340  094F  1403               	bsf	status,0
 24341  0950  0DA6               	rlf	(___lwdiv@counter),f
 24342                           	line	12
 24343  0951  295C               	goto	l37055
 24344                           	
 24345  0952                     l29111:	
 24346                           	line	13
 24347                           	
 24348  0952                     l37051:	
 24349  0952  3001               	movlw	01h
 24350                           	
 24351  0953                     u9935:
 24352  0953  35A1               	lslf	(___lwdiv@divisor),f
 24353  0954  0DA2               	rlf	(___lwdiv@divisor+1),f
 24354  0955  0B89               	decfsz	wreg,f
 24355  0956  2953               	goto	u9935
 24356                           	line	14
 24357                           	
 24358  0957                     l37053:	
 24359  0957  3001               	movlw	(01h)
 24360  0958  00A5               	movwf	(??___lwdiv+0)+0
 24361  0959  0825               	movf	(??___lwdiv+0)+0,w
 24362  095A  07A6               	addwf	(___lwdiv@counter),f
 24363  095B  295C               	goto	l37055
 24364                           	line	15
 24365                           	
 24366  095C                     l29110:	
 24367                           	line	12
 24368                           	
 24369  095C                     l37055:	
 24370  095C  1FA2               	btfss	(___lwdiv@divisor+1),(15)&7
 24371  095D  295F               	goto	u9941
 24372  095E  2960               	goto	u9940
 24373  095F                     u9941:
 24374  095F  2952               	goto	l37051
 24375  0960                     u9940:
 24376  0960  2962               	goto	l37057
 24377                           	
 24378  0961                     l29112:	
 24379  0961  2962               	goto	l37057
 24380                           	line	16
 24381                           	
 24382  0962                     l29113:	
 24383                           	line	17
 24384                           	
 24385  0962                     l37057:	
 24386  0962  3001               	movlw	01h
 24387                           	
 24388  0963                     u9955:
 24389  0963  35A7               	lslf	(___lwdiv@quotient),f
 24390  0964  0DA8               	rlf	(___lwdiv@quotient+1),f
 24391  0965  0B89               	decfsz	wreg,f
 24392  0966  2963               	goto	u9955
 24393                           	line	18
 24394  0967  0822               	movf	(___lwdiv@divisor+1),w
 24395  0968  0224               	subwf	(___lwdiv@dividend+1),w
 24396  0969  1D03               	skipz
 24397  096A  296D               	goto	u9965
 24398  096B  0821               	movf	(___lwdiv@divisor),w
 24399  096C  0223               	subwf	(___lwdiv@dividend),w
 24400  096D                     u9965:
 24401  096D  1C03               	skipc
 24402  096E  2970               	goto	u9961
 24403  096F  2971               	goto	u9960
 24404  0970                     u9961:
 24405  0970  2977               	goto	l37063
 24406  0971                     u9960:
 24407                           	line	19
 24408                           	
 24409  0971                     l37059:	
 24410  0971  0821               	movf	(___lwdiv@divisor),w
 24411  0972  02A3               	subwf	(___lwdiv@dividend),f
 24412  0973  0822               	movf	(___lwdiv@divisor+1),w
 24413  0974  3BA4               	subwfb	(___lwdiv@dividend+1),f
 24414                           	line	20
 24415                           	
 24416  0975                     l37061:	
 24417  0975  1427               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 24418  0976  2977               	goto	l37063
 24419                           	line	21
 24420                           	
 24421  0977                     l29114:	
 24422                           	line	22
 24423                           	
 24424  0977                     l37063:	
 24425  0977  3001               	movlw	01h
 24426                           	
 24427  0978                     u9975:
 24428  0978  36A2               	lsrf	(___lwdiv@divisor+1),f
 24429  0979  0CA1               	rrf	(___lwdiv@divisor),f
 24430  097A  0B89               	decfsz	wreg,f
 24431  097B  2978               	goto	u9975
 24432                           	line	23
 24433                           	
 24434  097C                     l37065:	
 24435  097C  3001               	movlw	low(01h)
 24436  097D  02A6               	subwf	(___lwdiv@counter),f
 24437  097E  1D03               	btfss	status,2
 24438  097F  2981               	goto	u9981
 24439  0980  2982               	goto	u9980
 24440  0981                     u9981:
 24441  0981  2962               	goto	l37057
 24442  0982                     u9980:
 24443  0982  2984               	goto	l37067
 24444                           	
 24445  0983                     l29115:	
 24446  0983  2984               	goto	l37067
 24447                           	line	24
 24448                           	
 24449  0984                     l29109:	
 24450                           	line	25
 24451                           	
 24452  0984                     l37067:	
 24453  0984  0828               	movf	(___lwdiv@quotient+1),w
 24454  0985  01A2               	clrf	(?___lwdiv+1)
 24455  0986  07A2               	addwf	(?___lwdiv+1)
 24456  0987  0827               	movf	(___lwdiv@quotient),w
 24457  0988  01A1               	clrf	(?___lwdiv)
 24458  0989  07A1               	addwf	(?___lwdiv)
 24459                           
 24460  098A  298B               	goto	l29116
 24461                           	
 24462  098B                     l37069:	
 24463                           	line	26
 24464                           	
 24465  098B                     l29116:	
 24466  098B  0008               	return
 24467                           	opt stack 0
 24468                           GLOBAL	__end_of___lwdiv
 24469  098C                     	__end_of___lwdiv:
 24470 ;; =============== function ___lwdiv ends ============
 24471                           
 24472                           	signat	___lwdiv,8314
 24473                           	global	___wmul
 24474                           psect	text3366,local,class=CODE,delta=2
 24475                           global __ptext3366
 24476  2A9E                     __ptext3366:
 24477                           
 24478 ;; *************** function ___wmul *****************
 24479 ;; Defined at:
 24480 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 24481 ;; Parameters:    Size  Location     Type
 24482 ;;  multiplier      2    0[BANK0 ] unsigned int 
 24483 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 24484 ;; Auto vars:     Size  Location     Type
 24485 ;;  product         2    4[BANK0 ] unsigned int 
 24486 ;; Return value:  Size  Location     Type
 24487 ;;                  2    0[BANK0 ] unsigned int 
 24488 ;; Registers used:
 24489 ;;		wreg, status,2, status,0
 24490 ;; Tracked objects:
 24491 ;;		On entry : 0/0
 24492 ;;		On exit  : 0/0
 24493 ;;		Unchanged: 0/0
 24494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24496 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24498 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 24499 ;;Total ram usage:        6 bytes
 24500 ;; Hardware stack levels used:    1
 24501 ;; Hardware stack levels required when called:    2
 24502 ;; This function calls:
 24503 ;;		Nothing
 24504 ;; This function is called by:
 24505 ;;		_exe_instruction
 24506 ;;		_catgenie_init
 24507 ;;		_catgenie_work
 24508 ;;		_set_pacer
 24509 ;;		_proc_line
 24510 ;;		_cmd2index
 24511 ;;		_help
 24512 ;;		_printf
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           psect	text3366
 24516                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 24517                           	line	3
 24518                           	global	__size_of___wmul
 24519  0025                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 24520                           	
 24521  2A9E                     ___wmul:	
 24522                           	opt	stack 8
 24523                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 24524                           	line	4
 24525                           	
 24526  2A9E                     l37033:	
 24527  2A9E  0020               	movlb 0	; select bank0
 24528  2A9F  01A5               	clrf	(___wmul@product)
 24529  2AA0  01A6               	clrf	(___wmul@product+1)
 24530  2AA1  2AA2               	goto	l37035
 24531                           	line	6
 24532                           	
 24533  2AA2                     l29103:	
 24534                           	line	7
 24535                           	
 24536  2AA2                     l37035:	
 24537  2AA2  1C21               	btfss	(___wmul@multiplier),(0)&7
 24538  2AA3  2AA5               	goto	u9881
 24539  2AA4  2AA6               	goto	u9880
 24540  2AA5                     u9881:
 24541  2AA5  2AAA               	goto	l29104
 24542  2AA6                     u9880:
 24543                           	line	8
 24544                           	
 24545  2AA6                     l37037:	
 24546  2AA6  0823               	movf	(___wmul@multiplicand),w
 24547  2AA7  07A5               	addwf	(___wmul@product),f
 24548  2AA8  0824               	movf	(___wmul@multiplicand+1),w
 24549  2AA9  3DA6               	addwfc	(___wmul@product+1),f
 24550                           	
 24551  2AAA                     l29104:	
 24552                           	line	9
 24553  2AAA  3001               	movlw	01h
 24554                           	
 24555  2AAB                     u9895:
 24556  2AAB  35A3               	lslf	(___wmul@multiplicand),f
 24557  2AAC  0DA4               	rlf	(___wmul@multiplicand+1),f
 24558  2AAD  0B89               	decfsz	wreg,f
 24559  2AAE  2AAB               	goto	u9895
 24560                           	line	10
 24561                           	
 24562  2AAF                     l37039:	
 24563  2AAF  3001               	movlw	01h
 24564                           	
 24565  2AB0                     u9905:
 24566  2AB0  36A2               	lsrf	(___wmul@multiplier+1),f
 24567  2AB1  0CA1               	rrf	(___wmul@multiplier),f
 24568  2AB2  0B89               	decfsz	wreg,f
 24569  2AB3  2AB0               	goto	u9905
 24570                           	line	11
 24571  2AB4  0822               	movf	((___wmul@multiplier+1)),w
 24572  2AB5  0421               	iorwf	((___wmul@multiplier)),w
 24573  2AB6  1D03               	skipz
 24574  2AB7  2AB9               	goto	u9911
 24575  2AB8  2ABA               	goto	u9910
 24576  2AB9                     u9911:
 24577  2AB9  2AA2               	goto	l37035
 24578  2ABA                     u9910:
 24579  2ABA  2ABB               	goto	l37041
 24580                           	
 24581  2ABB                     l29105:	
 24582                           	line	12
 24583                           	
 24584  2ABB                     l37041:	
 24585  2ABB  0826               	movf	(___wmul@product+1),w
 24586  2ABC  01A2               	clrf	(?___wmul+1)
 24587  2ABD  07A2               	addwf	(?___wmul+1)
 24588  2ABE  0825               	movf	(___wmul@product),w
 24589  2ABF  01A1               	clrf	(?___wmul)
 24590  2AC0  07A1               	addwf	(?___wmul)
 24591                           
 24592  2AC1  2AC2               	goto	l29106
 24593                           	
 24594  2AC2                     l37043:	
 24595                           	line	13
 24596                           	
 24597  2AC2                     l29106:	
 24598  2AC2  0008               	return
 24599                           	opt stack 0
 24600                           GLOBAL	__end_of___wmul
 24601  2AC3                     	__end_of___wmul:
 24602 ;; =============== function ___wmul ends ============
 24603                           
 24604                           	signat	___wmul,8314
 24605                           	global	___bmul
 24606                           psect	text3367,local,class=CODE,delta=2
 24607                           global __ptext3367
 24608  2912                     __ptext3367:
 24609                           
 24610 ;; *************** function ___bmul *****************
 24611 ;; Defined at:
 24612 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 24613 ;; Parameters:    Size  Location     Type
 24614 ;;  multiplier      1    wreg     unsigned char 
 24615 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 24616 ;; Auto vars:     Size  Location     Type
 24617 ;;  multiplier      1    3[BANK0 ] unsigned char 
 24618 ;;  product         1    2[BANK0 ] unsigned char 
 24619 ;; Return value:  Size  Location     Type
 24620 ;;                  1    wreg      unsigned char 
 24621 ;; Registers used:
 24622 ;;		wreg, status,2, status,0
 24623 ;; Tracked objects:
 24624 ;;		On entry : 0/0
 24625 ;;		On exit  : 0/0
 24626 ;;		Unchanged: 0/0
 24627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24628 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24631 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24632 ;;Total ram usage:        4 bytes
 24633 ;; Hardware stack levels used:    1
 24634 ;; Hardware stack levels required when called:    2
 24635 ;; This function calls:
 24636 ;;		Nothing
 24637 ;; This function is called by:
 24638 ;;		_printf
 24639 ;;		_catgenie_init
 24640 ;;		_catgenie_work
 24641 ;;		_set_pacer
 24642 ;;		_proc_line
 24643 ;;		_cmd2index
 24644 ;;		_help
 24645 ;; This function uses a non-reentrant model
 24646 ;;
 24647                           psect	text3367
 24648                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
 24649                           	line	3
 24650                           	global	__size_of___bmul
 24651  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
 24652                           	
 24653  2912                     ___bmul:	
 24654                           	opt	stack 8
 24655                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 24656                           ;___bmul@multiplier stored from wreg
 24657  2912  0020               	movlb 0	; select bank0
 24658  2913  00A4               	movwf	(___bmul@multiplier)
 24659                           	line	4
 24660                           	
 24661  2914                     l37017:	
 24662  2914  01A3               	clrf	(___bmul@product)
 24663  2915  2916               	goto	l37019
 24664                           	line	6
 24665                           	
 24666  2916                     l29097:	
 24667                           	line	7
 24668                           	
 24669  2916                     l37019:	
 24670  2916  1C24               	btfss	(___bmul@multiplier),(0)&7
 24671  2917  2919               	goto	u9861
 24672  2918  291A               	goto	u9860
 24673  2919                     u9861:
 24674  2919  291F               	goto	l37023
 24675  291A                     u9860:
 24676                           	line	8
 24677                           	
 24678  291A                     l37021:	
 24679  291A  0821               	movf	(___bmul@multiplicand),w
 24680  291B  00A2               	movwf	(??___bmul+0)+0
 24681  291C  0822               	movf	(??___bmul+0)+0,w
 24682  291D  07A3               	addwf	(___bmul@product),f
 24683  291E  291F               	goto	l37023
 24684                           	
 24685  291F                     l29098:	
 24686                           	line	9
 24687                           	
 24688  291F                     l37023:	
 24689  291F  1003               	clrc
 24690  2920  0DA1               	rlf	(___bmul@multiplicand),f
 24691                           
 24692                           	line	10
 24693                           	
 24694  2921                     l37025:	
 24695  2921  1003               	clrc
 24696  2922  0CA4               	rrf	(___bmul@multiplier),f
 24697                           
 24698                           	line	11
 24699                           	
 24700  2923                     l37027:	
 24701  2923  08A4               	movf	(___bmul@multiplier),f
 24702  2924  1D03               	skipz
 24703  2925  2927               	goto	u9871
 24704  2926  2928               	goto	u9870
 24705  2927                     u9871:
 24706  2927  2916               	goto	l37019
 24707  2928                     u9870:
 24708  2928  2929               	goto	l37029
 24709                           	
 24710  2929                     l29099:	
 24711                           	line	12
 24712                           	
 24713  2929                     l37029:	
 24714  2929  0823               	movf	(___bmul@product),w
 24715  292A  292B               	goto	l29100
 24716                           	
 24717  292B                     l37031:	
 24718                           	line	13
 24719                           	
 24720  292B                     l29100:	
 24721  292B  0008               	return
 24722                           	opt stack 0
 24723                           GLOBAL	__end_of___bmul
 24724  292C                     	__end_of___bmul:
 24725 ;; =============== function ___bmul ends ============
 24726                           
 24727                           	signat	___bmul,8313
 24728                           	global	_isdigit
 24729                           psect	text3368,local,class=CODE,delta=2
 24730                           global __ptext3368
 24731  28B3                     __ptext3368:
 24732                           
 24733 ;; *************** function _isdigit *****************
 24734 ;; Defined at:
 24735 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 24736 ;; Parameters:    Size  Location     Type
 24737 ;;  c               1    wreg     unsigned char 
 24738 ;; Auto vars:     Size  Location     Type
 24739 ;;  c               1    1[BANK0 ] unsigned char 
 24740 ;; Return value:  Size  Location     Type
 24741 ;;		None               void
 24742 ;; Registers used:
 24743 ;;		wreg, status,2, status,0
 24744 ;; Tracked objects:
 24745 ;;		On entry : 0/0
 24746 ;;		On exit  : 0/0
 24747 ;;		Unchanged: 0/0
 24748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24750 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24753 ;;Total ram usage:        2 bytes
 24754 ;; Hardware stack levels used:    1
 24755 ;; Hardware stack levels required when called:    2
 24756 ;; This function calls:
 24757 ;;		Nothing
 24758 ;; This function is called by:
 24759 ;;		_printf
 24760 ;; This function uses a non-reentrant model
 24761 ;;
 24762                           psect	text3368
 24763                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
 24764                           	global	__size_of_isdigit
 24765  0016                     	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 24766                           	
 24767  28B3                     _isdigit:	
 24768                           	opt	stack 8
 24769                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 24770                           ;isdigit@c stored from wreg
 24771  28B3  0020               	movlb 0	; select bank0
 24772  28B4  00A2               	movwf	(isdigit@c)
 24773                           	line	14
 24774                           	
 24775  28B5                     l37005:	
 24776  28B5  01A1               	clrf	(_isdigit$29805)
 24777                           	
 24778  28B6                     l37007:	
 24779  28B6  303A               	movlw	(03Ah)
 24780  28B7  0222               	subwf	(isdigit@c),w
 24781  28B8  1803               	skipnc
 24782  28B9  28BB               	goto	u9841
 24783  28BA  28BC               	goto	u9840
 24784  28BB                     u9841:
 24785  28BB  28C6               	goto	l37013
 24786  28BC                     u9840:
 24787                           	
 24788  28BC                     l37009:	
 24789  28BC  3030               	movlw	(030h)
 24790  28BD  0222               	subwf	(isdigit@c),w
 24791  28BE  1C03               	skipc
 24792  28BF  28C1               	goto	u9851
 24793  28C0  28C2               	goto	u9850
 24794  28C1                     u9851:
 24795  28C1  28C6               	goto	l37013
 24796  28C2                     u9850:
 24797                           	
 24798  28C2                     l37011:	
 24799  28C2  01A1               	clrf	(_isdigit$29805)
 24800  28C3  1403               	bsf	status,0
 24801  28C4  0DA1               	rlf	(_isdigit$29805),f
 24802  28C5  28C6               	goto	l37013
 24803                           	
 24804  28C6                     l29072:	
 24805                           	
 24806  28C6                     l37013:	
 24807  28C6  0C21               	rrf	(_isdigit$29805),w
 24808                           	
 24809  28C7  28C8               	goto	l29073
 24810                           	
 24811  28C8                     l37015:	
 24812                           	line	15
 24813                           	
 24814  28C8                     l29073:	
 24815  28C8  0008               	return
 24816                           	opt stack 0
 24817                           GLOBAL	__end_of_isdigit
 24818  28C9                     	__end_of_isdigit:
 24819 ;; =============== function _isdigit ends ============
 24820                           
 24821                           	signat	_isdigit,4216
 24822                           	global	_strncmp
 24823                           psect	text3369,local,class=CODE,delta=2
 24824                           global __ptext3369
 24825  2E3B                     __ptext3369:
 24826                           
 24827 ;; *************** function _strncmp *****************
 24828 ;; Defined at:
 24829 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strncmp.c"
 24830 ;; Parameters:    Size  Location     Type
 24831 ;;  s1              1    wreg     PTR const unsigned char 
 24832 ;;		 -> linebuffer(20), 
 24833 ;;  s2              2    4[BANK0 ] PTR const unsigned char 
 24834 ;;		 -> STR_107(4), STR_106(3), commands(36), 
 24835 ;;  len             2    6[BANK0 ] unsigned int 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;  s1              1   10[BANK0 ] PTR const unsigned char 
 24838 ;;		 -> linebuffer(20), 
 24839 ;; Return value:  Size  Location     Type
 24840 ;;                  2    4[BANK0 ] int 
 24841 ;; Registers used:
 24842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 24843 ;; Tracked objects:
 24844 ;;		On entry : 0/0
 24845 ;;		On exit  : 0/0
 24846 ;;		Unchanged: 0/0
 24847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24848 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24851 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 24852 ;;Total ram usage:        7 bytes
 24853 ;; Hardware stack levels used:    1
 24854 ;; Hardware stack levels required when called:    2
 24855 ;; This function calls:
 24856 ;;		Nothing
 24857 ;; This function is called by:
 24858 ;;		_cmd2index
 24859 ;;		_echo
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           psect	text3369
 24863                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strncmp.c"
 24864                           	line	5
 24865                           	global	__size_of_strncmp
 24866  0053                     	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
 24867                           	
 24868  2E3B                     _strncmp:	
 24869                           	opt	stack 9
 24870                           ; Regs used in _strncmp: [wreg-status,0+pclath]
 24871                           ;strncmp@s1 stored from wreg
 24872  2E3B  0020               	movlb 0	; select bank0
 24873  2E3C  00AB               	movwf	(strncmp@s1)
 24874                           	line	6
 24875                           	
 24876  2E3D                     l34319:	
 24877  2E3D  2E7B               	goto	l34333
 24878                           	
 24879  2E3E                     l29089:	
 24880                           	line	7
 24881                           	
 24882  2E3E                     l34321:	
 24883  2E3E  082B               	movf	(strncmp@s1),w
 24884  2E3F  0086               	movwf	fsr1l
 24885  2E40  3001               	movlw 1	; select bank2/3
 24886  2E41  0087               	movwf fsr1h	
 24887                           	
 24888  2E42  0801               	movf	indf1,w
 24889  2E43  3A00               	xorlw	0&0ffh
 24890  2E44  1903               	skipnz
 24891  2E45  2E47               	goto	u6221
 24892  2E46  2E48               	goto	u6220
 24893  2E47                     u6221:
 24894  2E47  2E59               	goto	l34325
 24895  2E48                     u6220:
 24896                           	
 24897  2E48                     l34323:	
 24898  2E48  0825               	movf	(strncmp@s2),w
 24899  2E49  0084               	movwf	fsr0l
 24900  2E4A  0826               	movf	((strncmp@s2+1)),w
 24901  2E4B  0085               	movwf	fsr0h
 24902  2E4C  0800               	movf	indf0,w ;code access
 24903  2E4D  00A9               	movwf	(??_strncmp+0)+0
 24904  2E4E  082B               	movf	(strncmp@s1),w
 24905  2E4F  0086               	movwf	fsr1l
 24906  2E50  3001               	movlw 1	; select bank2/3
 24907  2E51  0087               	movwf fsr1h	
 24908                           	
 24909  2E52  0801               	movf	indf1,w
 24910  2E53  0629               	xorwf	(??_strncmp+0)+0,w
 24911  2E54  1903               	skipnz
 24912  2E55  2E57               	goto	u6231
 24913  2E56  2E58               	goto	u6230
 24914  2E57                     u6231:
 24915  2E57  2E72               	goto	l34329
 24916  2E58                     u6230:
 24917  2E58  2E59               	goto	l34325
 24918                           	
 24919  2E59                     l29092:	
 24920                           	line	8
 24921                           	
 24922  2E59                     l34325:	
 24923  2E59  0825               	movf	(strncmp@s2),w
 24924  2E5A  0084               	movwf	fsr0l
 24925  2E5B  0826               	movf	((strncmp@s2+1)),w
 24926  2E5C  0085               	movwf	fsr0h
 24927  2E5D  0800               	movf	indf0,w ;code access
 24928  2E5E  00A9               	movwf	(??_strncmp+0)+0
 24929  2E5F  01AA               	clrf	(??_strncmp+0)+0+1
 24930  2E60  09A9               	comf	(??_strncmp+0)+0,f
 24931  2E61  09AA               	comf	(??_strncmp+0)+1,f
 24932  2E62  0AA9               	incf	(??_strncmp+0)+0,f
 24933  2E63  1903               	skipnz
 24934  2E64  0AAA               	incf	(??_strncmp+0)+1,f
 24935  2E65  082B               	movf	(strncmp@s1),w
 24936  2E66  0086               	movwf	fsr1l
 24937  2E67  3001               	movlw 1	; select bank2/3
 24938  2E68  0087               	movwf fsr1h	
 24939                           	
 24940  2E69  0801               	movf	indf1,w
 24941  2E6A  0729               	addwf	0+(??_strncmp+0)+0,w
 24942  2E6B  00A5               	movwf	(?_strncmp)
 24943  2E6C  082A               	movf	1+(??_strncmp+0)+0,w
 24944  2E6D  1803               	skipnc
 24945  2E6E  0A2A               	incf	1+(??_strncmp+0)+0,w
 24946  2E6F  00A6               	movwf	((?_strncmp))+1
 24947  2E70  2E8D               	goto	l29093
 24948                           	
 24949  2E71                     l34327:	
 24950  2E71  2E8D               	goto	l29093
 24951                           	
 24952  2E72                     l29090:	
 24953                           	line	10
 24954                           	
 24955  2E72                     l34329:	
 24956  2E72  3001               	movlw	(01h)
 24957  2E73  00A9               	movwf	(??_strncmp+0)+0
 24958  2E74  0829               	movf	(??_strncmp+0)+0,w
 24959  2E75  07AB               	addwf	(strncmp@s1),f
 24960                           	line	11
 24961                           	
 24962  2E76                     l34331:	
 24963  2E76  3001               	movlw	low(01h)
 24964  2E77  07A5               	addwf	(strncmp@s2),f
 24965  2E78  3000               	movlw	high(01h)
 24966  2E79  3DA6               	addwfc	(strncmp@s2+1),f
 24967  2E7A  2E7B               	goto	l34333
 24968                           	line	12
 24969                           	
 24970  2E7B                     l29088:	
 24971                           	line	6
 24972                           	
 24973  2E7B                     l34333:	
 24974  2E7B  3001               	movlw	low(01h)
 24975  2E7C  02A7               	subwf	(strncmp@len),f
 24976  2E7D  3000               	movlw	high(01h)
 24977  2E7E  3BA8               	subwfb	(strncmp@len+1),f
 24978  2E7F  30FF               	movlw	high(0FFFFh)
 24979  2E80  0628               	xorwf	((strncmp@len+1)),w
 24980  2E81  1D03               	skipz
 24981  2E82  2E85               	goto	u6245
 24982  2E83  30FF               	movlw	low(0FFFFh)
 24983  2E84  0627               	xorwf	((strncmp@len)),w
 24984  2E85                     u6245:
 24985                           
 24986  2E85  1D03               	skipz
 24987  2E86  2E88               	goto	u6241
 24988  2E87  2E89               	goto	u6240
 24989  2E88                     u6241:
 24990  2E88  2E3E               	goto	l34321
 24991  2E89                     u6240:
 24992  2E89  2E8A               	goto	l34335
 24993                           	
 24994  2E8A                     l29094:	
 24995                           	line	13
 24996                           	
 24997  2E8A                     l34335:	
 24998  2E8A  01A5               	clrf	(?_strncmp)
 24999  2E8B  01A6               	clrf	(?_strncmp+1)
 25000  2E8C  2E8D               	goto	l29093
 25001                           	
 25002  2E8D                     l34337:	
 25003                           	line	14
 25004                           	
 25005  2E8D                     l29093:	
 25006  2E8D  0008               	return
 25007                           	opt stack 0
 25008                           GLOBAL	__end_of_strncmp
 25009  2E8E                     	__end_of_strncmp:
 25010 ;; =============== function _strncmp ends ============
 25011                           
 25012                           	signat	_strncmp,12410
 25013                           	global	_strlen
 25014                           psect	text3370,local,class=CODE,delta=2
 25015                           global __ptext3370
 25016  2BC6                     __ptext3370:
 25017                           
 25018 ;; *************** function _strlen *****************
 25019 ;; Defined at:
 25020 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strlen.c"
 25021 ;; Parameters:    Size  Location     Type
 25022 ;;  s               1    wreg     PTR const unsigned char 
 25023 ;;		 -> linebuffer(20), 
 25024 ;; Auto vars:     Size  Location     Type
 25025 ;;  s               1    8[BANK0 ] PTR const unsigned char 
 25026 ;;		 -> linebuffer(20), 
 25027 ;;  cp              1    9[BANK0 ] PTR const unsigned char 
 25028 ;;		 -> linebuffer(20), 
 25029 ;; Return value:  Size  Location     Type
 25030 ;;                  2    0[BANK0 ] unsigned int 
 25031 ;; Registers used:
 25032 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25033 ;; Tracked objects:
 25034 ;;		On entry : 0/0
 25035 ;;		On exit  : 0/0
 25036 ;;		Unchanged: 0/0
 25037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25040 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25041 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0
 25042 ;;Total ram usage:       10 bytes
 25043 ;; Hardware stack levels used:    1
 25044 ;; Hardware stack levels required when called:    2
 25045 ;; This function calls:
 25046 ;;		Nothing
 25047 ;; This function is called by:
 25048 ;;		_proc_line
 25049 ;; This function uses a non-reentrant model
 25050 ;;
 25051                           psect	text3370
 25052                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\strlen.c"
 25053                           	line	5
 25054                           	global	__size_of_strlen
 25055  002F                     	__size_of_strlen	equ	__end_of_strlen-_strlen
 25056                           	
 25057  2BC6                     _strlen:	
 25058                           	opt	stack 10
 25059                           ; Regs used in _strlen: [wreg+fsr1l-status,0]
 25060                           ;strlen@s stored from wreg
 25061                           	line	8
 25062  2BC6  0020               	movlb 0	; select bank0
 25063  2BC7  00A9               	movwf	(strlen@s)
 25064                           	
 25065  2BC8                     l34311:	
 25066  2BC8  0829               	movf	(strlen@s),w
 25067  2BC9  00A3               	movwf	(??_strlen+0)+0
 25068  2BCA  0823               	movf	(??_strlen+0)+0,w
 25069  2BCB  00AA               	movwf	(strlen@cp)
 25070                           	line	9
 25071  2BCC  2BCE               	goto	l34313
 25072                           	
 25073  2BCD                     l29083:	
 25074                           	line	10
 25075  2BCD  2BCE               	goto	l34313
 25076                           	
 25077  2BCE                     l29082:	
 25078                           	line	9
 25079                           	
 25080  2BCE                     l34313:	
 25081  2BCE  082A               	movf	(strlen@cp),w
 25082  2BCF  0086               	movwf	fsr1l
 25083  2BD0  3001               	movlw 1	; select bank2/3
 25084  2BD1  0087               	movwf fsr1h	
 25085                           	
 25086  2BD2  3001               	movlw	01h
 25087  2BD3  07AA               	addwf	(strlen@cp),f
 25088  2BD4  0881               	movf	indf1,f
 25089  2BD5  1D03               	skipz
 25090  2BD6  2BD8               	goto	u6211
 25091  2BD7  2BD9               	goto	u6210
 25092  2BD8                     u6211:
 25093  2BD8  2BCE               	goto	l34313
 25094  2BD9                     u6210:
 25095  2BD9  2BDA               	goto	l34315
 25096                           	
 25097  2BDA                     l29084:	
 25098                           	line	11
 25099                           	
 25100  2BDA                     l34315:	
 25101  2BDA  0829               	movf	(strlen@s),w
 25102  2BDB  00A3               	movwf	(??_strlen+0)+0
 25103  2BDC  3001               	movlw	(0x2/2)
 25104  2BDD  00A4               	movwf	(??_strlen+0)+0+1
 25105  2BDE  09A3               	comf	(??_strlen+0)+0,f
 25106  2BDF  09A4               	comf	(??_strlen+0)+1,f
 25107  2BE0  0AA3               	incf	(??_strlen+0)+0,f
 25108  2BE1  1903               	skipnz
 25109  2BE2  0AA4               	incf	(??_strlen+0)+1,f
 25110  2BE3  082A               	movf	(strlen@cp),w
 25111  2BE4  00A5               	movwf	(??_strlen+2)+0
 25112  2BE5  3001               	movlw	(0x2/2)
 25113  2BE6  00A6               	movwf	(??_strlen+2)+0+1
 25114  2BE7  0823               	movf	0+(??_strlen+0)+0,w
 25115  2BE8  0725               	addwf	0+(??_strlen+2)+0,w
 25116  2BE9  00A7               	movwf	(??_strlen+4)+0
 25117  2BEA  0824               	movf	1+(??_strlen+0)+0,w
 25118  2BEB  3D26               	addwfc	1+(??_strlen+2)+0,w
 25119  2BEC  00A8               	movwf	1+(??_strlen+4)+0
 25120  2BED  0827               	movf	0+(??_strlen+4)+0,w
 25121  2BEE  3EFF               	addlw	low(-1)
 25122  2BEF  00A1               	movwf	(?_strlen)
 25123  2BF0  30FF               	movlw	high(-1)
 25124  2BF1  3D28               	addwfc	1+(??_strlen+4)+0,w
 25125  2BF2  00A2               	movwf	1+(?_strlen)
 25126  2BF3  2BF4               	goto	l29085
 25127                           	
 25128  2BF4                     l34317:	
 25129                           	line	12
 25130                           	
 25131  2BF4                     l29085:	
 25132  2BF4  0008               	return
 25133                           	opt stack 0
 25134                           GLOBAL	__end_of_strlen
 25135  2BF5                     	__end_of_strlen:
 25136 ;; =============== function _strlen ends ============
 25137                           
 25138                           	signat	_strlen,4218
 25139                           	global	_readch
 25140                           psect	text3371,local,class=CODE,delta=2
 25141                           global __ptext3371
 25142  226F                     __ptext3371:
 25143                           
 25144 ;; *************** function _readch *****************
 25145 ;; Defined at:
 25146 ;;		line 239 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25147 ;; Parameters:    Size  Location     Type
 25148 ;;  ch              1    wreg     PTR unsigned char 
 25149 ;;		 -> cmdline_work@rxd(1), 
 25150 ;; Auto vars:     Size  Location     Type
 25151 ;;  ch              1    2[BANK0 ] PTR unsigned char 
 25152 ;;		 -> cmdline_work@rxd(1), 
 25153 ;;  result          1    3[BANK0 ] unsigned char 
 25154 ;; Return value:  Size  Location     Type
 25155 ;;                  1    wreg      unsigned char 
 25156 ;; Registers used:
 25157 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25158 ;; Tracked objects:
 25159 ;;		On entry : 0/0
 25160 ;;		On exit  : 0/0
 25161 ;;		Unchanged: 0/0
 25162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25165 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25166 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25167 ;;Total ram usage:        4 bytes
 25168 ;; Hardware stack levels used:    1
 25169 ;; Hardware stack levels required when called:    2
 25170 ;; This function calls:
 25171 ;;		Nothing
 25172 ;; This function is called by:
 25173 ;;		_cmdline_work
 25174 ;; This function uses a non-reentrant model
 25175 ;;
 25176                           psect	text3371
 25177                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25178                           	line	239
 25179                           	global	__size_of_readch
 25180  006C                     	__size_of_readch	equ	__end_of_readch-_readch
 25181                           	
 25182  226F                     _readch:	
 25183                           	opt	stack 12
 25184                           ; Regs used in _readch: [wreg+fsr1l-status,0]
 25185                           ;readch@ch stored from wreg
 25186                           	line	241
 25187  226F  0020               	movlb 0	; select bank0
 25188  2270  00A3               	movwf	(readch@ch)
 25189                           	
 25190  2271                     l34283:	
 25191                           ;serial.c: 241: unsigned char result = 0;
 25192  2271  01A4               	clrf	(readch@result)
 25193                           	line	243
 25194                           ;serial.c: 243: RCIE = 0;
 25195  2272  0021               	movlb 1	; select bank1
 25196  2273  1291               	bcf	(1165/8)^080h,(1165)&7
 25197                           	line	249
 25198                           	
 25199  2274                     l34285:	
 25200                           ;serial.c: 249: if (rx.head != rx.tail) {
 25201  2274  0022               	movlb 2	; select bank2
 25202  2275  0C39               	rrf	0+(_rx)^0100h+08h,w
 25203  2276  0020               	movlb 0	; select bank0
 25204  2277  00A1               	movwf	(??_readch+0)+0
 25205  2278  0CA1               	rrf	(??_readch+0)+0,f
 25206  2279  0C21               	rrf	(??_readch+0)+0,w
 25207  227A  3907               	andlw	(1<<3)-1
 25208  227B  00A2               	movwf	(??_readch+1)+0
 25209  227C  0022               	movlb 2	; select bank2
 25210  227D  0839               	movf	0+(_rx)^0100h+08h,w
 25211  227E  3907               	andlw	(1<<3)-1
 25212  227F  0020               	movlb 0	; select bank0
 25213  2280  0622               	xorwf	(??_readch+1)+0,w
 25214  2281  1903               	skipnz
 25215  2282  2A84               	goto	u6161
 25216  2283  2A85               	goto	u6160
 25217  2284                     u6161:
 25218  2284  2AD5               	goto	l34305
 25219  2285                     u6160:
 25220                           	line	251
 25221                           	
 25222  2285                     l34287:	
 25223                           ;serial.c: 251: *ch = rx.buffer[rx.tail];
 25224  2285  0022               	movlb 2	; select bank2
 25225  2286  0C39               	rrf	0+(_rx)^0100h+08h,w
 25226  2287  0020               	movlb 0	; select bank0
 25227  2288  00A1               	movwf	(??_readch+0)+0
 25228  2289  0CA1               	rrf	(??_readch+0)+0,f
 25229  228A  0C21               	rrf	(??_readch+0)+0,w
 25230  228B  3907               	andlw	(1<<3)-1
 25231  228C  3E31               	addlw	_rx&0ffh
 25232  228D  0086               	movwf	fsr1l
 25233  228E  3001               	movlw 1	; select bank2/3
 25234  228F  0087               	movwf fsr1h	
 25235                           	
 25236  2290  0801               	movf	indf1,w
 25237  2291  00A2               	movwf	(??_readch+1)+0
 25238  2292  0823               	movf	(readch@ch),w
 25239  2293  0086               	movwf	fsr1l
 25240  2294  0187               	clrf fsr1h	
 25241                           	
 25242  2295  0822               	movf	(??_readch+1)+0,w
 25243  2296  0081               	movwf	indf1
 25244                           	line	253
 25245                           	
 25246  2297                     l34289:	
 25247                           ;serial.c: 253: rx.tail++;
 25248  2297  0022               	movlb 2	; select bank2
 25249  2298  0C39               	rrf	0+(_rx)^0100h+08h,w
 25250  2299  0020               	movlb 0	; select bank0
 25251  229A  00A1               	movwf	((??_readch+0)+0)
 25252  229B  0CA1               	rrf	((??_readch+0)+0),f
 25253  229C  0C21               	rrf	((??_readch+0)+0),w
 25254  229D  3907               	andlw	(1<<3)-1
 25255  229E  00A1               	movwf	((??_readch+0)+0)
 25256  229F  0AA1               	incf	(??_readch+0)+0
 25257  22A0  0DA1               	rlf	((??_readch+0)+0),f
 25258  22A1  0DA1               	rlf	((??_readch+0)+0),f
 25259  22A2  0DA1               	rlf	((??_readch+0)+0),f
 25260  22A3  0022               	movlb 2	; select bank2
 25261  22A4  0839               	movf	0+(_rx)^0100h+08h,w
 25262  22A5  0020               	movlb 0	; select bank0
 25263  22A6  0621               	xorwf	((??_readch+0)+0),w
 25264  22A7  39C7               	andlw	not (((1<<3)-1)<<3)
 25265  22A8  0621               	xorwf	((??_readch+0)+0),w
 25266  22A9  0022               	movlb 2	; select bank2
 25267  22AA  00B9               	movwf	0+(_rx)^0100h+08h
 25268                           	line	257
 25269                           	
 25270  22AB                     l34291:	
 25271                           ;serial.c: 255: if (rx.xon_enabled &&
 25272                           ;serial.c: 256: !rx.xon_state &&
 25273                           ;serial.c: 257: (rx.head == rx.tail)) {
 25274  22AB  1F39               	btfss	0+(_rx)^0100h+08h,6
 25275  22AC  2AAE               	goto	u6171
 25276  22AD  2AAF               	goto	u6170
 25277  22AE                     u6171:
 25278  22AE  2AD0               	goto	l34303
 25279  22AF                     u6170:
 25280                           	
 25281  22AF                     l34293:	
 25282  22AF  1BB9               	btfsc	0+(_rx)^0100h+08h,7
 25283  22B0  2AB2               	goto	u6181
 25284  22B1  2AB3               	goto	u6180
 25285  22B2                     u6181:
 25286  22B2  2AD0               	goto	l34303
 25287  22B3                     u6180:
 25288                           	
 25289  22B3                     l34295:	
 25290  22B3  0C39               	rrf	0+(_rx)^0100h+08h,w
 25291  22B4  0020               	movlb 0	; select bank0
 25292  22B5  00A1               	movwf	(??_readch+0)+0
 25293  22B6  0CA1               	rrf	(??_readch+0)+0,f
 25294  22B7  0C21               	rrf	(??_readch+0)+0,w
 25295  22B8  3907               	andlw	(1<<3)-1
 25296  22B9  00A2               	movwf	(??_readch+1)+0
 25297  22BA  0022               	movlb 2	; select bank2
 25298  22BB  0839               	movf	0+(_rx)^0100h+08h,w
 25299  22BC  3907               	andlw	(1<<3)-1
 25300  22BD  0020               	movlb 0	; select bank0
 25301  22BE  0622               	xorwf	(??_readch+1)+0,w
 25302  22BF  1D03               	skipz
 25303  22C0  2AC2               	goto	u6191
 25304  22C1  2AC3               	goto	u6190
 25305  22C2                     u6191:
 25306  22C2  2AD0               	goto	l34303
 25307  22C3                     u6190:
 25308  22C3  2AC5               	goto	l19336
 25309                           	line	258
 25310                           	
 25311  22C4                     l34297:	
 25312                           ;serial.c: 258: while(!TXIF);
 25313  22C4  2AC5               	goto	l19336
 25314                           	
 25315  22C5                     l19337:	
 25316                           	
 25317  22C5                     l19336:	
 25318  22C5  1E11               	btfss	(140/8),(140)&7
 25319  22C6  2AC8               	goto	u6201
 25320  22C7  2AC9               	goto	u6200
 25321  22C8                     u6201:
 25322  22C8  2AC5               	goto	l19336
 25323  22C9                     u6200:
 25324  22C9  2ACA               	goto	l34299
 25325                           	
 25326  22CA                     l19338:	
 25327                           	line	259
 25328                           	
 25329  22CA                     l34299:	
 25330                           ;serial.c: 259: TXREG = 0x11;
 25331  22CA  3011               	movlw	(011h)
 25332  22CB  0023               	movlb 3	; select bank3
 25333  22CC  009A               	movwf	(410)^0180h	;volatile
 25334                           	line	260
 25335                           	
 25336  22CD                     l34301:	
 25337                           ;serial.c: 260: rx.xon_state = 1;
 25338  22CD  0022               	movlb 2	; select bank2
 25339  22CE  17B9               	bsf	0+(_rx)^0100h+08h,7
 25340  22CF  2AD0               	goto	l34303
 25341                           	line	261
 25342                           	
 25343  22D0                     l19335:	
 25344                           	line	262
 25345                           	
 25346  22D0                     l34303:	
 25347                           ;serial.c: 261: }
 25348                           ;serial.c: 262: result = 1;
 25349  22D0  0020               	movlb 0	; select bank0
 25350  22D1  01A4               	clrf	(readch@result)
 25351  22D2  1403               	bsf	status,0
 25352  22D3  0DA4               	rlf	(readch@result),f
 25353  22D4  2AD5               	goto	l34305
 25354                           	line	263
 25355                           	
 25356  22D5                     l19334:	
 25357                           	line	265
 25358                           	
 25359  22D5                     l34305:	
 25360                           ;serial.c: 263: }
 25361                           ;serial.c: 265: RCIE = 1;
 25362  22D5  0021               	movlb 1	; select bank1
 25363  22D6  1691               	bsf	(1165/8)^080h,(1165)&7
 25364                           	line	271
 25365                           	
 25366  22D7                     l34307:	
 25367                           ;serial.c: 271: return result;
 25368  22D7  0020               	movlb 0	; select bank0
 25369  22D8  0824               	movf	(readch@result),w
 25370  22D9  2ADA               	goto	l19339
 25371                           	
 25372  22DA                     l34309:	
 25373                           	line	294
 25374                           	
 25375  22DA                     l19339:	
 25376  22DA  0008               	return
 25377                           	opt stack 0
 25378                           GLOBAL	__end_of_readch
 25379  22DB                     	__end_of_readch:
 25380 ;; =============== function _readch ends ============
 25381                           
 25382                           	signat	_readch,4217
 25383                           	global	_putch
 25384                           psect	text3372,local,class=CODE,delta=2
 25385                           global __ptext3372
 25386  2B10                     __ptext3372:
 25387                           
 25388 ;; *************** function _putch *****************
 25389 ;; Defined at:
 25390 ;;		line 187 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25391 ;; Parameters:    Size  Location     Type
 25392 ;;  ch              1    wreg     unsigned char 
 25393 ;; Auto vars:     Size  Location     Type
 25394 ;;  ch              1    1[BANK0 ] unsigned char 
 25395 ;;  dummy           1    2[BANK0 ] volatile unsigned char 
 25396 ;; Return value:  Size  Location     Type
 25397 ;;		None               void
 25398 ;; Registers used:
 25399 ;;		wreg
 25400 ;; Tracked objects:
 25401 ;;		On entry : 0/0
 25402 ;;		On exit  : 0/0
 25403 ;;		Unchanged: 0/0
 25404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25408 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25409 ;;Total ram usage:        3 bytes
 25410 ;; Hardware stack levels used:    1
 25411 ;; Hardware stack levels required when called:    2
 25412 ;; This function calls:
 25413 ;;		Nothing
 25414 ;; This function is called by:
 25415 ;;		_cmdline_work
 25416 ;;		_proc_char
 25417 ;;		_printf
 25418 ;; This function uses a non-reentrant model
 25419 ;;
 25420                           psect	text3372
 25421                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25422                           	line	187
 25423                           	global	__size_of_putch
 25424  002D                     	__size_of_putch	equ	__end_of_putch-_putch
 25425                           	
 25426  2B10                     _putch:	
 25427                           	opt	stack 8
 25428                           ; Regs used in _putch: [wreg]
 25429                           ;putch@ch stored from wreg
 25430                           	line	213
 25431  2B10  0020               	movlb 0	; select bank0
 25432  2B11  00A2               	movwf	(putch@ch)
 25433                           	
 25434  2B12                     l36965:	
 25435                           ;serial.c: 213: if (!SPEN)
 25436  2B12  0023               	movlb 3	; select bank3
 25437  2B13  1B9D               	btfsc	(3311/8)^0180h,(3311)&7
 25438  2B14  2B16               	goto	u9771
 25439  2B15  2B17               	goto	u9770
 25440  2B16                     u9771:
 25441  2B16  2B32               	goto	l36979
 25442  2B17                     u9770:
 25443  2B17  2B3C               	goto	l19326
 25444                           	line	214
 25445                           	
 25446  2B18                     l36967:	
 25447                           ;serial.c: 214: return;
 25448  2B18  2B3C               	goto	l19326
 25449                           	
 25450  2B19                     l19325:	
 25451                           	line	215
 25452                           ;serial.c: 215: while(!TXIF) {
 25453  2B19  2B32               	goto	l36979
 25454                           	
 25455  2B1A                     l19328:	
 25456                           	line	216
 25457                           ;serial.c: 216: if (OERR) {
 25458  2B1A  0023               	movlb 3	; select bank3
 25459  2B1B  1C9D               	btfss	(3305/8)^0180h,(3305)&7
 25460  2B1C  2B1E               	goto	u9781
 25461  2B1D  2B1F               	goto	u9780
 25462  2B1E                     u9781:
 25463  2B1E  2B23               	goto	l19329
 25464  2B1F                     u9780:
 25465                           	line	217
 25466                           	
 25467  2B1F                     l36969:	
 25468                           ;serial.c: 217: TXEN = 0;
 25469  2B1F  129E               	bcf	(3317/8)^0180h,(3317)&7
 25470                           	line	218
 25471                           ;serial.c: 218: TXEN = 1;
 25472  2B20  169E               	bsf	(3317/8)^0180h,(3317)&7
 25473                           	line	219
 25474                           ;serial.c: 219: CREN = 0;
 25475  2B21  121D               	bcf	(3308/8)^0180h,(3308)&7
 25476                           	line	220
 25477                           ;serial.c: 220: CREN = 1;
 25478  2B22  161D               	bsf	(3308/8)^0180h,(3308)&7
 25479                           	line	221
 25480                           	
 25481  2B23                     l19329:	
 25482                           	line	222
 25483                           ;serial.c: 221: }
 25484                           ;serial.c: 222: if (FERR) {
 25485  2B23  1D1D               	btfss	(3306/8)^0180h,(3306)&7
 25486  2B24  2B26               	goto	u9791
 25487  2B25  2B27               	goto	u9790
 25488  2B26                     u9791:
 25489  2B26  2B30               	goto	l36977
 25490  2B27                     u9790:
 25491                           	line	225
 25492                           	
 25493  2B27                     l36971:	
 25494                           ;serial.c: 223: volatile unsigned char dummy;
 25495                           ;serial.c: 225: dummy = RCREG;
 25496  2B27  0819               	movf	(409)^0180h,w	;volatile
 25497  2B28  0020               	movlb 0	; select bank0
 25498  2B29  00A1               	movwf	(??_putch+0)+0
 25499  2B2A  0821               	movf	(??_putch+0)+0,w
 25500  2B2B  00A3               	movwf	(putch@dummy)	;volatile
 25501                           	line	226
 25502                           	
 25503  2B2C                     l36973:	
 25504                           ;serial.c: 226: TXEN = 0;
 25505  2B2C  0023               	movlb 3	; select bank3
 25506  2B2D  129E               	bcf	(3317/8)^0180h,(3317)&7
 25507                           	line	227
 25508                           	
 25509  2B2E                     l36975:	
 25510                           ;serial.c: 227: TXEN = 1;
 25511  2B2E  169E               	bsf	(3317/8)^0180h,(3317)&7
 25512  2B2F  2B30               	goto	l36977
 25513                           	line	228
 25514                           	
 25515  2B30                     l19330:	
 25516                           	line	229
 25517                           	
 25518  2B30                     l36977:	
 25519                           # 229 "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25520  2B30  0064               clrwdt ;#
 25521                           psect	text3372
 25522  2B31  2B32               	goto	l36979
 25523                           	line	230
 25524                           	
 25525  2B32                     l19327:	
 25526                           	line	215
 25527                           	
 25528  2B32                     l36979:	
 25529  2B32  0020               	movlb 0	; select bank0
 25530  2B33  1E11               	btfss	(140/8),(140)&7
 25531  2B34  2B36               	goto	u9801
 25532  2B35  2B37               	goto	u9800
 25533  2B36                     u9801:
 25534  2B36  2B1A               	goto	l19328
 25535  2B37                     u9800:
 25536  2B37  2B38               	goto	l36981
 25537                           	
 25538  2B38                     l19331:	
 25539                           	line	231
 25540                           	
 25541  2B38                     l36981:	
 25542                           ;serial.c: 230: }
 25543                           ;serial.c: 231: TXREG = ch;
 25544  2B38  0822               	movf	(putch@ch),w
 25545  2B39  0023               	movlb 3	; select bank3
 25546  2B3A  009A               	movwf	(410)^0180h	;volatile
 25547                           	line	232
 25548                           	
 25549  2B3B                     l36983:	
 25550                           # 232 "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 25551  2B3B  0064               clrwdt ;#
 25552                           psect	text3372
 25553                           	line	234
 25554                           	
 25555  2B3C                     l19326:	
 25556  2B3C  0008               	return
 25557                           	opt stack 0
 25558                           GLOBAL	__end_of_putch
 25559  2B3D                     	__end_of_putch:
 25560 ;; =============== function _putch ends ============
 25561                           
 25562                           	signat	_putch,4216
 25563                           	global	_postponetimeout
 25564                           psect	text3373,local,class=CODE,delta=2
 25565                           global __ptext3373
 25566  2EE8                     __ptext3373:
 25567                           
 25568 ;; *************** function _postponetimeout *****************
 25569 ;; Defined at:
 25570 ;;		line 114 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25571 ;; Parameters:    Size  Location     Type
 25572 ;;  timer_p         2    0[BANK0 ] const PTR struct timer
 25573 ;;		 -> second(6), autotimer(6), 
 25574 ;;  postpone        4    2[BANK0 ] const unsigned long 
 25575 ;; Auto vars:     Size  Location     Type
 25576 ;;  tempLongTick    4   10[BANK0 ] unsigned long 
 25577 ;;  longshort       2   14[BANK0 ] PTR struct longshort
 25578 ;;		 -> second(6), autotimer(6), 
 25579 ;; Return value:  Size  Location     Type
 25580 ;;		None               void
 25581 ;; Registers used:
 25582 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25583 ;; Tracked objects:
 25584 ;;		On entry : 0/0
 25585 ;;		On exit  : 0/0
 25586 ;;		Unchanged: 0/0
 25587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25588 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25589 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25590 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25591 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 25592 ;;Total ram usage:       16 bytes
 25593 ;; Hardware stack levels used:    1
 25594 ;; Hardware stack levels required when called:    2
 25595 ;; This function calls:
 25596 ;;		Nothing
 25597 ;; This function is called by:
 25598 ;;		_update_autotimer
 25599 ;;		_rtc_work
 25600 ;; This function uses a non-reentrant model
 25601 ;;
 25602                           psect	text3373
 25603                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 25604                           	line	114
 25605                           	global	__size_of_postponetimeout
 25606  005B                     	__size_of_postponetimeout	equ	__end_of_postponetimeout-_postponetimeout
 25607                           	
 25608  2EE8                     _postponetimeout:	
 25609                           	opt	stack 9
 25610                           ; Regs used in _postponetimeout: [wreg+fsr1l-status,0]
 25611                           	line	116
 25612                           	
 25613  2EE8                     l34253:	
 25614                           ;timer.c: 115: unsigned long tempLongTicks;
 25615                           ;timer.c: 116: struct longshort *longshort = (struct longshort*)timer_p;
 25616  2EE8  0020               	movlb 0	; select bank0
 25617  2EE9  0822               	movf	(postponetimeout@timer_p+1),w
 25618  2EEA  01B0               	clrf	(postponetimeout@longshort+1)
 25619  2EEB  07B0               	addwf	(postponetimeout@longshort+1)
 25620  2EEC  0821               	movf	(postponetimeout@timer_p),w
 25621  2EED  01AF               	clrf	(postponetimeout@longshort)
 25622  2EEE  07AF               	addwf	(postponetimeout@longshort)
 25623                           
 25624                           	line	119
 25625                           	
 25626  2EEF                     l34255:	
 25627                           ;timer.c: 119: if (!postpone)
 25628  2EEF  0826               	movf	(postponetimeout@postpone+3),w
 25629  2EF0  0425               	iorwf	(postponetimeout@postpone+2),w
 25630  2EF1  0424               	iorwf	(postponetimeout@postpone+1),w
 25631  2EF2  0423               	iorwf	(postponetimeout@postpone),w
 25632  2EF3  1D03               	skipz
 25633  2EF4  2EF6               	goto	u6101
 25634  2EF5  2EF7               	goto	u6100
 25635  2EF6                     u6101:
 25636  2EF6  2EF9               	goto	l34259
 25637  2EF7                     u6100:
 25638  2EF7  2F42               	goto	l21379
 25639                           	line	120
 25640                           	
 25641  2EF8                     l34257:	
 25642                           ;timer.c: 120: return;
 25643  2EF8  2F42               	goto	l21379
 25644                           	
 25645  2EF9                     l21378:	
 25646                           	line	123
 25647                           	
 25648  2EF9                     l34259:	
 25649                           ;timer.c: 123: tempLongTicks = longshort->ls_longTicks;
 25650  2EF9  082F               	movf	(postponetimeout@longshort),w
 25651  2EFA  0086               	movwf	fsr1l
 25652  2EFB  0830               	movf	(postponetimeout@longshort+1),w
 25653  2EFC  0087               	movwf	fsr1h
 25654                           
 25655  2EFD  3F40               	moviw	[0]fsr1
 25656  2EFE  00AB               	movwf	(postponetimeout@tempLongTicks)
 25657  2EFF  3F41               	moviw	[1]fsr1
 25658  2F00  00AC               	movwf	(postponetimeout@tempLongTicks+1)
 25659  2F01  3F42               	moviw	[2]fsr1
 25660  2F02  00AD               	movwf	(postponetimeout@tempLongTicks+2)
 25661  2F03  3F43               	moviw	[3]fsr1
 25662  2F04  00AE               	movwf	(postponetimeout@tempLongTicks+3)
 25663                           	line	126
 25664                           ;timer.c: 126: longshort->ls_longTicks += postpone;
 25665  2F05  082F               	movf	(postponetimeout@longshort),w
 25666  2F06  0086               	movwf	fsr1l
 25667  2F07  0830               	movf	(postponetimeout@longshort+1),w
 25668  2F08  0087               	movwf	fsr1h
 25669                           
 25670  2F09  0823               	movf	(postponetimeout@postpone),w
 25671  2F0A  0781               	addwf	indf1,f
 25672  2F0B  3141               	addfsr	fsr1,1
 25673  2F0C  0824               	movf	(postponetimeout@postpone+1),w
 25674  2F0D  3D81               	addwfc	indf1,f
 25675  2F0E  3141               	addfsr	fsr1,1
 25676  2F0F  0825               	movf	(postponetimeout@postpone+2),w
 25677  2F10  3D81               	addwfc	indf1,f
 25678  2F11  3141               	addfsr	fsr1,1
 25679  2F12  0826               	movf	(postponetimeout@postpone+3),w
 25680  2F13  3D81               	addwfc	indf1,f
 25681                           
 25682                           	line	129
 25683                           ;timer.c: 129: if (longshort->ls_longTicks <= tempLongTicks)
 25684  2F14  082F               	movf	(postponetimeout@longshort),w
 25685  2F15  0086               	movwf	fsr1l
 25686  2F16  0830               	movf	(postponetimeout@longshort+1),w
 25687  2F17  0087               	movwf	fsr1h
 25688                           
 25689  2F18  3F40               	moviw	[0]fsr1
 25690  2F19  00A7               	movwf	((??_postponetimeout+0)+0+0)
 25691  2F1A  3F41               	moviw	[1]fsr1
 25692  2F1B  00A8               	movwf	((??_postponetimeout+0)+0+1)
 25693  2F1C  3F42               	moviw	[2]fsr1
 25694  2F1D  00A9               	movwf	((??_postponetimeout+0)+0+2)
 25695  2F1E  3F43               	moviw	[3]fsr1
 25696  2F1F  00AA               	movwf	((??_postponetimeout+0)+0+3)
 25697  2F20  082A               	movf	3+(??_postponetimeout+0)+0,w
 25698  2F21  022E               	subwf	(postponetimeout@tempLongTicks+3),w
 25699  2F22  1D03               	skipz
 25700  2F23  2F2E               	goto	u6115
 25701  2F24  0829               	movf	2+(??_postponetimeout+0)+0,w
 25702  2F25  022D               	subwf	(postponetimeout@tempLongTicks+2),w
 25703  2F26  1D03               	skipz
 25704  2F27  2F2E               	goto	u6115
 25705  2F28  0828               	movf	1+(??_postponetimeout+0)+0,w
 25706  2F29  022C               	subwf	(postponetimeout@tempLongTicks+1),w
 25707  2F2A  1D03               	skipz
 25708  2F2B  2F2E               	goto	u6115
 25709  2F2C  0827               	movf	0+(??_postponetimeout+0)+0,w
 25710  2F2D  022B               	subwf	(postponetimeout@tempLongTicks),w
 25711  2F2E                     u6115:
 25712  2F2E  1C03               	skipc
 25713  2F2F  2F31               	goto	u6111
 25714  2F30  2F32               	goto	u6110
 25715  2F31                     u6111:
 25716  2F31  2F42               	goto	l21379
 25717  2F32                     u6110:
 25718                           	line	130
 25719                           	
 25720  2F32                     l34261:	
 25721                           ;timer.c: 130: longshort->ms_shortTicks++;
 25722  2F32  082F               	movf	(postponetimeout@longshort),w
 25723  2F33  3E04               	addlw	low(04h)
 25724  2F34  00A7               	movwf	(??_postponetimeout+0)+0
 25725  2F35  3000               	movlw	high(04h)
 25726  2F36  3D30               	addwfc	(postponetimeout@longshort+1),w
 25727  2F37  00A8               	movwf	1+(??_postponetimeout+0)+0
 25728  2F38  0827               	movf	0+(??_postponetimeout+0)+0,w
 25729  2F39  0086               	movwf	fsr1l
 25730  2F3A  0828               	movf	1+(??_postponetimeout+0)+0,w
 25731  2F3B  0087               	movwf	fsr1h
 25732                           
 25733  2F3C  3001               	movlw	01h
 25734  2F3D  0781               	addwf	indf1,f
 25735  2F3E  3141               	addfsr	fsr1,1
 25736  2F3F  1803               	skipnc
 25737  2F40  0A81               	incf	indf1,f
 25738  2F41  2F42               	goto	l21379
 25739                           	
 25740  2F42                     l21380:	
 25741                           	line	131
 25742                           	
 25743  2F42                     l21379:	
 25744  2F42  0008               	return
 25745                           	opt stack 0
 25746                           GLOBAL	__end_of_postponetimeout
 25747  2F43                     	__end_of_postponetimeout:
 25748 ;; =============== function _postponetimeout ends ============
 25749                           
 25750                           	signat	_postponetimeout,8312
 25751                           	global	_set_LED
 25752                           psect	text3374,local,class=CODE,delta=2
 25753                           global __ptext3374
 25754  2D9F                     __ptext3374:
 25755                           
 25756 ;; *************** function _set_LED *****************
 25757 ;; Defined at:
 25758 ;;		line 296 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 25759 ;; Parameters:    Size  Location     Type
 25760 ;;  led             1    wreg     unsigned char 
 25761 ;;  on              1    0[BANK0 ] unsigned char 
 25762 ;; Auto vars:     Size  Location     Type
 25763 ;;  led             1    2[BANK0 ] unsigned char 
 25764 ;;  mask            1    4[BANK0 ] unsigned char 
 25765 ;;  latch           1    3[BANK0 ] PTR volatile unsigned ch
 25766 ;;		 -> LATA(1), LATC(1), 
 25767 ;; Return value:  Size  Location     Type
 25768 ;;		None               void
 25769 ;; Registers used:
 25770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 25771 ;; Tracked objects:
 25772 ;;		On entry : 0/0
 25773 ;;		On exit  : 0/0
 25774 ;;		Unchanged: 0/0
 25775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25776 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25777 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25779 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 25780 ;;Total ram usage:        5 bytes
 25781 ;; Hardware stack levels used:    1
 25782 ;; Hardware stack levels required when called:    2
 25783 ;; This function calls:
 25784 ;;		Nothing
 25785 ;; This function is called by:
 25786 ;;		_update_display
 25787 ;; This function uses a non-reentrant model
 25788 ;;
 25789                           psect	text3374
 25790                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 25791                           	line	296
 25792                           	global	__size_of_set_LED
 25793  004E                     	__size_of_set_LED	equ	__end_of_set_LED-_set_LED
 25794                           	
 25795  2D9F                     _set_LED:	
 25796                           	opt	stack 11
 25797                           ; Regs used in _set_LED: [wreg-status,0]
 25798                           ;set_LED@led stored from wreg
 25799  2D9F  0020               	movlb 0	; select bank0
 25800  2DA0  00A3               	movwf	(set_LED@led)
 25801                           	line	299
 25802                           	
 25803  2DA1                     l34233:	
 25804                           ;catgenie120.c: 297: volatile unsigned char *latch;
 25805                           ;catgenie120.c: 298: unsigned char mask;
 25806                           ;catgenie120.c: 299: switch(led) {
 25807  2DA1  2DC8               	goto	l34245
 25808                           	line	300
 25809                           ;catgenie120.c: 300: case 1:
 25810                           	
 25811  2DA2                     l10910:	
 25812                           	line	301
 25813                           	
 25814  2DA2                     l34235:	
 25815                           ;catgenie120.c: 301: latch = &LATC;
 25816  2DA2  300E               	movlw	(270)&0ffh
 25817  2DA3  00A2               	movwf	(??_set_LED+0)+0
 25818  2DA4  0822               	movf	(??_set_LED+0)+0,w
 25819  2DA5  00A4               	movwf	(set_LED@latch)
 25820                           	line	302
 25821                           ;catgenie120.c: 302: mask = (1U << (5));
 25822  2DA6  3020               	movlw	(020h)
 25823  2DA7  00A2               	movwf	(??_set_LED+0)+0
 25824  2DA8  0822               	movf	(??_set_LED+0)+0,w
 25825  2DA9  00A5               	movwf	(set_LED@mask)
 25826                           	line	303
 25827                           ;catgenie120.c: 303: break;
 25828  2DAA  2DD6               	goto	l34247
 25829                           	line	304
 25830                           ;catgenie120.c: 304: case 2:
 25831                           	
 25832  2DAB                     l10912:	
 25833                           	line	305
 25834                           	
 25835  2DAB                     l34237:	
 25836                           ;catgenie120.c: 305: latch = &LATA;
 25837  2DAB  300C               	movlw	(268)&0ffh
 25838  2DAC  00A2               	movwf	(??_set_LED+0)+0
 25839  2DAD  0822               	movf	(??_set_LED+0)+0,w
 25840  2DAE  00A4               	movwf	(set_LED@latch)
 25841                           	line	306
 25842                           ;catgenie120.c: 306: mask = (1U << (2));
 25843  2DAF  3004               	movlw	(04h)
 25844  2DB0  00A2               	movwf	(??_set_LED+0)+0
 25845  2DB1  0822               	movf	(??_set_LED+0)+0,w
 25846  2DB2  00A5               	movwf	(set_LED@mask)
 25847                           	line	307
 25848                           ;catgenie120.c: 307: break;
 25849  2DB3  2DD6               	goto	l34247
 25850                           	line	308
 25851                           ;catgenie120.c: 308: case 3:
 25852                           	
 25853  2DB4                     l10913:	
 25854                           	line	309
 25855                           	
 25856  2DB4                     l34239:	
 25857                           ;catgenie120.c: 309: latch = &LATA;
 25858  2DB4  300C               	movlw	(268)&0ffh
 25859  2DB5  00A2               	movwf	(??_set_LED+0)+0
 25860  2DB6  0822               	movf	(??_set_LED+0)+0,w
 25861  2DB7  00A4               	movwf	(set_LED@latch)
 25862                           	line	310
 25863                           ;catgenie120.c: 310: mask = (1U << (3));
 25864  2DB8  3008               	movlw	(08h)
 25865  2DB9  00A2               	movwf	(??_set_LED+0)+0
 25866  2DBA  0822               	movf	(??_set_LED+0)+0,w
 25867  2DBB  00A5               	movwf	(set_LED@mask)
 25868                           	line	311
 25869                           ;catgenie120.c: 311: break;
 25870  2DBC  2DD6               	goto	l34247
 25871                           	line	312
 25872                           ;catgenie120.c: 312: case 4:
 25873                           	
 25874  2DBD                     l10914:	
 25875                           	line	313
 25876                           	
 25877  2DBD                     l34241:	
 25878                           ;catgenie120.c: 313: latch = &LATA;
 25879  2DBD  300C               	movlw	(268)&0ffh
 25880  2DBE  00A2               	movwf	(??_set_LED+0)+0
 25881  2DBF  0822               	movf	(??_set_LED+0)+0,w
 25882  2DC0  00A4               	movwf	(set_LED@latch)
 25883                           	line	314
 25884                           ;catgenie120.c: 314: mask = (1U << (5));
 25885  2DC1  3020               	movlw	(020h)
 25886  2DC2  00A2               	movwf	(??_set_LED+0)+0
 25887  2DC3  0822               	movf	(??_set_LED+0)+0,w
 25888  2DC4  00A5               	movwf	(set_LED@mask)
 25889                           	line	315
 25890                           ;catgenie120.c: 315: break;
 25891  2DC5  2DD6               	goto	l34247
 25892                           	line	316
 25893                           ;catgenie120.c: 316: default:
 25894                           	
 25895  2DC6                     l10915:	
 25896                           	line	317
 25897                           ;catgenie120.c: 317: return;
 25898  2DC6  2DEC               	goto	l10916
 25899                           	line	318
 25900                           	
 25901  2DC7                     l34243:	
 25902                           ;catgenie120.c: 318: }
 25903  2DC7  2DD6               	goto	l34247
 25904                           	line	299
 25905                           	
 25906  2DC8                     l10909:	
 25907                           	
 25908  2DC8                     l34245:	
 25909  2DC8  0823               	movf	(set_LED@led),w
 25910                           	; Switch size 1, requested type "space"
 25911                           ; Number of cases is 4, Range of values is 1 to 4
 25912                           ; switch strategies available:
 25913                           ; Name         Instructions Cycles
 25914                           ; simple_byte           13     7 (average)
 25915                           ; direct_byte           17     9 (fixed)
 25916                           ; jumptable            263     9 (fixed)
 25917                           ;	Chosen strategy is simple_byte
 25918                           
 25919                           	opt asmopt_off
 25920  2DC9  3A01               	xorlw	1^0	; case 1
 25921  2DCA  1903               	skipnz
 25922  2DCB  2DA2               	goto	l34235
 25923  2DCC  3A03               	xorlw	2^1	; case 2
 25924  2DCD  1903               	skipnz
 25925  2DCE  2DAB               	goto	l34237
 25926  2DCF  3A01               	xorlw	3^2	; case 3
 25927  2DD0  1903               	skipnz
 25928  2DD1  2DB4               	goto	l34239
 25929  2DD2  3A07               	xorlw	4^3	; case 4
 25930  2DD3  1903               	skipnz
 25931  2DD4  2DBD               	goto	l34241
 25932  2DD5  2DEC               	goto	l10916
 25933                           	opt asmopt_on
 25934                           
 25935                           	line	318
 25936                           	
 25937  2DD6                     l10911:	
 25938                           	line	319
 25939                           	
 25940  2DD6                     l34247:	
 25941                           ;catgenie120.c: 319: if (on)
 25942  2DD6  0821               	movf	(set_LED@on),w
 25943  2DD7  1D03               	skipz
 25944  2DD8  2DDA               	goto	u6090
 25945  2DD9  2DE3               	goto	l34251
 25946  2DDA                     u6090:
 25947                           	line	320
 25948                           	
 25949  2DDA                     l34249:	
 25950                           ;catgenie120.c: 320: *latch |= mask;
 25951  2DDA  0825               	movf	(set_LED@mask),w
 25952  2DDB  00A2               	movwf	(??_set_LED+0)+0
 25953  2DDC  0824               	movf	(set_LED@latch),w
 25954  2DDD  0086               	movwf	fsr1l
 25955  2DDE  3001               	movlw 1	; select bank2/3
 25956  2DDF  0087               	movwf fsr1h	
 25957                           	
 25958  2DE0  0822               	movf	(??_set_LED+0)+0,w
 25959  2DE1  0481               	iorwf	indf1,f
 25960  2DE2  2DEC               	goto	l10916
 25961                           	line	321
 25962                           	
 25963  2DE3                     l10917:	
 25964                           	line	322
 25965                           	
 25966  2DE3                     l34251:	
 25967                           ;catgenie120.c: 321: else
 25968                           ;catgenie120.c: 322: *latch &= ~mask;
 25969  2DE3  0925               	comf	(set_LED@mask),w
 25970  2DE4  00A2               	movwf	(??_set_LED+0)+0
 25971  2DE5  0824               	movf	(set_LED@latch),w
 25972  2DE6  0086               	movwf	fsr1l
 25973  2DE7  3001               	movlw 1	; select bank2/3
 25974  2DE8  0087               	movwf fsr1h	
 25975                           	
 25976  2DE9  0822               	movf	(??_set_LED+0)+0,w
 25977  2DEA  0581               	andwf	indf1,f
 25978  2DEB  2DEC               	goto	l10916
 25979                           	
 25980  2DEC                     l10918:	
 25981                           	line	323
 25982                           	
 25983  2DEC                     l10916:	
 25984  2DEC  0008               	return
 25985                           	opt stack 0
 25986                           GLOBAL	__end_of_set_LED
 25987  2DED                     	__end_of_set_LED:
 25988 ;; =============== function _set_LED ends ============
 25989                           
 25990                           	signat	_set_LED,8312
 25991                           	global	_setup_long
 25992                           psect	text3375,local,class=CODE,delta=2
 25993                           global __ptext3375
 25994  00FF                     __ptext3375:
 25995                           
 25996 ;; *************** function _setup_long *****************
 25997 ;; Defined at:
 25998 ;;		line 559 in file "D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 25999 ;; Parameters:    Size  Location     Type
 26000 ;;		None
 26001 ;; Auto vars:     Size  Location     Type
 26002 ;;		None
 26003 ;; Return value:  Size  Location     Type
 26004 ;;		None               void
 26005 ;; Registers used:
 26006 ;;		None
 26007 ;; Tracked objects:
 26008 ;;		On entry : 0/0
 26009 ;;		On exit  : 0/0
 26010 ;;		Unchanged: 0/0
 26011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26016 ;;Total ram usage:        0 bytes
 26017 ;; Hardware stack levels used:    1
 26018 ;; Hardware stack levels required when called:    2
 26019 ;; This function calls:
 26020 ;;		Nothing
 26021 ;; This function is called by:
 26022 ;;		_userinterface_work
 26023 ;; This function uses a non-reentrant model
 26024 ;;
 26025                           psect	text3375
 26026                           	file	"D:\git\gibby\catgenius\software\catgenius\userinterface.c"
 26027                           	line	559
 26028                           	global	__size_of_setup_long
 26029  0001                     	__size_of_setup_long	equ	__end_of_setup_long-_setup_long
 26030                           	
 26031  00FF                     _setup_long:	
 26032                           	opt	stack 12
 26033                           ; Regs used in _setup_long: []
 26034                           	line	560
 26035                           	
 26036  00FF                     l8802:	
 26037  00FF  0008               	return
 26038                           	opt stack 0
 26039                           GLOBAL	__end_of_setup_long
 26040  0100                     	__end_of_setup_long:
 26041 ;; =============== function _setup_long ends ============
 26042                           
 26043                           	signat	_setup_long,88
 26044                           	global	_timeoutnow
 26045                           psect	text3376,local,class=CODE,delta=2
 26046                           global __ptext3376
 26047  297E                     __ptext3376:
 26048                           
 26049 ;; *************** function _timeoutnow *****************
 26050 ;; Defined at:
 26051 ;;		line 142 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26052 ;; Parameters:    Size  Location     Type
 26053 ;;  timer_p         2    4[BANK0 ] const PTR struct timer
 26054 ;;		 -> pacers(60), cattimer(6), 
 26055 ;; Auto vars:     Size  Location     Type
 26056 ;;		None
 26057 ;; Return value:  Size  Location     Type
 26058 ;;		None               void
 26059 ;; Registers used:
 26060 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26061 ;; Tracked objects:
 26062 ;;		On entry : 0/0
 26063 ;;		On exit  : 0/0
 26064 ;;		Unchanged: 0/0
 26065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26069 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26070 ;;Total ram usage:        4 bytes
 26071 ;; Hardware stack levels used:    1
 26072 ;; Hardware stack levels required when called:    2
 26073 ;; This function calls:
 26074 ;;		Nothing
 26075 ;; This function is called by:
 26076 ;;		_userinterface_work
 26077 ;;		_set_mode
 26078 ;;		_set_pacer
 26079 ;; This function uses a non-reentrant model
 26080 ;;
 26081                           psect	text3376
 26082                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26083                           	line	142
 26084                           	global	__size_of_timeoutnow
 26085  001C                     	__size_of_timeoutnow	equ	__end_of_timeoutnow-_timeoutnow
 26086                           	
 26087  297E                     _timeoutnow:	
 26088                           	opt	stack 8
 26089                           ; Regs used in _timeoutnow: [wreg+fsr1l-status,0]
 26090                           	line	143
 26091                           	
 26092  297E                     l36961:	
 26093                           ;timer.c: 143: timer_p->timer1 = 0x0000;
 26094  297E  0020               	movlb 0	; select bank0
 26095  297F  0825               	movf	(timeoutnow@timer_p),w
 26096  2980  0086               	movwf	fsr1l
 26097  2981  0826               	movf	(timeoutnow@timer_p+1),w
 26098  2982  0087               	movwf	fsr1h
 26099                           
 26100  2983  3000               	movlw	low(0)
 26101  2984  3FC0               	movwi	[0]fsr1
 26102  2985  3000               	movlw	high(0)
 26103  2986  3FC1               	movwi	[1]fsr1
 26104                           	line	144
 26105                           	
 26106  2987                     l36963:	
 26107                           ;timer.c: 144: timer_p->overflows = 0x00000000;
 26108  2987  0825               	movf	(timeoutnow@timer_p),w
 26109  2988  3E02               	addlw	low(02h)
 26110  2989  00A7               	movwf	(??_timeoutnow+0)+0
 26111  298A  3000               	movlw	high(02h)
 26112  298B  3D26               	addwfc	(timeoutnow@timer_p+1),w
 26113  298C  00A8               	movwf	1+(??_timeoutnow+0)+0
 26114  298D  0827               	movf	0+(??_timeoutnow+0)+0,w
 26115  298E  0086               	movwf	fsr1l
 26116  298F  0828               	movf	1+(??_timeoutnow+0)+0,w
 26117  2990  0087               	movwf	fsr1h
 26118                           
 26119  2991  3000               	movlw	0
 26120  2992  3FC0               	movwi	[0]fsr1
 26121  2993  3000               	movlw	0
 26122  2994  3FC1               	movwi	[1]fsr1
 26123  2995  3000               	movlw	0
 26124  2996  3FC2               	movwi	[2]fsr1
 26125  2997  3000               	movlw	0
 26126  2998  3FC3               	movwi	[3]fsr1
 26127                           	line	145
 26128                           	
 26129  2999                     l21383:	
 26130  2999  0008               	return
 26131                           	opt stack 0
 26132                           GLOBAL	__end_of_timeoutnow
 26133  299A                     	__end_of_timeoutnow:
 26134 ;; =============== function _timeoutnow ends ============
 26135                           
 26136                           	signat	_timeoutnow,4216
 26137                           	global	_memcpy
 26138                           psect	text3377,local,class=CODE,delta=2
 26139                           global __ptext3377
 26140  2B6A                     __ptext3377:
 26141                           
 26142 ;; *************** function _memcpy *****************
 26143 ;; Defined at:
 26144 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
 26145 ;; Parameters:    Size  Location     Type
 26146 ;;  d1              1    wreg     PTR void 
 26147 ;;		 -> ins_pointer(2), 
 26148 ;;  s1              1    0[BANK0 ] PTR const void 
 26149 ;;		 -> exe_instruction@temp(2), 
 26150 ;;  n               2    1[BANK0 ] unsigned int 
 26151 ;; Auto vars:     Size  Location     Type
 26152 ;;  d1              1    4[BANK0 ] PTR void 
 26153 ;;		 -> ins_pointer(2), 
 26154 ;;  s               1    6[BANK0 ] PTR const unsigned char 
 26155 ;;		 -> exe_instruction@temp(2), 
 26156 ;;  d               1    5[BANK0 ] PTR unsigned char 
 26157 ;;		 -> ins_pointer(2), 
 26158 ;; Return value:  Size  Location     Type
 26159 ;;                  1    wreg      PTR void 
 26160 ;; Registers used:
 26161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26162 ;; Tracked objects:
 26163 ;;		On entry : 0/0
 26164 ;;		On exit  : 0/0
 26165 ;;		Unchanged: 0/0
 26166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26167 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26168 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26170 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 26171 ;;Total ram usage:        7 bytes
 26172 ;; Hardware stack levels used:    1
 26173 ;; Hardware stack levels required when called:    2
 26174 ;; This function calls:
 26175 ;;		Nothing
 26176 ;; This function is called by:
 26177 ;;		_exe_instruction
 26178 ;; This function uses a non-reentrant model
 26179 ;;
 26180                           psect	text3377
 26181                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
 26182                           	line	10
 26183                           	global	__size_of_memcpy
 26184  002E                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
 26185                           	
 26186  2B6A                     _memcpy:	
 26187                           	opt	stack 11
 26188                           ; Regs used in _memcpy: [wreg+fsr1l-status,0]
 26189                           ;memcpy@d1 stored from wreg
 26190                           	line	19
 26191  2B6A  0020               	movlb 0	; select bank0
 26192  2B6B  00A5               	movwf	(memcpy@d1)
 26193                           	
 26194  2B6C                     l36951:	
 26195  2B6C  0821               	movf	(memcpy@s1),w
 26196  2B6D  00A4               	movwf	(??_memcpy+0)+0
 26197  2B6E  0824               	movf	(??_memcpy+0)+0,w
 26198  2B6F  00A7               	movwf	(memcpy@s)
 26199                           	line	20
 26200  2B70  0825               	movf	(memcpy@d1),w
 26201  2B71  00A4               	movwf	(??_memcpy+0)+0
 26202  2B72  0824               	movf	(??_memcpy+0)+0,w
 26203  2B73  00A6               	movwf	(memcpy@d)
 26204                           	line	21
 26205  2B74  2B88               	goto	l36959
 26206                           	
 26207  2B75                     l29077:	
 26208                           	line	22
 26209                           	
 26210  2B75                     l36953:	
 26211  2B75  0827               	movf	(memcpy@s),w
 26212  2B76  0086               	movwf	fsr1l
 26213  2B77  0187               	clrf fsr1h	
 26214                           	
 26215  2B78  0801               	movf	indf1,w
 26216  2B79  00A4               	movwf	(??_memcpy+0)+0
 26217  2B7A  0826               	movf	(memcpy@d),w
 26218  2B7B  0086               	movwf	fsr1l
 26219  2B7C  0187               	clrf fsr1h	
 26220                           	
 26221  2B7D  0824               	movf	(??_memcpy+0)+0,w
 26222  2B7E  0081               	movwf	indf1
 26223                           	
 26224  2B7F                     l36955:	
 26225  2B7F  3001               	movlw	(01h)
 26226  2B80  00A4               	movwf	(??_memcpy+0)+0
 26227  2B81  0824               	movf	(??_memcpy+0)+0,w
 26228  2B82  07A7               	addwf	(memcpy@s),f
 26229                           	
 26230  2B83                     l36957:	
 26231  2B83  3001               	movlw	(01h)
 26232  2B84  00A4               	movwf	(??_memcpy+0)+0
 26233  2B85  0824               	movf	(??_memcpy+0)+0,w
 26234  2B86  07A6               	addwf	(memcpy@d),f
 26235  2B87  2B88               	goto	l36959
 26236                           	
 26237  2B88                     l29076:	
 26238                           	line	21
 26239                           	
 26240  2B88                     l36959:	
 26241  2B88  3001               	movlw	low(01h)
 26242  2B89  02A2               	subwf	(memcpy@n),f
 26243  2B8A  3000               	movlw	high(01h)
 26244  2B8B  3BA3               	subwfb	(memcpy@n+1),f
 26245  2B8C  30FF               	movlw	high(0FFFFh)
 26246  2B8D  0623               	xorwf	((memcpy@n+1)),w
 26247  2B8E  1D03               	skipz
 26248  2B8F  2B92               	goto	u9765
 26249  2B90  30FF               	movlw	low(0FFFFh)
 26250  2B91  0622               	xorwf	((memcpy@n)),w
 26251  2B92                     u9765:
 26252                           
 26253  2B92  1D03               	skipz
 26254  2B93  2B95               	goto	u9761
 26255  2B94  2B96               	goto	u9760
 26256  2B95                     u9761:
 26257  2B95  2B75               	goto	l36953
 26258  2B96                     u9760:
 26259  2B96  2B97               	goto	l29079
 26260                           	
 26261  2B97                     l29078:	
 26262                           	line	24
 26263                           ;	Return value of _memcpy is never used
 26264                           	
 26265  2B97                     l29079:	
 26266  2B97  0008               	return
 26267                           	opt stack 0
 26268                           GLOBAL	__end_of_memcpy
 26269  2B98                     	__end_of_memcpy:
 26270 ;; =============== function _memcpy ends ============
 26271                           
 26272                           	signat	_memcpy,12409
 26273                           	global	_romwashprogram_getins
 26274                           psect	text3378,local,class=CODE,delta=2
 26275                           global __ptext3378
 26276  28F8                     __ptext3378:
 26277                           
 26278 ;; *************** function _romwashprogram_getins *****************
 26279 ;; Defined at:
 26280 ;;		line 340 in file "D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 26281 ;; Parameters:    Size  Location     Type
 26282 ;;  instruction     1    wreg     const PTR struct instruc
 26283 ;;		 -> cur_instruction(3), 
 26284 ;; Auto vars:     Size  Location     Type
 26285 ;;  instruction     1    3[BANK0 ] const PTR struct instruc
 26286 ;;		 -> cur_instruction(3), 
 26287 ;; Return value:  Size  Location     Type
 26288 ;;                  1    wreg      unsigned char 
 26289 ;; Registers used:
 26290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 26291 ;; Tracked objects:
 26292 ;;		On entry : 0/0
 26293 ;;		On exit  : 0/0
 26294 ;;		Unchanged: 0/0
 26295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26298 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26299 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26300 ;;Total ram usage:        4 bytes
 26301 ;; Hardware stack levels used:    1
 26302 ;; Hardware stack levels required when called:    2
 26303 ;; This function calls:
 26304 ;;		Nothing
 26305 ;; This function is called by:
 26306 ;;		_get_instruction
 26307 ;; This function uses a non-reentrant model
 26308 ;;
 26309                           psect	text3378
 26310                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 26311                           	line	340
 26312                           	global	__size_of_romwashprogram_getins
 26313  001A                     	__size_of_romwashprogram_getins	equ	__end_of_romwashprogram_getins-_romwashprogram_geti
                                 ns
 26314                           	
 26315  28F8                     _romwashprogram_getins:	
 26316                           	opt	stack 11
 26317                           ; Regs used in _romwashprogram_getins: [wreg-status,0+pclath]
 26318                           ;romwashprogram_getins@instruction stored from wreg
 26319  28F8  0020               	movlb 0	; select bank0
 26320  28F9  00A4               	movwf	(romwashprogram_getins@instruction)
 26321                           	line	341
 26322                           	
 26323  28FA                     l36945:	
 26324                           ;romwashprogram.c: 341: *instruction = *ins_address;
 26325  28FA  0021               	movlb 1	; select bank1
 26326  28FB  084E               	movf	(_ins_address)^080h,w
 26327  28FC  0084               	movwf	fsr0l
 26328  28FD  084F               	movf	((_ins_address+1)^080h),w
 26329  28FE  0085               	movwf	fsr0h
 26330  28FF  3F00               	moviw	[0]fsr0
 26331  2900  0020               	movlb 0	; select bank0
 26332  2901  00A1               	movwf	((??_romwashprogram_getins+0)+0)
 26333  2902  3F01               	moviw	[1]fsr0
 26334  2903  00A2               	movwf	((??_romwashprogram_getins+0)+0+1)
 26335  2904  3F02               	moviw	[2]fsr0
 26336  2905  00A3               	movwf	((??_romwashprogram_getins+0)+0+2)
 26337  2906  0824               	movf	(romwashprogram_getins@instruction),w
 26338  2907  0086               	movwf	fsr1l
 26339  2908  0187               	clrf fsr1h	
 26340                           	
 26341  2909  0821               	movf	0+(??_romwashprogram_getins+0)+0,w
 26342  290A  3FC0               	movwi	[0]fsr1
 26343  290B  0822               	movf	1+(??_romwashprogram_getins+0)+0,w
 26344  290C  3FC1               	movwi	[1]fsr1
 26345  290D  0823               	movf	2+(??_romwashprogram_getins+0)+0,w
 26346  290E  3FC2               	movwi	[2]fsr1
 26347                           	line	343
 26348                           	
 26349  290F                     l36947:	
 26350                           ;romwashprogram.c: 343: return 1;
 26351  290F  3001               	movlw	(01h)
 26352  2910  2911               	goto	l6514
 26353                           	
 26354  2911                     l36949:	
 26355                           	line	344
 26356                           	
 26357  2911                     l6514:	
 26358  2911  0008               	return
 26359                           	opt stack 0
 26360                           GLOBAL	__end_of_romwashprogram_getins
 26361  2912                     	__end_of_romwashprogram_getins:
 26362 ;; =============== function _romwashprogram_getins ends ============
 26363                           
 26364                           	signat	_romwashprogram_getins,4217
 26365                           	global	_romwashprogram_reqins
 26366                           psect	text3379,local,class=CODE,delta=2
 26367                           global __ptext3379
 26368  2832                     __ptext3379:
 26369                           
 26370 ;; *************** function _romwashprogram_reqins *****************
 26371 ;; Defined at:
 26372 ;;		line 335 in file "D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 26373 ;; Parameters:    Size  Location     Type
 26374 ;;  address         2    0[BANK0 ] PTR const struct instruc
 26375 ;;		 -> cleanupprogram(36), washprogram(303), cur_instruction(3), ROM(16384), 
 26376 ;; Auto vars:     Size  Location     Type
 26377 ;;		None
 26378 ;; Return value:  Size  Location     Type
 26379 ;;		None               void
 26380 ;; Registers used:
 26381 ;;		wreg, status,2, status,0
 26382 ;; Tracked objects:
 26383 ;;		On entry : 0/0
 26384 ;;		On exit  : 0/0
 26385 ;;		Unchanged: 0/0
 26386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26390 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26391 ;;Total ram usage:        2 bytes
 26392 ;; Hardware stack levels used:    1
 26393 ;; Hardware stack levels required when called:    2
 26394 ;; This function calls:
 26395 ;;		Nothing
 26396 ;; This function is called by:
 26397 ;;		_req_instruction
 26398 ;; This function uses a non-reentrant model
 26399 ;;
 26400                           psect	text3379
 26401                           	file	"D:\git\gibby\catgenius\software\catgenius\romwashprogram.c"
 26402                           	line	335
 26403                           	global	__size_of_romwashprogram_reqins
 26404  000B                     	__size_of_romwashprogram_reqins	equ	__end_of_romwashprogram_reqins-_romwashprogram_reqi
                                 ns
 26405                           	
 26406  2832                     _romwashprogram_reqins:	
 26407                           	opt	stack 11
 26408                           ; Regs used in _romwashprogram_reqins: [wreg+status,2+status,0]
 26409                           	line	336
 26410                           	
 26411  2832                     l36943:	
 26412                           ;romwashprogram.c: 336: ins_address = address;
 26413  2832  0020               	movlb 0	; select bank0
 26414  2833  0822               	movf	(romwashprogram_reqins@address+1),w
 26415  2834  0021               	movlb 1	; select bank1
 26416  2835  01CF               	clrf	(_ins_address+1)^080h
 26417  2836  07CF               	addwf	(_ins_address+1)^080h
 26418  2837  0020               	movlb 0	; select bank0
 26419  2838  0821               	movf	(romwashprogram_reqins@address),w
 26420  2839  0021               	movlb 1	; select bank1
 26421  283A  01CE               	clrf	(_ins_address)^080h
 26422  283B  07CE               	addwf	(_ins_address)^080h
 26423                           
 26424                           	line	337
 26425                           	
 26426  283C                     l6511:	
 26427  283C  0008               	return
 26428                           	opt stack 0
 26429                           GLOBAL	__end_of_romwashprogram_reqins
 26430  283D                     	__end_of_romwashprogram_reqins:
 26431 ;; =============== function _romwashprogram_reqins ends ============
 26432                           
 26433                           	signat	_romwashprogram_reqins,4216
 26434                           	global	_watersensor_event
 26435                           psect	text3380,local,class=CODE,delta=2
 26436                           global __ptext3380
 26437  1002                     __ptext3380:
 26438                           
 26439 ;; *************** function _watersensor_event *****************
 26440 ;; Defined at:
 26441 ;;		line 423 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 26442 ;; Parameters:    Size  Location     Type
 26443 ;;  reflectionqu    2    0[BANK0 ] unsigned int 
 26444 ;; Auto vars:     Size  Location     Type
 26445 ;;		None
 26446 ;; Return value:  Size  Location     Type
 26447 ;;		None               void
 26448 ;; Registers used:
 26449 ;;		None
 26450 ;; Tracked objects:
 26451 ;;		On entry : 0/0
 26452 ;;		On exit  : 0/0
 26453 ;;		Unchanged: 0/0
 26454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26458 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26459 ;;Total ram usage:        2 bytes
 26460 ;; Hardware stack levels used:    1
 26461 ;; Hardware stack levels required when called:    2
 26462 ;; This function calls:
 26463 ;;		Nothing
 26464 ;; This function is called by:
 26465 ;;		_water_work
 26466 ;; This function uses a non-reentrant model
 26467 ;;
 26468                           psect	text3380
 26469                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 26470                           	line	423
 26471                           	global	__size_of_watersensor_event
 26472  0001                     	__size_of_watersensor_event	equ	__end_of_watersensor_event-_watersensor_event
 26473                           	
 26474  1002                     _watersensor_event:	
 26475                           	opt	stack 12
 26476                           ; Regs used in _watersensor_event: []
 26477                           	line	424
 26478                           	
 26479  1002                     l4325:	
 26480  1002  0008               	return
 26481                           	opt stack 0
 26482                           GLOBAL	__end_of_watersensor_event
 26483  1003                     	__end_of_watersensor_event:
 26484 ;; =============== function _watersensor_event ends ============
 26485                           
 26486                           	signat	_watersensor_event,4216
 26487                           	global	_litterlanguage_paused
 26488                           psect	text3381,local,class=CODE,delta=2
 26489                           global __ptext3381
 26490  3706                     __ptext3381:
 26491                           
 26492 ;; *************** function _litterlanguage_paused *****************
 26493 ;; Defined at:
 26494 ;;		line 341 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 26495 ;; Parameters:    Size  Location     Type
 26496 ;;		None
 26497 ;; Auto vars:     Size  Location     Type
 26498 ;;		None
 26499 ;; Return value:  Size  Location     Type
 26500 ;;                  1    wreg      unsigned char 
 26501 ;; Registers used:
 26502 ;;		wreg
 26503 ;; Tracked objects:
 26504 ;;		On entry : 0/0
 26505 ;;		On exit  : 0/0
 26506 ;;		Unchanged: 0/0
 26507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26512 ;;Total ram usage:        0 bytes
 26513 ;; Hardware stack levels used:    1
 26514 ;; Hardware stack levels required when called:    2
 26515 ;; This function calls:
 26516 ;;		Nothing
 26517 ;; This function is called by:
 26518 ;;		_start_short
 26519 ;; This function uses a non-reentrant model
 26520 ;;
 26521                           psect	text3381
 26522                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 26523                           	line	341
 26524                           	global	__size_of_litterlanguage_paused
 26525  0005                     	__size_of_litterlanguage_paused	equ	__end_of_litterlanguage_paused-_litterlanguage_paus
                                 ed
 26526                           	
 26527  3706                     _litterlanguage_paused:	
 26528                           	opt	stack 11
 26529                           ; Regs used in _litterlanguage_paused: [wreg]
 26530                           	line	342
 26531                           	
 26532  3706                     l34207:	
 26533                           ;litterlanguage.c: 342: return (paused);
 26534  3706  3000               	movlw	0
 26535  3707  1AF1               	btfsc	(_paused/8),(_paused)&7
 26536  3708  3001               	movlw	1
 26537  3709  2F0A               	goto	l4304
 26538                           	
 26539  370A                     l34209:	
 26540                           	line	343
 26541                           	
 26542  370A                     l4304:	
 26543  370A  0008               	return
 26544                           	opt stack 0
 26545                           GLOBAL	__end_of_litterlanguage_paused
 26546  370B                     	__end_of_litterlanguage_paused:
 26547 ;; =============== function _litterlanguage_paused ends ============
 26548                           
 26549                           	signat	_litterlanguage_paused,89
 26550                           	global	_timestampdiff
 26551                           psect	text3382,local,class=CODE,delta=2
 26552                           global __ptext3382
 26553  1BF4                     __ptext3382:
 26554                           
 26555 ;; *************** function _timestampdiff *****************
 26556 ;; Defined at:
 26557 ;;		line 246 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26558 ;; Parameters:    Size  Location     Type
 26559 ;;  early_p         2    0[BANK0 ] const PTR const struct t
 26560 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26561 ;;  late_p          1    2[BANK0 ] const PTR const struct t
 26562 ;;		 -> litterlanguage_pause@timer_now(6), 
 26563 ;; Auto vars:     Size  Location     Type
 26564 ;;  diff            4   12[BANK0 ] unsigned long 
 26565 ;;  early_longsh    2   16[BANK0 ] PTR struct longshort
 26566 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 26567 ;;  late_longsho    1   18[BANK0 ] PTR struct longshort
 26568 ;;		 -> litterlanguage_pause@timer_now(6), 
 26569 ;; Return value:  Size  Location     Type
 26570 ;;                  4    0[BANK0 ] unsigned long 
 26571 ;; Registers used:
 26572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 26573 ;; Tracked objects:
 26574 ;;		On entry : 0/0
 26575 ;;		On exit  : 0/0
 26576 ;;		Unchanged: 0/0
 26577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26579 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 26580 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 26581 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
       0       0
 26582 ;;Total ram usage:       19 bytes
 26583 ;; Hardware stack levels used:    1
 26584 ;; Hardware stack levels required when called:    2
 26585 ;; This function calls:
 26586 ;;		Nothing
 26587 ;; This function is called by:
 26588 ;;		_litterlanguage_pause
 26589 ;; This function uses a non-reentrant model
 26590 ;;
 26591                           psect	text3382
 26592                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 26593                           	line	246
 26594                           	global	__size_of_timestampdiff
 26595  013E                     	__size_of_timestampdiff	equ	__end_of_timestampdiff-_timestampdiff
 26596                           	
 26597  1BF4                     _timestampdiff:	
 26598                           	opt	stack 9
 26599                           ; Regs used in _timestampdiff: [wreg-status,0]
 26600                           	line	247
 26601                           	
 26602  1BF4                     l36909:	
 26603                           ;timer.c: 247: unsigned long diff = 0;
 26604  1BF4  3000               	movlw	0
 26605  1BF5  0020               	movlb 0	; select bank0
 26606  1BF6  00B0               	movwf	(timestampdiff@diff+3)
 26607  1BF7  3000               	movlw	0
 26608  1BF8  00AF               	movwf	(timestampdiff@diff+2)
 26609  1BF9  3000               	movlw	0
 26610  1BFA  00AE               	movwf	(timestampdiff@diff+1)
 26611  1BFB  3000               	movlw	0
 26612  1BFC  00AD               	movwf	(timestampdiff@diff)
 26613                           
 26614                           	line	248
 26615                           	
 26616  1BFD                     l36911:	
 26617                           ;timer.c: 248: struct longshort *early_longshort = (struct longshort*)early_p;
 26618  1BFD  0822               	movf	(timestampdiff@early_p+1),w
 26619  1BFE  01B2               	clrf	(timestampdiff@early_longshort+1)
 26620  1BFF  07B2               	addwf	(timestampdiff@early_longshort+1)
 26621  1C00  0821               	movf	(timestampdiff@early_p),w
 26622  1C01  01B1               	clrf	(timestampdiff@early_longshort)
 26623  1C02  07B1               	addwf	(timestampdiff@early_longshort)
 26624                           
 26625                           	line	249
 26626                           	
 26627  1C03                     l36913:	
 26628                           ;timer.c: 249: struct longshort *late_longshort = (struct longshort*)late_p;
 26629  1C03  0823               	movf	(timestampdiff@late_p),w
 26630  1C04  00A5               	movwf	(??_timestampdiff+0)+0
 26631  1C05  0825               	movf	(??_timestampdiff+0)+0,w
 26632  1C06  00B3               	movwf	(timestampdiff@late_longshort)
 26633                           	line	252
 26634                           	
 26635  1C07                     l36915:	
 26636                           ;timer.c: 252: if (early_longshort->ms_shortTicks >= late_longshort->ms_shortTicks) {
 26637  1C07  0833               	movf	(timestampdiff@late_longshort),w
 26638  1C08  3E04               	addlw	04h
 26639  1C09  0086               	movwf	fsr1l
 26640  1C0A  0187               	clrf fsr1h	
 26641                           	
 26642  1C0B  3F40               	moviw	[0]fsr1
 26643  1C0C  00A5               	movwf	(??_timestampdiff+0)+0
 26644  1C0D  3F41               	moviw	[1]fsr1
 26645  1C0E  00A6               	movwf	(??_timestampdiff+0)+0+1
 26646  1C0F  0831               	movf	(timestampdiff@early_longshort),w
 26647  1C10  3E04               	addlw	low(04h)
 26648  1C11  00A7               	movwf	(??_timestampdiff+2)+0
 26649  1C12  3000               	movlw	high(04h)
 26650  1C13  3D32               	addwfc	(timestampdiff@early_longshort+1),w
 26651  1C14  00A8               	movwf	1+(??_timestampdiff+2)+0
 26652  1C15  0827               	movf	0+(??_timestampdiff+2)+0,w
 26653  1C16  0086               	movwf	fsr1l
 26654  1C17  0828               	movf	1+(??_timestampdiff+2)+0,w
 26655  1C18  0087               	movwf	fsr1h
 26656                           
 26657  1C19  3F40               	moviw	[0]fsr1
 26658  1C1A  00A9               	movwf	(??_timestampdiff+4)+0
 26659  1C1B  3F41               	moviw	[1]fsr1
 26660  1C1C  00AA               	movwf	(??_timestampdiff+4)+0+1
 26661  1C1D  0826               	movf	1+(??_timestampdiff+0)+0,w
 26662  1C1E  022A               	subwf	1+(??_timestampdiff+4)+0,w
 26663  1C1F  1D03               	skipz
 26664  1C20  2C23               	goto	u9735
 26665  1C21  0825               	movf	0+(??_timestampdiff+0)+0,w
 26666  1C22  0229               	subwf	0+(??_timestampdiff+4)+0,w
 26667  1C23                     u9735:
 26668  1C23  1C03               	skipc
 26669  1C24  2C26               	goto	u9731
 26670  1C25  2C27               	goto	u9730
 26671  1C26                     u9731:
 26672  1C26  2D28               	goto	l36935
 26673  1C27                     u9730:
 26674  1C27  2CFD               	goto	l36933
 26675                           	line	253
 26676                           	
 26677  1C28                     l36917:	
 26678                           ;timer.c: 253: switch (early_longshort->ms_shortTicks - late_longshort->ms_shortTicks) {
 26679  1C28  2CFD               	goto	l36933
 26680                           	line	254
 26681                           ;timer.c: 254: case 0:
 26682                           	
 26683  1C29                     l21410:	
 26684                           	line	255
 26685                           	
 26686  1C29                     l36919:	
 26687                           ;timer.c: 255: if (early_longshort->ls_longTicks > late_longshort->ls_longTicks) {
 26688  1C29  0831               	movf	(timestampdiff@early_longshort),w
 26689  1C2A  0086               	movwf	fsr1l
 26690  1C2B  0832               	movf	(timestampdiff@early_longshort+1),w
 26691  1C2C  0087               	movwf	fsr1h
 26692                           
 26693  1C2D  3F40               	moviw	[0]fsr1
 26694  1C2E  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26695  1C2F  3F41               	moviw	[1]fsr1
 26696  1C30  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26697  1C31  3F42               	moviw	[2]fsr1
 26698  1C32  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26699  1C33  3F43               	moviw	[3]fsr1
 26700  1C34  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26701  1C35  0833               	movf	(timestampdiff@late_longshort),w
 26702  1C36  0086               	movwf	fsr1l
 26703  1C37  0187               	clrf fsr1h	
 26704                           	
 26705  1C38  3F40               	moviw	[0]fsr1
 26706  1C39  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26707  1C3A  3F41               	moviw	[1]fsr1
 26708  1C3B  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26709  1C3C  3F42               	moviw	[2]fsr1
 26710  1C3D  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26711  1C3E  3F43               	moviw	[3]fsr1
 26712  1C3F  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26713  1C40  0828               	movf	3+(??_timestampdiff+0)+0,w
 26714  1C41  022C               	subwf	3+(??_timestampdiff+4)+0,w
 26715  1C42  1D03               	skipz
 26716  1C43  2C4E               	goto	u9745
 26717  1C44  0827               	movf	2+(??_timestampdiff+0)+0,w
 26718  1C45  022B               	subwf	2+(??_timestampdiff+4)+0,w
 26719  1C46  1D03               	skipz
 26720  1C47  2C4E               	goto	u9745
 26721  1C48  0826               	movf	1+(??_timestampdiff+0)+0,w
 26722  1C49  022A               	subwf	1+(??_timestampdiff+4)+0,w
 26723  1C4A  1D03               	skipz
 26724  1C4B  2C4E               	goto	u9745
 26725  1C4C  0825               	movf	0+(??_timestampdiff+0)+0,w
 26726  1C4D  0229               	subwf	0+(??_timestampdiff+4)+0,w
 26727  1C4E                     u9745:
 26728  1C4E  1803               	skipnc
 26729  1C4F  2C51               	goto	u9741
 26730  1C50  2C52               	goto	u9740
 26731  1C51                     u9741:
 26732  1C51  2D28               	goto	l36935
 26733  1C52                     u9740:
 26734                           	line	257
 26735                           	
 26736  1C52                     l36921:	
 26737                           ;timer.c: 257: diff = early_longshort->ls_longTicks - late_longshort->ls_longTicks;
 26738  1C52  0831               	movf	(timestampdiff@early_longshort),w
 26739  1C53  0086               	movwf	fsr1l
 26740  1C54  0832               	movf	(timestampdiff@early_longshort+1),w
 26741  1C55  0087               	movwf	fsr1h
 26742                           
 26743  1C56  3F40               	moviw	[0]fsr1
 26744  1C57  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26745  1C58  3F41               	moviw	[1]fsr1
 26746  1C59  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26747  1C5A  3F42               	moviw	[2]fsr1
 26748  1C5B  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26749  1C5C  3F43               	moviw	[3]fsr1
 26750  1C5D  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26751  1C5E  0833               	movf	(timestampdiff@late_longshort),w
 26752  1C5F  0086               	movwf	fsr1l
 26753  1C60  0187               	clrf fsr1h	
 26754                           	
 26755  1C61  3F40               	moviw	[0]fsr1
 26756  1C62  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26757  1C63  3F41               	moviw	[1]fsr1
 26758  1C64  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26759  1C65  3F42               	moviw	[2]fsr1
 26760  1C66  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26761  1C67  3F43               	moviw	[3]fsr1
 26762  1C68  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26763  1C69  09A9               	comf	(??_timestampdiff+4)+0,f
 26764  1C6A  09AA               	comf	(??_timestampdiff+4)+1,f
 26765  1C6B  09AB               	comf	(??_timestampdiff+4)+2,f
 26766  1C6C  09AC               	comf	(??_timestampdiff+4)+3,f
 26767  1C6D  0AA9               	incf	(??_timestampdiff+4)+0,f
 26768  1C6E  1903               	skipnz
 26769  1C6F  0AAA               	incf	(??_timestampdiff+4)+1,f
 26770  1C70  1903               	skipnz
 26771  1C71  0AAB               	incf	(??_timestampdiff+4)+2,f
 26772  1C72  1903               	skipnz
 26773  1C73  0AAC               	incf	(??_timestampdiff+4)+3,f
 26774  1C74  0829               	movf	0+(??_timestampdiff+4)+0,w
 26775  1C75  07A5               	addwf	(??_timestampdiff+0)+0,f
 26776  1C76  082A               	movf	1+(??_timestampdiff+4)+0,w
 26777  1C77  3DA6               	addwfc	(??_timestampdiff+0)+1,f
 26778  1C78  082B               	movf	2+(??_timestampdiff+4)+0,w
 26779  1C79  3DA7               	addwfc	(??_timestampdiff+0)+2,f
 26780  1C7A  082C               	movf	3+(??_timestampdiff+4)+0,w
 26781  1C7B  3DA8               	addwfc	(??_timestampdiff+0)+3,f
 26782  1C7C  0828               	movf	3+(??_timestampdiff+0)+0,w
 26783  1C7D  00B0               	movwf	(timestampdiff@diff+3)
 26784  1C7E  0827               	movf	2+(??_timestampdiff+0)+0,w
 26785  1C7F  00AF               	movwf	(timestampdiff@diff+2)
 26786  1C80  0826               	movf	1+(??_timestampdiff+0)+0,w
 26787  1C81  00AE               	movwf	(timestampdiff@diff+1)
 26788  1C82  0825               	movf	0+(??_timestampdiff+0)+0,w
 26789  1C83  00AD               	movwf	(timestampdiff@diff)
 26790                           
 26791  1C84  2D28               	goto	l36935
 26792                           	line	258
 26793                           	
 26794  1C85                     l21411:	
 26795                           	line	259
 26796                           ;timer.c: 258: }
 26797                           ;timer.c: 259: break;
 26798  1C85  2D28               	goto	l36935
 26799                           	line	261
 26800                           ;timer.c: 261: case 1:
 26801                           	
 26802  1C86                     l21413:	
 26803                           	line	262
 26804                           	
 26805  1C86                     l36923:	
 26806                           ;timer.c: 262: if (early_longshort->ls_longTicks < late_longshort->ls_longTicks) {
 26807  1C86  0833               	movf	(timestampdiff@late_longshort),w
 26808  1C87  0086               	movwf	fsr1l
 26809  1C88  0187               	clrf fsr1h	
 26810                           	
 26811  1C89  3F40               	moviw	[0]fsr1
 26812  1C8A  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26813  1C8B  3F41               	moviw	[1]fsr1
 26814  1C8C  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26815  1C8D  3F42               	moviw	[2]fsr1
 26816  1C8E  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26817  1C8F  3F43               	moviw	[3]fsr1
 26818  1C90  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26819  1C91  0831               	movf	(timestampdiff@early_longshort),w
 26820  1C92  0086               	movwf	fsr1l
 26821  1C93  0832               	movf	(timestampdiff@early_longshort+1),w
 26822  1C94  0087               	movwf	fsr1h
 26823                           
 26824  1C95  3F40               	moviw	[0]fsr1
 26825  1C96  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26826  1C97  3F41               	moviw	[1]fsr1
 26827  1C98  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26828  1C99  3F42               	moviw	[2]fsr1
 26829  1C9A  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26830  1C9B  3F43               	moviw	[3]fsr1
 26831  1C9C  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26832  1C9D  0828               	movf	3+(??_timestampdiff+0)+0,w
 26833  1C9E  022C               	subwf	3+(??_timestampdiff+4)+0,w
 26834  1C9F  1D03               	skipz
 26835  1CA0  2CAB               	goto	u9755
 26836  1CA1  0827               	movf	2+(??_timestampdiff+0)+0,w
 26837  1CA2  022B               	subwf	2+(??_timestampdiff+4)+0,w
 26838  1CA3  1D03               	skipz
 26839  1CA4  2CAB               	goto	u9755
 26840  1CA5  0826               	movf	1+(??_timestampdiff+0)+0,w
 26841  1CA6  022A               	subwf	1+(??_timestampdiff+4)+0,w
 26842  1CA7  1D03               	skipz
 26843  1CA8  2CAB               	goto	u9755
 26844  1CA9  0825               	movf	0+(??_timestampdiff+0)+0,w
 26845  1CAA  0229               	subwf	0+(??_timestampdiff+4)+0,w
 26846  1CAB                     u9755:
 26847  1CAB  1803               	skipnc
 26848  1CAC  2CAE               	goto	u9751
 26849  1CAD  2CAF               	goto	u9750
 26850  1CAE                     u9751:
 26851  1CAE  2CE9               	goto	l36927
 26852  1CAF                     u9750:
 26853                           	line	264
 26854                           	
 26855  1CAF                     l36925:	
 26856                           ;timer.c: 264: diff = (0xFFFFFFFF - (late_longshort->ls_longTicks - early_longshort->ls_
                                 longTicks)) + 1;
 26857  1CAF  0833               	movf	(timestampdiff@late_longshort),w
 26858  1CB0  0086               	movwf	fsr1l
 26859  1CB1  0187               	clrf fsr1h	
 26860                           	
 26861  1CB2  3F40               	moviw	[0]fsr1
 26862  1CB3  00A5               	movwf	((??_timestampdiff+0)+0+0)
 26863  1CB4  3F41               	moviw	[1]fsr1
 26864  1CB5  00A6               	movwf	((??_timestampdiff+0)+0+1)
 26865  1CB6  3F42               	moviw	[2]fsr1
 26866  1CB7  00A7               	movwf	((??_timestampdiff+0)+0+2)
 26867  1CB8  3F43               	moviw	[3]fsr1
 26868  1CB9  00A8               	movwf	((??_timestampdiff+0)+0+3)
 26869  1CBA  0831               	movf	(timestampdiff@early_longshort),w
 26870  1CBB  0086               	movwf	fsr1l
 26871  1CBC  0832               	movf	(timestampdiff@early_longshort+1),w
 26872  1CBD  0087               	movwf	fsr1h
 26873                           
 26874  1CBE  3F40               	moviw	[0]fsr1
 26875  1CBF  00A9               	movwf	((??_timestampdiff+4)+0+0)
 26876  1CC0  3F41               	moviw	[1]fsr1
 26877  1CC1  00AA               	movwf	((??_timestampdiff+4)+0+1)
 26878  1CC2  3F42               	moviw	[2]fsr1
 26879  1CC3  00AB               	movwf	((??_timestampdiff+4)+0+2)
 26880  1CC4  3F43               	moviw	[3]fsr1
 26881  1CC5  00AC               	movwf	((??_timestampdiff+4)+0+3)
 26882  1CC6  09A9               	comf	(??_timestampdiff+4)+0,f
 26883  1CC7  09AA               	comf	(??_timestampdiff+4)+1,f
 26884  1CC8  09AB               	comf	(??_timestampdiff+4)+2,f
 26885  1CC9  09AC               	comf	(??_timestampdiff+4)+3,f
 26886  1CCA  0AA9               	incf	(??_timestampdiff+4)+0,f
 26887  1CCB  1903               	skipnz
 26888  1CCC  0AAA               	incf	(??_timestampdiff+4)+1,f
 26889  1CCD  1903               	skipnz
 26890  1CCE  0AAB               	incf	(??_timestampdiff+4)+2,f
 26891  1CCF  1903               	skipnz
 26892  1CD0  0AAC               	incf	(??_timestampdiff+4)+3,f
 26893  1CD1  0829               	movf	0+(??_timestampdiff+4)+0,w
 26894  1CD2  07A5               	addwf	(??_timestampdiff+0)+0,f
 26895  1CD3  082A               	movf	1+(??_timestampdiff+4)+0,w
 26896  1CD4  3DA6               	addwfc	(??_timestampdiff+0)+1,f
 26897  1CD5  082B               	movf	2+(??_timestampdiff+4)+0,w
 26898  1CD6  3DA7               	addwfc	(??_timestampdiff+0)+2,f
 26899  1CD7  082C               	movf	3+(??_timestampdiff+4)+0,w
 26900  1CD8  3DA8               	addwfc	(??_timestampdiff+0)+3,f
 26901  1CD9  0925               	comf	0+(??_timestampdiff+0)+0+0,w
 26902  1CDA  00AD               	movwf	(timestampdiff@diff)
 26903  1CDB  0926               	comf	0+(??_timestampdiff+0)+0+1,w
 26904  1CDC  00AE               	movwf	(timestampdiff@diff+1)
 26905  1CDD  0927               	comf	0+(??_timestampdiff+0)+0+2,w
 26906  1CDE  00AF               	movwf	(timestampdiff@diff+2)
 26907  1CDF  0928               	comf	0+(??_timestampdiff+0)+0+3,w
 26908  1CE0  00B0               	movwf	(timestampdiff@diff+3)
 26909  1CE1  0AAD               	incf	(timestampdiff@diff),f
 26910  1CE2  1903               	skipnz
 26911  1CE3  0AAE               	incf	(timestampdiff@diff+1),f
 26912  1CE4  1903               	skipnz
 26913  1CE5  0AAF               	incf	(timestampdiff@diff+2),f
 26914  1CE6  1903               	skipnz
 26915  1CE7  0AB0               	incf	(timestampdiff@diff+3),f
 26916                           	line	265
 26917                           ;timer.c: 265: } else {
 26918  1CE8  2D28               	goto	l36935
 26919                           	
 26920  1CE9                     l21414:	
 26921                           	line	267
 26922                           	
 26923  1CE9                     l36927:	
 26924                           ;timer.c: 267: diff = 0xFFFFFFFF;
 26925  1CE9  30FF               	movlw	0FFh
 26926  1CEA  00B0               	movwf	(timestampdiff@diff+3)
 26927  1CEB  30FF               	movlw	0FFh
 26928  1CEC  00AF               	movwf	(timestampdiff@diff+2)
 26929  1CED  30FF               	movlw	0FFh
 26930  1CEE  00AE               	movwf	(timestampdiff@diff+1)
 26931  1CEF  30FF               	movlw	0FFh
 26932  1CF0  00AD               	movwf	(timestampdiff@diff)
 26933                           
 26934  1CF1  2D28               	goto	l36935
 26935                           	line	268
 26936                           	
 26937  1CF2                     l21415:	
 26938                           	line	269
 26939                           ;timer.c: 268: }
 26940                           ;timer.c: 269: break;
 26941  1CF2  2D28               	goto	l36935
 26942                           	line	271
 26943                           ;timer.c: 271: default:
 26944                           	
 26945  1CF3                     l21416:	
 26946                           	line	273
 26947                           	
 26948  1CF3                     l36929:	
 26949                           ;timer.c: 273: diff = 0xFFFFFFFF;
 26950  1CF3  30FF               	movlw	0FFh
 26951  1CF4  00B0               	movwf	(timestampdiff@diff+3)
 26952  1CF5  30FF               	movlw	0FFh
 26953  1CF6  00AF               	movwf	(timestampdiff@diff+2)
 26954  1CF7  30FF               	movlw	0FFh
 26955  1CF8  00AE               	movwf	(timestampdiff@diff+1)
 26956  1CF9  30FF               	movlw	0FFh
 26957  1CFA  00AD               	movwf	(timestampdiff@diff)
 26958                           
 26959                           	line	274
 26960                           ;timer.c: 274: break;
 26961  1CFB  2D28               	goto	l36935
 26962                           	line	275
 26963                           	
 26964  1CFC                     l36931:	
 26965                           ;timer.c: 275: }
 26966  1CFC  2D28               	goto	l36935
 26967                           	line	253
 26968                           	
 26969  1CFD                     l21409:	
 26970                           	
 26971  1CFD                     l36933:	
 26972  1CFD  0831               	movf	(timestampdiff@early_longshort),w
 26973  1CFE  3E04               	addlw	low(04h)
 26974  1CFF  00A5               	movwf	(??_timestampdiff+0)+0
 26975  1D00  3000               	movlw	high(04h)
 26976  1D01  3D32               	addwfc	(timestampdiff@early_longshort+1),w
 26977  1D02  00A6               	movwf	1+(??_timestampdiff+0)+0
 26978  1D03  0825               	movf	0+(??_timestampdiff+0)+0,w
 26979  1D04  0086               	movwf	fsr1l
 26980  1D05  0826               	movf	1+(??_timestampdiff+0)+0,w
 26981  1D06  0087               	movwf	fsr1h
 26982                           
 26983  1D07  0833               	movf	(timestampdiff@late_longshort),w
 26984  1D08  3E04               	addlw	04h
 26985  1D09  0084               	movwf	fsr0l
 26986  1D0A  0185               	clrf fsr0h	
 26987                           	
 26988  1D0B  3F00               	moviw	[0]fsr0
 26989  1D0C  00A7               	movwf	(??_timestampdiff+2)+0
 26990  1D0D  3F01               	moviw	[1]fsr0
 26991  1D0E  00A8               	movwf	(??_timestampdiff+2)+0+1
 26992  1D0F  09A7               	comf	(??_timestampdiff+2)+0,f
 26993  1D10  09A8               	comf	(??_timestampdiff+2)+1,f
 26994  1D11  0AA7               	incf	(??_timestampdiff+2)+0,f
 26995  1D12  1903               	skipnz
 26996  1D13  0AA8               	incf	(??_timestampdiff+2)+1,f
 26997  1D14  3F40               	moviw	[0]fsr1
 26998  1D15  0727               	addwf	0+(??_timestampdiff+2)+0,w
 26999  1D16  00A9               	movwf	(??_timestampdiff+4)+0
 27000  1D17  3F41               	moviw	[1]fsr1
 27001  1D18  3D28               	addwfc	1+(??_timestampdiff+2)+0,w
 27002  1D19  00AA               	movwf	(??_timestampdiff+4)+0+1
 27003                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 27004                           ; Switch size 1, requested type "space"
 27005                           ; Number of cases is 1, Range of values is 0 to 0
 27006                           ; switch strategies available:
 27007                           ; Name         Instructions Cycles
 27008                           ; simple_byte            4     3 (average)
 27009                           ; direct_byte            8     6 (fixed)
 27010                           ; jumptable            260     6 (fixed)
 27011                           ; rangetable             5     4 (fixed)
 27012                           ; spacedrange            7     6 (fixed)
 27013                           ; locatedrange           1     3 (fixed)
 27014                           ;	Chosen strategy is simple_byte
 27015                           
 27016  1D1A  082A               	movf 1+(??_timestampdiff+4)+0,w
 27017                           	opt asmopt_off
 27018  1D1B  3A00               	xorlw	0^0	; case 0
 27019  1D1C  1903               	skipnz
 27020  1D1D  2D1F               	goto	l39249
 27021  1D1E  2CF3               	goto	l36929
 27022                           	opt asmopt_on
 27023                           	
 27024  1D1F                     l39249:	
 27025                           ; Switch size 1, requested type "space"
 27026                           ; Number of cases is 2, Range of values is 0 to 1
 27027                           ; switch strategies available:
 27028                           ; Name         Instructions Cycles
 27029                           ; simple_byte            7     4 (average)
 27030                           ; direct_byte           10     6 (fixed)
 27031                           ; jumptable            260     6 (fixed)
 27032                           ; rangetable             6     4 (fixed)
 27033                           ; spacedrange            9     6 (fixed)
 27034                           ; locatedrange           2     3 (fixed)
 27035                           ;	Chosen strategy is simple_byte
 27036                           
 27037  1D1F  0829               	movf 0+(??_timestampdiff+4)+0,w
 27038                           	opt asmopt_off
 27039  1D20  3A00               	xorlw	0^0	; case 0
 27040  1D21  1903               	skipnz
 27041  1D22  2C29               	goto	l36919
 27042  1D23  3A01               	xorlw	1^0	; case 1
 27043  1D24  1903               	skipnz
 27044  1D25  2C86               	goto	l36923
 27045  1D26  2CF3               	goto	l36929
 27046                           	opt asmopt_on
 27047                           
 27048                           	line	275
 27049                           	
 27050  1D27                     l21412:	
 27051  1D27  2D28               	goto	l36935
 27052                           	line	276
 27053                           	
 27054  1D28                     l21408:	
 27055                           	line	278
 27056                           	
 27057  1D28                     l36935:	
 27058                           ;timer.c: 276: }
 27059                           ;timer.c: 278: return (diff);
 27060  1D28  0830               	movf	(timestampdiff@diff+3),w
 27061  1D29  00A4               	movwf	(?_timestampdiff+3)
 27062  1D2A  082F               	movf	(timestampdiff@diff+2),w
 27063  1D2B  00A3               	movwf	(?_timestampdiff+2)
 27064  1D2C  082E               	movf	(timestampdiff@diff+1),w
 27065  1D2D  00A2               	movwf	(?_timestampdiff+1)
 27066  1D2E  082D               	movf	(timestampdiff@diff),w
 27067  1D2F  00A1               	movwf	(?_timestampdiff)
 27068                           
 27069  1D30  2D31               	goto	l21417
 27070                           	
 27071  1D31                     l36937:	
 27072                           	line	279
 27073                           	
 27074  1D31                     l21417:	
 27075  1D31  0008               	return
 27076                           	opt stack 0
 27077                           GLOBAL	__end_of_timestampdiff
 27078  1D32                     	__end_of_timestampdiff:
 27079 ;; =============== function _timestampdiff ends ============
 27080                           
 27081                           	signat	_timestampdiff,8316
 27082                           	global	_gettimestamp
 27083                           psect	text3383,local,class=CODE,delta=2
 27084                           global __ptext3383
 27085  2D57                     __ptext3383:
 27086                           
 27087 ;; *************** function _gettimestamp *****************
 27088 ;; Defined at:
 27089 ;;		line 212 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;  ticks           2    0[BANK0 ] const PTR struct timer
 27092 ;;		 -> sensortimer(6), timeoutexpired@currentTime(6), second(6), pingtime(6), 
 27093 ;;		 -> debouncer(6), pacers(60), debouncers(18), cattimer(6), 
 27094 ;;		 -> autotimer(6), holdtimeout(6), cartridgetimeout(6), litterlanguage_pause@timer_now(6), 
 27095 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 27096 ;; Auto vars:     Size  Location     Type
 27097 ;;  bytes           2    5[BANK0 ] PTR unsigned char 
 27098 ;;		 -> sensortimer(6), timeoutexpired@currentTime(6), second(6), pingtime(6), 
 27099 ;;		 -> debouncer(6), pacers(60), debouncers(18), cattimer(6), 
 27100 ;;		 -> autotimer(6), holdtimeout(6), cartridgetimeout(6), litterlanguage_pause@timer_now(6), 
 27101 ;;		 -> timer_autodose(6), timer_drain(6), timer_fill(6), timer_waitins(6), 
 27102 ;;  temp            1    7[BANK0 ] volatile unsigned char 
 27103 ;; Return value:  Size  Location     Type
 27104 ;;		None               void
 27105 ;; Registers used:
 27106 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 27107 ;; Tracked objects:
 27108 ;;		On entry : 0/0
 27109 ;;		On exit  : 0/0
 27110 ;;		Unchanged: 0/0
 27111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27113 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 27114 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 27115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 27116 ;;Total ram usage:        8 bytes
 27117 ;; Hardware stack levels used:    1
 27118 ;; Hardware stack levels required when called:    2
 27119 ;; This function calls:
 27120 ;;		Nothing
 27121 ;; This function is called by:
 27122 ;;		_litterlanguage_pause
 27123 ;;		_settimeout
 27124 ;;		_timeoutexpired
 27125 ;; This function uses a non-reentrant model
 27126 ;;
 27127                           psect	text3383
 27128                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 27129                           	line	212
 27130                           	global	__size_of_gettimestamp
 27131  0048                     	__size_of_gettimestamp	equ	__end_of_gettimestamp-_gettimestamp
 27132                           	
 27133  2D57                     _gettimestamp:	
 27134                           	opt	stack 10
 27135                           ; Regs used in _gettimestamp: [wreg+fsr1l-status,0]
 27136                           	line	214
 27137                           	
 27138  2D57                     l36899:	
 27139                           ;timer.c: 213: volatile unsigned char temp;
 27140                           ;timer.c: 214: unsigned char *bytes = (unsigned char *)ticks;
 27141  2D57  0020               	movlb 0	; select bank0
 27142  2D58  0822               	movf	(gettimestamp@ticks+1),w
 27143  2D59  01A7               	clrf	(gettimestamp@bytes+1)
 27144  2D5A  07A7               	addwf	(gettimestamp@bytes+1)
 27145  2D5B  0821               	movf	(gettimestamp@ticks),w
 27146  2D5C  01A6               	clrf	(gettimestamp@bytes)
 27147  2D5D  07A6               	addwf	(gettimestamp@bytes)
 27148                           
 27149  2D5E  2D5F               	goto	l36901
 27150                           	line	219
 27151                           ;timer.c: 219: do
 27152                           	
 27153  2D5F                     l21403:	
 27154                           	line	223
 27155                           	
 27156  2D5F                     l36901:	
 27157                           ;timer.c: 220: {
 27158                           ;timer.c: 223: temp = TMR1H;
 27159  2D5F  0817               	movf	(23),w	;volatile
 27160  2D60  00A3               	movwf	(??_gettimestamp+0)+0
 27161  2D61  0823               	movf	(??_gettimestamp+0)+0,w
 27162  2D62  00A8               	movwf	(gettimestamp@temp)	;volatile
 27163                           	line	226
 27164                           	
 27165  2D63                     l36903:	
 27166                           ;timer.c: 226: ticks->overflows = overflows;
 27167  2D63  0821               	movf	(gettimestamp@ticks),w
 27168  2D64  3E02               	addlw	low(02h)
 27169  2D65  00A3               	movwf	(??_gettimestamp+0)+0
 27170  2D66  3000               	movlw	high(02h)
 27171  2D67  3D22               	addwfc	(gettimestamp@ticks+1),w
 27172  2D68  00A4               	movwf	1+(??_gettimestamp+0)+0
 27173  2D69  0823               	movf	0+(??_gettimestamp+0)+0,w
 27174  2D6A  0086               	movwf	fsr1l
 27175  2D6B  0824               	movf	1+(??_gettimestamp+0)+0,w
 27176  2D6C  0087               	movwf	fsr1h
 27177                           
 27178  2D6D  0021               	movlb 1	; select bank1
 27179  2D6E  084A               	movf	(_overflows)^080h,w	;volatile
 27180  2D6F  3FC0               	movwi	[0]fsr1
 27181  2D70  084B               	movf	(_overflows+1)^080h,w	;volatile
 27182  2D71  3FC1               	movwi	[1]fsr1
 27183  2D72  084C               	movf	(_overflows+2)^080h,w	;volatile
 27184  2D73  3FC2               	movwi	[2]fsr1
 27185  2D74  084D               	movf	(_overflows+3)^080h,w	;volatile
 27186  2D75  3FC3               	movwi	[3]fsr1
 27187                           	line	227
 27188                           ;timer.c: 227: bytes[0] = TMR1L;
 27189  2D76  0020               	movlb 0	; select bank0
 27190  2D77  0816               	movf	(22),w	;volatile
 27191  2D78  00A3               	movwf	(??_gettimestamp+0)+0
 27192  2D79  0826               	movf	(gettimestamp@bytes),w
 27193  2D7A  0086               	movwf	fsr1l
 27194  2D7B  0827               	movf	(gettimestamp@bytes+1),w
 27195  2D7C  0087               	movwf	fsr1h
 27196                           
 27197  2D7D  0823               	movf	(??_gettimestamp+0)+0,w
 27198  2D7E  0081               	movwf	indf1
 27199                           	line	228
 27200                           	
 27201  2D7F                     l36905:	
 27202                           ;timer.c: 228: bytes[1] = TMR1H;
 27203  2D7F  0817               	movf	(23),w	;volatile
 27204  2D80  00A3               	movwf	(??_gettimestamp+0)+0
 27205  2D81  0826               	movf	(gettimestamp@bytes),w
 27206  2D82  3E01               	addlw	low(01h)
 27207  2D83  00A4               	movwf	(??_gettimestamp+1)+0
 27208  2D84  3000               	movlw	high(01h)
 27209  2D85  3D27               	addwfc	(gettimestamp@bytes+1),w
 27210  2D86  00A5               	movwf	1+(??_gettimestamp+1)+0
 27211  2D87  0824               	movf	0+(??_gettimestamp+1)+0,w
 27212  2D88  0086               	movwf	fsr1l
 27213  2D89  0825               	movf	1+(??_gettimestamp+1)+0,w
 27214  2D8A  0087               	movwf	fsr1h
 27215                           
 27216  2D8B  0823               	movf	(??_gettimestamp+0)+0,w
 27217  2D8C  0081               	movwf	indf1
 27218                           	line	233
 27219                           	
 27220  2D8D                     l36907:	
 27221                           ;timer.c: 233: } while (bytes[1] != temp);
 27222  2D8D  0826               	movf	(gettimestamp@bytes),w
 27223  2D8E  3E01               	addlw	low(01h)
 27224  2D8F  00A3               	movwf	(??_gettimestamp+0)+0
 27225  2D90  3000               	movlw	high(01h)
 27226  2D91  3D27               	addwfc	(gettimestamp@bytes+1),w
 27227  2D92  00A4               	movwf	1+(??_gettimestamp+0)+0
 27228  2D93  0823               	movf	0+(??_gettimestamp+0)+0,w
 27229  2D94  0086               	movwf	fsr1l
 27230  2D95  0824               	movf	1+(??_gettimestamp+0)+0,w
 27231  2D96  0087               	movwf	fsr1h
 27232                           
 27233  2D97  0801               	movf	indf1,w
 27234  2D98  0628               	xorwf	(gettimestamp@temp),w	;volatile
 27235  2D99  1D03               	skipz
 27236  2D9A  2D9C               	goto	u9721
 27237  2D9B  2D9D               	goto	u9720
 27238  2D9C                     u9721:
 27239  2D9C  2D5F               	goto	l36901
 27240  2D9D                     u9720:
 27241  2D9D  2D9E               	goto	l21405
 27242                           	
 27243  2D9E                     l21404:	
 27244                           	line	234
 27245                           	
 27246  2D9E                     l21405:	
 27247  2D9E  0008               	return
 27248                           	opt stack 0
 27249                           GLOBAL	__end_of_gettimestamp
 27250  2D9F                     	__end_of_gettimestamp:
 27251 ;; =============== function _gettimestamp ends ============
 27252                           
 27253                           	signat	_gettimestamp,4216
 27254                           	global	_set_Dryer
 27255                           psect	text3384,local,class=CODE,delta=2
 27256                           global __ptext3384
 27257  283D                     __ptext3384:
 27258                           
 27259 ;; *************** function _set_Dryer *****************
 27260 ;; Defined at:
 27261 ;;		line 460 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27262 ;; Parameters:    Size  Location     Type
 27263 ;;  on              1    wreg     unsigned char 
 27264 ;; Auto vars:     Size  Location     Type
 27265 ;;  on              1    1[BANK0 ] unsigned char 
 27266 ;; Return value:  Size  Location     Type
 27267 ;;		None               void
 27268 ;; Registers used:
 27269 ;;		wreg, status,2, status,0
 27270 ;; Tracked objects:
 27271 ;;		On entry : 0/0
 27272 ;;		On exit  : 0/0
 27273 ;;		Unchanged: 0/0
 27274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27279 ;;Total ram usage:        2 bytes
 27280 ;; Hardware stack levels used:    1
 27281 ;; Hardware stack levels required when called:    2
 27282 ;; This function calls:
 27283 ;;		Nothing
 27284 ;; This function is called by:
 27285 ;;		_litterlanguage_pause
 27286 ;;		_litterlanguage_stop
 27287 ;;		_exe_instruction
 27288 ;; This function uses a non-reentrant model
 27289 ;;
 27290                           psect	text3384
 27291                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27292                           	line	460
 27293                           	global	__size_of_set_Dryer
 27294  0011                     	__size_of_set_Dryer	equ	__end_of_set_Dryer-_set_Dryer
 27295                           	
 27296  283D                     _set_Dryer:	
 27297                           	opt	stack 9
 27298                           ; Regs used in _set_Dryer: [wreg+status,2+status,0]
 27299                           ;set_Dryer@on stored from wreg
 27300  283D  0020               	movlb 0	; select bank0
 27301  283E  00A2               	movwf	(set_Dryer@on)
 27302                           	line	461
 27303                           	
 27304  283F                     l36893:	
 27305                           ;catgenie120.c: 461: if (on)
 27306  283F  0822               	movf	(set_Dryer@on),w
 27307  2840  1D03               	skipz
 27308  2841  2843               	goto	u9710
 27309  2842  2846               	goto	l36897
 27310  2843                     u9710:
 27311                           	line	462
 27312                           	
 27313  2843                     l36895:	
 27314                           ;catgenie120.c: 462: LATD |= (1U << (2));
 27315  2843  0022               	movlb 2	; select bank2
 27316  2844  150F               	bsf	(271)^0100h+(2/8),(2)&7	;volatile
 27317  2845  284D               	goto	l10992
 27318                           	line	463
 27319                           	
 27320  2846                     l10990:	
 27321                           	line	464
 27322                           	
 27323  2846                     l36897:	
 27324                           ;catgenie120.c: 463: else
 27325                           ;catgenie120.c: 464: LATD &= ~(1U << (2));
 27326  2846  30FB               	movlw	(0FBh)
 27327  2847  0020               	movlb 0	; select bank0
 27328  2848  00A1               	movwf	(??_set_Dryer+0)+0
 27329  2849  0821               	movf	(??_set_Dryer+0)+0,w
 27330  284A  0022               	movlb 2	; select bank2
 27331  284B  058F               	andwf	(271)^0100h,f	;volatile
 27332  284C  284D               	goto	l10992
 27333                           	
 27334  284D                     l10991:	
 27335                           	line	465
 27336                           	
 27337  284D                     l10992:	
 27338  284D  0008               	return
 27339                           	opt stack 0
 27340                           GLOBAL	__end_of_set_Dryer
 27341  284E                     	__end_of_set_Dryer:
 27342 ;; =============== function _set_Dryer ends ============
 27343                           
 27344                           	signat	_set_Dryer,4216
 27345                           	global	_get_Dryer
 27346                           psect	text3385,local,class=CODE,delta=2
 27347                           global __ptext3385
 27348  3701                     __ptext3385:
 27349                           
 27350 ;; *************** function _get_Dryer *****************
 27351 ;; Defined at:
 27352 ;;		line 469 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27353 ;; Parameters:    Size  Location     Type
 27354 ;;		None
 27355 ;; Auto vars:     Size  Location     Type
 27356 ;;		None
 27357 ;; Return value:  Size  Location     Type
 27358 ;;                  1    wreg      unsigned char 
 27359 ;; Registers used:
 27360 ;;		wreg, status,2
 27361 ;; Tracked objects:
 27362 ;;		On entry : 0/0
 27363 ;;		On exit  : 0/0
 27364 ;;		Unchanged: 0/0
 27365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27370 ;;Total ram usage:        0 bytes
 27371 ;; Hardware stack levels used:    1
 27372 ;; Hardware stack levels required when called:    2
 27373 ;; This function calls:
 27374 ;;		Nothing
 27375 ;; This function is called by:
 27376 ;;		_litterlanguage_pause
 27377 ;; This function uses a non-reentrant model
 27378 ;;
 27379                           psect	text3385
 27380                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27381                           	line	469
 27382                           	global	__size_of_get_Dryer
 27383  0005                     	__size_of_get_Dryer	equ	__end_of_get_Dryer-_get_Dryer
 27384                           	
 27385  3701                     _get_Dryer:	
 27386                           	opt	stack 9
 27387                           ; Regs used in _get_Dryer: [wreg+status,2]
 27388                           	line	470
 27389                           	
 27390  3701                     l36889:	
 27391                           ;catgenie120.c: 470: return (LATD & (1U << (2)));
 27392  3701  0022               	movlb 2	; select bank2
 27393  3702  080F               	movf	(271)^0100h,w	;volatile
 27394  3703  3904               	andlw	04h
 27395  3704  2F05               	goto	l10995
 27396                           	
 27397  3705                     l36891:	
 27398                           	line	471
 27399                           	
 27400  3705                     l10995:	
 27401  3705  0008               	return
 27402                           	opt stack 0
 27403                           GLOBAL	__end_of_get_Dryer
 27404  3706                     	__end_of_get_Dryer:
 27405 ;; =============== function _get_Dryer ends ============
 27406                           
 27407                           	signat	_get_Dryer,89
 27408                           	global	_set_Pump
 27409                           psect	text3386,local,class=CODE,delta=2
 27410                           global __ptext3386
 27411  37EF                     __ptext3386:
 27412                           
 27413 ;; *************** function _set_Pump *****************
 27414 ;; Defined at:
 27415 ;;		line 445 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27416 ;; Parameters:    Size  Location     Type
 27417 ;;  on              1    wreg     unsigned char 
 27418 ;; Auto vars:     Size  Location     Type
 27419 ;;  on              1    1[BANK0 ] unsigned char 
 27420 ;; Return value:  Size  Location     Type
 27421 ;;		None               void
 27422 ;; Registers used:
 27423 ;;		wreg, status,2, status,0
 27424 ;; Tracked objects:
 27425 ;;		On entry : 0/0
 27426 ;;		On exit  : 0/0
 27427 ;;		Unchanged: 0/0
 27428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27433 ;;Total ram usage:        2 bytes
 27434 ;; Hardware stack levels used:    1
 27435 ;; Hardware stack levels required when called:    2
 27436 ;; This function calls:
 27437 ;;		Nothing
 27438 ;; This function is called by:
 27439 ;;		_litterlanguage_pause
 27440 ;;		_litterlanguage_stop
 27441 ;;		_exe_instruction
 27442 ;; This function uses a non-reentrant model
 27443 ;;
 27444                           psect	text3386
 27445                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27446                           	line	445
 27447                           	global	__size_of_set_Pump
 27448  0011                     	__size_of_set_Pump	equ	__end_of_set_Pump-_set_Pump
 27449                           	
 27450  37EF                     _set_Pump:	
 27451                           	opt	stack 9
 27452                           ; Regs used in _set_Pump: [wreg+status,2+status,0]
 27453                           ;set_Pump@on stored from wreg
 27454  37EF  0020               	movlb 0	; select bank0
 27455  37F0  00A2               	movwf	(set_Pump@on)
 27456                           	line	446
 27457                           	
 27458  37F1                     l36883:	
 27459                           ;catgenie120.c: 446: if (on)
 27460  37F1  0822               	movf	(set_Pump@on),w
 27461  37F2  1D03               	skipz
 27462  37F3  2FF5               	goto	u9700
 27463  37F4  2FF8               	goto	l36887
 27464  37F5                     u9700:
 27465                           	line	447
 27466                           	
 27467  37F5                     l36885:	
 27468                           ;catgenie120.c: 447: LATD |= (1U << (1));
 27469  37F5  0022               	movlb 2	; select bank2
 27470  37F6  148F               	bsf	(271)^0100h+(1/8),(1)&7	;volatile
 27471  37F7  2FFF               	goto	l10984
 27472                           	line	448
 27473                           	
 27474  37F8                     l10982:	
 27475                           	line	449
 27476                           	
 27477  37F8                     l36887:	
 27478                           ;catgenie120.c: 448: else
 27479                           ;catgenie120.c: 449: LATD &= ~(1U << (1));
 27480  37F8  30FD               	movlw	(0FDh)
 27481  37F9  0020               	movlb 0	; select bank0
 27482  37FA  00A1               	movwf	(??_set_Pump+0)+0
 27483  37FB  0821               	movf	(??_set_Pump+0)+0,w
 27484  37FC  0022               	movlb 2	; select bank2
 27485  37FD  058F               	andwf	(271)^0100h,f	;volatile
 27486  37FE  2FFF               	goto	l10984
 27487                           	
 27488  37FF                     l10983:	
 27489                           	line	450
 27490                           	
 27491  37FF                     l10984:	
 27492  37FF  0008               	return
 27493                           	opt stack 0
 27494                           GLOBAL	__end_of_set_Pump
 27495  3800                     	__end_of_set_Pump:
 27496 ;; =============== function _set_Pump ends ============
 27497                           
 27498                           	signat	_set_Pump,4216
 27499                           	global	_get_Dosage
 27500                           psect	text3387,local,class=CODE,delta=2
 27501                           global __ptext3387
 27502  36FC                     __ptext3387:
 27503                           
 27504 ;; *************** function _get_Dosage *****************
 27505 ;; Defined at:
 27506 ;;		line 439 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27507 ;; Parameters:    Size  Location     Type
 27508 ;;		None
 27509 ;; Auto vars:     Size  Location     Type
 27510 ;;		None
 27511 ;; Return value:  Size  Location     Type
 27512 ;;                  1    wreg      unsigned char 
 27513 ;; Registers used:
 27514 ;;		wreg, status,2
 27515 ;; Tracked objects:
 27516 ;;		On entry : 0/0
 27517 ;;		On exit  : 0/0
 27518 ;;		Unchanged: 0/0
 27519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27524 ;;Total ram usage:        0 bytes
 27525 ;; Hardware stack levels used:    1
 27526 ;; Hardware stack levels required when called:    2
 27527 ;; This function calls:
 27528 ;;		Nothing
 27529 ;; This function is called by:
 27530 ;;		_litterlanguage_pause
 27531 ;;		_wait_instruction
 27532 ;; This function uses a non-reentrant model
 27533 ;;
 27534                           psect	text3387
 27535                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27536                           	line	439
 27537                           	global	__size_of_get_Dosage
 27538  0005                     	__size_of_get_Dosage	equ	__end_of_get_Dosage-_get_Dosage
 27539                           	
 27540  36FC                     _get_Dosage:	
 27541                           	opt	stack 11
 27542                           ; Regs used in _get_Dosage: [wreg+status,2]
 27543                           	line	440
 27544                           	
 27545  36FC                     l36879:	
 27546                           ;catgenie120.c: 440: return (LATD & (1U << (3)));
 27547  36FC  0022               	movlb 2	; select bank2
 27548  36FD  080F               	movf	(271)^0100h,w	;volatile
 27549  36FE  3908               	andlw	08h
 27550  36FF  2F00               	goto	l10979
 27551                           	
 27552  3700                     l36881:	
 27553                           	line	441
 27554                           	
 27555  3700                     l10979:	
 27556  3700  0008               	return
 27557                           	opt stack 0
 27558                           GLOBAL	__end_of_get_Dosage
 27559  3701                     	__end_of_get_Dosage:
 27560 ;; =============== function _get_Dosage ends ============
 27561                           
 27562                           	signat	_get_Dosage,89
 27563                           	global	_water_fill
 27564                           psect	text3388,local,class=CODE,delta=2
 27565                           global __ptext3388
 27566  289D                     __ptext3388:
 27567                           
 27568 ;; *************** function _water_fill *****************
 27569 ;; Defined at:
 27570 ;;		line 217 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27571 ;; Parameters:    Size  Location     Type
 27572 ;;  fill            1    wreg     unsigned char 
 27573 ;; Auto vars:     Size  Location     Type
 27574 ;;  fill            1    1[BANK0 ] unsigned char 
 27575 ;; Return value:  Size  Location     Type
 27576 ;;		None               void
 27577 ;; Registers used:
 27578 ;;		wreg, status,2, status,0
 27579 ;; Tracked objects:
 27580 ;;		On entry : 0/0
 27581 ;;		On exit  : 0/0
 27582 ;;		Unchanged: 0/0
 27583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27587 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27588 ;;Total ram usage:        2 bytes
 27589 ;; Hardware stack levels used:    1
 27590 ;; Hardware stack levels required when called:    2
 27591 ;; This function calls:
 27592 ;;		Nothing
 27593 ;; This function is called by:
 27594 ;;		_litterlanguage_pause
 27595 ;;		_litterlanguage_stop
 27596 ;;		_waterdetection_event
 27597 ;;		_exe_instruction
 27598 ;; This function uses a non-reentrant model
 27599 ;;
 27600                           psect	text3388
 27601                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 27602                           	line	217
 27603                           	global	__size_of_water_fill
 27604  0016                     	__size_of_water_fill	equ	__end_of_water_fill-_water_fill
 27605                           	
 27606  289D                     _water_fill:	
 27607                           	opt	stack 9
 27608                           ; Regs used in _water_fill: [wreg+status,2+status,0]
 27609                           ;water_fill@fill stored from wreg
 27610  289D  0020               	movlb 0	; select bank0
 27611  289E  00A2               	movwf	(water_fill@fill)
 27612                           	line	218
 27613                           	
 27614  289F                     l36871:	
 27615                           ;water.c: 218: filling = fill;
 27616  289F  11ED               	bcf	(_filling/8),(_filling)&7
 27617  28A0  1C22               	btfss	(water_fill@fill),0
 27618  28A1  28A3               	goto	u9685
 27619  28A2  15ED               	bsf	(_filling/8),(_filling)&7
 27620  28A3                     u9685:
 27621                           
 27622                           	line	220
 27623                           	
 27624  28A3                     l36873:	
 27625                           ;water.c: 220: if (filling) {
 27626  28A3  0020               	movlb 0	; select bank0
 27627  28A4  1DED               	btfss	(_filling/8),(_filling)&7
 27628  28A5  28A7               	goto	u9691
 27629  28A6  28A8               	goto	u9690
 27630  28A7                     u9691:
 27631  28A7  28AB               	goto	l36877
 27632  28A8                     u9690:
 27633                           	line	222
 27634                           	
 27635  28A8                     l36875:	
 27636                           ;water.c: 222: LATD |= (1U << (0));
 27637  28A8  0022               	movlb 2	; select bank2
 27638  28A9  140F               	bsf	(271)^0100h+(0/8),(0)&7	;volatile
 27639                           	line	223
 27640                           ;water.c: 223: } else {
 27641  28AA  28B2               	goto	l23510
 27642                           	
 27643  28AB                     l23508:	
 27644                           	line	225
 27645                           	
 27646  28AB                     l36877:	
 27647                           ;water.c: 225: LATD &= ~(1U << (0));
 27648  28AB  30FE               	movlw	(0FEh)
 27649  28AC  0020               	movlb 0	; select bank0
 27650  28AD  00A1               	movwf	(??_water_fill+0)+0
 27651  28AE  0821               	movf	(??_water_fill+0)+0,w
 27652  28AF  0022               	movlb 2	; select bank2
 27653  28B0  058F               	andwf	(271)^0100h,f	;volatile
 27654  28B1  28B2               	goto	l23510
 27655                           	line	226
 27656                           	
 27657  28B2                     l23509:	
 27658                           	line	227
 27659                           	
 27660  28B2                     l23510:	
 27661  28B2  0008               	return
 27662                           	opt stack 0
 27663                           GLOBAL	__end_of_water_fill
 27664  28B3                     	__end_of_water_fill:
 27665 ;; =============== function _water_fill ends ============
 27666                           
 27667                           	signat	_water_fill,4216
 27668                           	global	_set_Arm
 27669                           psect	text3389,local,class=CODE,delta=2
 27670                           global __ptext3389
 27671  2A7A                     __ptext3389:
 27672                           
 27673 ;; *************** function _set_Arm *****************
 27674 ;; Defined at:
 27675 ;;		line 399 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27676 ;; Parameters:    Size  Location     Type
 27677 ;;  mode            1    wreg     unsigned char 
 27678 ;; Auto vars:     Size  Location     Type
 27679 ;;  mode            1    1[BANK0 ] unsigned char 
 27680 ;; Return value:  Size  Location     Type
 27681 ;;		None               void
 27682 ;; Registers used:
 27683 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27684 ;; Tracked objects:
 27685 ;;		On entry : 0/0
 27686 ;;		On exit  : 0/0
 27687 ;;		Unchanged: 0/0
 27688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27693 ;;Total ram usage:        2 bytes
 27694 ;; Hardware stack levels used:    1
 27695 ;; Hardware stack levels required when called:    2
 27696 ;; This function calls:
 27697 ;;		Nothing
 27698 ;; This function is called by:
 27699 ;;		_litterlanguage_pause
 27700 ;;		_litterlanguage_stop
 27701 ;;		_exe_instruction
 27702 ;; This function uses a non-reentrant model
 27703 ;;
 27704                           psect	text3389
 27705                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27706                           	line	399
 27707                           	global	__size_of_set_Arm
 27708  0024                     	__size_of_set_Arm	equ	__end_of_set_Arm-_set_Arm
 27709                           	
 27710  2A7A                     _set_Arm:	
 27711                           	opt	stack 9
 27712                           ; Regs used in _set_Arm: [wreg-fsr0h+status,2+status,0]
 27713                           ;set_Arm@mode stored from wreg
 27714  2A7A  0020               	movlb 0	; select bank0
 27715  2A7B  00A2               	movwf	(set_Arm@mode)
 27716                           	line	400
 27717                           	
 27718  2A7C                     l36859:	
 27719                           ;catgenie120.c: 400: switch (mode) {
 27720  2A7C  2A91               	goto	l36869
 27721                           	line	401
 27722                           ;catgenie120.c: 401: default:
 27723                           	
 27724  2A7D                     l10959:	
 27725  2A7D  2A7E               	goto	l36861
 27726                           	line	402
 27727                           ;catgenie120.c: 402: case 0:
 27728                           	
 27729  2A7E                     l10960:	
 27730                           	line	403
 27731                           	
 27732  2A7E                     l36861:	
 27733                           ;catgenie120.c: 403: LATD &= ~((1U << (6)) | (1U << (7)));
 27734  2A7E  303F               	movlw	(03Fh)
 27735  2A7F  00A1               	movwf	(??_set_Arm+0)+0
 27736  2A80  0821               	movf	(??_set_Arm+0)+0,w
 27737  2A81  0022               	movlb 2	; select bank2
 27738  2A82  058F               	andwf	(271)^0100h,f	;volatile
 27739                           	line	404
 27740                           ;catgenie120.c: 404: break;
 27741  2A83  2A9D               	goto	l10964
 27742                           	line	405
 27743                           ;catgenie120.c: 405: case 2:
 27744                           	
 27745  2A84                     l10962:	
 27746                           	line	406
 27747                           	
 27748  2A84                     l36863:	
 27749                           ;catgenie120.c: 406: LATD &= ~(1U << (6));
 27750  2A84  30BF               	movlw	(0BFh)
 27751  2A85  0020               	movlb 0	; select bank0
 27752  2A86  00A1               	movwf	(??_set_Arm+0)+0
 27753  2A87  0821               	movf	(??_set_Arm+0)+0,w
 27754  2A88  0022               	movlb 2	; select bank2
 27755  2A89  058F               	andwf	(271)^0100h,f	;volatile
 27756                           	line	407
 27757                           	
 27758  2A8A                     l36865:	
 27759                           ;catgenie120.c: 407: LATD |= (1U << (7));
 27760  2A8A  178F               	bsf	(271)^0100h+(7/8),(7)&7	;volatile
 27761                           	line	408
 27762                           ;catgenie120.c: 408: break;
 27763  2A8B  2A9D               	goto	l10964
 27764                           	line	409
 27765                           ;catgenie120.c: 409: case 1:
 27766                           	
 27767  2A8C                     l10963:	
 27768                           	line	410
 27769                           ;catgenie120.c: 410: LATD |= (1U << (6));
 27770  2A8C  0022               	movlb 2	; select bank2
 27771  2A8D  170F               	bsf	(271)^0100h+(6/8),(6)&7	;volatile
 27772                           	line	411
 27773                           ;catgenie120.c: 411: LATD |= (1U << (7));
 27774  2A8E  178F               	bsf	(271)^0100h+(7/8),(7)&7	;volatile
 27775                           	line	412
 27776                           ;catgenie120.c: 412: break;
 27777  2A8F  2A9D               	goto	l10964
 27778                           	line	413
 27779                           	
 27780  2A90                     l36867:	
 27781                           ;catgenie120.c: 413: }
 27782  2A90  2A9D               	goto	l10964
 27783                           	line	400
 27784                           	
 27785  2A91                     l10958:	
 27786                           	
 27787  2A91                     l36869:	
 27788  2A91  0020               	movlb 0	; select bank0
 27789  2A92  0822               	movf	(set_Arm@mode),w
 27790                           	; Switch size 1, requested type "space"
 27791                           ; Number of cases is 3, Range of values is 0 to 2
 27792                           ; switch strategies available:
 27793                           ; Name         Instructions Cycles
 27794                           ; simple_byte           10     6 (average)
 27795                           ; direct_byte           12     6 (fixed)
 27796                           ; jumptable            260     6 (fixed)
 27797                           ; rangetable             7     4 (fixed)
 27798                           ; spacedrange           11     6 (fixed)
 27799                           ; locatedrange           3     3 (fixed)
 27800                           ;	Chosen strategy is simple_byte
 27801                           
 27802                           	opt asmopt_off
 27803  2A93  3A00               	xorlw	0^0	; case 0
 27804  2A94  1903               	skipnz
 27805  2A95  2A7E               	goto	l36861
 27806  2A96  3A01               	xorlw	1^0	; case 1
 27807  2A97  1903               	skipnz
 27808  2A98  2A8C               	goto	l10963
 27809  2A99  3A03               	xorlw	2^1	; case 2
 27810  2A9A  1903               	skipnz
 27811  2A9B  2A84               	goto	l36863
 27812  2A9C  2A7E               	goto	l36861
 27813                           	opt asmopt_on
 27814                           
 27815                           	line	413
 27816                           	
 27817  2A9D                     l10961:	
 27818                           	line	414
 27819                           	
 27820  2A9D                     l10964:	
 27821  2A9D  0008               	return
 27822                           	opt stack 0
 27823                           GLOBAL	__end_of_set_Arm
 27824  2A9E                     	__end_of_set_Arm:
 27825 ;; =============== function _set_Arm ends ============
 27826                           
 27827                           	signat	_set_Arm,4216
 27828                           	global	_get_Arm
 27829                           psect	text3390,local,class=CODE,delta=2
 27830                           global __ptext3390
 27831  29D5                     __ptext3390:
 27832                           
 27833 ;; *************** function _get_Arm *****************
 27834 ;; Defined at:
 27835 ;;		line 418 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27836 ;; Parameters:    Size  Location     Type
 27837 ;;		None
 27838 ;; Auto vars:     Size  Location     Type
 27839 ;;		None
 27840 ;; Return value:  Size  Location     Type
 27841 ;;                  1    wreg      unsigned char 
 27842 ;; Registers used:
 27843 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27844 ;; Tracked objects:
 27845 ;;		On entry : 0/0
 27846 ;;		On exit  : 0/0
 27847 ;;		Unchanged: 0/0
 27848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27851 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27852 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27853 ;;Total ram usage:        2 bytes
 27854 ;; Hardware stack levels used:    1
 27855 ;; Hardware stack levels required when called:    2
 27856 ;; This function calls:
 27857 ;;		Nothing
 27858 ;; This function is called by:
 27859 ;;		_litterlanguage_pause
 27860 ;; This function uses a non-reentrant model
 27861 ;;
 27862                           psect	text3390
 27863                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27864                           	line	418
 27865                           	global	__size_of_get_Arm
 27866  001E                     	__size_of_get_Arm	equ	__end_of_get_Arm-_get_Arm
 27867                           	
 27868  29D5                     _get_Arm:	
 27869                           	opt	stack 9
 27870                           ; Regs used in _get_Arm: [wreg-fsr0h+status,2+status,0]
 27871                           	line	419
 27872                           	
 27873  29D5                     l36837:	
 27874                           ;catgenie120.c: 419: switch (LATD & ((1U << (6)) | (1U << (7)))) {
 27875  29D5  29DD               	goto	l36849
 27876                           	line	420
 27877                           ;catgenie120.c: 420: case (1U << (7)):
 27878                           	
 27879  29D6                     l10968:	
 27880                           	line	421
 27881                           	
 27882  29D6                     l36839:	
 27883                           ;catgenie120.c: 421: return (2);
 27884  29D6  3002               	movlw	(02h)
 27885  29D7  29F2               	goto	l10969
 27886                           	
 27887  29D8                     l36841:	
 27888  29D8  29F2               	goto	l10969
 27889                           	line	422
 27890                           ;catgenie120.c: 422: case (1U << (7)) | (1U << (6)):
 27891                           	
 27892  29D9                     l10970:	
 27893                           	line	423
 27894                           	
 27895  29D9                     l36843:	
 27896                           ;catgenie120.c: 423: return (1);
 27897  29D9  3001               	movlw	(01h)
 27898  29DA  29F2               	goto	l10969
 27899                           	
 27900  29DB                     l36845:	
 27901  29DB  29F2               	goto	l10969
 27902                           	line	424
 27903                           	
 27904  29DC                     l36847:	
 27905                           ;catgenie120.c: 424: }
 27906  29DC  29F0               	goto	l36851
 27907                           	line	419
 27908                           	
 27909  29DD                     l10967:	
 27910                           	
 27911  29DD                     l36849:	
 27912  29DD  0022               	movlb 2	; select bank2
 27913  29DE  080F               	movf	(271)^0100h,w	;volatile
 27914  29DF  39C0               	andlw	0C0h
 27915  29E0  0020               	movlb 0	; select bank0
 27916  29E1  00A1               	movwf	(??_get_Arm+0)+0
 27917  29E2  01A2               	clrf	(??_get_Arm+0)+0+1
 27918                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 27919                           ; Switch size 1, requested type "space"
 27920                           ; Number of cases is 1, Range of values is 0 to 0
 27921                           ; switch strategies available:
 27922                           ; Name         Instructions Cycles
 27923                           ; simple_byte            4     3 (average)
 27924                           ; direct_byte            8     6 (fixed)
 27925                           ; jumptable            260     6 (fixed)
 27926                           ; rangetable             5     4 (fixed)
 27927                           ; spacedrange            7     6 (fixed)
 27928                           ; locatedrange           1     3 (fixed)
 27929                           ;	Chosen strategy is simple_byte
 27930                           
 27931  29E3  0822               	movf 1+(??_get_Arm+0)+0,w
 27932                           	opt asmopt_off
 27933  29E4  3A00               	xorlw	0^0	; case 0
 27934  29E5  1903               	skipnz
 27935  29E6  29E8               	goto	l39251
 27936  29E7  29F0               	goto	l36851
 27937                           	opt asmopt_on
 27938                           	
 27939  29E8                     l39251:	
 27940                           ; Switch size 1, requested type "space"
 27941                           ; Number of cases is 2, Range of values is 128 to 192
 27942                           ; switch strategies available:
 27943                           ; Name         Instructions Cycles
 27944                           ; simple_byte            7     4 (average)
 27945                           ; direct_byte          139     9 (fixed)
 27946                           ; jumptable            263     9 (fixed)
 27947                           ;	Chosen strategy is simple_byte
 27948                           
 27949  29E8  0821               	movf 0+(??_get_Arm+0)+0,w
 27950                           	opt asmopt_off
 27951  29E9  3A80               	xorlw	128^0	; case 128
 27952  29EA  1903               	skipnz
 27953  29EB  29D6               	goto	l36839
 27954  29EC  3A40               	xorlw	192^128	; case 192
 27955  29ED  1903               	skipnz
 27956  29EE  29D9               	goto	l36843
 27957  29EF  29F0               	goto	l36851
 27958                           	opt asmopt_on
 27959                           
 27960                           	line	424
 27961                           	
 27962  29F0                     l10971:	
 27963                           	line	425
 27964                           	
 27965  29F0                     l36851:	
 27966                           ;catgenie120.c: 425: return (0);
 27967  29F0  3000               	movlw	(0)
 27968  29F1  29F2               	goto	l10969
 27969                           	
 27970  29F2                     l36853:	
 27971                           	line	426
 27972                           	
 27973  29F2                     l10969:	
 27974  29F2  0008               	return
 27975                           	opt stack 0
 27976                           GLOBAL	__end_of_get_Arm
 27977  29F3                     	__end_of_get_Arm:
 27978 ;; =============== function _get_Arm ends ============
 27979                           
 27980                           	signat	_get_Arm,89
 27981                           	global	_set_Bowl
 27982                           psect	text3391,local,class=CODE,delta=2
 27983                           global __ptext3391
 27984  2A56                     __ptext3391:
 27985                           
 27986 ;; *************** function _set_Bowl *****************
 27987 ;; Defined at:
 27988 ;;		line 368 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 27989 ;; Parameters:    Size  Location     Type
 27990 ;;  mode            1    wreg     unsigned char 
 27991 ;; Auto vars:     Size  Location     Type
 27992 ;;  mode            1    1[BANK0 ] unsigned char 
 27993 ;; Return value:  Size  Location     Type
 27994 ;;		None               void
 27995 ;; Registers used:
 27996 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 27997 ;; Tracked objects:
 27998 ;;		On entry : 0/0
 27999 ;;		On exit  : 0/0
 28000 ;;		Unchanged: 0/0
 28001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28005 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28006 ;;Total ram usage:        2 bytes
 28007 ;; Hardware stack levels used:    1
 28008 ;; Hardware stack levels required when called:    2
 28009 ;; This function calls:
 28010 ;;		Nothing
 28011 ;; This function is called by:
 28012 ;;		_litterlanguage_pause
 28013 ;;		_litterlanguage_stop
 28014 ;;		_exe_instruction
 28015 ;; This function uses a non-reentrant model
 28016 ;;
 28017                           psect	text3391
 28018                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28019                           	line	368
 28020                           	global	__size_of_set_Bowl
 28021  0024                     	__size_of_set_Bowl	equ	__end_of_set_Bowl-_set_Bowl
 28022                           	
 28023  2A56                     _set_Bowl:	
 28024                           	opt	stack 9
 28025                           ; Regs used in _set_Bowl: [wreg-fsr0h+status,2+status,0]
 28026                           ;set_Bowl@mode stored from wreg
 28027  2A56  0020               	movlb 0	; select bank0
 28028  2A57  00A2               	movwf	(set_Bowl@mode)
 28029                           	line	369
 28030                           	
 28031  2A58                     l36825:	
 28032                           ;catgenie120.c: 369: switch (mode) {
 28033  2A58  2A6D               	goto	l36835
 28034                           	line	370
 28035                           ;catgenie120.c: 370: default:
 28036                           	
 28037  2A59                     l10943:	
 28038  2A59  2A5A               	goto	l36827
 28039                           	line	371
 28040                           ;catgenie120.c: 371: case 0:
 28041                           	
 28042  2A5A                     l10944:	
 28043                           	line	372
 28044                           	
 28045  2A5A                     l36827:	
 28046                           ;catgenie120.c: 372: LATD &= ~((1U << (4)) | (1U << (5)));
 28047  2A5A  30CF               	movlw	(0CFh)
 28048  2A5B  00A1               	movwf	(??_set_Bowl+0)+0
 28049  2A5C  0821               	movf	(??_set_Bowl+0)+0,w
 28050  2A5D  0022               	movlb 2	; select bank2
 28051  2A5E  058F               	andwf	(271)^0100h,f	;volatile
 28052                           	line	373
 28053                           ;catgenie120.c: 373: break;
 28054  2A5F  2A79               	goto	l10948
 28055                           	line	374
 28056                           ;catgenie120.c: 374: case 1:
 28057                           	
 28058  2A60                     l10946:	
 28059                           	line	375
 28060                           ;catgenie120.c: 375: LATD |= (1U << (4));
 28061  2A60  0022               	movlb 2	; select bank2
 28062  2A61  160F               	bsf	(271)^0100h+(4/8),(4)&7	;volatile
 28063                           	line	376
 28064                           ;catgenie120.c: 376: LATD |= (1U << (5));
 28065  2A62  168F               	bsf	(271)^0100h+(5/8),(5)&7	;volatile
 28066                           	line	377
 28067                           ;catgenie120.c: 377: break;
 28068  2A63  2A79               	goto	l10948
 28069                           	line	378
 28070                           ;catgenie120.c: 378: case 2:
 28071                           	
 28072  2A64                     l10947:	
 28073                           	line	379
 28074                           	
 28075  2A64                     l36829:	
 28076                           ;catgenie120.c: 379: LATD &= ~(1U << (4));
 28077  2A64  30EF               	movlw	(0EFh)
 28078  2A65  0020               	movlb 0	; select bank0
 28079  2A66  00A1               	movwf	(??_set_Bowl+0)+0
 28080  2A67  0821               	movf	(??_set_Bowl+0)+0,w
 28081  2A68  0022               	movlb 2	; select bank2
 28082  2A69  058F               	andwf	(271)^0100h,f	;volatile
 28083                           	line	380
 28084                           	
 28085  2A6A                     l36831:	
 28086                           ;catgenie120.c: 380: LATD |= (1U << (5));
 28087  2A6A  168F               	bsf	(271)^0100h+(5/8),(5)&7	;volatile
 28088                           	line	381
 28089                           ;catgenie120.c: 381: break;
 28090  2A6B  2A79               	goto	l10948
 28091                           	line	382
 28092                           	
 28093  2A6C                     l36833:	
 28094                           ;catgenie120.c: 382: }
 28095  2A6C  2A79               	goto	l10948
 28096                           	line	369
 28097                           	
 28098  2A6D                     l10942:	
 28099                           	
 28100  2A6D                     l36835:	
 28101  2A6D  0020               	movlb 0	; select bank0
 28102  2A6E  0822               	movf	(set_Bowl@mode),w
 28103                           	; Switch size 1, requested type "space"
 28104                           ; Number of cases is 3, Range of values is 0 to 2
 28105                           ; switch strategies available:
 28106                           ; Name         Instructions Cycles
 28107                           ; simple_byte           10     6 (average)
 28108                           ; direct_byte           12     6 (fixed)
 28109                           ; jumptable            260     6 (fixed)
 28110                           ; rangetable             7     4 (fixed)
 28111                           ; spacedrange           11     6 (fixed)
 28112                           ; locatedrange           3     3 (fixed)
 28113                           ;	Chosen strategy is simple_byte
 28114                           
 28115                           	opt asmopt_off
 28116  2A6F  3A00               	xorlw	0^0	; case 0
 28117  2A70  1903               	skipnz
 28118  2A71  2A5A               	goto	l36827
 28119  2A72  3A01               	xorlw	1^0	; case 1
 28120  2A73  1903               	skipnz
 28121  2A74  2A60               	goto	l10946
 28122  2A75  3A03               	xorlw	2^1	; case 2
 28123  2A76  1903               	skipnz
 28124  2A77  2A64               	goto	l36829
 28125  2A78  2A5A               	goto	l36827
 28126                           	opt asmopt_on
 28127                           
 28128                           	line	382
 28129                           	
 28130  2A79                     l10945:	
 28131                           	line	383
 28132                           	
 28133  2A79                     l10948:	
 28134  2A79  0008               	return
 28135                           	opt stack 0
 28136                           GLOBAL	__end_of_set_Bowl
 28137  2A7A                     	__end_of_set_Bowl:
 28138 ;; =============== function _set_Bowl ends ============
 28139                           
 28140                           	signat	_set_Bowl,4216
 28141                           	global	_get_Bowl
 28142                           psect	text3392,local,class=CODE,delta=2
 28143                           global __ptext3392
 28144  29B7                     __ptext3392:
 28145                           
 28146 ;; *************** function _get_Bowl *****************
 28147 ;; Defined at:
 28148 ;;		line 387 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28149 ;; Parameters:    Size  Location     Type
 28150 ;;		None
 28151 ;; Auto vars:     Size  Location     Type
 28152 ;;		None
 28153 ;; Return value:  Size  Location     Type
 28154 ;;                  1    wreg      unsigned char 
 28155 ;; Registers used:
 28156 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 28157 ;; Tracked objects:
 28158 ;;		On entry : 0/0
 28159 ;;		On exit  : 0/0
 28160 ;;		Unchanged: 0/0
 28161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28166 ;;Total ram usage:        2 bytes
 28167 ;; Hardware stack levels used:    1
 28168 ;; Hardware stack levels required when called:    2
 28169 ;; This function calls:
 28170 ;;		Nothing
 28171 ;; This function is called by:
 28172 ;;		_litterlanguage_pause
 28173 ;; This function uses a non-reentrant model
 28174 ;;
 28175                           psect	text3392
 28176                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28177                           	line	387
 28178                           	global	__size_of_get_Bowl
 28179  001E                     	__size_of_get_Bowl	equ	__end_of_get_Bowl-_get_Bowl
 28180                           	
 28181  29B7                     _get_Bowl:	
 28182                           	opt	stack 9
 28183                           ; Regs used in _get_Bowl: [wreg-fsr0h+status,2+status,0]
 28184                           	line	388
 28185                           	
 28186  29B7                     l36803:	
 28187                           ;catgenie120.c: 388: switch (LATD & ((1U << (4)) | (1U << (5)))) {
 28188  29B7  29BF               	goto	l36815
 28189                           	line	389
 28190                           ;catgenie120.c: 389: case (1U << (5)):
 28191                           	
 28192  29B8                     l10952:	
 28193                           	line	390
 28194                           	
 28195  29B8                     l36805:	
 28196                           ;catgenie120.c: 390: return (2);
 28197  29B8  3002               	movlw	(02h)
 28198  29B9  29D4               	goto	l10953
 28199                           	
 28200  29BA                     l36807:	
 28201  29BA  29D4               	goto	l10953
 28202                           	line	391
 28203                           ;catgenie120.c: 391: case (1U << (5)) | (1U << (4)):
 28204                           	
 28205  29BB                     l10954:	
 28206                           	line	392
 28207                           	
 28208  29BB                     l36809:	
 28209                           ;catgenie120.c: 392: return (1);
 28210  29BB  3001               	movlw	(01h)
 28211  29BC  29D4               	goto	l10953
 28212                           	
 28213  29BD                     l36811:	
 28214  29BD  29D4               	goto	l10953
 28215                           	line	393
 28216                           	
 28217  29BE                     l36813:	
 28218                           ;catgenie120.c: 393: }
 28219  29BE  29D2               	goto	l36817
 28220                           	line	388
 28221                           	
 28222  29BF                     l10951:	
 28223                           	
 28224  29BF                     l36815:	
 28225  29BF  0022               	movlb 2	; select bank2
 28226  29C0  080F               	movf	(271)^0100h,w	;volatile
 28227  29C1  3930               	andlw	030h
 28228  29C2  0020               	movlb 0	; select bank0
 28229  29C3  00A1               	movwf	(??_get_Bowl+0)+0
 28230  29C4  01A2               	clrf	(??_get_Bowl+0)+0+1
 28231                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 28232                           ; Switch size 1, requested type "space"
 28233                           ; Number of cases is 1, Range of values is 0 to 0
 28234                           ; switch strategies available:
 28235                           ; Name         Instructions Cycles
 28236                           ; simple_byte            4     3 (average)
 28237                           ; direct_byte            8     6 (fixed)
 28238                           ; jumptable            260     6 (fixed)
 28239                           ; rangetable             5     4 (fixed)
 28240                           ; spacedrange            7     6 (fixed)
 28241                           ; locatedrange           1     3 (fixed)
 28242                           ;	Chosen strategy is simple_byte
 28243                           
 28244  29C5  0822               	movf 1+(??_get_Bowl+0)+0,w
 28245                           	opt asmopt_off
 28246  29C6  3A00               	xorlw	0^0	; case 0
 28247  29C7  1903               	skipnz
 28248  29C8  29CA               	goto	l39253
 28249  29C9  29D2               	goto	l36817
 28250                           	opt asmopt_on
 28251                           	
 28252  29CA                     l39253:	
 28253                           ; Switch size 1, requested type "space"
 28254                           ; Number of cases is 2, Range of values is 32 to 48
 28255                           ; switch strategies available:
 28256                           ; Name         Instructions Cycles
 28257                           ; simple_byte            7     4 (average)
 28258                           ; direct_byte           43     9 (fixed)
 28259                           ; jumptable            263     9 (fixed)
 28260                           ;	Chosen strategy is simple_byte
 28261                           
 28262  29CA  0821               	movf 0+(??_get_Bowl+0)+0,w
 28263                           	opt asmopt_off
 28264  29CB  3A20               	xorlw	32^0	; case 32
 28265  29CC  1903               	skipnz
 28266  29CD  29B8               	goto	l36805
 28267  29CE  3A10               	xorlw	48^32	; case 48
 28268  29CF  1903               	skipnz
 28269  29D0  29BB               	goto	l36809
 28270  29D1  29D2               	goto	l36817
 28271                           	opt asmopt_on
 28272                           
 28273                           	line	393
 28274                           	
 28275  29D2                     l10955:	
 28276                           	line	394
 28277                           	
 28278  29D2                     l36817:	
 28279                           ;catgenie120.c: 394: return (0);
 28280  29D2  3000               	movlw	(0)
 28281  29D3  29D4               	goto	l10953
 28282                           	
 28283  29D4                     l36819:	
 28284                           	line	395
 28285                           	
 28286  29D4                     l10953:	
 28287  29D4  0008               	return
 28288                           	opt stack 0
 28289                           GLOBAL	__end_of_get_Bowl
 28290  29D5                     	__end_of_get_Bowl:
 28291 ;; =============== function _get_Bowl ends ============
 28292                           
 28293                           	signat	_get_Bowl,89
 28294                           	global	_litterlanguage_running
 28295                           psect	text3393,local,class=CODE,delta=2
 28296                           global __ptext3393
 28297  3723                     __ptext3393:
 28298                           
 28299 ;; *************** function _litterlanguage_running *****************
 28300 ;; Defined at:
 28301 ;;		line 252 in file "D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 28302 ;; Parameters:    Size  Location     Type
 28303 ;;		None
 28304 ;; Auto vars:     Size  Location     Type
 28305 ;;		None
 28306 ;; Return value:  Size  Location     Type
 28307 ;;                  1    wreg      unsigned char 
 28308 ;; Registers used:
 28309 ;;		wreg, status,2, status,0
 28310 ;; Tracked objects:
 28311 ;;		On entry : 0/0
 28312 ;;		On exit  : 0/0
 28313 ;;		Unchanged: 0/0
 28314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28319 ;;Total ram usage:        0 bytes
 28320 ;; Hardware stack levels used:    1
 28321 ;; Hardware stack levels required when called:    2
 28322 ;; This function calls:
 28323 ;;		Nothing
 28324 ;; This function is called by:
 28325 ;;		_userinterface_work
 28326 ;;		_start_short
 28327 ;;		_start_long
 28328 ;; This function uses a non-reentrant model
 28329 ;;
 28330                           psect	text3393
 28331                           	file	"D:\git\gibby\catgenius\software\catgenius\litterlanguage.c"
 28332                           	line	252
 28333                           	global	__size_of_litterlanguage_running
 28334  0007                     	__size_of_litterlanguage_running	equ	__end_of_litterlanguage_running-_litterlanguage_ru
                                 nning
 28335                           	
 28336  3723                     _litterlanguage_running:	
 28337                           	opt	stack 11
 28338                           ; Regs used in _litterlanguage_running: [wreg+status,2+status,0]
 28339                           	line	253
 28340                           	
 28341  3723                     l34063:	
 28342                           ;litterlanguage.c: 253: return (ins_state != 0);
 28343  3723  3000               	movlw	0
 28344  3724  0020               	movlb 0	; select bank0
 28345  3725  08E5               	movf	(_ins_state),f
 28346  3726  1D03               	skipz
 28347  3727  3001               	movlw	1
 28348  3728  2F29               	goto	l4284
 28349                           	
 28350  3729                     l34065:	
 28351                           	line	254
 28352                           	
 28353  3729                     l4284:	
 28354  3729  0008               	return
 28355                           	opt stack 0
 28356                           GLOBAL	__end_of_litterlanguage_running
 28357  372A                     	__end_of_litterlanguage_running:
 28358 ;; =============== function _litterlanguage_running ends ============
 28359                           
 28360                           	signat	_litterlanguage_running,89
 28361                           	global	_set_Dosage
 28362                           psect	text3394,local,class=CODE,delta=2
 28363                           global __ptext3394
 28364  37DE                     __ptext3394:
 28365                           
 28366 ;; *************** function _set_Dosage *****************
 28367 ;; Defined at:
 28368 ;;		line 430 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28369 ;; Parameters:    Size  Location     Type
 28370 ;;  on              1    wreg     unsigned char 
 28371 ;; Auto vars:     Size  Location     Type
 28372 ;;  on              1    1[BANK0 ] unsigned char 
 28373 ;; Return value:  Size  Location     Type
 28374 ;;		None               void
 28375 ;; Registers used:
 28376 ;;		wreg, status,2, status,0
 28377 ;; Tracked objects:
 28378 ;;		On entry : 0/0
 28379 ;;		On exit  : 0/0
 28380 ;;		Unchanged: 0/0
 28381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28386 ;;Total ram usage:        2 bytes
 28387 ;; Hardware stack levels used:    1
 28388 ;; Hardware stack levels required when called:    2
 28389 ;; This function calls:
 28390 ;;		Nothing
 28391 ;; This function is called by:
 28392 ;;		_litterlanguage_work
 28393 ;;		_litterlanguage_pause
 28394 ;;		_litterlanguage_stop
 28395 ;;		_exe_instruction
 28396 ;; This function uses a non-reentrant model
 28397 ;;
 28398                           psect	text3394
 28399                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28400                           	line	430
 28401                           	global	__size_of_set_Dosage
 28402  0011                     	__size_of_set_Dosage	equ	__end_of_set_Dosage-_set_Dosage
 28403                           	
 28404  37DE                     _set_Dosage:	
 28405                           	opt	stack 9
 28406                           ; Regs used in _set_Dosage: [wreg+status,2+status,0]
 28407                           ;set_Dosage@on stored from wreg
 28408  37DE  0020               	movlb 0	; select bank0
 28409  37DF  00A2               	movwf	(set_Dosage@on)
 28410                           	line	431
 28411                           	
 28412  37E0                     l36797:	
 28413                           ;catgenie120.c: 431: if (on)
 28414  37E0  0822               	movf	(set_Dosage@on),w
 28415  37E1  1D03               	skipz
 28416  37E2  2FE4               	goto	u9670
 28417  37E3  2FE7               	goto	l36801
 28418  37E4                     u9670:
 28419                           	line	432
 28420                           	
 28421  37E4                     l36799:	
 28422                           ;catgenie120.c: 432: LATD |= (1U << (3));
 28423  37E4  0022               	movlb 2	; select bank2
 28424  37E5  158F               	bsf	(271)^0100h+(3/8),(3)&7	;volatile
 28425  37E6  2FEE               	goto	l10976
 28426                           	line	433
 28427                           	
 28428  37E7                     l10974:	
 28429                           	line	434
 28430                           	
 28431  37E7                     l36801:	
 28432                           ;catgenie120.c: 433: else
 28433                           ;catgenie120.c: 434: LATD &= ~(1U << (3));
 28434  37E7  30F7               	movlw	(0F7h)
 28435  37E8  0020               	movlb 0	; select bank0
 28436  37E9  00A1               	movwf	(??_set_Dosage+0)+0
 28437  37EA  0821               	movf	(??_set_Dosage+0)+0,w
 28438  37EB  0022               	movlb 2	; select bank2
 28439  37EC  058F               	andwf	(271)^0100h,f	;volatile
 28440  37ED  2FEE               	goto	l10976
 28441                           	
 28442  37EE                     l10975:	
 28443                           	line	435
 28444                           	
 28445  37EE                     l10976:	
 28446  37EE  0008               	return
 28447                           	opt stack 0
 28448                           GLOBAL	__end_of_set_Dosage
 28449  37EF                     	__end_of_set_Dosage:
 28450 ;; =============== function _set_Dosage ends ============
 28451                           
 28452                           	signat	_set_Dosage,4216
 28453                           	global	_timeoutnever
 28454                           psect	text3395,local,class=CODE,delta=2
 28455                           global __ptext3395
 28456  2962                     __ptext3395:
 28457                           
 28458 ;; *************** function _timeoutnever *****************
 28459 ;; Defined at:
 28460 ;;		line 156 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28461 ;; Parameters:    Size  Location     Type
 28462 ;;  timer_p         2    4[BANK0 ] const PTR struct timer
 28463 ;;		 -> debouncer(6), debouncers(18), cattimer(6), autotimer(6), 
 28464 ;;		 -> holdtimeout(6), timer_autodose(6), timer_drain(6), timer_fill(6), 
 28465 ;;		 -> timer_waitins(6), 
 28466 ;; Auto vars:     Size  Location     Type
 28467 ;;		None
 28468 ;; Return value:  Size  Location     Type
 28469 ;;		None               void
 28470 ;; Registers used:
 28471 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28472 ;; Tracked objects:
 28473 ;;		On entry : 0/0
 28474 ;;		On exit  : 0/0
 28475 ;;		Unchanged: 0/0
 28476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28481 ;;Total ram usage:        4 bytes
 28482 ;; Hardware stack levels used:    1
 28483 ;; Hardware stack levels required when called:    2
 28484 ;; This function calls:
 28485 ;;		Nothing
 28486 ;; This function is called by:
 28487 ;;		_litterlanguage_work
 28488 ;;		_litterlanguage_pause
 28489 ;;		_litterlanguage_stop
 28490 ;;		_waterdetection_event
 28491 ;;		_exe_instruction
 28492 ;;		_wait_instruction
 28493 ;;		_userinterface_work
 28494 ;;		_catsensor_event
 28495 ;;		_process_button
 28496 ;;		_update_autotimer
 28497 ;;		_catgenie_work
 28498 ;;		_catsensor_work
 28499 ;; This function uses a non-reentrant model
 28500 ;;
 28501                           psect	text3395
 28502                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 28503                           	line	156
 28504                           	global	__size_of_timeoutnever
 28505  001C                     	__size_of_timeoutnever	equ	__end_of_timeoutnever-_timeoutnever
 28506                           	
 28507  2962                     _timeoutnever:	
 28508                           	opt	stack 11
 28509                           ; Regs used in _timeoutnever: [wreg+fsr1l-status,0]
 28510                           	line	157
 28511                           	
 28512  2962                     l36793:	
 28513                           ;timer.c: 157: timer_p->timer1 = 0xFFFF;
 28514  2962  0020               	movlb 0	; select bank0
 28515  2963  0825               	movf	(timeoutnever@timer_p),w
 28516  2964  0086               	movwf	fsr1l
 28517  2965  0826               	movf	(timeoutnever@timer_p+1),w
 28518  2966  0087               	movwf	fsr1h
 28519                           
 28520  2967  30FF               	movlw	low(0FFFFh)
 28521  2968  3FC0               	movwi	[0]fsr1
 28522  2969  30FF               	movlw	high(0FFFFh)
 28523  296A  3FC1               	movwi	[1]fsr1
 28524                           	line	158
 28525                           	
 28526  296B                     l36795:	
 28527                           ;timer.c: 158: timer_p->overflows = 0xFFFFFFFF;
 28528  296B  0825               	movf	(timeoutnever@timer_p),w
 28529  296C  3E02               	addlw	low(02h)
 28530  296D  00A7               	movwf	(??_timeoutnever+0)+0
 28531  296E  3000               	movlw	high(02h)
 28532  296F  3D26               	addwfc	(timeoutnever@timer_p+1),w
 28533  2970  00A8               	movwf	1+(??_timeoutnever+0)+0
 28534  2971  0827               	movf	0+(??_timeoutnever+0)+0,w
 28535  2972  0086               	movwf	fsr1l
 28536  2973  0828               	movf	1+(??_timeoutnever+0)+0,w
 28537  2974  0087               	movwf	fsr1h
 28538                           
 28539  2975  30FF               	movlw	0FFh
 28540  2976  3FC0               	movwi	[0]fsr1
 28541  2977  30FF               	movlw	0FFh
 28542  2978  3FC1               	movwi	[1]fsr1
 28543  2979  30FF               	movlw	0FFh
 28544  297A  3FC2               	movwi	[2]fsr1
 28545  297B  30FF               	movlw	0FFh
 28546  297C  3FC3               	movwi	[3]fsr1
 28547                           	line	159
 28548                           	
 28549  297D                     l21386:	
 28550  297D  0008               	return
 28551                           	opt stack 0
 28552                           GLOBAL	__end_of_timeoutnever
 28553  297E                     	__end_of_timeoutnever:
 28554 ;; =============== function _timeoutnever ends ============
 28555                           
 28556                           	signat	_timeoutnever,4216
 28557                           	global	_get_Pump
 28558                           psect	text3396,local,class=CODE,delta=2
 28559                           global __ptext3396
 28560  36F7                     __ptext3396:
 28561                           
 28562 ;; *************** function _get_Pump *****************
 28563 ;; Defined at:
 28564 ;;		line 454 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28565 ;; Parameters:    Size  Location     Type
 28566 ;;		None
 28567 ;; Auto vars:     Size  Location     Type
 28568 ;;		None
 28569 ;; Return value:  Size  Location     Type
 28570 ;;                  1    wreg      unsigned char 
 28571 ;; Registers used:
 28572 ;;		wreg, status,2
 28573 ;; Tracked objects:
 28574 ;;		On entry : 0/0
 28575 ;;		On exit  : 0/0
 28576 ;;		Unchanged: 0/0
 28577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28582 ;;Total ram usage:        0 bytes
 28583 ;; Hardware stack levels used:    1
 28584 ;; Hardware stack levels required when called:    2
 28585 ;; This function calls:
 28586 ;;		Nothing
 28587 ;; This function is called by:
 28588 ;;		_litterlanguage_work
 28589 ;;		_litterlanguage_pause
 28590 ;; This function uses a non-reentrant model
 28591 ;;
 28592                           psect	text3396
 28593                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catgenie120.c"
 28594                           	line	454
 28595                           	global	__size_of_get_Pump
 28596  0005                     	__size_of_get_Pump	equ	__end_of_get_Pump-_get_Pump
 28597                           	
 28598  36F7                     _get_Pump:	
 28599                           	opt	stack 9
 28600                           ; Regs used in _get_Pump: [wreg+status,2]
 28601                           	line	455
 28602                           	
 28603  36F7                     l36789:	
 28604                           ;catgenie120.c: 455: return (LATD & (1U << (1)));
 28605  36F7  0022               	movlb 2	; select bank2
 28606  36F8  080F               	movf	(271)^0100h,w	;volatile
 28607  36F9  3902               	andlw	02h
 28608  36FA  2EFB               	goto	l10987
 28609                           	
 28610  36FB                     l36791:	
 28611                           	line	456
 28612                           	
 28613  36FB                     l10987:	
 28614  36FB  0008               	return
 28615                           	opt stack 0
 28616                           GLOBAL	__end_of_get_Pump
 28617  36FC                     	__end_of_get_Pump:
 28618 ;; =============== function _get_Pump ends ============
 28619                           
 28620                           	signat	_get_Pump,89
 28621                           	global	_water_filling
 28622                           psect	text3397,local,class=CODE,delta=2
 28623                           global __ptext3397
 28624  3711                     __ptext3397:
 28625                           
 28626 ;; *************** function _water_filling *****************
 28627 ;; Defined at:
 28628 ;;		line 210 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28629 ;; Parameters:    Size  Location     Type
 28630 ;;		None
 28631 ;; Auto vars:     Size  Location     Type
 28632 ;;		None
 28633 ;; Return value:  Size  Location     Type
 28634 ;;                  1    wreg      unsigned char 
 28635 ;; Registers used:
 28636 ;;		wreg
 28637 ;; Tracked objects:
 28638 ;;		On entry : 0/0
 28639 ;;		On exit  : 0/0
 28640 ;;		Unchanged: 0/0
 28641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28646 ;;Total ram usage:        0 bytes
 28647 ;; Hardware stack levels used:    1
 28648 ;; Hardware stack levels required when called:    2
 28649 ;; This function calls:
 28650 ;;		Nothing
 28651 ;; This function is called by:
 28652 ;;		_litterlanguage_work
 28653 ;;		_litterlanguage_pause
 28654 ;; This function uses a non-reentrant model
 28655 ;;
 28656                           psect	text3397
 28657                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28658                           	line	210
 28659                           	global	__size_of_water_filling
 28660  0006                     	__size_of_water_filling	equ	__end_of_water_filling-_water_filling
 28661                           	
 28662  3711                     _water_filling:	
 28663                           	opt	stack 9
 28664                           ; Regs used in _water_filling: [wreg]
 28665                           	line	211
 28666                           	
 28667  3711                     l36785:	
 28668                           ;water.c: 211: return (filling);
 28669  3711  3000               	movlw	0
 28670  3712  0020               	movlb 0	; select bank0
 28671  3713  19ED               	btfsc	(_filling/8),(_filling)&7
 28672  3714  3001               	movlw	1
 28673  3715  2F16               	goto	l23505
 28674                           	
 28675  3716                     l36787:	
 28676                           	line	212
 28677                           	
 28678  3716                     l23505:	
 28679  3716  0008               	return
 28680                           	opt stack 0
 28681                           GLOBAL	__end_of_water_filling
 28682  3717                     	__end_of_water_filling:
 28683 ;; =============== function _water_filling ends ============
 28684                           
 28685                           	signat	_water_filling,89
 28686                           	global	_water_detected
 28687                           psect	text3398,local,class=CODE,delta=2
 28688                           global __ptext3398
 28689  370B                     __ptext3398:
 28690                           
 28691 ;; *************** function _water_detected *****************
 28692 ;; Defined at:
 28693 ;;		line 196 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28694 ;; Parameters:    Size  Location     Type
 28695 ;;		None
 28696 ;; Auto vars:     Size  Location     Type
 28697 ;;		None
 28698 ;; Return value:  Size  Location     Type
 28699 ;;                  1    wreg      unsigned char 
 28700 ;; Registers used:
 28701 ;;		wreg
 28702 ;; Tracked objects:
 28703 ;;		On entry : 0/0
 28704 ;;		On exit  : 0/0
 28705 ;;		Unchanged: 0/0
 28706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28711 ;;Total ram usage:        0 bytes
 28712 ;; Hardware stack levels used:    1
 28713 ;; Hardware stack levels required when called:    2
 28714 ;; This function calls:
 28715 ;;		Nothing
 28716 ;; This function is called by:
 28717 ;;		_litterlanguage_work
 28718 ;;		_exe_instruction
 28719 ;;		_wait_instruction
 28720 ;; This function uses a non-reentrant model
 28721 ;;
 28722                           psect	text3398
 28723                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 28724                           	line	196
 28725                           	global	__size_of_water_detected
 28726  0006                     	__size_of_water_detected	equ	__end_of_water_detected-_water_detected
 28727                           	
 28728  370B                     _water_detected:	
 28729                           	opt	stack 11
 28730                           ; Regs used in _water_detected: [wreg]
 28731                           	line	197
 28732                           	
 28733  370B                     l36781:	
 28734                           ;water.c: 197: return (detected);
 28735  370B  3000               	movlw	0
 28736  370C  0020               	movlb 0	; select bank0
 28737  370D  186D               	btfsc	(_detected/8),(_detected)&7
 28738  370E  3001               	movlw	1
 28739  370F  2F10               	goto	l23499
 28740                           	
 28741  3710                     l36783:	
 28742                           	line	198
 28743                           	
 28744  3710                     l23499:	
 28745  3710  0008               	return
 28746                           	opt stack 0
 28747                           GLOBAL	__end_of_water_detected
 28748  3711                     	__end_of_water_detected:
 28749 ;; =============== function _water_detected ends ============
 28750                           
 28751                           	signat	_water_detected,89
 28752                           	global	_eeprom_read
 28753                           psect	text3399,local,class=CODE,delta=2
 28754                           global __ptext3399
 28755  2A33                     __ptext3399:
 28756                           
 28757 ;; *************** function _eeprom_read *****************
 28758 ;; Defined at:
 28759 ;;		line 7 in file "eeread.c"
 28760 ;; Parameters:    Size  Location     Type
 28761 ;;  addr            1    wreg     unsigned char 
 28762 ;; Auto vars:     Size  Location     Type
 28763 ;;  addr            1    3[BANK0 ] unsigned char 
 28764 ;; Return value:  Size  Location     Type
 28765 ;;                  1    wreg      unsigned char 
 28766 ;; Registers used:
 28767 ;;		wreg, status,2, status,0
 28768 ;; Tracked objects:
 28769 ;;		On entry : 0/0
 28770 ;;		On exit  : 0/0
 28771 ;;		Unchanged: 0/0
 28772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28775 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 28776 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28777 ;;Total ram usage:        4 bytes
 28778 ;; Hardware stack levels used:    1
 28779 ;; Hardware stack levels required when called:    2
 28780 ;; This function calls:
 28781 ;;		Nothing
 28782 ;; This function is called by:
 28783 ;;		_litterlanguage_init
 28784 ;;		_litterlanguage_work
 28785 ;;		_exe_instruction
 28786 ;;		_userinterface_init
 28787 ;; This function uses a non-reentrant model
 28788 ;;
 28789                           psect	text3399
 28790                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eeread.c"
 28791                           	line	7
 28792                           	global	__size_of_eeprom_read
 28793  0023                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
 28794                           	
 28795  2A33                     _eeprom_read:	
 28796                           	opt	stack 11
 28797                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
 28798                           ;eeprom_read@addr stored from wreg
 28799                           	line	9
 28800  2A33  0020               	movlb 0	; select bank0
 28801  2A34  00A4               	movwf	(eeprom_read@addr)
 28802                           	line	8
 28803                           	
 28804  2A35                     l25406:	
 28805                           	line	9
 28806                           # 9 "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eeread.c"
 28807  2A35  0064               clrwdt ;#
 28808                           psect	text3399
 28809                           	line	10
 28810  2A36  0023               	movlb 3	; select bank3
 28811  2A37  1895               	btfsc	(3241/8)^0180h,(3241)&7
 28812  2A38  2A3A               	goto	u9661
 28813  2A39  2A3B               	goto	u9660
 28814  2A3A                     u9661:
 28815  2A3A  2A35               	goto	l25406
 28816  2A3B                     u9660:
 28817  2A3B  2A3C               	goto	l36777
 28818                           	
 28819  2A3C                     l25407:	
 28820                           	line	11
 28821                           	
 28822  2A3C                     l36777:	
 28823  2A3C  0020               	movlb 0	; select bank0
 28824  2A3D  0824               	movf	(eeprom_read@addr),w
 28825  2A3E  00A1               	movwf	(??_eeprom_read+0)+0
 28826  2A3F  01A2               	clrf	(??_eeprom_read+0)+0+1
 28827  2A40  0821               	movf	0+(??_eeprom_read+0)+0,w
 28828  2A41  0023               	movlb 3	; select bank3
 28829  2A42  0091               	movwf	(401)^0180h	;volatile
 28830  2A43  0020               	movlb 0	; select bank0
 28831  2A44  0822               	movf	1+(??_eeprom_read+0)+0,w
 28832  2A45  0023               	movlb 3	; select bank3
 28833  2A46  0092               	movwf	(401+1)^0180h	;volatile
 28834  2A47  303F               	movlw	(03Fh)
 28835  2A48  0020               	movlb 0	; select bank0
 28836  2A49  00A3               	movwf	(??_eeprom_read+2)+0
 28837  2A4A  0823               	movf	(??_eeprom_read+2)+0,w
 28838  2A4B  0023               	movlb 3	; select bank3
 28839  2A4C  0595               	andwf	(405)^0180h,f	;volatile
 28840  2A4D  1415               	bsf	(3240/8)^0180h,(3240)&7
 28841  2A4E  1003               	clrc
 28842  2A4F  1815               	btfsc	(3240/8)^0180h,(3240)&7
 28843  2A50  1403               	setc
 28844  2A51  3000               	movlw	0
 28845  2A52  3D09               	addwfc	wreg,w
 28846  2A53  0813               	movf	(403)^0180h,w	;volatile
 28847  2A54  2A55               	goto	l25408
 28848                           	
 28849  2A55                     l36779:	
 28850                           	line	12
 28851                           	
 28852  2A55                     l25408:	
 28853  2A55  0008               	return
 28854                           	opt stack 0
 28855                           GLOBAL	__end_of_eeprom_read
 28856  2A56                     	__end_of_eeprom_read:
 28857 ;; =============== function _eeprom_read ends ============
 28858                           
 28859                           	signat	_eeprom_read,4217
 28860                           	global	_eeprom_write
 28861                           psect	text3400,local,class=CODE,delta=2
 28862                           global __ptext3400
 28863  2BF5                     __ptext3400:
 28864                           
 28865 ;; *************** function _eeprom_write *****************
 28866 ;; Defined at:
 28867 ;;		line 7 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eewrite.c"
 28868 ;; Parameters:    Size  Location     Type
 28869 ;;  addr            1    wreg     unsigned char 
 28870 ;;  value           1    0[BANK0 ] unsigned char 
 28871 ;; Auto vars:     Size  Location     Type
 28872 ;;  addr            1    3[BANK0 ] unsigned char 
 28873 ;; Return value:  Size  Location     Type
 28874 ;;                  1    wreg      unsigned char 
 28875 ;; Registers used:
 28876 ;;		wreg, status,2, status,0
 28877 ;; Tracked objects:
 28878 ;;		On entry : 0/0
 28879 ;;		On exit  : 0/0
 28880 ;;		Unchanged: 0/0
 28881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28882 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28885 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28886 ;;Total ram usage:        4 bytes
 28887 ;; Hardware stack levels used:    1
 28888 ;; Hardware stack levels required when called:    2
 28889 ;; This function calls:
 28890 ;;		Nothing
 28891 ;; This function is called by:
 28892 ;;		_litterlanguage_init
 28893 ;;		_litterlanguage_work
 28894 ;;		_exe_instruction
 28895 ;;		_userinterface_init
 28896 ;;		_set_mode
 28897 ;;		_both_long
 28898 ;; This function uses a non-reentrant model
 28899 ;;
 28900                           psect	text3400
 28901                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\eewrite.c"
 28902                           	line	7
 28903                           	global	__size_of_eeprom_write
 28904  0037                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
 28905                           	
 28906  2BF5                     _eeprom_write:	
 28907                           	opt	stack 11
 28908                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
 28909                           ;eeprom_write@addr stored from wreg
 28910  2BF5  0020               	movlb 0	; select bank0
 28911  2BF6  00A4               	movwf	(eeprom_write@addr)
 28912                           	line	8
 28913                           	
 28914  2BF7                     l27205:	
 28915  2BF7  2BF8               	goto	l27206
 28916                           	
 28917  2BF8                     l27207:	
 28918                           	
 28919  2BF8                     l27206:	
 28920  2BF8  0023               	movlb 3	; select bank3
 28921  2BF9  1895               	btfsc	(3241/8)^0180h,(3241)&7
 28922  2BFA  2BFC               	goto	u9631
 28923  2BFB  2BFD               	goto	u9630
 28924  2BFC                     u9631:
 28925  2BFC  2BF8               	goto	l27206
 28926  2BFD                     u9630:
 28927  2BFD  2BFE               	goto	l36757
 28928                           	
 28929  2BFE                     l27208:	
 28930                           	
 28931  2BFE                     l36757:	
 28932  2BFE  0020               	movlb 0	; select bank0
 28933  2BFF  0824               	movf	(eeprom_write@addr),w
 28934  2C00  00A2               	movwf	(??_eeprom_write+0)+0
 28935  2C01  01A3               	clrf	(??_eeprom_write+0)+0+1
 28936  2C02  0822               	movf	0+(??_eeprom_write+0)+0,w
 28937  2C03  0023               	movlb 3	; select bank3
 28938  2C04  0091               	movwf	(401)^0180h	;volatile
 28939  2C05  0020               	movlb 0	; select bank0
 28940  2C06  0823               	movf	1+(??_eeprom_write+0)+0,w
 28941  2C07  0023               	movlb 3	; select bank3
 28942  2C08  0092               	movwf	(401+1)^0180h	;volatile
 28943  2C09  0020               	movlb 0	; select bank0
 28944  2C0A  0821               	movf	(eeprom_write@value),w
 28945  2C0B  0023               	movlb 3	; select bank3
 28946  2C0C  0093               	movwf	(403)^0180h	;volatile
 28947                           	
 28948  2C0D                     l36759:	
 28949  2C0D  303F               	movlw	(03Fh)
 28950  2C0E  0020               	movlb 0	; select bank0
 28951  2C0F  00A2               	movwf	(??_eeprom_write+0)+0
 28952  2C10  0822               	movf	(??_eeprom_write+0)+0,w
 28953  2C11  0023               	movlb 3	; select bank3
 28954  2C12  0595               	andwf	(405)^0180h,f	;volatile
 28955                           	
 28956  2C13                     l36761:	
 28957  2C13  0020               	movlb 0	; select bank0
 28958  2C14  1003               	bcf	(24/8),(24)&7
 28959                           	
 28960  2C15                     l36763:	
 28961  2C15  1F8B               	btfss	(95/8),(95)&7
 28962  2C16  2C18               	goto	u9641
 28963  2C17  2C19               	goto	u9640
 28964  2C18                     u9641:
 28965  2C18  2C1A               	goto	l27209
 28966  2C19                     u9640:
 28967                           	
 28968  2C19                     l36765:	
 28969  2C19  1403               	bsf	(24/8),(24)&7
 28970                           	
 28971  2C1A                     l27209:	
 28972  2C1A  138B               	bcf	(95/8),(95)&7
 28973  2C1B  0023               	movlb 3	; select bank3
 28974  2C1C  1515               	bsf	(3242/8)^0180h,(3242)&7
 28975                           	
 28976  2C1D                     l36767:	
 28977  2C1D  3055               	movlw	(055h)
 28978  2C1E  0096               	movwf	(406)^0180h	;volatile
 28979  2C1F  30AA               	movlw	(0AAh)
 28980  2C20  0096               	movwf	(406)^0180h	;volatile
 28981                           	
 28982  2C21                     l36769:	
 28983  2C21  1495               	bsf	(3241/8)^0180h,(3241)&7
 28984                           	
 28985  2C22                     l36771:	
 28986  2C22  1115               	bcf	(3242/8)^0180h,(3242)&7
 28987                           	
 28988  2C23                     l36773:	
 28989  2C23  0020               	movlb 0	; select bank0
 28990  2C24  1C03               	btfss	(24/8),(24)&7
 28991  2C25  2C27               	goto	u9651
 28992  2C26  2C28               	goto	u9650
 28993  2C27                     u9651:
 28994  2C27  2C2B               	goto	l27212
 28995  2C28                     u9650:
 28996                           	
 28997  2C28                     l36775:	
 28998  2C28  178B               	bsf	(95/8),(95)&7
 28999  2C29  2C2B               	goto	l27212
 29000                           	
 29001  2C2A                     l27210:	
 29002  2C2A  2C2B               	goto	l27212
 29003                           	
 29004  2C2B                     l27211:	
 29005                           	line	10
 29006                           ;	Return value of _eeprom_write is never used
 29007                           	
 29008  2C2B                     l27212:	
 29009  2C2B  0008               	return
 29010                           	opt stack 0
 29011                           GLOBAL	__end_of_eeprom_write
 29012  2C2C                     	__end_of_eeprom_write:
 29013 ;; =============== function _eeprom_write ends ============
 29014                           
 29015                           	signat	_eeprom_write,8313
 29016                           	global	_interrupt_init
 29017                           psect	text3401,local,class=CODE,delta=2
 29018                           global __ptext3401
 29019  372A                     __ptext3401:
 29020                           
 29021 ;; *************** function _interrupt_init *****************
 29022 ;; Defined at:
 29023 ;;		line 174 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 29024 ;; Parameters:    Size  Location     Type
 29025 ;;		None
 29026 ;; Auto vars:     Size  Location     Type
 29027 ;;		None
 29028 ;; Return value:  Size  Location     Type
 29029 ;;		None               void
 29030 ;; Registers used:
 29031 ;;		wreg
 29032 ;; Tracked objects:
 29033 ;;		On entry : 0/0
 29034 ;;		On exit  : 0/0
 29035 ;;		Unchanged: 0/0
 29036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29040 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29041 ;;Total ram usage:        1 bytes
 29042 ;; Hardware stack levels used:    1
 29043 ;; Hardware stack levels required when called:    2
 29044 ;; This function calls:
 29045 ;;		Nothing
 29046 ;; This function is called by:
 29047 ;;		_main
 29048 ;; This function uses a non-reentrant model
 29049 ;;
 29050                           psect	text3401
 29051                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 29052                           	line	174
 29053                           	global	__size_of_interrupt_init
 29054  0009                     	__size_of_interrupt_init	equ	__end_of_interrupt_init-_interrupt_init
 29055                           	
 29056  372A                     _interrupt_init:	
 29057                           	opt	stack 13
 29058                           ; Regs used in _interrupt_init: [wreg]
 29059                           	line	175
 29060                           	
 29061  372A                     l33903:	
 29062                           ;catgenius.c: 175: PORTB_old = PORTB;
 29063  372A  0020               	movlb 0	; select bank0
 29064  372B  080D               	movf	(13),w	;volatile
 29065  372C  00A1               	movwf	(??_interrupt_init+0)+0
 29066  372D  0821               	movf	(??_interrupt_init+0)+0,w
 29067  372E  0021               	movlb 1	; select bank1
 29068  372F  00D4               	movwf	(_PORTB_old)^080h
 29069                           	line	178
 29070                           	
 29071  3730                     l33905:	
 29072                           ;catgenius.c: 178: PEIE = 1;
 29073  3730  170B               	bsf	(94/8),(94)&7
 29074                           	line	181
 29075                           	
 29076  3731                     l33907:	
 29077                           ;catgenius.c: 181: GIE = 1;
 29078  3731  178B               	bsf	(95/8),(95)&7
 29079                           	line	182
 29080                           	
 29081  3732                     l2096:	
 29082  3732  0008               	return
 29083                           	opt stack 0
 29084                           GLOBAL	__end_of_interrupt_init
 29085  3733                     	__end_of_interrupt_init:
 29086 ;; =============== function _interrupt_init ends ============
 29087                           
 29088                           	signat	_interrupt_init,88
 29089                           	global	_water_init
 29090                           psect	text3402,local,class=CODE,delta=2
 29091                           global __ptext3402
 29092  1003                     __ptext3402:
 29093                           
 29094 ;; *************** function _water_init *****************
 29095 ;; Defined at:
 29096 ;;		line 89 in file "D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 29097 ;; Parameters:    Size  Location     Type
 29098 ;;		None
 29099 ;; Auto vars:     Size  Location     Type
 29100 ;;  channel         1    2[BANK0 ] unsigned char 
 29101 ;;  mask            1    1[BANK0 ] unsigned char 
 29102 ;; Return value:  Size  Location     Type
 29103 ;;		None               void
 29104 ;; Registers used:
 29105 ;;		wreg, status,2, status,0
 29106 ;; Tracked objects:
 29107 ;;		On entry : 0/0
 29108 ;;		On exit  : 0/0
 29109 ;;		Unchanged: 0/0
 29110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29114 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 29115 ;;Total ram usage:        3 bytes
 29116 ;; Hardware stack levels used:    1
 29117 ;; Hardware stack levels required when called:    2
 29118 ;; This function calls:
 29119 ;;		Nothing
 29120 ;; This function is called by:
 29121 ;;		_main
 29122 ;; This function uses a non-reentrant model
 29123 ;;
 29124                           psect	text3402
 29125                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\water.c"
 29126                           	line	89
 29127                           	global	__size_of_water_init
 29128  0028                     	__size_of_water_init	equ	__end_of_water_init-_water_init
 29129                           	
 29130  1003                     _water_init:	
 29131                           	opt	stack 13
 29132                           ; Regs used in _water_init: [wreg+status,2+status,0]
 29133                           	line	91
 29134                           	
 29135  1003                     l33887:	
 29136                           ;water.c: 91: unsigned char mask = (1U << (1));
 29137  1003  3002               	movlw	(02h)
 29138  1004  0020               	movlb 0	; select bank0
 29139  1005  00A1               	movwf	(??_water_init+0)+0
 29140  1006  0821               	movf	(??_water_init+0)+0,w
 29141  1007  00A2               	movwf	(water_init@mask)
 29142                           	line	92
 29143                           	
 29144  1008                     l33889:	
 29145                           ;water.c: 92: unsigned char channel = 0;
 29146  1008  01A3               	clrf	(water_init@channel)
 29147                           	line	95
 29148                           ;water.c: 95: while (!(mask & 0x01)) {
 29149  1009  2811               	goto	l33895
 29150                           	
 29151  100A                     l23472:	
 29152                           	line	96
 29153                           	
 29154  100A                     l33891:	
 29155                           ;water.c: 96: mask >>= 0x01;
 29156  100A  1003               	clrc
 29157  100B  0CA2               	rrf	(water_init@mask),f
 29158                           
 29159                           	line	97
 29160                           	
 29161  100C                     l33893:	
 29162                           ;water.c: 97: channel ++;
 29163  100C  3001               	movlw	(01h)
 29164  100D  00A1               	movwf	(??_water_init+0)+0
 29165  100E  0821               	movf	(??_water_init+0)+0,w
 29166  100F  07A3               	addwf	(water_init@channel),f
 29167  1010  2811               	goto	l33895
 29168                           	line	98
 29169                           	
 29170  1011                     l23471:	
 29171                           	line	95
 29172                           	
 29173  1011                     l33895:	
 29174  1011  1C22               	btfss	(water_init@mask),(0)&7
 29175  1012  2814               	goto	u5751
 29176  1013  2815               	goto	u5750
 29177  1014                     u5751:
 29178  1014  280A               	goto	l33891
 29179  1015                     u5750:
 29180                           	
 29181  1015                     l23473:	
 29182                           	line	101
 29183                           ;water.c: 98: }
 29184                           ;water.c: 101: ADCON0bits.ADON = 1;
 29185  1015  0021               	movlb 1	; select bank1
 29186  1016  141D               	bsf	(157)^080h,0	;volatile
 29187                           	line	103
 29188                           	
 29189  1017                     l33897:	
 29190                           ;water.c: 103: ADCON0bits.CHS = channel;
 29191  1017  0020               	movlb 0	; select bank0
 29192  1018  0823               	movf	(water_init@channel),w
 29193  1019  00A1               	movwf	(??_water_init+0)+0
 29194  101A  0DA1               	rlf	(??_water_init+0)+0,f
 29195  101B  0DA1               	rlf	(??_water_init+0)+0,f
 29196  101C  0021               	movlb 1	; select bank1
 29197  101D  081D               	movf	(157)^080h,w	;volatile
 29198  101E  0020               	movlb 0	; select bank0
 29199  101F  0621               	xorwf	(??_water_init+0)+0,w
 29200  1020  3983               	andlw	not (((1<<5)-1)<<2)
 29201  1021  0621               	xorwf	(??_water_init+0)+0,w
 29202  1022  0021               	movlb 1	; select bank1
 29203  1023  009D               	movwf	(157)^080h	;volatile
 29204                           	line	106
 29205                           	
 29206  1024                     l33899:	
 29207                           ;water.c: 106: ADCON1bits.ADFM = 1;
 29208  1024  179E               	bsf	(158)^080h,7	;volatile
 29209                           	line	108
 29210                           ;water.c: 108: ADCON1bits.ADCS = 7;
 29211  1025  3070               	movlw	(07h & ((1<<3)-1))<<4
 29212  1026  049E               	iorwf	(158)^080h,f	;volatile
 29213                           	line	111
 29214                           	
 29215  1027                     l33901:	
 29216                           ;water.c: 111: ADCON1bits.ADNREF = 0;
 29217  1027  111E               	bcf	(158)^080h,2	;volatile
 29218                           	line	112
 29219                           ;water.c: 112: ADCON1bits.ADPREF = 0;
 29220  1028  30FC               	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
 29221  1029  059E               	andwf	(158)^080h,f	;volatile
 29222                           	line	114
 29223                           	
 29224  102A                     l23474:	
 29225  102A  0008               	return
 29226                           	opt stack 0
 29227                           GLOBAL	__end_of_water_init
 29228  102B                     	__end_of_water_init:
 29229 ;; =============== function _water_init ends ============
 29230                           
 29231                           	signat	_water_init,88
 29232                           	global	_catsensor_init
 29233                           psect	text3403,local,class=CODE,delta=2
 29234                           global __ptext3403
 29235  3774                     __ptext3403:
 29236                           
 29237 ;; *************** function _catsensor_init *****************
 29238 ;; Defined at:
 29239 ;;		line 56 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29240 ;; Parameters:    Size  Location     Type
 29241 ;;		None
 29242 ;; Auto vars:     Size  Location     Type
 29243 ;;		None
 29244 ;; Return value:  Size  Location     Type
 29245 ;;		None               void
 29246 ;; Registers used:
 29247 ;;		wreg
 29248 ;; Tracked objects:
 29249 ;;		On entry : 0/0
 29250 ;;		On exit  : 0/0
 29251 ;;		Unchanged: 0/0
 29252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29257 ;;Total ram usage:        0 bytes
 29258 ;; Hardware stack levels used:    1
 29259 ;; Hardware stack levels required when called:    2
 29260 ;; This function calls:
 29261 ;;		Nothing
 29262 ;; This function is called by:
 29263 ;;		_main
 29264 ;; This function uses a non-reentrant model
 29265 ;;
 29266                           psect	text3403
 29267                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 29268                           	line	56
 29269                           	global	__size_of_catsensor_init
 29270  000F                     	__size_of_catsensor_init	equ	__end_of_catsensor_init-_catsensor_init
 29271                           	
 29272  3774                     _catsensor_init:	
 29273                           	opt	stack 13
 29274                           ; Regs used in _catsensor_init: [wreg]
 29275                           	line	61
 29276                           	
 29277  3774                     l33881:	
 29278                           ;catsensor.c: 61: PR2 = 0x54 ;
 29279  3774  3054               	movlw	(054h)
 29280  3775  0020               	movlb 0	; select bank0
 29281  3776  009B               	movwf	(27)	;volatile
 29282                           	line	65
 29283                           ;catsensor.c: 65: T2CON = 0x7D ;
 29284  3777  307D               	movlw	(07Dh)
 29285  3778  009C               	movwf	(28)	;volatile
 29286                           	line	67
 29287                           ;catsensor.c: 67: CCPR1L = 0x2A ;
 29288  3779  302A               	movlw	(02Ah)
 29289  377A  0025               	movlb 5	; select bank5
 29290  377B  0091               	movwf	(657)^0280h	;volatile
 29291                           	line	70
 29292                           ;catsensor.c: 70: CCP1CON = 0x1F ;
 29293  377C  301F               	movlw	(01Fh)
 29294  377D  0093               	movwf	(659)^0280h	;volatile
 29295                           	line	72
 29296                           	
 29297  377E                     l33883:	
 29298                           ;catsensor.c: 72: TMR2IF = 0;
 29299  377E  0020               	movlb 0	; select bank0
 29300  377F  1091               	bcf	(137/8),(137)&7
 29301                           	line	74
 29302                           	
 29303  3780                     l33885:	
 29304                           ;catsensor.c: 74: TMR2IE = 1;
 29305  3780  0021               	movlb 1	; select bank1
 29306  3781  1491               	bsf	(1161/8)^080h,(1161)&7
 29307                           	line	75
 29308                           	
 29309  3782                     l13048:	
 29310  3782  0008               	return
 29311                           	opt stack 0
 29312                           GLOBAL	__end_of_catsensor_init
 29313  3783                     	__end_of_catsensor_init:
 29314 ;; =============== function _catsensor_init ends ============
 29315                           
 29316                           	signat	_catsensor_init,88
 29317                           	global	_timer_init
 29318                           psect	text3404,local,class=CODE,delta=2
 29319                           global __ptext3404
 29320  3733                     __ptext3404:
 29321                           
 29322 ;; *************** function _timer_init *****************
 29323 ;; Defined at:
 29324 ;;		line 47 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 29325 ;; Parameters:    Size  Location     Type
 29326 ;;		None
 29327 ;; Auto vars:     Size  Location     Type
 29328 ;;		None
 29329 ;; Return value:  Size  Location     Type
 29330 ;;		None               void
 29331 ;; Registers used:
 29332 ;;		None
 29333 ;; Tracked objects:
 29334 ;;		On entry : 0/0
 29335 ;;		On exit  : 0/0
 29336 ;;		Unchanged: 0/0
 29337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29342 ;;Total ram usage:        0 bytes
 29343 ;; Hardware stack levels used:    1
 29344 ;; Hardware stack levels required when called:    2
 29345 ;; This function calls:
 29346 ;;		Nothing
 29347 ;; This function is called by:
 29348 ;;		_main
 29349 ;; This function uses a non-reentrant model
 29350 ;;
 29351                           psect	text3404
 29352                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 29353                           	line	47
 29354                           	global	__size_of_timer_init
 29355  000B                     	__size_of_timer_init	equ	__end_of_timer_init-_timer_init
 29356                           	
 29357  3733                     _timer_init:	
 29358                           	opt	stack 13
 29359                           ; Regs used in _timer_init: []
 29360                           	line	56
 29361                           	
 29362  3733                     l33879:	
 29363                           ;timer.c: 56: TMR1CS0 = 0;
 29364  3733  0020               	movlb 0	; select bank0
 29365  3734  1318               	bcf	(198/8),(198)&7
 29366                           	line	57
 29367                           ;timer.c: 57: TMR1CS1 = 0;
 29368  3735  1398               	bcf	(199/8),(199)&7
 29369                           	line	60
 29370                           ;timer.c: 60: T1CKPS1 = 1;
 29371  3736  1698               	bsf	(197/8),(197)&7
 29372                           	line	61
 29373                           ;timer.c: 61: T1CKPS0 = 1;
 29374  3737  1618               	bsf	(196/8),(196)&7
 29375                           	line	63
 29376                           ;timer.c: 63: T1OSCEN = 0;
 29377  3738  1198               	bcf	(195/8),(195)&7
 29378                           	line	65
 29379                           ;timer.c: 65: nT1SYNC = 1;
 29380  3739  1518               	bsf	(194/8),(194)&7
 29381                           	line	67
 29382                           ;timer.c: 67: TMR1ON = 1;
 29383  373A  1418               	bsf	(192/8),(192)&7
 29384                           	line	69
 29385                           ;timer.c: 69: TMR1IE = 1;
 29386  373B  0021               	movlb 1	; select bank1
 29387  373C  1411               	bsf	(1160/8)^080h,(1160)&7
 29388                           	line	70
 29389                           	
 29390  373D                     l21370:	
 29391  373D  0008               	return
 29392                           	opt stack 0
 29393                           GLOBAL	__end_of_timer_init
 29394  373E                     	__end_of_timer_init:
 29395 ;; =============== function _timer_init ends ============
 29396                           
 29397                           	signat	_timer_init,88
 29398                           	global	_isr
 29399                           psect	intentry,class=CODE,delta=2
 29400                           global __pintentry
 29401  0004                     __pintentry:
 29402                           
 29403 ;; *************** function _isr *****************
 29404 ;; Defined at:
 29405 ;;		line 185 in file "D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 29406 ;; Parameters:    Size  Location     Type
 29407 ;;		None
 29408 ;; Auto vars:     Size  Location     Type
 29409 ;;  temp            1   11[COMMON] unsigned char 
 29410 ;; Return value:  Size  Location     Type
 29411 ;;		None               void
 29412 ;; Registers used:
 29413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 29414 ;; Tracked objects:
 29415 ;;		On entry : 0/0
 29416 ;;		On exit  : 0/0
 29417 ;;		Unchanged: 0/0
 29418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29422 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29423 ;;Total ram usage:        3 bytes
 29424 ;; Hardware stack levels used:    1
 29425 ;; Hardware stack levels required when called:    1
 29426 ;; This function calls:
 29427 ;;		_timer_isr
 29428 ;;		_catsensor_isr_timer
 29429 ;;		_catsensor_isr_input
 29430 ;;		_serial_rx_isr
 29431 ;;		_serial_tx_isr
 29432 ;; This function is called by:
 29433 ;;		Interrupt level 1
 29434 ;; This function uses a non-reentrant model
 29435 ;;
 29436                           psect	intentry
 29437                           	file	"D:\git\gibby\catgenius\software\catgenius\catgenius.c"
 29438                           	line	185
 29439                           	global	__size_of_isr
 29440  004A                     	__size_of_isr	equ	__end_of_isr-_isr
 29441                           	
 29442  0004                     _isr:	
 29443                           	opt	stack 1
 29444                           ; Regs used in _isr: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 29445                           psect	intentry
 29446  0004  3180               	pagesel	$
 29447  0005  0020               	movlb 0	; select bank0
 29448  0006  087F               	movf	btemp+1,w
 29449  0007  00FC               	movwf	(??_isr+1)
 29450                           	line	189
 29451                           	
 29452  0008                     i1l33909:	
 29453                           ;catgenius.c: 186: unsigned char temp;
 29454                           ;catgenius.c: 189: if (TMR1IF) {
 29455  0008  1C11               	btfss	(136/8),(136)&7
 29456  0009  280B               	goto	u576_21
 29457  000A  280C               	goto	u576_20
 29458  000B                     u576_21:
 29459  000B  2811               	goto	i1l33915
 29460  000C                     u576_20:
 29461                           	line	191
 29462                           	
 29463  000C                     i1l33911:	
 29464                           ;catgenius.c: 191: TMR1IF = 0;
 29465  000C  1011               	bcf	(136/8),(136)&7
 29466                           	line	193
 29467                           	
 29468  000D                     i1l33913:	
 29469                           ;catgenius.c: 193: timer_isr();
 29470  000D  31AA  22E9  3180   	fcall	_timer_isr
 29471  0010  2811               	goto	i1l33915
 29472                           	line	194
 29473                           	
 29474  0011                     i1l2099:	
 29475                           	line	196
 29476                           	
 29477  0011                     i1l33915:	
 29478                           ;catgenius.c: 194: }
 29479                           ;catgenius.c: 196: if (TMR2IF) {
 29480  0011  0020               	movlb 0	; select bank0
 29481  0012  1C91               	btfss	(137/8),(137)&7
 29482  0013  2815               	goto	u577_21
 29483  0014  2816               	goto	u577_20
 29484  0015                     u577_21:
 29485  0015  281B               	goto	i1l33921
 29486  0016                     u577_20:
 29487                           	line	198
 29488                           	
 29489  0016                     i1l33917:	
 29490                           ;catgenius.c: 198: TMR2IF = 0;
 29491  0016  1091               	bcf	(137/8),(137)&7
 29492                           	line	200
 29493                           	
 29494  0017                     i1l33919:	
 29495                           ;catgenius.c: 200: catsensor_isr_timer();
 29496  0017  31A9  2146  3180   	fcall	_catsensor_isr_timer
 29497  001A  281B               	goto	i1l33921
 29498                           	line	201
 29499                           	
 29500  001B                     i1l2100:	
 29501                           	line	206
 29502                           	
 29503  001B                     i1l33921:	
 29504                           ;catgenius.c: 201: }
 29505                           ;catgenius.c: 206: if (IOCIF) {
 29506  001B  1C0B               	btfss	(88/8),(88)&7
 29507  001C  281E               	goto	u578_21
 29508  001D  281F               	goto	u578_20
 29509  001E                     u578_21:
 29510  001E  2838               	goto	i1l33935
 29511  001F                     u578_20:
 29512                           	line	209
 29513                           	
 29514  001F                     i1l33923:	
 29515                           ;catgenius.c: 209: temp = PORTB ^ PORTB_old;
 29516  001F  0020               	movlb 0	; select bank0
 29517  0020  080D               	movf	(13),w	;volatile
 29518  0021  0021               	movlb 1	; select bank1
 29519  0022  0654               	xorwf	(_PORTB_old)^080h,w
 29520  0023  00FB               	movwf	(??_isr+0)+0
 29521  0024  087B               	movf	(??_isr+0)+0,w
 29522  0025  00FD               	movwf	(isr@temp)
 29523                           	line	214
 29524                           	
 29525  0026                     i1l33925:	
 29526                           ;catgenius.c: 214: IOCBF = 0;
 29527  0026  0027               	movlb 7	; select bank7
 29528  0027  0196               	clrf	(918)^0380h	;volatile
 29529                           	line	215
 29530                           	
 29531  0028                     i1l33927:	
 29532                           ;catgenius.c: 215: IOCIF = 0;
 29533  0028  100B               	bcf	(88/8),(88)&7
 29534                           	line	218
 29535                           	
 29536  0029                     i1l33929:	
 29537                           ;catgenius.c: 218: if (temp & (1U << (4)))
 29538  0029  1E7D               	btfss	(isr@temp),(4)&7
 29539  002A  282C               	goto	u579_21
 29540  002B  282D               	goto	u579_20
 29541  002C                     u579_21:
 29542  002C  2831               	goto	i1l33933
 29543  002D                     u579_20:
 29544                           	line	219
 29545                           	
 29546  002D                     i1l33931:	
 29547                           ;catgenius.c: 219: catsensor_isr_input();
 29548  002D  31B7  273E  3180   	fcall	_catsensor_isr_input
 29549  0030  2831               	goto	i1l33933
 29550                           	
 29551  0031                     i1l2102:	
 29552                           	line	221
 29553                           	
 29554  0031                     i1l33933:	
 29555                           ;catgenius.c: 221: PORTB_old = PORTB ;
 29556  0031  0020               	movlb 0	; select bank0
 29557  0032  080D               	movf	(13),w	;volatile
 29558  0033  00FB               	movwf	(??_isr+0)+0
 29559  0034  087B               	movf	(??_isr+0)+0,w
 29560  0035  0021               	movlb 1	; select bank1
 29561  0036  00D4               	movwf	(_PORTB_old)^080h
 29562  0037  2838               	goto	i1l33935
 29563                           	line	222
 29564                           	
 29565  0038                     i1l2101:	
 29566                           	line	224
 29567                           	
 29568  0038                     i1l33935:	
 29569                           ;catgenius.c: 222: }
 29570                           ;catgenius.c: 224: if (RCIF)
 29571  0038  0020               	movlb 0	; select bank0
 29572  0039  1E91               	btfss	(141/8),(141)&7
 29573  003A  283C               	goto	u580_21
 29574  003B  283D               	goto	u580_20
 29575  003C                     u580_21:
 29576  003C  2841               	goto	i1l33939
 29577  003D                     u580_20:
 29578                           	line	225
 29579                           	
 29580  003D                     i1l33937:	
 29581                           ;catgenius.c: 225: serial_rx_isr();
 29582  003D  3199  21F9  3180   	fcall	_serial_rx_isr
 29583  0040  2841               	goto	i1l33939
 29584                           	
 29585  0041                     i1l2103:	
 29586                           	line	226
 29587                           	
 29588  0041                     i1l33939:	
 29589                           ;catgenius.c: 226: if (TXIF)
 29590  0041  0020               	movlb 0	; select bank0
 29591  0042  1E11               	btfss	(140/8),(140)&7
 29592  0043  2845               	goto	u581_21
 29593  0044  2846               	goto	u581_20
 29594  0045                     u581_21:
 29595  0045  284A               	goto	i1l2105
 29596  0046                     u581_20:
 29597                           	line	227
 29598                           	
 29599  0046                     i1l33941:	
 29600                           ;catgenius.c: 227: serial_tx_isr();
 29601  0046  3190  2001  3180   	fcall	_serial_tx_isr
 29602  0049  284A               	goto	i1l2105
 29603                           	
 29604  004A                     i1l2104:	
 29605                           	line	228
 29606                           	
 29607  004A                     i1l2105:	
 29608  004A  087C               	movf	(??_isr+1),w
 29609  004B  0020               	movlb 0	; select bank0
 29610  004C  00FF               	movwf	btemp+1
 29611  004D  0009               	retfie
 29612                           	opt stack 0
 29613                           GLOBAL	__end_of_isr
 29614  004E                     	__end_of_isr:
 29615 ;; =============== function _isr ends ============
 29616                           
 29617                           	signat	_isr,88
 29618                           	global	_serial_tx_isr
 29619                           psect	text3406,local,class=CODE,delta=2
 29620                           global __ptext3406
 29621  1001                     __ptext3406:
 29622                           
 29623 ;; *************** function _serial_tx_isr *****************
 29624 ;; Defined at:
 29625 ;;		line 171 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29626 ;; Parameters:    Size  Location     Type
 29627 ;;		None
 29628 ;; Auto vars:     Size  Location     Type
 29629 ;;		None
 29630 ;; Return value:  Size  Location     Type
 29631 ;;		None               void
 29632 ;; Registers used:
 29633 ;;		None
 29634 ;; Tracked objects:
 29635 ;;		On entry : 0/0
 29636 ;;		On exit  : 0/0
 29637 ;;		Unchanged: 0/0
 29638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29643 ;;Total ram usage:        0 bytes
 29644 ;; Hardware stack levels used:    1
 29645 ;; This function calls:
 29646 ;;		Nothing
 29647 ;; This function is called by:
 29648 ;;		_isr
 29649 ;; This function uses a non-reentrant model
 29650 ;;
 29651                           psect	text3406
 29652                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29653                           	line	171
 29654                           	global	__size_of_serial_tx_isr
 29655  0001                     	__size_of_serial_tx_isr	equ	__end_of_serial_tx_isr-_serial_tx_isr
 29656                           	
 29657  1001                     _serial_tx_isr:	
 29658                           	opt	stack 1
 29659                           ; Regs used in _serial_tx_isr: []
 29660                           	line	182
 29661                           	
 29662  1001                     i1l19322:	
 29663  1001  0008               	return
 29664                           	opt stack 0
 29665                           GLOBAL	__end_of_serial_tx_isr
 29666  1002                     	__end_of_serial_tx_isr:
 29667 ;; =============== function _serial_tx_isr ends ============
 29668                           
 29669                           	signat	_serial_tx_isr,88
 29670                           	global	_serial_rx_isr
 29671                           psect	text3407,local,class=CODE,delta=2
 29672                           global __ptext3407
 29673  19F9                     __ptext3407:
 29674                           
 29675 ;; *************** function _serial_rx_isr *****************
 29676 ;; Defined at:
 29677 ;;		line 116 in file "D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29678 ;; Parameters:    Size  Location     Type
 29679 ;;		None
 29680 ;; Auto vars:     Size  Location     Type
 29681 ;;		None
 29682 ;; Return value:  Size  Location     Type
 29683 ;;		None               void
 29684 ;; Registers used:
 29685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1
 29686 ;; Tracked objects:
 29687 ;;		On entry : 0/0
 29688 ;;		On exit  : 0/0
 29689 ;;		Unchanged: 0/0
 29690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29693 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29694 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29695 ;;Total ram usage:        9 bytes
 29696 ;; Hardware stack levels used:    1
 29697 ;; This function calls:
 29698 ;;		Nothing
 29699 ;; This function is called by:
 29700 ;;		_isr
 29701 ;; This function uses a non-reentrant model
 29702 ;;
 29703                           psect	text3407
 29704                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\serial.c"
 29705                           	line	116
 29706                           	global	__size_of_serial_rx_isr
 29707  00D1                     	__size_of_serial_rx_isr	equ	__end_of_serial_rx_isr-_serial_rx_isr
 29708                           	
 29709  19F9                     _serial_rx_isr:	
 29710                           	opt	stack 1
 29711                           ; Regs used in _serial_rx_isr: [wreg+fsr1l-status,0+btemp+1]
 29712                           	line	119
 29713                           	
 29714  19F9                     i1l33969:	
 29715                           ;serial.c: 119: if (OERR) {
 29716  19F9  0023               	movlb 3	; select bank3
 29717  19FA  1C9D               	btfss	(3305/8)^0180h,(3305)&7
 29718  19FB  29FD               	goto	u587_21
 29719  19FC  29FE               	goto	u587_20
 29720  19FD                     u587_21:
 29721  19FD  2A10               	goto	i1l19308
 29722  19FE                     u587_20:
 29723                           	line	120
 29724                           	
 29725  19FE                     i1l33971:	
 29726                           ;serial.c: 120: rx.buffer[rx.head] = RCREG;
 29727  19FE  0819               	movf	(409)^0180h,w	;volatile
 29728  19FF  00F2               	movwf	(??_serial_rx_isr+0)+0
 29729  1A00  0022               	movlb 2	; select bank2
 29730  1A01  0839               	movf	0+(_rx)^0100h+08h,w
 29731  1A02  3907               	andlw	(1<<3)-1
 29732  1A03  3E31               	addlw	_rx&0ffh
 29733  1A04  0086               	movwf	fsr1l
 29734  1A05  3001               	movlw 1	; select bank2/3
 29735  1A06  0087               	movwf fsr1h	
 29736                           	
 29737  1A07  0872               	movf	(??_serial_rx_isr+0)+0,w
 29738  1A08  0081               	movwf	indf1
 29739                           	line	121
 29740                           	
 29741  1A09                     i1l33973:	
 29742                           ;serial.c: 121: TXEN = 0;
 29743  1A09  0023               	movlb 3	; select bank3
 29744  1A0A  129E               	bcf	(3317/8)^0180h,(3317)&7
 29745                           	line	122
 29746                           	
 29747  1A0B                     i1l33975:	
 29748                           ;serial.c: 122: TXEN = 1;
 29749  1A0B  169E               	bsf	(3317/8)^0180h,(3317)&7
 29750                           	line	123
 29751                           	
 29752  1A0C                     i1l33977:	
 29753                           ;serial.c: 123: CREN = 0;
 29754  1A0C  121D               	bcf	(3308/8)^0180h,(3308)&7
 29755                           	line	124
 29756                           	
 29757  1A0D                     i1l33979:	
 29758                           ;serial.c: 124: CREN = 1;
 29759  1A0D  161D               	bsf	(3308/8)^0180h,(3308)&7
 29760  1A0E  2AC9               	goto	i1l19309
 29761                           	line	125
 29762                           	
 29763  1A0F                     i1l33981:	
 29764                           ;serial.c: 125: return;
 29765  1A0F  2AC9               	goto	i1l19309
 29766                           	line	126
 29767                           	
 29768  1A10                     i1l19308:	
 29769                           	line	128
 29770                           ;serial.c: 126: }
 29771                           ;serial.c: 128: if (FERR) {
 29772  1A10  1D1D               	btfss	(3306/8)^0180h,(3306)&7
 29773  1A11  2A13               	goto	u588_21
 29774  1A12  2A14               	goto	u588_20
 29775  1A13                     u588_21:
 29776  1A13  2A24               	goto	i1l33991
 29777  1A14                     u588_20:
 29778                           	line	129
 29779                           	
 29780  1A14                     i1l33983:	
 29781                           ;serial.c: 129: rx.buffer[rx.head] = RCREG;
 29782  1A14  0819               	movf	(409)^0180h,w	;volatile
 29783  1A15  00F2               	movwf	(??_serial_rx_isr+0)+0
 29784  1A16  0022               	movlb 2	; select bank2
 29785  1A17  0839               	movf	0+(_rx)^0100h+08h,w
 29786  1A18  3907               	andlw	(1<<3)-1
 29787  1A19  3E31               	addlw	_rx&0ffh
 29788  1A1A  0086               	movwf	fsr1l
 29789  1A1B  3001               	movlw 1	; select bank2/3
 29790  1A1C  0087               	movwf fsr1h	
 29791                           	
 29792  1A1D  0872               	movf	(??_serial_rx_isr+0)+0,w
 29793  1A1E  0081               	movwf	indf1
 29794                           	line	130
 29795                           	
 29796  1A1F                     i1l33985:	
 29797                           ;serial.c: 130: TXEN = 0;
 29798  1A1F  0023               	movlb 3	; select bank3
 29799  1A20  129E               	bcf	(3317/8)^0180h,(3317)&7
 29800                           	line	131
 29801                           	
 29802  1A21                     i1l33987:	
 29803                           ;serial.c: 131: TXEN = 1;
 29804  1A21  169E               	bsf	(3317/8)^0180h,(3317)&7
 29805  1A22  2AC9               	goto	i1l19309
 29806                           	line	132
 29807                           	
 29808  1A23                     i1l33989:	
 29809                           ;serial.c: 132: return;
 29810  1A23  2AC9               	goto	i1l19309
 29811                           	line	133
 29812                           	
 29813  1A24                     i1l19310:	
 29814                           	line	135
 29815                           	
 29816  1A24                     i1l33991:	
 29817                           ;serial.c: 133: }
 29818                           ;serial.c: 135: rx.buffer[rx.head] = RCREG;
 29819  1A24  0819               	movf	(409)^0180h,w	;volatile
 29820  1A25  00F2               	movwf	(??_serial_rx_isr+0)+0
 29821  1A26  0022               	movlb 2	; select bank2
 29822  1A27  0839               	movf	0+(_rx)^0100h+08h,w
 29823  1A28  3907               	andlw	(1<<3)-1
 29824  1A29  3E31               	addlw	_rx&0ffh
 29825  1A2A  0086               	movwf	fsr1l
 29826  1A2B  3001               	movlw 1	; select bank2/3
 29827  1A2C  0087               	movwf fsr1h	
 29828                           	
 29829  1A2D  0872               	movf	(??_serial_rx_isr+0)+0,w
 29830  1A2E  0081               	movwf	indf1
 29831                           	line	153
 29832                           	
 29833  1A2F                     i1l33993:	
 29834                           ;serial.c: 153: rx.head++;
 29835  1A2F  0839               	movf	0+(_rx)^0100h+08h,w
 29836  1A30  3907               	andlw	(1<<3)-1
 29837  1A31  00F2               	movwf	((??_serial_rx_isr+0)+0)
 29838  1A32  0AF2               	incf	(??_serial_rx_isr+0)+0
 29839  1A33  0839               	movf	0+(_rx)^0100h+08h,w
 29840  1A34  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29841  1A35  39F8               	andlw	not ((1<<3)-1)
 29842  1A36  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 29843  1A37  00B9               	movwf	0+(_rx)^0100h+08h
 29844                           	line	157
 29845                           	
 29846  1A38                     i1l33995:	
 29847                           ;serial.c: 155: if (rx.xon_enabled &&
 29848                           ;serial.c: 156: rx.xon_state &&
 29849                           ;serial.c: 157: ((((rx.head)>=(rx.tail))?((8)-((rx.head)-(rx.tail))-1):((rx.tail)-(rx.he
                                 ad))-1) <= (2))) {
 29850  1A38  1F39               	btfss	0+(_rx)^0100h+08h,6
 29851  1A39  2A3B               	goto	u589_21
 29852  1A3A  2A3C               	goto	u589_20
 29853  1A3B                     u589_21:
 29854  1A3B  2AAB               	goto	i1l34013
 29855  1A3C                     u589_20:
 29856                           	
 29857  1A3C                     i1l33997:	
 29858  1A3C  1FB9               	btfss	0+(_rx)^0100h+08h,7
 29859  1A3D  2A3F               	goto	u590_21
 29860  1A3E  2A40               	goto	u590_20
 29861  1A3F                     u590_21:
 29862  1A3F  2AAB               	goto	i1l34013
 29863  1A40                     u590_20:
 29864                           	
 29865  1A40                     i1l33999:	
 29866  1A40  0C39               	rrf	0+(_rx)^0100h+08h,w
 29867  1A41  00F2               	movwf	(??_serial_rx_isr+0)+0
 29868  1A42  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 29869  1A43  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 29870  1A44  3907               	andlw	(1<<3)-1
 29871  1A45  00F3               	movwf	(??_serial_rx_isr+1)+0
 29872  1A46  0839               	movf	0+(_rx)^0100h+08h,w
 29873  1A47  3907               	andlw	(1<<3)-1
 29874  1A48  00F4               	movwf	(??_serial_rx_isr+2)+0
 29875  1A49  0873               	movf	(??_serial_rx_isr+1)+0,w
 29876  1A4A  0274               	subwf	(??_serial_rx_isr+2)+0,w
 29877  1A4B  1803               	skipnc
 29878  1A4C  2A4E               	goto	u591_21
 29879  1A4D  2A4F               	goto	u591_20
 29880  1A4E                     u591_21:
 29881  1A4E  2A6A               	goto	i1l34003
 29882  1A4F                     u591_20:
 29883                           	
 29884  1A4F                     i1l34001:	
 29885  1A4F  0839               	movf	0+(_rx)^0100h+08h,w
 29886  1A50  3907               	andlw	(1<<3)-1
 29887  1A51  00F2               	movwf	(??_serial_rx_isr+0)+0
 29888  1A52  01F3               	clrf	(??_serial_rx_isr+0)+0+1
 29889  1A53  09F2               	comf	(??_serial_rx_isr+0)+0,f
 29890  1A54  09F3               	comf	(??_serial_rx_isr+0)+1,f
 29891  1A55  0AF2               	incf	(??_serial_rx_isr+0)+0,f
 29892  1A56  1903               	skipnz
 29893  1A57  0AF3               	incf	(??_serial_rx_isr+0)+1,f
 29894  1A58  0C39               	rrf	0+(_rx)^0100h+08h,w
 29895  1A59  00F4               	movwf	(??_serial_rx_isr+2)+0
 29896  1A5A  0CF4               	rrf	(??_serial_rx_isr+2)+0,f
 29897  1A5B  0C74               	rrf	(??_serial_rx_isr+2)+0,w
 29898  1A5C  3907               	andlw	(1<<3)-1
 29899  1A5D  0772               	addwf	0+(??_serial_rx_isr+0)+0,w
 29900  1A5E  00F5               	movwf	(??_serial_rx_isr+3)+0
 29901  1A5F  0873               	movf	1+(??_serial_rx_isr+0)+0,w
 29902  1A60  1803               	skipnc
 29903  1A61  0A73               	incf	1+(??_serial_rx_isr+0)+0,w
 29904  1A62  00F6               	movwf	((??_serial_rx_isr+3)+0)+1
 29905  1A63  0875               	movf	0+(??_serial_rx_isr+3)+0,w
 29906  1A64  3EFF               	addlw	low(-1)
 29907  1A65  00F9               	movwf	(_serial_rx_isr$22355)
 29908  1A66  30FF               	movlw	high(-1)
 29909  1A67  3D76               	addwfc	1+(??_serial_rx_isr+3)+0,w
 29910  1A68  00FA               	movwf	1+(_serial_rx_isr$22355)
 29911  1A69  2A90               	goto	i1l34005
 29912                           	
 29913  1A6A                     i1l19313:	
 29914                           	
 29915  1A6A                     i1l34003:	
 29916  1A6A  0C39               	rrf	0+(_rx)^0100h+08h,w
 29917  1A6B  00F2               	movwf	(??_serial_rx_isr+0)+0
 29918  1A6C  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 29919  1A6D  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 29920  1A6E  3907               	andlw	(1<<3)-1
 29921  1A6F  00F3               	movwf	(??_serial_rx_isr+1)+0
 29922  1A70  01F4               	clrf	(??_serial_rx_isr+1)+0+1
 29923  1A71  09F3               	comf	(??_serial_rx_isr+1)+0,f
 29924  1A72  09F4               	comf	(??_serial_rx_isr+1)+1,f
 29925  1A73  0AF3               	incf	(??_serial_rx_isr+1)+0,f
 29926  1A74  1903               	skipnz
 29927  1A75  0AF4               	incf	(??_serial_rx_isr+1)+1,f
 29928  1A76  0839               	movf	0+(_rx)^0100h+08h,w
 29929  1A77  3907               	andlw	(1<<3)-1
 29930  1A78  0773               	addwf	0+(??_serial_rx_isr+1)+0,w
 29931  1A79  00F5               	movwf	(??_serial_rx_isr+3)+0
 29932  1A7A  0874               	movf	1+(??_serial_rx_isr+1)+0,w
 29933  1A7B  1803               	skipnc
 29934  1A7C  0A74               	incf	1+(??_serial_rx_isr+1)+0,w
 29935  1A7D  00F6               	movwf	((??_serial_rx_isr+3)+0)+1
 29936  1A7E  0875               	movf	0+(??_serial_rx_isr+3)+0,w
 29937  1A7F  3E01               	addlw	low(01h)
 29938  1A80  00F7               	movwf	(??_serial_rx_isr+5)+0
 29939  1A81  3000               	movlw	high(01h)
 29940  1A82  3D76               	addwfc	1+(??_serial_rx_isr+3)+0,w
 29941  1A83  00F8               	movwf	1+(??_serial_rx_isr+5)+0
 29942  1A84  09F7               	comf	(??_serial_rx_isr+5)+0,f
 29943  1A85  09F8               	comf	(??_serial_rx_isr+5)+1,f
 29944  1A86  0AF7               	incf	(??_serial_rx_isr+5)+0,f
 29945  1A87  1903               	skipnz
 29946  1A88  0AF8               	incf	(??_serial_rx_isr+5)+1,f
 29947  1A89  0877               	movf	0+(??_serial_rx_isr+5)+0,w
 29948  1A8A  3E08               	addlw	low(08h)
 29949  1A8B  00F9               	movwf	(_serial_rx_isr$22355)
 29950  1A8C  3000               	movlw	high(08h)
 29951  1A8D  3D78               	addwfc	1+(??_serial_rx_isr+5)+0,w
 29952  1A8E  00FA               	movwf	1+(_serial_rx_isr$22355)
 29953  1A8F  2A90               	goto	i1l34005
 29954                           	
 29955  1A90                     i1l19315:	
 29956                           	
 29957  1A90                     i1l34005:	
 29958  1A90  087A               	movf	(_serial_rx_isr$22355+1),w
 29959  1A91  3A80               	xorlw	80h
 29960  1A92  00FF               	movwf	btemp+1
 29961  1A93  3080               	movlw	(high(03h))^80h
 29962  1A94  027F               	subwf	btemp+1,w
 29963  1A95  1D03               	skipz
 29964  1A96  2A99               	goto	u592_25
 29965  1A97  3003               	movlw	low(03h)
 29966  1A98  0279               	subwf	(_serial_rx_isr$22355),w
 29967  1A99                     u592_25:
 29968                           
 29969  1A99  1803               	skipnc
 29970  1A9A  2A9C               	goto	u592_21
 29971  1A9B  2A9D               	goto	u592_20
 29972  1A9C                     u592_21:
 29973  1A9C  2AAB               	goto	i1l34013
 29974  1A9D                     u592_20:
 29975  1A9D  2A9F               	goto	i1l19316
 29976                           	line	158
 29977                           	
 29978  1A9E                     i1l34007:	
 29979                           ;serial.c: 158: while(!TXIF);
 29980  1A9E  2A9F               	goto	i1l19316
 29981                           	
 29982  1A9F                     i1l19317:	
 29983                           	
 29984  1A9F                     i1l19316:	
 29985  1A9F  0020               	movlb 0	; select bank0
 29986  1AA0  1E11               	btfss	(140/8),(140)&7
 29987  1AA1  2AA3               	goto	u593_21
 29988  1AA2  2AA4               	goto	u593_20
 29989  1AA3                     u593_21:
 29990  1AA3  2A9F               	goto	i1l19316
 29991  1AA4                     u593_20:
 29992  1AA4  2AA5               	goto	i1l34009
 29993                           	
 29994  1AA5                     i1l19318:	
 29995                           	line	159
 29996                           	
 29997  1AA5                     i1l34009:	
 29998                           ;serial.c: 159: TXREG = 0x13;
 29999  1AA5  3013               	movlw	(013h)
 30000  1AA6  0023               	movlb 3	; select bank3
 30001  1AA7  009A               	movwf	(410)^0180h	;volatile
 30002                           	line	160
 30003                           	
 30004  1AA8                     i1l34011:	
 30005                           ;serial.c: 160: rx.xon_state = 0;
 30006  1AA8  0022               	movlb 2	; select bank2
 30007  1AA9  13B9               	bcf	0+(_rx)^0100h+08h,7
 30008  1AAA  2AAB               	goto	i1l34013
 30009                           	line	161
 30010                           	
 30011  1AAB                     i1l19311:	
 30012                           	line	163
 30013                           	
 30014  1AAB                     i1l34013:	
 30015                           ;serial.c: 161: }
 30016                           ;serial.c: 163: if (rx.head == rx.tail)
 30017  1AAB  0022               	movlb 2	; select bank2
 30018  1AAC  0C39               	rrf	0+(_rx)^0100h+08h,w
 30019  1AAD  00F2               	movwf	(??_serial_rx_isr+0)+0
 30020  1AAE  0CF2               	rrf	(??_serial_rx_isr+0)+0,f
 30021  1AAF  0C72               	rrf	(??_serial_rx_isr+0)+0,w
 30022  1AB0  3907               	andlw	(1<<3)-1
 30023  1AB1  00F3               	movwf	(??_serial_rx_isr+1)+0
 30024  1AB2  0839               	movf	0+(_rx)^0100h+08h,w
 30025  1AB3  3907               	andlw	(1<<3)-1
 30026  1AB4  0673               	xorwf	(??_serial_rx_isr+1)+0,w
 30027  1AB5  1D03               	skipz
 30028  1AB6  2AB8               	goto	u594_21
 30029  1AB7  2AB9               	goto	u594_20
 30030  1AB8                     u594_21:
 30031  1AB8  2AC9               	goto	i1l19309
 30032  1AB9                     u594_20:
 30033                           	line	165
 30034                           	
 30035  1AB9                     i1l34015:	
 30036                           ;serial.c: 165: rx.tail++;
 30037  1AB9  0C39               	rrf	0+(_rx)^0100h+08h,w
 30038  1ABA  00F2               	movwf	((??_serial_rx_isr+0)+0)
 30039  1ABB  0CF2               	rrf	((??_serial_rx_isr+0)+0),f
 30040  1ABC  0C72               	rrf	((??_serial_rx_isr+0)+0),w
 30041  1ABD  3907               	andlw	(1<<3)-1
 30042  1ABE  00F2               	movwf	((??_serial_rx_isr+0)+0)
 30043  1ABF  0AF2               	incf	(??_serial_rx_isr+0)+0
 30044  1AC0  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 30045  1AC1  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 30046  1AC2  0DF2               	rlf	((??_serial_rx_isr+0)+0),f
 30047  1AC3  0839               	movf	0+(_rx)^0100h+08h,w
 30048  1AC4  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 30049  1AC5  39C7               	andlw	not (((1<<3)-1)<<3)
 30050  1AC6  0672               	xorwf	((??_serial_rx_isr+0)+0),w
 30051  1AC7  00B9               	movwf	0+(_rx)^0100h+08h
 30052  1AC8  2AC9               	goto	i1l19309
 30053                           	
 30054  1AC9                     i1l19319:	
 30055                           	line	167
 30056                           	
 30057  1AC9                     i1l19309:	
 30058  1AC9  0008               	return
 30059                           	opt stack 0
 30060                           GLOBAL	__end_of_serial_rx_isr
 30061  1ACA                     	__end_of_serial_rx_isr:
 30062 ;; =============== function _serial_rx_isr ends ============
 30063                           
 30064                           	signat	_serial_rx_isr,88
 30065                           	global	_catsensor_isr_input
 30066                           psect	text3408,local,class=CODE,delta=2
 30067                           global __ptext3408
 30068  373E                     __ptext3408:
 30069                           
 30070 ;; *************** function _catsensor_isr_input *****************
 30071 ;; Defined at:
 30072 ;;		line 167 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 30073 ;; Parameters:    Size  Location     Type
 30074 ;;		None
 30075 ;; Auto vars:     Size  Location     Type
 30076 ;;		None
 30077 ;; Return value:  Size  Location     Type
 30078 ;;		None               void
 30079 ;; Registers used:
 30080 ;;		None
 30081 ;; Tracked objects:
 30082 ;;		On entry : 0/0
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30090 ;;Total ram usage:        0 bytes
 30091 ;; Hardware stack levels used:    1
 30092 ;; This function calls:
 30093 ;;		Nothing
 30094 ;; This function is called by:
 30095 ;;		_isr
 30096 ;; This function uses a non-reentrant model
 30097 ;;
 30098                           psect	text3408
 30099                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 30100                           	global	__size_of_catsensor_isr_input
 30101  000C                     	__size_of_catsensor_isr_input	equ	__end_of_catsensor_isr_input-_catsensor_isr_input
 30102                           	
 30103  373E                     _catsensor_isr_input:	
 30104                           	opt	stack 1
 30105                           ; Regs used in _catsensor_isr_input: []
 30106                           	line	169
 30107                           	
 30108  373E                     i1l33963:	
 30109                           ;catsensor.c: 168: if ( (pinging) &&
 30110                           ;catsensor.c: 169: !(PORTB & (1U << (4))) ) {
 30111  373E  1F71               	btfss	(_pinging/8),(_pinging)&7
 30112  373F  2F41               	goto	u585_21
 30113  3740  2F42               	goto	u585_20
 30114  3741                     u585_21:
 30115  3741  2F49               	goto	i1l13063
 30116  3742                     u585_20:
 30117                           	
 30118  3742                     i1l33965:	
 30119  3742  0020               	movlb 0	; select bank0
 30120  3743  1A0D               	btfsc	(13),(4)&7	;volatile
 30121  3744  2F46               	goto	u586_21
 30122  3745  2F47               	goto	u586_20
 30123  3746                     u586_21:
 30124  3746  2F49               	goto	i1l13063
 30125  3747                     u586_20:
 30126                           	line	170
 30127                           	
 30128  3747                     i1l33967:	
 30129                           ;catsensor.c: 170: echoed = 1;
 30130  3747  15F0               	bsf	(_echoed/8),(_echoed)&7
 30131  3748  2F49               	goto	i1l13063
 30132                           	line	171
 30133                           	
 30134  3749                     i1l13062:	
 30135                           	line	172
 30136                           	
 30137  3749                     i1l13063:	
 30138  3749  0008               	return
 30139                           	opt stack 0
 30140                           GLOBAL	__end_of_catsensor_isr_input
 30141  374A                     	__end_of_catsensor_isr_input:
 30142 ;; =============== function _catsensor_isr_input ends ============
 30143                           
 30144                           	signat	_catsensor_isr_input,88
 30145                           	global	_catsensor_isr_timer
 30146                           psect	text3409,local,class=CODE,delta=2
 30147                           global __ptext3409
 30148  2946                     __ptext3409:
 30149                           
 30150 ;; *************** function _catsensor_isr_timer *****************
 30151 ;; Defined at:
 30152 ;;		line 136 in file "D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 30153 ;; Parameters:    Size  Location     Type
 30154 ;;		None
 30155 ;; Auto vars:     Size  Location     Type
 30156 ;;		None
 30157 ;; Return value:  Size  Location     Type
 30158 ;;		None               void
 30159 ;; Registers used:
 30160 ;;		wreg, status,2, status,0
 30161 ;; Tracked objects:
 30162 ;;		On entry : 0/0
 30163 ;;		On exit  : 0/0
 30164 ;;		Unchanged: 0/0
 30165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30170 ;;Total ram usage:        1 bytes
 30171 ;; Hardware stack levels used:    1
 30172 ;; This function calls:
 30173 ;;		Nothing
 30174 ;; This function is called by:
 30175 ;;		_isr
 30176 ;; This function uses a non-reentrant model
 30177 ;;
 30178                           psect	text3409
 30179                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\catsensor.c"
 30180                           	line	136
 30181                           	global	__size_of_catsensor_isr_timer
 30182  001C                     	__size_of_catsensor_isr_timer	equ	__end_of_catsensor_isr_timer-_catsensor_isr_timer
 30183                           	
 30184  2946                     _catsensor_isr_timer:	
 30185                           	opt	stack 1
 30186                           ; Regs used in _catsensor_isr_timer: [wreg+status,2+status,0]
 30187                           	line	137
 30188                           	
 30189  2946                     i1l33947:	
 30190                           ;catsensor.c: 137: if (pinging) {
 30191  2946  1F71               	btfss	(_pinging/8),(_pinging)&7
 30192  2947  2949               	goto	u583_21
 30193  2948  294A               	goto	u583_20
 30194  2949                     u583_21:
 30195  2949  2961               	goto	i1l13059
 30196  294A                     u583_20:
 30197                           	line	139
 30198                           	
 30199  294A                     i1l33949:	
 30200                           ;catsensor.c: 139: pinging = 0;
 30201  294A  1371               	bcf	(_pinging/8),(_pinging)&7
 30202                           	line	141
 30203                           	
 30204  294B                     i1l33951:	
 30205                           ;catsensor.c: 141: PR2 = 0 ;
 30206  294B  0020               	movlb 0	; select bank0
 30207  294C  019B               	clrf	(27)	;volatile
 30208                           	line	145
 30209                           ;catsensor.c: 145: T2CON = 0 ;
 30210  294D  019C               	clrf	(28)	;volatile
 30211                           	line	147
 30212                           ;catsensor.c: 147: CCPR1L = 0 ;
 30213  294E  0025               	movlb 5	; select bank5
 30214  294F  0191               	clrf	(657)^0280h	;volatile
 30215                           	line	148
 30216                           	
 30217  2950                     i1l33953:	
 30218                           ;catsensor.c: 148: TMR2IE = 0;
 30219  2950  0021               	movlb 1	; select bank1
 30220  2951  1091               	bcf	(1161/8)^080h,(1161)&7
 30221                           	line	149
 30222                           	
 30223  2952                     i1l33955:	
 30224                           ;catsensor.c: 149: TMR2IF = 0;
 30225  2952  0020               	movlb 0	; select bank0
 30226  2953  1091               	bcf	(137/8),(137)&7
 30227                           	line	150
 30228                           	
 30229  2954                     i1l33957:	
 30230                           ;catsensor.c: 150: TMR2ON = 0;
 30231  2954  111C               	bcf	(226/8),(226)&7
 30232                           	line	151
 30233                           ;catsensor.c: 151: CCP1CON = 0;
 30234  2955  0025               	movlb 5	; select bank5
 30235  2956  0193               	clrf	(659)^0280h	;volatile
 30236                           	line	152
 30237                           	
 30238  2957                     i1l33959:	
 30239                           ;catsensor.c: 152: LATC &= ~(1U << (2));
 30240  2957  30FB               	movlw	(0FBh)
 30241  2958  00F2               	movwf	(??_catsensor_isr_timer+0)+0
 30242  2959  0872               	movf	(??_catsensor_isr_timer+0)+0,w
 30243  295A  0022               	movlb 2	; select bank2
 30244  295B  058E               	andwf	(270)^0100h,f	;volatile
 30245                           	line	154
 30246                           	
 30247  295C                     i1l33961:	
 30248                           ;catsensor.c: 154: detected_cur = echoed;
 30249  295C  1170               	bcf	(_detected_cur/8),(_detected_cur)&7
 30250  295D  1DF0               	btfss	(_echoed/8),(_echoed)&7
 30251  295E  2960               	goto	u584_25
 30252  295F  1570               	bsf	(_detected_cur/8),(_detected_cur)&7
 30253  2960                     u584_25:
 30254                           
 30255  2960  2961               	goto	i1l13059
 30256                           	line	155
 30257                           	
 30258  2961                     i1l13058:	
 30259                           	line	156
 30260                           	
 30261  2961                     i1l13059:	
 30262  2961  0008               	return
 30263                           	opt stack 0
 30264                           GLOBAL	__end_of_catsensor_isr_timer
 30265  2962                     	__end_of_catsensor_isr_timer:
 30266 ;; =============== function _catsensor_isr_timer ends ============
 30267                           
 30268                           	signat	_catsensor_isr_timer,88
 30269                           	global	_timer_isr
 30270                           psect	text3410,local,class=CODE,delta=2
 30271                           global __ptext3410
 30272  2AE9                     __ptext3410:
 30273                           
 30274 ;; *************** function _timer_isr *****************
 30275 ;; Defined at:
 30276 ;;		line 369 in file "D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 30277 ;; Parameters:    Size  Location     Type
 30278 ;;		None
 30279 ;; Auto vars:     Size  Location     Type
 30280 ;;		None
 30281 ;; Return value:  Size  Location     Type
 30282 ;;		None               void
 30283 ;; Registers used:
 30284 ;;		wreg
 30285 ;; Tracked objects:
 30286 ;;		On entry : 0/0
 30287 ;;		On exit  : 0/0
 30288 ;;		Unchanged: 0/0
 30289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30294 ;;Total ram usage:        0 bytes
 30295 ;; Hardware stack levels used:    1
 30296 ;; This function calls:
 30297 ;;		Nothing
 30298 ;; This function is called by:
 30299 ;;		_isr
 30300 ;; This function uses a non-reentrant model
 30301 ;;
 30302                           psect	text3410
 30303                           	file	"D:\git\gibby\catgenius\software\catgenius\..\common\timer.c"
 30304                           	line	369
 30305                           	global	__size_of_timer_isr
 30306  0027                     	__size_of_timer_isr	equ	__end_of_timer_isr-_timer_isr
 30307                           	
 30308  2AE9                     _timer_isr:	
 30309                           	opt	stack 1
 30310                           ; Regs used in _timer_isr: [wreg]
 30311                           	line	371
 30312                           	
 30313  2AE9                     i1l33943:	
 30314                           ;timer.c: 371: overflows++;
 30315  2AE9  3001               	movlw	01h
 30316  2AEA  0021               	movlb 1	; select bank1
 30317  2AEB  07CA               	addwf	(_overflows)^080h,f	;volatile
 30318  2AEC  3000               	movlw	0
 30319  2AED  3DCB               	addwfc	(_overflows+1)^080h,f	;volatile
 30320  2AEE  3000               	movlw	0
 30321  2AEF  3DCC               	addwfc	(_overflows+2)^080h,f	;volatile
 30322  2AF0  3000               	movlw	0
 30323  2AF1  3DCD               	addwfc	(_overflows+3)^080h,f	;volatile
 30324                           	line	377
 30325                           ;timer.c: 377: if (overflows >= 0xFFFF0000) {
 30326  2AF2  30FF               	movlw	0FFh
 30327  2AF3  024D               	subwf	(_overflows+3)^080h,w	;volatile
 30328  2AF4  1D03               	skipz
 30329  2AF5  2B00               	goto	u582_25
 30330  2AF6  30FF               	movlw	0FFh
 30331  2AF7  024C               	subwf	(_overflows+2)^080h,w	;volatile
 30332  2AF8  1D03               	skipz
 30333  2AF9  2B00               	goto	u582_25
 30334  2AFA  3000               	movlw	0
 30335  2AFB  024B               	subwf	(_overflows+1)^080h,w	;volatile
 30336  2AFC  1D03               	skipz
 30337  2AFD  2B00               	goto	u582_25
 30338  2AFE  3000               	movlw	0
 30339  2AFF  024A               	subwf	(_overflows)^080h,w	;volatile
 30340  2B00                     u582_25:
 30341  2B00  1C03               	skipc
 30342  2B01  2B03               	goto	u582_21
 30343  2B02  2B04               	goto	u582_20
 30344  2B03                     u582_21:
 30345  2B03  2B0F               	goto	i1l21424
 30346  2B04                     u582_20:
 30347                           	line	378
 30348                           	
 30349  2B04                     i1l33945:	
 30350                           ;timer.c: 378: overflows = 0;
 30351  2B04  3000               	movlw	0
 30352  2B05  00CD               	movwf	(_overflows+3)^080h	;volatile
 30353  2B06  3000               	movlw	0
 30354  2B07  00CC               	movwf	(_overflows+2)^080h	;volatile
 30355  2B08  3000               	movlw	0
 30356  2B09  00CB               	movwf	(_overflows+1)^080h	;volatile
 30357  2B0A  3000               	movlw	0
 30358  2B0B  00CA               	movwf	(_overflows)^080h	;volatile
 30359                           
 30360  2B0C  2B0D               	goto	i1l21422
 30361                           	line	380
 30362                           ;timer.c: 380: while(1);
 30363                           	
 30364  2B0D                     i1l21421:	
 30365                           	
 30366  2B0D                     i1l21422:	
 30367  2B0D  2B0D               	goto	i1l21422
 30368                           	
 30369  2B0E                     i1l21423:	
 30370  2B0E  2B0F               	goto	i1l21424
 30371                           	line	381
 30372                           	
 30373  2B0F                     i1l21420:	
 30374                           	line	382
 30375                           	
 30376  2B0F                     i1l21424:	
 30377  2B0F  0008               	return
 30378                           	opt stack 0
 30379                           GLOBAL	__end_of_timer_isr
 30380  2B10                     	__end_of_timer_isr:
 30381 ;; =============== function _timer_isr ends ============
 30382                           
 30383                           	signat	_timer_isr,88
 30384                           	global	fptotal
 30385  0009                     fptotal equ 9
 30386                           	file ""
 30387                           	line	#
 30388                           psect	functab,class=CODE,delta=2,reloc=256
 30389                           global __pfunctab
 30390  0100                     __pfunctab:
 30391                           	global	fptable
 30392  0100                     fptable:
 30393  0100  3181               	movlp high(fptable)
 30394  0101  0782               	addwf pc
 30395                           	global	fpbase
 30396  0102                     fpbase:
 30397  0102  2902               	goto fpbase	; Call via a null pointer and you will get stuck here.
 30398                           	file ""
 30399                           	line	#
 30400  0103                     fp__help:
 30401  0103  31AF  2FA1         	ljmp	_help
 30402                           	file ""
 30403                           	line	#
 30404  0105                     fp__echo:
 30405  0105  31A4  2C3A         	ljmp	_echo
 30406                           	file ""
 30407                           	line	#
 30408  0107                     fp__setupbutton_event:
 30409  0107  31B7  2F58         	ljmp	_setupbutton_event
 30410                           	file ""
 30411                           	line	#
 30412  0109                     fp__startbutton_event:
 30413  0109  31B7  2F66         	ljmp	_startbutton_event
 30414                           	global	btemp
 30415  007E                     	btemp set 07Eh
 30416                           
 30417                           	DABS	1,126,2	;btemp
 30418                           	global	wtemp0
 30419  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Mar 08 13:38:00 2023

             __end_of_set_LED_Error 37A1                     serial_init@flow 0033  
                                 pc 0002                        proc_line@len 005A  
                    ___bmul@product 0023                                  _RD 0CA8  
            __end_of_set_LED_Locked 37CE                                  _WR 0CA9  
                       _wet_program 036D                                  _rx 0131  
               ___wmul@multiplicand 0023                      _update_display 098C  
                     proc_line@argc 0058                       proc_line@argv 0051  
                     proc_line@line 005C              __end_of_interrupt_init 3733  
                               _GIE 005F                                 _PR2 001B  
                               _RX9 0CEE                                 _TX9 0CF6  
                               _isr 0004                         _start_short 2A12  
                               wreg 0009             userinterface_init@flags 004B  
                  ?_get_instruction 0072                      proc_line@index 0056  
            ??_litterlanguage_event 0058              ??_litterlanguage_pause 004F  
                     rtc_init@flags 003D              ??_litterlanguage_start 004F  
                              l2081 2778                                l2090 27C9  
                              l2082 27AC                                l2091 27E8  
                              l2083 2787                                l2092 27FE  
                              l2084 27AB                                l2093 27FE  
                              l2085 2794                                l2086 27AA  
                              l2087 27A0                                l2096 3732  
                              l2088 27A9                                l2089 27BC  
                              l4300 1446                                l4301 1470  
                              l4230 2551                                l4310 2204  
                              l4231 255E                                l4304 370A  
                              l4232 25AC                                l4224 2594  
                              l4320 234B                                l4400 0CEE  
                              l4240 1E92                                l4233 257D  
                              l4225 2533                                l4321 233F  
                              l4401 0CF7                                l4241 1FFF  
                              l4234 258A                                l4226 256E  
                              l4322 234B                                l4314 22EB  
                              l4410 0D24                                l4402 0D01  
                              l4250 1F39                                l4242 1F1C  
                              l4235 258B                                l4227 253B  
                              l4307 21A5                                l4411 0D4A  
                              l4251 1FD0                                l4243 1ECC  
                              l4236 258C                                l4228 257C  
                              l4316 22F0                                l4308 2205  
                              l4412 0D54                                l4404 0D0B  
                              l4252 1FB8                                l4244 1F01  
                              l4325 1002                                l4341 286C  
                              l4333 2C9B                                l4229 2544  
                              l4237 25AC                                l4317 232B  
                              l4309 21F3                                l4421 0DAC  
                              l4413 0D89                                l4261 1F89  
                              l4245 1F1B                                l4342 2861  
                              l4350 01FF                                l4318 231E  
                              l4430 0E1F                                l4422 0DE9  
                              l4406 0D11                                l4246 1FF4  
                              l4262 1FA4                                l4254 1F5F  
                              l4343 2872                                l4351 01FF  
                              l4335 2C79                                l4319 232A  
                              l4431 0E28                                l4423 0DE3  
                              l4415 0D93                                l4263 1FB7  
                              l4247 1F1D                                l4344 2872  
                              l4280 2D4C                                l4328 289C  
                              l4432 0E29                                l4424 0DF2  
                              l4408 0D1E                                l4248 1FFF  
                              l4264 1FC7                                l4256 1F64  
                              l4337 2C7E                                l4273 2D56  
                              l4281 2D56                                l4441 0E7C  
                              l4425 0DF3                                l4417 0D99  
                              l4361 0B80                                l4265 1FD1  
                              l4257 1FAE                                l4249 1F1E  
                              l4338 2C9B                                l4290 149F  
                              l4450 0ECB                                l4434 0E33  
                              l4266 1FE1                                l4347 01F9  
                              l4275 2D2C                                l4291 137B  
                              l4451 0F4C                                l4443 0E82  
                              l4427 0DFD                                l4419 0DA6  
                              l4371 0BD2                                l4363 0B6D  
                              l4267 1FEE                                l4259 1F92  
                              l4284 3729                                l4348 01F0  
                              l4460 2523                                l4292 149A  
                              l4356 0FEC                                l4452 0F56  
                              l4444 0EB2                                l4436 0E39  
                              l4380 0C03                                l4268 1FEF  
                              l4349 01F1                                l4461 24B5  
                              l4277 2D31                                l4293 1381  
                              l4453 0F8A                                l4445 0EB6  
                              l4437 0E69                                l4429 0E03  
                              l4373 0BBF                                l4365 0B73  
                              l4357 0B4F                                l4470 2518  
                              l4462 24CC                                l4278 2D46  
                              l4294 13B1                                l4366 0FF7  
                              l4454 0FAA                                l4446 0EBB  
                              l4438 0E6D                                l4390 0C92  
                              l4382 0C10                                l4463 252F  
                              l4471 2519                                l4279 2D3F  
                              l4295 13D2                                l4455 0FBB  
                              l4439 0E72                                l4391 0C9D  
                              l4375 0BC5                                l4367 0BA1  
                              l4359 0B7A                                l4464 24CD  
                              l4472 252F                                l4296 13FC  
                              l4456 0FD0                                l4448 0EC5  
                              l4384 0C16                                l4376 0BF3  
                              l4465 24EA                                l4297 13FB  
                              l4289 1262                                l4457 0FFF  
                              l4393 0CA7                                l4385 0C93  
                              l4369 0BCC                                l4466 24E9  
                              l4298 141D                                l4386 0C85  
                              l4378 0BFD                                l4467 2505  
                              l4299 1447                                l4395 0CAD  
                              l4387 0C56                                l4468 2504  
                              l4388 0C7B                                l4469 2506  
                              l4397 0CBA                                l4389 0C84  
                              l6511 283C                                l4399 0CC0  
                              l6514 2911                                ?_isr 0072  
                              l8700 1905                                l8701 190F  
                              l8702 192C                                l8710 2234  
                              l8711 226E                                l8640 2BC5  
                              l8720 2261                                l8712 2235  
                              l8713 2242                                l8721 226E  
                              l8705 2216                                l8802 00FF  
                              l8730 2191                                l8810 2941  
                              l8650 1D8E                                l8714 2243  
                              l8706 2233                                l8731 219C  
                              l8811 2945                                l8651 1D97  
                              l8643 1D5B                                l8715 2250  
                              l8740 2EE7                                l8724 2144  
                              l8812 2945                                l8660 1DF8  
                              l8652 1DF7                                l8644 1D53  
                              l8716 2251                                l8708 222A  
                              l8821 273D                                l8725 219C  
                              l8805 2A27                                l8661 1E2C  
                              l8653 1D99                                l8645 1D56  
                              l8709 2263                                l8717 225E  
                              l8822 26C0                                l8734 2E98  
                              l8750 09AE                                l8726 216F  
                              l8806 2A32                                l8670 1E49  
                              l8662 1DF9                                l8646 1DEB  
                              l8654 1DC3                                l8718 225F  
                              l8823 274C                                l8815 2887  
                              l8735 2E9D                                l8743 0B0D  
                              l8751 09AF                                l8639 2BB0  
                              l8727 2151                                l8807 2A32  
                              l8671 1E55                                l8663 1E01  
                              l8655 1DC4                                l8647 1D5C  
                              l8719 2260                                l8824 26F0  
                              l8736 2EC6                                l8760 09F0  
                              l8752 09B0                                l8744 098D  
                              l8728 2194                                l8680 3765  
                              l8672 1E61                                l8664 1E09  
                              l8656 1DE9                                l8648 1D5E  
                              l8825 2711                                l8761 0A37  
                              l8753 09B1                                l8745 098F  
                              l8729 2193                                l8673 1E8B  
                              l8665 1E11                                l8657 1DDC  
                              l8649 1D98                                l8818 37DD  
                              l8826 2722                                l8738 2EC4  
                              l8770 0AC8                                l8762 0A62  
                              l8754 09B2                                l8746 09A2  
                              l8690 18C5                                l8674 1E8B  
                              l8666 1E82                                l8658 1DE3  
                              l8827 2733                                l8739 2ED0  
                              l8771 0AC9                                l8755 0A6F  
                              l8763 0A58                                l8747 09AB  
                              l8691 192C                                l8667 1E63  
                              l8659 1E13                                l8828 274C  
                              l8772 0B35                                l8748 0A64  
                              l8764 0A4E                                l8756 09EC  
                              l8780 1802                                l8684 188C  
                              l8668 1E3D                                l8773 0B2B  
                              l8765 0A57                                l8757 09ED  
                              l8749 09AC                                l8781 1804  
                              l8693 18E5                                l8677 3773  
                              l8669 1E79                                l8774 0B34  
                              l8766 0A61                                l8758 09EE  
                              l8790 1832                                l8694 1928  
                              l8686 1891                                l8775 0B3C  
                              l8759 09EF                                l8767 0B19  
                              l8791 1858                                l8783 1813  
                              l8695 1912                                l8687 18A4  
                              l8776 0B3C                                l8768 0A70  
                              l8792 183D                                l8696 18F0  
                              l8688 18C6                                l8769 0AC1  
                              l8793 1857                                l8785 1816  
                              l8697 1923                                l8689 18B4  
                              l8786 1877                                l8794 1848  
                              l8698 18F2                                l8779 186B  
                              l8795 1856                                l8787 181B  
                              l8699 18FB                                l8796 1853  
                              l8788 1827                                l8789 1859  
                              l8797 1855                                l8798 1869  
                              l8799 1877                                STR_1 0606  
                              STR_2 0789                                STR_3 0738  
                              STR_4 0779                                STR_5 0640  
                              STR_6 0861                                STR_7 0666  
                              STR_8 0653                                STR_9 08E4  
                              _BRGH 0CF2                                _CREN 0CEC  
                              _FERR 0CEA                                _CSRC 0CF7  
                              _LATA 010C                                _LATB 010D  
                              _LATC 010E                                _LATD 010F  
                              _LATE 0110                                u6100 2EF7  
                              u6101 2EF6                                u6110 2F32  
                              u6111 2F31                                u6200 22C9  
                              u6201 22C8                   ??_postponetimeout 0027  
                              u6210 2BD9                                u6115 2F2E  
                              u6211 2BD8                                _PEIE 005E  
                              u6220 2E48                                u6221 2E47  
                              u6230 2E58                                u6231 2E57  
                              u6160 2285                                u6240 2E89  
                              u6161 2284                                u6241 2E88  
                              u6090 2DDA                                u6170 22AF  
                              u6171 22AE                                _RCIE 048D  
                              u6180 22B3                                _RCIF 008D  
                              u6181 22B2                                u6245 2E85  
                              u6190 22C3                                u6191 22C2  
                              u6600 2091                                u6601 2090  
                              u6620 20AC                                u6700 193F  
                              u6621 20AB                                u6701 193E  
                              u5750 1015                                u6710 194D  
                              u5751 1014                                u6615 2094  
                              u6640 20C3                                u6720 1984  
                              u6641 20C2                                u6625 20A8  
                              u6730 19A0                                _OERR 0CE9  
                              u6635 20B7                                u6715 1949  
                              u6580 207D                                u6740 19C7  
                              u6581 207C                                u6725 1980  
                              u6750 19D6                                u6735 199C  
                              u6760 19F2                                u6761 19F1  
                              u6745 19C3                                u6595 2082  
                              u6755 19D2                                u9700 37F5  
                              u9630 2BFD                                u9710 2843  
                              u9631 2BFC                                u9640 2C19  
                              u9720 2D9D                                u9800 2B37  
                              u9641 2C18                                u9721 2D9C  
                              u9801 2B36                                u9650 2C28  
                              u9730 1C27                                u9651 2C27  
                              u9731 1C26                                u9660 2A3B  
                              u9740 1C52                                u9661 2A3A  
                              u9741 1C51                                u9670 37E4  
                              u9750 1CAF                                u9910 2ABA  
                              u9751 1CAE                                u9735 1C23  
                              u9911 2AB9                                u9760 2B96  
                              u9840 28BC                                u9920 094E  
                              u9745 1C4E                                u9761 2B95  
                              u9841 28BB                                u9905 2AB0  
                              u9921 094D                                u9690 28A8  
                              u9770 2B17                                u9850 28C2  
                              u9691 28A7                                u9755 1CAB  
                              u9771 2B16                                u9851 28C1  
                              u9780 2B1F                                u9860 291A  
                              u9940 0960                                u9685 28A3  
                              u9765 2B92                                u9781 2B1E  
                              u9861 2919                                u9941 095F  
                              u9790 2B27                                u9870 2928  
                              u9791 2B26                                u9871 2927  
                              u9935 0953                                u9880 2AA6  
                              u9960 0971                                u9881 2AA5  
                              u9961 0970                                u9955 0963  
                              u9980 0982                                u9981 0981  
                              u9965 096D                                u9990 2CDF  
                              u9895 2AAB                                u9975 0978  
                              u9991 2CDE                                _SPEN 0CEF  
                              _TXIE 048C                                _WREN 0CAA  
                              _TXEN 0CF5                                _TXIF 008C  
                              _SYNC 0CF4                                _WPUB 020D  
                    ??_eeprom_write 0022                                _WPUE 0210  
             ??_catsensor_isr_input 0072                  serial_init@bitrate 002F  
                 timeoutnow@timer_p 0025                  serial_init@divider 0040  
             ??_catsensor_isr_timer 0072                                _nBOR 04B0  
                              _nPOR 04B1                    ?_exe_instruction 0072  
                              _echo 243A                                _help 2FA1  
                              _main 274D                   _startbutton_event 3766  
                              fsr0h 0005                                fsr1h 0007  
                              fsr0l 0004                                indf0 0000  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                                start 004E  
  romwashprogram_getins@instruction 0024       __size_of_waterdetection_event 0071  
               timeoutnever@timer_p 0025                   ___bmul@multiplier 0024  
                proc_char@curcolumn 0067     water_work@cur_reflectionquality 00D2  
             _exe_instruction$30243 00A0               _exe_instruction$30244 00A2  
                             S39231 2000                               S39233 2800  
                             S39235 3000                               S39247 281E  
            __end_of_update_display 0B3D             ??_litterlanguage_paused 0021  
                             ??_isr 007B                 ??_startbutton_event 0041  
                   ?_set_LED_Locked 002E                    _update_autotimer 26BD  
                  _heatsensor_event 2888                       ?_gettimestamp 0021  
                             l13051 2660                               l13052 2687  
                             l10900 11C7                               l13053 26BC  
                             l10901 11F9                               l10910 2DA2  
                             l13054 26BB                               l10902 1239  
                             l10911 2DD6                               l13055 26BC  
                             l10903 1238                               l13048 3782  
                             l10912 2DAB                               l10904 124E  
                             l10913 2DB4                               l10921 37A0  
                             l10905 1255                               l21410 1C29  
                             l10914 2DBD                               l10930 37BE  
                             l10906 1255                               l21403 2D5F  
                             l21411 1C85                               l10915 2DC6  
                             l21404 2D9E                               l21412 1D27  
                             l10916 2DEC                               l10924 37CD  
                             l21405 2D9E                               l21413 1C86  
                             l10917 2DE3                               l10909 2DC8  
                             l10933 3791                               l10942 2A6D  
                             l21414 1CE9                               l10918 2DEC  
                             l10951 29BF                               l10943 2A59  
                             l21415 1CF2                               l10927 37AF  
                             l10952 29B8                               l10944 2A5A  
                             l10960 2A7E                               l21408 1D28  
                             l21416 1CF3                               l15112 3757  
                             l15120 2A06                               l10953 29D4  
                             l10945 2A79                               l10961 2A9D  
                             l21417 1D31                               l21409 1CFD  
                             l15113 3757                               l15121 29FA  
                             l21370 373D                               l10954 29BB  
                             l10946 2A60                               l10970 29D9  
                             l10962 2A84                               l10938 2ADB  
                             l15130 25D7                               l15122 2A11  
                             l10890 1044                               l10955 29D2  
                             l10947 2A64                               l10971 29F0  
                             l10963 2A8C                               l10883 00A4  
                             l10939 2AE8                               l15131 25E3  
                             l15123 2A11                               l10891 106A  
                             l10948 2A79                               l10964 2A9D  
                             l21380 2F42                               l10884 00F0  
                             l15140 262A                               l15132 25E2  
                             l15116 2A07                               l10892 107F  
                             l10885 00F6                               l21373 20EA  
                             l15133 262D                               l15141 2629  
                             l15117 29F4                               l10893 1089  
                             l10974 37E7                               l10958 2A91  
                             l10982 37F8                               l10990 2846  
                             l10886 00FC                               l21390 238F  
                             l21374 2133                               l15150 1B6B  
                             l15134 2613                               l15142 262D  
                             l15118 2A00                               l10894 112E  
                             l10975 37EE                               l10967 29DD  
                             l10959 2A7D                               l10983 37FF  
                             l10991 284D                               l21383 2999  
                             l10887 00FE                               l21391 23BF  
                             l21375 2133                               l15151 1B0D  
                             l15135 25F4                               l15119 29F5  
                             l10895 1123                               l10976 37EE  
                             l10968 29D6                               l10984 37FF  
                             l10992 284D                               l21392 2392  
                             l15160 1B6A                               l15152 1B18  
                             l15136 2604                               l15128 25E4  
                             l10896 1112                               l10969 29F2  
                             l21393 23BF                               l15161 1B75  
                             l15153 1B0E                               l15145 1AE8  
                             l15137 2612                               l15129 25D8  
                             l10897 1137                               l21386 297D  
                             l21378 2EF9                               l21394 23BB  
                             l15170 1BF3                               l15162 1BE7  
                             l15154 1B2D                               l15146 1ADA  
                             l15138 262C                               l10898 1246  
                             l10987 36FB                               l10979 3700  
                             l10995 3705                               l21379 2F42  
                             l21395 23BE                               l15163 1BAA  
                             l15171 1BF3                               l15155 1B44  
                             l15139 262B                               l10899 123A  
                             l15164 1B86                               l15156 1B4A  
                             l15148 1B0B                               l21389 2393  
                             l15181 244F                               l15165 1BE6  
                             l15157 1B45                               l15149 1B0C  
                             l23510 28B2                               l10998 23F4  
                             l15174 2E1E                               l15182 24B3  
                             l15166 1B87                               l10999 2439  
                             l15175 2DF2                               l15191 24A2  
                             l15183 2493                               l15167 1B8F  
                             l15159 1B69                               l23600 17DA  
                             l15176 2E19                               l15184 2472  
                             l15168 1B98                               l23505 3716  
                             l23601 1777                               l15177 2E3A  
                             l15185 2492                               l15169 1BA1  
                             l23602 17C8                               l23530 14B7  
                             l15178 2E34                               l15194 2FB8  
                             l15186 248B                               l23603 1778  
                             l23531 14C8                               l15195 2FFF  
                             l15187 2491                               l23508 28AB  
                             l23604 1779                               l23540 1545  
                             l23532 14C7                               l15196 2FE4  
                             l23509 28B2                               l23525 17E7  
                             l23605 17D5                               l23541 1548  
                             l23533 14C9                               l15197 2FC1  
                             l15189 249D                               l23606 17A4  
                             l23542 15E6                               l23550 154E  
                             l23534 150D                               l23526 14A6  
                             l15198 2FFB                               l23471 1011  
                             l23607 17E6                               l23551 1564  
                             l23543 1549                               l23535 14D9  
                             l23527 14B1                               l23472 100A  
                             l23544 17FF                               l23608 17FE  
                             l23560 15BA                               l23552 156C  
                             l23536 150C                               l23528 14B6  
                             l17240 29B6                               l23473 1015  
                             l23561 15C9                               l23553 1567  
                             l23545 154A                               l23609 17FF  
                             l23537 1546                               l23529 14BE  
                             l23481 01E0                               l23474 102A  
                             l23570 16A8                               l23562 15BB  
                             l23554 1579                               l23546 154B  
                             l23538 1538                               l23490 0167  
                             l23482 010C                               l23571 1648  
                             l23547 160B                               l23563 15DE  
                             l23555 1592                               l23539 151E  
                             l17243 206B                               l17251 2B69  
                             l23491 0189                               l23483 010E  
                             l23580 169B                               l23572 1649  
                             l23564 15DF                               l23556 15A1  
                             l23548 154C                               l17244 206A  
                             l23492 0188                               l23484 011D  
                             l34301 22CD                               l23581 16C3  
                             l23573 1654                               l23565 15E0  
                             l23557 15A4                               l23549 154C  
                             l17245 2069                               l23485 01EC  
                             l23493 01A7                               l25406 2A35  
                             l23590 1752                               l23582 16D2  
                             l23574 1677                               l23566 162B  
                             l23558 15AA                               l17246 2068  
                             l23494 01A6                               l23486 0134  
                             l25407 2A3C                               l34063 3723  
                             l34207 3706                               l34303 22D0  
                             l34311 2BC8                               l23591 1738  
                             l23583 16D2                               l23575 166C  
                             l23567 162A                               l23559 15A5  
                             l17239 29B6                               l17247 2067  
                             l23495 01CC                               l23487 0143  
                             l25408 2A55                               l23592 1751  
                             l23584 16E3                               l23576 16B4  
                             l23568 1637                               l17248 206B  
                             l23488 014C                               l23496 01EC  
                             l34065 3729                               l34209 370A  
                             l34241 2DBD                               l34233 2DA1  
                             l34305 22D5                               l34313 2BCE  
                             l34321 2E3E                               l23593 1740  
                             l23585 1707                               l23577 1678  
                             l23569 1647                               l23489 0152  
                             l27210 2C2A                               l23594 1750  
                             l23586 1702                               l23578 1683  
                             l27211 2C2B                               l23499 3710  
                             l34251 2DE3                               l34243 2DC7  
                             l34235 2DA2                               l34307 22D7  
                             l34315 2BDA                               l34331 2E76  
                             l34323 2E48                               l23595 1776  
                             l23587 1706                               l23579 16A6  
                             l27212 2C2B                               l23596 176A  
                             l23588 1725                               l27205 2BF7  
                             l34237 2DAB                               l34245 2DC8  
                             l34261 2F32                               l34253 2EE8  
                             l34309 22DA                               l34317 2BF4  
                             l34325 2E59                               l34333 2E7B  
                             l23597 1759                               l23589 1729  
                             l27206 2BF8                               l23598 1769  
                             l27207 2BF8                               l34239 2DB4  
                             l34247 2DD6                               l34255 2EEF  
                             l34335 2E8A                               l34327 2E71  
                             l34319 2E3D                               l23599 1775  
                             l27208 2BFE                               l27209 2C1A  
                             l34249 2DDA                               l34257 2EF8  
                             l34337 2E8D                               l34329 2E72  
                             l19330 2B30                               l34259 2EF9  
                             l19331 2B38                               l34291 22AB  
                             l34283 2271                               l37011 28C2  
                             l29100 292B                               l33901 1027  
                             l19325 2B19                               l34293 22AF  
                             l34285 2274                               l37013 28C6  
                             l37005 28B5                               l37021 291A  
                             l37101 2C4A                               l19326 2B3C  
                             l19334 22D5                               l29110 095C  
                             l33903 372A                               l19327 2B32  
                             l19335 22D0                               l34295 22B3  
                             l34287 2285                               l37015 28C8  
                             l37007 28B6                               l37031 292B  
                             l37023 291F                               l29103 2AA2  
                             l29111 0952                               l37103 2C5A  
                             l37111 0057                               l34551 1932  
                             l19328 2B1A                               l19336 22C5  
                             l29104 2AAA                               l29112 0961  
                             l29120 2CED                               l33905 3730  
                             l19329 2B23                               l19337 22C5  
                             l34297 22C4                               l34289 2297  
                             l37009 28BC                               l37025 2921  
                             l37017 2914                               l29105 2ABB  
                             l37041 2ABB                               l37033 2A9E  
                             l29113 0962                               l29121 2CE3  
                             l37105 2C63                               l34481 2093  
                             l34473 206C                               l37121 0063  
                             l37113 0059                               l34561 1973  
                             l34553 1938                               l37201 1559  
                             l38001 2606                               l19338 22CA  
                             l29106 2AC2                               l29114 0977  
                             l29122 2CF2                               l33907 3731  
                             l19339 22DA                               l34299 22CA  
                             l37027 2923                               l37019 2916  
                             l37043 2AC2                               l37035 2AA2  
                             l29115 0983                               l37051 0952  
                             l29123 2CF3                               l34491 20BD  
                             l34483 209A                               l34475 207D  
                             l37131 006E                               l37123 0066  
                             l37115 005C                               l37107 0053  
                             l34571 19DF                               l34563 1976  
                             l34555 1939                               l37211 1579  
                             l37203 155F                               l38011 2620  
                             l38003 260A                               ?_echo 0047  
                             l29116 098B                               l29124 2D02  
                             l19292 198A                               l37029 2929  
                             l37037 2AA6                               l29109 0984  
                             l37061 0975                               l37053 0957  
                             l37045 0945                               l29125 2D0E  
                             l34485 20AC                               l34477 2081  
                             l34493 20C5                               l37141 009C  
                             l37133 0074                               l37125 0069  
                             l37117 005F                               l37109 0055  
                             l34581 19E6                               l34573 19E0  
                             l19293 19DD                               l34565 198A  
                             l34557 193B                               l34549 192D  
                             l37301 16D8                               l37221 15A1  
                             l37213 157D                               l37205 1564  
                             l38013 2624                               l38005 2613  
                             l38021 264F                               l38101 134E  
                             l29126 2D16                               l19294 19F8  
                             l37039 2AAF                               l37063 0977  
                             l37055 095C                               l37047 0948  
                             l29119 2D0F                               l37071 2CD8  
                             l34495 20CE                               l34487 20B4  
                             l34479 208D                               l37151 00F5  
                             l37143 00A3                               l37135 0086  
                             l37127 006C                               l37119 0061  
                             l19295 19F8                               l34591 19EB  
                             l34583 19E7                               l34575 19E1  
                             l34567 19DD                               l34559 193F  
                             l37303 16DE                               l37311 1707  
                             l37231 15C9                               l37223 15A5  
                             l37215 158C                               l37207 1567  
                             l38007 261A                               l38031 2659  
                             l38023 2650                               l38015 262E  
                             l38111 1388                               l38103 136A  
                             l29072 28C6                               l33881 3774  
                             l29073 28C8                               l37065 097C  
                             l37057 0962                               l37049 094E  
                             l37081 2CF3                               l37073 2CDF  
                             l34489 20B6                               l37153 00FA  
                             l37145 00A4                               l37137 0090  
                             l37129 006D                               l34593 19ED  
                             l34585 19E8                               l34577 19E3  
                             l34569 19DE                               l37321 1733  
                             l37313 171A                               l37305 16E4  
                             l37241 1611                               l37233 15E0  
                             l37225 15AA                               l37217 1592  
                             l37209 156C                               l37161 14A6  
                             l37401 20DF                               l38009 261E  
                             l38041 2682                               l38033 265B  
                             l38025 2651                               l38017 2632  
                             l38121 13C1                               l38113 139B  
                             l38105 1372                               l38201 012F  
                             l29082 2BCE                               l29090 2E72  
                             l33883 377E                               l33891 100A  
                             l29083 2BCD                               l37059 0971  
                             l37067 0984                               l37091 2D16  
                             l37083 2CFD                               l37075 2CE3  
                             l37155 00FC                               l37147 00E6  
                             l37139 009A                               l34595 19F2  
                             l34587 19E9                               l34579 19E4  
                             l37331 1759                               l37323 1738  
                             l37315 1725                               l37307 16F7  
                             l37243 1618                               l37251 162B  
                             l37235 15E5                               l37227 15BB  
                             l37219 159C                               l37171 14BD  
                             l37163 14AC                               l37403 20E9  
                             l37411 37D0                               l38043 2694  
                             l38035 265D                               l38027 2654  
                             l38019 263F                               l38051 29F3  
                             l38131 1401                               l38123 13D2  
                             l38115 13B1                               l38107 1380  
                             l38211 0152                               l38203 0134  
                             l29076 2B88                               l29084 2BDA  
                             l29092 2E59                               l29180 2C5A  
                             l33885 3780                               l33893 100C  
                             l29077 2B75                               l29085 2BF4  
                             l29093 2E8D                               l37069 098B  
                             l37085 2D02                               l37077 2CE8  
                             l29181 2C63                               l37093 2C2C  
                             l37157 00FE                               l37149 00EA  
                             l34597 19F5                               l34589 19EA  
                             l37341 17A4                               l37333 175D  
                             l37325 1740                               l37317 1729  
                             l37309 1702                               l37261 1649  
                             l37253 1632                               l37245 161C  
                             l37229 15C3                               l37237 15E6  
                             l37181 14FB                               l37173 14BE  
                             l37165 14B1                               l37405 20EA  
                             l37421 23F4                               l37413 23C2  
                             l37501 2523                               l38045 269C  
                             l38029 2656                               l38037 2660  
                             l38053 29F5                               l38141 145A  
                             l38133 140C                               l38125 13E5  
                             l38117 13B5                               l38109 1381  
                             l38061 1258                               l38221 0171  
                             l38213 0158                               l38205 0142  
                             l38301 112F                               l29078 2B97  
                             l29094 2E8A                               l33879 3733  
                             l33895 1011                               l33887 1003  
                             l29079 2B97                               l37087 2D07  
                             l37079 2CED                               l37095 2C36  
                             l37343 17C7                               l37335 176A  
                             l37327 1744                               l37319 172D  
                             l37271 166C                               l37263 164C  
                             l37247 1620                               l37255 1637  
                             l37239 160B                               l37191 151E  
                             l37183 14FF                               l37175 14C9  
                             l37167 14B4                               l37351 17E7  
                             l37159 14A0                               l37407 2123  
                             l37415 23C6                               l37431 2E19  
                             l37423 2DEF                               l37511 2722  
                             l37503 26BF                               l38047 26AF  
                             l38039 2673                               l38055 29FA  
                             l38151 148B                               l38143 1470  
                             l38135 141D                               l38127 13FC  
                             l38119 13B6                               l38071 128E  
                             l38063 1261                               l38223 0176  
                             l38231 0189                               l38215 015D  
                             l38207 0145                               l38311 11C7  
                             l38303 1136                               l29088 2E7B  
                             l29280 20B6                               l33897 1017  
                             l33889 1008                               l36801 37E7  
                             l29089 2E3E                               l29097 2916  
                             l37089 2D0F                               l37097 2C3A  
                             l29281 20C4                               l37345 17C8  
                             l37337 1770                               l37329 1752  
                             l37281 1683                               l37273 1670  
                             l37265 1653                               l37257 163C  
                             l37249 1624                               l37193 1533  
                             l37177 14D5                               l37185 150D  
                             l37169 14B8                               l37361 238D  
                             l37353 234C                               l37409 37CE  
                             l37417 23DA                               l37425 2DF2  
                             l37433 2E1E                               l37441 29AB  
                             l37513 2733                               l37505 26C0  
                             l37521 2877                               l37601 2C74  
                             l38049 26B3                               l38057 2A00  
                             l38153 1492                               l38145 1476  
                             l38137 1430                               l38129 1400  
                             l38081 12C3                               l38073 129C  
                             l38065 1262                               l38161 22E6  
                             l38233 0190                               l38225 017C  
                             l38241 01A7                               l38217 0161  
                             l38209 0151                               l38313 1217  
                             l38321 1246                               l38305 1137  
                             l38401 1DF9                               l29098 291F  
                             l29178 2C36                               l29282 20CE  
                             l33899 1024                               l36811 29BD  
                             l36803 29B7                               l29099 2929  
                             l29179 2C43                               l37099 2C43  
                             l29275 20C5                               l37347 17D5  
                             l37339 1779                               l37283 169A  
                             l37275 1678                               l37267 1654  
                             l37259 1642                               l37291 16A8  
                             l37195 1538                               l37187 1518  
                             l37179 14D9                               l37371 23B7  
                             l37363 238E                               l37355 2354  
                             l37419 23F3                               l37435 2E34  
                             l37427 2E11                               l37443 29B0  
                             l37451 2019                               l37515 273C  
                             l37507 26F0                               l37523 2AC5  
                             l37531 3785                               l37611 2C92  
                             l37603 2C79                               l38059 2A07  
                             l38147 147D                               l38139 1447  
                             l38155 149A                               l38091 12FE  
                             l38083 12C7                               l38075 12A0  
                             l38067 1265                               l38171 2306  
                             l38163 22EB                               l38251 01DF  
                             l38243 01B5                               l38235 019A  
                             l38227 0180                               l38219 0167  
                             l38323 124B                               l38315 1228  
                             l38307 114C                               l38331 2A1B  
                             l38411 1E0C                               l38403 1DFC  
                             l29276 208D                               l36813 29BE  
                             l36805 29B8                               l36901 2D5F  
                             l29277 2081                               l37349 17DA  
                             l37285 169B                               l37277 167B  
                             l37269 166B                               l37293 16B4  
                             l37197 154E                               l37189 151C  
                             l37373 23B9                               l37365 238F  
                             l37357 2379                               l37381 2860  
                             l37437 2E3A                               l37429 2E18  
                             l37445 374A                               l37461 204B  
                             l37453 2029                               l37509 2711  
                             l37517 273D                               l37525 2AD3  
                             l37533 3794                               l37541 243A  
                             l37613 2C96                               l37605 2C7E  
                             l37621 2D27                               l37701 0A7E  
                             l38149 1483                               l38093 1306  
                             l38085 12D6                               l38077 12B0  
                             l38069 126A                               l38181 2333  
                             l38173 230A                               l38165 22F0  
                             l38157 22DD                               l38245 01C1  
                             l38237 019E                               l38229 0181  
                             l38253 01E0                               l38325 124E  
                             l38309 1195                               l38317 123A  
                             l38261 103A                               l38333 2A21  
                             l38341 2935                               l38421 1E3D  
                             l38413 1E12                               l38405 1E01  
                             l38501 2208                               l29278 2092  
                             l36807 29BA                               l36815 29BF  
                             l36831 2A6A                               l36903 2D63  
                             l36911 1BFD                               l29279 2093  
                             l37295 16BE                               l37287 169F  
                             l37279 1682                               l37199 1555  
                             l37375 23BA                               l37367 2391  
                             l37359 238B                               l37383 2861  
                             l37391 01F7                               l37439 299C  
                             l37447 374F                               l37463 204C  
                             l37455 2032                               l37471 2B3D  
                             l37519 2873                               l37527 2ADA  
                             l37535 37A3                               l37551 246E  
                             l37543 2448                               l37607 2C8B  
                             l37631 2D46                               l37623 2D2C  
                             l37615 2D19                               l37711 0AB9  
                             l37703 0A8B                               l38095 1322  
                             l38087 12DA                               l38079 12B4  
                             l38183 233F                               l38175 2312  
                             l38167 22FD                               l38159 22E0  
                             l38191 3758                               l38247 01CC  
                             l38239 019F                               l38319 123F  
                             l38271 1055                               l38263 103E  
                             l38255 102B                               l38335 2A27  
                             l38327 2A12                               l38343 293B  
                             l38431 1E55                               l38423 1E44  
                             l38407 1E04                               l38415 1E13  
                             l38351 1D3B                               l38511 2223  
                             l38503 220E                               l36761 2C13  
                             l36817 29D2                               l36809 29BB  
                             l36833 2A6C                               l36825 2A58  
                             l36841 29D8                               l36905 2D7F  
                             l36921 1C52                               l36913 1C03  
                             l37297 16C3                               l37289 16A7  
                             l37377 23BB                               l37369 2393  
                             l37385 286C                               l37393 01F8  
                             l37465 2058                               l37457 203E  
                             l37449 200C                               l37481 24D7  
                             l37473 24B4                               l37529 2ADB  
                             l37537 37B2                               l37553 2472  
                             l37561 2493                               l37545 244E  
                             l37609 2C8D                               l37633 2D51  
                             l37625 2D31                               l37617 2D1E  
                             l37641 2E9D                               l37721 0AF1  
                             l37713 0AC1                               l37705 0A98  
                             l39241 259E                               l38097 132A  
                             l38089 12E2                               l38177 2315  
                             l38169 2302                               l38185 288A  
                             l38249 01DC                               l38193 010B  
                             l38281 1081                               l38273 105A  
                             l38265 1044                               l38257 102D  
                             l38329 2A1A                               l38345 2941  
                             l38337 292C                               l38441 1E7A  
                             l38433 1E59                               l38425 1E49  
                             l38417 1E2E                               l38409 1E09  
                             l38361 1D6A                               l38353 1D48  
                             l38521 2243                               l38513 222A  
                             l38505 2212                               l38601 0C5E  
                             l36771 2C22                               l36763 2C15  
                             l36819 29D4                               l36827 2A5A  
                             l36835 2A6D                               l39251 29E8  
                             l36851 29F0                               l36843 29D9  
                             l36907 2D8D                               l36931 1CFC  
                             l36923 1C86                               l36915 1C07  
                             l37299 16CD                               l37379 23BD  
                             l37395 01F9                               l37387 01EF  
                             l37467 2059                               l37459 203F  
                             l37491 24FF                               l37483 24DF  
                             l37475 24B5                               l37539 37C1  
                             l37571 24B3                               l37563 2498  
                             l37555 2489                               l37547 244F  
                             l37627 2D3F                               l37619 2D21  
                             l37651 2EC6                               l37643 2EAB  
                             l37635 2E90                               l37731 0B22  
                             l37723 0AFE                               l37715 0AC9  
                             l37707 0AA5                               l39243 1BD6  
                             l37811 2BA2                               l38099 1346  
                             l38179 231E                               l38187 2891  
                             l38195 010E                               l38291 10F6  
                             l38283 1088                               l38275 106A  
                             l38267 1049                               l38259 1032  
                             l38339 2934                               l38435 1E5C  
                             l38427 1E4D                               l38419 1E3C  
                             l38443 1E82                               l38371 1D8E  
                             l38363 1D7A                               l38355 1D4D  
                             l38347 1D32                               l38523 2248  
                             l38515 222E                               l38531 2263  
                             l38507 2216                               l38611 0C89  
                             l38603 0C66                               l36773 2C23  
                             l36765 2C19                               l36757 2BFE  
                             l36781 370B                               l39253 29CA  
                             l36829 2A64                               l36853 29F2  
                             l36845 29DB                               l36837 29D5  
                             l36861 2A7E                               l36925 1CAF  
                             l36917 1C28                               l36933 1CFD  
                             l36909 1BF4                               l37389 01F1  
                             l37397 20CF                               l37469 2065  
                             l37493 2506                               l37485 24EA  
                             l37477 24C2                               l37581 2FB8  
                             l37573 2FA1                               l37565 249D  
                             l37557 248B                               l37549 2457  
                             l37629 2D45                               l37661 2EDE  
                             l37653 2ECC                               l37645 2EB2  
                             l37637 2E96                               l37733 0B2B  
                             l37725 0B0C                               l37717 0AD7  
                             l37709 0AB2                               l39245 1BDB  
                             l37741 1ACC                               l37813 2BBB  
                             l37821 253B                               l37901 216F  
                             l38189 3766                               l38197 011C  
                             l38293 10FE                               l38285 1089  
                             l38277 106F                               l38269 1050  
                             l38445 1E87                               l38437 1E62  
                             l38429 1E50                               l39237 1E1E  
                             l38381 1DC4                               l38373 1D9D  
                             l38365 1D7E                               l38357 1D56  
                             l38349 1D34                               l38461 21A4  
                             l38525 2251                               l38517 2235  
                             l38509 221D                               l38701 0E2D  
                             l38621 0CAD                               l38605 0C6A  
                             l38613 0C93                               l38541 0B59  
                             l36775 2C28                               l36767 2C1D  
                             l36759 2C0D                               l36783 3710  
                             l36791 36FB                               l36847 29DC  
                             l36839 29D6                               l36863 2A84  
                             l36871 289F                               l36927 1CE9  
                             l36919 1C29                               l36935 1D28  
                             l36943 2832                               l36951 2B6C  
                             l37399 20D6                               l37495 250E  
                             l37487 24F2                               l37479 24CD  
                             l37591 2FFB                               l37583 2FC1  
                             l37575 2FA4                               l37567 24A2  
                             l37559 2490                               l37655 2ED0  
                             l37647 2EB8                               l37639 2E98  
                             l37735 0B35                               l37719 0AE4  
                             l37671 09A2                               l37727 0B0D  
                             l37663 098C                               l37751 1AEE  
                             l37743 1AD7                               l37815 2BC2  
                             l37807 2B9A                               l37831 256D  
                             l37823 2544                               l37911 218A  
                             l37903 2177                               l38199 011F  
                             l38295 1112                               l38287 109E  
                             l38279 107F                               l39239 1E6E  
                             l38439 1E63                               l38391 1DDC  
                             l38383 1DCC                               l38375 1DA9  
                             l38367 1D86                               l38359 1D5E  
                             l38471 21BC                               l38463 21A5  
                             l38527 2256                               l38519 223A  
                             l38711 0E69                               l38703 0E33  
                             l38631 0CE1                               l38623 0CB4  
                             l38615 0C98                               l38607 0C7B  
                             l38551 0B80                               l38543 0B67  
                             l36769 2C21                               l36777 2A3C  
                             l36785 3711                               l36793 2962  
                             l36849 29DD                               l36865 2A8A  
                             l36873 28A3                               l36881 3700  
                             l36937 1D31                               l39249 1D1F  
                             l36929 1CF3                               l36945 28FA  
                             l36953 2B75                               l36961 297E  
                             l37497 2519                               l37489 24FA  
                             l37593 2FFF                               l37585 2FD1  
                             l37577 2FB1                               l37569 24AF  
                             l37657 2ED5                               l37649 2EBE  
                             l37729 0B1D                               l37681 0A28  
                             l37673 09B2                               l37665 098F  
                             l37761 1B22                               l37753 1AFC  
                             l37745 1ADA                               l37809 2B9E  
                             l37825 2551                               l37833 256E  
                             l37841 2594                               l37817 2532  
                             l37913 2191                               l37905 217D  
                             l37921 187E                               l38289 10E4  
                             l38297 1123                               l38393 1DE3  
                             l38385 1DD4                               l38377 1DBA  
                             l38369 1D8A                               l38481 21D8  
                             l38473 21C0                               l38465 21B0  
                             l38529 2262                               l38721 0E9F  
                             l38713 0E76                               l38705 0E39  
                             l38641 0D05                               l38633 0CE8  
                             l38625 0CBA                               l38617 0CA1  
                             l38609 0C85                               l38561 0BAB  
                             l38553 0B92                               l38545 0B6D  
                             l38537 0B3D                               l38801 1EA7  
                             l36779 2A55                               l36787 3716  
                             l36795 296B                               l36867 2A90  
                             l36859 2A7C                               l36875 28A8  
                             l36883 37F1                               l36891 3705  
                             l36947 290F                               l36955 2B7F  
                             l36963 2987                               l36971 2B27  
                             l37499 2522                               l37587 2FDE  
                             l37579 2FB7                               l37595 2C66  
                             l37659 2EDD                               l37691 0A4E  
                             l37683 0A2F                               l37675 09E5  
                             l37667 0995                               l37771 1B4A  
                             l37763 1B2D                               l37755 1B0E  
                             l37747 1AE3                               l37835 257D  
                             l37827 255E                               l37819 2533  
                             l37851 180B                               l37907 2182  
                             l37915 2194                               l37931 189E  
                             l37923 1881                               l38299 1128  
                             l38395 1DE5                               l38387 1DD5  
                             l38379 1DBF                               l38491 21E8  
                             l38483 21E0                               l38475 21C4  
                             l38467 21B4                               l38459 219D  
                             l38731 0EE3                               l38723 0EB2  
                             l38715 0E7C                               l38707 0E51  
                             l38651 0D24                               l38643 0D0B  
                             l38635 0CEE                               l38627 0CC0  
                             l38619 0CA7                               l38571 0BD2  
                             l38563 0BB9                               l38555 0B97  
                             l38547 0B73                               l38539 0B4F  
                             l38811 1ED4                               l38803 1EB4  
                             l36789 36F7                               l36797 37E0  
                             l36869 2A91                               l36877 28AB  
                             l36885 37F5                               l36893 283F  
                             l36949 2911                               l36957 2B83  
                             l36981 2B38                               l36973 2B2C  
                             l36965 2B12                               l37589 2FE4  
                             l37597 2C6B                               l37685 0A3B  
                             l37693 0A58                               l37677 09F0  
                             l37669 099C                               l37781 1B80  
                             l37773 1B54                               l37765 1B37  
                             l37757 1B13                               l37749 1AE8  
                             l37837 258C                               l37829 2566  
                             l37861 1827                               l37853 1813  
                             l37917 2198                               l37909 2186  
                             l37941 18C6                               l37933 18A3  
                             l37925 1887                               l38397 1DEA  
                             l38389 1DD9                               l38493 21F3  
                             l38485 21E2                               l38477 21C8  
                             l38469 21B8                               l38741 0F4C  
                             l38733 0EFB                               l38725 0EBF  
                             l38717 0E82                               l38709 0E56  
                             l38661 0D54                               l38653 0D40  
                             l38645 0D11                               l38637 0CF7  
                             l38629 0CDC                               l38581 0BFD  
                             l38573 0BE4                               l38565 0BBF  
                             l38557 0B9C                               l38549 0B7A  
                             l38813 1EDC                               l38821 1F01  
                             l38805 1EBF                               l38901 2784  
                             l36799 37E4                               l36879 36FC  
                             l36887 37F8                               l36895 2843  
                             l36959 2B88                               l36983 2B3B  
                             l36975 2B2E                               l36967 2B18  
                             l37599 2C6E                               l37695 0A63  
                             l37687 0A42                               l37679 0A24  
                             l37791 1BA1                               l37783 1B85  
                             l37775 1B5E                               l37767 1B3F  
                             l37759 1B18                               l37839 2593  
                             l37871 1843                               l37863 182D  
                             l37855 1816                               l37847 1801  
                             l37951 18E9                               l37943 18CD  
                             l37935 18A8                               l37927 188C  
                             l37919 187A                               l38399 1DEB  
                             l38495 21F7                               l38487 21E3  
                             l38479 21D0                               l38751 0F77  
                             l38743 0F51                               l38735 0F21  
                             l38727 0EC5                               l38719 0E9A  
                             l38671 0D99                               l38663 0D61  
                             l38655 0D45                               l38647 0D18  
                             l38639 0CFC                               l38591 0C32  
                             l38583 0C03                               l38575 0BE9  
                             l38567 0BC5                               l38559 0BA1  
                             l38831 1F33                               l38823 1F0E  
                             l38815 1EE9                               l38807 1EC0  
                             l38911 27AE                               l38903 278C  
                             l36889 3701                               l36897 2846  
                             l36977 2B30                               l36969 2B1F  
                             l37689 0A46                               l37697 0A64  
                             l37785 1B87                               l37793 1BAA  
                             l37769 1B45                               l37777 1B6B  
                             l37873 1848                               l37865 1832  
                             l37857 181B                               l37849 1804  
                             l37881 186B                               l37961 1911  
                             l37953 18EF                               l37945 18D3  
                             l37937 18AC                               l37929 1891  
                             l38497 21F8                               l38489 21E7  
                             l38761 0FAA                               l38753 0F84  
                             l38745 0F56                               l38737 0F26  
                             l38729 0ECB                               l38681 0DCD  
                             l38673 0DA0                               l38665 0D83  
                             l38657 0D4A                               l38649 0D1E  
                             l38593 0C37                               l38585 0C0A  
                             l38577 0BEE                               l38569 0BCC  
                             l38841 1F5A                               l38833 1F39  
                             l38825 1F16                               l38817 1EF4  
                             l38809 1ECC                               l38921 27C9  
                             l38913 27AF                               l38905 2798  
                             l36899 2D57                               l36979 2B32  
                             l37699 0A70                               l37795 1BBF  
                             l37787 1B8F                               l37779 1B75  
                             l37875 184E                               l37867 1838  
                             l37859 1822                               l37891 214C  
                             l37883 2136                               l37955 18F2  
                             l37963 1912                               l37947 18D9  
                             l37939 18B4                               l37971 25B5  
                             l38499 2204                               l38771 0FC4  
                             l38763 0FB1                               l38755 0F8A  
                             l38747 0F63                               l38739 0F47  
                             l38691 0DFD                               l38683 0DD3  
                             l38675 0DA6                               l38667 0D8D  
                             l38659 0D4F                               l38595 0C41  
                             l38587 0C10                               l38579 0BF7  
                             l38851 1F85                               l38843 1F5F  
                             l38835 1F42                               l38827 1F1F  
                             l38819 1EF5                               l38931 27DC  
                             l38923 27CC                               l38915 27B4  
                             l38907 27A0                               l37789 1B98  
                             l37797 1BE7                               l37869 183D  
                             l37877 1859                               l37893 2151  
                             l37885 2143                               l37957 18FB  
                             l37965 1923                               l37949 18DF  
                             l37981 25D2                               l37973 25BB  
                             l38773 0FD0                               l38765 0FB7  
                             l38757 0F9B                               l38749 0F6D  
                             l38693 0E03                               l38685 0DE3  
                             l38677 0DAC                               l38669 0D93  
                             l38597 0C4D                               l38589 0C16  
                             l38781 0FEC                               l38861 1FA9  
                             l38853 1F8D                               l38845 1F64  
                             l38837 1F50                               l38829 1F29  
                             l38941 27EE                               l38933 27DF  
                             l38925 27D1                               l38917 27BC  
                             l38909 27AC                               l37879 186A  
                             l37895 2161                               l37887 2144  
                             l37959 1905                               l37967 1928  
                             l37991 25EF                               l37975 25C1  
                             l37983 25D8                               l38775 0FDE  
                             l38767 0FBB                               l38759 0FA5  
                             l38695 0E15                               l38687 0DE9  
                             l38679 0DC8                               l38599 0C56  
                             l38783 0FF7                               l38871 1FE1  
                             l38863 1FAF                               l38855 1F92  
                             l38847 1F71                               l38839 1F56  
                             l38791 1E8C                               l38943 27F1  
                             l38935 27E4                               l38927 27D4  
                             l38919 27C1                               l37897 2162  
                             l37889 2148                               l37993 25F4  
                             l37985 25DD                               l37977 25CA  
                             l37969 25AF                               l38777 0FDF  
                             l38769 0FC3                               l38697 0E1A  
                             l38689 0DF7                               l38873 1FEA  
                             l38865 1FB9                               l38857 1F9B  
                             l38849 1F81                               l38793 1E91  
                             l38945 27F4                               l38937 27E8  
                             l38929 27D7                               l37899 2168  
                             l37995 25F9                               l37979 25CE  
                             l37987 25E4                               l38779 0FEB  
                             l38699 0E1F                               l38875 1FEF  
                             l38867 1FD1                               l38859 1FA4  
                             l38795 1E92                               l38947 27F7  
                             l38939 27EB                               l38891 2760  
                             l37997 25FF                               l37989 25EB  
                             l38877 1FF3                               l38869 1FDB  
                             l38797 1E97                               l38949 27FA  
                             l38893 2768                               l37999 2604  
                             l38799 1E9F                               l38879 1FF4  
                             l38895 276D                               l38887 274D  
                             l38897 2775                               l38889 2754  
                             l38899 277C                               ?_main 0072  
                             _ADRES 009B                               _EEADR 0191  
                             STR_10 0918                               STR_11 0903  
                             STR_20 0938                               STR_12 091E  
                             STR_13 08A7                               STR_21 07B7  
                             STR_30 0880                               STR_22 0705  
                             STR_14 05B6                               STR_23 07EF  
                             STR_31 0923                               STR_15 07F1  
                             STR_32 0934                               STR_40 081A  
                             STR_16 07A8                               STR_24 0578  
                             _BRG16 0CFB                               STR_25 0930  
                             STR_33 08DC                               STR_41 088A  
                             STR_17 0833                               STR_26 0938  
                             STR_50 092C                               STR_42 08F4  
                             STR_34 089E                               STR_18 07FF  
                             STR_51 07F0                               STR_19 0930  
                             STR_43 08C2                               STR_35 07E3  
                             STR_27 0749                               STR_52 090A  
                             STR_60 0894                               STR_44 083F  
                             STR_28 068B                               STR_36 058D  
                             STR_61 0856                               STR_37 0930  
                             STR_53 08CB                               STR_45 08B9  
                             STR_29 069D                               STR_70 0934  
                             STR_38 0938                               STR_46 08B0  
                             STR_54 0856                               STR_62 0769  
                             STR_71 07F0                               STR_39 0833  
                             STR_63 0942                               STR_47 0911  
                             STR_55 07C6                               STR_80 07F0  
                             STR_72 090A                               STR_64 092C  
                             STR_56 0942                               STR_48 0759  
                             STR_65 07F0                               STR_81 090A  
                             STR_57 092C                               STR_49 0942  
                             STR_73 0727                               STR_74 07F0  
                             STR_58 07F0                               STR_90 07EF  
                             STR_66 090A                               STR_82 0534  
                             STR_83 07F0                               STR_75 090A  
                             STR_59 090A                               STR_67 062D  
                             STR_91 05A2                               STR_84 090A  
                             STR_92 0827                               STR_76 05F2  
                             STR_68 05CA                               STR_77 090A  
                             STR_69 0923                               STR_93 0876  
                             STR_85 0716                               STR_78 07F0  
                             STR_94 0679                               STR_86 061A  
                             STR_87 08EC                               STR_95 08D4  
                             STR_79 05DE                               STR_96 093F  
                             STR_88 0562                               STR_97 0928  
                             STR_89 06AF                               STR_98 080D  
                             STR_99 093C                               _CARRY 0018  
                   ?_interrupt_init 0072                               u10010 2CF1  
                             u10011 2CF0                     __end_of___lldiv 20CF  
                             u10020 2CFD                               u10021 2CFC  
                             u10005 2CE4                               u10110 00F0  
                             u10111 00EF                               u10040 2D0D  
                             u10120 00F5                               u10104 00B9  
                             u10200 1578                               u11000 0AB9  
                             u10041 2D0C                               u10025 2CF9  
                             u10121 00F4                               u10105 00B8  
                             u10201 1577                               u11001 0AB8  
                             u10050 2C3A                               u10130 00FA  
                             u10210 157D                               u11010 0B1D  
                             u10035 2D03                               u10051 2C39  
                             u10131 00F9                               u11011 0B1C  
                             u10300 1652                               u10220 158C  
                             u10140 14AC                               u11020 0B22  
                             u11100 1B5E                               u10301 1651  
                             u10221 158B                               u10141 14AB  
                             u11101 1B5D                               u10310 166A  
                             u10230 159C                               u10150 14D5  
                             u11110 1B68                               u11030 1AEE  
                             u10311 1669                               u10231 159B  
                             u10151 14D4                               u11111 1B67  
                             u11031 1AED                               u10080 2C59  
                             u10400 16F7                               u10320 1676  
                             u10240 15B9                               u10160 150B  
                             u11120 1B74                               u11040 1AFC  
                             u11200 182D                               u12000 019A  
                             u10081 2C58                               u10065 2C44  
                             u10401 16F6                               u10321 1675  
                             u10241 15B8                               u10225 1588  
                             u10161 150A                               u11121 1B73  
                             u11041 1AFB                               u11201 182C  
                             u12001 0199                               u10090 00A2  
                             u10410 171A                               u10330 1681  
                             u10250 15DD                               u10170 1518  
                             u11130 1B84                               u11050 1B0A  
                             u11210 1838                               u12010 019E  
                             u10075 2C4B                               u10091 00A1  
                             u10411 1719                               u10331 1680  
                             u10315 1666                               u10251 15DC  
                             u10235 1598                               u10171 1517  
                             u11131 1B83                               u11051 1B09  
                             u11211 1837                               u12011 019D  
                             u10500 17FD                               u10420 172D  
                             u10340 1699                               u10260 1611  
                             u10180 1544                               u11060 1B22  
                             u11140 2B9E                               u11220 1843  
                             u11300 2198                               u12020 01B5  
                             u12100 10E4                               u10501 17FC  
                             u10421 172C                               u10405 16F3  
                             u10341 1698                               u10261 1610  
                             u10245 15B5                               u10181 1543  
                             u11061 1B21                               u11141 2B9D  
                             u11221 1842                               u11301 2197  
                             u12021 01B4                               u12101 10E3  
                             u10430 1733                               u10350 16A5  
                             u10270 1620                               u10190 155F  
                             u10510 2379                               u11070 1B2C  
                             u11150 2BA2                               u11230 184E  
                             u12110 112E                               u12030 103A  
                             u10431 1732                               u10415 1716  
                             u10351 16A4                               u10271 161F  
                             u10255 15D9                               u10191 155E  
                             u10511 2378                               u11071 1B2B  
                             u11151 2BA1                               u11231 184D  
                             u12111 112D                               u12031 1039  
                             u10440 173F                               u10360 16BE  
                             u10280 163C                               u10520 238B  
                             u10600 2E33                               u11080 1B37  
                             u11160 2BBA                               u11240 2142  
                             u11400 18E5                               u11320 1887  
                             u12200 1245                               u12120 1135  
                             u10441 173E                               u10361 16BD  
                             u10345 1695                               u10281 163B  
                             u10521 238A                               u10601 2E32  
                             u11081 1B36                               u11161 2BB8  
                             u11241 2141                               u11401 18E4  
                             u11321 1886                               u12025 01B1  
                             u12201 1244                               u12121 1134  
                             u10450 174F                               u10370 16CD  
                             u10290 1642                               u10530 23B7  
                             u10610 29B0                               u11090 1B54  
                             u11250 2148                               u11410 18E9  
                             u11330 18A3                               u12210 124B  
                             u12130 114C                               u12050 105A  
                             u10451 174E                               u10371 16CC  
                             u10291 1641                               u10531 23B6  
                             u10515 2375                               u10611 29AF  
                             u11091 1B53                               u11411 18E8  
                             u11315 187E                               u12131 114B  
                             u12051 1059                               u10460 1758  
                             u10380 16D8                               u10540 20E8  
                             u10620 374F                               u10700 24DF  
                             u11180 180B                               u11260 214C  
                             u11420 18EE                               u11340 18A8  
                             u11500 25BB                               u12060 106F  
                             u12220 2A1A                               u12300 1DA9  
                             u10461 1757                               u10381 16D7  
                             u10525 2387                               u10541 20E7  
                             u10701 24DE                               u11181 180A  
                             u11261 214B                               u11421 18ED  
                             u11341 18A7                               u11501 25BA  
                             u12061 106E                               u12045 1043  
                             u12221 2A19                               u12301 1DA8  
                             u10470 1768                               u10390 16DE  
                             u10550 2123                               u10630 2019  
                             u10710 24F2                               u11174 2BBB  
                             u11190 1822                               u11270 2182  
                             u11430 18F9                               u11350 18AC  
                             u11510 25C1                               u12150 1195  
                             u12070 1087                               u12230 2934  
                             u12310 1DCC                               u13007 008B  
                             u10471 1767                               u10391 16DD  
                             u10535 23B3                               u10551 2122  
                             u10631 2018                               u10711 24F1  
                             u11191 1821                               u11271 2181  
                             u11431 18F7                               u11511 25C0  
                             u12151 1194                               u12071 1086  
                             u12231 2933                               u12311 1DCB  
                             u10480 1770                               u10560 23C6  
                             u10640 203E                               u10720 250E  
                             u10800 2FB1                               u11280 2186  
                             u11360 18CD                               u11600 2624  
                             u11520 25D2                               u12144 1162  
                             u12080 109E                               u12320 1DD9  
                             u12240 1D3B                               u12400 221D  
                             u13017 0095                               u10481 176F  
                             u10641 203D                               u10721 250D  
                             u10801 2FB0                               u11281 2185  
                             u11361 18CC                               u12145 1161  
                             u12081 109D                               u12321 1DD8  
                             u12241 1D3A                               u12401 221C  
                             u10490 17E5                               u10570 23DA  
                             u10650 204B                               u10730 2ACF  
                             u10810 2FFA                               u11290 218A  
                             u11450 1903                               u11370 18D3  
                             u11530 25DD                               u11610 2632  
                             u12330 1E3B                               u12250 1D48  
                             u12410 2223                               u10491 17E4  
                             u10555 211F                               u10571 23D9  
                             u10651 204A                               u10811 2FF9  
                             u11291 2189                               u11451 1901  
                             u11371 18D2                               u11611 2631  
                             u12331 1E3A                               u12251 1D47  
                             u12411 2222                               u10580 23F2  
                             u10660 2058                               u10740 2AD9  
                             u10820 2C6B                               u10900 2EB8  
                             u11444 18FA                               u11380 18D9  
                             u11540 25EB                               u11700 26AF  
                             u11620 263F                               u12180 1217  
                             u12164 11AA                               u12340 1E87  
                             u12260 1D4D                               u12420 2229  
                             u12500 0BB9                               u10581 23F1  
                             u10661 2057                               u10741 2AD8  
                             u10805 2FAD                               u10821 2C6A  
                             u10901 2EB7                               u11381 18D8  
                             u11541 25EA                               u11701 26AE  
                             u11621 263E                               u12181 1216  
                             u12165 11A9                               u12421 2228  
                             u12501 0BB8                               u10590 2E11  
                             u10670 2065                               u10750 2448  
                             u10830 2C74                               u10910 2EBE  
                             u11470 190D                               u11390 18DF  
                             u11550 25EF                               u11630 2666  
                             u12190 1228                               u12174 11DC  
                             u12094 10C9                               u12270 1D6A  
                             u12350 21A3                               u12430 222E  
                             u12510 0BF7                               u10591 2E10  
                             u10671 2064                               u10751 2447  
                             u10831 2C73                               u10911 2EBD  
                             u11471 190B                               u11391 18DE  
                             u11631 2664                               u12191 1227  
                             u12175 11DB                               u12095 10C8  
                             u12271 1D69                               u12351 21A2  
                             u12511 0BF6                               u10680 24C2  
                             u10760 2457                               u10920 2EC4  
                             u11464 1904                               u11560 25F9  
                             u11640 266D                               u11632 2667  
                             u11720 2A10                               u11800 1430  
                             u12280 1D7E                               u12360 21E7  
                             u12440 223A                               u12600 0D05  
                             u12520 0C0A                               _T2CON 001C  
                             u10681 24C1                               u10761 2456  
                             u10921 2EC3                               u11641 266B  
                             u11721 2A0F                               u11801 142F  
                             u12281 1D7D                               u12361 21E6  
                             u12601 0D04                               u12521 0C09  
                             u12505 0BB5                               u10690 24D7  
                             u10770 246E                               u10850 2D1E  
                             u10930 2ECC                               u11570 260A  
                             u11490 25B5                               u11650 2673  
                             u11642 266E                               u11810 145A  
                             u11730 1260                               u12290 1D9D  
                             u12370 21F7                               u12450 2248  
                             u12610 0D18                               u12530 0C37  
                             u10691 24D6                               u10771 246D  
                             u10755 2444                               u10851 2D1D  
                             u10931 2ECB                               u11491 25B4  
                             u11715 26B3                               u11651 2672  
                             u11811 1459                               u11731 125F  
                             u12291 1D9C                               u12371 21F6  
                             u12611 0D17                               u12531 0C36  
                             u10780 2489                               u10860 2D27  
                             u10940 099C                               u11484 190E  
                             u11580 261A                               u11740 126A  
                             u11900 011B                               u12460 2256  
                             u12380 220E                               u12700 0E56  
                             u12620 0D45                               u12540 0C41  
                             u10781 2488                               u10845 2C96  
                             u10861 2D26                               u10941 099B  
                             u11581 2619                               u11805 142C  
                             u11901 011A                               u12381 220D  
                             u12701 0E55                               u12621 0D44  
                             u12541 0C40                               u10790 2498  
                             u10950 0A28                               u11590 261E  
                             u11670 2694                               u11750 137F  
                             u11830 22E6                               u11910 0141  
                             u12390 2212                               u12710 0E76  
                             u12630 0D8D                               u12550 0C4D  
                             u12470 0B59                               u10791 2497  
                             u10951 0A27                               u11671 2693  
                             u11815 1456                               u11751 137E  
                             u11831 22E5                               u11911 0140  
                             u12711 0E75                               u12631 0D8C  
                             u12551 0C4C                               u12471 0B58  
                             u10880 2E96                               u10960 0A2F  
                             u11680 26A2                               u11760 139B  
                             u11840 2302                               u11920 0150  
                             u12720 0E9F                               u12640 0DA0  
                             u12560 0C5E                               u12480 0B67  
                             u12800 1ED4                               u10881 2E95  
                             u10961 0A2E                               u11681 26A0  
                             u11665 2687                               u11825 149F  
                             u11761 139A                               u11921 014F  
                             u12721 0E9E                               u12641 0D9F  
                             u12561 0C5D                               u12481 0B66  
                             u12801 1ED3                               u10890 2EB2  
                             u10970 0A3B                               u11690 26A9  
                             u11682 26A3                               u11770 13B5  
                             u11850 2306                               u11930 015D  
                             u12730 0EBF                               u12650 0DCD  
                             u12570 0CA1                               u12490 0BAB  
                             u12810 1EDC                               u10875 2D51  
                             u10891 2EB1                               u10971 0A3A  
                             u11691 26A7                               u11771 13B4  
                             u11931 015C                               u12731 0EBE  
                             u12651 0DCC                               u12571 0CA0  
                             u12491 0BAA                               u12811 1EDB  
                             u10980 0A42                               u11692 26AA  
                             u11780 13E5                               u11940 0161  
                             u12740 0F26                               u12660 0DD3  
                             u12580 0CB4                               u12900 1F8D  
                             u12820 1EE9                               u10981 0A41  
                             u11781 13E4                               u11765 1397  
                             u11941 0160                               u12741 0F25  
                             u12661 0DD2                               u12581 0CB3  
                             u12485 0B63                               u12901 1F8C  
                             u12821 1EE8                               u10990 0A46  
                             u11790 1400                               u11870 2333  
                             u11950 0171                               u12670 0DF7  
                             u12590 0CE1                               u12910 1F91  
                             u12830 1F0E                               u12750 1E90  
                             u10991 0A45                               u11791 13FF  
                             u11871 2332                               u11951 0170  
                             u12671 0DF6                               u12591 0CE0  
                             u12911 1F90                               u12831 1F0D  
                             u12751 1E8F                               u11880 2890  
                             u11960 0176                               u12680 0E1A  
                             u12920 1F9B                               u12840 1F42  
                             u12760 1E97                               u11785 13E1  
                             u11865 232F                               u11881 288E  
                             u12681 0E19                               u12921 1F9A  
                             u12841 1F41                               u11970 017C  
                             u12690 0E2D                               u12930 1FEA  
                             u12850 1F56                               u12770 1E9F  
                             u11971 017B                               u12691 0E2C  
                             u12931 1FE9                               u12851 1F55  
                             u12771 1E9E                               u11980 0180  
                             u12860 1F5A                               u12780 1EA7  
                             u12940 276D                               u11981 017F  
                             u12861 1F59                               u12781 1EA6  
                             u12941 276C                               u11894 2891  
                             u11990 0190                               u12870 1F81  
                             u12790 1EB4                               u12950 277C  
                             _IOCBF 0396                               u11991 018F  
                             u12871 1F80                               u12791 1EB3  
                             u12951 277B                               u12880 1F85  
                             u12960 278C                               u12881 1F84  
                             u12961 278B                               u12890 1F89  
                             u12970 2798                               u12891 1F88  
                             u12971 2797                               u12980 27B4  
                             u12981 27B3                               u12990 27C1  
                             _IOCBN 0395                               u12991 27C0  
                             _IOCBP 0394                               _IOCIE 005B  
                             _IOCIF 0058                     __end_of___lwdiv 098C  
                   __end_of___lwmod 2D17                               _RCREG 0199  
                             _TMR1H 0017                               _TMR1L 0016  
                             _SPBRG 019B                               _PORTA 000C  
                             _PORTB 000D                               _PORTC 000E  
                             _PORTD 000F                               _PORTE 0010  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _TRISD 008F  
                             _TRISE 0090                               _TXREG 019A  
             __end_of_catgenie_init 00FF               __end_of_catgenie_work 1256  
               ___lmul@multiplicand 0025                     __end_of_get_Arm 29F3  
                             _drain 04AD                     __end_of_isdigit 28C9  
                   __end_of_set_LED 2DED                               _state 0066  
                             _putch 2B10         timestampdiff@late_longshort 0033  
                             fpbase 0102                     __end_of_set_Arm 2A9E  
    __size_of_romwashprogram_getins 001A                     ??_timestampdiff 0025  
                    __pbitbssCOMMON 0380           __end_of_startbutton_event 3774  
     __end_of_romwashprogram_getins 2912                update_autotimer@mode 003D  
    __size_of_romwashprogram_reqins 000B                     ??_water_filling 0021  
     __end_of_romwashprogram_reqins 283D                               status 0003  
                             wtemp0 007E                     __end_of_strncmp 2E8E  
                 ?_wait_instruction 0072        postponetimeout@tempLongTicks 002B  
                ??_wait_instruction 0037                   water_init@channel 0023  
                      ?_set_LED_Cat 002E                        __end_of_echo 24B4  
           litterlanguage_start@wet 0051                        __end_of_help 3000  
                      __end_of_main 2800            ??_litterlanguage_cleanup 004F  
                   ?_update_display 0072                __end_of_cmdline_init 3758  
             set_LED_Locked@pattern 0031                __end_of_cmdline_work 2A12  
                    ??_gettimestamp 0023                              ??_echo 004A  
                            ??_help 004A                              ??_main 0060  
                   cmdline_work@rxd 005F            ??_litterlanguage_running 0021  
          __size_of_req_instruction 0013            litterlanguage_init@flags 0054  
       litterlanguage_pause@context 0120                              STR_100 093C  
                            STR_101 07D5                              STR_110 092C  
                            STR_102 084B                              STR_103 06F4  
                            STR_111 06E3                              STR_112 0872  
                            STR_104 0799                              STR_113 06D2  
                            STR_105 054C                              STR_106 0942  
                            STR_114 08FC                              STR_107 092C  
                            STR_115 06C1                              STR_108 086C  
                            STR_109 0942           timeoutexpired@currentTime 0031  
                            _EEDATA 0193                              _CCPR1L 0291  
                            _EECON1 0195                              _EECON2 0196  
           __size_of_catsensor_init 000F                              _ANSELA 018C  
                            ?_putch 0072                              _ANSELB 018D  
                            _ANSELD 018F                              _ANSELE 0190  
           __size_of_catsensor_work 008F                              i1l2100 001B  
                            i1l2101 0038                              i1l2102 0031  
                            i1l2103 0041                              i1l2104 004A  
                            i1l2105 004A                              i1l2099 0011  
                            u580_20 003D                              u580_21 003C  
                            u581_20 0046                              u581_21 0045  
        __end_of_userinterface_init 2BC6                              u582_20 2B04  
                            u590_20 1A40                              u582_21 2B03  
                            u590_21 1A3F                              u582_25 2B00  
                            u583_20 294A                              u591_20 1A4F  
                            u583_21 2949                              u591_21 1A4E  
                            u592_20 1A9D                              u576_20 000C  
                            u592_21 1A9C                              u576_21 000B  
                            u584_25 2960                              u592_25 1A99  
                            u585_20 3742                              u593_20 1AA4  
                            u577_20 0016                              u585_21 3741  
                            u593_21 1AA3                              u577_21 0015  
                            u586_20 3747                              u594_20 1AB9  
                            u578_20 001F                              u586_21 3746  
                            u594_21 1AB8                              u578_21 001E  
                            u587_20 19FE                              u579_20 002D  
                            u587_21 19FD                              u579_21 002C  
                            u588_20 1A14                              u588_21 1A13  
                            u589_20 1A3C                              u589_21 1A3B  
                            _TMR1IE 0488                              _TMR1IF 0088  
                            _TMR2IE 0489                              _TMR2IF 0089  
                            _SPBRGH 019C                              _TMR1ON 00C0  
                            _TMR2ON 00E2          __end_of_userinterface_work 1E8C  
      __size_of_litterlanguage_init 007D        __size_of_litterlanguage_stop 0069  
      __size_of_litterlanguage_work 0174                    __end_of_get_Bowl 29D5  
                  __end_of_get_Pump 36FC                __size_of_eeprom_read 0023  
                      ?_serial_init 002F                              _nWPUEN 04AF  
                            ___bmul 2912                              ___lmul 2C2C  
                            ___wmul 2A9E                    __end_of_key_Beep 2AE9  
                            _echoed 0383                           ??___lldiv 0029  
                         ??___lwdiv 0025            heatsensor_event@detected 0022  
                         ??___lwmod 002D                   _setupbutton_event 3758  
                            _pacers 0220                              _memcpy 2B6A  
                            _readch 226F                              _locked 038B  
                            _paused 038D                              _second 014C  
              __end_of_eeprom_write 2C2C                           ??_get_Arm 0021  
                            _printf 14A0                  ?_setupbutton_event 0040  
                            clrloop 371E                              _strlen 2BC6  
                            _uptime 013A                    __end_of_set_Bowl 2A7A  
                            fptable 0100                    __end_of_set_Pump 3800  
                  ??_process_button 003E                              fptotal 0009  
                         ??_isdigit 0021                    __end_of_set_mode 2EE8  
                  ??_water_detected 0021                           ??_set_LED 0022  
                         ??_set_Arm 0021                    __end_of_rtc_init 29B7  
                  __end_of_rtc_work 206C                    ??_timeoutexpired 002B  
               ??_setupbutton_event 0041                           ??_strncmp 0029  
                    water_fill@fill 0022                        _cat_detected 0380  
        __size_of_startbutton_event 000E        romwashprogram_reqins@address 0021  
                      ?_setup_short 0072                     eeprom_read@addr 0024  
               set_LED_Error@repeat 002E                  __size_of_cmd2index 004E  
               ___bmul@multiplicand 0021                          _echo$17766 004A  
                    water_init@mask 0022           __end_of_setupbutton_event 3766  
                    __pcstackCOMMON 0072                        __pidataBANK0 0002  
                      __pidataBANK1 284E                        __pidataBANK2 28E0  
                      __pidataBANK3 28C9                        __pidataBANK4 2C9C  
               _catgenie_work$30516 0048     __size_of_litterlanguage_cleanup 0038  
             __end_of_serial_rx_isr 1ACA                       _isdigit$29805 0021  
             __end_of_serial_tx_isr 1002                       __end_of_putch 2B3D  
                   _postponetimeout 2EE8                  __size_of_get_Dryer 0005  
                      ?_start_short 0072             set_LED_Cartridge@repeat 002E  
             timeoutexpired@timer_p 0029            postponetimeout@longshort 002F  
   __size_of_litterlanguage_running 0007                   eeprom_write@value 0021  
                       set_LED@mask 0025                  __size_of_both_long 0010  
                        _help$30527 004B                             ??_putch 0021  
                        __pbssBANK0 0062                          __pbssBANK1 00C6  
                        __pbssBANK2 0120                          __pbssBANK3 01A0  
          __end_of_update_autotimer 274D                   ??_req_instruction 0025  
          __end_of_heatsensor_event 289D                __end_of_gettimestamp 2D9F  
                        _debouncers 01BF                          _cart_level 006E  
             __size_of_cmdline_init 000E              postponetimeout@timer_p 0021  
             __size_of_cmdline_work 001F                    ??_set_LED_Locked 002F  
                        __pmaintext 274D                             ?___bmul 0021  
                           ?___lmul 0021        timestampdiff@early_longshort 0031  
                           ?___wmul 0021                    ??_interrupt_init 0021  
          userinterface_work@update 005A                          __pintentry 0004  
              __size_of_set_LED_Cat 000F                  __size_of_set_Dryer 0011  
                           _CCP1CON 0293                             ?_memcpy 0021  
                        __ptext3310 1E8C                          __ptext3311 0B3D  
                        __ptext3400 2BF5                          __ptext3320 3758  
                        __ptext3312 2206                          __ptext3401 372A  
                        __ptext3321 2888                          __ptext3313 219D  
                        __ptext3410 2AE9                          __ptext3402 1003  
                        __ptext3330 2530                          __ptext3322 22DB  
                        __ptext3314 1D32                          __ptext3403 3774  
                        __ptext3331 2B98                          __ptext3323 1256  
                        __ptext3315 292C                          __ptext3404 3733  
                        __ptext3340 37B0                          __ptext3332 1ACA  
                        __ptext3324 29F3                          __ptext3316 2A12  
                        __ptext3341 37A1                          __ptext3333 098C  
                        __ptext3325 262E                          __ptext3317 102B  
                           ?_readch 0072                          __ptext3406 1001  
                        __ptext3350 374A                          __ptext3342 3792  
                        __ptext3334 2E8E                          __ptext3326 25AD  
                        __ptext3318 010B                          __ptext3407 19F9  
                        __ptext3351 299A                          __ptext3343 3783  
                        __ptext3335 2D17                          __ptext3327 1878  
                        __ptext3319 3766                          _get_Dosage 36FC  
                        __ptext3408 373E                          __ptext3360 192D  
                        __ptext3352 2DED                          __ptext3344 2AC3  
                        __ptext3336 2C64                          __ptext3328 2134  
                        __ptext3409 2946                          __ptext3361 0053  
                        __ptext3353 23C0                          __ptext3345 2873  
                        __ptext3337 243A                          __ptext3329 1801  
                        __ptext3370 2BC6                          __ptext3362 206C  
                        __ptext3354 37CE                          __ptext3346 26BD  
                        __ptext3338 2FA1                          __ptext3371 226F  
                        __ptext3363 2C2C                          __ptext3355 20CF  
                        __ptext3347 24B4                          __ptext3339 37BF  
                        __ptext3380 1002                          __ptext3372 2B10  
                        __ptext3364 2CD8                          __ptext3356 01ED  
                        __ptext3348 2B3D                          __ptext3381 3706  
                        __ptext3373 2EE8                          __ptext3365 0945  
                        __ptext3357 2860                          __ptext3349 200C  
                        __ptext3390 29D5                          __ptext3382 1BF4  
                        __ptext3374 2D9F                          __ptext3366 2A9E  
                        __ptext3358 234C                          __ptext3391 2A56  
                        __ptext3383 2D57                          __ptext3375 00FF  
                        __ptext3367 2912                          __ptext3359 14A0  
                        __ptext3392 29B7                          __ptext3384 283D  
                        __ptext3376 297E                          __ptext3368 28B3  
                        __ptext3393 3723                          __ptext3385 3701  
                        __ptext3377 2B6A                          __ptext3369 2E3B  
                        __ptext3394 37DE                          __ptext3386 37EF  
                        __ptext3378 28F8                          __ptext3395 2962  
                        __ptext3387 36FC                          __ptext3379 2832  
                        __ptext3396 36F7                          __ptext3388 289D  
                        __ptext3397 3711                          __ptext3389 2A7A  
                        __ptext3398 370B                          __ptext3399 2A33  
                    ___lmul@product 0029                         set_Arm@mode 0022  
    __size_of_litterlanguage_paused 0005        litterlanguage_event@argument 0057  
     __end_of_litterlanguage_paused 370B            __size_of_catsensor_event 00B5  
                           ?_printf 002F                  __size_of_set_pacer 007A  
                           _T1CKPS0 00C4                             _T1CKPS1 00C5  
                           ?_strlen 0021                             _T1OSCEN 00C3  
           catsensor_event@detected 0051                             i1l13062 3749  
                           i1l13063 3749                             i1l13058 2961  
                           i1l13059 2961                             i1l21420 2B0F  
                           i1l21421 2B0D                             i1l21422 2B0D  
                           i1l21423 2B0E                             i1l21424 2B0F  
                           i1l34001 1A4F                             i1l34011 1AA8  
                           i1l34003 1A6A                             i1l34005 1A90  
                           i1l34013 1AAB                             i1l34015 1AB9  
                           i1l34007 1A9E                             i1l34009 1AA5  
                           i1l19310 1A24                             i1l19311 1AAB  
                           i1l19313 1A6A                             i1l19322 1001  
                           i1l19315 1A90                             i1l19316 1A9F  
                           i1l19308 1A10                             i1l19317 1A9F  
                           i1l19309 1AC9                             i1l19318 1AA5  
                           i1l19319 1AC9                             i1l33911 000C  
                           i1l33921 001B                             i1l33913 000D  
                           i1l33931 002D                             i1l33923 001F  
                           i1l33915 0011                             i1l33941 0046  
                           i1l33933 0031                             i1l33925 0026  
                           i1l33917 0016                             i1l33909 0008  
                           i1l33943 2AE9                             i1l33951 294B  
                           i1l33927 0028                             i1l33935 0038  
                           i1l33919 0017                             i1l33945 2B04  
                           i1l33961 295C                             i1l33953 2950  
                           i1l33937 003D                             i1l33929 0029  
                           i1l33955 2952                             i1l33947 2946  
                           i1l33963 373E                             i1l33971 19FE  
                           i1l33939 0041                             i1l33957 2954  
                           i1l33949 294A                             i1l33965 3742  
                           i1l33981 1A0F                             i1l33973 1A09  
                           i1l33959 2957                             i1l33967 3747  
                           i1l33983 1A14                             i1l33991 1A24  
                           i1l33975 1A0B                             i1l33993 1A2F  
                           i1l33985 1A1F                             i1l33977 1A0C  
                           i1l33969 19F9                             i1l33995 1A38  
                           i1l33987 1A21                             i1l33979 1A0D  
                           i1l33997 1A3C                             i1l33989 1A23  
                           i1l33999 1A40                  __size_of_proc_char 0081  
      __end_of_waterdetection_event 234C                  __size_of_proc_line 012A  
                __size_of_timer_isr 0027                   __end_of_cmd2index 2E3B  
                   _error_execution 0385                 settimeout@longshort 003B  
       __end_of_catsensor_isr_input 374A                  __size_of_printtime 002D  
       __end_of_catsensor_isr_timer 2962                             _TMR1CS0 00C6  
                           _TMR1CS1 00C7                         set_Dryer@on 0022  
                         ?_get_Bowl 0072                          _both_short 2873  
                         ?_get_Pump 0072              _litterlanguage_cleanup 2C64  
                    _catsensor_init 3774                        _detected_dbc 0369  
                    _catsensor_work 262E                        _detected_cur 0382  
                      _detected_old 036A                          __stringtab 0200  
            __size_of_set_LED_Error 000F                        _cmdline_init 374A  
     __size_of_litterlanguage_event 0069              catgenie_work@tempstate 004B  
     __size_of_litterlanguage_pause 024A                           ?_key_Beep 0072  
                      _cmdline_work 29F3       __size_of_litterlanguage_start 0040  
          __size_of_get_instruction 0013                    ??_update_display 0032  
                 __end_of_get_Dryer 3706                           ?_set_Bowl 0072  
            _litterlanguage_running 3723                 timestampdiff@late_p 0023  
                           _nT1SYNC 00C2                           ?_set_Pump 0072  
                      cmd2index@cmd 002F                           ?_set_mode 0072  
        __size_of_setupbutton_event 000E     water_work@old_reflectionquality 013E  
             __size_of_eeprom_write 0037            __size_of_exe_instruction 04C3  
                         ?_rtc_init 0072                     __size_of___bmul 001A  
                 __end_of_both_long 37DE             __end_of_postponetimeout 2F43  
                         ?_rtc_work 0072                     __size_of___lmul 0038  
                           ___lldiv 206C                     __size_of___wmul 0025  
                    _cleanupprogram 04EC                             ___lwdiv 0945  
                           ___lwmod 2CD8                __size_of_serial_init 00CC  
                 catgenie_init@mask 0028                   catgenie_init@temp 0029  
                   __size_of_memcpy 002E                     __size_of_readch 006C  
                        _linebuffer 01A0                          _panel_mode 00D9  
                        _error_fill 0386                             _get_Arm 29D5  
                     key_Beep@F3155 01BA                     __size_of_printf 0360  
         __size_of_wait_instruction 007C                             _filling 036B  
               _litterlanguage_init 2530                     __size_of_strlen 002F  
               _litterlanguage_stop 219D                 _litterlanguage_work 1E8C  
                           _dpowers 0201                             _isdigit 28B3  
                      __size_of_isr 004A                             _set_LED 2D9F  
                           _set_Arm 2A7A              __end_of_catsensor_init 3783  
                           _pinging 038E         _litterlanguage_cleanup$5944 004F  
            __end_of_catsensor_work 26BD                          ??_get_Bowl 0021  
                           fp__echo 0105                             fp__help 0103  
                        ??_get_Pump 0021                       key_Beep@beeps 0034  
                 set_LED_Cat@repeat 002E                             _surface 0459  
                           _strncmp 2E3B                end_of_initialization 2F9E  
                        _set_Beeper 3783                   __end_of_set_Dryer 284E  
                        ??_key_Beep 002E                          _set_Dosage 37DE  
                           memcpy@d 0026                             memcpy@n 0022  
                           memcpy@s 0027                             isr@temp 007D  
                      readch@result 0024                             init_ram 3717  
                   _proc_line$30521 0055               __end_of_timestampdiff 1D32  
                      _eeprom_write 2BF5                             initloop 3718  
                 __end_of_set_pacer 243A                ?_litterlanguage_init 0072  
                    set_pacer@pacer 002D               _romwashprogram_getins 28F8  
              ?_litterlanguage_stop 0072                ?_litterlanguage_work 0072  
             __end_of_water_filling 3717           process_button@button_mask 003F  
              __size_of_setup_short 0077               _romwashprogram_reqins 2832  
                   ___lldiv@divisor 0021                   __end_of_proc_char 262E  
                        ??_set_Bowl 0021                   __end_of_proc_line 1BF4  
                 __end_of_timer_isr 2B10                     ___lldiv@counter 002E  
                        ??_set_Pump 0021                          ??_set_mode 0047  
            __size_of_catgenie_init 00AC                   __end_of_printtime 2B6A  
            __size_of_catgenie_work 022B                             printf@c 0042  
                           printf@f 002F                          ??_rtc_init 003D  
                           putch@ch 0022                          ??_rtc_work 0037  
                      __pstringtext 0200                  _userinterface_init 2B98  
                     _set_LED_Error 3792                          _prg_source 00DA  
                        _hysteresis 0064                    _cartridgetimeout 0140  
                _userinterface_work 1D32                   catgenie_work@mask 0049  
              fp__startbutton_event 0109                         ?_get_Dosage 0072  
                 catgenie_work@temp 004C                             strlen@s 0029  
     litterlanguage_pause@timer_now 0051                          _timer_fill 00EA  
                         _PORTB_old 00D4                          _timer_init 3733  
                        _settimeout 20CF                          _water_fill 289D  
                        _setup_long 00FF                          _timeoutnow 297E  
                        _water_init 1003                 ?_userinterface_init 0072  
                        _water_work 010B                 ?_userinterface_work 0072  
                     ?_timeoutnever 0025                     ?_catsensor_init 0072  
                   ?_catsensor_work 0072                   ??_catsensor_event 004F  
             __size_of_gettimestamp 0048                __size_of_start_short 0021  
                       ?_both_short 0072                          _start_long 292C  
              set_LED_Error@pattern 0031               ??_litterlanguage_init 0052  
             ??_litterlanguage_stop 004F               ??_litterlanguage_work 005A  
                     ??_eeprom_read 0021                         printf@width 003F  
              ??_userinterface_init 004A                ??_userinterface_work 0058  
        req_instruction@instruction 0023          get_instruction@instruction 0025  
              _waterdetection_event 22DB                _exe_instruction$6001 00BE  
              _exe_instruction$6013 00C4                _exe_instruction$6005 00C0  
              _exe_instruction$6009 00C2                _exe_instruction$5970 00AE  
              _exe_instruction$5971 00B0                _exe_instruction$5963 00AA  
              _exe_instruction$5980 00B4                _exe_instruction$5964 00AC  
              _exe_instruction$5957 00A6                _exe_instruction$5958 00A8  
              _exe_instruction$5979 00B2                _exe_instruction$5996 00BA  
              _exe_instruction$5988 00B6                _exe_instruction$5997 00BC  
              _exe_instruction$5989 00B8                   ??_get_instruction 0025  
                    ?_set_LED_Error 002E                    ?_postponetimeout 0021  
                    __end_of___bmul 292C                      __end_of___lmul 2C64  
                    __end_of___wmul 2AC3                        _gettimestamp 2D57  
                    __end_of_memcpy 2B98                      __end_of_readch 22DB  
                     __pbitbssBANK0 0368                   ??_exe_instruction 0059  
                       ___resetbits 0020                      __end_of_printf 1800  
                    ??_timeoutnever 0027                     _req_instruction 2860  
                    __end_of_strlen 2BF5                 start_initialization 2F43  
         _waterdetection_event$5930 0050                       _catgenie_init 0053  
          _litterlanguage_work$5881 005C                       _catgenie_work 102B  
                       __end_of_isr 004E                set_LED_Locked@repeat 002E  
                       ___powerdown 0103                         ?_set_Beeper 002E  
                       ?_set_Dosage 0072              ?_romwashprogram_getins 0072  
                 ?_update_autotimer 0072                   _set_LED_Cartridge 37A1  
               __size_of_get_Dosage 0005                   ?_heatsensor_event 0072  
          set_LED_Cartridge@pattern 0031              ?_romwashprogram_reqins 0021  
                ??_update_autotimer 003D                  ?_set_LED_Cartridge 002E  
                ??_heatsensor_event 0021               ?_waterdetection_event 0072  
                 settimeout@timer_p 002D                   _watersensor_event 1002  
                    cmd2index@index 0030        waterdetection_event@detected 0052  
                      set_LED@latch 0024                            ??___bmul 0022  
                          ??___lmul 0029                            ??___wmul 0025  
               __end_of_eeprom_read 2A56                  ?_watersensor_event 0021  
               ??_set_LED_Cartridge 002F                 __size_of_both_short 0015  
                       __pdataBANK0 006E                         __pdataBANK1 00DE  
                       __pdataBANK2 0158                         __pdataBANK3 01BA  
                       __pdataBANK4 0220                            ??_memcpy 0024  
                          ??_readch 0021                            ??_printf 0039  
                       ?_timer_init 0072                    _wait_instruction 24B4  
                          ??_strlen 0023                         ?_settimeout 002D  
               ??_watersensor_event 0023                         ?_water_fill 0072  
                       ?_setup_long 0072                         ?_timeoutnow 0025  
                       ?_water_init 0072                         ?_water_work 0072  
           ?_litterlanguage_cleanup 0072                      ?_catgenie_init 0072  
                    ?_catgenie_work 0072                       __pcstackBANK0 0021  
                     __pcstackBANK1 00A0                fp__setupbutton_event 0107  
                       _cat_present 0381                           _cmd2index 2DED  
                         ___timeout 0104           __end_of_set_LED_Cartridge 37B0  
                 gettimestamp@bytes 0026                   gettimestamp@ticks 0021  
                 __size_of_get_Bowl 001E                         ?_start_long 0072  
                  eeprom_write@addr 0024                   __size_of_get_Pump 0005  
            __size_of_serial_rx_isr 00D1              __size_of_serial_tx_isr 0001  
                        set_LED@led 0023             __size_of_process_button 0069  
                         _beep_bits 00DD             ?_litterlanguage_running 0072  
           __size_of_water_detected 0006                   __size_of_key_Beep 0026  
         __end_of_watersensor_event 1003             __size_of_timeoutexpired 0074  
        exe_instruction@ret_address 00D0                           _debouncer 0158  
           postponetimeout@postpone 0023                    ___lwdiv@dividend 0023  
                   ??_set_LED_Error 002F                       ??_set_LED_Cat 002F  
                    _buttonmask_cum 00D5                      _buttonmask_cur 00D6  
                    _buttonmask_evt 00D7                           __pfunctab 0100  
                 __size_of_set_Bowl 0024                   __size_of_set_Pump 0011  
      __end_of_litterlanguage_event 226F                           _get_Dryer 3701  
                          ?___lldiv 0021        __end_of_litterlanguage_pause 14A0  
                          ?___lwdiv 0021             __end_of_req_instruction 2873  
                 __size_of_set_mode 005A                            ?___lwmod 0029  
      __end_of_litterlanguage_start 2D57                   __size_of_rtc_init 001D  
               __size_of_set_Beeper 000F                           _drain_dry 0342  
             _catsensor_event$10731 004F                   __size_of_rtc_work 0060  
                          ?_get_Arm 0072                           _both_long 37CE  
                         __pswtext1 2000                           __pswtext2 2800  
                         __pswtext3 3000                           __pswtext4 281E  
               __size_of_set_Dosage 0011      __end_of_litterlanguage_cleanup 2C9C  
             _litterlanguage_paused 3706                            ?_isdigit 0072  
                        set_Pump@on 0022                            ?_set_LED 0021  
                         _auto_mode 0062                            ?_set_Arm 0072  
                         _autotimer 00DE                      _error_overheat 0388  
                         _hexpowers 020B                    ___lwdiv@quotient 0027  
                         _localecho 006F                          ?_cmd2index 002C  
                          ?_strncmp 0025                           _full_wash 0389  
                    __size_of_putch 002D      __end_of_litterlanguage_running 372A  
                         _ins_state 0065                        set_Bowl@mode 0022  
               startbutton_event@up 0040           _litterlanguage_start$5891 004F  
      __size_of_catsensor_isr_input 000C                      ___wmul@product 0025  
      __size_of_catsensor_isr_timer 001C                        set_Dosage@on 0022  
            ??_waterdetection_event 004F                 __size_of_timer_init 000B  
                       _eeprom_read 2A33                           _set_Dryer 283D  
               __size_of_settimeout 0065                 __size_of_water_fill 0016  
               __size_of_setup_long 0001                __end_of_timeoutnever 297E  
               __size_of_timeoutnow 001C                 __size_of_water_init 0028  
                   _cur_instruction 0068                 __size_of_water_work 00E2  
                     ??_serial_init 0034                           _set_pacer 23C0  
watersensor_event@reflectionquality 0021                           _proc_char 25AD  
                        ?_get_Dryer 0072                           _proc_line 1ACA  
                         _timer_isr 2AE9                           help@index 004D  
                      ??_get_Dosage 0021                     _catsensor_event 1878  
                         _overflows 00CA                       _serial_rx_isr 19F9  
                         _printtime 2B3D                       _serial_tx_isr 1001  
               __end_of_set_LED_Cat 37BF                 __size_of_start_long 001A  
                  ??_catsensor_init 0021                          ?_both_long 0072  
                        _ADCON0bits 009D                          _ADCON1bits 009E  
                  ??_catsensor_work 0052                          water@state 00DC  
                 ___wmul@multiplier 0021                     ??_catgenie_init 0025  
           __size_of_set_LED_Locked 000F                     ??_catgenie_work 0042  
                        printf@_val 0043                          printf@flag 003E  
                         main@flags 0061                          printf@prec 0041  
                       _ledalwayson 036C                      _timer_autodose 0164  
              catgenie120@PORTB_old 00DB             __size_of_interrupt_init 0009  
                      ??_both_short 003D                     key_Beep@pattern 002F  
                process_button@down 003D                   ___lmul@multiplier 0021  
        __size_of_set_LED_Cartridge 000F                       ??_setup_short 004A  
                   _get_instruction 01ED                          putch@dummy 0023  
              timestampdiff@early_p 0021                  __end_of_get_Dosage 3701  
        __size_of_watersensor_event 0001                          ?_set_Dryer 0072  
         litterlanguage_cleanup@wet 0051                    settimeout@timout 002F  
                   _exe_instruction 0B3D                          ?_set_pacer 0029  
               _serial_rx_isr$22355 0079                          ?_proc_char 0072  
                        ?_proc_line 0072                          ?_timer_isr 0072  
                    ?_serial_rx_isr 0072                    ?_req_instruction 0023  
                    ?_serial_tx_isr 0072                    __size_of___lldiv 0063  
                __end_of_both_short 2888                    __size_of___lwdiv 0047  
                        ?_printtime 0072                    __size_of___lwmod 003F  
               __end_of_serial_init 19F9             __size_of_update_display 01B1  
                       _holdtimeout 015E              ?_litterlanguage_paused 0072  
                  gettimestamp@temp 0028                    __size_of_get_Arm 001E  
                       _ins_address 00CE              __size_of_timestampdiff 013E  
                  set_pacer@pattern 0029                       ??_start_short 0057  
                         set_LED@on 0021              __size_of_water_filling 0006  
                       _currenttime 00C6                    __size_of_isdigit 0016  
                   ___lwdiv@divisor 0021                         _error_drain 0384  
                  __size_of_set_LED 004E                            _cattimer 0146  
                       _error_flood 0387                    __size_of_set_Arm 0024  
                   ___lwdiv@counter 0026                            _detected 0368  
                          _get_Bowl 29B7         __end_of_litterlanguage_init 25AD  
                          _heat_old 038A                            _get_Pump 36F7  
           ??_romwashprogram_getins 0021         __end_of_litterlanguage_stop 2206  
       __end_of_litterlanguage_work 2000                         ??_cmd2index 002E  
                          _commands 0510                        ??_set_Beeper 002F  
               exe_instruction@temp 00A4             ??_romwashprogram_reqins 0023  
              _litterlanguage_event 2206                         _ins_pointer 006B  
              _litterlanguage_pause 1256                            _key_Beep 2AC3  
                  __size_of_strncmp 0053                        ??_set_Dosage 0021  
                    _process_button 2134                   timestampdiff@diff 002D  
              _litterlanguage_start 2D17                            echo@argc 0047  
                          echo@argv 0049                      _water_detected 370B  
                     __size_of_echo 007A                       __size_of_help 005F  
                     __size_of_main 00B3            __end_of_wait_instruction 2530  
                          _error_nr 0063                      _timeoutexpired 234C  
                        strncmp@len 0027                            _interval 00D8  
       __size_of_userinterface_init 002E         __size_of_userinterface_work 015A  
                          _set_Bowl 2A56                            clear_ram 371D  
           __end_of_catsensor_event 192D                            _set_Pump 37EF  
                          _pingtime 01B4                 __end_of_setup_short 1878  
                          _set_mode 2E8E                         _set_LED_Cat 37B0  
                          help@argc 0047                            help@argv 0049  
                          _rtc_init 299A                            _rtc_work 200C  
                       ??_get_Dryer 0021                        set_mode@mode 0049  
                set_LED_Cat@pattern 0031           __size_of_update_autotimer 0090  
         __size_of_heatsensor_event 0015                        ??_timer_init 0021  
                       ??_both_long 0025                         _longhandled 038C  
                __end_of_set_Beeper 3792                        ??_settimeout 0033  
                      ??_water_fill 0021                  __end_of_set_Dosage 37EF  
                      ??_setup_long 0021                        ??_timeoutnow 0027  
                      ??_water_init 0021                       _timer_waitins 016A  
                      ??_water_work 0053            __size_of_postponetimeout 005B  
                          memcpy@d1 0025                            memcpy@s1 0021  
           __end_of_get_instruction 0200                            readch@ch 0023  
                          isdigit@c 0022                   _setup_short$10743 004B  
            __end_of_process_button 219D              __end_of_water_detected 3711  
             ?_litterlanguage_event 0057                       ?_cmdline_init 0072  
             ?_litterlanguage_pause 0072                 __end_of_start_short 2A33  
                     ?_cmdline_work 0072                        ??_start_long 0052  
                          intlevel1 0100               ?_litterlanguage_start 0072  
                   set_pacer@repeat 002A              __end_of_timeoutexpired 23C0  
             __size_of_timeoutnever 001C             __end_of_exe_instruction 1000  
                  ___lwmod@dividend 002B                    ___lldiv@dividend 0025  
                     _timestampdiff 1BF4                 catgenie_work@status 004A  
                       ??_set_Dryer 0021           litterlanguage_event@event 0058  
                __end_of_timer_init 373E                           strncmp@s1 002B  
                         strncmp@s2 0025                       _water_filling 3711  
                __end_of_settimeout 2134                  __end_of_water_fill 28B3  
                __end_of_setup_long 0100                  __end_of_timeoutnow 299A  
                       ??_set_pacer 002B                  __end_of_water_init 102B  
                __end_of_water_work 01ED                         _serial_init 192D  
                   ??_serial_rx_isr 0072                     ??_serial_tx_isr 0072  
                          printf@ap 003D                         ??_proc_char 005D  
                       ??_proc_line 004F                         ??_timer_isr 0072  
                       ??_printtime 0047                 _catsensor_isr_input 373E  
                 set_Beeper@pattern 0031             settimeout@tempLongTicks 0037  
                    _set_LED_Locked 37BF                 _catsensor_isr_timer 2946  
                __end_of_start_long 2946                    ___lldiv@quotient 002A  
                   ___lwmod@divisor 0029                            strlen@cp 002A  
                    _interrupt_init 372A                     ___lwmod@counter 002E  
                       _sensortimer 0152                        _timeoutnever 2962  
               setupbutton_event@up 0040                         _timer_drain 00E4  
                    ??_cmdline_init 0047                     ?_process_button 003D  
                    ??_cmdline_work 005F                     ?_water_detected 0072  
                  set_Beeper@repeat 002E                     ?_timeoutexpired 0029  
                       _setup_short 1801                ?_catsensor_isr_input 0072  
                     ?_eeprom_write 0021                ?_catsensor_isr_timer 0072  
                    ?_timestampdiff 0021                        proc_char@rxd 005E  
                      ?_eeprom_read 0072                      ?_water_filling 0072  
                       _washprogram 0213                    ?_catsensor_event 0072  
         litterlanguage_pause@pause 0050  
